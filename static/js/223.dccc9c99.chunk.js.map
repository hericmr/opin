{"version":3,"file":"static/js/223.dccc9c99.chunk.js","mappings":"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","sources":["services/legendasService.js","services/historiaProfessorService.js","utils/openlayers/markerStyles.js","utils/mobileUtils.js","utils/openlayers/interactions.js","utils/mapConfig.js","components/OpenLayers/OpenLayersMarkers.js","utils/openlayers/layerStyles.js","components/OpenLayers/OpenLayersTerrasIndigenas.js","components/OpenLayers/OpenLayersEstadoSP.js","components/OpenLayers/OpenLayersLayers.js","components/map/MapWrapper.jsx","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","utils/slug.js","components/hooks/useDocumentosEscola.js","components/PainelInformacoes/components/InfoSection.js","components/PainelInformacoes/components/EscolaInfo/BasicInfo.js","components/ReusableImageZoom.js","components/PainelInformacoes/components/ImagensdasEscolas.js","components/PainelInformacoes/components/EscolaInfo/HistoriaEscola.js","components/PainelInformacoes/components/BooleanValue.js","components/PainelInformacoes/components/EscolaInfo/Modalidades.js","components/PainelInformacoes/components/EscolaInfo/Infraestrutura.js","components/PainelInformacoes/components/EscolaInfo/GestaoProfessores.js","components/PainelInformacoes/components/EscolaInfo/ProjetosParcerias.js","components/PainelInformacoes/components/ImagemHistoriadoProfessor.js","components/shared/Avatar.js","components/shared/AvatarThemes.js","components/PainelInformacoes/components/FotoProfessor.js","components/PainelInformacoes/components/EscolaInfo/HistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/index.js","components/PainelInformacoes/icons/HandFistIcon.js","components/PainelInformacoes/components/InfoItem.js","components/PainelInformacoes/TerraIndigenaInfo.js","components/ShareButton.js","components/PainelInformacoes/ShareSection.js","components/PainelDescricao.js","components/PainelInformacoes/IntroPanel.js","utils/textFormatting.js","components/PainelHeader.js","components/hooks/usePainelVisibility.js","components/PainelInformacoes/components/PainelContainer.js","components/hooks/usePainelDimensions.js","components/PainelInformacoes/components/DocumentViewer.js","components/PainelInformacoes/components/VideoPlayer.js","components/PainelInformacoes/index.js","components/hooks/useShare.js","components/hooks/useClickOutside.js","components/hooks/useDynamicURL.js","components/MapaEscolasIndigenas.js"],"sourcesContent":["import { supabase } from '../supabaseClient';\n\n/**\n * Serviço para gerenciar legendas de fotos\n */\n\n/**\n * Testar se a tabela legendas_fotos existe e está acessível\n * @returns {Promise<boolean>} True se a tabela existe\n */\nexport const testLegendasTable = async () => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .select('count')\n      .limit(1);\n    \n    if (error) {\n      console.warn('Tabela legendas_fotos não encontrada ou sem permissão:', error.message);\n      return false;\n    }\n    \n    console.log('Tabela legendas_fotos acessível');\n    return true;\n  } catch (error) {\n    console.warn('Erro ao testar tabela legendas_fotos:', error.message);\n    return false;\n  }\n};\n\n/**\n * Buscar legenda por URL da imagem (todos os atributos opcionais)\n * @param {string} imageUrl - URL da imagem\n * @param {number} escolaId - ID da escola\n * @param {Object} options - Opções de busca (todos opcionais)\n * @param {string} options.categoria - Categoria da imagem\n * @param {string} options.tipo_foto - Tipo da foto\n * @param {boolean} options.ativo - Se deve buscar apenas ativas\n * @returns {Promise<Object|null>} Legenda encontrada ou null\n */\nexport const getLegendaByImageUrl = async (imageUrl, escolaId, options = {}) => {\n  try {\n    let query = supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', imageUrl)\n      .eq('escola_id', escolaId);\n\n    // Aplicar filtros opcionais\n    if (options.ativo !== false) { // Por padrão, busca apenas ativas\n      query = query.eq('ativo', true);\n    }\n    \n    if (options.categoria) {\n      query = query.eq('categoria', options.categoria);\n    }\n    \n    if (options.tipo_foto) {\n      query = query.eq('tipo_foto', options.tipo_foto);\n    }\n\n    const { data, error } = await query.order('created_at', { ascending: false });\n\n    if (error) {\n      console.warn('Erro ao buscar legenda:', error.message);\n      return null;\n    }\n\n    // Retorna a primeira legenda encontrada (mais recente)\n    return data && data.length > 0 ? data[0] : null;\n  } catch (error) {\n    console.warn('Erro ao buscar legenda:', error.message);\n    return null;\n  }\n};\n\n/**\n * Buscar legenda por URL da imagem (busca flexível com múltiplas estratégias)\n * @param {string} imageUrl - URL da imagem\n * @param {number} escolaId - ID da escola\n * @param {Object} preferencias - Preferências de busca (todos opcionais)\n * @param {string} preferencias.categoria - Categoria preferida\n * @param {string} preferencias.tipo_foto - Tipo de foto preferido\n * @returns {Promise<Object|null>} Legenda encontrada ou null\n */\nexport const getLegendaByImageUrlFlexivel = async (imageUrl, escolaId, preferencias = {}) => {\n  try {\n    console.log(`🔍 Buscando legenda flexível para: ${imageUrl} (escola: ${escolaId})`);\n    \n    // Estratégia 1: Busca com preferências específicas\n    if (preferencias.categoria || preferencias.tipo_foto) {\n      console.log('  📋 Tentativa 1: Busca com preferências específicas');\n      const legenda = await getLegendaByImageUrl(imageUrl, escolaId, preferencias);\n      if (legenda) {\n        console.log('  ✅ Encontrada com preferências específicas');\n        return legenda;\n      }\n    }\n\n    // Estratégia 2: Busca apenas por URL e escola (sem outros filtros)\n    console.log('  📋 Tentativa 2: Busca apenas por URL e escola');\n    const { data: data2, error: error2 } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', imageUrl)\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('created_at', { ascending: false });\n\n    if (error2) {\n      console.warn('  ❌ Erro na busca por URL e escola:', error2.message);\n    } else if (data2 && data2.length > 0) {\n      console.log('  ✅ Encontrada por URL e escola');\n      return data2[0];\n    }\n\n    // Estratégia 3: Busca incluindo legendas inativas\n    console.log('  📋 Tentativa 3: Busca incluindo legendas inativas');\n    const { data: data3, error: error3 } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', imageUrl)\n      .eq('escola_id', escolaId)\n      .order('created_at', { ascending: false });\n\n    if (error3) {\n      console.warn('  ❌ Erro na busca incluindo inativas:', error3.message);\n    } else if (data3 && data3.length > 0) {\n      console.log('  ✅ Encontrada incluindo legendas inativas');\n      return data3[0];\n    }\n\n    // Estratégia 4: Busca por nome do arquivo (sem caminho completo)\n    const nomeArquivo = imageUrl.split('/').pop();\n    console.log(`  📋 Tentativa 4: Busca por nome do arquivo: ${nomeArquivo}`);\n    const { data: data4, error: error4 } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .ilike('imagem_url', `%${nomeArquivo}`)\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('created_at', { ascending: false });\n\n    if (error4) {\n      console.warn('  ❌ Erro na busca por nome do arquivo:', error4.message);\n    } else if (data4 && data4.length > 0) {\n      console.log('  ✅ Encontrada por nome do arquivo');\n      return data4[0];\n    }\n\n    console.log('  ❌ Nenhuma legenda encontrada com todas as estratégias');\n    return null;\n\n  } catch (error) {\n    console.warn('Erro ao buscar legenda flexível:', error.message);\n    return null;\n  }\n};\n\n/**\n * Buscar legenda por URL da imagem (sem filtro de categoria) - MANTIDA PARA COMPATIBILIDADE\n * @param {string} imageUrl - URL da imagem\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Object|null>} Legenda encontrada ou null\n */\nexport const getLegendaByImageUrlAnyCategory = async (imageUrl, escolaId) => {\n  return getLegendaByImageUrlFlexivel(imageUrl, escolaId);\n};\n\n/**\n * Adicionar nova legenda de foto\n * @param {Object} legendaData - Dados da legenda\n * @returns {Promise<Object>} Legenda criada\n */\nexport const addLegendaFoto = async (legendaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .insert([legendaData])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao adicionar legenda:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar legenda de foto existente\n * @param {number} legendaId - ID da legenda\n * @param {Object} updateData - Dados para atualizar\n * @returns {Promise<Object>} Legenda atualizada\n */\nexport const updateLegendaFoto = async (legendaId, updateData) => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .update(updateData)\n      .eq('id', legendaId)\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao atualizar legenda:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar legenda de foto\n * @param {number} legendaId - ID da legenda\n * @returns {Promise<boolean>} True se deletado com sucesso\n */\nexport const deleteLegendaFoto = async (legendaId) => {\n  try {\n    const { error } = await supabase\n      .from('legendas_fotos')\n      .delete()\n      .eq('id', legendaId);\n\n    if (error) {\n      throw error;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao deletar legenda:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar todas as legendas de uma escola\n * @param {number} escolaId - ID da escola\n * @param {string} categoria - Categoria das imagens (opcional)\n * @returns {Promise<Array>} Lista de legendas\n */\nexport const getLegendasByEscola = async (escolaId, categoria = null) => {\n  try {\n    let query = supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('escola_id', escolaId);\n\n    if (categoria) {\n      query = query.eq('categoria', categoria);\n    }\n\n    const { data, error } = await query.order('created_at', { ascending: false });\n\n    if (error) {\n      throw error;\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Erro ao buscar legendas da escola:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar título personalizado de vídeo por URL\n * @param {string} videoUrl - URL do vídeo\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Object|null>} Título encontrado ou null\n */\nexport const getTituloByVideoUrl = async (videoUrl, escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', videoUrl)\n      .eq('escola_id', escolaId)\n      .eq('categoria', 'video')\n      .single();\n\n    if (error) {\n      // Se não encontrar, retorna null (não é erro)\n      if (error.code === 'PGRST116') {\n        return null;\n      }\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.warn('Erro ao buscar título do vídeo:', error.message);\n    return null;\n  }\n};\n\nexport default {\n  testLegendasTable,\n  getLegendaByImageUrl,\n  getLegendaByImageUrlFlexivel,\n  getLegendaByImageUrlAnyCategory,\n  addLegendaFoto,\n  updateLegendaFoto,\n  deleteLegendaFoto,\n  getLegendasByEscola,\n  getTituloByVideoUrl\n};\n","import { supabase } from '../supabaseClient';\n\n// Configurações para imagens das histórias do professor\nconst HISTORIA_PROFESSOR_CONFIG = {\n  BUCKET_NAME: 'historia-professor-imagens',\n  MAX_FILE_SIZE: 5 * 1024 * 1024, // 5MB\n  ALLOWED_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\n  MAX_IMAGES_PER_HISTORIA: 1,\n  MIN_DIMENSIONS: { width: 200, height: 200 }\n};\n\n/**\n * Valida um arquivo de imagem\n * @param {File} file - Arquivo a ser validado\n * @returns {Object} Resultado da validação\n */\nconst validateImageFile = (file) => {\n  // Verificar tipo MIME\n  if (!HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.includes(file.type)) {\n    return {\n      isValid: false,\n      error: `Tipo de arquivo não suportado. Use apenas: ${HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1].toUpperCase()).join(', ')}`\n    };\n  }\n\n  // Verificar tamanho\n  if (file.size > HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE) {\n    return {\n      isValid: false,\n      error: `Arquivo muito grande. Tamanho máximo: ${HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE / (1024 * 1024)}MB`\n    };\n  }\n\n  // Verificar extensão\n  const extension = file.name.split('.').pop().toLowerCase();\n  const allowedExtensions = HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1]);\n  if (!allowedExtensions.includes(extension)) {\n    return {\n      isValid: false,\n      error: `Extensão não permitida. Use apenas: ${allowedExtensions.join(', ')}`\n    };\n  }\n\n  return { isValid: true };\n};\n\n/**\n * Valida dimensões da imagem (opcional)\n * @param {File} file - Arquivo de imagem\n * @returns {Promise<boolean>} Se as dimensões são válidas\n */\nconst validateImageDimensions = (file) => {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => {\n      const isValid = img.width >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.width &&\n                     img.height >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.height;\n      resolve(isValid);\n    };\n    img.onerror = () => resolve(false);\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n/**\n * Gera nome único para o arquivo\n * @param {File} file - Arquivo\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @returns {string} Nome único do arquivo\n */\nconst generateUniqueFileName = (file, escolaId, historiaId) => {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 8);\n  const extension = file.name.split('.').pop().toLowerCase();\n  return `historia_${historiaId}_${timestamp}_${random}.${extension}`;\n};\n\n/**\n * Buscar todas as histórias do professor de uma escola\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Array>} Lista de histórias\n */\nexport const getHistoriasProfessor = async (escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('ordem', { ascending: true })\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      throw error;\n    }\n\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Adicionar URLs públicas das imagens\n    const historiasComImagens = data.map((historia) => {\n      if (historia.imagem_url) {\n        try {\n          const { data: { publicUrl } } = supabase.storage\n            .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n            .getPublicUrl(historia.imagem_url);\n\n          return { ...historia, imagem_public_url: publicUrl };\n        } catch (err) {\n          return { ...historia, imagem_public_url: null, urlError: err.message };\n        }\n      }\n      return historia;\n    });\n\n    return historiasComImagens;\n\n  } catch (error) {\n    console.error('Erro ao buscar histórias do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Criar nova história do professor\n * @param {Object} historiaData - Dados da história\n * @returns {Promise<Object>} História criada\n */\nexport const createHistoriaProfessor = async (historiaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .insert([{\n        escola_id: historiaData.escola_id,\n        nome_professor: historiaData.nome_professor || null,\n        historia: historiaData.historia,\n        ordem: historiaData.ordem || 1,\n        ativo: historiaData.ativo !== false,\n        foto_rosto: historiaData.foto_rosto || null\n      }])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao criar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar história do professor\n * @param {number} historiaId - ID da história\n * @param {Object} historiaData - Dados atualizados\n * @returns {Promise<Object>} História atualizada\n */\nexport const updateHistoriaProfessor = async (historiaId, historiaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .update({\n        nome_professor: historiaData.nome_professor,\n        historia: historiaData.historia,\n        ordem: historiaData.ordem,\n        ativo: historiaData.ativo,\n        foto_rosto: historiaData.foto_rosto || null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao atualizar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessor = async (historiaId) => {\n  try {\n    // Deletar a história\n    const { error: deleteError } = await supabase\n      .from('historias_professor')\n      .delete()\n      .eq('id', historiaId);\n\n    if (deleteError) {\n      throw deleteError;\n    }\n  } catch (error) {\n    console.error('Erro ao deletar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Upload de imagem para uma história do professor\n * @param {File} file - Arquivo de imagem\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @param {string} descricao - Descrição da imagem\n * @returns {Promise<Object>} Dados da imagem salva\n */\nexport const uploadHistoriaProfessorImage = async (file, escolaId, historiaId, descricao = '') => {\n  try {\n    // Validar arquivo\n    const validation = validateImageFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n\n    // Validar dimensões (opcional)\n    const hasValidDimensions = await validateImageDimensions(file);\n    if (!hasValidDimensions) {\n      console.warn('Imagem com dimensões menores que o recomendado');\n    }\n\n    // Gerar nome único\n    const fileName = generateUniqueFileName(file, escolaId, historiaId);\n    const filePath = `${escolaId}/${fileName}`;\n\n    // Upload ao bucket\n    const { error: uploadError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .upload(filePath, file, {\n        cacheControl: '3600',\n        upsert: false\n      });\n\n    if (uploadError) {\n      throw new Error(`Erro no upload: ${uploadError.message}`);\n    }\n\n    // Obter URL pública\n    const { data: { publicUrl } } = supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .getPublicUrl(filePath);\n\n    // Atualizar a história com a URL da imagem\n    const { data: historia, error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: descricao.trim() || null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (updateError) {\n      // Se falhar ao atualizar, deletar o arquivo\n      await supabase.storage\n        .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n        .remove([filePath]);\n      throw new Error(`Erro ao salvar metadados: ${updateError.message}`);\n    }\n\n    return {\n      id: historia.id,\n      descricao_imagem: historia.descricao_imagem\n    };\n\n  } catch (error) {\n    console.error('Erro no upload da imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar imagem de uma história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessorImage = async (historiaId) => {\n  try {\n    // Buscar a história para obter a URL da imagem\n    const { data: historia, error: fetchError } = await supabase\n      .from('historias_professor')\n      .select('imagem_url')\n      .eq('id', historiaId)\n      .single();\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!historia.imagem_url) {\n      return; // Não há imagem para deletar\n    }\n\n    // Atualizar a história removendo a referência da imagem\n    const { error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId);\n\n    if (updateError) {\n      throw updateError;\n    }\n\n    // Deletar arquivo do storage\n    const { error: storageError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .remove([historia.imagem_url]);\n\n    if (storageError) {\n      console.warn('Erro ao deletar imagem do storage:', storageError);\n    }\n\n  } catch (error) {\n    console.error('Erro ao deletar imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Migrar dados existentes da tabela escolas_completa\n * @returns {Promise<Object>} Resultado da migração\n */\nexport const migrarDadosExistentes = async () => {\n  try {\n    // Buscar escolas com história do professor\n    const { data: escolas, error: fetchError } = await supabase\n      .from('escolas_completa')\n      .select('id, historia_do_prof')\n      .not('historia_do_prof', 'is', null)\n      .neq('historia_do_prof', '');\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!escolas || escolas.length === 0) {\n      return { migradas: 0, mensagem: 'Nenhuma história para migrar' };\n    }\n\n    // Inserir histórias na nova tabela\n    const historiasParaInserir = escolas.map(escola => ({\n      escola_id: escola.id,\n      historia: escola.historia_do_prof,\n      ordem: 1,\n      ativo: true,\n      created_at: new Date().toISOString()\n    }));\n\n    const { data: historiasInseridas, error: insertError } = await supabase\n      .from('historias_professor')\n      .insert(historiasParaInserir)\n      .select();\n\n    if (insertError) {\n      throw insertError;\n    }\n\n    return {\n      migradas: historiasInseridas.length,\n      mensagem: `${historiasInseridas.length} histórias migradas com sucesso`\n    };\n\n  } catch (error) {\n    console.error('Erro na migração de dados:', error);\n    throw error;\n  }\n};\n\n/**\n * Verificar se uma escola tem histórias do professor\n * @param {number} escolaId - ID da escola\n * @returns {Promise<boolean>} Se tem histórias\n */\nexport const escolaTemHistoriasProfessor = async (escolaId) => {\n  try {\n    const { count, error } = await supabase\n      .from('historias_professor')\n      .select('*', { count: 'exact', head: true })\n      .eq('escola_id', escolaId)\n      .eq('ativo', true);\n\n    if (error) {\n      throw error;\n    }\n\n    return (count || 0) > 0;\n\n  } catch (error) {\n    console.error('Erro ao verificar histórias do professor:', error);\n    return false;\n  }\n}; ","import { Style, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\n\n// Caminho para o marcador SVG\nconst MARKER_SVG_PATH = `${process.env.PUBLIC_URL || ''}/map-marker.svg`;\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n/**\n * Cria estilo para marcador individual\n * @param {Object} feature - Feature do OpenLayers\n * @param {boolean} showNames - Se deve mostrar nomes das escolas\n * @returns {Style} Estilo do marcador\n */\nexport const createMarkerStyle = (feature, showNames = false) => {\n  const markerData = feature.get('markerData') || feature.get('schoolData'); // Suporta ambos\n  const isNearbyPair = feature.get('isNearbyPair');\n  \n  if (!markerData) return null;\n\n  const baseColor = isNearbyPair ? MARKER_COLORS.nearbyPair : MARKER_COLORS.individual;\n  const borderColor = isNearbyPair ? '#DC2626' : MARKER_COLORS.individualBorder;\n\n  // Estilo base do marcador (ícone SVG)\n  const markerStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: isNearbyPair ? 1.2 : 1.0,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Se deve mostrar nomes, adicionar texto\n  if (showNames && markerData.titulo) {\n    const textStyle = new Style({\n      text: new Text({\n        text: markerData.titulo,\n        font: '12px Arial',\n        fill: new Fill({\n          color: '#1F2937'\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center'\n      }),\n      geometry: feature.getGeometry()\n    });\n    \n    return [markerStyle, textStyle];\n  }\n\n  return markerStyle;\n};\n\n/**\n * Cria estilo para cluster de marcadores\n * @param {Object} feature - Feature do cluster\n * @param {Function} markerStyleFunction - Função para estilizar marcadores individuais\n * @returns {Style} Estilo do cluster\n */\nexport const createClusterStyle = (feature, markerStyleFunction) => {\n  const features = feature.get('features');\n  \n  if (!features || features.length === 0) {\n    return markerStyleFunction(feature);\n  }\n\n  // Se for apenas um marcador, usar estilo de marcador individual\n  if (features.length === 1) {\n    return markerStyleFunction(features[0]);\n  }\n\n  // Determinar tamanho e cor do cluster baseado na quantidade\n  let clusterSize, clusterColor;\n  const count = features.length;\n\n  if (count <= CLUSTER_SIZES.small.max) {\n    clusterSize = CLUSTER_SIZES.small.size;\n    clusterColor = MARKER_COLORS.cluster.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    clusterSize = CLUSTER_SIZES.medium.size;\n    clusterColor = MARKER_COLORS.cluster.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    clusterSize = CLUSTER_SIZES.large.size;\n    clusterColor = MARKER_COLORS.cluster.large;\n  } else if (count <= CLUSTER_SIZES.xlarge.max) {\n    clusterSize = CLUSTER_SIZES.xlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  } else {\n    clusterSize = CLUSTER_SIZES.xxlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  }\n\n  // Determinar fonte baseada no tamanho\n  let font;\n  if (count <= CLUSTER_SIZES.small.max) {\n    font = CLUSTER_FONTS.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    font = CLUSTER_FONTS.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    font = CLUSTER_FONTS.large;\n  } else {\n    font = CLUSTER_FONTS.xlarge;\n  }\n\n  return new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: Math.max(0.8, clusterSize / 80),\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    text: new Text({\n      text: count.toString(),\n      font: font,\n      fill: new Fill({\n        color: '#FFFFFF'\n      }),\n      stroke: new Stroke({\n        color: '#1F2937',\n        width: 1\n      })\n    })\n  });\n};\n\n/**\n * Cria estilo para marcador com indicador de par próximo\n * @param {Object} feature - Feature do marcador\n * @returns {Style} Estilo do marcador com indicador\n */\nexport const createNearbyPairStyle = (feature) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle || !Array.isArray(baseStyle)) {\n    return baseStyle;\n  }\n\n  // Adicionar indicador de par próximo\n  const indicatorStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 0.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Posicionar indicador no canto superior direito\n  const geometry = feature.getGeometry();\n  const coordinates = geometry.getCoordinates();\n  const offsetX = 0.0001; // Ajustar conforme necessário\n  const offsetY = 0.0001;\n  \n  const indicatorGeometry = new Point([\n    coordinates[0] + offsetX,\n    coordinates[1] + offsetY\n  ]);\n  \n  indicatorStyle.setGeometry(indicatorGeometry);\n  \n  return [...baseStyle, indicatorStyle];\n};\n\n/**\n * Cria estilo para marcador com tooltip\n * @param {Object} feature - Feature do marcador\n * @param {string} tooltipText - Texto do tooltip\n * @returns {Style} Estilo do marcador com tooltip\n */\nexport const createMarkerWithTooltipStyle = (feature, tooltipText) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle) return null;\n\n  // Adicionar tooltip como texto\n  const tooltipStyle = new Style({\n    text: new Text({\n      text: tooltipText,\n      font: '11px Arial',\n      fill: new Fill({\n        color: '#1F2937'\n      }),\n      stroke: new Stroke({\n        color: '#FFFFFF',\n        width: 2\n      }),\n      offsetY: -25,\n      textAlign: 'center',\n      backgroundFill: new Fill({\n        color: 'rgba(255, 255, 255, 0.9)'\n      }),\n      backgroundStroke: new Stroke({\n        color: '#E5E7EB',\n        width: 1\n      }),\n      padding: [4, 8]\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, tooltipStyle] : [baseStyle, tooltipStyle];\n};\n\n/**\n * Aplica estilo de hover ao marcador\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito hover\n */\nexport const applyHoverStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const hoverStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.3,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, hoverStyle] : [baseStyle, hoverStyle];\n};\n\n/**\n * Cria estilo para marcador selecionado\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const selectionStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n","// Utility functions for mobile detection and interaction\n\n/**\n * Detecta se é um dispositivo mobile baseado em múltiplos critérios\n */\nexport const isMobile = () => {\n  // Verificar largura da tela\n  const isMobileWidth = window.innerWidth <= 768;\n  \n  // Verificar se tem capacidades de toque\n  const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  \n  // Verificar se é um dispositivo móvel baseado no user agent\n  const isMobileUserAgent = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  \n  // Verificar orientação (mobile geralmente tem orientação variável)\n  const isMobileOrientation = window.orientation !== undefined;\n  \n  // Retorna true se pelo menos 2 critérios forem verdadeiros\n  const criteria = [isMobileWidth, hasTouch, isMobileUserAgent, isMobileOrientation];\n  const mobileCriteria = criteria.filter(Boolean).length;\n  \n  console.log('[mobileUtils] Critérios de mobile:', {\n    isMobileWidth,\n    hasTouch,\n    isMobileUserAgent,\n    isMobileOrientation,\n    mobileCriteria,\n    userAgent: navigator.userAgent\n  });\n  \n  return mobileCriteria >= 2;\n};\n\n/**\n * Detecta se é mobile em orientação paisagem\n */\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n/**\n * Detecta especificamente se o dispositivo tem capacidades de toque\n */\nexport const hasTouchCapabilities = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n};\n\n/**\n * Detecta se o evento atual é um evento de toque\n */\nexport const isTouchEvent = (event) => {\n  return event.type && event.type.startsWith('touch');\n}; ","import { isMobile, hasTouchCapabilities, isTouchEvent } from '../mobileUtils';\nimport { DragPan, MouseWheelZoom, PinchZoom } from 'ol/interaction';\n\n/**\n * Classe para gerenciar interações e eventos do OpenLayers\n */\nexport class OpenLayersInteractions {\n  constructor(map, options = {}) {\n    this.map = map;\n    this.options = {\n      enableHover: options.enableHover !== false,\n      enableClick: options.enableClick !== false,\n      enableDoubleClick: options.enableDoubleClick !== false,\n      enableTouch: options.enableTouch !== false,\n      hoverDelay: options.hoverDelay || 200,\n      clickDelay: options.clickDelay || 300,\n      ...options\n    };\n\n    this.eventHandlers = new Map();\n    this.hoveredFeature = null;\n    this.clickedFeature = null;\n    this.clickTimeout = null;\n    this.hoverTimeout = null;\n    this.tooltipElement = null;\n    console.log('[OpenLayersInteractions] Interações inicializadas');\n\n    this.initializeInteractions();\n  }\n\n  /**\n   * Verifica se é dispositivo mobile (dinâmico e robusto)\n   */\n  isMobile() {\n    const mobile = isMobile();\n    const hasTouch = hasTouchCapabilities();\n    \n    console.log('[OpenLayersInteractions] Detecção de mobile:', {\n      mobile,\n      hasTouch,\n      windowWidth: window.innerWidth,\n      userAgent: navigator.userAgent\n    });\n    \n    return mobile || hasTouch;\n  }\n\n  /**\n   * Inicializa todas as interações\n   */\n  initializeInteractions() {\n    if (this.options.enableHover) {\n      this.setupHoverInteraction();\n    }\n\n    if (this.options.enableClick) {\n      this.setupClickInteraction();\n    }\n\n    if (this.options.enableDoubleClick) {\n      this.setupDoubleClickInteraction();\n    }\n\n    if (this.options.enableTouch && this.isMobile()) {\n      this.setupTouchInteraction();\n    }\n  }\n\n  /**\n   * Configura interação de hover\n   */\n  setupHoverInteraction() {\n    this.map.on('pointermove', (event) => {\n      this.handlePointerMove(event);\n    });\n\n    this.map.on('pointerleave', () => {\n      this.handlePointerLeave();\n    });\n  }\n\n  /**\n   * Configura interação de clique\n   */\n  setupClickInteraction() {\n    this.map.on('click', (event) => {\n      this.handleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação de duplo clique\n   */\n  setupDoubleClickInteraction() {\n    this.map.on('dblclick', (event) => {\n      this.handleDoubleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação touch para mobile\n   */\n  setupTouchInteraction() {\n    // Em mobile, usar o sistema de clique com tooltip\n    // O handleClick já trata mobile vs desktop\n    console.log('[OpenLayersInteractions] Touch interaction configurada para mobile');\n  }\n\n  /**\n   * Handler para movimento do ponteiro (hover)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handlePointerMove(event) {\n    if (this.isMobile()) return; // Desabilitar hover em mobile\n\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    // Debug: verificar se está detectando features\n    if (feature && !this.hoveredFeature) {\n      console.log('[OpenLayersInteractions] Feature detectado:', {\n        type: feature.get('type'),\n        schoolData: feature.get('schoolData'),\n        terraIndigenaInfo: feature.get('terraIndigenaInfo')\n      });\n    }\n    \n    if (feature !== this.hoveredFeature) {\n      // Limpar hover anterior\n      if (this.hoveredFeature) {\n        this.clearHover();\n      }\n\n      // Aplicar novo hover\n      if (feature) {\n        this.applyHover(feature, event);\n      }\n    }\n  }\n\n  /**\n   * Handler para saída do ponteiro\n   */\n  handlePointerLeave() {\n    this.clearHover();\n  }\n\n  /**\n   * Handler para clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, primeiro clique mostra tooltip, segundo abre painel\n    if (this.isMobile()) {\n      this.handleMobileClick(feature, event);\n      return;\n    }\n\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique no mesmo feature\n      this.handleDoubleClick(event);\n      return;\n    }\n\n    // Primeiro clique\n    this.clickedFeature = feature;\n    \n    // Configurar timeout para resetar o clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      this.clickedFeature = null;\n    }, this.options.clickDelay);\n\n    // Executar handler de clique único\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para duplo clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleDoubleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Limpar timeout de clique único\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n\n    // Resetar feature clicado\n    this.clickedFeature = null;\n\n    // Executar handler de duplo clique\n    this.executeDoubleClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para fim de toque (mobile)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleTouchEnd(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, toque único executa ação de clique\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para clique em mobile (primeiro mostra tooltip, segundo abre painel)\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleMobileClick(feature, event) {\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique: abrir painel\n      console.log('[OpenLayersInteractions] Segundo clique em mobile - abrindo painel');\n      this.forceHideTooltip(); // Esconder tooltip e resetar estado\n      this.executeClickHandler(feature, event); // Abrir painel\n      return;\n    }\n\n    // Primeiro clique: mostrar tooltip\n    console.log('[OpenLayersInteractions] Primeiro clique em mobile - mostrando tooltip');\n    this.clickedFeature = feature;\n    \n    // Mostrar tooltip\n    if (this.options.showTooltip) {\n      this.showTooltip(feature, event);\n    }\n\n    // Configurar timeout para esconder tooltip e resetar clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      console.log('[OpenLayersInteractions] Timeout mobile - escondendo tooltip e resetando');\n      this.forceHideTooltip();\n    }, 3000); // 3 segundos de timeout\n\n    // Executar handler de hover para aplicar estilo visual\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Aplica efeito de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  applyHover(feature, event) {\n    this.hoveredFeature = feature;\n    \n    // Aplicar estilo de hover\n    this.applyHoverStyle(feature);\n    \n    // Mostrar tooltip se configurado (apenas em desktop)\n    if (this.options.showTooltip && !this.isMobile()) {\n      this.showTooltip(feature, event);\n    }\n\n    // Executar handler de hover\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Remove efeito de hover\n   */\n  clearHover() {\n    if (this.hoveredFeature) {\n      // Remover estilo de hover\n      this.clearHoverStyle(this.hoveredFeature);\n      \n      // Em mobile, não esconder tooltip automaticamente\n      // O tooltip é controlado pelo sistema de clique\n      if (!this.isMobile()) {\n        this.hideTooltip();\n      }\n      \n      // Executar handler de hover out\n      this.executeHoverOutHandler(this.hoveredFeature);\n      \n      this.hoveredFeature = null;\n    }\n  }\n\n  /**\n   * Aplica estilo de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  applyHoverStyle(feature) {\n    // Implementar lógica de estilo de hover\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, true);\n    }\n  }\n\n  /**\n   * Remove estilo de hover de um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  clearHoverStyle(feature) {\n    // Implementar lógica de remoção de estilo de hover\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, false);\n    }\n  }\n\n  /**\n   * Mostra tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  showTooltip(feature, event) {\n    if (this.tooltipElement) {\n      this.hideTooltip();\n    }\n\n    const tooltipContent = this.getTooltipContent(feature);\n    console.log('[OpenLayersInteractions] Conteúdo do tooltip:', tooltipContent);\n    \n    if (!tooltipContent) {\n      console.log('[OpenLayersInteractions] Sem conteúdo para tooltip');\n      return;\n    }\n\n    this.tooltipElement = this.createTooltipElement(tooltipContent, event);\n    this.map.getTargetElement().appendChild(this.tooltipElement);\n    console.log('[OpenLayersInteractions] Tooltip criado e adicionado ao DOM');\n  }\n\n  /**\n   * Esconde tooltip\n   */\n  hideTooltip() {\n    if (this.tooltipElement) {\n      this.tooltipElement.remove();\n      this.tooltipElement = null;\n      console.log('[OpenLayersInteractions] Tooltip escondido');\n    }\n  }\n\n  /**\n   * Força limpeza do tooltip (útil para mobile)\n   */\n  forceHideTooltip() {\n    this.hideTooltip();\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n    this.clickedFeature = null;\n    console.log('[OpenLayersInteractions] Tooltip forçadamente escondido e estado resetado');\n  }\n\n  /**\n   * Cria elemento de tooltip\n   * @param {string} content - Conteúdo do tooltip\n   * @param {Object} event - Evento do OpenLayers\n   * @returns {HTMLElement} Elemento do tooltip\n   */\n  createTooltipElement(content, event) {\n    const element = document.createElement('div');\n    element.className = 'ol-tooltip';\n    \n    // Detectar se é terra indígena baseado no conteúdo\n    const isTerraIndigena = content.includes('Terra Indígena');\n    \n    // Em mobile, tornar o nome clicável\n    if (this.isMobile()) {\n      // Criar tooltip clicável para mobile\n      const clickableContent = `<span class=\"tooltip-clickable\">${content}</span>`;\n      element.innerHTML = clickableContent;\n      \n      // Configurar estilos para mobile\n      const tooltipStyles = isTerraIndigena ? {\n        backgroundColor: '#fef2f2', // Fundo vermelho claro\n        borderColor: 'rgba(239, 68, 68, 0.3)' // Borda vermelha\n      } : {\n        backgroundColor: '#bbf7d0', // Fundo verde\n        borderColor: 'rgba(34, 197, 94, 0.3)' // Borda verde\n      };\n      \n      Object.assign(element.style, {\n        position: 'absolute',\n        padding: '8px 12px',\n        borderRadius: '8px',\n        fontSize: '14px',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n        fontWeight: '700',\n        color: '#000000',\n        pointerEvents: 'auto', // IMPORTANTE: Permitir eventos de clique no mobile\n        zIndex: '1000',\n        maxWidth: '250px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n        border: `2px solid ${tooltipStyles.borderColor}`,\n        cursor: 'default',\n        ...tooltipStyles\n      });\n      \n      // Configurar o span clicável\n      const clickableSpan = element.querySelector('.tooltip-clickable');\n      if (clickableSpan) {\n        Object.assign(clickableSpan.style, {\n          cursor: 'pointer',\n          textDecoration: 'underline',\n          textDecorationColor: '#3B82F6',\n          textDecorationThickness: '2px',\n          transition: 'all 0.2s ease',\n          display: 'inline-block',\n          padding: '2px 4px',\n          borderRadius: '4px',\n          fontWeight: '800'\n        });\n        \n        // Adicionar evento de clique para abrir o painel\n        clickableSpan.addEventListener('click', () => {\n          console.log('[OpenLayersInteractions] Nome clicado no tooltip mobile');\n          // Emitir evento para abrir o painel\n          const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n          if (feature) {\n            this.executeClickHandler(feature, event);\n          }\n        });\n        \n        // Adicionar efeitos de hover\n        clickableSpan.addEventListener('mouseenter', () => {\n          clickableSpan.style.backgroundColor = 'rgba(59, 130, 246, 0.1)';\n          clickableSpan.style.textDecorationColor = '#1D4ED8';\n          clickableSpan.style.transform = 'scale(1.05)';\n        });\n        \n        clickableSpan.addEventListener('mouseleave', () => {\n          clickableSpan.style.backgroundColor = 'transparent';\n          clickableSpan.style.textDecorationColor = '#3B82F6';\n          clickableSpan.style.transform = 'scale(1)';\n        });\n      }\n    } else {\n      // Desktop: tooltip normal (não clicável)\n      element.innerHTML = content;\n      \n      // Estilos do tooltip para desktop\n      const tooltipStyles = isTerraIndigena ? {\n        backgroundColor: '#fef2f2' // Fundo vermelho claro\n      } : {\n        backgroundColor: '#bbf7d0' // Fundo verde\n      };\n      \n      Object.assign(element.style, {\n        position: 'absolute',\n        padding: '6px 10px',\n        borderRadius: '6px',\n        fontSize: '12px',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n        fontWeight: '700',\n        color: '#000000',\n        pointerEvents: 'none',\n        zIndex: '1000',\n        maxWidth: '200px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        ...tooltipStyles\n      });\n    }\n\n    // Posicionar tooltip\n    const coordinate = event.coordinate;\n    const pixel = this.map.getPixelFromCoordinate(coordinate);\n    \n    element.style.left = (pixel[0] + 10) + 'px';\n    element.style.top = (pixel[1] - 10) + 'px';\n\n    return element;\n  }\n\n  /**\n   * Obtém conteúdo do tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @returns {string} Conteúdo do tooltip\n   */\n  getTooltipContent(feature) {\n    console.log('[OpenLayersInteractions] Obtendo conteúdo do tooltip para feature:', {\n      type: feature.get('type'),\n      schoolData: feature.get('schoolData'),\n      terraIndigenaInfo: feature.get('terraIndigenaInfo')\n    });\n\n    // Implementar lógica para obter conteúdo do tooltip\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.tooltipContentFunction) {\n      const content = this.options.tooltipContentFunction(feature);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (função customizada):', content);\n      return content;\n    }\n\n    // Conteúdo padrão baseado no tipo de feature\n    const schoolData = feature.get('schoolData');\n    if (schoolData) {\n      // FORÇAR apenas o título da escola, SEM município ou outras informações\n      const titulo = schoolData.titulo || 'Escola Indígena';\n      console.log('[OpenLayersInteractions] Título extraído (padrão):', titulo);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão escola - FORÇADO apenas título):', titulo);\n      return titulo; // Retorna APENAS o título\n    }\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (terraIndigenaInfo) {\n      const content = `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão terra indígena):', content);\n      return content;\n    }\n\n    console.log('[OpenLayersInteractions] Nenhum conteúdo encontrado para tooltip');\n    return null;\n  }\n\n  /**\n   * Executa handler de clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('click');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de duplo clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeDoubleClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('doubleClick');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover\n   * @param {Object} feature - Feature em hover\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeHoverHandler(feature, event) {\n    const handler = this.eventHandlers.get('hover');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover out\n   * @param {Object} feature - Feature que saiu do hover\n   */\n  executeHoverOutHandler(feature) {\n    const handler = this.eventHandlers.get('hoverOut');\n    if (handler && typeof handler === 'function') {\n      handler(feature);\n    }\n  }\n\n  /**\n   * Registra handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   * @param {Function} handler - Função handler\n   */\n  on(eventType, handler) {\n    this.eventHandlers.set(eventType, handler);\n  }\n\n  /**\n   * Remove handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   */\n  off(eventType) {\n    this.eventHandlers.delete(eventType);\n  }\n\n  /**\n   * Remove todos os handlers\n   */\n  clearHandlers() {\n    this.eventHandlers.clear();\n  }\n\n  /**\n   * Atualiza opções de interação\n   * @param {Object} newOptions - Novas opções\n   */\n  updateOptions(newOptions) {\n    this.options = { ...this.options, ...newOptions };\n    \n    // Reconfigurar interações se necessário\n    if (newOptions.enableHover !== undefined) {\n      // Implementar lógica para habilitar/desabilitar hover\n    }\n    \n    if (newOptions.enableClick !== undefined) {\n      // Implementar lógica para habilitar/desabilitar clique\n    }\n  }\n\n  /**\n   * Limpa todas as interações e handlers\n   */\n  destroy() {\n    // Limpar timeouts\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    if (this.hoverTimeout) {\n      clearTimeout(this.hoverTimeout);\n    }\n\n    // Esconder tooltip\n    this.hideTooltip();\n\n    // Limpar hover\n    this.clearHover();\n\n    // Limpar handlers\n    this.clearHandlers();\n\n    // Remover event listeners do mapa\n    // Nota: OpenLayers não tem método un() para remover listeners específicos\n    // Seria necessário recriar o mapa ou implementar controle manual\n  }\n}\n\n/**\n * Função utilitária para criar interações padrão\n * @param {Object} map - Mapa OpenLayers\n * @param {Object} options - Opções de configuração\n * @returns {OpenLayersInteractions} Instância de interações\n */\nexport function createDefaultInteractions(map, options = {}) {\n  const defaultOptions = {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    showTooltip: true,\n    hoverDelay: 200,\n    clickDelay: 300\n  };\n\n  return new OpenLayersInteractions(map, { ...defaultOptions, ...options });\n}\n\n/**\n * Função utilitária para configurar interações específicas para marcadores\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onMarkerClick - Handler para clique em marcador (opcional)\n * @param {Function} onMarkerHover - Handler para hover em marcador\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createMarkerInteractions(map, onMarkerClick, onMarkerHover) {\n  console.log('[createMarkerInteractions] Criando interações para marcadores...');\n  \n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      console.log('[createMarkerInteractions] Função de conteúdo do tooltip chamada para:', feature);\n      const schoolData = feature.get('schoolData');\n      if (schoolData) {\n        // FORÇAR apenas o título da escola, SEM município\n        const titulo = schoolData.titulo || 'Escola Indígena';\n        console.log('[createMarkerInteractions] Título extraído:', titulo);\n        console.log('[createMarkerInteractions] Conteúdo do tooltip gerado (FORÇADO apenas título):', titulo);\n        return titulo; // Retorna APENAS o título\n      }\n      console.log('[createMarkerInteractions] Sem dados de escola para tooltip');\n      return null;\n    }\n  });\n\n  // Configurar handler de clique se fornecido\n  if (onMarkerClick) {\n    console.log('[createMarkerInteractions] Configurando handler de clique personalizado');\n    interactions.on('click', onMarkerClick);\n  }\n\n  if (onMarkerHover) {\n    interactions.on('hover', onMarkerHover);\n  }\n\n  console.log('[createMarkerInteractions] Interações criadas com sucesso');\n  return interactions;\n}\n\n/**\n * Função utilitária para configurar interações específicas para camadas GeoJSON\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onFeatureClick - Handler para clique em feature\n * @param {Function} onFeatureHover - Handler para hover em feature\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createGeoJSONInteractions(map, onFeatureClick, onFeatureHover) {\n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n      if (terraIndigenaInfo) {\n        return `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      }\n      return null;\n    }\n  });\n\n  if (onFeatureClick) {\n    interactions.on('click', onFeatureClick);\n  }\n\n  if (onFeatureHover) {\n    interactions.on('hover', onFeatureHover);\n  }\n\n  return interactions;\n}\n","// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização - Ajustadas para mostrar mais marcadores individuais\n  clusterDistance: 15, // Reduzido para mostrar mais marcadores individuais\n  clusterMinDistance: 3, // Reduzido para permitir marcadores mais próximos\n  clusterAnimationDuration: 300,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10,\n  tooltipDelay: 200,\n  \n  // Configurações de interação\n  interaction: {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    clickDelay: 300,\n    hoverDelay: 200\n  },\n  \n  // Configurações de performance\n  performance: {\n    enableLazyLoading: true,\n    maxFeaturesPerTile: 1000,\n    enableFeatureCulling: true,\n    enableTileCaching: true\n  },\n\n  // Configurações de animação\n  ANIMATION_CONFIG: {\n    duration: {\n      marker: 300,\n      cluster: 500,\n      zoom: 800,\n      pan: 600\n    },\n    easing: {\n      marker: 'ease-out',\n      cluster: 'ease-in-out',\n      zoom: 'ease-out',\n      pan: 'ease-out'\n    }\n  }\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B',\n  selected: '#10B981',\n  hover: '#F59E0B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857',\n  // Projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\n  sirgas2000: 'EPSG:4674'\n};\n\n// Configurações de camadas base\nexport const BASE_LAYER_CONFIG = {\n  satellite: {\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n    maxZoom: 19,\n    wrapX: false,\n    tilePixelRatio: 1,\n    tileSize: 256\n  },\n  osm: {\n    url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    maxZoom: 19\n  },\n  terrain: {\n    url: 'https://{a-d}.tile.opentopomap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://opentopomap.org/\">OpenTopoMap</a> contributors',\n    maxZoom: 17\n  }\n};\n\n// Configurações de estilos para diferentes tipos de marcadores\nexport const MARKER_STYLE_CONFIG = {\n  escola: {\n    default: {\n      radius: 6,\n      fillColor: MARKER_COLORS.individual,\n      strokeColor: MARKER_COLORS.individualBorder,\n      strokeWidth: 2\n    },\n    hover: {\n      radius: 8,\n      fillColor: MARKER_COLORS.hover,\n      strokeColor: '#D97706',\n      strokeWidth: 3\n    },\n    selected: {\n      radius: 10,\n      fillColor: MARKER_COLORS.selected,\n      strokeColor: '#059669',\n      strokeWidth: 3,\n      lineDash: [5, 5]\n    },\n    nearbyPair: {\n      radius: 8,\n      fillColor: MARKER_COLORS.nearbyPair,\n      strokeColor: '#DC2626',\n      strokeWidth: 2\n    }\n  },\n  cluster: {\n    small: {\n      radius: CLUSTER_SIZES.small.size / 2,\n      fillColor: MARKER_COLORS.cluster.small,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    medium: {\n      radius: CLUSTER_SIZES.medium.size / 2,\n      fillColor: MARKER_COLORS.cluster.medium,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    large: {\n      radius: CLUSTER_SIZES.large.size / 2,\n      fillColor: MARKER_COLORS.cluster.large,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    xlarge: {\n      radius: CLUSTER_SIZES.xlarge.size / 2,\n      fillColor: MARKER_COLORS.cluster.xlarge,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    }\n  }\n};\n\n// Configurações de animações\nexport const ANIMATION_CONFIG = {\n  duration: {\n    marker: 300,\n    cluster: 500,\n    zoom: 800,\n    pan: 600\n  },\n  easing: {\n    marker: 'ease-out',\n    cluster: 'ease-in-out',\n    zoom: 'ease-out',\n    pan: 'ease-out'\n  }\n};\n\n// Configurações de responsividade\nexport const RESPONSIVE_CONFIG = {\n  breakpoints: {\n    mobile: 768,\n    tablet: 1024,\n    desktop: 1200\n  },\n  mobile: {\n    clusterDistance: 12, // Reduzido para mobile\n    tooltipOffset: 8,\n    markerRadius: 5\n  },\n  tablet: {\n    clusterDistance: 15, // Reduzido para tablet\n    tooltipOffset: 10,\n    markerRadius: 6\n  },\n  desktop: {\n    clusterDistance: 15, // Reduzido para desktop\n    tooltipOffset: 10,\n    markerRadius: 6\n  }\n};\n\n// Configurações de cache\nexport const CACHE_CONFIG = {\n  markers: {\n    maxSize: 1000,\n    ttl: 300000, // 5 minutos\n    enableCompression: true\n  },\n  tiles: {\n    maxSize: 100,\n    ttl: 600000, // 10 minutos\n    enableCompression: true\n  },\n  geojson: {\n    maxSize: 50,\n    ttl: 1800000, // 30 minutos\n    enableCompression: true\n  }\n};\n\n// Configurações de debug\nexport const DEBUG_CONFIG = {\n  enableLogging: process.env.NODE_ENV === 'development',\n  enablePerformanceMonitoring: process.env.NODE_ENV === 'development',\n  enableFeatureCount: process.env.NODE_ENV === 'development',\n  logLevel: process.env.NODE_ENV === 'development' ? 'debug' : 'error'\n}; ","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport { \n  createMarkerStyle, \n  applyHoverStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/markerStyles';\nimport { createMarkerInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersMarkers - Substitui completamente o Marcadores.js do Leaflet\n * IMPLEMENTAÇÃO SIMPLIFICADA: Mostra todos os marcadores individuais sem clustering\n */\nconst OpenLayersMarkers = ({ \n  dataPoints = [], \n  onPainelOpen,\n  showMarcadores = true,\n  showNomesEscolas = false,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas e fontes\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredMarker, setHoveredMarker] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de marcadores (SEM clustering)\n   */\n  const initializeMarkers = useCallback(() => {\n    if (!map) return;\n\n    console.log('[OpenLayersMarkers] Inicializando marcadores individuais...');\n\n    // Criar fonte vetorial para marcadores\n    vectorSourceRef.current = new VectorSource();\n    \n    // Criar camada vetorial para marcadores INDIVIDUAIS (sem clustering)\n    vectorLayerRef.current = new VectorLayer({\n      source: vectorSourceRef.current,\n      style: (feature) => createMarkerStyle(feature, showNomesEscolas),\n      zIndex: 100\n    });\n\n    // Adicionar camada ao mapa\n    map.addLayer(vectorLayerRef.current);\n\n    // Configurar interações\n    setupInteractions();\n\n  }, [map, showNomesEscolas]);\n\n  /**\n   * Configura as interações dos marcadores\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    console.log('[OpenLayersMarkers] Configurando interações com tooltips...');\n\n    // Criar interações específicas para marcadores com tooltips\n    const interactions = createMarkerInteractions(\n      map,\n      handleMarkerClick,\n      handleMarkerHover\n    );\n\n    // Configurar handlers específicos\n    interactions.on('click', handleMarkerClick);\n    interactions.on('hover', handleMarkerHover);\n    interactions.on('hoverOut', handleMarkerHoverOut);\n\n    // IMPORTANTE: Integrar as interações com o mapa para que os tooltips funcionem\n    // O sistema de interações do OpenLayers precisa estar ativo para detectar hover\n    console.log('[OpenLayersMarkers] Interações configuradas e integradas com o mapa');\n\n  }, [map]);\n\n  /**\n   * Handler para clique em marcador\n   */\n  const handleMarkerClick = useCallback((feature, event) => {\n    // Usar schoolData em vez de markerData para consistência com o sistema de interações\n    const schoolData = feature.get('schoolData');\n    if (schoolData && onPainelOpen) {\n      console.log('[OpenLayersMarkers] Marcador clicado:', schoolData.titulo);\n      onPainelOpen(schoolData);\n    }\n  }, [onPainelOpen]);\n\n  /**\n   * Handler para hover em marcador\n   */\n  const handleMarkerHover = useCallback((feature, event) => {\n    // IMPORTANTE: Não desabilitar hover em mobile\n    // O sistema de interações precisa do hover para funcionar corretamente\n    // O hover é usado para mostrar tooltips e aplicar estilos visuais\n    \n    setHoveredMarker(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return applyHoverStyle(f, createMarkerStyle(f, showNomesEscolas));\n        }\n        return createMarkerStyle(f, showNomesEscolas);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [showNomesEscolas]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleMarkerHoverOut = useCallback(() => {\n    setHoveredMarker(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createMarkerStyle(f, showNomesEscolas));\n      vectorLayerRef.current.changed();\n    }\n  }, [showNomesEscolas]);\n\n  /**\n   * Atualiza marcadores quando dataPoints mudar\n   */\n  const updateMarkers = useCallback(() => {\n    if (!vectorSourceRef.current || !dataPoints) return;\n\n    console.log('[OpenLayersMarkers] Atualizando marcadores...', dataPoints.length, 'showMarcadores:', showMarcadores);\n\n    // Limpar marcadores existentes\n    vectorSourceRef.current.clear();\n    \n    // Se showMarcadores for false, não adicionar marcadores\n    if (!showMarcadores) {\n      console.log('[OpenLayersMarkers] Marcadores desabilitados, removendo todos');\n      return;\n    }\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    console.log('[OpenLayersMarkers] Pontos válidos:', pontosValidos.length);\n\n    // Adicionar novos marcadores INDIVIDUAIS\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        \n        feature.set('markerData', point);\n        feature.set('schoolData', point); // Dados para tooltips\n        feature.set('markerId', `marker_${index}`);\n        feature.set('type', 'marker');\n        \n        // Debug: verificar dados do tooltip\n        console.log(`[OpenLayersMarkers] Marcador ${index}:`, {\n          titulo: point.titulo,\n          municipio: point.municipio || point.Municipio,\n          uf: point.uf || point.UF\n        });\n        \n        vectorSourceRef.current.addFeature(feature);\n      }\n    });\n\n    console.log(`[OpenLayersMarkers] ${pontosValidos.length} marcadores individuais adicionados`);\n\n  }, [dataPoints, showMarcadores]);\n\n  /**\n   * Atualiza estilo dos marcadores quando showNomesEscolas mudar\n   */\n  const updateMarkerStyles = useCallback(() => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((feature) => createMarkerStyle(feature, showNomesEscolas));\n    vectorLayerRef.current.changed();\n  }, [showNomesEscolas]);\n\n  // Inicializar marcadores quando componente montar\n  useEffect(() => {\n    if (map) {\n      initializeMarkers();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, initializeMarkers]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    updateMarkers();\n  }, [updateMarkers]);\n\n  // Atualizar estilos quando showNomesEscolas mudar\n  useEffect(() => {\n    updateMarkerStyles();\n  }, [updateMarkerStyles]);\n\n  // Sempre renderizar o componente para manter a camada ativa\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia as camadas do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersMarkers;\n","import { Style, Fill, Stroke, Text } from 'ol/style';\n\n// Configurações de cores para camadas GeoJSON\nexport const LAYER_COLORS = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n/**\n * Cria estilo para terras indígenas baseado no status\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo da terra indígena\n */\nexport const createTerrasIndigenasStyle = (feature, isHovered = false) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.fill\n      }),\n      stroke: new Stroke({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.stroke,\n        width: 2\n      })\n    });\n  }\n\n  const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n  const colorConfig = isRegularizada \n    ? LAYER_COLORS.terrasIndigenas.regularizada \n    : LAYER_COLORS.terrasIndigenas.declarada;\n\n  const colors = isHovered ? colorConfig.hover : colorConfig;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 3 : 2,\n      lineDash: isHovered ? [] : [3, 3]\n    })\n  });\n};\n\n/**\n * Cria estilo para estado de São Paulo\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo do estado\n */\nexport const createEstadoSPStyle = (feature, isHovered = false) => {\n  const colors = isHovered ? LAYER_COLORS.estadoSP.hover : LAYER_COLORS.estadoSP;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 2 : 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com label\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} labelProperty - Propriedade para usar como label\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com label\n */\nexport const createLabeledFeatureStyle = (feature, labelProperty, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    labelColor = '#000000',\n    labelSize = '12px',\n    labelFont = 'Arial'\n  } = styleOptions;\n\n  const labelText = feature.properties?.[labelProperty] || '';\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar label se houver texto\n  if (labelText) {\n    styles.push(new Style({\n      text: new Text({\n        text: labelText,\n        font: `${labelSize} ${labelFont}`,\n        fill: new Fill({\n          color: labelColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: 0,\n        textAlign: 'center'\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature com tooltip\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} tooltipText - Texto do tooltip\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com tooltip\n */\nexport const createFeatureWithTooltipStyle = (feature, tooltipText, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    tooltipColor = '#1F2937',\n    tooltipBackground = 'rgba(255, 255, 255, 0.95)',\n    tooltipBorder = '#E5E7EB'\n  } = styleOptions;\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar tooltip como texto\n  if (tooltipText) {\n    styles.push(new Style({\n      text: new Text({\n        text: tooltipText,\n        font: '11px Arial',\n        fill: new Fill({\n          color: tooltipColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center',\n        backgroundFill: new Fill({\n          color: tooltipBackground\n        }),\n        backgroundStroke: new Stroke({\n          color: tooltipBorder,\n          width: 1\n        }),\n        padding: [4, 8]\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature selecionada\n * @param {Object} feature - Feature do GeoJSON\n * @param {Style} baseStyle - Estilo base\n * @param {Object} selectionOptions - Opções de seleção\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle, selectionOptions = {}) => {\n  const {\n    fillColor = 'rgba(59, 130, 246, 0.3)',\n    strokeColor = '#1E40AF',\n    strokeWidth = 3,\n    lineDash = [5, 5]\n  } = selectionOptions;\n\n  const selectionStyle = new Style({\n    fill: new Fill({\n      color: fillColor\n    }),\n    stroke: new Stroke({\n      color: strokeColor,\n      width: strokeWidth,\n      lineDash: lineDash\n    })\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n\n/**\n * Cria estilo para feature com indicador de status\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} statusProperty - Propriedade que indica o status\n * @param {Object} statusConfig - Configuração dos status\n * @returns {Style} Estilo com indicador de status\n */\nexport const createStatusFeatureStyle = (feature, statusProperty, statusConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: '#000000',\n        width: 1\n      })\n    });\n  }\n\n  const status = feature.properties[statusProperty];\n  const config = statusConfig[status] || statusConfig.default || {\n    fill: 'rgba(0, 0, 0, 0.1)',\n    stroke: '#000000'\n  };\n\n  return new Style({\n    fill: new Fill({\n      color: config.fill\n    }),\n    stroke: new Stroke({\n      color: config.stroke,\n      width: config.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com gradiente baseado em valor numérico\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} valueProperty - Propriedade com valor numérico\n * @param {Object} gradientConfig - Configuração do gradiente\n * @returns {Style} Estilo com gradiente\n */\nexport const createGradientFeatureStyle = (feature, valueProperty, gradientConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: gradientConfig.defaultColor || 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: gradientConfig.strokeColor || '#000000',\n        width: gradientConfig.strokeWidth || 1\n      })\n    });\n  }\n\n  const value = parseFloat(feature.properties[valueProperty]) || 0;\n  const { min, max, colors } = gradientConfig;\n\n  // Calcular cor baseada no valor\n  let color;\n  if (value <= min) {\n    color = colors.min;\n  } else if (value >= max) {\n    color = colors.max;\n  } else {\n    // Interpolação linear entre cores\n    const ratio = (value - min) / (max - min);\n    color = interpolateColor(colors.min, colors.max, ratio);\n  }\n\n  return new Style({\n    fill: new Fill({\n      color: color\n    }),\n    stroke: new Stroke({\n      color: gradientConfig.strokeColor || '#000000',\n      width: gradientConfig.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Interpola entre duas cores\n * @param {string} color1 - Primeira cor (hex)\n * @param {string} color2 - Segunda cor (hex)\n * @param {number} ratio - Razão de interpolação (0-1)\n * @returns {string} Cor interpolada\n */\nfunction interpolateColor(color1, color2, ratio) {\n  const hex1 = color1.replace('#', '');\n  const hex2 = color2.replace('#', '');\n  \n  const r1 = parseInt(hex1.substr(0, 2), 16);\n  const g1 = parseInt(hex1.substr(2, 2), 16);\n  const b1 = parseInt(hex1.substr(4, 2), 16);\n  \n  const r2 = parseInt(hex2.substr(0, 2), 16);\n  const g2 = parseInt(hex2.substr(2, 2), 16);\n  const b2 = parseInt(hex2.substr(4, 2), 16);\n  \n  const r = Math.round(r1 + (r2 - r1) * ratio);\n  const g = Math.round(g1 + (g2 - g1) * ratio);\n  const b = Math.round(b1 + (b2 - b1) * ratio);\n  \n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { \n  createTerrasIndigenasStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/layerStyles';\nimport { createGeoJSONInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG, PROJECTION_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersTerrasIndigenas - Substitui completamente o TerrasIndigenas.js do Leaflet\n * Implementa camada GeoJSON de terras indígenas com estilos dinâmicos e interações\n */\nconst OpenLayersTerrasIndigenas = ({ \n  data,\n  onPainelOpen,\n  showTerrasIndigenas = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  const interactionsRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredFeature, setHoveredFeature] = React.useState(null);\n  const [selectedFeature, setSelectedFeature] = React.useState(null);\n  const [features, setFeatures] = React.useState([]);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de terras indígenas\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersTerrasIndigenas] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n      setFeatures(geoJSONFeatures);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createTerrasIndigenasStyle(feature, false),\n        zIndex: 10\n      });\n\n      // Adicionar dados de terra indígena a cada feature\n      geoJSONFeatures.forEach(feature => {\n        const properties = feature.getProperties();\n        feature.set('terraIndigenaInfo', {\n          titulo: properties.terrai_nom,\n          tipo: 'terra_indigena',\n          etnia: properties.etnia_nome,\n          municipio: properties.municipio_,\n          uf: properties.uf_sigla,\n          superficie: properties.superficie,\n          fase: properties.fase_ti,\n          modalidade: properties.modalidade,\n          reestudo: properties.reestudo_t,\n          cr: properties.cr,\n          faixa_fron: properties.faixa_fron,\n          undadm_nom: properties.undadm_nom,\n          undadm_sig: properties.undadm_sig,\n          dominio_un: properties.dominio_un,\n          data_atual: properties.data_atual,\n          terrai_cod: properties.terrai_cod,\n          undadm_cod: properties.undadm_cod\n        });\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      // Configurar interações\n      setupInteractions();\n\n      console.log(`[OpenLayersTerrasIndigenas] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersTerrasIndigenas] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  /**\n   * Configura as interações da camada\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    // Criar interações específicas para camadas GeoJSON\n    interactionsRef.current = createGeoJSONInteractions(\n      map,\n      handleFeatureClick,\n      handleFeatureHover\n    );\n\n    // Configurar handlers específicos\n    interactionsRef.current.on('click', handleFeatureClick);\n    interactionsRef.current.on('hover', handleFeatureHover);\n    interactionsRef.current.on('hoverOut', handleFeatureHoverOut);\n\n  }, [map]);\n\n  /**\n   * Handler para clique em feature\n   */\n  const handleFeatureClick = useCallback((feature, event) => {\n    if (!feature) return;\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (!terraIndigenaInfo) return;\n\n    if (isMobileDevice) {\n      // No mobile: clique único abre o painel diretamente\n      if (onPainelOpen) {\n        onPainelOpen(terraIndigenaInfo);\n      }\n    } else {\n      // No desktop: primeiro clique faz zoom, segundo abre painel\n      if (selectedFeature === feature) {\n        // Segundo clique: abrir painel\n        if (onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n        setSelectedFeature(null);\n      } else {\n        // Primeiro clique: fazer zoom\n        setSelectedFeature(feature);\n        \n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const extent = geometry.getExtent();\n          map.getView().fit(extent, {\n            duration: MAP_CONFIG.ANIMATION_CONFIG.duration.zoom,\n            padding: [50, 50, 50, 50],\n            maxZoom: 15\n          });\n        }\n      }\n    }\n  }, [isMobileDevice, onPainelOpen, selectedFeature, map]);\n\n  /**\n   * Handler para hover em feature\n   */\n  const handleFeatureHover = useCallback((feature, event) => {\n    if (isMobileDevice) return; // Desabilitar hover em mobile\n    \n    setHoveredFeature(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return createTerrasIndigenasStyle(f, true); // true = hover\n        }\n        return createTerrasIndigenasStyle(f, false);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [isMobileDevice]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleFeatureHoverOut = useCallback((feature) => {\n    setHoveredFeature(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n      vectorLayerRef.current.changed();\n    }\n  }, []);\n\n  /**\n   * Aplica estilo de seleção a um feature\n   */\n  const applySelectionStyleToFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => {\n      if (f === feature) {\n        const baseStyle = createTerrasIndigenasStyle(f, false);\n        return applySelectionStyle(f, baseStyle);\n      }\n      return createTerrasIndigenasStyle(f, false);\n    });\n    vectorLayerRef.current.changed();\n  }, []);\n\n  /**\n   * Remove estilo de seleção de um feature\n   */\n  const removeSelectionStyleFromFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n    vectorLayerRef.current.changed();\n  }, []);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showTerrasIndigenas) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (interactionsRef.current) {\n        interactionsRef.current.destroy();\n      }\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showTerrasIndigenas, initializeLayer]);\n\n  // Aplicar/remover estilo de seleção quando selectedFeature mudar\n  useEffect(() => {\n    if (selectedFeature) {\n      applySelectionStyleToFeature(selectedFeature);\n    } else if (vectorLayerRef.current) {\n      // Remover seleção de todos os features\n      removeSelectionStyleFromFeature();\n    }\n  }, [selectedFeature, applySelectionStyleToFeature, removeSelectionStyleFromFeature]);\n\n  // Limpar seleção após timeout (para comportamento de clique duplo)\n  useEffect(() => {\n    if (selectedFeature) {\n      const timeout = setTimeout(() => {\n        setSelectedFeature(null);\n      }, MAP_CONFIG.interaction.clickDelay);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [selectedFeature]);\n\n  // Se não deve mostrar terras indígenas, não renderizar nada\n  if (!showTerrasIndigenas || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersTerrasIndigenas;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { createEstadoSPStyle } from '../../utils/openlayers/layerStyles';\nimport { PROJECTION_CONFIG } from '../../utils/mapConfig';\n\n/**\n * Componente OpenLayersEstadoSP - Substitui completamente o EstadoSP.js do Leaflet\n * Implementa camada GeoJSON de fundo do estado de São Paulo (não-interativa)\n */\nconst OpenLayersEstadoSP = ({ \n  data,\n  showEstadoSP = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n\n  /**\n   * Inicializa a camada do estado de São Paulo\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersEstadoSP] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial (não-interativa, apenas visual)\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createEstadoSPStyle(feature, false),\n        zIndex: 5, // Camada de fundo com zIndex baixo\n        interactive: false // Desabilitar interações\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      console.log(`[OpenLayersEstadoSP] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersEstadoSP] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showEstadoSP) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showEstadoSP, initializeLayer]);\n\n  // Se não deve mostrar estado SP, não renderizar nada\n  if (!showEstadoSP || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON de fundo do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersEstadoSP;\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n/**\n * Componente OpenLayersLayers - Gerenciador unificado de todas as camadas GeoJSON\n * Centraliza o controle das camadas de terras indígenas e estado SP\n */\nconst OpenLayersLayers = ({ \n  terrasIndigenasData,\n  estadoSPData,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  onPainelOpen,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas\n  const terrasIndigenasRef = useRef(null);\n  const estadoSPRef = useRef(null);\n  \n  // Estados para controle das camadas\n  const [layersStatus, setLayersStatus] = React.useState({\n    terrasIndigenas: {\n      visible: showTerrasIndigenas,\n      loaded: false,\n      error: null\n    },\n    estadoSP: {\n      visible: showEstadoSP,\n      loaded: false,\n      error: null\n    }\n  });\n\n  // Verificar se há dados válidos\n  const hasValidData = useMemo(() => {\n    return {\n      terrasIndigenas: terrasIndigenasData && terrasIndigenasData.features && terrasIndigenasData.features.length > 0,\n      estadoSP: estadoSPData && estadoSPData.features && estadoSPData.features.length > 0\n    };\n  }, [terrasIndigenasData, estadoSPData]);\n\n  /**\n   * Atualiza status de uma camada\n   */\n  const updateLayerStatus = useCallback((layerName, updates) => {\n    setLayersStatus(prev => ({\n      ...prev,\n      [layerName]: {\n        ...prev[layerName],\n        ...updates\n      }\n    }));\n  }, []);\n\n  /**\n   * Handler para mudanças na visibilidade das camadas\n   */\n  const handleLayerVisibilityChange = useCallback((layerName, visible) => {\n    updateLayerStatus(layerName, { visible });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para erros nas camadas\n   */\n  const handleLayerError = useCallback((layerName, error) => {\n    console.error(`[OpenLayersLayers] Erro na camada ${layerName}:`, error);\n    updateLayerStatus(layerName, { error: error.message });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para sucesso no carregamento das camadas\n   */\n  const handleLayerSuccess = useCallback((layerName) => {\n    updateLayerStatus(layerName, { loaded: true, error: null });\n  }, [updateLayerStatus]);\n\n  /**\n   * Obtém estatísticas das camadas\n   */\n  const getLayersStats = useCallback(() => {\n    const stats = {\n      total: 0,\n      visible: 0,\n      loaded: 0,\n      errors: 0\n    };\n\n    Object.values(layersStatus).forEach(layer => {\n      stats.total++;\n      if (layer.visible) stats.visible++;\n      if (layer.loaded) stats.loaded++;\n      if (layer.error) stats.errors++;\n    });\n\n    return stats;\n  }, [layersStatus]);\n\n  /**\n   * Obtém informações detalhadas das camadas\n   */\n  const getLayersInfo = useCallback(() => {\n    return {\n      terrasIndigenas: {\n        ...layersStatus.terrasIndigenas,\n        hasData: hasValidData.terrasIndigenas,\n        featureCount: hasValidData.terrasIndigenas ? terrasIndigenasData.features.length : 0\n      },\n      estadoSP: {\n        ...layersStatus.estadoSP,\n        hasData: hasValidData.estadoSP,\n        featureCount: hasValidData.estadoSP ? estadoSPData.features.length : 0\n      }\n    };\n  }, [layersStatus, hasValidData, terrasIndigenasData, estadoSPData]);\n\n  // Log de status das camadas\n  useEffect(() => {\n    const stats = getLayersStats();\n    const info = getLayersInfo();\n    \n    console.log('[OpenLayersLayers] Status das camadas:', {\n      stats,\n      info,\n      hasValidData\n    });\n  }, [layersStatus, getLayersStats, getLayersInfo, hasValidData]);\n\n  // Atualizar status quando props mudarem\n  useEffect(() => {\n    setLayersStatus(prev => ({\n      terrasIndigenas: {\n        ...prev.terrasIndigenas,\n        visible: showTerrasIndigenas\n      },\n      estadoSP: {\n        ...prev.estadoSP,\n        visible: showEstadoSP\n      }\n    }));\n  }, [showTerrasIndigenas, showEstadoSP]);\n\n  // Se não há dados válidos, não renderizar nada\n  if (!hasValidData.terrasIndigenas && !hasValidData.estadoSP) {\n    return (\n      <div className={className}>\n        <div className=\"text-center text-gray-500 p-4\">\n          Nenhuma camada GeoJSON disponível\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {/* Camada Terras Indígenas */}\n      {hasValidData.terrasIndigenas && (\n        <OpenLayersTerrasIndigenas\n          ref={terrasIndigenasRef}\n          data={terrasIndigenasData}\n          onPainelOpen={onPainelOpen}\n          showTerrasIndigenas={showTerrasIndigenas}\n          map={map}\n          onLoad={() => handleLayerSuccess('terrasIndigenas')}\n          onError={(error) => handleLayerError('terrasIndigenas', error)}\n        />\n      )}\n\n      {/* Camada Estado SP */}\n      {hasValidData.estadoSP && (\n        <OpenLayersEstadoSP\n          ref={estadoSPRef}\n          data={estadoSPData}\n          showEstadoSP={showEstadoSP}\n          map={map}\n          onLoad={() => handleLayerSuccess('estadoSP')}\n          onError={(error) => handleLayerError('estadoSP', error)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default OpenLayersLayers;\n","import React from 'react';\n\nconst MapWrapper = React.forwardRef((props, ref) => {\n  return <div id=\"map\" className=\"w-full h-full\" ref={ref} {...props} />;\n});\n\nexport default MapWrapper; ","import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { defaults as defaultControls } from 'ol/control';\n// Remover import das interações padrão para evitar conflitos\n// import { defaults as defaultInteractions } from 'ol/interaction';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\n\n// Componentes OpenLayers\nimport OpenLayersMarkers from './OpenLayers/OpenLayersMarkers';\nimport OpenLayersLayers from './OpenLayers/OpenLayersLayers';\n\n// Configurações e utilitários\nimport { MAP_CONFIG, BASE_LAYER_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\nimport MapWrapper from './map/MapWrapper';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center,\n  zoom = MAP_CONFIG.zoom,\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Verificar se é mobile e ajustar configurações\n  const isMobileDevice = useMemo(() => isMobile(), []);\n  const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n  const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n  /**\n   * Cria camadas base do mapa\n   */\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: BASE_LAYER_CONFIG.satellite.url,\n        attributions: BASE_LAYER_CONFIG.satellite.attributions,\n        maxZoom: BASE_LAYER_CONFIG.satellite.maxZoom,\n        wrapX: BASE_LAYER_CONFIG.satellite.wrapX,\n        tilePixelRatio: BASE_LAYER_CONFIG.satellite.tilePixelRatio,\n        tileSize: BASE_LAYER_CONFIG.satellite.tileSize\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  /**\n   * Inicializa o mapa OpenLayers\n   */\n  const initializeMap = useCallback(() => {\n    if (map.current) return;\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [baseLayer.current],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: MAP_CONFIG.maxZoom,\n        minZoom: MAP_CONFIG.minZoom,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      // Remover interações padrão para evitar conflitos\n      // interactions: defaultInteractions({\n      //   dragRotate: false, // Desabilitar rotação com arraste\n      //   pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      // })\n    });\n\n    // Event listeners para mudanças de view\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    console.log('[OpenLayersMap] Mapa inicializado com sucesso');\n\n  }, [initialCenter, initialZoom, createBaseLayers]);\n\n  /**\n   * Atualiza configurações do mapa quando props mudarem\n   */\n  const updateMapConfig = useCallback(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom]);\n\n  // Inicializar mapa quando componente montar\n  useEffect(() => {\n    initializeMap();\n\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [initializeMap]);\n\n  // Atualizar configurações quando props mudarem\n  useEffect(() => {\n    updateMapConfig();\n  }, [updateMapConfig]);\n\n  return (\n    <MapWrapper ref={mapContainer}>\n      {/* Mapa base OpenLayers */}\n      {map.current && (\n        <>\n          {/* Componente de marcadores */}\n          <OpenLayersMarkers\n            dataPoints={dataPoints}\n            onPainelOpen={onPainelOpen}\n            showMarcadores={showMarcadores}\n            showNomesEscolas={showNomesEscolas}\n            map={map.current}\n          />\n\n          {/* Componente de camadas GeoJSON */}\n          <OpenLayersLayers\n            terrasIndigenasData={terrasIndigenasData}\n            estadoSPData={estadoSPData}\n            showTerrasIndigenas={showTerrasIndigenas}\n            showEstadoSP={showEstadoSP}\n            onPainelOpen={onPainelOpen}\n            map={map.current}\n          />\n        </>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  painelAberto = false,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  useEffect(() => {\n    console.log('MapSelector: useEffect painelAberto mudou:', {\n      painelAberto,\n      isMobile,\n      showMarcadores,\n      shouldReactivate: !painelAberto && isMobile\n    });\n    \n    if (!painelAberto && isMobile) {\n      console.log('MapSelector: Painel fechado em mobile, reativando marcadores');\n      setShowMarcadores(true);\n    }\n  }, [painelAberto, isMobile]);\n\n  // Log para monitorar mudanças no showMarcadores\n  useEffect(() => {\n    console.log('MapSelector: showMarcadores mudou para:', showMarcadores);\n  }, [showMarcadores]);\n\n    // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-4 py-3 bg-gradient-to-r from-green-700 to-green-800 text-white\">\n      <div className=\"flex items-center gap-2\">\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m-6 3l6-3\" />\n        </svg>\n        <h3 className=\"text-sm font-semibold tracking-wide\">Camadas do Mapa</h3>\n      </div>\n      <button\n        onClick={onMinimize}\n        className=\"text-green-100 hover:text-white hover:bg-green-600 transition-all duration-200 p-1.5 rounded-md\"\n        aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n        type=\"button\"\n      >\n        {isMinimized ? (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        ) : (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n          </svg>\n        )}\n      </button>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`group w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 ${\n        checked \n          ? 'bg-green-50 shadow-sm' \n          : 'bg-white hover:bg-green-50/50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n    >\n      {/* Indicador de cor principal */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Para Terras Indígenas com subcategorias\n          <div className=\"flex flex-col gap-1.5\">\n            {subItems.map((item, index) => (\n              <div key={index} className=\"flex items-center gap-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full shadow-sm\" \n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-xs font-medium text-gray-700\">{item.label}</span>\n              </div>\n            ))}\n          </div>\n        ) : (\n          // Para outras camadas\n          <div \n            className={`w-4 h-4 rounded-full shadow-sm ${\n              checked ? 'ring-2 ring-green-200' : ''\n            }`}\n            style={{ backgroundColor: color }}\n          />\n        )}\n      </div>\n      \n      {/* Conteúdo principal */}\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex items-center gap-2\">\n          <span className={`text-sm font-medium ${\n            checked ? 'text-green-900' : 'text-gray-800'\n          }`}>\n            {label}\n          </span>\n          \n          {total !== undefined && (\n            <span className={`text-xs px-2 py-0.5 rounded-full ${\n              checked \n                ? 'bg-green-100 text-green-700' \n                : 'bg-gray-100 text-gray-600'\n            }`}>\n              {total}\n            </span>\n          )}\n        </div>\n        \n        {/* Status indicators */}\n        <div className=\"flex items-center gap-2 mt-1\">\n          {loading && (\n            <div className=\"flex items-center gap-1 text-blue-600\">\n              <svg className=\"w-3 h-3 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n              </svg>\n              <span className=\"text-xs\">Carregando...</span>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"flex items-center gap-1 text-red-600\">\n              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span className=\"text-xs\">Erro</span>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Indicador de estado */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Indicador para Terras Indígenas\n                  <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n      ) : (\n        // Indicador para outras camadas\n        <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n        )}\n      </div>\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white shadow-2xl rounded-t-2xl\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-4 flex flex-col gap-3 max-h-80 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-72 bg-white rounded-2xl shadow-2xl z-20 overflow-hidden\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-4 flex flex-col gap-3 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","// Central slug utility for the project\nexport const criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-') // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '') // Remove hífens do início e fim\n    .trim();\n}; ","import { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\n\nconst useDocumentosEscola = (escolaId) => {\n  const [documentos, setDocumentos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDocumentos = async () => {\n      console.log('🔄 Iniciando busca de documentos para escola:', escolaId, 'tipo:', typeof escolaId);\n      \n      if (!escolaId) {\n        console.log('⚠️ Nenhum ID de escola fornecido, retornando array vazio');\n        setDocumentos([]);\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        console.log('📡 Consultando tabela documentos_escola...');\n        \n        // Verificar conexão com Supabase\n        const { data: authData, error: authError } = await supabase.auth.getSession();\n        console.log('🔐 Estado da autenticação:', {\n          temSessao: !!authData?.session,\n          error: authError\n        });\n\n        // Verificar permissões da tabela\n        const { data: rlsData, error: rlsError } = await supabase\n          .from('documentos_escola')\n          .select('count')\n          .limit(1);\n\n        console.log('🔑 Verificação de permissões:', {\n          podeAcessar: !rlsError,\n          error: rlsError ? {\n            code: rlsError.code,\n            message: rlsError.message,\n            details: rlsError.details,\n            hint: rlsError.hint\n          } : null\n        });\n\n        // Primeiro, vamos verificar todos os documentos para debug\n        const { data: allDocs, error: allDocsError } = await supabase\n          .from('documentos_escola')\n          .select('*');\n\n        if (allDocsError) {\n          console.error('❌ Erro ao buscar todos os documentos:', {\n            code: allDocsError.code,\n            message: allDocsError.message,\n            details: allDocsError.details,\n            hint: allDocsError.hint\n          });\n        } else {\n          console.log('📊 Todos os documentos na tabela:', allDocs);\n          if (allDocs && allDocs.length > 0) {\n            console.log('📊 Exemplo de documento:', allDocs[0]);\n            console.log('📊 Tipos de escola_id encontrados:', allDocs.map(doc => ({\n              id: doc.id,\n              escola_id: doc.escola_id,\n              tipo_escola_id: typeof doc.escola_id,\n              valor_escola_id: doc.escola_id\n            })));\n          } else {\n            console.log('⚠️ Tabela está vazia ou não temos permissão para ver os dados');\n          }\n        }\n        \n        // Agora vamos buscar os documentos específicos\n        console.log('🔍 Buscando documentos para escola_id:', escolaId);\n        const { data, error } = await supabase\n          .from('documentos_escola')\n          .select('*')\n          .eq('escola_id', escolaId.toString()) // Convertendo para string para garantir\n          .order('created_at', { ascending: false });\n\n        if (error) {\n          console.error('❌ Erro na consulta Supabase:', {\n            code: error.code,\n            message: error.message,\n            details: error.details,\n            hint: error.hint\n          });\n          throw error;\n        }\n\n        console.log('✅ Documentos encontrados:', data?.length || 0);\n        if (data?.length === 0) {\n          console.log('ℹ️ Nenhum documento encontrado para a escola ID:', escolaId);\n          console.log('ℹ️ Tentando buscar com diferentes formatos de escola_id...');\n          \n          // Tentando diferentes formatos do ID\n          const { data: dataAsNumber, error: errorAsNumber } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', Number(escolaId));\n            \n          const { data: dataAsString, error: errorAsString } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', String(escolaId));\n            \n          console.log('Resultados com escola_id como número:', {\n            count: dataAsNumber?.length || 0,\n            error: errorAsNumber\n          });\n          console.log('Resultados com escola_id como string:', {\n            count: dataAsString?.length || 0,\n            error: errorAsString\n          });\n        } else {\n          console.log('📄 Dados dos documentos:', data);\n        }\n        \n        setDocumentos(data || []);\n      } catch (err) {\n        console.error('❌ Erro ao buscar documentos:', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n        console.log('🏁 Estado final:', { \n          documentos: documentos.length, \n          isLoading, \n          error: error || 'nenhum' \n        });\n      }\n    };\n\n    fetchDocumentos();\n  }, [escolaId]);\n\n  return { documentos, isLoading, error };\n};\n\nexport default useDocumentosEscola; ","import React, { memo, useState } from 'react';\n\n// Componente InfoCard para informações individuais\nconst InfoCard = memo(({ label, value, icon: Icon, type = 'text', className = '' }) => {\n  if (!value && value !== 0) return null;\n\n  const renderValue = () => {\n    switch (type) {\n      case 'number':\n        return (\n          <div className=\"text-2xl font-bold text-green-800\">\n            {value.toLocaleString('pt-BR')}\n          </div>\n        );\n      case 'boolean':\n        return (\n          <div className={`px-3 py-1 rounded-full text-xs font-medium ${\n            value ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'\n          }`}>\n            {value ? 'Sim' : 'Não'}\n          </div>\n        );\n      case 'badge':\n        return (\n          <div className=\"flex flex-wrap gap-1\">\n            {Array.isArray(value) ? value.map((item, index) => (\n              <span key={index} className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {item}\n              </span>\n            )) : (\n              <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {value}\n              </span>\n            )}\n          </div>\n        );\n      case 'link':\n        return (\n          <a \n            href={value} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"text-green-700 hover:text-green-800 underline text-sm\"\n          >\n            {value}\n          </a>\n        );\n      default:\n        return (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`rounded-lg p-4 transition-all duration-200 ${className}`}>\n      <div className=\"flex items-center gap-2 mb-2\">\n        {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n        <span className=\"text-xs font-medium text-gray-600 uppercase tracking-wide\">\n          {label}\n        </span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n});\n\n// Componente InfoGrid para layout em grid\nconst InfoGrid = memo(({ children, columns = 'auto-fit', gap = 4, className = '' }) => {\n  const gridClasses = {\n    'auto-fit': 'grid-cols-2 lg:grid-cols-3',\n    '2': 'grid-cols-2',\n    '3': 'grid-cols-2 lg:grid-cols-3',\n    '4': 'grid-cols-2 lg:grid-cols-4'\n  };\n\n  return (\n    <div className={`grid ${gridClasses[columns]} gap-${gap} ${className} [&>*]:bg-green-100`}>\n      {children}\n    </div>\n  );\n});\n\n// Componente InfoTable para dados tabulares\nconst InfoTable = memo(({ data, className = '' }) => {\n  if (!data || data.length === 0) return null;\n\n  return (\n    <div className={`bg-green-100 rounded-lg overflow-hidden ${className}`}>\n      <table className=\"w-full\">\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-green-50'}>\n              <td className=\"px-4 py-3 text-sm font-medium text-gray-700 border-r border-green-200\">\n                {row.label}\n              </td>\n              <td className=\"px-4 py-3 text-sm text-gray-600\">\n                {row.value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\n// Componente InfoStats para estatísticas com ícones\nconst InfoStats = memo(({ stats, className = '' }) => {\n  if (!stats || stats.length === 0) return null;\n\n  return (\n    <div className={`grid grid-cols-2 sm:grid-cols-4 gap-4 ${className} [&>*]:border-b [&>*]:border-gray-200 [&>*]:pb-2 [&>*]:mb-2`}>\n      {stats.map((stat, index) => (\n        <div key={index} className=\"text-center rounded-lg p-4\">\n          <div className=\"flex justify-center mb-2\">\n            {stat.icon && <stat.icon className=\"w-6 h-6 text-green-600\" />}\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {stat.value}\n          </div>\n          <div className=\"text-xs text-gray-600 mt-1\">\n            {stat.label}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n\n// Componente InfoSection refatorado\nconst InfoSection = memo(({ \n  title, \n  icon: Icon, \n  children, \n  description,\n  defaultCollapsed = false,\n  className = '',\n  layout = 'default', // 'default', 'grid', 'table', 'stats'\n  layoutProps = {}\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n\n  const renderContent = () => {\n    if (!children) return null;\n\n    switch (layout) {\n      case 'grid':\n        return (\n          <InfoGrid {...layoutProps}>\n            {children}\n          </InfoGrid>\n        );\n      case 'table':\n        return (\n          <InfoTable data={layoutProps.data} className={layoutProps.className} />\n        );\n      case 'stats':\n        return (\n          <InfoStats stats={layoutProps.stats} className={layoutProps.className} />\n        );\n      default:\n        return (\n          <div className=\"space-y-4\">\n            {children}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <section \n      className={`\n        bg-white rounded-2xl p-5 \n        shadow-sm transition-all duration-200\n        ${className}\n      `}\n    >\n      <button\n        onClick={() => setIsCollapsed(!isCollapsed)}\n        className=\"\n          w-full flex items-center justify-between \n          text-base font-semibold\n          mb-4 text-gray-900 hover:text-gray-800 \n          transition-colors focus:outline-none\n        \"\n        aria-expanded={!isCollapsed}\n        aria-controls={`${title}-content`}\n      >\n        <div className=\"flex items-center gap-2\">\n          {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n          <span className=\"tracking-wide\">{title}</span>\n        </div>\n      </button>\n      \n      {!isCollapsed && (\n        <div \n          id={`${title}-content`}\n          className=\"space-y-4\"\n          role=\"region\"\n          aria-labelledby={`${title}-button`}\n        >\n          {description && (\n            <div className=\"bg-green-100 rounded-lg p-4\">\n              <p className=\"text-gray-700 text-sm leading-relaxed\">\n                {description}\n              </p>\n            </div>\n          )}\n          {renderContent()}\n        </div>\n      )}\n    </section>\n  );\n});\n\n// Exportar todos os componentes\nexport { InfoCard, InfoGrid, InfoTable, InfoStats };\nexport default InfoSection; ","import React, { memo, useState } from 'react';\nimport {\n  MapPin,\n  Users,\n  Globe,\n  Calendar,\n  Building,\n  Link as LinkIcon,\n  ExternalLink,\n  ChevronRight,\n  Check,\n  X,\n  Navigation,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst capitalize = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst CompactCard = ({ icon: Icon, label, value, type = 'text' }) => {\n  const renderValue = () => {\n    switch (type) {\n      case 'boolean':\n        return value ? (\n          <span className=\"flex items-center gap-1 text-green-600 text-sm\">\n            <Check className=\"w-4 h-4 flex-shrink-0\" />\n            Sim\n          </span>\n        ) : (\n          <span className=\"flex items-center gap-1 text-red-500 text-sm\">\n            <X className=\"w-4 h-4 flex-shrink-0\" />\n            Não\n          </span>\n        );\n      default:\n        return <span className=\"text-sm text-gray-800 break-words\">{value}</span>;\n    }\n  };\n\n  return (\n    <div className=\"bg-green-50 hover:bg-green-100 rounded-lg p-3 transition-all duration-200 hover:shadow-sm h-full flex flex-col\">\n      {/* Header com ícone e label */}\n      <div className=\"flex items-center gap-2 mb-2 flex-shrink-0\">\n        <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n        <span className=\"text-xs text-gray-600 font-medium\">{label}</span>\n      </div>\n      {/* Conteúdo do valor */}\n      <div className=\"flex-1 flex items-start\">\n        {renderValue()}\n      </div>\n    </div>\n  );\n};\n\nconst InfoBlock = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-center gap-2 bg-green-100 p-1.5 rounded-md text-xs\">\n    <Icon className=\"w-5 h-5 text-green-600\" />\n    <span className=\"text-gray-700 font-medium\">{label}:</span>\n    <span className=\"font-semibold text-green-800\">{capitalize(value)}</span>\n  </div>\n);\n\nconst AddressDetails = ({ escola }) => {\n  const hasDetailedAddress = escola.logradouro || escola.numero || escola.bairro || escola.cep;\n  \n  if (!hasDetailedAddress) {\n    return (\n      <div className=\"mt-2 p-2 bg-green-100 rounded-md\">\n        <p className=\"text-xs text-gray-700 leading-snug\">\n          {capitalize(escola.endereco)}\n        </p>\n      </div>\n    );\n  }\n\n  const addressFields = [\n    { field: 'logradouro', label: 'Logradouro' },\n    { field: 'numero', label: 'Número' },\n    { field: 'complemento', label: 'Complemento' },\n    { field: 'bairro', label: 'Bairro' },\n  ];\n\n  return (\n    <div className=\"mt-2 space-y-1\">\n      {addressFields.map(({ field, label }) => \n        escola[field] && (\n          <div key={field} className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n            <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700 mb-0.5\">{label}</div>\n              <div className=\"text-xs text-gray-800 leading-snug\">{escola[field]}</div>\n            </div>\n          </div>\n        )\n      )}\n      \n      {(escola.cep || escola.estado) && (\n        <div className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n          <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n          <div className=\"flex-1\">\n            <div className=\"text-xs font-medium text-gray-700 mb-0.5\">Localização</div>\n            <div className=\"text-xs text-gray-800 leading-snug\">\n              {[escola.municipio, escola.estado, escola.cep].filter(Boolean).join(', ')}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MapButton = ({ escola }) => {\n  const hasCoordinates = escola.Latitude && escola.Longitude;\n  \n  if (!hasCoordinates) return null;\n\n  const openMap = () => {\n    window.open(`https://www.google.com/maps?q=${escola.Latitude},${escola.Longitude}`, '_blank');\n  };\n\n  return (\n    <button\n      onClick={openMap}\n      className=\"mt-2 w-full flex items-center justify-center gap-2 p-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors text-xs font-medium\"\n    >\n      <Navigation className=\"w-5 h-5\" />\n      Ver no Google Maps\n    </button>\n  );\n};\n\nconst SocialLinks = ({ links, expanded, onToggle }) => {\n  const socialLinks = (links || '').split(',').map(url => url.trim()).filter(Boolean);\n  \n  if (socialLinks.length === 0) return null;\n\n  return (\n    <div className=\"bg-green-100 rounded-md\">\n      <button\n        onClick={() => onToggle('social')}\n        className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n        aria-expanded={expanded.social}\n      >\n        <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n          <Globe className=\"w-5 h-5 text-blue-600\" />\n          Redes sociais ({socialLinks.length})\n        </span>\n        <ChevronRight\n          className={`w-5 h-5 text-gray-400 transition-transform ${\n            expanded.social ? 'rotate-90' : ''\n          }`}\n        />\n      </button>\n      \n      {expanded.social && (\n        <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n          <div className=\"mt-1 space-y-1\">\n            {socialLinks.map((link, index) => (\n              <a\n                key={index}\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center gap-1.5 p-1.5 bg-green-100 rounded-md hover:bg-green-200 group text-xs\"\n              >\n                <LinkIcon className=\"w-5 h-5 text-blue-600\" />\n                <span className=\"truncate flex-1 text-gray-700\">{link}</span>\n                <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BasicInfo = memo(({ escola }) => {\n  const [expanded, setExpanded] = useState({});\n\n  if (!escola) return null;\n\n  const toggle = (key) => {\n    setExpanded(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const basicInfoCards = [\n    {\n      icon: Building,\n      label: 'Município',\n      value: capitalize(escola.municipio),\n    },\n    {\n      icon: Calendar,\n      label: 'Fundação',\n      value: escola.ano_criacao,\n    },\n    {\n      icon: Globe,\n      label: 'Redes sociais',\n      value: escola.usa_redes_sociais,\n      type: 'boolean',\n    },\n  ].filter(item => item.value);\n\n  return (\n    <>\n      {/* Povos Indígenas em destaque antes de tudo */}\n      {escola.povos_indigenas && (\n        <div className=\"mb-4\">\n          <div className=\"text-lg sm:text-xl font-bold text-green-800\">\n            Povos Indígenas: <span className=\"font-semibold text-black\">{escola.povos_indigenas}</span>\n          </div>\n        </div>\n      )}\n      <InfoSection title=\"Localização\" icon={MapPin}>\n        {/* Cards informativos básicos - Layout otimizado */}\n        <div className=\"grid grid-cols-2 lg:grid-cols-3 gap-4 mb-4 items-stretch\">\n          {basicInfoCards.map((item, index) => (\n            <CompactCard key={index} {...item} />\n          ))}\n          {/* Diretoria de ensino como card */}\n          {escola.diretoria_ensino && (\n            <CompactCard \n              icon={Building}\n              label=\"Diretoria de ensino\"\n              value={escola.diretoria_ensino}\n            />\n          )}\n        </div>\n\n        <div className=\"space-y-1.5\">\n\n          {/* Gaveta do endereço */}\n          {escola.endereco && (\n            <div className=\"bg-green-100 rounded-md\">\n              <button\n                onClick={() => toggle('endereco')}\n                className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n                aria-expanded={expanded.endereco}\n              >\n                <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                  <Building className=\"w-5 h-5\" />\n                  Endereço\n                </span>\n                <ChevronRight\n                  className={`w-5 h-5 text-gray-400 transition-transform ${\n                    expanded.endereco ? 'rotate-90' : ''\n                  }`}\n                />\n              </button>\n              {expanded.endereco && (\n                <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n                  <AddressDetails escola={escola} />\n                  <MapButton escola={escola} />\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Redes sociais */}\n          <SocialLinks \n            links={escola.links_redes_sociais}\n            expanded={expanded}\n            onToggle={toggle}\n          />\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default BasicInfo;","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { X, ZoomIn, ZoomOut, RotateCw, ChevronLeft, ChevronRight } from 'lucide-react';\n\nconst ReusableImageZoom = ({ \n  images = [], \n  currentImageIndex = 0, \n  isOpen = false, \n  onClose,\n  onImageChange,\n  showNavigation = true,\n  showControls = true,\n  showCounter = true,\n  showCaption = true\n}) => {\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [rotation, setRotation] = useState(0);\n  const [currentIndex, setCurrentIndex] = useState(currentImageIndex);\n\n  // Reset zoom e rotação quando a imagem muda\n  useEffect(() => {\n    setZoomLevel(1);\n    setRotation(0);\n    setCurrentIndex(currentImageIndex);\n  }, [currentImageIndex, isOpen]);\n\n  const currentImage = images[currentIndex];\n\n  const fecharZoom = useCallback(() => {\n    setZoomLevel(1);\n    setRotation(0);\n    onClose();\n  }, [onClose]);\n\n  const resetImage = () => {\n    setZoomLevel(1);\n    setRotation(0);\n  };\n\n  const nextImage = () => {\n    if (currentIndex < images.length - 1) {\n      const newIndex = currentIndex + 1;\n      setCurrentIndex(newIndex);\n      if (onImageChange) onImageChange(newIndex);\n    }\n  };\n\n  const prevImage = () => {\n    if (currentIndex > 0) {\n      const newIndex = currentIndex - 1;\n      setCurrentIndex(newIndex);\n      if (onImageChange) onImageChange(newIndex);\n    }\n  };\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    \n    if (isOpen) {\n      window.addEventListener('keydown', handleEsc);\n      return () => window.removeEventListener('keydown', handleEsc);\n    }\n  }, [isOpen, fecharZoom]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (!isOpen) return;\n      \n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          prevImage();\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          nextImage();\n          break;\n        case 'r':\n        case 'R':\n          e.preventDefault();\n          setRotation(prev => (prev + 90) % 360);\n          break;\n        case '+':\n        case '=':\n          e.preventDefault();\n          setZoomLevel(prev => Math.min(prev + 0.25, 3));\n          break;\n        case '-':\n          e.preventDefault();\n          setZoomLevel(prev => Math.max(prev - 0.25, 0.5));\n          break;\n        case '0':\n          e.preventDefault();\n          resetImage();\n          break;\n        default:\n          break;\n      }\n    };\n\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n      return () => window.removeEventListener('keydown', handleKeyDown);\n    }\n  }, [isOpen, currentIndex, images.length]);\n\n  if (!isOpen || !currentImage) return null;\n\n  return (\n    <div\n      className=\"image-zoom-modal\"\n      onClick={fecharZoom}\n    >\n      {/* Botão Fechar */}\n      <button\n        onClick={fecharZoom}\n        className=\"image-zoom-close\"\n        aria-label=\"Fechar\"\n      >\n        <X size={24} />\n      </button>\n\n      {/* Controles de Zoom */}\n      {showControls && (\n        <div className=\"image-zoom-controls\">\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              setZoomLevel(prev => Math.min(prev + 0.25, 3));\n            }}\n            className=\"image-zoom-control-button\"\n            aria-label=\"Aumentar zoom\"\n          >\n            <ZoomIn size={20} />\n          </button>\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              setZoomLevel(prev => Math.max(prev - 0.25, 0.5));\n            }}\n            className=\"image-zoom-control-button\"\n            aria-label=\"Diminuir zoom\"\n          >\n            <ZoomOut size={20} />\n          </button>\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              setRotation(prev => (prev + 90) % 360);\n            }}\n            className=\"image-zoom-control-button\"\n            aria-label=\"Rotacionar\"\n          >\n            <RotateCw size={20} />\n          </button>\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              resetImage();\n            }}\n            className=\"image-zoom-control-button text-xs px-3\"\n            aria-label=\"Resetar\"\n          >\n            Reset\n          </button>\n        </div>\n      )}\n\n      {/* Navegação entre imagens */}\n      {showNavigation && images.length > 1 && (\n        <>\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              prevImage();\n            }}\n            className=\"image-zoom-navigation prev\"\n            disabled={currentIndex === 0}\n            aria-label=\"Imagem anterior\"\n          >\n            <ChevronLeft size={24} />\n          </button>\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              nextImage();\n            }}\n            className=\"image-zoom-navigation next\"\n            disabled={currentIndex === images.length - 1}\n            aria-label=\"Próxima imagem\"\n          >\n            <ChevronRight size={24} />\n          </button>\n        </>\n      )}\n\n      {/* Contador de imagens */}\n      {showCounter && images.length > 1 && (\n        <div className=\"image-zoom-counter\">\n          {currentIndex + 1} / {images.length}\n        </div>\n      )}\n\n      {/* Container da imagem */}\n      <div className=\"image-zoom-container\">\n        <div className=\"image-zoom-image-wrapper\">\n          <img\n            src={currentImage.url || currentImage.publicURL || currentImage.imagem_public_url}\n            alt={currentImage.descricao || currentImage.descricao_imagem || 'Imagem'}\n            className=\"image-zoom-image\"\n            style={{\n              transform: `scale(${zoomLevel}) rotate(${rotation}deg)`,\n              cursor: 'grab'\n            }}\n            onClick={(e) => e.stopPropagation()}\n            onMouseDown={(e) => {\n              e.preventDefault();\n              // Implementar drag se necessário\n            }}\n          />\n        </div>\n\n        {/* Legenda */}\n        {showCaption && (currentImage.descricao || currentImage.descricao_imagem) && (\n          <div className=\"image-zoom-caption\">\n            <h3 className=\"font-semibold text-gray-900 mb-2\">\n              {currentImage.descricao || currentImage.descricao_imagem}\n            </h3>\n            \n            {/* Informações adicionais */}\n            <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n              {currentImage.categoria && (\n                <span className=\"capitalize bg-gray-100 px-2 py-1 rounded text-gray-800\">\n                  {currentImage.categoria}\n                </span>\n              )}\n              {currentImage.autor && (\n                <span>Fotógrafo: {currentImage.autor}</span>\n              )}\n              {currentImage.dataFoto && (\n                <span>Data: {new Date(currentImage.dataFoto).toLocaleDateString('pt-BR')}</span>\n              )}\n            </div>\n            \n            {/* Descrição detalhada */}\n            {currentImage.descricaoDetalhada && (\n              <p className=\"text-gray-600 leading-relaxed\">\n                {currentImage.descricaoDetalhada}\n              </p>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Instruções de teclado */}\n      <div className=\"image-zoom-instructions\">\n        <div className=\"text-xs text-gray-400 space-y-1\">\n          <div>ESC: Fechar | ← →: Navegar | R: Rotacionar</div>\n          <div>+ -: Zoom | 0: Reset</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nReusableImageZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    url: PropTypes.string,\n    publicURL: PropTypes.string,\n    imagem_public_url: PropTypes.string,\n    descricao: PropTypes.string,\n    descricao_imagem: PropTypes.string,\n    categoria: PropTypes.string,\n    autor: PropTypes.string,\n    dataFoto: PropTypes.string,\n    descricaoDetalhada: PropTypes.string\n  })).isRequired,\n  currentImageIndex: PropTypes.number,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onImageChange: PropTypes.func,\n  showNavigation: PropTypes.bool,\n  showControls: PropTypes.bool,\n  showCounter: PropTypes.bool,\n  showCaption: PropTypes.bool\n};\n\nexport default ReusableImageZoom;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { RefreshCw } from 'lucide-react';\nimport { getLegendaByImageUrlFlexivel } from '../../../services/legendasService';\nimport { supabase } from '../../../supabaseClient';\nimport ReusableImageZoom from '../../ReusableImageZoom';\nimport '../../ReusableImageZoom.css';\n\nconst ImagensdasEscolas = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [error, setError] = useState('');\n  const cacheRef = useRef({});\n  const [cacheVersion, setCacheVersion] = useState(0); // Para forçar recarga\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagensdasEscolas: refreshKey mudou, forçando recarga');\n      limparCacheERecarregar();\n    }\n  }, [refreshKey]);\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    setCurrentImageIndex(0);\n    document.body.style.overflow = 'auto';\n  }, []);\n\n  // ESC para fechar\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Função para limpar cache e recarregar\n  const limparCacheERecarregar = useCallback(() => {\n    console.log('Limpando cache e recarregando imagens...');\n    cacheRef.current = {};\n    setCacheVersion(prev => prev + 1);\n    setImagens([]);\n    setLoading(true);\n    setError('');\n  }, []);\n\n  useEffect(() => {\n    if (!escola_id) {\n      setLoading(false);\n      return;\n    }\n\n    // Verificar se há cache válido (com versão)\n    const cacheKey = `${escola_id}_v${cacheVersion}`;\n    if (cacheRef.current[cacheKey]) {\n      console.log('Usando cache para escola', escola_id);\n      setImagens(cacheRef.current[cacheKey]);\n      setLoading(false);\n      return;\n    }\n\n    const buscarImagens = async () => {\n      console.log('Buscando imagens para escola', escola_id);\n      \n      try {\n        // Usar a mesma abordagem do painel de edição: listar arquivos do bucket\n        const { data: files, error } = await supabase.storage\n          .from('imagens-das-escolas')\n          .list(`${escola_id}/`);\n\n        if (error) {\n          throw error;\n        }\n\n        if (!files || files.length === 0) {\n          console.log('Nenhum arquivo encontrado para escola', escola_id);\n          setImagens([]);\n          setLoading(false);\n          return;\n        }\n\n        console.log('Arquivos encontrados:', files.length);\n\n        // Processar cada arquivo encontrado\n        const imagensEncontradas = await Promise.all(\n          files.map(async (file, index) => {\n            const filePath = `${escola_id}/${file.name}`;\n            const { data: { publicUrl } } = supabase.storage\n              .from('imagens-das-escolas')\n              .getPublicUrl(filePath);\n\n            // Buscar legenda da nova tabela (busca flexível)\n            let legenda = null;\n            try {\n              console.log('Buscando legenda para:', filePath);\n              legenda = await getLegendaByImageUrlFlexivel(filePath, escola_id, {\n                categoria: 'escola',\n                tipo_foto: 'escola'\n              });\n              console.log('Legenda encontrada:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda para', filePath, ':', error);\n            }\n\n            return {\n              id: `${escola_id}-${file.name}`,\n              publicURL: publicUrl,\n              descricao: legenda?.legenda || `Imagem ${index + 1}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n              urlError: null,\n            };\n          })\n        );\n\n        console.log('Imagens processadas:', imagensEncontradas.length);\n        \n        // Salvar no cache com versão\n        cacheRef.current[cacheKey] = imagensEncontradas;\n        setImagens(imagensEncontradas);\n        \n        if (imagensEncontradas.length === 0) {\n          setError('Nenhuma imagem encontrada para esta escola.');\n        }\n      } catch (error) {\n        console.error('Erro ao processar imagens:', error);\n        setError('Erro ao carregar imagens da escola.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarImagens();\n  }, [escola_id, cacheVersion]);\n\n  if (loading) {\n    return (\n      <div className=\"text-gray-500 flex items-center gap-2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n        Carregando imagens da escola...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-red-600 flex items-center gap-2\">\n        <span>{error}</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (!imagens.length) {\n    return (\n      <div className=\"text-yellow-700 flex items-center gap-2\">\n        <span>Nenhuma imagem encontrada para esta escola.</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => {\n              if (img.publicURL) {\n                const index = imagens.findIndex(i => i.publicURL === img.publicURL);\n                setCurrentImageIndex(index);\n                setImagemZoom(img);\n              }\n            }}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.descricao}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.descricao && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.descricao}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom Reutilizável */}\n      <ReusableImageZoom\n        images={imagens}\n        currentImageIndex={currentImageIndex}\n        isOpen={!!imagemZoom}\n        onClose={fecharZoom}\n        onImageChange={setCurrentImageIndex}\n        showNavigation={true}\n        showControls={true}\n        showCounter={true}\n        showCaption={true}\n      />\n    </section>\n  );\n};\n\nImagensdasEscolas.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagensdasEscolas);\n","import React, { memo } from 'react';\nimport ImagensdasEscolas from '../ImagensdasEscolas';\nimport './HistoriaEscola.css';\n\nconst HistoriaEscola = memo(({ escola, refreshKey = 0 }) => {\n  if (!escola?.historia_da_escola) return null;\n\n  // Usar o HTML diretamente, igual à história dos professores\n  const htmlContent = escola.historia_da_escola;\n\n  return (\n    <div className=\"mt-8 mb-12 flex flex-col items-center\">\n      {/* Header externo ao card */}\n      <header className=\"mb-6 sm:mb-8 max-w-4xl mx-auto w-full\">\n        <div className=\"flex items-center gap-3 mb-3 sm:mb-4\">\n          <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n            <img \n              src={`${process.env.PUBLIC_URL}/onca.svg`} \n              alt=\"Ícone de onça\" \n              className=\"w-18 h-18 sm:w-36 sm:h-36\" \n              style={{ \n                filter: 'none', \n                borderRadius: '0', \n                boxShadow: 'none', \n                margin: '0',\n                padding: '0',\n                border: 'none',\n                outline: 'none',\n                transform: 'translateY(17px)'\n              }}\n              aria-hidden=\"true\"\n            />\n          </span>\n          <h2 className=\"text-xl sm:text-2xl font-bold text-black m-0\">\n            História da Escola\n          </h2>\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      {/* Card com conteúdo centralizado */}\n      <article\n        className=\"\n          px-4 sm:px-6 md:px-8 py-6\n          bg-white rounded-2xl shadow-lg\n          prose prose-sm sm:prose-base md:prose-lg lg:prose-xl\n          prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n          prose-img:rounded-xl prose-img:shadow-lg\n          prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n          max-w-4xl mx-auto w-full\n        \"\n      >\n        <div \n          className=\"historia-escola-content prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\n            prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n            prose-img:rounded-xl prose-img:shadow-lg\n            prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n            prose-strong:text-green-800 prose-em:text-green-700\n            prose-blockquote:border-l-green-300 prose-blockquote:bg-green-50 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r-lg\n            prose-ul:text-black prose-ol:text-black prose-li:text-black\n            prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n\n        {/* Imagens da escola, responsivas e modulares */}\n        <ImagensdasEscolas escola_id={escola.id} refreshKey={refreshKey} />\n      </article>\n    </div>\n  );\n});\n\nexport default HistoriaEscola; ","import React, { memo } from 'react';\n\nconst BooleanValue = memo(({ value }) => {\n  if (value === undefined || value === null) return null;\n\n  return (\n    <span className={`font-medium ${value ? 'text-green-600' : 'text-neutral-400'}`}>\n      {value ? 'Sim' : 'Não'}\n    </span>\n  );\n});\n\nexport default BooleanValue; ","import React, { memo, useState } from 'react';\nimport { Sparkles, BookOpen, Users, MessageCircle, Clock } from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../../components/BooleanValue';\n\n// Função utilitária para transformar o texto em lista\nfunction parseModalidadeEnsino(text) {\n  if (!text || typeof text !== 'string') return [];\n  // Divide pelo traço longo (–, U+2013) e remove espaços extras\n  return text\n    .split('–')\n    .map(item => item.trim())\n    .filter(Boolean);\n}\n\n// Componente de lista expansível\nconst ExpandableList = ({ items, maxVisible = 3 }) => {\n  if (!items || items.length === 0) return null;\n\n  return (\n    <div className=\"-mt-1\">\n      <ul className=\"list-none text-gray-800 text-xs pl-0 ml-0\">\n        {items.map((item, idx) => (\n          <li key={idx} className=\"leading-tight m-0 p-0 pl-0 ml-0 flex items-start\">\n            <span className=\"mr-1 text-green-700 select-none\" style={{minWidth: '1em', display: 'inline-block'}}>•</span>\n            <span>{item}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// MiniCard padronizado\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"bg-green-50 hover:bg-green-100 rounded-lg p-3 transition-all duration-200 hover:shadow-sm h-full flex flex-col\">\n    {/* Header com ícone e label */}\n    <div className=\"flex items-center gap-2 mb-2 flex-shrink-0\">\n      <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      <span className=\"text-xs text-gray-600 font-medium\">{label}</span>\n    </div>\n    {/* Conteúdo do valor */}\n    <div className=\"flex-1 flex items-start\">\n      <div className=\"text-sm text-gray-800 font-medium break-words\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Modalidades = memo(({ escola }) => {\n  if (!escola) return null;\n\n  // Cards principais de Modalidades\n  const turnosValue = escola.turnos_funcionamento || escola['turnos_funcionamento'] || '';\n  const modalidadeList = parseModalidadeEnsino(escola.modalidade_ensino);\n  \n  // Card de Modalidade de Ensino (separado para ocupar linha inteira)\n  const modalidadeEnsinoCard = {\n    icon: Sparkles,\n    label: 'Modalidade de Ensino',\n    value: <ExpandableList items={modalidadeList} maxVisible={3} />,\n  };\n\n  // Outros cards para o grid\n  const gridItems = [\n    turnosValue && {\n      icon: Clock,\n      label: 'Turnos de Funcionamento',\n      value: turnosValue,\n    },\n    {\n      icon: Users,\n      label: 'Número de Alunos',\n      value: escola.numero_alunos,\n    },\n    {\n      icon: MessageCircle,\n      label: 'Línguas Faladas',\n      value: escola.linguas_faladas,\n    },\n  ].filter(Boolean);\n\n  // Cards de Materiais Pedagógicos\n  const materiaisItems = [\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Não Indígena',\n      value: <BooleanValue value={escola.material_nao_indigena} />,\n    },\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Indígena',\n      value: <BooleanValue value={escola.material_indigena} />,\n    },\n  ];\n\n  return (\n    <>\n      <InfoSection>\n        {/* Modalidade de Ensino em linha inteira */}\n        <div className=\"mb-4 bg-green-50 rounded-lg p-4\">\n          <div className=\"flex items-start gap-3 mb-2\">\n            <Sparkles className=\"w-5 h-5 text-green-600 mt-0.5 flex-shrink-0\" />\n            <span className=\"text-sm font-medium text-gray-700\">Modalidade de Ensino</span>\n          </div>\n          <div className=\"ml-8\">\n            <ExpandableList items={modalidadeList} maxVisible={3} />\n          </div>\n        </div>\n        \n        {/* Grid com os outros cards */}\n        <div className=\"grid grid-cols-2 lg:grid-cols-3 gap-4 mt-1 items-stretch\">\n          {gridItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n      \n      <InfoSection \n        title=\"Materiais Pedagógicos\" \n        icon={BookOpen}\n        description=\"Diferenciados e não diferenciados, produzidos dentro e fora da comunidade.\"\n      >\n        <div className=\"grid grid-cols-2 gap-4 mt-1 items-stretch\">\n          {materiaisItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default Modalidades; ","import React, { memo } from 'react';\nimport {\n  Home,\n  Droplet,\n  Trash2,\n  Wifi,\n  Monitor,\n  MapPin,\n  Utensils,\n  Apple,\n  ChefHat,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../BooleanValue';\n\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"bg-green-50 hover:bg-green-100 rounded-lg p-3 transition-all duration-200 hover:shadow-sm h-full flex flex-col\">\n    {/* Header com ícone e label */}\n    <div className=\"flex items-center gap-2 mb-2 flex-shrink-0\">\n      <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      <span className=\"text-xs text-gray-600 font-medium\">{label}</span>\n    </div>\n    {/* Conteúdo do valor */}\n    <div className=\"flex-1 flex items-start\">\n      <div className=\"text-sm text-gray-800 font-medium break-words\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Infraestrutura = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const items = [\n    {\n      icon: Droplet,\n      label: 'Acesso à Água',\n      value: escola.acesso_agua,\n    },\n    {\n      icon: Trash2,\n      label: 'Coleta de Lixo',\n      value: escola.coleta_lixo,\n    },\n    {\n      icon: Wifi,\n      label: 'Acesso à Internet',\n      value: <BooleanValue value={escola.acesso_internet} />,\n    },\n    {\n      icon: Monitor,\n      label: 'Equipamentos Tecnológicos',\n      value: escola.equipamentos,\n    },\n    {\n      icon: MapPin,\n      label: 'Modo de Acesso à Escola',\n      value: escola.modo_acesso,\n    },\n    {\n      icon: Utensils,\n      label: 'Cozinha',\n      value: <BooleanValue value={escola.cozinha} />,\n    },\n    {\n      icon: Apple,\n      label: 'Merenda Escolar',\n      value: <BooleanValue value={escola.merenda_escolar} />,\n    },\n    {\n      icon: ChefHat,\n      label: 'Merenda Diferenciada',\n      value: <BooleanValue value={escola.diferenciada} />,\n    },\n  ];\n\n  return (\n    <InfoSection title=\"Infraestrutura\" icon={Home}>\n      {escola.espaco_escolar && (\n        <div className=\"p-2 text-sm text-gray-800 border-b border-gray-200 whitespace-pre-wrap\">\n          {escola.espaco_escolar}\n        </div>\n      )}\n      <div className=\"grid grid-cols-2 lg:grid-cols-3 gap-4 mt-3 items-stretch\">\n        {items.map((item, idx) => (\n          <MiniCard\n            key={idx}\n            icon={item.icon}\n            label={item.label}\n            value={item.value}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default Infraestrutura;\n","import React, { memo } from 'react';\nimport {\n  UsersRound,\n  Star,\n  User,\n  UserCheck,\n  UserMinus,\n  MessageCircle,\n  NotebookPen,\n  Check,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst MiniCard = ({ icon: Icon, label, value, description }) => (\n  <div className=\"bg-green-50 hover:bg-green-100 rounded-lg p-3 transition-all duration-200 hover:shadow-sm h-full flex flex-col\">\n    {/* Header com ícone e label */}\n    <div className=\"flex items-center gap-2 mb-2 flex-shrink-0\">\n      <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      <span className=\"text-xs text-gray-600 font-medium\">{label}</span>\n    </div>\n    {/* Conteúdo do valor */}\n    <div className=\"flex-1 flex flex-col\">\n      <div className=\"text-sm text-gray-800 font-medium mb-2 break-words\">{value}</div>\n      {description && (\n        <div className=\"text-xs text-gray-600 whitespace-pre-line leading-relaxed break-words\">\n          {description}\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nconst formatarNomeProfessor = (nome) => {\n  if (!nome) return nome;\n\n  const padroesIndigenas = [\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+\\(([^)]+)\\)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+-\\s+([^)]+)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+ou\\s+([^)]+)/,\n  ];\n\n  for (const padrao of padroesIndigenas) {\n    const match = nome.match(padrao);\n    if (match) {\n      const nomeIndigena = `${match[1]} ${match[2]}`;\n      const nomePortugues = match[3];\n      return `${nomeIndigena} (${nomePortugues})`;\n    }\n  }\n\n  return nome.includes('(') && nome.includes(')') ? nome : nome;\n};\n\nconst formatarFormacaoProfessores = (formacao) => {\n  if (!formacao) return null;\n\n  const [status, ...resto] = formacao.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst formatarFormacaoContinuada = (valor) => {\n  if (!valor) return null;\n\n  const [status, ...resto] = valor.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst renderBooleanStatus = (valor) => {\n  const normalizado = String(valor).trim().toLowerCase();\n  if (normalizado === 'sim') {\n    return (\n      <div className=\"flex items-center gap-1 text-green-700\">\n        <Check className=\"w-5 h-5\" />\n        Sim\n      </div>\n    );\n  } else if (normalizado === 'não' || normalizado === 'nao') {\n    return (\n      <div className=\"flex items-center gap-1 text-gray-500\">\n        <X className=\"w-5 h-5\" />\n        Não\n      </div>\n    );\n  }\n  return valor;\n};\n\nconst GestaoProfessores = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const formacao = formatarFormacaoProfessores(escola.formacao_professores);\n  const continuada = formatarFormacaoContinuada(escola.formacao_continuada);\n\n  return (\n    <InfoSection title=\"Gestores\" icon={UsersRound}>\n      <div className=\"space-y-4 mt-1\">\n        {/* Cards em grid de 2 colunas em mobile, 3 em desktop */}\n        <div className=\"grid grid-cols-2 lg:grid-cols-3 gap-4 items-stretch\">\n          <MiniCard\n            icon={UserCheck}\n            label=\"Professores Indígenas\"\n            value={escola.professores_indigenas}\n          />\n          <MiniCard\n            icon={UserMinus}\n            label=\"Professores Não Indígenas\"\n            value={escola.professores_nao_indigenas}\n          />\n          <MiniCard\n            icon={MessageCircle}\n            label=\"Professores que falam língua indígena\"\n            value={renderBooleanStatus(escola.professores_falam_lingua)}\n          />\n        </div>\n        \n        {/* Card de Formação em linha inteira */}\n        {formacao?.status && (\n          <MiniCard\n            icon={Star}\n            label=\"Formação dos Professores\"\n            value={renderBooleanStatus(formacao.status)}\n            description={formacao.descricao}\n          />\n        )}\n      </div>\n\n      <div className=\"space-y-4 mt-4\">\n        <MiniCard\n          icon={User}\n          label=\"Gestão/Nome\"\n          value={escola.gestao}\n        />\n        <MiniCard\n          icon={UsersRound}\n          label=\"Outros Funcionários\"\n          value={escola.outros_funcionarios}\n        />\n        {continuada?.status && (\n          <MiniCard\n            icon={NotebookPen}\n            label=\"Visitas de Supervisores e Formação Continuada\"\n            value={renderBooleanStatus(continuada.status)}\n            description={continuada.descricao}\n          />\n        )}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default GestaoProfessores;\n","import React, { memo } from 'react';\nimport {\n  Target,\n  BookOpen,\n  GraduationCap,\n  Users,\n  Heart,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst ProjectCard = ({ icon: Icon, label, value }) => {\n  const isNegative = value?.trim().toLowerCase() === 'não';\n\n  return (\n    <div className=\"bg-green-50 hover:bg-green-100 rounded-lg p-4 transition-all duration-200 hover:shadow-sm h-full flex flex-col\">\n      <div className=\"flex items-start gap-3 flex-1\">\n        <Icon className=\"w-5 h-5 text-green-600 mt-0.5 flex-shrink-0\" />\n        <div className=\"flex-1 min-w-0 flex flex-col\">\n          <div className=\"text-sm font-medium text-gray-700 mb-3 flex-shrink-0\">{label}</div>\n          <div className=\"flex-1 flex items-start\">\n            {isNegative ? (\n              <div className=\"text-sm text-gray-500 flex items-center gap-1\">\n                <X className=\"w-4 h-4 text-gray-400 flex-shrink-0\" />\n                Não\n              </div>\n            ) : (\n              <div className=\"text-sm text-gray-800 leading-relaxed\">\n                {value}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ProjetosParcerias = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const projectsData = [\n    {\n      field: 'projetos_andamento',\n      icon: BookOpen,\n      label: 'Projetos em andamento',\n    },\n    {\n      field: 'parcerias_universidades',\n      icon: GraduationCap,\n      label: 'Parcerias com universidades',\n    },\n    {\n      field: 'acoes_ongs',\n      icon: Users,\n      label: 'Ações com ONGs ou coletivos',\n    },\n    {\n      field: 'desejos_comunidade',\n      icon: Heart,\n      label: 'Desejos da comunidade para a escola',\n    },\n    {\n      field: 'parcerias_municipio',\n      icon: Target,\n      label: 'Parcerias com o município',\n    },\n  ];\n\n  const availableProjects = projectsData.filter(\n    project => escola[project.field] && escola[project.field].trim()\n  );\n\n  if (availableProjects.length === 0) return null;\n\n  return (\n    <InfoSection title=\"Projetos e Parcerias\" icon={Target}>\n      <div className=\"grid grid-cols-1 gap-4 items-stretch\">\n        {availableProjects.map((project) => (\n          <ProjectCard\n            key={project.field}\n            icon={project.icon}\n            label={project.label}\n            value={escola[project.field]}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default ProjetosParcerias;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { supabase } from '../../../supabaseClient';\nimport { getLegendaByImageUrlFlexivel } from '../../../services/legendasService';\nimport ReusableImageZoom from '../../ReusableImageZoom';\nimport '../../ReusableImageZoom.css';\n\nconst ImagemHistoriadoProfessor = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    setCurrentImageIndex(0);\n  }, []);\n\n\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagemHistoriadoProfessor: refreshKey mudou, forçando recarga');\n      setImagens([]);\n      setLoading(true);\n      setError(null);\n    }\n  }, [refreshKey]);\n\n  useEffect(() => {\n    if (!escola_id) return;\n\n    setLoading(true);\n    setError(null);\n\n    // Busca arquivos do bucket diretamente\n    supabase\n      .storage\n      .from('imagens-professores')\n      .list(`${escola_id}/`)\n      .then(async ({ data, error }) => {\n        if (error) {\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n\n        if (data && data.length > 0) {\n          console.log('Arquivos de professores encontrados:', data.length);\n          const imagensComUrl = await Promise.all(data.map(async (file, idx) => {\n            const { data: { publicUrl } } = supabase\n              .storage\n              .from('imagens-professores')\n              .getPublicUrl(`${escola_id}/${file.name}`);\n            \n            // Extrair gênero do nome do arquivo\n            let genero = 'professor';\n            if (file.name.startsWith('professora_')) {\n              genero = 'professora';\n            } else if (file.name.startsWith('professor_')) {\n              genero = 'professor';\n            }\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              const caminhoRelativo = `${escola_id}/${file.name}`;\n              console.log('Buscando legenda para professor:', caminhoRelativo);\n              legenda = await getLegendaByImageUrlFlexivel(caminhoRelativo, escola_id, {\n                categoria: 'professor',\n                tipo_foto: 'professor'\n              });\n              console.log('Legenda encontrada:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda:', error);\n            }\n\n            return {\n              id: idx + 1,\n              publicURL: publicUrl,\n              genero,\n              nome: file.name,\n              created_at: file.created_at || '',\n              legenda: legenda?.legenda || `Imagem do ${genero}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n            };\n          }));\n\n          setImagens(imagensComUrl);\n        } else {\n          setImagens([]);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(`Erro inesperado: ${err.message}`);\n        setLoading(false);\n      });\n  }, [escola_id]);\n\n\n  if (loading) {\n    return <div className=\"text-gray-500\">Carregando imagens do professor...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-600\">Erro ao carregar imagens: {error}</div>;\n  }\n\n  if (!imagens.length) {\n    return null;\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img, index) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => {\n              if (img.publicURL) {\n                setCurrentImageIndex(index);\n                setImagemZoom(img);\n              }\n            }}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.legenda}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.legenda && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.legenda}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom Reutilizável */}\n      <ReusableImageZoom\n        images={imagens}\n        currentImageIndex={currentImageIndex}\n        isOpen={!!imagemZoom}\n        onClose={fecharZoom}\n        onImageChange={setCurrentImageIndex}\n        showNavigation={true}\n        showControls={true}\n        showCounter={true}\n        showCaption={true}\n      />\n    </section>\n  );\n};\n\nImagemHistoriadoProfessor.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagemHistoriadoProfessor);\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { User, AlertCircle, Loader2 } from 'lucide-react';\n\n/**\n * Componente Avatar modular e expansível\n * Suporta diferentes tamanhos, formas, temas e funcionalidades avançadas\n */\nconst Avatar = ({\n  // Props básicas\n  src,\n  alt,\n  name,\n  \n  // Tamanhos\n  size = 'medium',\n  customSize,\n  \n  // Forma e estilo\n  shape = 'circle',\n  variant = 'default',\n  \n  // Estados e interações\n  loading = false,\n  error = false,\n  clickable = false,\n  \n  // Customização visual\n  className = '',\n  borderColor = 'border-green-200',\n  backgroundColor = 'bg-gray-100',\n  textColor = 'text-gray-600',\n  \n  // Funcionalidades avançadas\n  badge,\n  badgePosition = 'bottom-right',\n  badgeColor = 'bg-green-500',\n  badgeSize = 'small',\n  \n  // Callbacks\n  onClick,\n  onError,\n  onLoad,\n  \n  // Configurações de fallback\n  fallbackIcon = 'user',\n  showInitials = true,\n  maxInitials = 2,\n  \n  // Configurações de imagem\n  lazy = true,\n  priority = false,\n  \n  // Props adicionais\n  ...props\n}) => {\n  const [imageError, setImageError] = useState(false);\n  const [imageLoading, setImageLoading] = useState(!!src);\n\n  // Configurações de tamanho\n  const sizeConfig = useMemo(() => {\n    if (customSize) {\n      return {\n        container: 'w-full h-full',\n        text: 'text-sm',\n        icon: 'w-6 h-6',\n        badge: 'w-3 h-3',\n        customSize: customSize\n      };\n    }\n\n    const sizes = {\n      xs: {\n        container: 'w-6 h-6',\n        text: 'text-xs',\n        icon: 'w-3 h-3',\n        badge: 'w-2 h-2'\n      },\n      small: {\n        container: 'w-8 h-8',\n        text: 'text-xs',\n        icon: 'w-4 h-4',\n        badge: 'w-2 h-2'\n      },\n      medium: {\n        container: 'w-12 h-12 sm:w-16 sm:h-16',\n        text: 'text-sm sm:text-base',\n        icon: 'w-6 h-6 sm:w-8 sm:h-8',\n        badge: 'w-3 h-3'\n      },\n      large: {\n        container: 'w-16 h-16 sm:w-20 sm:h-20',\n        text: 'text-base sm:text-lg',\n        icon: 'w-8 h-8 sm:w-10 sm:h-10',\n        badge: 'w-4 h-4'\n      },\n      xlarge: {\n        container: 'w-20 h-20 sm:w-24 sm:h-24',\n        text: 'text-lg sm:text-xl',\n        icon: 'w-10 h-10 sm:w-12 sm:h-12',\n        badge: 'w-5 h-5'\n      },\n      xxlarge: {\n        container: 'w-24 h-24 sm:w-32 sm:h-32',\n        text: 'text-xl sm:text-2xl',\n        icon: 'w-12 h-12 sm:w-16 sm:h-16',\n        badge: 'w-6 h-6'\n      }\n    };\n\n    return sizes[size] || sizes.medium;\n  }, [size, customSize]);\n\n  // Configurações de forma\n  const shapeConfig = useMemo(() => {\n    const shapes = {\n      circle: 'rounded-full',\n      square: 'rounded-lg',\n      rounded: 'rounded-xl',\n      none: 'rounded-none'\n    };\n    return shapes[shape] || shapes.circle;\n  }, [shape]);\n\n  // Configurações de variante\n  const variantConfig = useMemo(() => {\n    const variants = {\n      default: {\n        border: 'border-2',\n        shadow: 'shadow-md',\n        hover: 'hover:shadow-lg'\n      },\n      minimal: {\n        border: 'border',\n        shadow: 'shadow-sm',\n        hover: 'hover:shadow-md'\n      },\n      flat: {\n        border: 'border-2',\n        shadow: 'shadow-none',\n        hover: 'hover:shadow-sm'\n      },\n      elevated: {\n        border: 'border-2',\n        shadow: 'shadow-lg',\n        hover: 'hover:shadow-xl'\n      }\n    };\n    return variants[variant] || variants.default;\n  }, [variant]);\n\n  // Configurações de badge\n  const badgeConfig = useMemo(() => {\n    const positions = {\n      'top-left': 'top-0 left-0',\n      'top-right': 'top-0 right-0',\n      'bottom-left': 'bottom-0 left-0',\n      'bottom-right': 'bottom-0 right-0',\n      'center': 'top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2'\n    };\n\n    const badgeSizes = {\n      small: 'w-3 h-3',\n      medium: 'w-4 h-4',\n      large: 'w-5 h-5'\n    };\n\n    return {\n      position: positions[badgePosition] || positions['bottom-right'],\n      size: badgeSizes[badgeSize] || badgeSizes.small\n    };\n  }, [badgePosition, badgeSize]);\n\n  // Gerar iniciais do nome\n  const initials = useMemo(() => {\n    if (!name || !showInitials) return '';\n    \n    const words = name.trim().split(' ');\n    const initialsArray = words\n      .slice(0, maxInitials)\n      .map(word => word.charAt(0).toUpperCase())\n      .filter(char => char.match(/[A-Z]/));\n    \n    return initialsArray.join('');\n  }, [name, showInitials, maxInitials]);\n\n  // Determinar ícone de fallback\n  const FallbackIcon = useMemo(() => {\n    const icons = {\n      user: User,\n      alert: AlertCircle,\n      loading: Loader2\n    };\n    return icons[fallbackIcon] || icons.user;\n  }, [fallbackIcon]);\n\n  // Handlers\n  const handleImageLoad = () => {\n    setImageLoading(false);\n    setImageError(false);\n    onLoad?.();\n  };\n\n  const handleImageError = () => {\n    setImageLoading(false);\n    setImageError(true);\n    onError?.();\n  };\n\n  const handleClick = (e) => {\n    if (clickable || onClick) {\n      onClick?.(e);\n    }\n  };\n\n  // Determinar conteúdo a ser exibido\n  const shouldShowImage = src && !imageError && !loading;\n  const shouldShowInitials = !shouldShowImage && initials && !error;\n  const shouldShowIcon = !shouldShowImage && !shouldShowInitials && !error;\n\n  // Classes base\n  const baseClasses = `\n    ${sizeConfig.container}\n    ${shapeConfig}\n    ${variantConfig.border}\n    ${borderColor}\n    ${variantConfig.shadow}\n    ${clickable || onClick ? 'cursor-pointer' : ''}\n    ${variantConfig.hover}\n    transition-all duration-200\n    relative overflow-hidden\n    flex items-center justify-center\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div \n      className={baseClasses}\n      style={customSize ? { width: customSize, height: customSize } : undefined}\n      onClick={handleClick}\n      role={clickable || onClick ? 'button' : undefined}\n      tabIndex={clickable || onClick ? 0 : undefined}\n      {...props}\n    >\n      {/* Estado de loading */}\n      {loading && (\n        <div className={`absolute inset-0 ${backgroundColor} flex items-center justify-center`}>\n          <Loader2 className={`${sizeConfig.icon} animate-spin text-green-600`} />\n        </div>\n      )}\n\n      {/* Imagem */}\n      {shouldShowImage && (\n        <img\n          src={src}\n          alt={alt || `Avatar de ${name}` || 'Avatar'}\n          className={`w-full h-full object-cover ${imageLoading ? 'opacity-0' : 'opacity-100'} transition-opacity duration-200`}\n          onLoad={handleImageLoad}\n          onError={handleImageError}\n          loading={lazy ? 'lazy' : 'eager'}\n          {...(priority && { fetchPriority: 'high' })}\n        />\n      )}\n\n      {/* Estado de loading da imagem */}\n      {imageLoading && shouldShowImage && (\n        <div className={`absolute inset-0 ${backgroundColor} flex items-center justify-center`}>\n          <Loader2 className={`${sizeConfig.icon} animate-spin text-green-600`} />\n        </div>\n      )}\n\n      {/* Iniciais */}\n      {shouldShowInitials && (\n        <span className={`${sizeConfig.text} font-semibold ${textColor}`}>\n          {initials}\n        </span>\n      )}\n\n      {/* Ícone de fallback */}\n      {shouldShowIcon && (\n        <FallbackIcon className={`${sizeConfig.icon} ${textColor}`} />\n      )}\n\n      {/* Estado de erro */}\n      {error && (\n        <div className={`absolute inset-0 ${backgroundColor} flex items-center justify-center`}>\n          <AlertCircle className={`${sizeConfig.icon} text-red-500`} />\n        </div>\n      )}\n\n      {/* Badge */}\n      {badge && (\n        <div className={`absolute ${badgeConfig.position} ${badgeConfig.size} ${badgeColor} rounded-full border-2 border-white`}>\n          {typeof badge === 'string' ? (\n            <span className=\"text-xs text-white font-bold flex items-center justify-center h-full\">\n              {badge}\n            </span>\n          ) : (\n            badge\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nAvatar.propTypes = {\n  // Props básicas\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  name: PropTypes.string,\n  \n  // Tamanhos\n  size: PropTypes.oneOf(['xs', 'small', 'medium', 'large', 'xlarge', 'xxlarge']),\n  customSize: PropTypes.string,\n  \n  // Forma e estilo\n  shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'none']),\n  variant: PropTypes.oneOf(['default', 'minimal', 'flat', 'elevated']),\n  \n  // Estados e interações\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  clickable: PropTypes.bool,\n  \n  // Customização visual\n  className: PropTypes.string,\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  textColor: PropTypes.string,\n  \n  // Funcionalidades avançadas\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  badgePosition: PropTypes.oneOf(['top-left', 'top-right', 'bottom-left', 'bottom-right', 'center']),\n  badgeColor: PropTypes.string,\n  badgeSize: PropTypes.oneOf(['small', 'medium', 'large']),\n  \n  // Callbacks\n  onClick: PropTypes.func,\n  onError: PropTypes.func,\n  onLoad: PropTypes.func,\n  \n  // Configurações de fallback\n  fallbackIcon: PropTypes.oneOf(['user', 'alert', 'loading']),\n  showInitials: PropTypes.bool,\n  maxInitials: PropTypes.number,\n  \n  // Configurações de imagem\n  lazy: PropTypes.bool,\n  priority: PropTypes.bool\n};\n\nexport default Avatar;\n","/**\n * Configurações de temas para o componente Avatar\n * Facilita a customização visual e mantém consistência\n */\n\nexport const avatarThemes = {\n  // Tema padrão (verde)\n  default: {\n    borderColor: 'border-green-200',\n    backgroundColor: 'bg-green-50',\n    textColor: 'text-green-700',\n    badgeColor: 'bg-green-500',\n    hoverBorderColor: 'hover:border-green-300'\n  },\n\n  // Tema professor (azul)\n  professor: {\n    borderColor: 'border-blue-200',\n    backgroundColor: 'bg-blue-50',\n    textColor: 'text-blue-700',\n    badgeColor: 'bg-blue-500',\n    hoverBorderColor: 'hover:border-blue-300'\n  },\n\n  // Tema escola (laranja)\n  escola: {\n    borderColor: 'border-orange-200',\n    backgroundColor: 'bg-orange-50',\n    textColor: 'text-orange-700',\n    badgeColor: 'bg-orange-500',\n    hoverBorderColor: 'hover:border-orange-300'\n  },\n\n  // Tema neutro (cinza)\n  neutral: {\n    borderColor: 'border-gray-200',\n    backgroundColor: 'bg-gray-50',\n    textColor: 'text-gray-700',\n    badgeColor: 'bg-gray-500',\n    hoverBorderColor: 'hover:border-gray-300'\n  },\n\n  // Tema indígena (marrom/terra)\n  indigena: {\n    borderColor: 'border-amber-200',\n    backgroundColor: 'bg-amber-50',\n    textColor: 'text-amber-800',\n    badgeColor: 'bg-amber-600',\n    hoverBorderColor: 'hover:border-amber-300'\n  },\n\n  // Tema sucesso (verde escuro)\n  success: {\n    borderColor: 'border-emerald-200',\n    backgroundColor: 'bg-emerald-50',\n    textColor: 'text-emerald-700',\n    badgeColor: 'bg-emerald-500',\n    hoverBorderColor: 'hover:border-emerald-300'\n  },\n\n  // Tema aviso (amarelo)\n  warning: {\n    borderColor: 'border-yellow-200',\n    backgroundColor: 'bg-yellow-50',\n    textColor: 'text-yellow-800',\n    badgeColor: 'bg-yellow-500',\n    hoverBorderColor: 'hover:border-yellow-300'\n  },\n\n  // Tema erro (vermelho)\n  error: {\n    borderColor: 'border-red-200',\n    backgroundColor: 'bg-red-50',\n    textColor: 'text-red-700',\n    badgeColor: 'bg-red-500',\n    hoverBorderColor: 'hover:border-red-300'\n  }\n};\n\n/**\n * Configurações de tamanhos predefinidos\n */\nexport const avatarSizes = {\n  xs: 'w-6 h-6',\n  small: 'w-8 h-8',\n  medium: 'w-12 h-12 sm:w-16 sm:h-16',\n  large: 'w-16 h-16 sm:w-20 sm:h-20',\n  xlarge: 'w-20 h-20 sm:w-24 sm:h-24',\n  xxlarge: 'w-24 h-24 sm:w-32 sm:h-32'\n};\n\n/**\n * Configurações de formas\n */\nexport const avatarShapes = {\n  circle: 'rounded-full',\n  square: 'rounded-lg',\n  rounded: 'rounded-xl',\n  none: 'rounded-none'\n};\n\n/**\n * Configurações de variantes de estilo\n */\nexport const avatarVariants = {\n  default: {\n    border: 'border-2',\n    shadow: 'shadow-md',\n    hover: 'hover:shadow-lg'\n  },\n  minimal: {\n    border: 'border',\n    shadow: 'shadow-sm',\n    hover: 'hover:shadow-md'\n  },\n  flat: {\n    border: 'border-2',\n    shadow: 'shadow-none',\n    hover: 'hover:shadow-sm'\n  },\n  elevated: {\n    border: 'border-2',\n    shadow: 'shadow-lg',\n    hover: 'hover:shadow-xl'\n  }\n};\n\n/**\n * Configurações de badges\n */\nexport const badgePositions = {\n  'top-left': 'top-0 left-0',\n  'top-right': 'top-0 right-0',\n  'bottom-left': 'bottom-0 left-0',\n  'bottom-right': 'bottom-0 right-0',\n  'center': 'top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2'\n};\n\nexport const badgeSizes = {\n  small: 'w-3 h-3',\n  medium: 'w-4 h-4',\n  large: 'w-5 h-5'\n};\n\n/**\n * Função helper para aplicar tema\n */\nexport const applyTheme = (themeName, customTheme = {}) => {\n  const baseTheme = avatarThemes[themeName] || avatarThemes.default;\n  return { ...baseTheme, ...customTheme };\n};\n\n/**\n * Função helper para gerar classes CSS do tema\n */\nexport const getThemeClasses = (theme) => {\n  return {\n    container: `${theme.borderColor} ${theme.backgroundColor} ${theme.hoverBorderColor}`,\n    text: theme.textColor,\n    badge: theme.badgeColor\n  };\n};\n\nexport default {\n  themes: avatarThemes,\n  sizes: avatarSizes,\n  shapes: avatarShapes,\n  variants: avatarVariants,\n  badgePositions,\n  badgeSizes,\n  applyTheme,\n  getThemeClasses\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../shared/Avatar';\nimport { avatarThemes } from '../../shared/AvatarThemes';\n\nconst FotoProfessor = ({ \n  fotoUrl, \n  nomeProfessor, \n  tamanho = 'medium',\n  className = '',\n  showFallback = true,\n  // Novas props para customização avançada\n  theme = 'professor',\n  variant = 'default',\n  shape = 'circle',\n  clickable = false,\n  badge,\n  badgePosition = 'bottom-right',\n  onClick,\n  onError,\n  onLoad,\n  // Props para compatibilidade com tamanhos antigos\n  size,\n  customSize\n}) => {\n  // Mapear tamanhos antigos para novos\n  const sizeMapping = {\n    small: 'medium',\n    medium: 'large', \n    large: 'xlarge',\n    xlarge: 'xxlarge'\n  };\n\n  const mappedSize = size || sizeMapping[tamanho] || 'large';\n  \n  // Aplicar tema\n  const themeConfig = avatarThemes[theme] || avatarThemes.professor;\n  \n  // Se não há URL da foto e não deve mostrar fallback, não renderiza nada\n  if (!fotoUrl && !showFallback) {\n    return null;\n  }\n\n  return (\n    <Avatar\n      src={fotoUrl}\n      name={nomeProfessor}\n      alt={nomeProfessor ? `Foto de ${nomeProfessor}` : 'Foto do professor'}\n      size={customSize ? undefined : mappedSize}\n      customSize={customSize}\n      shape={shape}\n      variant={variant}\n      theme={theme}\n      clickable={clickable}\n      badge={badge}\n      badgePosition={badgePosition}\n      className={className}\n      onClick={onClick}\n      onError={onError}\n      onLoad={onLoad}\n      showInitials={true}\n      maxInitials={2}\n      fallbackIcon=\"user\"\n      lazy={true}\n      // Aplicar tema customizado\n      borderColor={themeConfig.borderColor}\n      backgroundColor={themeConfig.backgroundColor}\n      textColor={themeConfig.textColor}\n      badgeColor={themeConfig.badgeColor}\n    />\n  );\n};\n\nFotoProfessor.propTypes = {\n  // Props básicas (compatibilidade)\n  fotoUrl: PropTypes.string,\n  nomeProfessor: PropTypes.string,\n  tamanho: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n  className: PropTypes.string,\n  showFallback: PropTypes.bool,\n  \n  // Novas props para customização avançada\n  theme: PropTypes.oneOf(['default', 'professor', 'escola', 'neutral', 'indigena', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOf(['default', 'minimal', 'flat', 'elevated']),\n  shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'none']),\n  clickable: PropTypes.bool,\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  badgePosition: PropTypes.oneOf(['top-left', 'top-right', 'bottom-left', 'bottom-right', 'center']),\n  onClick: PropTypes.func,\n  onError: PropTypes.func,\n  onLoad: PropTypes.func,\n  size: PropTypes.oneOf(['xs', 'small', 'medium', 'large', 'xlarge', 'xxlarge'])\n};\n\nexport default FotoProfessor;\n","import React, { memo, useEffect, useState, useCallback } from 'react';\nimport { ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { getHistoriasProfessor } from '../../../../services/historiaProfessorService';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport FotoProfessor from '../FotoProfessor';\nimport './HistoriadoProfessor.css';\n\nconst HistoriadoProfessor = memo(({ escola, refreshKey = 0 }) => {\n  const [historias, setHistorias] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentHistoriaIndex, setCurrentHistoriaIndex] = useState(0);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        fecharZoom();\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Carregar histórias do professor\n  useEffect(() => {\n    if (!escola?.id) {\n      setLoading(false);\n      return;\n    }\n    const carregarHistorias = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await getHistoriasProfessor(escola.id);\n        setHistorias(data || []);\n        setCurrentHistoriaIndex(0);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    carregarHistorias();\n  }, [escola?.id, refreshKey]);\n\n  // Navegação entre histórias\n  const nextHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev < historias.length - 1 ? prev + 1 : 0\n    );\n  }, [historias.length]);\n\n  const prevHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev > 0 ? prev - 1 : historias.length - 1\n    );\n  }, [historias.length]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (historias.length <= 1) return;\n      if (e.key === 'ArrowRight') {\n        nextHistoria();\n      } else if (e.key === 'ArrowLeft') {\n        prevHistoria();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [historias.length, nextHistoria, prevHistoria]);\n\n  if (loading) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-green-100/50\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando histórias do professor...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-red-100/50\">\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600\">Erro ao carregar histórias do professor: {error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!historias.length) {\n    return null;\n  }\n\n  const currentHistoria = historias[currentHistoriaIndex];\n  const hasMultipleHistorias = historias.length > 1;\n\n  return (\n    <div className=\"mt-8 mb-12 flex flex-col items-center\">\n      {/* Header externo ao card */}\n      <header className=\"mb-6 sm:mb-8 max-w-4xl mx-auto w-full\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n              <img \n                src={`${process.env.PUBLIC_URL}/passaro.svg`} \n                alt=\"Ícone de pássaro\" \n                className=\"w-12 h-12 sm:w-24 sm:h-24\" \n                style={{ \n                  filter: 'none', \n                  borderRadius: '0', \n                  boxShadow: 'none', \n                  margin: '0',\n                  padding: '0',\n                  border: 'none',\n                  outline: 'none'\n                }}\n                aria-hidden=\"true\"\n              />\n            </span>\n            <h2 className=\"text-xl sm:text-2xl font-bold text-black m-0\">\n              Depoimento dos Professores\n            </h2>\n          </div>\n          {hasMultipleHistorias && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span>{currentHistoriaIndex + 1} de {historias.length}</span>\n            </div>\n          )}\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      {/* Card com conteúdo centralizado */}\n      <article\n        className=\"\n          px-4 sm:px-6 md:px-8 py-6\n          bg-white rounded-2xl shadow-lg\n          prose prose-sm sm:prose-base md:prose-lg lg:prose-xl\n          prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n          prose-img:rounded-xl prose-img:shadow-lg\n          prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n          max-w-4xl mx-auto w-full\n        \"\n      >\n\n      {/* Conteúdo da história atual */}\n      <section className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {currentHistoria.nome_professor && (\n          <div className=\"flex flex-col items-center mb-6\">\n            <div className=\"flex-shrink-0\">\n              <FotoProfessor \n                fotoUrl={currentHistoria.foto_rosto}\n                nomeProfessor={currentHistoria.nome_professor}\n                customSize=\"200px\"\n                className=\"shadow-lg\"\n              />\n            </div>\n            <div className=\"w-full text-center\">\n              <h3 className=\"text-xl sm:text-2xl font-bold text-green-800 mb-4 m-0\">\n                {currentHistoria.nome_professor}\n              </h3>\n              <div \n                className=\"historia-professor-content prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\n                  prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n                  prose-img:rounded-xl prose-img:shadow-lg\n                  prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n                  prose-strong:text-green-800 prose-em:text-green-700\n                  prose-blockquote:border-l-green-300 prose-blockquote:bg-green-50 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r-lg\n                  prose-ul:text-black prose-ol:text-black prose-li:text-black\n                  prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm\"\n                dangerouslySetInnerHTML={{ __html: currentHistoria.historia }}\n              />\n            </div>\n          </div>\n        )}\n        {!currentHistoria.nome_professor && (\n          <div \n            className=\"historia-professor-content prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\n              prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n              prose-img:rounded-xl prose-img:shadow-lg\n              prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n              prose-strong:text-green-800 prose-em:text-green-700\n              prose-blockquote:border-l-green-300 prose-blockquote:bg-green-50 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r-lg\n              prose-ul:text-black prose-ol:text-black prose-li:text-black\n              prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm\"\n            dangerouslySetInnerHTML={{ __html: currentHistoria.historia }}\n          />\n        )}\n        {currentHistoria.imagem_public_url && (\n          <figure className=\"my-6\">\n            <div className=\"relative\">\n              <img\n                src={currentHistoria.imagem_public_url}\n                alt={currentHistoria.descricao_imagem || 'Imagem da história do professor'}\n                className=\"w-full max-w-2xl mx-auto rounded-xl shadow-lg cursor-pointer transition-transform duration-200 hover:scale-105\"\n                onClick={() => setImagemZoom(currentHistoria)}\n                loading=\"lazy\"\n              />\n              {currentHistoria.descricao_imagem && (\n                <figcaption className=\"text-center text-sm text-gray-600 mt-2\">\n                  {currentHistoria.descricao_imagem}\n                </figcaption>\n              )}\n            </div>\n          </figure>\n        )}\n      </section>\n\n      {/* Navegação entre histórias */}\n      {hasMultipleHistorias && (\n        <div className=\"flex items-center justify-between mt-8 pt-6 border-t border-gray-200\">\n          <button\n            onClick={prevHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"História anterior\"\n          >\n            <ChevronLeft className=\"w-5 h-5\" />\n            <span className=\"hidden sm:inline\">Anterior</span>\n          </button>\n          <div className=\"flex gap-2\">\n            {historias.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentHistoriaIndex(index)}\n                className={`w-3 h-3 rounded-full border-2 ${index === currentHistoriaIndex ? 'bg-green-600 border-green-600' : 'bg-white border-gray-300'} transition-colors`}\n                aria-label={`Ir para história ${index + 1}`}\n              />\n            ))}\n          </div>\n          <button\n            onClick={nextHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"Próxima história\"\n          >\n            <span className=\"hidden sm:inline\">Próxima</span>\n            <ChevronRight className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Modal de zoom da imagem */}\n      {imagemZoom && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-90\" onClick={fecharZoom}>\n          <div className=\"relative max-w-[90vw] max-h-[90vh] flex items-center justify-center p-4\" onClick={e => e.stopPropagation()}>\n            <button\n              className=\"absolute top-4 right-4 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-80 z-10\"\n              onClick={fecharZoom}\n              aria-label=\"Fechar zoom\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <img\n              src={imagemZoom.imagem_public_url}\n              alt={imagemZoom.descricao_imagem || 'Imagem da história do professor'}\n              className=\"max-w-full max-h-full object-contain rounded-xl shadow-2xl border-4 border-white\"\n            />\n            {imagemZoom.descricao_imagem && (\n              <figcaption className=\"absolute bottom-4 left-1/2 -translate-x-1/2 text-center text-sm text-white bg-black bg-opacity-50 rounded-lg px-3 py-1.5 max-w-2xl\">\n                {imagemZoom.descricao_imagem}\n              </figcaption>\n            )}\n          </div>\n        </div>\n      )}\n\n        <ImagemHistoriadoProfessor escola_id={escola.id} refreshKey={refreshKey} />\n      </article>\n    </div>\n  );\n});\n\nexport default HistoriadoProfessor;\n","import React, { memo } from 'react';\n\n// Import all section components\nimport BasicInfo from './BasicInfo';\nimport HistoriaEscola from './HistoriaEscola';\n// import PovosLinguas from './PovosLinguas';\nimport Modalidades from './Modalidades';\nimport Infraestrutura from './Infraestrutura';\nimport GestaoProfessores from './GestaoProfessores';\nimport ProjetosParcerias from './ProjetosParcerias';\n// import ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport HistoriadoProfessor from './HistoriadoProfessor';\n\n// CSS para layout Masonry real usando CSS columns\nconst masonryStyles = `\n  .masonry-grid {\n    column-count: 1;\n    column-gap: 1.5rem;\n    column-fill: balance;\n  }\n  \n  .masonry-grid > * {\n    display: block;\n    break-inside: avoid;\n    page-break-inside: avoid;\n    margin-bottom: 1.5rem;\n  }\n  \n  /* Mobile: 1 coluna */\n  @media (max-width: 767px) {\n    .masonry-grid {\n      column-count: 1;\n    }\n  }\n  \n  /* Tablet e Desktop: 2 colunas */\n  @media (min-width: 768px) {\n    .masonry-grid {\n      column-count: 2;\n    }\n  }\n`;\n\n// Componente wrapper para o grid\nconst GridLayoutWrapper = memo(({ children, shouldUseGrid }) => {\n  const containerClasses = shouldUseGrid\n    ? 'masonry-grid'\n    : 'space-y-4';\n\n  return (\n    <>\n      <style>{masonryStyles}</style>\n      <div className={`${containerClasses} transition-all duration-300 ease-in-out`}>\n        {children}\n      </div>\n    </>\n  );\n});\n\nconst EscolaInfo = memo(({ escola, shouldUseGrid = false, refreshKey = 0 }) => {\n  console.log(\"EscolaInfo recebeu:\", escola);\n  \n  if (!escola) {\n    console.log(\"EscolaInfo: escola é null ou undefined\");\n    return null;\n  }\n\n  // Componentes que serão renderizados no grid\n  const gridSections = [\n    { Component: BasicInfo, props: { escola } },\n    // { Component: PovosLinguas, props: { escola } },\n    { Component: Modalidades, props: { escola } },\n    { Component: Infraestrutura, props: { escola } },\n    { Component: GestaoProfessores, props: { escola } },\n    { Component: ProjetosParcerias, props: { escola } }\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Grid de cards */}\n      <GridLayoutWrapper shouldUseGrid={shouldUseGrid}>\n        {gridSections.map(({ Component, props }, index) => (\n          <Component key={index} {...props} />\n        ))}\n      </GridLayoutWrapper>\n\n      {/* História da Escola em destaque */}\n      <HistoriaEscola escola={escola} refreshKey={refreshKey} />\n      <HistoriadoProfessor escola={escola} refreshKey={refreshKey} />\n    </div>\n  );\n});\n\nexport default EscolaInfo; ","import React from 'react';\n\nconst HandFistIcon = ({ className = 'w-5 h-5', ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 256 256\"\n    fill=\"currentColor\"\n    className={className}\n    {...props}\n  >\n    <path d=\"M200,80H184V64a32,32,0,0,0-56-21.13A32,32,0,0,0,72.21,60.42,32,32,0,0,0,24,88v40a104,104,0,0,0,208,0V112A32,32,0,0,0,200,80ZM152,48a16,16,0,0,1,16,16V80H136V64A16,16,0,0,1,152,48ZM88,64a16,16,0,0,1,32,0v40a16,16,0,0,1-32,0ZM40,88a16,16,0,0,1,32,0v16a16,16,0,0,1-32,0Zm176,40a88,88,0,0,1-175.92,3.75A31.93,31.93,0,0,0,80,125.13a31.93,31.93,0,0,0,44.58,3.35,32.21,32.21,0,0,0,11.8,11.44A47.88,47.88,0,0,0,120,176a8,8,0,0,0,16,0,32,32,0,0,1,32-32,8,8,0,0,0,0-16H152a16,16,0,0,1-16-16V96h64a16,16,0,0,1,16,16Z\" />\n  </svg>\n);\n\nexport default HandFistIcon; ","import React, { memo } from 'react';\n\nconst InfoItem = memo(({ label, value, className = '', isTextArea = false }) => {\n  if (!value) return null;\n\n  const isFlexLayout = className.includes('flex flex-col');\n  const baseClasses = isFlexLayout \n    ? 'flex flex-col gap-1 text-sm py-0.5'\n    : 'grid grid-cols-[auto,1fr] gap-x-2 text-sm py-0.5';\n\n  return (\n    <div className={`${baseClasses} ${className}`}>\n      <span className=\"font-medium text-neutral-800\">{label}:</span>\n      {isTextArea ? (\n        <div className=\"text-neutral-600\">\n          <div className=\"whitespace-pre-wrap break-words text-sm leading-relaxed\">\n            {value}\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-neutral-600 break-words\">{value}</span>\n      )}\n    </div>\n  );\n});\n\nexport default InfoItem; ","import React, { memo } from 'react';\nimport HandFistIcon from './icons/HandFistIcon';\nimport InfoSection from './components/InfoSection';\nimport InfoItem from './components/InfoItem';\n\n// Wrapper para passar className maior ao ícone\nconst LargeHandFistIcon = (props) => <HandFistIcon className=\"w-8 h-8\" {...props} />;\n\nconst TerraIndigenaInfo = memo(({ terraIndigena }) => {\n  if (!terraIndigena) {\n    console.log(\"TerraIndigenaInfo: terraIndigena é null ou undefined\");\n    return null;\n  }\n\n  const formatarSuperficie = () => {\n    return terraIndigena.superficie ? \n      `Superfície: ${parseFloat(terraIndigena.superficie).toFixed(2)} ha` : null;\n  };\n\n  const formatarLocalizacao = () => {\n    return `${terraIndigena.municipio || ''}, ${terraIndigena.uf || ''}`.trim();\n  };\n\n  return (\n    <InfoSection title=\"Informações da Terra Indígena\" icon={LargeHandFistIcon}>\n      <InfoItem label=\"Povos Indígenas\" value={terraIndigena.etnia} />\n      <InfoItem label=\"Localização\" value={formatarLocalizacao()} />\n      <InfoItem label=\"Superfície\" value={formatarSuperficie()} />\n      <InfoItem label=\"Fase\" value={terraIndigena.fase} />\n      <InfoItem label=\"Modalidade\" value={terraIndigena.modalidade} />\n      <InfoItem label=\"Reestudo\" value={terraIndigena.reestudo} />\n      <InfoItem label=\"Coordenação Regional\" value={terraIndigena.cr} />\n      <InfoItem label=\"Faixa de Fronteira\" value={terraIndigena.faixa_fron} />\n      <InfoItem label=\"Unidade Administrativa\" value={terraIndigena.undadm_nom} />\n      <InfoItem label=\"Sigla Unidade\" value={terraIndigena.undadm_sig} />\n      <InfoItem label=\"Domínio\" value={terraIndigena.dominio_un} />\n      <InfoItem label=\"Data de Atualização\" value={terraIndigena.data_atual} />\n      <InfoItem label=\"Código Terra Indígena\" value={terraIndigena.terrai_cod} />\n      <InfoItem label=\"Código Unidade Administrativa\" value={terraIndigena.undadm_cod} />\n    </InfoSection>\n  );\n});\n\nexport default TerraIndigenaInfo; ","import React, { useState } from \"react\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n  LinkedinIcon,\n} from \"react-share\";\nimport { Share2, Link, Check, MessageCircle, Facebook, Twitter, Linkedin } from \"lucide-react\";\n\n// Componente Tooltip melhorado\nconst Tooltip = ({ children, text, position = \"top\" }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-3\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-3\",\n  };\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      onFocus={() => setIsVisible(true)}\n      onBlur={() => setIsVisible(false)}\n    >\n      {children}\n      {isVisible && (\n        <div className={`\n          absolute z-50 px-3 py-2 text-sm text-white bg-gray-900 rounded-lg shadow-xl whitespace-nowrap\n          ${positionClasses[position]}\n          animate-in fade-in-0 zoom-in-95 duration-200\n        `}>\n          {text}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShareButton = ({ onClick, url, title, description = \"\" }) => {\n  const [copied, setCopied] = useState(false);\n  const [showShareOptions, setShowShareOptions] = useState(false);\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 3000);\n    } catch (err) {\n      // Fallback para navegadores mais antigos\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 3000);\n    }\n  };\n\n  // Frases de compartilhamento mais atrativas\n  const shareTextOptions = [\n    `Conheça a escola indígena: ${title}`,\n    `Descubra esta escola indígena: ${title}`,\n    `Escola indígena incrível: ${title}`,\n    `Educação indígena em destaque: ${title}`,\n    `Conheça esta escola: ${title}`,\n    `Escola indígena que inspira: ${title}`,\n    `Educação que transforma: ${title}`,\n    `Escola indígena de referência: ${title}`\n  ];\n\n  // Seleciona uma frase aleatória para variar o conteúdo\n  const randomIndex = Math.floor(Math.random() * shareTextOptions.length);\n  const shareText = shareTextOptions[randomIndex];\n  const shareUrl = url || window.location.href;\n\n  const shareButtons = [\n    {\n      name: \"WhatsApp\",\n      icon: <MessageCircle className=\"w-5 h-5\" />,\n      color: \"bg-green-500 hover:bg-green-600\",\n      component: WhatsappShareButton,\n      props: { url: shareUrl, title: shareText }\n    },\n    {\n      name: \"Facebook\",\n      icon: <Facebook className=\"w-5 h-5\" />,\n      color: \"bg-blue-600 hover:bg-blue-700\",\n      component: FacebookShareButton,\n      props: { url: shareUrl, quote: shareText }\n    },\n    {\n      name: \"Twitter\",\n      icon: <Twitter className=\"w-5 h-5\" />,\n      color: \"bg-sky-500 hover:bg-sky-600\",\n      component: TwitterShareButton,\n      props: { url: shareUrl, title: shareText }\n    },\n    {\n      name: \"LinkedIn\",\n      icon: <Linkedin className=\"w-5 h-5\" />,\n      color: \"bg-blue-700 hover:bg-blue-800\",\n      component: LinkedinShareButton,\n      props: { url: shareUrl, title: title, summary: description }\n    }\n  ];\n\n  return (\n    <div className=\"px-4 py-6 border-t border-green-200 bg-gradient-to-b from-white to-green-50\">\n      <div className=\"max-w-md mx-auto\">\n        {/* Título da seção */}\n        <div className=\"text-center mb-4\">\n          <h3 className=\"text-lg font-semibold text-green-800 mb-2\">\n            Compartilhe esta escola\n          </h3>\n        </div>\n\n        {/* Botão Copiar Link - Destaque */}\n        <div className=\"mb-4\">\n          <Tooltip text={copied ? \"Link copiado com sucesso!\" : \"Copiar link para clipboard\"}>\n            <button\n              onClick={handleCopyLink}\n              className={`\n                w-full flex items-center justify-center gap-3 p-4 rounded-xl transition-all duration-300\n                focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\n                transform hover:scale-105 active:scale-95\n                ${copied\n                  ? 'bg-green-100 border-2 border-green-300 text-green-800'\n                  : 'bg-gradient-to-r from-green-500 to-green-600 text-white shadow-lg hover:shadow-xl'\n                }\n              `}\n              aria-label=\"Copiar link para clipboard\"\n            >\n              {copied ? (\n                <Check className=\"w-6 h-6\" />\n              ) : (\n                <Link className=\"w-6 h-6\" />\n              )}\n              <span className=\"font-semibold\">\n                {copied ? 'Link Copiado!' : 'Copiar Link'}\n              </span>\n            </button>\n          </Tooltip>\n        </div>\n\n        {/* Botões de Redes Sociais */}\n        <div className=\"grid grid-cols-2 gap-3 mb-4\">\n          {shareButtons.map((button, index) => {\n            const ShareComponent = button.component;\n            return (\n              <Tooltip key={index} text={`Compartilhar no ${button.name}`}>\n                <ShareComponent\n                  {...button.props}\n                  className=\"w-full transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transform hover:scale-105 active:scale-95\"\n                  aria-label={`Compartilhar no ${button.name}`}\n                >\n                  <div className={`\n                    w-full flex items-center justify-center gap-2 p-3 rounded-lg text-white font-medium\n                    ${button.color} shadow-md hover:shadow-lg\n                  `}>\n                    {button.icon}\n                    <span className=\"text-sm\">{button.name}</span>\n                  </div>\n                </ShareComponent>\n              </Tooltip>\n            );\n          })}\n        </div>\n\n        {/* Botão Compartilhar Nativo (fallback) */}\n        {navigator.share && (\n          <div className=\"text-center\">\n            <Tooltip text=\"Compartilhar usando opções do sistema\">\n              <button\n                onClick={onClick}\n                className=\"w-full flex items-center justify-center gap-2 p-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transform hover:scale-105 active:scale-95\"\n                aria-label=\"Compartilhar usando opções do sistema\"\n              >\n                <Share2 className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Mais opções</span>\n              </button>\n            </Tooltip>\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ShareButton);","import React, { memo, useMemo } from 'react';\nimport ShareButton from '../ShareButton';\n\nconst ShareSection = memo(({ copiarLink, compartilhar, painelInfo }) => {\n  // Gerar URL customizada para compartilhamento\n  const gerarLinkCustomizado = useMemo(() => {\n    if (!painelInfo?.titulo) return window.location.href;\n    \n    const criarSlug = (texto) => {\n      return texto\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim();\n    };\n\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  }, [painelInfo?.titulo]);\n\n  // Gerar descrição otimizada para compartilhamento\n  const gerarDescricao = useMemo(() => {\n    if (!painelInfo) return 'Confira informações sobre esta escola indígena no Observatório de Professores Indígenas.';\n    \n    let descricao = `Escola Indígena: ${painelInfo.titulo}`;\n    \n    if (painelInfo['Município']) {\n      descricao += ` - ${painelInfo['Município']}`;\n    }\n    \n    if (painelInfo['Povos indigenas']) {\n      descricao += ` | Povos: ${painelInfo['Povos indigenas']}`;\n    }\n    \n    if (painelInfo['Linguas faladas']) {\n      descricao += ` | Línguas: ${painelInfo['Linguas faladas']}`;\n    }\n    \n    descricao += ' | Observatório de Professores Indígenas';\n    \n    return descricao;\n  }, [painelInfo]);\n\n  // Gerar título otimizado para compartilhamento\n  const gerarTitulo = useMemo(() => {\n    if (!painelInfo?.titulo) return 'Escola Indígena - Observatório de Professores Indígenas';\n    \n    return `${painelInfo.titulo} - Escola Indígena`;\n  }, [painelInfo?.titulo]);\n\n  return (\n    <ShareButton \n      onClick={compartilhar}\n      url={gerarLinkCustomizado}\n      title={gerarTitulo}\n      description={gerarDescricao}\n    />\n  );\n});\n\nexport default ShareSection; ","import React, { useMemo } from \"react\";\nimport DOMPurify from \"dompurify\";\n\n/**\n * Componente PainelDescricao - Exibe conteúdo formatado com sanitização HTML\n * \n * @param {Object} props - Propriedades do componente\n * @param {string} props.descricao - Texto HTML ou texto puro a ser exibido\n * @param {string} props.className - Classes CSS adicionais (opcional)\n * @returns {React.ReactElement|null} - Componente renderizado ou null\n */\nconst PainelDescricao = ({ descricao, className = \"\" }) => {\n  // Função para formatar o texto com quebras de linha\n  const formatText = (text) => {\n    if (!text) return \"\";\n    \n    // Preserva parágrafos convertendo linhas duplas em tags <p>\n    let formattedText = text.replace(/\\n\\n+/g, \"</p><p>\");\n    \n    // Substitui quebras de linha simples por <br>\n    formattedText = formattedText.replace(/\\n/g, \"<br>\");\n    \n    // Adiciona tags <p> no início e fim se não existirem\n    if (!formattedText.startsWith(\"<p>\")) {\n      formattedText = \"<p>\" + formattedText;\n    }\n    if (!formattedText.endsWith(\"</p>\")) {\n      formattedText = formattedText + \"</p>\";\n    }\n    \n    // Remove espaços extras entre tags HTML\n    formattedText = formattedText.replace(/>\\s+</g, \"><\");\n    \n    return formattedText;\n  };\n\n  // Usa useMemo para evitar sanitização redundante em re-renders\n  const sanitizedHTML = useMemo(() => {\n    if (!descricao) return \"\";\n    \n    return DOMPurify.sanitize(formatText(descricao), {\n      ALLOWED_TAGS: [\n        'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li',\n        'div', 'span', 'img', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n        'center', 'blockquote', 'code', 'pre', 'hr', 'table', 'thead', \n        'tbody', 'tr', 'th', 'td'\n      ],\n      ALLOWED_ATTR: [\n        'href', 'target', 'rel', 'class', 'style', 'src', 'alt',\n        'width', 'height', 'id', 'title', 'aria-label', 'aria-describedby'\n      ],\n      ADD_TAGS: ['center', 'blockquote'],\n      ADD_ATTR: ['target', 'className', 'title'],\n      KEEP_CONTENT: true,\n      ALLOW_DATA_ATTR: false\n    });\n  }, [descricao]);\n\n  if (!descricao) return null;\n\n  return (\n    <div className={`mb-6 ${className}`}>\n      <div\n        className=\"prose prose-lg lg:prose-xl max-w-none px-1\"\n        style={{\n          '--tw-prose-body': '#1f2937',\n          '--tw-prose-headings': '#111827',\n          '--tw-prose-links': '#059669',\n          '--tw-prose-bold': '#111827',\n          '--tw-prose-counters': '#1f2937',\n          '--tw-prose-bullets': '#4b5563',\n          '--tw-prose-hr': '#e5e7eb',\n          '--tw-prose-quotes': '#111827',\n          '--tw-prose-quote-borders': '#10b981',\n          '--tw-prose-captions': '#6b7280',\n          '--tw-prose-code': '#111827',\n          '--tw-prose-pre-code': '#e5e7eb',\n          '--tw-prose-pre-bg': '#1f2937',\n          '--tw-prose-th-borders': '#d1d5db',\n          '--tw-prose-td-borders': '#e5e7eb',\n          lineHeight: '1.8',\n          fontSize: '1.125rem',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n          letterSpacing: '0.015em',\n        }}\n        dangerouslySetInnerHTML={{ __html: sanitizedHTML }}\n        aria-live=\"polite\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PainelDescricao);","import React, { memo } from 'react';\nimport PainelDescricao from '../PainelDescricao';\n\nconst IntroPanel = memo(({ painelInfo }) => (\n  <div className=\"space-y-6\">\n    <div className=\"prose prose-lg lg:prose-xl max-w-none\">\n      <div className=\"bg-green-100 rounded-lg p-6\">\n        <PainelDescricao descricao={painelInfo.descricao_detalhada} />\n      </div>\n    </div>\n    {painelInfo.audioUrl && (\n      <div className=\"mt-6\">\n        <audio controls className=\"w-full\">\n          <source src={painelInfo.audioUrl} type=\"audio/mpeg\" />\n          Seu navegador não suporta o elemento de áudio.\n        </audio>\n      </div>\n    )}\n  </div>\n));\n\nexport default IntroPanel; ","/**\n * Utility functions for text formatting\n */\n\n/**\n * Lista de siglas que devem permanecer em maiúsculas\n */\nconst SIGLAS_MAIUSCULAS = ['EE', 'EEI'];\n\n/**\n * Capitalizes the first letter of each word in a string, keeping specific acronyms in uppercase\n * @param {string} str - The string to capitalize\n * @returns {string} The capitalized string\n */\nexport const capitalizeWords = (str) => {\n  if (!str || typeof str !== 'string') return '';\n  \n  // Primeiro, divide a string em palavras\n  const words = str.split(/\\s+/);\n  \n  // Processa cada palavra\n  const processedWords = words.map(word => {\n    // Verifica se a palavra é uma sigla que deve permanecer em maiúsculas\n    if (SIGLAS_MAIUSCULAS.includes(word.toUpperCase())) {\n      return word.toUpperCase();\n    }\n    \n    // Para outras palavras, aplica a capitalização normal\n    return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n  });\n  \n  // Junta as palavras de volta em uma string\n  return processedWords.join(' ');\n}; \n\n/**\n * Normalizes an address string by capitalizing words and handling common address abbreviations\n * @param {string} address - The address string to normalize\n * @returns {string} The normalized address string\n */\nexport const normalizeAddress = (address) => {\n  if (!address || typeof address !== 'string') return '';\n\n  // Lista de abreviações comuns em endereços\n  const abbreviations = {\n    'r.': 'Rua',\n    'av.': 'Avenida',\n    'al.': 'Alameda',\n    'pr.': 'Praça',\n    'tr.': 'Travessa',\n    'rod.': 'Rodovia',\n    'est.': 'Estrada',\n    'n.': 'Número',\n    'nº': 'Número',\n    'apt.': 'Apartamento',\n    'bl.': 'Bloco',\n    'qd.': 'Quadra',\n    'lt.': 'Lote',\n    'km': 'KM',\n    's/n': 'S/N'\n  };\n\n  // Primeiro, substitui as abreviações\n  let normalized = address.toLowerCase();\n  Object.entries(abbreviations).forEach(([abbr, full]) => {\n    normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'g'), full);\n  });\n\n  // Depois aplica a capitalização de palavras\n  return capitalizeWords(normalized);\n}; ","import React from \"react\";\nimport { X, Maximize2, Minimize2 } from \"lucide-react\";\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\nconst PainelHeader = ({ titulo, closePainel, toggleMaximize, isMaximized }) => {\n  const isMobile = window.innerWidth <= 768;\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const isVerySmallLandscape = isMobileLandscape && window.innerWidth <= 850;\n\n  return (\n    <header className={`relative px-3 sm:px-4 md:px-6 lg:px-8 py-3 sm:py-4 md:py-6 border-b border-green-100 ${isMobileLandscape ? 'min-h-[60px]' : ''}`}>\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between pr-12\">\n        <h2 \n          id=\"painel-titulo\"\n          className={`font-semibold text-gray-900 leading-tight tracking-normal break-words ${\n            isVerySmallLandscape\n              ? 'text-base' // Força fonte menor em paisagem muito estreita\n              : isMobileLandscape \n                ? 'text-lg sm:text-xl' \n                : 'text-xl sm:text-2xl md:text-3xl'\n          }`}\n          style={isVerySmallLandscape ? { fontSize: 'clamp(1rem, 4vw, 1.25rem)' } : {}}\n        >\n          {capitalizeWords(titulo)}\n        </h2>\n      </div>\n\n      <div className=\"absolute top-2 sm:top-4 right-2 sm:right-4 flex items-center gap-2\">\n        {!isMobile && (\n          <button\n            onClick={toggleMaximize}\n            className=\"p-2 text-green-700 hover:text-green-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            aria-label={isMaximized ? \"Restaurar painel\" : \"Maximizar painel\"}\n            title={isMaximized ? \"Restaurar\" : \"Maximizar\"}\n          >\n            {isMaximized ? (\n              <Minimize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            ) : (\n              <Maximize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            )}\n          </button>\n        )}\n\n        <button\n          onClick={closePainel}\n          className={`text-gray-700 hover:text-gray-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 ${\n            isMobileLandscape ? 'p-1.5' : 'p-2'\n          }`}\n          aria-label=\"Fechar painel\"\n        >\n          <X \n            size={isMobileLandscape ? 18 : 20} \n            aria-hidden=\"true\"\n            className=\"stroke-2\"\n          />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default PainelHeader;\n","import { useState, useEffect } from \"react\";\n\nconst usePainelVisibility = (painelInfo) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  console.log(\"usePainelVisibility - painelInfo:\", painelInfo);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileWidth = window.innerWidth <= 768;\n      const isMobileLandscape = window.innerWidth > window.innerHeight && window.innerWidth <= 1024;\n      setIsMobile(isMobileWidth || isMobileLandscape);\n    };\n    \n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    window.addEventListener(\"orientationchange\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n      window.removeEventListener(\"orientationchange\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.group(\"usePainelVisibility - Effect\");\n    console.log(\"painelInfo recebido:\", painelInfo);\n    \n    if (painelInfo && typeof painelInfo === 'object') {\n      console.log(\"painelInfo válido, definindo visibilidade como true\");\n      setIsVisible(true);\n      document.body.style.overflow = \"hidden\";\n    } else {\n      console.log(\"painelInfo inválido ou undefined, definindo visibilidade como false\");\n      setIsVisible(false);\n      document.body.style.overflow = \"\";\n    }\n\n    console.log(\"Estado atual:\", { isVisible, isMobile });\n    console.groupEnd();\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [painelInfo]);\n\n  console.log(\"usePainelVisibility - returning state:\", { isVisible, isMobile });\n\n  return { isVisible, isMobile };\n};\n\nexport default usePainelVisibility;","import React from 'react';\nimport PainelHeader from '../../PainelHeader';\nimport usePainelVisibility from '../../hooks/usePainelVisibility';\nimport { usePainelDimensions } from '../../hooks/usePainelDimensions';\n\nconst PainelContainer = ({ \n  painelInfo, \n  closePainel, \n  children,\n  isMaximized,\n  onToggleMaximize\n}) => {\n  const { isVisible, isMobile } = usePainelVisibility(painelInfo);\n  const painelDimensions = usePainelDimensions(isMobile, isMaximized);\n\n  if (!painelInfo) return null;\n\n  // Determinar altura da navbar baseada no tamanho da tela\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n\n  const baseClasses = `\n    fixed\n    ${isMobile \n      ? `inset-x-0 top-0 w-full h-full` \n      : 'top-30 bottom-0 right-0 w-full sm:w-3/4 lg:w-[49%] h-auto'\n    }\n    rounded-t-xl shadow-xl z-[9999] transform transition-all duration-500 ease-in-out\n    bg-white border-t-4 border-white\n  `;\n  \n  const visibilityClasses = isVisible \n    ? isMobile \n      ? \"translate-y-0 opacity-100\" \n      : \"translate-y-0 opacity-100\"\n    : isMobile \n      ? \"translate-y-full opacity-0\" \n      : \"translate-y-full opacity-0\";\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-labelledby=\"painel-titulo\"\n      aria-describedby=\"painel-descricao\"\n      aria-modal=\"true\"\n      className={`${baseClasses} ${visibilityClasses}${isMobile ? ' painel-informacoes-mobile' : ''}`}\n      style={{\n        height: painelDimensions.height,\n        maxHeight: painelDimensions.maxHeight,\n        width: isMobile ? '100%' : painelDimensions.width,\n        top: isMobile ? `${navbarHeight}px` : 72,\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...(isMobile && {\n          borderRadius: painelDimensions.isMobileLandscape ? '0' : '1rem 1rem 0 0',\n          boxShadow: painelDimensions.isMobileLandscape \n            ? '0 0 0 0' \n            : '0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06)'\n        })\n      }}\n    >\n      <PainelHeader \n        titulo={painelInfo.titulo} \n        closePainel={closePainel}\n        toggleMaximize={onToggleMaximize}\n        isMaximized={isMaximized}\n      />\n      \n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-green-600/40 scrollbar-track-green-50/20\">\n        <div className={`${isMobile ? 'p-3 sm:p-4' : 'p-6'} space-y-6 sm:space-y-8`}>\n          <div className=\"prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PainelContainer); ","import { useState, useEffect, useMemo } from 'react';\n\nexport const usePainelDimensions = (isMobile, isMaximized) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  \n  // Breakpoints para responsividade\n  const breakpoints = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    '2xl': 1536\n  };\n\n  // Detectar mudanças no tamanho da janela\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular dimensões base\n  const dimensions = useMemo(() => {\n    // Determinar altura da navbar baseada na orientação\n    const isMobileLandscape = isMobile && windowWidth > windowHeight;\n    const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n    const baseHeight = `calc(100vh - ${navbarHeight}px)`;\n    const baseMaxHeight = isMobile ? \"96vh\" : \"92vh\";\n\n    // Determinar se está em modo desktop\n    const isDesktop = windowWidth >= breakpoints.md;\n    \n    // Determinar se deve usar grid\n    const shouldUseGrid = isDesktop && isMaximized;\n\n    // Calcular largura do painel\n    let panelWidth;\n    if (isMobile) {\n      if (isMobileLandscape) {\n        // Mobile na horizontal: preencher toda a tela\n        panelWidth = '100%';\n      } else {\n        // Mobile na vertical: preencher toda a largura\n        panelWidth = '100%';\n      }\n    } else {\n      // Desktop\n      panelWidth = isMaximized \n      ? '100%' \n      : windowWidth >= breakpoints.lg \n        ? '49%' \n        : '75%';\n    }\n\n    return {\n      height: baseHeight,\n      maxHeight: baseMaxHeight,\n      width: panelWidth,\n      isDesktop,\n      isMobileLandscape,\n      shouldUseGrid,\n      breakpoints,\n      zIndex: 1000\n    };\n  }, [isMobile, isMaximized, windowWidth, windowHeight]);\n\n  return dimensions;\n};","import React, { useRef, useState, useEffect } from 'react';\n\n/**\n * DocumentViewer\n * Componente para exibir uma lista de documentos (PDFs) associados a uma escola.\n * Permite visualização via iframe (Google Drive/Docs) ou download externo, com tratamento de erros e fallback amigável.\n * Props:\n *   - documentos: Array de objetos { id, titulo, autoria, tipo, link_pdf }\n *   - title: string (opcional)\n */\n\n// Utility function to transform Google Drive links\nconst transformarLinkGoogleDrive = (link) => {\n  if (!link || typeof link !== 'string') return null;\n  \n  const match = link.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\n  if (!match) return null;\n  \n  const fileId = match[1];\n  return `https://docs.google.com/gview?url=https://drive.google.com/uc?id=${fileId}&embedded=true`;\n};\n\n/**\n * Componente de troca de visualização (lista/grade) acessível e reutilizável\n */\nconst ViewModeToggle = ({ viewMode, setViewMode }) => (\n  <div className=\"flex items-center gap-2\" role=\"tablist\" aria-label=\"Modos de visualização dos documentos\">\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'list'}\n      aria-label=\"Visualizar em lista\"\n      aria-pressed={viewMode === 'list'}\n      onClick={() => setViewMode('list')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'list'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de lista */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Lista</span>\n    </button>\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'grid'}\n      aria-label=\"Visualizar em grade\"\n      aria-pressed={viewMode === 'grid'}\n      onClick={() => setViewMode('grid')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'grid'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de grade */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Grade</span>\n    </button>\n  </div>\n);\n\nconst DocumentViewer = ({ documentos, title = \"Documentos\" }) => {\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [viewMode, setViewMode] = useState('list'); // 'list' ou 'grid'\n  const iframeRef = useRef(null);\n  const [iframeError, setIframeError] = useState(false);\n  const [useGoogleDocsViewer, setUseGoogleDocsViewer] = useState(false);\n\n  // Reset states when selected document changes\n  useEffect(() => {\n    if (selectedDoc) {\n      setIframeError(false);\n      setUseGoogleDocsViewer(false);\n    }\n  }, [selectedDoc]);\n\n  // Set first document as selected if none is selected\n  useEffect(() => {\n    if (!selectedDoc && documentos?.length > 0) {\n      setSelectedDoc(documentos[0]);\n    }\n  }, [documentos, selectedDoc]);\n\n  // Handle iframe events\n  useEffect(() => {\n    const iframe = iframeRef.current;\n    if (!iframe || !selectedDoc) return;\n\n    const handleLoad = () => {\n      setIframeError(false);\n    };\n\n    const handleError = () => {\n      setIframeError(true);\n      setUseGoogleDocsViewer(true);\n    };\n\n    iframe.addEventListener('load', handleLoad);\n    iframe.addEventListener('error', handleError);\n\n    return () => {\n      iframe.removeEventListener('load', handleLoad);\n      iframe.removeEventListener('error', handleError);\n    };\n  }, [selectedDoc]);\n\n  // Early return after all hooks\n  if (!documentos || documentos.length === 0) {\n    return null;\n  }\n\n  const renderDocumentGrid = () => {\n    return (\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n        {documentos.map((doc) => (\n          <div\n            key={doc.id}\n            className={`\n              flex flex-col justify-between h-full max-w-xs mx-auto\n              rounded-2xl transition-all duration-200 cursor-pointer\n              shadow-sm hover:shadow-lg\n              ${selectedDoc?.id === doc.id\n                ? 'bg-green-100 scale-[1.03]'\n                : 'bg-white hover:bg-green-50'\n              }\n            `}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            tabIndex={0}\n            aria-label={`Selecionar documento: ${doc.titulo}`}\n          >\n            <div className=\"p-5 flex-1 flex flex-col justify-between\">\n              <h4 className=\"font-semibold text-green-800 mb-2 line-clamp-2 text-lg\">{doc.titulo}</h4>\n              {doc.autoria && (\n                <p className=\"text-sm text-gray-600 mb-2 line-clamp-1\">Por: {doc.autoria}</p>\n              )}\n              {doc.tipo && (\n                <span className=\"inline-block px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                  {doc.tipo}\n                </span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentList = () => {\n    return (\n      <div className=\"space-y-2\">\n        {documentos.map((doc) => (\n          <button\n            key={doc.id}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            className={`w-full text-left p-3 rounded-lg transition-colors duration-200 ${\n              selectedDoc?.id === doc.id\n                ? 'bg-green-100'\n                : 'hover:bg-green-50'\n            }`}\n          >\n            <h4 className=\"font-medium text-green-800\">{doc.titulo}</h4>\n            {doc.autoria && (\n              <p className=\"text-sm text-gray-600\">Por: {doc.autoria}</p>\n            )}\n            {doc.tipo && (\n              <span className=\"inline-block mt-1 px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                {doc.tipo}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentViewer = () => {\n    if (!selectedDoc) return null;\n\n    const isGoogleDriveLink = selectedDoc.link_pdf.includes('drive.google.com/file/d/');\n\n    return (\n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        {isGoogleDriveLink ? (\n          <>\n            {!useGoogleDocsViewer ? (\n              <iframe \n                ref={iframeRef}\n                src={selectedDoc.link_pdf.replace('/view?usp=sharing', '/preview')}\n                width=\"100%\" \n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={selectedDoc.titulo}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            ) : (\n              <iframe\n                ref={iframeRef}\n                src={transformarLinkGoogleDrive(selectedDoc.link_pdf)}\n                width=\"100%\"\n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={`${selectedDoc.titulo} (Google Docs Viewer)`}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            )}\n            {iframeError && (\n              <div className=\"p-6 text-center text-gray-600 bg-green-100\">\n                <p className=\"mb-3 text-lg\">Não foi possível carregar o documento diretamente.</p>\n                <a\n                  href={selectedDoc.link_pdf}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n                >\n                  <svg \n                    className=\"w-5 h-5 mr-2\" \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path \n                      strokeLinecap=\"round\" \n                      strokeLinejoin=\"round\" \n                      strokeWidth={2} \n                      d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n                    />\n                  </svg>\n                  Abrir em nova aba\n                </a>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"flex justify-center p-6\">\n            <a\n              href={selectedDoc.link_pdf}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center px-6 py-3 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n            >\n              <svg \n                className=\"w-5 h-5 mr-2\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" \n                />\n              </svg>\n              Ver documento PDF\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold text-green-800\">{title}:</h3>\n        {documentos.length > 1 && (\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        )}\n      </div>\n      \n      {documentos.length > 1 && (\n        <div className=\"mb-6\">\n          {viewMode === 'grid' ? renderDocumentGrid() : renderDocumentList()}\n        </div>\n      )}\n      \n      {renderDocumentViewer()}\n    </div>\n  );\n};\n\nexport default React.memo(DocumentViewer); ","import React, { useState, useEffect } from 'react';\nimport { getTituloByVideoUrl } from '../../../services/legendasService';\n\n/**\n * VideoPlayer\n * Componente para exibir vídeos do YouTube de forma responsiva e acessível.\n * Faz extração do ID do vídeo a partir de diferentes formatos de URL e exibe fallback amigável em caso de erro.\n * Props:\n *   - videoUrl: string (URL do vídeo)\n *   - title: string (opcional)\n *   - escolaId: number (ID da escola para buscar título personalizado)\n */\n\n// Utility function to extract YouTube video ID\nconst extrairIdYoutube = (url) => {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  // Remove query parameters to simplify\n  const baseUrl = url.split('?')[0];\n\n  // Patterns to extract video ID\n  const patterns = [\n    /youtube\\.com\\/embed\\/([^/?&]+)/,                 // embed/ID\n    /youtube\\.com\\/watch\\?v=([^&]+)/,                 // watch?v=ID\n    /youtu\\.be\\/([^?&]+)/,                            // youtu.be/ID\n    /youtube\\.com\\/v\\/([^?&]+)/                       // youtube.com/v/ID\n  ];\n\n  for (const pattern of patterns) {\n    const match = baseUrl.match(pattern);\n    if (match && match[1]) {\n      return match[1];\n    }\n  }\n\n  return null;\n};\n\nconst VideoPlayer = ({ videoUrl, title = \"Vídeo\", escolaId }) => {\n  const [tituloPersonalizado, setTituloPersonalizado] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Buscar título personalizado da nova tabela\n  useEffect(() => {\n    const buscarTitulo = async () => {\n      if (!videoUrl || !escolaId) return;\n\n      try {\n        setLoading(true);\n        const titulo = await getTituloByVideoUrl(videoUrl, escolaId);\n        setTituloPersonalizado(titulo);\n      } catch (error) {\n        console.warn('Erro ao buscar título personalizado:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarTitulo();\n  }, [videoUrl, escolaId]);\n\n  if (!videoUrl) return null;\n\n  const videoId = extrairIdYoutube(videoUrl);\n  \n  if (!videoId) {\n    return (\n      <div className=\"mt-8 max-w-4xl mx-auto\">\n        <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n          {tituloPersonalizado?.titulo || title}:\n        </h3>\n        <div className=\"p-6 text-center text-gray-600 bg-gray-50 rounded-lg\">\n          <p className=\"mb-3 text-lg\">Link do vídeo inválido ou não suportado.</p>\n          <a\n            href={videoUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n          >\n            <svg \n              className=\"w-5 h-5 mr-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" \n              />\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \n              />\n            </svg>\n            Tentar abrir no YouTube\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n        {tituloPersonalizado?.titulo || title}:\n      </h3>\n      \n      {/* Informações adicionais do título personalizado */}\n      {tituloPersonalizado && (\n        <div className=\"mb-4 p-4 bg-green-100 rounded-lg\">\n          {tituloPersonalizado.descricao && (\n            <p className=\"text-gray-700 mb-2\">{tituloPersonalizado.descricao}</p>\n          )}\n          \n          <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n            {tituloPersonalizado.categoria && (\n              <span className=\"capitalize bg-green-200 text-green-800 px-2 py-1 rounded\">\n                {tituloPersonalizado.categoria}\n              </span>\n            )}\n            {tituloPersonalizado.plataforma && (\n              <span className=\"capitalize\">\n                {tituloPersonalizado.plataforma}\n              </span>\n            )}\n            {tituloPersonalizado.duracao && (\n              <span>Duração: {tituloPersonalizado.duracao}</span>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        <div className=\"relative pb-[56.25%] h-0\">\n          <iframe\n            className=\"absolute top-0 left-0 w-full h-full\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            title={tituloPersonalizado?.titulo || title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            loading=\"lazy\"\n            referrerPolicy=\"origin\"\n          />\n        </div>\n      </div>\n      \n\n    </div>\n  );\n};\n\nexport default React.memo(VideoPlayer); ","import React, { useRef, useState, useEffect } from \"react\";\nimport { useShare } from \"../hooks/useShare\";\nimport { useDynamicURL } from \"../hooks/useDynamicURL\";\nimport { useClickOutside } from \"../hooks/useClickOutside\";\nimport useAudio from \"../hooks/useAudio\";\nimport useDocumentosEscola from \"../hooks/useDocumentosEscola\";\n\n// Import modular components\nimport EscolaInfo from \"./components/EscolaInfo\";\nimport TerraIndigenaInfo from \"./TerraIndigenaInfo\";\nimport ShareSection from \"./ShareSection\";\nimport IntroPanel from \"./IntroPanel\";\nimport PainelContainer from \"./components/PainelContainer\";\nimport DocumentViewer from \"./components/DocumentViewer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst PainelInformacoes = ({ painelInfo, closePainel, escola_id, refreshKey = 0 }) => {\n  const painelRef = useRef(null);\n  const [isMaximized, setIsMaximized] = useState(false);\n  \n  const { gerarLinkCustomizado, copiarLink, compartilhar } = useShare(painelInfo);\n  const { documentos } = useDocumentosEscola(painelInfo?.id);\n  \n  const toggleMaximize = () => setIsMaximized(prev => !prev);\n  \n  useDynamicURL(painelInfo, gerarLinkCustomizado);\n  useClickOutside(painelRef, closePainel);\n\n  // Forçar re-renderização quando refreshKey mudar\n  useEffect(() => {\n    console.log('PainelInformacoes: refreshKey mudou para', refreshKey);\n  }, [refreshKey]);\n\n  if (!painelInfo) {\n    return null;\n  }\n\n  // Determine panel type\n  const isTerraIndigena = painelInfo.tipo === 'terra_indigena';\n  const isIntro = painelInfo.titulo === 'Sobre o site';\n\n  const renderContent = () => {\n    if (isIntro) {\n      return <IntroPanel painelInfo={painelInfo} />;\n    }\n    \n    if (isTerraIndigena) {\n      return <TerraIndigenaInfo terraIndigena={painelInfo} />;\n    }\n\n    return (\n      <>\n        <EscolaInfo \n          escola={painelInfo} \n          shouldUseGrid={true}\n          refreshKey={refreshKey}\n        />\n        {documentos && documentos.length > 0 && (\n          <DocumentViewer \n            documentos={documentos}\n            title=\"Produções e materiais da escola\"\n          />\n        )}\n        {painelInfo.link_para_videos && (\n          <VideoPlayer \n            videoUrl={painelInfo.link_para_videos}\n            title=\"Vídeo da escola\"\n            escolaId={painelInfo.id}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div ref={painelRef}>\n      <PainelContainer\n        painelInfo={painelInfo}\n        closePainel={closePainel}\n        isMaximized={isMaximized}\n        onToggleMaximize={toggleMaximize}\n      >\n        {renderContent()}\n        <ShareSection \n          copiarLink={copiarLink} \n          compartilhar={compartilhar} \n          painelInfo={painelInfo}\n        />\n      </PainelContainer>\n    </div>\n  );\n};\n\nexport default React.memo(PainelInformacoes); ","import { criarSlug } from '../../utils/slug';\n\nexport const useShare = (painelInfo) => {\n  const gerarLinkCustomizado = () => {\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  const copiarLink = async () => {\n    const url = gerarLinkCustomizado();\n    try {\n      await navigator.clipboard.writeText(url);\n      alert(\"Link copiado!\");\n    } catch (err) {\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      alert(\"Link copiado!\");\n    }\n  };\n\n  const compartilhar = () => {\n    const url = gerarLinkCustomizado();\n    const texto = `Confira este painel: ${painelInfo.titulo}`;\n    \n    if (navigator.share) {\n      navigator.share({\n        title: painelInfo.titulo,\n        text: texto,\n        url: url,\n      });\n    } else {\n      window.open(\n        `https://twitter.com/intent/tweet?text=${encodeURIComponent(texto)}&url=${encodeURIComponent(url)}`,\n        \"_blank\"\n      );\n    }\n  };\n\n  return { gerarLinkCustomizado, copiarLink, compartilhar };\n};","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Só fecha se o clique for no mapa (openlayers-container)\n      const el = event.target;\n      if (el.classList && el.classList.contains('openlayers-container')) {\n        return;\n      }\n      \n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};","import { useEffect, useRef } from \"react\";\n\nexport const useDynamicURL = (painelInfo, gerarLinkCustomizado) => {\n  const lastUrlRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!painelInfo) return;\n\n    // Limpa o timeout anterior se existir\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Cria um novo timeout para debounce\n    timeoutRef.current = setTimeout(() => {\n      const newUrl = gerarLinkCustomizado();\n      \n      // Só atualiza se a URL realmente mudou\n      if (newUrl !== lastUrlRef.current) {\n        try {\n          window.history.replaceState({}, \"\", newUrl);\n          lastUrlRef.current = newUrl;\n        } catch (error) {\n          console.warn('Erro ao atualizar URL:', error);\n        }\n      }\n    }, 300); // 300ms de debounce\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [painelInfo, gerarLinkCustomizado]);\n};","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].Latitude,\n      longitude: dataPoints[0].Longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  const [initialPanelOpened, setInitialPanelOpened] = useState(!!initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Abrir painel automaticamente quando initialPanel for encontrado (apenas uma vez)\n  useEffect(() => {\n    if (initialPanel && !painelInfo && !initialPanelOpened) {\n      console.log('MapaEscolasIndigenas: Abrindo painel automaticamente para:', initialPanel.titulo);\n      setPainelInfo(initialPanel);\n      setInitialPanelOpened(true);\n    }\n  }, [initialPanel, painelInfo, initialPanelOpened]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        painelAberto={!!painelInfo}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;"],"names":["testLegendasTable","async","data","error","supabase","from","select","limit","console","warn","message","log","getLegendaByImageUrl","imageUrl","escolaId","options","arguments","length","undefined","query","eq","ativo","categoria","tipo_foto","order","ascending","getLegendaByImageUrlFlexivel","preferencias","concat","legenda","data2","error2","data3","error3","nomeArquivo","split","pop","data4","error4","ilike","addLegendaFoto","insert","legendaData","single","updateLegendaFoto","legendaId","updateData","update","getTituloByVideoUrl","videoUrl","code","HISTORIA_PROFESSOR_CONFIG","BUCKET_NAME","MAX_FILE_SIZE","ALLOWED_TYPES","MAX_IMAGES_PER_HISTORIA","MIN_DIMENSIONS","width","height","getHistoriasProfessor","map","historia","imagem_url","publicUrl","storage","getPublicUrl","_objectSpread","imagem_public_url","err","urlError","createHistoriaProfessor","escola_id","historiaData","nome_professor","ordem","foto_rosto","updateHistoriaProfessor","historiaId","updated_at","Date","toISOString","deleteHistoriaProfessor","deleteError","delete","MARKER_SVG_PATH","process","createMarkerStyle","feature","showNames","markerData","get","isNearbyPair","markerStyle","Style","image","Icon","src","scale","anchor","anchorXUnits","anchorYUnits","geometry","getGeometry","titulo","text","Text","font","fill","Fill","color","stroke","Stroke","offsetY","textAlign","isMobile","isMobileWidth","window","innerWidth","hasTouch","navigator","maxTouchPoints","isMobileUserAgent","test","userAgent","isMobileOrientation","orientation","mobileCriteria","filter","Boolean","OpenLayersInteractions","constructor","this","enableHover","enableClick","enableDoubleClick","enableTouch","hoverDelay","clickDelay","eventHandlers","Map","hoveredFeature","clickedFeature","clickTimeout","hoverTimeout","tooltipElement","initializeInteractions","mobile","windowWidth","setupHoverInteraction","setupClickInteraction","setupDoubleClickInteraction","setupTouchInteraction","on","event","handlePointerMove","handlePointerLeave","handleClick","handleDoubleClick","forEachFeatureAtPixel","pixel","type","schoolData","terraIndigenaInfo","clearHover","applyHover","handleMobileClick","clearTimeout","setTimeout","executeClickHandler","executeDoubleClickHandler","handleTouchEnd","forceHideTooltip","showTooltip","executeHoverHandler","applyHoverStyle","clearHoverStyle","hideTooltip","executeHoverOutHandler","hoverStyleFunction","tooltipContent","getTooltipContent","createTooltipElement","getTargetElement","appendChild","remove","content","element","document","createElement","className","isTerraIndigena","includes","clickableContent","innerHTML","tooltipStyles","backgroundColor","borderColor","Object","assign","style","position","padding","borderRadius","fontSize","fontFamily","fontWeight","pointerEvents","zIndex","maxWidth","whiteSpace","overflow","textOverflow","boxShadow","border","cursor","clickableSpan","querySelector","textDecoration","textDecorationColor","textDecorationThickness","transition","display","addEventListener","transform","coordinate","getPixelFromCoordinate","left","top","tooltipContentFunction","handler","eventType","set","off","clearHandlers","clear","updateOptions","newOptions","destroy","createDefaultInteractions","MAP_CONFIG","center","zoom","maxZoom","minZoom","clusterDistance","clusterMinDistance","clusterAnimationDuration","proximityThreshold","disableClusteringAtZoom","tooltipOffset","tooltipDelay","interaction","performance","enableLazyLoading","maxFeaturesPerTile","enableFeatureCulling","enableTileCaching","ANIMATION_CONFIG","duration","marker","cluster","pan","easing","MARKER_COLORS","small","medium","large","xlarge","CLUSTER_SIZES","min","max","size","PROJECTION_CONFIG","BASE_LAYER_CONFIG","url","attributions","wrapX","tilePixelRatio","tileSize","_ref","dataPoints","onPainelOpen","showMarcadores","showNomesEscolas","vectorSourceRef","useRef","vectorLayerRef","hoveredMarker","setHoveredMarker","React","selectedMarker","setSelectedMarker","initializeMarkers","useMemo","useCallback","current","VectorSource","VectorLayer","source","addLayer","setupInteractions","interactions","onMarkerClick","onMarkerHover","createMarkerInteractions","handleMarkerClick","handleMarkerHover","handleMarkerHoverOut","setStyle","f","baseStyle","hoverStyle","Array","isArray","changed","updateMarkers","pontosValidos","point","latitude","longitude","lat","parseFloat","lng","isNaN","forEach","index","Feature","Point","fromLonLat","municipio","Municipio","uf","UF","addFeature","updateMarkerStyles","useEffect","removeLayer","_jsx","LAYER_COLORS","terrasIndigenas","regularizada","hover","declarada","estadoSP","createTerrasIndigenasStyle","isHovered","properties","colorConfig","fase_ti","colors","lineDash","showTerrasIndigenas","interactionsRef","setHoveredFeature","selectedFeature","setSelectedFeature","features","setFeatures","isMobileDevice","initializeLayer","geoJSONFeatures","GeoJSON","dataProjection","featureProjection","readFeatures","getProperties","terrai_nom","tipo","etnia","etnia_nome","municipio_","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","onFeatureClick","onFeatureHover","createGeoJSONInteractions","handleFeatureClick","handleFeatureHover","handleFeatureHoverOut","extent","getExtent","getView","fit","applySelectionStyleToFeature","selectionOptions","fillColor","strokeColor","strokeWidth","selectionStyle","applySelectionStyle","removeSelectionStyleFromFeature","timeout","showEstadoSP","createEstadoSPStyle","interactive","terrasIndigenasData","estadoSPData","terrasIndigenasRef","estadoSPRef","layersStatus","setLayersStatus","visible","loaded","hasValidData","updateLayerStatus","layerName","updates","prev","handleLayerError","handleLayerSuccess","getLayersStats","stats","total","errors","values","layer","getLayersInfo","hasData","featureCount","info","_jsxs","children","OpenLayersTerrasIndigenas","ref","onLoad","onError","OpenLayersEstadoSP","props","id","proj4","defs","register","mapContainer","baseLayer","mapInfo","setMapInfo","useState","initialCenter","initialZoom","createBaseLayers","satelliteLayer","TileLayer","XYZ","preload","useInterimTilesOnError","initializeMap","target","layers","view","View","enableRotation","controls","defaultControls","toLonLat","getCenter","newView","toFixed","getZoom","updateMapConfig","newCenter","newZoom","currentCenter","currentZoom","setCenter","setZoom","setTarget","MapWrapper","_Fragment","OpenLayersMarkers","OpenLayersLayers","cache","useGeoJSONCache","key","setData","loading","setLoading","setError","_geoJSON$features","_geoJSON$features2","response","fetch","ok","Error","status","geoJSON","json","crs","firstFeature","keys","coordinates","fetchGeoJSON","painelAberto","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","removeEventListener","handleMinimize","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","shouldReactivate","CabecalhoMenu","_ref2","onMinimize","viewBox","strokeLinecap","strokeLinejoin","d","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","subItems","item","cx","cy","r","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","criarSlug","texto","toLowerCase","normalize","replace","trim","documentos","setDocumentos","isLoading","setIsLoading","authData","authError","auth","getSession","temSessao","session","rlsData","rlsError","podeAcessar","details","hint","allDocs","allDocsError","doc","tipo_escola_id","valor_escola_id","toString","dataAsNumber","errorAsNumber","Number","dataAsString","errorAsString","String","count","fetchDocumentos","InfoGrid","memo","columns","gap","InfoTable","row","value","InfoStats","_ref4","stat","icon","_ref5","title","description","defaultCollapsed","layout","layoutProps","isCollapsed","setIsCollapsed","role","renderContent","capitalize","str","charAt","toUpperCase","slice","CompactCard","Check","X","AddressDetails","escola","logradouro","numero","bairro","cep","endereco","field","MapPin","estado","join","MapButton","Latitude","Longitude","openMap","open","Navigation","SocialLinks","_ref6","links","expanded","onToggle","socialLinks","social","Globe","ChevronRight","link","href","rel","LinkIcon","ExternalLink","_ref7","setExpanded","toggle","basicInfoCards","Building","Calendar","ano_criacao","usa_redes_sociais","povos_indigenas","InfoSection","diretoria_ensino","links_redes_sociais","images","currentImageIndex","isOpen","onClose","onImageChange","showNavigation","showControls","showCounter","showCaption","zoomLevel","setZoomLevel","rotation","setRotation","currentIndex","setCurrentIndex","currentImage","fecharZoom","resetImage","nextImage","newIndex","prevImage","handleEsc","e","handleKeyDown","preventDefault","Math","stopPropagation","ZoomIn","ZoomOut","RotateCw","ChevronLeft","publicURL","alt","descricao","descricao_imagem","onMouseDown","autor","dataFoto","toLocaleDateString","descricaoDetalhada","ImagensdasEscolas","refreshKey","imagens","setImagens","imagemZoom","setImagemZoom","setCurrentImageIndex","cacheRef","cacheVersion","setCacheVersion","limparCacheERecarregar","body","cacheKey","files","list","imagensEncontradas","Promise","all","file","_legenda","_legenda2","_legenda3","_legenda4","_legenda5","filePath","name","descricao_detalhada","autor_foto","data_foto","buscarImagens","RefreshCw","img","findIndex","i","maxHeight","ReusableImageZoom","historia_da_escola","htmlContent","margin","outline","dangerouslySetInnerHTML","__html","ExpandableList","items","maxVisible","idx","minWidth","MiniCard","turnosValue","turnos_funcionamento","modalidadeList","modalidade_ensino","Sparkles","gridItems","Clock","Users","numero_alunos","MessageCircle","linguas_faladas","materiaisItems","BookOpen","BooleanValue","material_nao_indigena","material_indigena","Droplet","acesso_agua","Trash2","coleta_lixo","Wifi","acesso_internet","Monitor","equipamentos","modo_acesso","Utensils","cozinha","Apple","merenda_escolar","ChefHat","diferenciada","Home","espaco_escolar","renderBooleanStatus","valor","normalizado","formacao","resto","formatarFormacaoProfessores","formacao_professores","continuada","formatarFormacaoContinuada","formacao_continuada","UsersRound","UserCheck","professores_indigenas","UserMinus","professores_nao_indigenas","professores_falam_lingua","Star","User","gestao","outros_funcionarios","NotebookPen","ProjectCard","isNegative","availableProjects","GraduationCap","Heart","Target","project","ImagemHistoriadoProfessor","then","imagensComUrl","genero","startsWith","caminhoRelativo","nome","created_at","catch","customSize","shape","variant","clickable","textColor","badge","badgePosition","badgeColor","badgeSize","fallbackIcon","showInitials","maxInitials","lazy","priority","_objectWithoutProperties","_excluded","imageError","setImageError","imageLoading","setImageLoading","sizeConfig","container","sizes","xs","xxlarge","shapeConfig","shapes","circle","square","rounded","none","variantConfig","variants","default","shadow","minimal","flat","elevated","badgeConfig","positions","badgeSizes","initials","word","char","match","FallbackIcon","icons","user","alert","AlertCircle","Loader2","shouldShowImage","shouldShowInitials","shouldShowIcon","baseClasses","tabIndex","handleImageLoad","handleImageError","fetchPriority","avatarThemes","hoverBorderColor","professor","neutral","indigena","success","warning","fotoUrl","nomeProfessor","tamanho","showFallback","theme","mappedSize","themeConfig","Avatar","historias","setHistorias","currentHistoriaIndex","setCurrentHistoriaIndex","carregarHistorias","nextHistoria","prevHistoria","currentHistoria","hasMultipleHistorias","FotoProfessor","_","GridLayoutWrapper","shouldUseGrid","containerClasses","gridSections","Component","BasicInfo","Modalidades","Infraestrutura","GestaoProfessores","ProjetosParcerias","HistoriaEscola","HistoriadoProfessor","xmlns","isTextArea","LargeHandFistIcon","HandFistIcon","terraIndigena","InfoItem","Tooltip","isVisible","setIsVisible","onMouseEnter","onMouseLeave","onFocus","onBlur","bottom","ShareButton","copied","setCopied","showShareOptions","setShowShareOptions","shareTextOptions","shareText","floor","random","shareUrl","location","shareButtons","component","WhatsappShareButton","Facebook","FacebookShareButton","quote","Twitter","TwitterShareButton","Linkedin","LinkedinShareButton","summary","clipboard","writeText","input","execCommand","removeChild","Link","button","ShareComponent","share","Share2","copiarLink","compartilhar","painelInfo","gerarLinkCustomizado","origin","pathname","gerarDescricao","gerarTitulo","PainelDescricao","sanitizedHTML","DOMPurify","sanitize","formattedText","endsWith","formatText","ALLOWED_TAGS","ALLOWED_ATTR","ADD_TAGS","ADD_ATTR","KEEP_CONTENT","ALLOW_DATA_ATTR","lineHeight","letterSpacing","audioUrl","SIGLAS_MAIUSCULAS","capitalizeWords","substr","closePainel","toggleMaximize","isMaximized","isMobileLandscape","innerHeight","isVerySmallLandscape","Minimize2","Maximize2","group","groupEnd","PainelContainer","onToggleMaximize","usePainelVisibility","painelDimensions","usePainelDimensions","setWindowWidth","windowHeight","setWindowHeight","breakpoints","sm","md","lg","xl","handleResize","dimensions","baseHeight","isDesktop","panelWidth","navbarHeight","visibilityClasses","flexDirection","PainelHeader","transformarLinkGoogleDrive","fileId","ViewModeToggle","viewMode","setViewMode","DocumentViewer","selectedDoc","setSelectedDoc","iframeRef","iframeError","setIframeError","useGoogleDocsViewer","setUseGoogleDocsViewer","iframe","handleLoad","handleError","autoria","renderDocumentViewer","isGoogleDriveLink","link_pdf","allow","sandbox","VideoPlayer","tituloPersonalizado","setTituloPersonalizado","buscarTitulo","videoId","baseUrl","patterns","pattern","extrairIdYoutube","plataforma","duracao","frameBorder","allowFullScreen","referrerPolicy","PainelInformacoes","painelRef","setIsMaximized","encodeURIComponent","useShare","useDocumentosEscola","useClickOutside","useDynamicURL","lastUrlRef","timeoutRef","newUrl","history","replaceState","listener","el","classList","contains","isIntro","IntroPanel","TerraIndigenaInfo","EscolaInfo","link_para_videos","ShareSection","quantidade","exemplo","useRefresh","panel","URLSearchParams","search","initialPanel","find","setPainelInfo","initialPanelOpened","setInitialPanelOpened","escolasVisiveis","pontuacao","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","abrirPainel","refreshPainel","fecharPainel","MapSelector"],"sourceRoot":""}
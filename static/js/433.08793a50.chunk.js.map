{"version":3,"file":"static/js/433.08793a50.chunk.js","mappings":"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","sources":["components/Marcadores.js","components/MapaBase.js","components/EstadoSP.js","components/MenuCamadas.js","components/detalhesInfo.js","components/MapaEscolasIndigenas.js","../node_modules/react-leaflet/lib/GeoJSON.js","components/TerrasIndigenas.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Marker, Tooltip, useMap } from \"react-leaflet\";\nimport { violetIcon } from \"./CustomIcon\";\nimport L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\n// Constante para definir a proximidade entre marcadores (em graus)\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para criar o conector entre marcadores\nconst createConnector = (map, centerLat, centerLng, markerLat, markerLng) => {\n  return L.polyline([[centerLat, centerLng], [markerLat, markerLng]], {\n    color: '#A0522D',\n    weight: 1.2,\n    dashArray: '3,3',\n    opacity: 0.6,\n    className: 'marker-connector'\n  }).addTo(map);\n};\n\n// Função para encontrar pares de marcadores próximos\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\nconst Marcadores = ({ dataPoints, visibility, onClick }) => {\n  const map = useMap();\n  const clusterGroupRef = useRef(null);\n  const connectorsRef = useRef([]);\n\n  // Filtra os pontos válidos\n  const pontosValidos = React.useMemo(() => {\n    if (!Array.isArray(dataPoints) || dataPoints.length === 0) {\n      console.warn(\"Marcadores: Nenhum ponto de dados recebido\");\n      return [];\n    }\n\n    // Log inicial com total de pontos\n    console.log(\"Total de escolas recebidas:\", dataPoints.length);\n\n    // Array para armazenar escolas com coordenadas inválidas\n    const escolasComProblemas = [];\n\n    const pontosFiltrados = dataPoints.filter(ponto => {\n      // Verifica se o ponto tem as propriedades básicas\n      if (!ponto.titulo || !ponto.latitude || !ponto.longitude) {\n        escolasComProblemas.push({\n          escola: ponto.titulo || \"Sem nome\",\n          problema: \"Dados básicos ausentes\",\n          detalhes: {\n            titulo: !!ponto.titulo,\n            latitude: !!ponto.latitude,\n            longitude: !!ponto.longitude\n          }\n        });\n        return false;\n      }\n\n      const lat = parseFloat(ponto.latitude);\n      const lng = parseFloat(ponto.longitude);\n      \n      // Verifica se as coordenadas são números válidos\n      if (isNaN(lat) || isNaN(lng)) {\n        escolasComProblemas.push({\n          escola: ponto.titulo,\n          problema: \"Coordenadas não são números válidos\",\n          detalhes: {\n            latitude: ponto.latitude,\n            longitude: ponto.longitude\n          }\n        });\n        return false;\n      }\n\n      // Verifica se as coordenadas estão dentro dos limites válidos\n      if (lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        escolasComProblemas.push({\n          escola: ponto.titulo,\n          problema: \"Coordenadas fora dos limites válidos\",\n          detalhes: {\n            latitude: lat,\n            longitude: lng,\n            limites: {\n              latMin: -90,\n              latMax: 90,\n              lngMin: -180,\n              lngMax: 180\n            }\n          }\n        });\n        return false;\n      }\n\n      return true;\n    });\n\n    // Log detalhado das escolas com problemas\n    if (escolasComProblemas.length > 0) {\n      console.group(\"Escolas com coordenadas inválidas:\");\n      escolasComProblemas.forEach(escola => {\n        console.group(escola.escola);\n        console.log(\"Problema:\", escola.problema);\n        console.log(\"Detalhes:\", escola.detalhes);\n        console.groupEnd();\n      });\n      console.groupEnd();\n      console.log(`Total de escolas com problemas: ${escolasComProblemas.length}`);\n    }\n\n    // Log do resultado final\n    console.log(`Escolas válidas: ${pontosFiltrados.length} de ${dataPoints.length}`);\n\n    return pontosFiltrados;\n  }, [dataPoints]);\n\n  // Configuração do ícone para escolas indígenas\n  const escolaIcon = violetIcon;\n\n  useEffect(() => {\n    if (!Array.isArray(dataPoints) || dataPoints.length === 0) {\n      console.warn(\"Marcadores: Nenhum ponto de dados válido recebido\");\n      return;\n    }\n\n    if (!map || !pontosValidos.length || !visibility.educacao) return;\n\n    // Remove o grupo de clusters anterior e conectores\n    if (clusterGroupRef.current) {\n      map.removeLayer(clusterGroupRef.current);\n    }\n    connectorsRef.current.forEach(connector => map.removeLayer(connector));\n    connectorsRef.current = [];\n\n    // Encontra pares de marcadores próximos\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    // Cria um novo grupo de clusters\n    const clusterGroup = new L.MarkerClusterGroup({\n      // Configurações básicas\n      chunkedLoading: true,\n      maxClusterRadius: 4,\n      spiderfyOnMaxZoom: true,\n      showCoverageOnHover: true,\n      zoomToBoundsOnClick: true,\n      removeOutsideVisibleBounds: true,\n      animate: true,\n      \n      // Configurações de zoom\n      disableClusteringAtZoom: 12,\n      minZoom: 4,\n      maxZoom: 18,\n      \n      // Configurações de ícones com estética indígena\n      iconCreateFunction: function(cluster) {\n        const count = cluster.getChildCount();\n        let size = 'small';\n        let background = '#A0522D';\n        let textColor = '#fff';\n\n        if (count > 100) {\n          size = 'large';\n          background = '#4B2E14';\n        } else if (count > 20) {\n          size = 'medium';\n          background = '#8B5A2B';\n        }\n\n        const iconUrl = violetIcon.options.iconUrl;\n        const iconSize = violetIcon.options.iconSize || [30, 30];\n\n        return L.divIcon({\n          html: `\n            <div style=\"\n              background: radial-gradient(circle at 30% 30%, ${background}, #3b2e2a);\n              color: ${textColor};\n              border-radius: 50%;\n              width: ${iconSize[0] + 10}px;\n              height: ${iconSize[1] + 10}px;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              font-weight: bold;\n              border: 2px solid #f5f5dc;\n              box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);\n              transition: transform 0.3s ease;\n              padding: 2px;\n            \">\n              <img src=\"${iconUrl}\" width=\"${iconSize[0] * 0.6}\" height=\"${iconSize[1] * 0.6}\" style=\"margin-bottom: 2px;\" />\n              <span style=\"\n                font-size: ${size === 'large' ? '16px' : size === 'medium' ? '14px' : '12px'};\n              \">${count}</span>\n            </div>`,\n          className: `marker-cluster marker-cluster-${size}`,\n          iconSize: L.point(iconSize[0] + 10, iconSize[1] + 10)\n        });\n      },\n      \n      // Configurações de animação suaves\n      animateAddingMarkers: true,\n      spiderLegPolylineOptions: { \n        weight: 1.3,\n        color: '#5C4033',\n        opacity: 0.5,\n        dashArray: '2,4'\n      },\n      \n      // Configurações de performance\n      chunkInterval: 200,\n      chunkDelay: 50,\n      \n      // Configurações de interatividade\n      singleMarkerMode: false,\n      spiderfyDistanceMultiplier: 1.5,\n      \n      // Configurações de estilo orgânico\n      polygonOptions: {\n        fillColor: '#A0522D',\n        color: '#5C4033',\n        weight: 1.2,\n        opacity: 0.6,\n        fillOpacity: 0.2\n      }\n    });\n\n    // Adiciona os marcadores ao grupo\n    pontosValidos.forEach((ponto, index) => {\n      const lat = parseFloat(ponto.latitude);\n      const lng = parseFloat(ponto.longitude);\n      \n      const marker = L.marker([lat, lng], { \n        icon: escolaIcon,\n        zIndexOffset: 1000\n      });\n\n      // Adiciona o tooltip com o título capitalizado\n      marker.bindTooltip(capitalizeWords(ponto.titulo), {\n        className: \"bg-white/95 text-gray-800 text-sm font-medium px-3 py-1.5 rounded shadow-sm border border-gray-100\",\n        direction: \"top\",\n        offset: [0, -10],\n        opacity: 1,\n        permanent: false\n      });\n\n      // Adiciona o evento de clique\n      marker.on('click', () => onClick?.(ponto));\n\n      // Verifica se este marcador faz parte de um par próximo\n      const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n      if (pairIndex !== -1) {\n        const [first, second] = nearbyPairs[pairIndex];\n        const isFirst = index === first;\n        const otherIndex = isFirst ? second : first;\n        const otherPonto = pontosValidos[otherIndex];\n\n        // Aplica o efeito de fan-out aprimorado\n        marker.on('add', function() {\n          const transform = isFirst \n            ? 'perspective(500px) rotateY(-20deg) translateX(-20px) rotate(-25deg) scale(0.9)'\n            : 'perspective(500px) rotateY(20deg) translateX(20px) rotate(25deg) scale(0.9)';\n          \n          this._icon.style.transform = transform;\n          this._icon.style.transition = 'transform 0.5s ease-out, filter 0.3s ease-in';\n          this._icon.style.filter = 'drop-shadow(0 4px 12px rgba(160, 82, 45, 0.35))';\n          this._icon.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.35)';\n        });\n\n        // Cria o conector entre os marcadores\n        const connector = createConnector(\n          map,\n          lat,\n          lng,\n          parseFloat(otherPonto.latitude),\n          parseFloat(otherPonto.longitude)\n        );\n        connectorsRef.current.push(connector);\n      }\n\n      clusterGroup.addLayer(marker);\n    });\n\n    // Adiciona o grupo ao mapa\n    map.addLayer(clusterGroup);\n    clusterGroupRef.current = clusterGroup;\n\n    // Limpa o grupo e conectores quando o componente for desmontado\n    return () => {\n      if (clusterGroupRef.current) {\n        map.removeLayer(clusterGroupRef.current);\n      }\n      connectorsRef.current.forEach(connector => map.removeLayer(connector));\n      connectorsRef.current = [];\n    };\n  }, [map, pontosValidos, onClick, escolaIcon, visibility.educacao, dataPoints]);\n\n  return null;\n};\n\nexport default Marcadores; ","import React from 'react';\nimport { MapContainer, TileLayer } from \"react-leaflet\";\n\nconst isMobile = () => {\n  return window.innerWidth <= 768; // Define mobile para telas menores que 768px\n};\n\nconst MapaBase = ({ children }) => {\n  // Define coordenadas e zoom baseados no dispositivo para visualizar SP\n  const defaultPosition = isMobile() ? [-23.5505, -48.6333] : [-23.305, -43.9];\n  const defaultZoom = isMobile() ? 6 : 7; // Zoom mais aberto para visualizar mais do estado\n\n  return (\n    <div className=\"h-screen w-screen overflow-hidden\">\n      <MapContainer\n        center={defaultPosition}\n        zoom={defaultZoom}\n        className=\"h-full w-full\"\n        attributionControl={false} // Ativa o controle de atribuição padrão do Leaflet\n      >\n        {/* TileLayer com o mapa de fundo */}\n        <TileLayer\n        url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n      />\n\n        {/* Conteúdo adicional do mapa (marcadores, camadas, etc.) */}\n        {children}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapaBase;","import React, { useMemo, useEffect } from 'react';\nimport { GeoJSON } from 'react-leaflet';\n\nconst EstadoSP = ({ data }) => {\n  useEffect(() => {\n    if (data) {\n      console.log(\"EstadoSP: Dados recebidos:\", data);\n    }\n  }, [data]);\n\n  // Estilo para criar o efeito de contorno preto com escurecimento interno\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#000000',   // Linha preta\n      weight: 2,          // Espessura da linha\n      fillColor: '#000000', // Preto sólido\n      fillOpacity: 0.3,   // 30% de opacidade para escurecer o mapa\n      dashArray: '',      // Linha contínua\n      zIndex: 999,        // Mantém acima da base\n      interactive: false  // Desativa interatividade para manter fixo\n    }),\n    []\n  );\n\n  if (!data) return null;\n\n  return (\n    <GeoJSON \n      data={data} \n      style={defaultStyle}\n      interactive={false} // Garante que não há interatividade\n    />\n  );\n};\n\nexport default EstadoSP; ","import React, { useState, useEffect, memo, useCallback } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst CAMADAS = {\n  ESTADO_SP: { id: 'estadoSP', label: 'Estado de São Paulo', cor: '#10B981' },\n  ESCOLAS: { id: 'educacao', label: 'Escolas Indígenas', cor: '#3B82F6' },\n  TERRAS_INDIGENAS: { \n    id: 'terrasIndigenas', \n    label: 'Terras Indígenas', \n    cor: '#DC143C',\n    corSecundaria: '#8B0000',\n    labelSecundaria: 'Declaradas'\n  }\n};\n\nconst CabecalhoMenu = memo(({ onClose, onMinimize, isMobile, isMinimized }) => (\n  <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n    <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n    <div className=\"flex items-center gap-2\">\n      <button\n        onClick={onMinimize}\n        className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n        aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n        type=\"button\"\n      >\n        {isMinimized ? \"▾\" : \"▴\"}\n      </button>\n      <button\n        onClick={onClose}\n        className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n        aria-label=\"Fechar\"\n        type=\"button\"\n      >\n        ✕\n      </button>\n    </div>\n  </div>\n));\n\nCabecalhoMenu.displayName = 'CabecalhoMenu';\n\nconst BotaoCamada = memo(({ camada, ativo, onClick, total }) => (\n  <button\n    onClick={onClick}\n    className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n      ativo ? 'bg-gray-50' : 'hover:bg-gray-50'\n    }`}\n    type=\"button\"\n  >\n    {camada.id === 'terrasIndigenas' ? (\n      <div className=\"flex flex-col gap-1\">\n        <div className=\"flex items-center gap-1\">\n          <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.cor }} />\n          <span className=\"text-xs text-gray-600\">Regularizadas</span>\n        </div>\n        <div className=\"flex items-center gap-1\">\n          <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.corSecundaria }} />\n          <span className=\"text-xs text-gray-600\">{camada.labelSecundaria}</span>\n        </div>\n      </div>\n    ) : (\n      <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.cor }} />\n    )}\n    <span className=\"text-sm text-gray-800\">{camada.label}</span>\n    {total !== undefined && (\n      <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n    )}\n    <div className=\"ml-auto w-2 h-2 rounded-full\" style={{ backgroundColor: ativo ? camada.cor : '#e5e7eb' }} />\n  </button>\n));\n\nBotaoCamada.displayName = 'BotaoCamada';\n\nconst MenuCamadas = ({ estados, acoes, totalEscolas }) => {\n  const [menuAberto, setMenuAberto] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handlers para ações do menu\n  const handleMenuClose = useCallback(() => setMenuAberto(false), []);\n  const handleMenuOpen = useCallback(() => setMenuAberto(true), []);\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Renderização para mobile\n  if (isMobile) {\n    return (\n      <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n        <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n          <CabecalhoMenu\n            onClose={handleMenuClose}\n            onMinimize={handleMinimize}\n            isMobile={true}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n              <BotaoCamada \n                camada={CAMADAS.ESTADO_SP} \n                ativo={estados.estadoSP} \n                onClick={acoes.toggleEstadoSP} \n              />\n              <BotaoCamada \n                camada={CAMADAS.ESCOLAS} \n                ativo={estados.educacao} \n                onClick={acoes.toggleEducacao} \n                total={totalEscolas} \n              />\n              <BotaoCamada \n                camada={CAMADAS.TERRAS_INDIGENAS} \n                ativo={estados.terrasIndigenas} \n                onClick={acoes.toggleTerrasIndigenas} \n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Menu desktop fixo no topo direito\n  return (\n    <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n      <CabecalhoMenu \n        onClose={handleMenuClose}\n        onMinimize={handleMinimize}\n        isMobile={false}\n        isMinimized={isMinimized}\n      />\n      {!isMinimized && (\n        <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n          <BotaoCamada \n            camada={CAMADAS.ESTADO_SP} \n            ativo={estados.estadoSP} \n            onClick={acoes.toggleEstadoSP} \n          />\n          <BotaoCamada \n            camada={CAMADAS.ESCOLAS} \n            ativo={estados.educacao} \n            onClick={acoes.toggleEducacao} \n            total={totalEscolas} \n          />\n          <BotaoCamada \n            camada={CAMADAS.TERRAS_INDIGENAS} \n            ativo={estados.terrasIndigenas} \n            onClick={acoes.toggleTerrasIndigenas} \n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nMenuCamadas.propTypes = {\n  estados: PropTypes.shape({\n    estadoSP: PropTypes.bool.isRequired,\n    educacao: PropTypes.bool.isRequired,\n    terrasIndigenas: PropTypes.bool.isRequired\n  }).isRequired,\n  acoes: PropTypes.shape({\n    toggleEstadoSP: PropTypes.func.isRequired,\n    toggleEducacao: PropTypes.func.isRequired,\n    toggleTerrasIndigenas: PropTypes.func.isRequired\n  }).isRequired,\n  totalEscolas: PropTypes.number\n};\n\nMenuCamadas.displayName = 'MenuCamadas';\n\nexport default memo(MenuCamadas);","const detalhesIntro = {\n  titulo: \"Sobre o site\",\n  audioUrl: \"\",\n  descricao_detalhada: `Este é um observatório que busca mapear as escolas indígenas no estado de São Paulo.\n`,\n  imagens: [\"\"]\n};\n\nexport default detalhesIntro;\n","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect } from \"react\";\nimport MapaBase from \"./MapaBase\";\nimport Marcadores from \"./Marcadores\";\nimport Bairros from \"./Bairros\";\nimport TerrasIndigenas from \"./TerrasIndigenas\";\nimport EstadoSP from \"./EstadoSP\";\nimport MenuCamadas from \"./MenuCamadas\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport detalhesIntro from \"./detalhesInfo\";\nimport \"./MapaEscolasIndigenas.css\";\n\n// Função para converter título em slug\nconst criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-')     // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '')         // Remove hífens do início e fim\n    .trim();\n};\n\nconst MapaEscolasIndigenas = ({ dataPoints }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const panel = urlParams.get('panel');\n  var initialPanel = detalhesIntro;\n  console.log(\"detalhesIntro:\", detalhesIntro);\n  if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n    const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n    if (pointFound != null) {\n      initialPanel = pointFound;\n    }\n  }\n  console.log(\"initialPanel:\", initialPanel);\n\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [terrasIndigenasData, setTerrasIndigenasData] = useState(null);\n  const [estadoSPData, setEstadoSPData] = useState(null);\n  const [visibilidade, setVisibilidade] = useState({\n    educacao: true,\n    terrasIndigenas: true,\n    estadoSP: true,\n  });\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n    linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n  });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Calcula o total de escolas visíveis no mapa (com pontuação >= 0)\n  const escolasVisiveis = dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [];\n  const totalEscolas = escolasVisiveis.length;\n\n  useEffect(() => {\n    const fetchGeoJSON = async () => {\n      try {\n        console.log(\"Iniciando carregamento dos arquivos GeoJSON...\");\n        \n        const [bairrosResponse, terrasIndigenasResponse, estadoSPResponse] = await Promise.all([\n          fetch(`${process.env.PUBLIC_URL}/bairros.geojson`),\n          fetch(`${process.env.PUBLIC_URL}/terras_indigenas_simplified.geojson`),\n          fetch(`${process.env.PUBLIC_URL}/SP_simplified.geojson`)\n        ]);\n\n        console.log(\"Respostas recebidas:\", {\n          bairros: bairrosResponse.status,\n          terrasIndigenas: terrasIndigenasResponse.status,\n          estadoSP: estadoSPResponse.status\n        });\n\n        if (!bairrosResponse.ok) {\n          console.error(`Erro ao carregar GeoJSON dos bairros: HTTP status ${bairrosResponse.status}`);\n          return;\n        }\n        if (!terrasIndigenasResponse.ok) {\n          console.error(`Erro ao carregar GeoJSON das terras indígenas: HTTP status ${terrasIndigenasResponse.status}`);\n          return;\n        }\n        if (!estadoSPResponse.ok) {\n          console.error(`Erro ao carregar GeoJSON do estado: HTTP status ${estadoSPResponse.status}`);\n          return;\n        }\n\n        const [bairrosData, terrasIndigenasData, estadoSPData] = await Promise.all([\n          bairrosResponse.json(),\n          terrasIndigenasResponse.json(),\n          estadoSPResponse.json()\n        ]);\n\n        console.log(\"Dados GeoJSON carregados:\", {\n          bairros: bairrosData ? \"OK\" : \"Falha\",\n          terrasIndigenas: terrasIndigenasData ? \"OK\" : \"Falha\",\n          estadoSP: estadoSPData ? \"OK\" : \"Falha\"\n        });\n\n        if (!bairrosData || !bairrosData.features) {\n          console.error(\"Dados dos bairros inválidos:\", bairrosData);\n          return;\n        }\n\n        if (!terrasIndigenasData || !terrasIndigenasData.features) {\n          console.error(\"Dados das terras indígenas inválidos:\", terrasIndigenasData);\n          return;\n        }\n\n        if (!estadoSPData || !estadoSPData.features) {\n          console.error(\"Dados do estado inválidos:\", estadoSPData);\n          return;\n        }\n\n        setGeojsonData(bairrosData);\n        setTerrasIndigenasData(terrasIndigenasData);\n        setEstadoSPData(estadoSPData);\n\n        console.log(\"Estados atualizados com os dados GeoJSON\");\n      } catch (error) {\n        console.error(\"Erro ao carregar GeoJSON:\", error);\n      }\n    };\n    fetchGeoJSON();\n  }, []);\n\n  // Adicionar logs para verificar quando os dados são renderizados\n  useEffect(() => {\n    console.log(\"Estado dos dados GeoJSON:\", {\n      bairros: geojsonData ? \"Carregado\" : \"Não carregado\",\n      terrasIndigenas: terrasIndigenasData ? \"Carregado\" : \"Não carregado\",\n      estadoSP: estadoSPData ? \"Carregado\" : \"Não carregado\"\n    });\n  }, [geojsonData, terrasIndigenasData, estadoSPData]);\n\n  const abrirPainel = (info) => {\n    console.group(\"MapaEscolasIndigenas - abrirPainel\");\n    console.log(\"Info recebida:\", {\n      titulo: info?.titulo,\n      tipo: info?.tipo,\n      hasLink: !!info?.link_para_documentos,\n      linkValue: info?.link_para_documentos\n    });\n    setPainelInfo(info);\n    console.log(\"painelInfo atualizado\");\n    console.groupEnd();\n  };\n\n  const fecharPainel = () => {\n    console.group(\"MapaEscolasIndigenas - fecharPainel\");\n    console.log(\"Estado anterior:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos\n    });\n    setPainelInfo(null);\n    console.log(\"painelInfo definido como null\");\n    console.groupEnd();\n  };\n\n  const geoJSONStyle = {\n    fillColor: \"green\",\n    color: \"white\",\n    weight: 1,\n    fillOpacity: 0.4,\n  };\n\n  const toggleVisibilidade = (chave) => {\n    console.log(`Alterando visibilidade: ${chave}`);\n    setVisibilidade((prev) => ({ ...prev, [chave]: !prev[chave] }));\n  };\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      <MapaBase>\n        {visibilidade.estadoSP && estadoSPData && <EstadoSP data={estadoSPData} />}\n        {visibilidade.terrasIndigenas && terrasIndigenasData && (\n          <TerrasIndigenas \n            data={terrasIndigenasData} \n            onClick={abrirPainel}\n          />\n        )}\n        {dataPoints && <Marcadores dataPoints={escolasVisiveis} visibility={visibilidade} onClick={abrirPainel} />}\n      </MapaBase>\n\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes painelInfo={painelInfo} closePainel={fecharPainel} />\n        </>\n      )}\n      \n      <div className=\"absolute inset-0 pointer-events-none\">\n        <div className=\"pointer-events-auto\" style={{ zIndex: 20 }}>\n          <MenuCamadas\n            estados={visibilidade}\n            acoes={{\n              toggleEducacao: () => toggleVisibilidade(\"educacao\"),\n              toggleTerrasIndigenas: () => toggleVisibilidade(\"terrasIndigenas\"),\n              toggleEstadoSP: () => toggleVisibilidade(\"estadoSP\"),\n            }}\n            totalEscolas={totalEscolas}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import React, { useCallback, useMemo, useEffect } from 'react';\nimport { GeoJSON, useMap } from 'react-leaflet';\nimport L from 'leaflet';\n\nconst TerrasIndigenas = ({ data, onClick }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"TerrasIndigenas: Dados recebidos:\", {\n        type: data.type,\n        features: data.features ? data.features.length : 0,\n        properties: data.features ? data.features[0].properties : null\n      });\n    } else {\n      console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    }\n  }, [data]);\n\n  // Estilo padrão das terras indígenas\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#B22222', // Vermelho escuro na borda\n      weight: 2,\n      fillOpacity: 0.3,\n      fillColor: '#DC143C', // Vermelho vivo no preenchimento\n      dashArray: '3',\n      zIndex: 2\n    }),\n    []\n  );\n\n  // Função para determinar o estilo baseado no status da terra indígena\n  const style = useCallback(\n    (feature) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades:\", feature);\n        return defaultStyle;\n      }\n\n      const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n      console.log(`Terra indígena ${feature.properties.terrai_nom}: ${isRegularizada ? 'Regularizada' : 'Não Regularizada'}`);\n      \n      return {\n        ...defaultStyle,\n        fillColor: isRegularizada ? '#DC143C' : '#8B0000', // Regularizada vermelho vivo, não regularizada vermelho escuro\n        fillOpacity: isRegularizada ? 0.3 : 0.25\n      };\n    },\n    [defaultStyle]\n  );\n\n  // Estilo quando o mouse passa por cima\n  const hoverStyle = {\n    weight: 3,\n    color: '#FF0000', // Vermelho puro na borda ao passar o mouse\n    fillOpacity: 0.45,\n    dashArray: ''\n  };\n\n  const onEachFeature = useCallback(\n    (feature, layer) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades no onEachFeature:\", feature);\n        return;\n      }\n\n      // Adiciona tooltip com informações básicas\n      const tooltipContent = `\n        <div class=\"bg-white p-2 rounded shadow-md\">\n          <strong>${feature.properties.terrai_nom || 'Nome não disponível'}</strong><br/>\n          ${feature.properties.etnia_nome || 'Etnia não disponível'}<br/>\n          ${feature.properties.fase_ti || 'Fase não disponível'}\n        </div>\n      `;\n      layer.bindTooltip(tooltipContent, {\n        sticky: true,\n        className: 'custom-tooltip'\n      });\n\n      layer.on({\n        mouseover: (e) => {\n          const layer = e.target;\n          layer.setStyle(hoverStyle);\n          layer.bringToFront();\n        },\n        mouseout: (e) => {\n          e.target.setStyle(style(feature));\n        },\n        click: (e) => {\n          const layer = e.target;\n\n          // Prepara os dados para o painel\n          const terraIndigenaInfo = {\n            titulo: feature.properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: feature.properties.etnia_nome,\n            municipio: feature.properties.municipio_,\n            uf: feature.properties.uf_sigla,\n            superficie: feature.properties.superficie,\n            fase: feature.properties.fase_ti,\n            modalidade: feature.properties.modalidade,\n            reestudo: feature.properties.reestudo_t,\n            cr: feature.properties.cr,\n            faixa_fron: feature.properties.faixa_fron,\n            undadm_nom: feature.properties.undadm_nom,\n            undadm_sig: feature.properties.undadm_sig,\n            dominio_un: feature.properties.dominio_un,\n            data_atual: feature.properties.data_atual,\n            terrai_cod: feature.properties.terrai_cod,\n            undadm_cod: feature.properties.undadm_cod\n          };\n\n          if (onClick) {\n            onClick(terraIndigenaInfo);\n          }\n        }\n      });\n    },\n    [map, style, onClick]\n  );\n\n  if (!data) {\n    console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    return null;\n  }\n\n  if (!data.type || data.type !== 'FeatureCollection') {\n    console.error(\"TerrasIndigenas: Formato de GeoJSON inválido. Esperado FeatureCollection, recebido:\", data.type);\n    return null;\n  }\n\n  if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n    console.error(\"TerrasIndigenas: GeoJSON sem features válidas\");\n    return null;\n  }\n\n  return <GeoJSON data={data} style={style} onEachFeature={onEachFeature} />;\n};\n\nexport default TerrasIndigenas; "],"names":["PROXIMITY_THRESHOLD","_ref","dataPoints","visibility","onClick","map","useMap","clusterGroupRef","useRef","connectorsRef","pontosValidos","React","Array","isArray","length","console","warn","log","escolasComProblemas","pontosFiltrados","filter","ponto","titulo","latitude","longitude","push","escola","problema","detalhes","lat","parseFloat","lng","isNaN","limites","latMin","latMax","lngMin","lngMax","group","forEach","groupEnd","concat","escolaIcon","violetIcon","useEffect","educacao","current","removeLayer","connector","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","Math","abs","lngDiff","add","findNearbyPairs","clusterGroup","flat","L","chunkedLoading","maxClusterRadius","spiderfyOnMaxZoom","showCoverageOnHover","zoomToBoundsOnClick","removeOutsideVisibleBounds","animate","disableClusteringAtZoom","minZoom","maxZoom","iconCreateFunction","cluster","count","getChildCount","size","background","iconUrl","options","iconSize","html","className","animateAddingMarkers","spiderLegPolylineOptions","weight","color","opacity","dashArray","chunkInterval","chunkDelay","singleMarkerMode","spiderfyDistanceMultiplier","polygonOptions","fillColor","fillOpacity","index","marker","icon","zIndexOffset","bindTooltip","capitalizeWords","direction","offset","permanent","on","pairIndex","findIndex","pair","includes","first","second","isFirst","otherPonto","transform","this","_icon","style","transition","boxShadow","createConnector","centerLat","centerLng","markerLat","markerLng","addTo","addLayer","isMobile","window","innerWidth","children","defaultPosition","defaultZoom","_jsx","_jsxs","MapContainer","center","zoom","attributionControl","TileLayer","url","data","defaultStyle","useMemo","zIndex","interactive","GeoJSON","CAMADAS","ESTADO_SP","id","label","cor","ESCOLAS","TERRAS_INDIGENAS","corSecundaria","labelSecundaria","CabecalhoMenu","memo","onClose","onMinimize","isMinimized","type","displayName","BotaoCamada","_ref2","camada","ativo","total","backgroundColor","undefined","MenuCamadas","_ref3","estados","acoes","totalEscolas","menuAberto","setMenuAberto","useState","setIsMobile","setIsMinimized","checkMobile","useCallback","addEventListener","removeEventListener","handleMenuClose","handleMinimize","prev","estadoSP","toggleEstadoSP","toggleEducacao","terrasIndigenas","toggleTerrasIndigenas","audioUrl","descricao_detalhada","imagens","quantidade","exemplo","tipo","panel","URLSearchParams","location","search","get","initialPanel","detalhesIntro","pointFound","find","item","toLowerCase","normalize","replace","trim","geojsonData","setGeojsonData","terrasIndigenasData","setTerrasIndigenasData","estadoSPData","setEstadoSPData","visibilidade","setVisibilidade","painelInfo","setPainelInfo","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","escolasVisiveis","point","pontuacao","async","bairrosResponse","terrasIndigenasResponse","estadoSPResponse","Promise","all","fetch","process","bairros","status","ok","error","bairrosData","json","features","fetchGeoJSON","abrirPainel","info","toggleVisibilidade","chave","_objectSpread","MapaBase","EstadoSP","TerrasIndigenas","Marcadores","_Fragment","PainelInformacoes","closePainel","fecharPainel","createPathComponent","ctx","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","layer","props","prevProps","resetStyle","setStyle","properties","feature","isRegularizada","fase_ti","terrai_nom","hoverStyle","onEachFeature","tooltipContent","etnia_nome","sticky","mouseover","e","target","bringToFront","mouseout","click","terraIndigenaInfo","etnia","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod"],"sourceRoot":""}
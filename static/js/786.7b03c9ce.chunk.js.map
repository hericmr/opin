{"version":3,"file":"static/js/786.7b03c9ce.chunk.js","mappings":"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","sources":["services/legendasService.js","utils/openlayers/markerStyles.js","utils/openlayers/interactions.js","utils/mapConfig.js","utils/mobileUtils.js","components/OpenLayers/OpenLayersMarkers.js","utils/openlayers/layerStyles.js","components/OpenLayers/OpenLayersTerrasIndigenas.js","components/OpenLayers/OpenLayersEstadoSP.js","components/OpenLayers/OpenLayersLayers.js","components/map/MapWrapper.jsx","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","utils/slug.js","components/hooks/useDocumentosEscola.js","components/PainelInformacoes/components/InfoSection.js","components/PainelInformacoes/components/EscolaInfo/BasicInfo.js","components/PainelInformacoes/components/ImagensdasEscolas.js","components/PainelInformacoes/components/EscolaInfo/HistoriaEscola.js","components/PainelInformacoes/components/BooleanValue.js","components/PainelInformacoes/components/EscolaInfo/Modalidades.js","components/PainelInformacoes/components/EscolaInfo/Infraestrutura.js","components/PainelInformacoes/components/EscolaInfo/GestaoProfessores.js","components/PainelInformacoes/components/EscolaInfo/ProjetosParcerias.js","components/PainelInformacoes/components/ImagemHistoriadoProfessor.js","services/historiaProfessorService.js","components/PainelInformacoes/components/EscolaInfo/HistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/index.js","components/PainelInformacoes/icons/HandFistIcon.js","components/PainelInformacoes/components/InfoItem.js","components/PainelInformacoes/TerraIndigenaInfo.js","components/ShareButton.js","components/PainelInformacoes/ShareSection.js","components/PainelDescricao.js","components/PainelInformacoes/IntroPanel.js","utils/textFormatting.js","components/PainelHeader.js","components/hooks/usePainelVisibility.js","components/PainelInformacoes/components/PainelContainer.js","components/hooks/usePainelDimensions.js","components/PainelInformacoes/components/DocumentViewer.js","components/PainelInformacoes/components/VideoPlayer.js","components/PainelInformacoes/index.js","components/hooks/useShare.js","components/hooks/useClickOutside.js","components/hooks/useDynamicURL.js","components/MapaEscolasIndigenas.js"],"sourcesContent":["import { supabase } from '../supabaseClient';\n\n/**\n * Buscar legendas de fotos de uma escola\n * @param {number} escolaId - ID da escola\n * @param {string} tipoFoto - 'escola' ou 'professor' (opcional, busca todas se não especificado)\n * @returns {Promise<Array>} Lista de legendas de fotos\n */\nexport const getLegendasFotos = async (escolaId, tipoFoto = null) => {\n  try {\n    let query = supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('created_at', { ascending: false });\n\n    // Verificar se a coluna tipo_foto existe antes de usá-la\n    if (tipoFoto) {\n      try {\n        query = query.eq('tipo_foto', tipoFoto);\n      } catch (columnError) {\n        // Se a coluna não existe, ignorar o filtro por tipo\n        console.warn('Coluna tipo_foto não encontrada. Ignorando filtro por tipo.');\n      }\n    }\n\n    const { data, error } = await query;\n\n    if (error) {\n      throw error;\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Erro ao buscar legendas de fotos:', error);\n    throw error;\n  }\n};\n\n/**\n * Adicionar legenda de foto\n * @param {Object} legenda - Dados da legenda\n * @returns {Promise<Object>} Legenda criada\n */\nexport const addLegendaFoto = async (legenda) => {\n  try {\n    console.log('=== DEBUG: addLegendaFoto ===');\n    console.log('Dados recebidos:', legenda);\n    \n    // Remover tipo_foto se a coluna não existir no banco\n    const legendaData = { ...legenda };\n    console.log('Dados iniciais:', legendaData);\n    \n    // Verificar se a coluna tipo_foto existe antes de incluí-la\n    try {\n      console.log('Verificando se a coluna tipo_foto existe...');\n      // Tentar uma consulta simples para verificar se a coluna existe\n      const { data: testData, error: testError } = await supabase\n        .from('legendas_fotos')\n        .select('tipo_foto')\n        .limit(1);\n      \n      console.log('Teste da coluna tipo_foto:', { testData, testError });\n      \n      if (testError && testError.code === '42703') {\n        // Se a coluna não existe, remover do objeto\n        console.warn('Coluna tipo_foto não encontrada. Removendo do objeto de inserção.');\n        delete legendaData.tipo_foto;\n      }\n    } catch (columnError) {\n      // Se a coluna não existe, remover do objeto\n      console.warn('Coluna tipo_foto não encontrada. Removendo do objeto de inserção.');\n      delete legendaData.tipo_foto;\n    }\n\n    console.log('Dados finais para inserção:', legendaData);\n    \n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .insert([legendaData])\n      .select()\n      .single();\n\n    console.log('Resposta do Supabase:', { data, error });\n\n    if (error) {\n      console.error('Erro do Supabase:', error);\n      throw error;\n    }\n\n    console.log('Legenda criada com sucesso:', data);\n    return data;\n  } catch (error) {\n    console.error('Erro ao adicionar legenda de foto:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar legenda de foto\n * @param {number} id - ID da legenda\n * @param {Object} updates - Dados para atualizar\n * @returns {Promise<Object>} Legenda atualizada\n */\nexport const updateLegendaFoto = async (id, updates) => {\n  try {\n    console.log('=== DEBUG: updateLegendaFoto ===');\n    console.log('ID da legenda:', id);\n    console.log('Dados para atualização:', updates);\n    \n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    console.log('Resposta do Supabase:', { data, error });\n\n    if (error) {\n      console.error('Erro do Supabase ao atualizar:', error);\n      throw error;\n    }\n\n    console.log('Legenda atualizada com sucesso:', data);\n    return data;\n  } catch (error) {\n    console.error('Erro ao atualizar legenda de foto:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar legenda de foto (soft delete)\n * @param {number} id - ID da legenda\n * @returns {Promise<boolean>} Sucesso da operação\n */\nexport const deleteLegendaFoto = async (id) => {\n  try {\n    const { error } = await supabase\n      .from('legendas_fotos')\n      .update({ ativo: false })\n      .eq('id', id);\n\n    if (error) {\n      throw error;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao deletar legenda de foto:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar títulos de vídeos de uma escola\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Array>} Lista de títulos de vídeos\n */\nexport const getTitulosVideos = async (escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      throw error;\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Erro ao buscar títulos de vídeos:', error);\n    throw error;\n  }\n};\n\n/**\n * Adicionar título de vídeo\n * @param {Object} titulo - Dados do título\n * @returns {Promise<Object>} Título criado\n */\nexport const addTituloVideo = async (titulo) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .insert([titulo])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao adicionar título de vídeo:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar título de vídeo\n * @param {number} id - ID do título\n * @param {Object} updates - Dados para atualizar\n * @returns {Promise<Object>} Título atualizado\n */\nexport const updateTituloVideo = async (id, updates) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao atualizar título de vídeo:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar título de vídeo (soft delete)\n * @param {number} id - ID do título\n * @returns {Promise<boolean>} Sucesso da operação\n */\nexport const deleteTituloVideo = async (id) => {\n  try {\n    const { error } = await supabase\n      .from('titulos_videos')\n      .update({ ativo: false })\n      .eq('id', id);\n\n    if (error) {\n      throw error;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao deletar título de vídeo:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar legenda de foto por URL da imagem\n * @param {string} imagemUrl - URL da imagem\n * @param {number} escolaId - ID da escola\n * @param {string} tipoFoto - 'escola' ou 'professor' (opcional)\n * @returns {Promise<Object|null>} Legenda encontrada ou null\n */\nexport const getLegendaByImageUrl = async (imagemUrl, escolaId, tipoFoto = null) => {\n  try {\n    console.log('getLegendaByImageUrl chamada com:', { imagemUrl, escolaId, tipoFoto });\n    \n    // 1. Tenta buscar por igualdade exata\n    let query = supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', imagemUrl)\n      .eq('escola_id', escolaId)\n      .eq('ativo', true);\n\n    if (tipoFoto) {\n      try {\n        query = query.eq('tipo_foto', tipoFoto);\n      } catch (columnError) {\n        console.warn('Coluna tipo_foto não encontrada. Ignorando filtro por tipo.');\n      }\n    }\n\n    let { data, error } = await query.single();\n    console.log('Busca exata resultou em:', { data, error });\n\n    // Se não encontrou, tenta buscar por finalização\n    if ((error && error.code === 'PGRST116') || !data) {\n      console.log('Tentando busca por finalização...');\n      // Busca por finalização (ilike)\n      const caminhoRelativo = imagemUrl.split('/').slice(-2).join('/'); // ex: 20/2.png\n      console.log('Caminho relativo extraído:', caminhoRelativo);\n      \n      let query2 = supabase\n        .from('legendas_fotos')\n        .select('*')\n        .ilike('imagem_url', `%/${caminhoRelativo}`)\n        .eq('escola_id', escolaId)\n        .eq('ativo', true);\n\n      if (tipoFoto) {\n        try {\n          query2 = query2.eq('tipo_foto', tipoFoto);\n        } catch (columnError) {\n          // Se a coluna não existe, ignora\n        }\n      }\n\n      const { data: data2, error: error2 } = await query2.single();\n      console.log('Busca por finalização resultou em:', { data2, error2 });\n      \n      if (!error2 && data2) {\n        return data2;\n      }\n    }\n\n    if (error && error.code !== 'PGRST116') {\n      throw error;\n    }\n\n    return data || null;\n  } catch (error) {\n    console.error('Erro ao buscar legenda por URL:', error);\n    return null;\n  }\n};\n\n/**\n * Buscar título de vídeo por URL do vídeo\n * @param {string} videoUrl - URL do vídeo\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Object|null>} Título encontrado ou null\n */\nexport const getTituloByVideoUrl = async (videoUrl, escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .select('*')\n      .eq('video_url', videoUrl)\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .single();\n\n    if (error && error.code !== 'PGRST116') { // PGRST116 = no rows returned\n      throw error;\n    }\n\n    return data || null;\n  } catch (error) {\n    console.error('Erro ao buscar título por URL:', error);\n    return null;\n  }\n};\n\n/**\n * Migrar dados existentes de imagens para legendas\n * @param {number} escolaId - ID da escola\n * @param {string} tipoFoto - 'escola' ou 'professor'\n * @returns {Promise<Array>} Legendas migradas\n */\nexport const migrarLegendasExistentes = async (escolaId, tipoFoto = 'escola') => {\n  try {\n    let imagens = [];\n    \n    if (tipoFoto === 'escola') {\n      // Buscar imagens existentes da tabela imagens_escola\n      const { data, error } = await supabase\n        .from('imagens_escola')\n        .select('*')\n        .eq('escola_id', escolaId)\n        .eq('ativo', true);\n\n      if (error) {\n        throw error;\n      }\n      imagens = data || [];\n    } else if (tipoFoto === 'professor') {\n      // Buscar imagens dos professores do bucket\n      const { data, error } = await supabase.storage\n        .from('imagens-professores')\n        .list(`${escolaId}/`);\n\n      if (error) {\n        throw error;\n      }\n      \n      imagens = (data || []).map(file => ({\n        url: `${escolaId}/${file.name}`,\n        descricao: `Imagem do professor - ${file.name}`,\n        created_at: file.created_at\n      }));\n    }\n\n    const legendasMigradas = [];\n\n    for (const imagem of imagens) {\n      // Verificar se já existe legenda para esta imagem\n      const legendaExistente = await getLegendaByImageUrl(imagem.url, escolaId, tipoFoto);\n      \n      if (!legendaExistente) {\n        // Criar nova legenda\n        const novaLegenda = await addLegendaFoto({\n          escola_id: escolaId,\n          imagem_url: imagem.url,\n          legenda: imagem.descricao || `Imagem da ${tipoFoto}`,\n          descricao_detalhada: imagem.descricao,\n          categoria: 'geral',\n          tipo_foto: tipoFoto,\n          ativo: true\n        });\n        \n        legendasMigradas.push(novaLegenda);\n      }\n    }\n\n    return legendasMigradas;\n  } catch (error) {\n    console.error('Erro ao migrar legendas existentes:', error);\n    throw error;\n  }\n};\n\n/**\n * Migrar dados existentes de vídeos para títulos\n * @param {number} escolaId - ID da escola\n * @param {string} videoUrl - URL do vídeo\n * @returns {Promise<Object|null>} Título migrado\n */\nexport const migrarTituloExistente = async (escolaId, videoUrl) => {\n  try {\n    if (!videoUrl) return null;\n\n    // Verificar se já existe título para este vídeo\n    const tituloExistente = await getTituloByVideoUrl(videoUrl, escolaId);\n    \n    if (!tituloExistente) {\n      // Determinar plataforma\n      let plataforma = 'outro';\n      if (videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be')) {\n        plataforma = 'youtube';\n      } else if (videoUrl.includes('vimeo.com')) {\n        plataforma = 'vimeo';\n      }\n\n      // Criar novo título\n      const novoTitulo = await addTituloVideo({\n        escola_id: escolaId,\n        video_url: videoUrl,\n        titulo: `Vídeo da Escola - ${plataforma.charAt(0).toUpperCase() + plataforma.slice(1)}`,\n        descricao: 'Vídeo relacionado à escola indígena',\n        plataforma: plataforma,\n        categoria: 'geral',\n        ativo: true\n      });\n      \n      return novoTitulo;\n    }\n\n    return tituloExistente;\n  } catch (error) {\n    console.error('Erro ao migrar título existente:', error);\n    throw error;\n  }\n};\n\n/**\n * Função de teste para verificar a estrutura da tabela legendas_fotos\n * @returns {Promise<void>}\n */\nexport const testLegendasTable = async () => {\n  try {\n    console.log('=== TESTE: Verificando estrutura da tabela legendas_fotos ===');\n    \n    // Teste 1: Verificar se a tabela existe\n    const { data: tableData, error: tableError } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .limit(1);\n    \n    console.log('Teste 1 - Tabela existe:', { tableData, tableError });\n    \n    if (tableError) {\n      console.error('❌ ERRO: Tabela legendas_fotos não existe ou não está acessível:', tableError);\n      return;\n    }\n    \n    // Teste 2: Verificar estrutura da tabela\n    const { data: structureData, error: structureError } = await supabase\n      .from('legendas_fotos')\n      .select('id, escola_id, imagem_url, legenda, descricao_detalhada, autor_foto, data_foto, categoria, ativo, created_at, updated_at')\n      .limit(1);\n    \n    console.log('Teste 2 - Estrutura da tabela:', { structureData, structureError });\n    \n    if (structureError) {\n      console.error('❌ ERRO: Problema com estrutura da tabela:', structureError);\n    } else {\n      console.log('✅ Estrutura básica da tabela está OK');\n    }\n    \n    // Teste 3: Verificar se a coluna tipo_foto existe\n    try {\n      const { data: tipoData, error: tipoError } = await supabase\n        .from('legendas_fotos')\n        .select('tipo_foto')\n        .limit(1);\n      \n      console.log('Teste 3 - Coluna tipo_foto:', { tipoData, tipoError });\n      \n      if (tipoError && tipoError.code === '42703') {\n        console.log('⚠️ AVISO: Coluna tipo_foto não existe na tabela');\n      } else if (tipoError) {\n        console.error('❌ ERRO: Problema com coluna tipo_foto:', tipoError);\n      } else {\n        console.log('✅ Coluna tipo_foto existe');\n      }\n    } catch (tipoError) {\n      console.log('⚠️ AVISO: Coluna tipo_foto não existe na tabela');\n    }\n    \n    // Teste 4: Tentar inserir um registro de teste\n    console.log('Teste 4 - Testando inserção...');\n    const testRecord = {\n      escola_id: 999999, // ID que não existe\n      imagem_url: 'test/test.jpg',\n      legenda: 'Teste de legenda',\n      descricao_detalhada: 'Descrição de teste',\n      autor_foto: 'Teste',\n      data_foto: '2024-01-01',\n      categoria: 'teste',\n      ativo: true,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n    \n    try {\n      const { data: insertData, error: insertError } = await supabase\n        .from('legendas_fotos')\n        .insert([testRecord])\n        .select()\n        .single();\n      \n      console.log('Teste 4 - Inserção de teste:', { insertData, insertError });\n      \n      if (insertError) {\n        console.error('❌ ERRO: Problema com inserção:', insertError);\n      } else {\n        console.log('✅ Inserção funcionando - removendo registro de teste...');\n        \n        // Remover o registro de teste\n        const { error: deleteError } = await supabase\n          .from('legendas_fotos')\n          .delete()\n          .eq('id', insertData.id);\n        \n        if (deleteError) {\n          console.error('⚠️ AVISO: Não foi possível remover registro de teste:', deleteError);\n        } else {\n          console.log('✅ Registro de teste removido com sucesso');\n        }\n      }\n    } catch (insertError) {\n      console.error('❌ ERRO: Falha na inserção de teste:', insertError);\n    }\n    \n    console.log('=== FIM DO TESTE ===');\n    \n  } catch (error) {\n    console.error('❌ ERRO GERAL no teste da tabela:', error);\n  }\n}; \n ","import { Style, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\n\n// Caminho para o marcador SVG\nconst MARKER_SVG_PATH = `${process.env.PUBLIC_URL || ''}/map-marker.svg`;\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n/**\n * Cria estilo para marcador individual\n * @param {Object} feature - Feature do OpenLayers\n * @param {boolean} showNames - Se deve mostrar nomes das escolas\n * @returns {Style} Estilo do marcador\n */\nexport const createMarkerStyle = (feature, showNames = false) => {\n  const markerData = feature.get('markerData') || feature.get('schoolData'); // Suporta ambos\n  const isNearbyPair = feature.get('isNearbyPair');\n  \n  if (!markerData) return null;\n\n  const baseColor = isNearbyPair ? MARKER_COLORS.nearbyPair : MARKER_COLORS.individual;\n  const borderColor = isNearbyPair ? '#DC2626' : MARKER_COLORS.individualBorder;\n\n  // Estilo base do marcador (ícone SVG)\n  const markerStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: isNearbyPair ? 1.2 : 1.0,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Se deve mostrar nomes, adicionar texto\n  if (showNames && markerData.titulo) {\n    const textStyle = new Style({\n      text: new Text({\n        text: markerData.titulo,\n        font: '12px Arial',\n        fill: new Fill({\n          color: '#1F2937'\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center'\n      }),\n      geometry: feature.getGeometry()\n    });\n    \n    return [markerStyle, textStyle];\n  }\n\n  return markerStyle;\n};\n\n/**\n * Cria estilo para cluster de marcadores\n * @param {Object} feature - Feature do cluster\n * @param {Function} markerStyleFunction - Função para estilizar marcadores individuais\n * @returns {Style} Estilo do cluster\n */\nexport const createClusterStyle = (feature, markerStyleFunction) => {\n  const features = feature.get('features');\n  \n  if (!features || features.length === 0) {\n    return markerStyleFunction(feature);\n  }\n\n  // Se for apenas um marcador, usar estilo de marcador individual\n  if (features.length === 1) {\n    return markerStyleFunction(features[0]);\n  }\n\n  // Determinar tamanho e cor do cluster baseado na quantidade\n  let clusterSize, clusterColor;\n  const count = features.length;\n\n  if (count <= CLUSTER_SIZES.small.max) {\n    clusterSize = CLUSTER_SIZES.small.size;\n    clusterColor = MARKER_COLORS.cluster.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    clusterSize = CLUSTER_SIZES.medium.size;\n    clusterColor = MARKER_COLORS.cluster.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    clusterSize = CLUSTER_SIZES.large.size;\n    clusterColor = MARKER_COLORS.cluster.large;\n  } else if (count <= CLUSTER_SIZES.xlarge.max) {\n    clusterSize = CLUSTER_SIZES.xlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  } else {\n    clusterSize = CLUSTER_SIZES.xxlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  }\n\n  // Determinar fonte baseada no tamanho\n  let font;\n  if (count <= CLUSTER_SIZES.small.max) {\n    font = CLUSTER_FONTS.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    font = CLUSTER_FONTS.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    font = CLUSTER_FONTS.large;\n  } else {\n    font = CLUSTER_FONTS.xlarge;\n  }\n\n  return new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: Math.max(0.8, clusterSize / 80),\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    text: new Text({\n      text: count.toString(),\n      font: font,\n      fill: new Fill({\n        color: '#FFFFFF'\n      }),\n      stroke: new Stroke({\n        color: '#1F2937',\n        width: 1\n      })\n    })\n  });\n};\n\n/**\n * Cria estilo para marcador com indicador de par próximo\n * @param {Object} feature - Feature do marcador\n * @returns {Style} Estilo do marcador com indicador\n */\nexport const createNearbyPairStyle = (feature) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle || !Array.isArray(baseStyle)) {\n    return baseStyle;\n  }\n\n  // Adicionar indicador de par próximo\n  const indicatorStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 0.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Posicionar indicador no canto superior direito\n  const geometry = feature.getGeometry();\n  const coordinates = geometry.getCoordinates();\n  const offsetX = 0.0001; // Ajustar conforme necessário\n  const offsetY = 0.0001;\n  \n  const indicatorGeometry = new Point([\n    coordinates[0] + offsetX,\n    coordinates[1] + offsetY\n  ]);\n  \n  indicatorStyle.setGeometry(indicatorGeometry);\n  \n  return [...baseStyle, indicatorStyle];\n};\n\n/**\n * Cria estilo para marcador com tooltip\n * @param {Object} feature - Feature do marcador\n * @param {string} tooltipText - Texto do tooltip\n * @returns {Style} Estilo do marcador com tooltip\n */\nexport const createMarkerWithTooltipStyle = (feature, tooltipText) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle) return null;\n\n  // Adicionar tooltip como texto\n  const tooltipStyle = new Style({\n    text: new Text({\n      text: tooltipText,\n      font: '11px Arial',\n      fill: new Fill({\n        color: '#1F2937'\n      }),\n      stroke: new Stroke({\n        color: '#FFFFFF',\n        width: 2\n      }),\n      offsetY: -25,\n      textAlign: 'center',\n      backgroundFill: new Fill({\n        color: 'rgba(255, 255, 255, 0.9)'\n      }),\n      backgroundStroke: new Stroke({\n        color: '#E5E7EB',\n        width: 1\n      }),\n      padding: [4, 8]\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, tooltipStyle] : [baseStyle, tooltipStyle];\n};\n\n/**\n * Aplica estilo de hover ao marcador\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito hover\n */\nexport const applyHoverStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const hoverStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.3,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, hoverStyle] : [baseStyle, hoverStyle];\n};\n\n/**\n * Cria estilo para marcador selecionado\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const selectionStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n","import { isMobile } from '../mobileUtils';\n\n/**\n * Classe para gerenciar interações e eventos do OpenLayers\n */\nexport class OpenLayersInteractions {\n  constructor(map, options = {}) {\n    this.map = map;\n    this.options = {\n      enableHover: options.enableHover !== false,\n      enableClick: options.enableClick !== false,\n      enableDoubleClick: options.enableDoubleClick !== false,\n      enableTouch: options.enableTouch !== false,\n      hoverDelay: options.hoverDelay || 200,\n      clickDelay: options.clickDelay || 300,\n      ...options\n    };\n\n    this.eventHandlers = new Map();\n    this.hoveredFeature = null;\n    this.clickedFeature = null;\n    this.clickTimeout = null;\n    this.hoverTimeout = null;\n    this.tooltipElement = null;\n    console.log('[OpenLayersInteractions] Interações inicializadas');\n\n    this.initializeInteractions();\n  }\n\n  /**\n   * Verifica se é dispositivo mobile (dinâmico)\n   */\n  isMobile() {\n    return window.innerWidth <= 768;\n  }\n\n  /**\n   * Inicializa todas as interações\n   */\n  initializeInteractions() {\n    if (this.options.enableHover) {\n      this.setupHoverInteraction();\n    }\n\n    if (this.options.enableClick) {\n      this.setupClickInteraction();\n    }\n\n    if (this.options.enableDoubleClick) {\n      this.setupDoubleClickInteraction();\n    }\n\n    if (this.options.enableTouch && this.isMobile()) {\n      this.setupTouchInteraction();\n    }\n  }\n\n  /**\n   * Configura interação de hover\n   */\n  setupHoverInteraction() {\n    this.map.on('pointermove', (event) => {\n      this.handlePointerMove(event);\n    });\n\n    this.map.on('pointerleave', () => {\n      this.handlePointerLeave();\n    });\n  }\n\n  /**\n   * Configura interação de clique\n   */\n  setupClickInteraction() {\n    this.map.on('click', (event) => {\n      this.handleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação de duplo clique\n   */\n  setupDoubleClickInteraction() {\n    this.map.on('dblclick', (event) => {\n      this.handleDoubleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação touch para mobile\n   */\n  setupTouchInteraction() {\n    // Em mobile, usar o sistema de clique com tooltip\n    // O handleClick já trata mobile vs desktop\n    console.log('[OpenLayersInteractions] Touch interaction configurada para mobile');\n  }\n\n  /**\n   * Handler para movimento do ponteiro (hover)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handlePointerMove(event) {\n    if (this.isMobile()) return; // Desabilitar hover em mobile\n\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    // Debug: verificar se está detectando features\n    if (feature && !this.hoveredFeature) {\n      console.log('[OpenLayersInteractions] Feature detectado:', {\n        type: feature.get('type'),\n        schoolData: feature.get('schoolData'),\n        terraIndigenaInfo: feature.get('terraIndigenaInfo')\n      });\n    }\n    \n    if (feature !== this.hoveredFeature) {\n      // Limpar hover anterior\n      if (this.hoveredFeature) {\n        this.clearHover();\n      }\n\n      // Aplicar novo hover\n      if (feature) {\n        this.applyHover(feature, event);\n      }\n    }\n  }\n\n  /**\n   * Handler para saída do ponteiro\n   */\n  handlePointerLeave() {\n    this.clearHover();\n  }\n\n  /**\n   * Handler para clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, primeiro clique mostra tooltip, segundo abre painel\n    if (this.isMobile()) {\n      this.handleMobileClick(feature, event);\n      return;\n    }\n\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique no mesmo feature\n      this.handleDoubleClick(event);\n      return;\n    }\n\n    // Primeiro clique\n    this.clickedFeature = feature;\n    \n    // Configurar timeout para resetar o clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      this.clickedFeature = null;\n    }, this.options.clickDelay);\n\n    // Executar handler de clique único\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para duplo clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleDoubleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Limpar timeout de clique único\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n\n    // Resetar feature clicado\n    this.clickedFeature = null;\n\n    // Executar handler de duplo clique\n    this.executeDoubleClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para fim de toque (mobile)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleTouchEnd(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, toque único executa ação de clique\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para clique em mobile (primeiro mostra tooltip, segundo abre painel)\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleMobileClick(feature, event) {\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique: abrir painel\n      console.log('[OpenLayersInteractions] Segundo clique em mobile - abrindo painel');\n      this.forceHideTooltip(); // Esconder tooltip e resetar estado\n      this.executeClickHandler(feature, event); // Abrir painel\n      return;\n    }\n\n    // Primeiro clique: mostrar tooltip\n    console.log('[OpenLayersInteractions] Primeiro clique em mobile - mostrando tooltip');\n    this.clickedFeature = feature;\n    \n    // Mostrar tooltip\n    if (this.options.showTooltip) {\n      this.showTooltip(feature, event);\n    }\n\n    // Configurar timeout para esconder tooltip e resetar clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      console.log('[OpenLayersInteractions] Timeout mobile - escondendo tooltip e resetando');\n      this.forceHideTooltip();\n    }, 3000); // 3 segundos de timeout\n\n    // Executar handler de hover para aplicar estilo visual\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Aplica efeito de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  applyHover(feature, event) {\n    this.hoveredFeature = feature;\n    \n    // Aplicar estilo de hover\n    this.applyHoverStyle(feature);\n    \n    // Mostrar tooltip se configurado (apenas em desktop)\n    if (this.options.showTooltip && !this.isMobile()) {\n      this.showTooltip(feature, event);\n    }\n\n    // Executar handler de hover\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Remove efeito de hover\n   */\n  clearHover() {\n    if (this.hoveredFeature) {\n      // Remover estilo de hover\n      this.clearHoverStyle(this.hoveredFeature);\n      \n      // Em mobile, não esconder tooltip automaticamente\n      // O tooltip é controlado pelo sistema de clique\n      if (!this.isMobile()) {\n        this.hideTooltip();\n      }\n      \n      // Executar handler de hover out\n      this.executeHoverOutHandler(this.hoveredFeature);\n      \n      this.hoveredFeature = null;\n    }\n  }\n\n  /**\n   * Aplica estilo de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  applyHoverStyle(feature) {\n    // Implementar lógica de estilo de hover\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, true);\n    }\n  }\n\n  /**\n   * Remove estilo de hover de um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  clearHoverStyle(feature) {\n    // Implementar lógica de remoção de estilo de hover\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, false);\n    }\n  }\n\n  /**\n   * Mostra tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  showTooltip(feature, event) {\n    if (this.tooltipElement) {\n      this.hideTooltip();\n    }\n\n    const tooltipContent = this.getTooltipContent(feature);\n    console.log('[OpenLayersInteractions] Conteúdo do tooltip:', tooltipContent);\n    \n    if (!tooltipContent) {\n      console.log('[OpenLayersInteractions] Sem conteúdo para tooltip');\n      return;\n    }\n\n    this.tooltipElement = this.createTooltipElement(tooltipContent, event);\n    this.map.getTargetElement().appendChild(this.tooltipElement);\n    console.log('[OpenLayersInteractions] Tooltip criado e adicionado ao DOM');\n  }\n\n  /**\n   * Esconde tooltip\n   */\n  hideTooltip() {\n    if (this.tooltipElement) {\n      this.tooltipElement.remove();\n      this.tooltipElement = null;\n      console.log('[OpenLayersInteractions] Tooltip escondido');\n    }\n  }\n\n  /**\n   * Força limpeza do tooltip (útil para mobile)\n   */\n  forceHideTooltip() {\n    this.hideTooltip();\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n    this.clickedFeature = null;\n    console.log('[OpenLayersInteractions] Tooltip forçadamente escondido e estado resetado');\n  }\n\n  /**\n   * Cria elemento de tooltip\n   * @param {string} content - Conteúdo do tooltip\n   * @param {Object} event - Evento do OpenLayers\n   * @returns {HTMLElement} Elemento do tooltip\n   */\n  createTooltipElement(content, event) {\n    const element = document.createElement('div');\n    element.className = 'ol-tooltip';\n    element.innerHTML = content;\n    \n    // Detectar se é terra indígena baseado no conteúdo\n    const isTerraIndigena = content.includes('Terra Indígena');\n    \n    // Estilos do tooltip - diferentes fundos, mesmo texto preto\n    const tooltipStyles = isTerraIndigena ? {\n      // Estilo para Terras Indígenas - fundo vermelho\n      backgroundColor: '#fef2f2' // Fundo vermelho claro (red-50)\n    } : {\n      // Estilo para Escolas - fundo verde\n      backgroundColor: '#bbf7d0' // Fundo verde (green-200)\n    };\n    \n    // Estilos base comuns - mais simples e harmoniosos\n    Object.assign(element.style, {\n      position: 'absolute',\n      padding: '6px 10px',\n      borderRadius: '6px',\n      fontSize: '12px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n      fontWeight: '700', // Fonte negrito\n      color: '#000000', // Texto preto para ambos os tipos\n      pointerEvents: 'none',\n      zIndex: '1000',\n      maxWidth: '200px',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)', // Sombra sutil sem brilho\n      ...tooltipStyles\n    });\n\n    // Posicionar tooltip\n    const coordinate = event.coordinate;\n    const pixel = this.map.getPixelFromCoordinate(coordinate);\n    \n    element.style.left = (pixel[0] + 10) + 'px';\n    element.style.top = (pixel[1] - 10) + 'px';\n\n    return element;\n  }\n\n  /**\n   * Obtém conteúdo do tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @returns {string} Conteúdo do tooltip\n   */\n  getTooltipContent(feature) {\n    console.log('[OpenLayersInteractions] Obtendo conteúdo do tooltip para feature:', {\n      type: feature.get('type'),\n      schoolData: feature.get('schoolData'),\n      terraIndigenaInfo: feature.get('terraIndigenaInfo')\n    });\n\n    // Implementar lógica para obter conteúdo do tooltip\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.tooltipContentFunction) {\n      const content = this.options.tooltipContentFunction(feature);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (função customizada):', content);\n      return content;\n    }\n\n    // Conteúdo padrão baseado no tipo de feature\n    const schoolData = feature.get('schoolData');\n    if (schoolData) {\n      // FORÇAR apenas o título da escola, SEM município ou outras informações\n      const titulo = schoolData.titulo || 'Escola Indígena';\n      console.log('[OpenLayersInteractions] Título extraído (padrão):', titulo);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão escola - FORÇADO apenas título):', titulo);\n      return titulo; // Retorna APENAS o título\n    }\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (terraIndigenaInfo) {\n      const content = `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão terra indígena):', content);\n      return content;\n    }\n\n    console.log('[OpenLayersInteractions] Nenhum conteúdo encontrado para tooltip');\n    return null;\n  }\n\n  /**\n   * Executa handler de clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('click');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de duplo clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeDoubleClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('doubleClick');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover\n   * @param {Object} feature - Feature em hover\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeHoverHandler(feature, event) {\n    const handler = this.eventHandlers.get('hover');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover out\n   * @param {Object} feature - Feature que saiu do hover\n   */\n  executeHoverOutHandler(feature) {\n    const handler = this.eventHandlers.get('hoverOut');\n    if (handler && typeof handler === 'function') {\n      handler(feature);\n    }\n  }\n\n  /**\n   * Registra handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   * @param {Function} handler - Função handler\n   */\n  on(eventType, handler) {\n    this.eventHandlers.set(eventType, handler);\n  }\n\n  /**\n   * Remove handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   */\n  off(eventType) {\n    this.eventHandlers.delete(eventType);\n  }\n\n  /**\n   * Remove todos os handlers\n   */\n  clearHandlers() {\n    this.eventHandlers.clear();\n  }\n\n  /**\n   * Atualiza opções de interação\n   * @param {Object} newOptions - Novas opções\n   */\n  updateOptions(newOptions) {\n    this.options = { ...this.options, ...newOptions };\n    \n    // Reconfigurar interações se necessário\n    if (newOptions.enableHover !== undefined) {\n      // Implementar lógica para habilitar/desabilitar hover\n    }\n    \n    if (newOptions.enableClick !== undefined) {\n      // Implementar lógica para habilitar/desabilitar clique\n    }\n  }\n\n  /**\n   * Limpa todas as interações e handlers\n   */\n  destroy() {\n    // Limpar timeouts\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    if (this.hoverTimeout) {\n      clearTimeout(this.hoverTimeout);\n    }\n\n    // Esconder tooltip\n    this.hideTooltip();\n\n    // Limpar hover\n    this.clearHover();\n\n    // Limpar handlers\n    this.clearHandlers();\n\n    // Remover event listeners do mapa\n    // Nota: OpenLayers não tem método un() para remover listeners específicos\n    // Seria necessário recriar o mapa ou implementar controle manual\n  }\n}\n\n/**\n * Função utilitária para criar interações padrão\n * @param {Object} map - Mapa OpenLayers\n * @param {Object} options - Opções de configuração\n * @returns {OpenLayersInteractions} Instância de interações\n */\nexport function createDefaultInteractions(map, options = {}) {\n  const defaultOptions = {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    showTooltip: true,\n    hoverDelay: 200,\n    clickDelay: 300\n  };\n\n  return new OpenLayersInteractions(map, { ...defaultOptions, ...options });\n}\n\n/**\n * Função utilitária para configurar interações específicas para marcadores\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onMarkerClick - Handler para clique em marcador\n * @param {Function} onMarkerHover - Handler para hover em marcador\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createMarkerInteractions(map, onMarkerClick, onMarkerHover) {\n  console.log('[createMarkerInteractions] Criando interações para marcadores...');\n  \n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      console.log('[createMarkerInteractions] Função de conteúdo do tooltip chamada para:', feature);\n      const schoolData = feature.get('schoolData');\n      if (schoolData) {\n        // FORÇAR apenas o título da escola, SEM município\n        const titulo = schoolData.titulo || 'Escola Indígena';\n        console.log('[createMarkerInteractions] Título extraído:', titulo);\n        console.log('[createMarkerInteractions] Conteúdo do tooltip gerado (FORÇADO apenas título):', titulo);\n        return titulo; // Retorna APENAS o título\n      }\n      console.log('[createMarkerInteractions] Sem dados de escola para tooltip');\n      return null;\n    }\n  });\n\n  if (onMarkerClick) {\n    interactions.on('click', onMarkerClick);\n  }\n\n  if (onMarkerHover) {\n    interactions.on('hover', onMarkerHover);\n  }\n\n  console.log('[createMarkerInteractions] Interações criadas com sucesso');\n  return interactions;\n}\n\n/**\n * Função utilitária para configurar interações específicas para camadas GeoJSON\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onFeatureClick - Handler para clique em feature\n * @param {Function} onFeatureHover - Handler para hover em feature\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createGeoJSONInteractions(map, onFeatureClick, onFeatureHover) {\n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n      if (terraIndigenaInfo) {\n        return `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      }\n      return null;\n    }\n  });\n\n  if (onFeatureClick) {\n    interactions.on('click', onFeatureClick);\n  }\n\n  if (onFeatureHover) {\n    interactions.on('hover', onFeatureHover);\n  }\n\n  return interactions;\n}\n","// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização - Ajustadas para mostrar mais marcadores individuais\n  clusterDistance: 15, // Reduzido para mostrar mais marcadores individuais\n  clusterMinDistance: 3, // Reduzido para permitir marcadores mais próximos\n  clusterAnimationDuration: 300,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10,\n  tooltipDelay: 200,\n  \n  // Configurações de interação\n  interaction: {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    clickDelay: 300,\n    hoverDelay: 200\n  },\n  \n  // Configurações de performance\n  performance: {\n    enableLazyLoading: true,\n    maxFeaturesPerTile: 1000,\n    enableFeatureCulling: true,\n    enableTileCaching: true\n  },\n\n  // Configurações de animação\n  ANIMATION_CONFIG: {\n    duration: {\n      marker: 300,\n      cluster: 500,\n      zoom: 800,\n      pan: 600\n    },\n    easing: {\n      marker: 'ease-out',\n      cluster: 'ease-in-out',\n      zoom: 'ease-out',\n      pan: 'ease-out'\n    }\n  }\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B',\n  selected: '#10B981',\n  hover: '#F59E0B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857',\n  // Projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\n  sirgas2000: 'EPSG:4674'\n};\n\n// Configurações de camadas base\nexport const BASE_LAYER_CONFIG = {\n  satellite: {\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n    maxZoom: 19,\n    wrapX: false,\n    tilePixelRatio: 1,\n    tileSize: 256\n  },\n  osm: {\n    url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    maxZoom: 19\n  },\n  terrain: {\n    url: 'https://{a-d}.tile.opentopomap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://opentopomap.org/\">OpenTopoMap</a> contributors',\n    maxZoom: 17\n  }\n};\n\n// Configurações de estilos para diferentes tipos de marcadores\nexport const MARKER_STYLE_CONFIG = {\n  escola: {\n    default: {\n      radius: 6,\n      fillColor: MARKER_COLORS.individual,\n      strokeColor: MARKER_COLORS.individualBorder,\n      strokeWidth: 2\n    },\n    hover: {\n      radius: 8,\n      fillColor: MARKER_COLORS.hover,\n      strokeColor: '#D97706',\n      strokeWidth: 3\n    },\n    selected: {\n      radius: 10,\n      fillColor: MARKER_COLORS.selected,\n      strokeColor: '#059669',\n      strokeWidth: 3,\n      lineDash: [5, 5]\n    },\n    nearbyPair: {\n      radius: 8,\n      fillColor: MARKER_COLORS.nearbyPair,\n      strokeColor: '#DC2626',\n      strokeWidth: 2\n    }\n  },\n  cluster: {\n    small: {\n      radius: CLUSTER_SIZES.small.size / 2,\n      fillColor: MARKER_COLORS.cluster.small,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    medium: {\n      radius: CLUSTER_SIZES.medium.size / 2,\n      fillColor: MARKER_COLORS.cluster.medium,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    large: {\n      radius: CLUSTER_SIZES.large.size / 2,\n      fillColor: MARKER_COLORS.cluster.large,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    xlarge: {\n      radius: CLUSTER_SIZES.xlarge.size / 2,\n      fillColor: MARKER_COLORS.cluster.xlarge,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    }\n  }\n};\n\n// Configurações de animações\nexport const ANIMATION_CONFIG = {\n  duration: {\n    marker: 300,\n    cluster: 500,\n    zoom: 800,\n    pan: 600\n  },\n  easing: {\n    marker: 'ease-out',\n    cluster: 'ease-in-out',\n    zoom: 'ease-out',\n    pan: 'ease-out'\n  }\n};\n\n// Configurações de responsividade\nexport const RESPONSIVE_CONFIG = {\n  breakpoints: {\n    mobile: 768,\n    tablet: 1024,\n    desktop: 1200\n  },\n  mobile: {\n    clusterDistance: 12, // Reduzido para mobile\n    tooltipOffset: 8,\n    markerRadius: 5\n  },\n  tablet: {\n    clusterDistance: 15, // Reduzido para tablet\n    tooltipOffset: 10,\n    markerRadius: 6\n  },\n  desktop: {\n    clusterDistance: 15, // Reduzido para desktop\n    tooltipOffset: 10,\n    markerRadius: 6\n  }\n};\n\n// Configurações de cache\nexport const CACHE_CONFIG = {\n  markers: {\n    maxSize: 1000,\n    ttl: 300000, // 5 minutos\n    enableCompression: true\n  },\n  tiles: {\n    maxSize: 100,\n    ttl: 600000, // 10 minutos\n    enableCompression: true\n  },\n  geojson: {\n    maxSize: 50,\n    ttl: 1800000, // 30 minutos\n    enableCompression: true\n  }\n};\n\n// Configurações de debug\nexport const DEBUG_CONFIG = {\n  enableLogging: process.env.NODE_ENV === 'development',\n  enablePerformanceMonitoring: process.env.NODE_ENV === 'development',\n  enableFeatureCount: process.env.NODE_ENV === 'development',\n  logLevel: process.env.NODE_ENV === 'development' ? 'debug' : 'error'\n}; ","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n}; ","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport { \n  createMarkerStyle, \n  applyHoverStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/markerStyles';\nimport { createMarkerInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersMarkers - Substitui completamente o Marcadores.js do Leaflet\n * IMPLEMENTAÇÃO SIMPLIFICADA: Mostra todos os marcadores individuais sem clustering\n */\nconst OpenLayersMarkers = ({ \n  dataPoints = [], \n  onPainelOpen,\n  showMarcadores = true,\n  showNomesEscolas = false,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas e fontes\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredMarker, setHoveredMarker] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de marcadores (SEM clustering)\n   */\n  const initializeMarkers = useCallback(() => {\n    if (!map) return;\n\n    console.log('[OpenLayersMarkers] Inicializando marcadores individuais...');\n\n    // Criar fonte vetorial para marcadores\n    vectorSourceRef.current = new VectorSource();\n    \n    // Criar camada vetorial para marcadores INDIVIDUAIS (sem clustering)\n    vectorLayerRef.current = new VectorLayer({\n      source: vectorSourceRef.current,\n      style: (feature) => createMarkerStyle(feature, showNomesEscolas),\n      zIndex: 100\n    });\n\n    // Adicionar camada ao mapa\n    map.addLayer(vectorLayerRef.current);\n\n    // Configurar interações\n    setupInteractions();\n\n  }, [map, showNomesEscolas]);\n\n  /**\n   * Configura as interações dos marcadores\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    console.log('[OpenLayersMarkers] Configurando interações com tooltips...');\n\n    // Criar interações específicas para marcadores com tooltips\n    const interactions = createMarkerInteractions(\n      map,\n      handleMarkerClick,\n      handleMarkerHover\n    );\n\n    // Configurar handlers específicos\n    interactions.on('click', handleMarkerClick);\n    interactions.on('hover', handleMarkerHover);\n    interactions.on('hoverOut', handleMarkerHoverOut);\n\n    // IMPORTANTE: Integrar as interações com o mapa para que os tooltips funcionem\n    // O sistema de interações do OpenLayers precisa estar ativo para detectar hover\n    console.log('[OpenLayersMarkers] Interações configuradas e integradas com o mapa');\n\n  }, [map]);\n\n  /**\n   * Handler para clique em marcador\n   */\n  const handleMarkerClick = useCallback((feature, event) => {\n    const markerData = feature.get('markerData');\n    if (markerData && onPainelOpen) {\n      console.log('[OpenLayersMarkers] Marcador clicado:', markerData.titulo);\n      onPainelOpen(markerData);\n    }\n  }, [onPainelOpen]);\n\n  /**\n   * Handler para hover em marcador\n   */\n  const handleMarkerHover = useCallback((feature, event) => {\n    if (isMobileDevice) return; // Desabilitar hover em mobile\n    \n    setHoveredMarker(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return applyHoverStyle(f, createMarkerStyle(f, showNomesEscolas));\n        }\n        return createMarkerStyle(f, showNomesEscolas);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [isMobileDevice, showNomesEscolas]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleMarkerHoverOut = useCallback(() => {\n    setHoveredMarker(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createMarkerStyle(f, showNomesEscolas));\n      vectorLayerRef.current.changed();\n    }\n  }, [showNomesEscolas]);\n\n  /**\n   * Atualiza marcadores quando dataPoints mudar\n   */\n  const updateMarkers = useCallback(() => {\n    if (!vectorSourceRef.current || !dataPoints) return;\n\n    console.log('[OpenLayersMarkers] Atualizando marcadores...', dataPoints.length, 'showMarcadores:', showMarcadores);\n\n    // Limpar marcadores existentes\n    vectorSourceRef.current.clear();\n    \n    // Se showMarcadores for false, não adicionar marcadores\n    if (!showMarcadores) {\n      console.log('[OpenLayersMarkers] Marcadores desabilitados, removendo todos');\n      return;\n    }\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    console.log('[OpenLayersMarkers] Pontos válidos:', pontosValidos.length);\n\n    // Adicionar novos marcadores INDIVIDUAIS\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        \n        feature.set('markerData', point);\n        feature.set('schoolData', point); // Dados para tooltips\n        feature.set('markerId', `marker_${index}`);\n        feature.set('type', 'marker');\n        \n        // Debug: verificar dados do tooltip\n        console.log(`[OpenLayersMarkers] Marcador ${index}:`, {\n          titulo: point.titulo,\n          municipio: point.municipio || point.Municipio,\n          uf: point.uf || point.UF\n        });\n        \n        vectorSourceRef.current.addFeature(feature);\n      }\n    });\n\n    console.log(`[OpenLayersMarkers] ${pontosValidos.length} marcadores individuais adicionados`);\n\n  }, [dataPoints, showMarcadores]);\n\n  /**\n   * Atualiza estilo dos marcadores quando showNomesEscolas mudar\n   */\n  const updateMarkerStyles = useCallback(() => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((feature) => createMarkerStyle(feature, showNomesEscolas));\n    vectorLayerRef.current.changed();\n  }, [showNomesEscolas]);\n\n  // Inicializar marcadores quando componente montar\n  useEffect(() => {\n    if (map) {\n      initializeMarkers();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, initializeMarkers]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    updateMarkers();\n  }, [updateMarkers]);\n\n  // Atualizar estilos quando showNomesEscolas mudar\n  useEffect(() => {\n    updateMarkerStyles();\n  }, [updateMarkerStyles]);\n\n  // Sempre renderizar o componente para manter a camada ativa\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia as camadas do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersMarkers;\n","import { Style, Fill, Stroke, Text } from 'ol/style';\n\n// Configurações de cores para camadas GeoJSON\nexport const LAYER_COLORS = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n/**\n * Cria estilo para terras indígenas baseado no status\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo da terra indígena\n */\nexport const createTerrasIndigenasStyle = (feature, isHovered = false) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.fill\n      }),\n      stroke: new Stroke({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.stroke,\n        width: 2\n      })\n    });\n  }\n\n  const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n  const colorConfig = isRegularizada \n    ? LAYER_COLORS.terrasIndigenas.regularizada \n    : LAYER_COLORS.terrasIndigenas.declarada;\n\n  const colors = isHovered ? colorConfig.hover : colorConfig;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 3 : 2,\n      lineDash: isHovered ? [] : [3, 3]\n    })\n  });\n};\n\n/**\n * Cria estilo para estado de São Paulo\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo do estado\n */\nexport const createEstadoSPStyle = (feature, isHovered = false) => {\n  const colors = isHovered ? LAYER_COLORS.estadoSP.hover : LAYER_COLORS.estadoSP;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 2 : 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com label\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} labelProperty - Propriedade para usar como label\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com label\n */\nexport const createLabeledFeatureStyle = (feature, labelProperty, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    labelColor = '#000000',\n    labelSize = '12px',\n    labelFont = 'Arial'\n  } = styleOptions;\n\n  const labelText = feature.properties?.[labelProperty] || '';\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar label se houver texto\n  if (labelText) {\n    styles.push(new Style({\n      text: new Text({\n        text: labelText,\n        font: `${labelSize} ${labelFont}`,\n        fill: new Fill({\n          color: labelColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: 0,\n        textAlign: 'center'\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature com tooltip\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} tooltipText - Texto do tooltip\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com tooltip\n */\nexport const createFeatureWithTooltipStyle = (feature, tooltipText, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    tooltipColor = '#1F2937',\n    tooltipBackground = 'rgba(255, 255, 255, 0.95)',\n    tooltipBorder = '#E5E7EB'\n  } = styleOptions;\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar tooltip como texto\n  if (tooltipText) {\n    styles.push(new Style({\n      text: new Text({\n        text: tooltipText,\n        font: '11px Arial',\n        fill: new Fill({\n          color: tooltipColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center',\n        backgroundFill: new Fill({\n          color: tooltipBackground\n        }),\n        backgroundStroke: new Stroke({\n          color: tooltipBorder,\n          width: 1\n        }),\n        padding: [4, 8]\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature selecionada\n * @param {Object} feature - Feature do GeoJSON\n * @param {Style} baseStyle - Estilo base\n * @param {Object} selectionOptions - Opções de seleção\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle, selectionOptions = {}) => {\n  const {\n    fillColor = 'rgba(59, 130, 246, 0.3)',\n    strokeColor = '#1E40AF',\n    strokeWidth = 3,\n    lineDash = [5, 5]\n  } = selectionOptions;\n\n  const selectionStyle = new Style({\n    fill: new Fill({\n      color: fillColor\n    }),\n    stroke: new Stroke({\n      color: strokeColor,\n      width: strokeWidth,\n      lineDash: lineDash\n    })\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n\n/**\n * Cria estilo para feature com indicador de status\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} statusProperty - Propriedade que indica o status\n * @param {Object} statusConfig - Configuração dos status\n * @returns {Style} Estilo com indicador de status\n */\nexport const createStatusFeatureStyle = (feature, statusProperty, statusConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: '#000000',\n        width: 1\n      })\n    });\n  }\n\n  const status = feature.properties[statusProperty];\n  const config = statusConfig[status] || statusConfig.default || {\n    fill: 'rgba(0, 0, 0, 0.1)',\n    stroke: '#000000'\n  };\n\n  return new Style({\n    fill: new Fill({\n      color: config.fill\n    }),\n    stroke: new Stroke({\n      color: config.stroke,\n      width: config.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com gradiente baseado em valor numérico\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} valueProperty - Propriedade com valor numérico\n * @param {Object} gradientConfig - Configuração do gradiente\n * @returns {Style} Estilo com gradiente\n */\nexport const createGradientFeatureStyle = (feature, valueProperty, gradientConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: gradientConfig.defaultColor || 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: gradientConfig.strokeColor || '#000000',\n        width: gradientConfig.strokeWidth || 1\n      })\n    });\n  }\n\n  const value = parseFloat(feature.properties[valueProperty]) || 0;\n  const { min, max, colors } = gradientConfig;\n\n  // Calcular cor baseada no valor\n  let color;\n  if (value <= min) {\n    color = colors.min;\n  } else if (value >= max) {\n    color = colors.max;\n  } else {\n    // Interpolação linear entre cores\n    const ratio = (value - min) / (max - min);\n    color = interpolateColor(colors.min, colors.max, ratio);\n  }\n\n  return new Style({\n    fill: new Fill({\n      color: color\n    }),\n    stroke: new Stroke({\n      color: gradientConfig.strokeColor || '#000000',\n      width: gradientConfig.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Interpola entre duas cores\n * @param {string} color1 - Primeira cor (hex)\n * @param {string} color2 - Segunda cor (hex)\n * @param {number} ratio - Razão de interpolação (0-1)\n * @returns {string} Cor interpolada\n */\nfunction interpolateColor(color1, color2, ratio) {\n  const hex1 = color1.replace('#', '');\n  const hex2 = color2.replace('#', '');\n  \n  const r1 = parseInt(hex1.substr(0, 2), 16);\n  const g1 = parseInt(hex1.substr(2, 2), 16);\n  const b1 = parseInt(hex1.substr(4, 2), 16);\n  \n  const r2 = parseInt(hex2.substr(0, 2), 16);\n  const g2 = parseInt(hex2.substr(2, 2), 16);\n  const b2 = parseInt(hex2.substr(4, 2), 16);\n  \n  const r = Math.round(r1 + (r2 - r1) * ratio);\n  const g = Math.round(g1 + (g2 - g1) * ratio);\n  const b = Math.round(b1 + (b2 - b1) * ratio);\n  \n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { \n  createTerrasIndigenasStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/layerStyles';\nimport { createGeoJSONInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG, PROJECTION_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersTerrasIndigenas - Substitui completamente o TerrasIndigenas.js do Leaflet\n * Implementa camada GeoJSON de terras indígenas com estilos dinâmicos e interações\n */\nconst OpenLayersTerrasIndigenas = ({ \n  data,\n  onPainelOpen,\n  showTerrasIndigenas = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  const interactionsRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredFeature, setHoveredFeature] = React.useState(null);\n  const [selectedFeature, setSelectedFeature] = React.useState(null);\n  const [features, setFeatures] = React.useState([]);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de terras indígenas\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersTerrasIndigenas] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n      setFeatures(geoJSONFeatures);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createTerrasIndigenasStyle(feature, false),\n        zIndex: 10\n      });\n\n      // Adicionar dados de terra indígena a cada feature\n      geoJSONFeatures.forEach(feature => {\n        const properties = feature.getProperties();\n        feature.set('terraIndigenaInfo', {\n          titulo: properties.terrai_nom,\n          tipo: 'terra_indigena',\n          etnia: properties.etnia_nome,\n          municipio: properties.municipio_,\n          uf: properties.uf_sigla,\n          superficie: properties.superficie,\n          fase: properties.fase_ti,\n          modalidade: properties.modalidade,\n          reestudo: properties.reestudo_t,\n          cr: properties.cr,\n          faixa_fron: properties.faixa_fron,\n          undadm_nom: properties.undadm_nom,\n          undadm_sig: properties.undadm_sig,\n          dominio_un: properties.dominio_un,\n          data_atual: properties.data_atual,\n          terrai_cod: properties.terrai_cod,\n          undadm_cod: properties.undadm_cod\n        });\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      // Configurar interações\n      setupInteractions();\n\n      console.log(`[OpenLayersTerrasIndigenas] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersTerrasIndigenas] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  /**\n   * Configura as interações da camada\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    // Criar interações específicas para camadas GeoJSON\n    interactionsRef.current = createGeoJSONInteractions(\n      map,\n      handleFeatureClick,\n      handleFeatureHover\n    );\n\n    // Configurar handlers específicos\n    interactionsRef.current.on('click', handleFeatureClick);\n    interactionsRef.current.on('hover', handleFeatureHover);\n    interactionsRef.current.on('hoverOut', handleFeatureHoverOut);\n\n  }, [map]);\n\n  /**\n   * Handler para clique em feature\n   */\n  const handleFeatureClick = useCallback((feature, event) => {\n    if (!feature) return;\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (!terraIndigenaInfo) return;\n\n    if (isMobileDevice) {\n      // No mobile: clique único abre o painel diretamente\n      if (onPainelOpen) {\n        onPainelOpen(terraIndigenaInfo);\n      }\n    } else {\n      // No desktop: primeiro clique faz zoom, segundo abre painel\n      if (selectedFeature === feature) {\n        // Segundo clique: abrir painel\n        if (onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n        setSelectedFeature(null);\n      } else {\n        // Primeiro clique: fazer zoom\n        setSelectedFeature(feature);\n        \n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const extent = geometry.getExtent();\n          map.getView().fit(extent, {\n            duration: MAP_CONFIG.ANIMATION_CONFIG.duration.zoom,\n            padding: [50, 50, 50, 50],\n            maxZoom: 15\n          });\n        }\n      }\n    }\n  }, [isMobileDevice, onPainelOpen, selectedFeature, map]);\n\n  /**\n   * Handler para hover em feature\n   */\n  const handleFeatureHover = useCallback((feature, event) => {\n    if (isMobileDevice) return; // Desabilitar hover em mobile\n    \n    setHoveredFeature(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return createTerrasIndigenasStyle(f, true); // true = hover\n        }\n        return createTerrasIndigenasStyle(f, false);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [isMobileDevice]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleFeatureHoverOut = useCallback((feature) => {\n    setHoveredFeature(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n      vectorLayerRef.current.changed();\n    }\n  }, []);\n\n  /**\n   * Aplica estilo de seleção a um feature\n   */\n  const applySelectionStyleToFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => {\n      if (f === feature) {\n        const baseStyle = createTerrasIndigenasStyle(f, false);\n        return applySelectionStyle(f, baseStyle);\n      }\n      return createTerrasIndigenasStyle(f, false);\n    });\n    vectorLayerRef.current.changed();\n  }, []);\n\n  /**\n   * Remove estilo de seleção de um feature\n   */\n  const removeSelectionStyleFromFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n    vectorLayerRef.current.changed();\n  }, []);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showTerrasIndigenas) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (interactionsRef.current) {\n        interactionsRef.current.destroy();\n      }\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showTerrasIndigenas, initializeLayer]);\n\n  // Aplicar/remover estilo de seleção quando selectedFeature mudar\n  useEffect(() => {\n    if (selectedFeature) {\n      applySelectionStyleToFeature(selectedFeature);\n    } else if (vectorLayerRef.current) {\n      // Remover seleção de todos os features\n      removeSelectionStyleFromFeature();\n    }\n  }, [selectedFeature, applySelectionStyleToFeature, removeSelectionStyleFromFeature]);\n\n  // Limpar seleção após timeout (para comportamento de clique duplo)\n  useEffect(() => {\n    if (selectedFeature) {\n      const timeout = setTimeout(() => {\n        setSelectedFeature(null);\n      }, MAP_CONFIG.interaction.clickDelay);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [selectedFeature]);\n\n  // Se não deve mostrar terras indígenas, não renderizar nada\n  if (!showTerrasIndigenas || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersTerrasIndigenas;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { createEstadoSPStyle } from '../../utils/openlayers/layerStyles';\nimport { PROJECTION_CONFIG } from '../../utils/mapConfig';\n\n/**\n * Componente OpenLayersEstadoSP - Substitui completamente o EstadoSP.js do Leaflet\n * Implementa camada GeoJSON de fundo do estado de São Paulo (não-interativa)\n */\nconst OpenLayersEstadoSP = ({ \n  data,\n  showEstadoSP = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n\n  /**\n   * Inicializa a camada do estado de São Paulo\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersEstadoSP] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial (não-interativa, apenas visual)\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createEstadoSPStyle(feature, false),\n        zIndex: 5, // Camada de fundo com zIndex baixo\n        interactive: false // Desabilitar interações\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      console.log(`[OpenLayersEstadoSP] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersEstadoSP] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showEstadoSP) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showEstadoSP, initializeLayer]);\n\n  // Se não deve mostrar estado SP, não renderizar nada\n  if (!showEstadoSP || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON de fundo do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersEstadoSP;\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n/**\n * Componente OpenLayersLayers - Gerenciador unificado de todas as camadas GeoJSON\n * Centraliza o controle das camadas de terras indígenas e estado SP\n */\nconst OpenLayersLayers = ({ \n  terrasIndigenasData,\n  estadoSPData,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  onPainelOpen,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas\n  const terrasIndigenasRef = useRef(null);\n  const estadoSPRef = useRef(null);\n  \n  // Estados para controle das camadas\n  const [layersStatus, setLayersStatus] = React.useState({\n    terrasIndigenas: {\n      visible: showTerrasIndigenas,\n      loaded: false,\n      error: null\n    },\n    estadoSP: {\n      visible: showEstadoSP,\n      loaded: false,\n      error: null\n    }\n  });\n\n  // Verificar se há dados válidos\n  const hasValidData = useMemo(() => {\n    return {\n      terrasIndigenas: terrasIndigenasData && terrasIndigenasData.features && terrasIndigenasData.features.length > 0,\n      estadoSP: estadoSPData && estadoSPData.features && estadoSPData.features.length > 0\n    };\n  }, [terrasIndigenasData, estadoSPData]);\n\n  /**\n   * Atualiza status de uma camada\n   */\n  const updateLayerStatus = useCallback((layerName, updates) => {\n    setLayersStatus(prev => ({\n      ...prev,\n      [layerName]: {\n        ...prev[layerName],\n        ...updates\n      }\n    }));\n  }, []);\n\n  /**\n   * Handler para mudanças na visibilidade das camadas\n   */\n  const handleLayerVisibilityChange = useCallback((layerName, visible) => {\n    updateLayerStatus(layerName, { visible });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para erros nas camadas\n   */\n  const handleLayerError = useCallback((layerName, error) => {\n    console.error(`[OpenLayersLayers] Erro na camada ${layerName}:`, error);\n    updateLayerStatus(layerName, { error: error.message });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para sucesso no carregamento das camadas\n   */\n  const handleLayerSuccess = useCallback((layerName) => {\n    updateLayerStatus(layerName, { loaded: true, error: null });\n  }, [updateLayerStatus]);\n\n  /**\n   * Obtém estatísticas das camadas\n   */\n  const getLayersStats = useCallback(() => {\n    const stats = {\n      total: 0,\n      visible: 0,\n      loaded: 0,\n      errors: 0\n    };\n\n    Object.values(layersStatus).forEach(layer => {\n      stats.total++;\n      if (layer.visible) stats.visible++;\n      if (layer.loaded) stats.loaded++;\n      if (layer.error) stats.errors++;\n    });\n\n    return stats;\n  }, [layersStatus]);\n\n  /**\n   * Obtém informações detalhadas das camadas\n   */\n  const getLayersInfo = useCallback(() => {\n    return {\n      terrasIndigenas: {\n        ...layersStatus.terrasIndigenas,\n        hasData: hasValidData.terrasIndigenas,\n        featureCount: hasValidData.terrasIndigenas ? terrasIndigenasData.features.length : 0\n      },\n      estadoSP: {\n        ...layersStatus.estadoSP,\n        hasData: hasValidData.estadoSP,\n        featureCount: hasValidData.estadoSP ? estadoSPData.features.length : 0\n      }\n    };\n  }, [layersStatus, hasValidData, terrasIndigenasData, estadoSPData]);\n\n  // Log de status das camadas\n  useEffect(() => {\n    const stats = getLayersStats();\n    const info = getLayersInfo();\n    \n    console.log('[OpenLayersLayers] Status das camadas:', {\n      stats,\n      info,\n      hasValidData\n    });\n  }, [layersStatus, getLayersStats, getLayersInfo, hasValidData]);\n\n  // Atualizar status quando props mudarem\n  useEffect(() => {\n    setLayersStatus(prev => ({\n      terrasIndigenas: {\n        ...prev.terrasIndigenas,\n        visible: showTerrasIndigenas\n      },\n      estadoSP: {\n        ...prev.estadoSP,\n        visible: showEstadoSP\n      }\n    }));\n  }, [showTerrasIndigenas, showEstadoSP]);\n\n  // Se não há dados válidos, não renderizar nada\n  if (!hasValidData.terrasIndigenas && !hasValidData.estadoSP) {\n    return (\n      <div className={className}>\n        <div className=\"text-center text-gray-500 p-4\">\n          Nenhuma camada GeoJSON disponível\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {/* Camada Terras Indígenas */}\n      {hasValidData.terrasIndigenas && (\n        <OpenLayersTerrasIndigenas\n          ref={terrasIndigenasRef}\n          data={terrasIndigenasData}\n          onPainelOpen={onPainelOpen}\n          showTerrasIndigenas={showTerrasIndigenas}\n          map={map}\n          onLoad={() => handleLayerSuccess('terrasIndigenas')}\n          onError={(error) => handleLayerError('terrasIndigenas', error)}\n        />\n      )}\n\n      {/* Camada Estado SP */}\n      {hasValidData.estadoSP && (\n        <OpenLayersEstadoSP\n          ref={estadoSPRef}\n          data={estadoSPData}\n          showEstadoSP={showEstadoSP}\n          map={map}\n          onLoad={() => handleLayerSuccess('estadoSP')}\n          onError={(error) => handleLayerError('estadoSP', error)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default OpenLayersLayers;\n","import React from 'react';\n\nconst MapWrapper = React.forwardRef((props, ref) => {\n  return <div id=\"map\" className=\"w-full h-full\" ref={ref} {...props} />;\n});\n\nexport default MapWrapper; ","import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\n\n// Componentes OpenLayers\nimport OpenLayersMarkers from './OpenLayers/OpenLayersMarkers';\nimport OpenLayersLayers from './OpenLayers/OpenLayersLayers';\n\n// Configurações e utilitários\nimport { MAP_CONFIG, BASE_LAYER_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\nimport MapWrapper from './map/MapWrapper';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center,\n  zoom = MAP_CONFIG.zoom,\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Verificar se é mobile e ajustar configurações\n  const isMobileDevice = useMemo(() => isMobile(), []);\n  const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n  const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n  /**\n   * Cria camadas base do mapa\n   */\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: BASE_LAYER_CONFIG.satellite.url,\n        attributions: BASE_LAYER_CONFIG.satellite.attributions,\n        maxZoom: BASE_LAYER_CONFIG.satellite.maxZoom,\n        wrapX: BASE_LAYER_CONFIG.satellite.wrapX,\n        tilePixelRatio: BASE_LAYER_CONFIG.satellite.tilePixelRatio,\n        tileSize: BASE_LAYER_CONFIG.satellite.tileSize\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  /**\n   * Inicializa o mapa OpenLayers\n   */\n  const initializeMap = useCallback(() => {\n    if (map.current) return;\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [baseLayer.current],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: MAP_CONFIG.maxZoom,\n        minZoom: MAP_CONFIG.minZoom,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions({\n        dragRotate: false, // Desabilitar rotação com arraste\n        pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      })\n    });\n\n    // Event listeners para mudanças de view\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    console.log('[OpenLayersMap] Mapa inicializado com sucesso');\n\n  }, [initialCenter, initialZoom, createBaseLayers]);\n\n  /**\n   * Atualiza configurações do mapa quando props mudarem\n   */\n  const updateMapConfig = useCallback(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom]);\n\n  // Inicializar mapa quando componente montar\n  useEffect(() => {\n    initializeMap();\n\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [initializeMap]);\n\n  // Atualizar configurações quando props mudarem\n  useEffect(() => {\n    updateMapConfig();\n  }, [updateMapConfig]);\n\n  return (\n    <MapWrapper ref={mapContainer}>\n      {/* Mapa base OpenLayers */}\n      {map.current && (\n        <>\n          {/* Componente de marcadores */}\n          <OpenLayersMarkers\n            dataPoints={dataPoints}\n            onPainelOpen={onPainelOpen}\n            showMarcadores={showMarcadores}\n            showNomesEscolas={showNomesEscolas}\n            map={map.current}\n          />\n\n          {/* Componente de camadas GeoJSON */}\n          <OpenLayersLayers\n            terrasIndigenasData={terrasIndigenasData}\n            estadoSPData={estadoSPData}\n            showTerrasIndigenas={showTerrasIndigenas}\n            showEstadoSP={showEstadoSP}\n            onPainelOpen={onPainelOpen}\n            map={map.current}\n          />\n        </>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  painelAberto = false,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  useEffect(() => {\n    console.log('MapSelector: useEffect painelAberto mudou:', {\n      painelAberto,\n      isMobile,\n      showMarcadores,\n      shouldReactivate: !painelAberto && isMobile\n    });\n    \n    if (!painelAberto && isMobile) {\n      console.log('MapSelector: Painel fechado em mobile, reativando marcadores');\n      setShowMarcadores(true);\n    }\n  }, [painelAberto, isMobile]);\n\n  // Log para monitorar mudanças no showMarcadores\n  useEffect(() => {\n    console.log('MapSelector: showMarcadores mudou para:', showMarcadores);\n  }, [showMarcadores]);\n\n    // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-4 py-3 bg-gradient-to-r from-green-700 to-green-800 text-white\">\n      <div className=\"flex items-center gap-2\">\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m-6 3l6-3\" />\n        </svg>\n        <h3 className=\"text-sm font-semibold tracking-wide\">Camadas do Mapa</h3>\n      </div>\n      <button\n        onClick={onMinimize}\n        className=\"text-green-100 hover:text-white hover:bg-green-600 transition-all duration-200 p-1.5 rounded-md\"\n        aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n        type=\"button\"\n      >\n        {isMinimized ? (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        ) : (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n          </svg>\n        )}\n      </button>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`group w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 ${\n        checked \n          ? 'bg-green-50 shadow-sm' \n          : 'bg-white hover:bg-green-50/50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n    >\n      {/* Indicador de cor principal */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Para Terras Indígenas com subcategorias\n          <div className=\"flex flex-col gap-1.5\">\n            {subItems.map((item, index) => (\n              <div key={index} className=\"flex items-center gap-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full shadow-sm\" \n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-xs font-medium text-gray-700\">{item.label}</span>\n              </div>\n            ))}\n          </div>\n        ) : (\n          // Para outras camadas\n          <div \n            className={`w-4 h-4 rounded-full shadow-sm ${\n              checked ? 'ring-2 ring-green-200' : ''\n            }`}\n            style={{ backgroundColor: color }}\n          />\n        )}\n      </div>\n      \n      {/* Conteúdo principal */}\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex items-center gap-2\">\n          <span className={`text-sm font-medium ${\n            checked ? 'text-green-900' : 'text-gray-800'\n          }`}>\n            {label}\n          </span>\n          \n          {total !== undefined && (\n            <span className={`text-xs px-2 py-0.5 rounded-full ${\n              checked \n                ? 'bg-green-100 text-green-700' \n                : 'bg-gray-100 text-gray-600'\n            }`}>\n              {total}\n            </span>\n          )}\n        </div>\n        \n        {/* Status indicators */}\n        <div className=\"flex items-center gap-2 mt-1\">\n          {loading && (\n            <div className=\"flex items-center gap-1 text-blue-600\">\n              <svg className=\"w-3 h-3 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n              </svg>\n              <span className=\"text-xs\">Carregando...</span>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"flex items-center gap-1 text-red-600\">\n              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span className=\"text-xs\">Erro</span>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Indicador de estado */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Indicador para Terras Indígenas\n                  <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n      ) : (\n        // Indicador para outras camadas\n        <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n        )}\n      </div>\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white shadow-2xl rounded-t-2xl\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-4 flex flex-col gap-3 max-h-80 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-72 bg-white rounded-2xl shadow-2xl z-20 overflow-hidden\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-4 flex flex-col gap-3 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","// Central slug utility for the project\nexport const criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-') // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '') // Remove hífens do início e fim\n    .trim();\n}; ","import { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\n\nconst useDocumentosEscola = (escolaId) => {\n  const [documentos, setDocumentos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDocumentos = async () => {\n      console.log('🔄 Iniciando busca de documentos para escola:', escolaId, 'tipo:', typeof escolaId);\n      \n      if (!escolaId) {\n        console.log('⚠️ Nenhum ID de escola fornecido, retornando array vazio');\n        setDocumentos([]);\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        console.log('📡 Consultando tabela documentos_escola...');\n        \n        // Verificar conexão com Supabase\n        const { data: authData, error: authError } = await supabase.auth.getSession();\n        console.log('🔐 Estado da autenticação:', {\n          temSessao: !!authData?.session,\n          error: authError\n        });\n\n        // Verificar permissões da tabela\n        const { data: rlsData, error: rlsError } = await supabase\n          .from('documentos_escola')\n          .select('count')\n          .limit(1);\n\n        console.log('🔑 Verificação de permissões:', {\n          podeAcessar: !rlsError,\n          error: rlsError ? {\n            code: rlsError.code,\n            message: rlsError.message,\n            details: rlsError.details,\n            hint: rlsError.hint\n          } : null\n        });\n\n        // Primeiro, vamos verificar todos os documentos para debug\n        const { data: allDocs, error: allDocsError } = await supabase\n          .from('documentos_escola')\n          .select('*');\n\n        if (allDocsError) {\n          console.error('❌ Erro ao buscar todos os documentos:', {\n            code: allDocsError.code,\n            message: allDocsError.message,\n            details: allDocsError.details,\n            hint: allDocsError.hint\n          });\n        } else {\n          console.log('📊 Todos os documentos na tabela:', allDocs);\n          if (allDocs && allDocs.length > 0) {\n            console.log('📊 Exemplo de documento:', allDocs[0]);\n            console.log('📊 Tipos de escola_id encontrados:', allDocs.map(doc => ({\n              id: doc.id,\n              escola_id: doc.escola_id,\n              tipo_escola_id: typeof doc.escola_id,\n              valor_escola_id: doc.escola_id\n            })));\n          } else {\n            console.log('⚠️ Tabela está vazia ou não temos permissão para ver os dados');\n          }\n        }\n        \n        // Agora vamos buscar os documentos específicos\n        console.log('🔍 Buscando documentos para escola_id:', escolaId);\n        const { data, error } = await supabase\n          .from('documentos_escola')\n          .select('*')\n          .eq('escola_id', escolaId.toString()) // Convertendo para string para garantir\n          .order('created_at', { ascending: false });\n\n        if (error) {\n          console.error('❌ Erro na consulta Supabase:', {\n            code: error.code,\n            message: error.message,\n            details: error.details,\n            hint: error.hint\n          });\n          throw error;\n        }\n\n        console.log('✅ Documentos encontrados:', data?.length || 0);\n        if (data?.length === 0) {\n          console.log('ℹ️ Nenhum documento encontrado para a escola ID:', escolaId);\n          console.log('ℹ️ Tentando buscar com diferentes formatos de escola_id...');\n          \n          // Tentando diferentes formatos do ID\n          const { data: dataAsNumber, error: errorAsNumber } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', Number(escolaId));\n            \n          const { data: dataAsString, error: errorAsString } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', String(escolaId));\n            \n          console.log('Resultados com escola_id como número:', {\n            count: dataAsNumber?.length || 0,\n            error: errorAsNumber\n          });\n          console.log('Resultados com escola_id como string:', {\n            count: dataAsString?.length || 0,\n            error: errorAsString\n          });\n        } else {\n          console.log('📄 Dados dos documentos:', data);\n        }\n        \n        setDocumentos(data || []);\n      } catch (err) {\n        console.error('❌ Erro ao buscar documentos:', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n        console.log('🏁 Estado final:', { \n          documentos: documentos.length, \n          isLoading, \n          error: error || 'nenhum' \n        });\n      }\n    };\n\n    fetchDocumentos();\n  }, [escolaId]);\n\n  return { documentos, isLoading, error };\n};\n\nexport default useDocumentosEscola; ","import React, { memo, useState } from 'react';\n\n// Componente InfoCard para informações individuais\nconst InfoCard = memo(({ label, value, icon: Icon, type = 'text', className = '' }) => {\n  if (!value && value !== 0) return null;\n\n  const renderValue = () => {\n    switch (type) {\n      case 'number':\n        return (\n          <div className=\"text-2xl font-bold text-green-800\">\n            {value.toLocaleString('pt-BR')}\n          </div>\n        );\n      case 'boolean':\n        return (\n          <div className={`px-3 py-1 rounded-full text-xs font-medium ${\n            value ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'\n          }`}>\n            {value ? 'Sim' : 'Não'}\n          </div>\n        );\n      case 'badge':\n        return (\n          <div className=\"flex flex-wrap gap-1\">\n            {Array.isArray(value) ? value.map((item, index) => (\n              <span key={index} className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {item}\n              </span>\n            )) : (\n              <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {value}\n              </span>\n            )}\n          </div>\n        );\n      case 'link':\n        return (\n          <a \n            href={value} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"text-green-700 hover:text-green-800 underline text-sm\"\n          >\n            {value}\n          </a>\n        );\n      default:\n        return (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`rounded-lg p-4 transition-all duration-200 ${className}`}>\n      <div className=\"flex items-center gap-2 mb-2\">\n        {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n        <span className=\"text-xs font-medium text-gray-600 uppercase tracking-wide\">\n          {label}\n        </span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n});\n\n// Componente InfoGrid para layout em grid\nconst InfoGrid = memo(({ children, columns = 'auto-fit', gap = 4, className = '' }) => {\n  const gridClasses = {\n    'auto-fit': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '2': 'grid-cols-1 sm:grid-cols-2',\n    '3': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '4': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'\n  };\n\n  return (\n    <div className={`grid ${gridClasses[columns]} gap-${gap} ${className} [&>*]:bg-green-100`}>\n      {children}\n    </div>\n  );\n});\n\n// Componente InfoTable para dados tabulares\nconst InfoTable = memo(({ data, className = '' }) => {\n  if (!data || data.length === 0) return null;\n\n  return (\n    <div className={`bg-green-100 rounded-lg overflow-hidden ${className}`}>\n      <table className=\"w-full\">\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-green-50'}>\n              <td className=\"px-4 py-3 text-sm font-medium text-gray-700 border-r border-green-200\">\n                {row.label}\n              </td>\n              <td className=\"px-4 py-3 text-sm text-gray-600\">\n                {row.value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\n// Componente InfoStats para estatísticas com ícones\nconst InfoStats = memo(({ stats, className = '' }) => {\n  if (!stats || stats.length === 0) return null;\n\n  return (\n    <div className={`grid grid-cols-2 sm:grid-cols-4 gap-4 ${className} [&>*]:border-b [&>*]:border-gray-200 [&>*]:pb-2 [&>*]:mb-2`}>\n      {stats.map((stat, index) => (\n        <div key={index} className=\"text-center rounded-lg p-4\">\n          <div className=\"flex justify-center mb-2\">\n            {stat.icon && <stat.icon className=\"w-6 h-6 text-green-600\" />}\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {stat.value}\n          </div>\n          <div className=\"text-xs text-gray-600 mt-1\">\n            {stat.label}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n\n// Componente InfoSection refatorado\nconst InfoSection = memo(({ \n  title, \n  icon: Icon, \n  children, \n  description,\n  defaultCollapsed = false,\n  className = '',\n  layout = 'default', // 'default', 'grid', 'table', 'stats'\n  layoutProps = {}\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n\n  const renderContent = () => {\n    if (!children) return null;\n\n    switch (layout) {\n      case 'grid':\n        return (\n          <InfoGrid {...layoutProps}>\n            {children}\n          </InfoGrid>\n        );\n      case 'table':\n        return (\n          <InfoTable data={layoutProps.data} className={layoutProps.className} />\n        );\n      case 'stats':\n        return (\n          <InfoStats stats={layoutProps.stats} className={layoutProps.className} />\n        );\n      default:\n        return (\n          <div className=\"space-y-4\">\n            {children}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <section \n      className={`\n        bg-white rounded-2xl p-5 \n        shadow-sm transition-all duration-200\n        ${className}\n      `}\n    >\n      <button\n        onClick={() => setIsCollapsed(!isCollapsed)}\n        className=\"\n          w-full flex items-center justify-between \n          text-base font-semibold\n          mb-4 text-gray-900 hover:text-gray-800 \n          transition-colors focus:outline-none\n        \"\n        aria-expanded={!isCollapsed}\n        aria-controls={`${title}-content`}\n      >\n        <div className=\"flex items-center gap-2\">\n          {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n          <span className=\"tracking-wide\">{title}</span>\n        </div>\n      </button>\n      \n      {!isCollapsed && (\n        <div \n          id={`${title}-content`}\n          className=\"space-y-4\"\n          role=\"region\"\n          aria-labelledby={`${title}-button`}\n        >\n          {description && (\n            <div className=\"bg-green-100 rounded-lg p-4\">\n              <p className=\"text-gray-700 text-sm leading-relaxed\">\n                {description}\n              </p>\n            </div>\n          )}\n          {renderContent()}\n        </div>\n      )}\n    </section>\n  );\n});\n\n// Exportar todos os componentes\nexport { InfoCard, InfoGrid, InfoTable, InfoStats };\nexport default InfoSection; ","import React, { memo, useState } from 'react';\nimport {\n  MapPin,\n  Users,\n  Globe,\n  Calendar,\n  Building,\n  Link as LinkIcon,\n  ExternalLink,\n  ChevronRight,\n  Check,\n  X,\n  Navigation,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst capitalize = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst CompactCard = ({ icon: Icon, label, value, type = 'text' }) => {\n  const renderValue = () => {\n    switch (type) {\n      case 'boolean':\n        return value ? (\n          <span className=\"flex items-center gap-1 text-green-600 text-sm\">\n            <Check className=\"w-5 h-5\" />\n            Sim\n          </span>\n        ) : (\n          <span className=\"flex items-center gap-1 text-red-500 text-sm\">\n            <X className=\"w-5 h-5\" />\n            Não\n          </span>\n        );\n      default:\n        return <span className=\"text-sm text-gray-800 truncate\">{value}</span>;\n    }\n  };\n\n  return (\n    <div className=\"p-1 rounded-md transition-all\">\n      <div className=\"flex items-center gap-1.5 mb-1\">\n        <Icon className=\"w-5 h-5 text-gray-600\" />\n        <span className=\"text-xs text-gray-500 font-medium\">{label}</span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n};\n\nconst InfoBlock = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-center gap-2 bg-green-100 p-1.5 rounded-md text-xs\">\n    <Icon className=\"w-5 h-5 text-green-600\" />\n    <span className=\"text-gray-700 font-medium\">{label}:</span>\n    <span className=\"font-semibold text-green-800\">{capitalize(value)}</span>\n  </div>\n);\n\nconst AddressDetails = ({ escola }) => {\n  const hasDetailedAddress = escola.logradouro || escola.numero || escola.bairro || escola.cep;\n  \n  if (!hasDetailedAddress) {\n    return (\n      <div className=\"mt-2 p-2 bg-green-100 rounded-md\">\n        <p className=\"text-xs text-gray-700 leading-snug\">\n          {capitalize(escola.endereco)}\n        </p>\n      </div>\n    );\n  }\n\n  const addressFields = [\n    { field: 'logradouro', label: 'Logradouro' },\n    { field: 'numero', label: 'Número' },\n    { field: 'complemento', label: 'Complemento' },\n    { field: 'bairro', label: 'Bairro' },\n  ];\n\n  return (\n    <div className=\"mt-2 space-y-1\">\n      {addressFields.map(({ field, label }) => \n        escola[field] && (\n          <div key={field} className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n            <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700 mb-0.5\">{label}</div>\n              <div className=\"text-xs text-gray-800 leading-snug\">{escola[field]}</div>\n            </div>\n          </div>\n        )\n      )}\n      \n      {(escola.cep || escola.estado) && (\n        <div className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n          <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n          <div className=\"flex-1\">\n            <div className=\"text-xs font-medium text-gray-700 mb-0.5\">Localização</div>\n            <div className=\"text-xs text-gray-800 leading-snug\">\n              {[escola.municipio, escola.estado, escola.cep].filter(Boolean).join(', ')}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MapButton = ({ escola }) => {\n  const hasCoordinates = escola.Latitude && escola.Longitude;\n  \n  if (!hasCoordinates) return null;\n\n  const openMap = () => {\n    window.open(`https://www.google.com/maps?q=${escola.Latitude},${escola.Longitude}`, '_blank');\n  };\n\n  return (\n    <button\n      onClick={openMap}\n      className=\"mt-2 w-full flex items-center justify-center gap-2 p-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors text-xs font-medium\"\n    >\n      <Navigation className=\"w-5 h-5\" />\n      Ver no Google Maps\n    </button>\n  );\n};\n\nconst SocialLinks = ({ links, expanded, onToggle }) => {\n  const socialLinks = (links || '').split(',').map(url => url.trim()).filter(Boolean);\n  \n  if (socialLinks.length === 0) return null;\n\n  return (\n    <div className=\"bg-green-100 rounded-md\">\n      <button\n        onClick={() => onToggle('social')}\n        className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n        aria-expanded={expanded.social}\n      >\n        <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n          <Globe className=\"w-5 h-5 text-blue-600\" />\n          Redes sociais ({socialLinks.length})\n        </span>\n        <ChevronRight\n          className={`w-5 h-5 text-gray-400 transition-transform ${\n            expanded.social ? 'rotate-90' : ''\n          }`}\n        />\n      </button>\n      \n      {expanded.social && (\n        <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n          <div className=\"mt-1 space-y-1\">\n            {socialLinks.map((link, index) => (\n              <a\n                key={index}\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center gap-1.5 p-1.5 bg-green-100 rounded-md hover:bg-green-200 group text-xs\"\n              >\n                <LinkIcon className=\"w-5 h-5 text-blue-600\" />\n                <span className=\"truncate flex-1 text-gray-700\">{link}</span>\n                <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BasicInfo = memo(({ escola }) => {\n  const [expanded, setExpanded] = useState({});\n\n  if (!escola) return null;\n\n  const toggle = (key) => {\n    setExpanded(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const basicInfoCards = [\n    {\n      icon: Building,\n      label: 'Município',\n      value: capitalize(escola.municipio),\n    },\n    {\n      icon: Calendar,\n      label: 'Fundação',\n      value: escola.ano_criacao,\n    },\n    {\n      icon: Globe,\n      label: 'Redes sociais',\n      value: escola.usa_redes_sociais,\n      type: 'boolean',\n    },\n  ].filter(item => item.value);\n\n  return (\n    <>\n      {/* Povos Indígenas em destaque antes de tudo */}\n      {escola.povos_indigenas && (\n        <div className=\"mb-4\">\n          <div className=\"text-lg sm:text-xl font-bold text-green-800\">\n            Povos Indígenas: <span className=\"font-semibold text-black\">{escola.povos_indigenas}</span>\n          </div>\n        </div>\n      )}\n      <InfoSection title=\"Localização\" icon={MapPin}>\n        {/* Cards informativos básicos */}\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mb-3 [&>*]:bg-green-100\">\n          {basicInfoCards.map((item, index) => (\n            <CompactCard key={index} {...item} />\n          ))}\n        </div>\n\n        <div className=\"space-y-1.5\">\n          {/* Diretoria de ensino */}\n          {escola.diretoria_ensino && (\n            <InfoBlock \n              icon={Building} \n              label=\"Diretoria de ensino\" \n              value={escola.diretoria_ensino} \n            />\n          )}\n\n          {/* Gaveta do endereço */}\n          {escola.endereco && (\n            <div className=\"bg-green-100 rounded-md\">\n              <button\n                onClick={() => toggle('endereco')}\n                className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n                aria-expanded={expanded.endereco}\n              >\n                <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                  <Building className=\"w-5 h-5\" />\n                  Endereço\n                </span>\n                <ChevronRight\n                  className={`w-5 h-5 text-gray-400 transition-transform ${\n                    expanded.endereco ? 'rotate-90' : ''\n                  }`}\n                />\n              </button>\n              {expanded.endereco && (\n                <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n                  <AddressDetails escola={escola} />\n                  <MapButton escola={escola} />\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Redes sociais */}\n          <SocialLinks \n            links={escola.links_redes_sociais}\n            expanded={expanded}\n            onToggle={toggle}\n          />\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default BasicInfo;","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { X, RefreshCw } from 'lucide-react';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { supabase } from '../../../supabaseClient';\n\nconst ImagensdasEscolas = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [error, setError] = useState('');\n  const cacheRef = useRef({});\n  const [cacheVersion, setCacheVersion] = useState(0); // Para forçar recarga\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagensdasEscolas: refreshKey mudou, forçando recarga');\n      limparCacheERecarregar();\n    }\n  }, [refreshKey]);\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    document.body.style.overflow = 'auto';\n  }, []);\n\n  // ESC para fechar\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Função para limpar cache e recarregar\n  const limparCacheERecarregar = useCallback(() => {\n    console.log('Limpando cache e recarregando imagens...');\n    cacheRef.current = {};\n    setCacheVersion(prev => prev + 1);\n    setImagens([]);\n    setLoading(true);\n    setError('');\n  }, []);\n\n  useEffect(() => {\n    if (!escola_id) {\n      setLoading(false);\n      return;\n    }\n\n    // Verificar se há cache válido (com versão)\n    const cacheKey = `${escola_id}_v${cacheVersion}`;\n    if (cacheRef.current[cacheKey]) {\n      console.log('Usando cache para escola', escola_id);\n      setImagens(cacheRef.current[cacheKey]);\n      setLoading(false);\n      return;\n    }\n\n    const buscarImagens = async () => {\n      console.log('Buscando imagens para escola', escola_id);\n      \n      try {\n        // Usar a mesma abordagem do painel de edição: listar arquivos do bucket\n        const { data: files, error } = await supabase.storage\n          .from('imagens-das-escolas')\n          .list(`${escola_id}/`);\n\n        if (error) {\n          throw error;\n        }\n\n        if (!files || files.length === 0) {\n          console.log('Nenhum arquivo encontrado para escola', escola_id);\n          setImagens([]);\n          setLoading(false);\n          return;\n        }\n\n        console.log('Arquivos encontrados:', files.length);\n\n        // Processar cada arquivo encontrado\n        const imagensEncontradas = await Promise.all(\n          files.map(async (file, index) => {\n            const filePath = `${escola_id}/${file.name}`;\n            const { data: { publicUrl } } = supabase.storage\n              .from('imagens-das-escolas')\n              .getPublicUrl(filePath);\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              console.log('Buscando legenda para:', filePath);\n              legenda = await getLegendaByImageUrl(filePath, escola_id, 'escola');\n              console.log('Legenda encontrada:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda para', filePath, ':', error);\n            }\n\n            return {\n              id: `${escola_id}-${file.name}`,\n              publicURL: publicUrl,\n              descricao: legenda?.legenda || `Imagem ${index + 1}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n              urlError: null,\n            };\n          })\n        );\n\n        console.log('Imagens processadas:', imagensEncontradas.length);\n        \n        // Salvar no cache com versão\n        cacheRef.current[cacheKey] = imagensEncontradas;\n        setImagens(imagensEncontradas);\n        \n        if (imagensEncontradas.length === 0) {\n          setError('Nenhuma imagem encontrada para esta escola.');\n        }\n      } catch (error) {\n        console.error('Erro ao processar imagens:', error);\n        setError('Erro ao carregar imagens da escola.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarImagens();\n  }, [escola_id, cacheVersion]);\n\n  if (loading) {\n    return (\n      <div className=\"text-gray-500 flex items-center gap-2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n        Carregando imagens da escola...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-red-600 flex items-center gap-2\">\n        <span>{error}</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (!imagens.length) {\n    return (\n      <div className=\"text-yellow-700 flex items-center gap-2\">\n        <span>Nenhuma imagem encontrada para esta escola.</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.descricao}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.descricao && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.descricao}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n            alt={imagemZoom.descricao}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.descricao && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.descricao}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagensdasEscolas.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagensdasEscolas);\n","import React, { memo } from 'react';\nimport ImagensdasEscolas from '../ImagensdasEscolas';\n\nconst HistoriaEscola = memo(({ escola, refreshKey = 0 }) => {\n  if (!escola?.historia_da_escola) return null;\n\n  return (\n    <article\n      className={`\n        mt-8 mb-12\n        max-w-4xl mx-auto\n        prose\n        prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900\n        prose-p:text-green-800\n        prose-p:leading-relaxed\n        prose-p:text-justify\n        prose-img:rounded-xl\n        prose-img:shadow-lg\n        prose-a:text-green-700\n        prose-a:no-underline\n        prose-a:border-b-2\n        prose-a:border-green-100\n        prose-a:transition-colors\n        hover:prose-a:border-green-600\n        bg-white\n        rounded-2xl\n        px-4 sm:px-6 md:px-8 py-6\n        shadow-lg\n      `}\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center gap-3 mb-3 sm:mb-4\">\n          <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n            <img \n              src={`${process.env.PUBLIC_URL}/onca.svg`} \n              alt=\"Ícone de onça\" \n              className=\"w-32 h-32 sm:w-36 sm:h-36\" \n              style={{ filter: 'none', borderRadius: '0', boxShadow: 'none', marginTop: '80px' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n          <h2 className=\"text-xl sm:text-2xl font-bold text-green-900 m-0\">\n            História da Escola\n          </h2>\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      <div className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {escola.historia_da_escola}\n      </div>\n\n      {/* Imagens da escola, responsivas e modulares */}\n      <ImagensdasEscolas escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriaEscola; ","import React, { memo } from 'react';\n\nconst BooleanValue = memo(({ value }) => {\n  if (value === undefined || value === null) return null;\n\n  return (\n    <span className={`font-medium ${value ? 'text-green-600' : 'text-neutral-400'}`}>\n      {value ? 'Sim' : 'Não'}\n    </span>\n  );\n});\n\nexport default BooleanValue; ","import React, { memo, useState } from 'react';\nimport { Sparkles, BookOpen, Users, MessageCircle, Clock } from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../../components/BooleanValue';\n\n// Função utilitária para transformar o texto em lista\nfunction parseModalidadeEnsino(text) {\n  if (!text || typeof text !== 'string') return [];\n  // Divide pelo traço longo (–, U+2013) e remove espaços extras\n  return text\n    .split('–')\n    .map(item => item.trim())\n    .filter(Boolean);\n}\n\n// Componente de lista expansível\nconst ExpandableList = ({ items, maxVisible = 3 }) => {\n  if (!items || items.length === 0) return null;\n\n  return (\n    <div className=\"-mt-1\">\n      <ul className=\"list-none text-gray-800 text-xs pl-0 ml-0\">\n        {items.map((item, idx) => (\n          <li key={idx} className=\"leading-tight m-0 p-0 pl-0 ml-0 flex items-start\">\n            <span className=\"mr-1 text-green-700 select-none\" style={{minWidth: '1em', display: 'inline-block'}}>•</span>\n            <span>{item}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// MiniCard padronizado\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium p-0 m-0\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Modalidades = memo(({ escola }) => {\n  if (!escola) return null;\n\n  // Cards principais de Modalidades\n  const turnosValue = escola.turnos_funcionamento || escola['turnos_funcionamento'] || '';\n  const modalidadeList = parseModalidadeEnsino(escola.modalidade_ensino);\n  \n  // Card de Modalidade de Ensino (separado para ocupar linha inteira)\n  const modalidadeEnsinoCard = {\n    icon: Sparkles,\n    label: 'Modalidade de Ensino',\n    value: <ExpandableList items={modalidadeList} maxVisible={3} />,\n  };\n\n  // Outros cards para o grid\n  const gridItems = [\n    turnosValue && {\n      icon: Clock,\n      label: 'Turnos de Funcionamento',\n      value: turnosValue,\n    },\n    {\n      icon: Users,\n      label: 'Número de Alunos',\n      value: escola.numero_alunos,\n    },\n    {\n      icon: MessageCircle,\n      label: 'Línguas Faladas',\n      value: escola.linguas_faladas,\n    },\n  ].filter(Boolean);\n\n  // Cards de Materiais Pedagógicos\n  const materiaisItems = [\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Não Indígena',\n      value: <BooleanValue value={escola.material_nao_indigena} />,\n    },\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Indígena',\n      value: <BooleanValue value={escola.material_indigena} />,\n    },\n  ];\n\n  return (\n    <>\n      <InfoSection title=\"Modalidades\" icon={Sparkles}>\n        {/* Modalidade de Ensino em linha inteira */}\n        <div className=\"mb-4 bg-green-100 rounded-lg p-2\">\n          <ExpandableList items={modalidadeList} maxVisible={3} />\n        </div>\n        \n        {/* Grid com os outros cards */}\n        <div\n          className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\"\n        >\n          {gridItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n      \n      <InfoSection \n        title=\"Materiais Pedagógicos\" \n        icon={BookOpen}\n        description=\"Diferenciados e não diferenciados, produzidos dentro e fora da comunidade.\"\n      >\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\">\n          {materiaisItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default Modalidades; ","import React, { memo } from 'react';\nimport {\n  Home,\n  Droplet,\n  Trash2,\n  Wifi,\n  Monitor,\n  MapPin,\n  Utensils,\n  Apple,\n  ChefHat,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../BooleanValue';\n\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Infraestrutura = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const items = [\n    {\n      icon: Droplet,\n      label: 'Acesso à Água',\n      value: escola.acesso_agua,\n    },\n    {\n      icon: Trash2,\n      label: 'Coleta de Lixo',\n      value: escola.coleta_lixo,\n    },\n    {\n      icon: Wifi,\n      label: 'Acesso à Internet',\n      value: <BooleanValue value={escola.acesso_internet} />,\n    },\n    {\n      icon: Monitor,\n      label: 'Equipamentos Tecnológicos',\n      value: escola.equipamentos,\n    },\n    {\n      icon: MapPin,\n      label: 'Modo de Acesso à Escola',\n      value: escola.modo_acesso,\n    },\n    {\n      icon: Utensils,\n      label: 'Cozinha',\n      value: <BooleanValue value={escola.cozinha} />,\n    },\n    {\n      icon: Apple,\n      label: 'Merenda Escolar',\n      value: <BooleanValue value={escola.merenda_escolar} />,\n    },\n    {\n      icon: ChefHat,\n      label: 'Merenda Diferenciada',\n      value: <BooleanValue value={escola.diferenciada} />,\n    },\n  ];\n\n  return (\n    <InfoSection title=\"Infraestrutura\" icon={Home}>\n      {escola.espaco_escolar && (\n        <div className=\"p-2 text-sm text-gray-800 border-b border-gray-200 whitespace-pre-wrap\">\n          {escola.espaco_escolar}\n        </div>\n      )}\n      <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-3 [&>*]:bg-green-100\">\n        {items.map((item, idx) => (\n          <MiniCard\n            key={idx}\n            icon={item.icon}\n            label={item.label}\n            value={item.value}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default Infraestrutura;\n","import React, { memo } from 'react';\nimport {\n  UsersRound,\n  Star,\n  User,\n  UserCheck,\n  UserMinus,\n  MessageCircle,\n  NotebookPen,\n  Check,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst MiniCard = ({ icon: Icon, label, value, description }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium mt-0.5\">{value}</div>\n      {description && (\n        <div className=\"text-xs text-gray-600 mt-1 whitespace-pre-line\">\n          {description}\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nconst formatarNomeProfessor = (nome) => {\n  if (!nome) return nome;\n\n  const padroesIndigenas = [\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+\\(([^)]+)\\)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+-\\s+([^)]+)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+ou\\s+([^)]+)/,\n  ];\n\n  for (const padrao of padroesIndigenas) {\n    const match = nome.match(padrao);\n    if (match) {\n      const nomeIndigena = `${match[1]} ${match[2]}`;\n      const nomePortugues = match[3];\n      return `${nomeIndigena} (${nomePortugues})`;\n    }\n  }\n\n  return nome.includes('(') && nome.includes(')') ? nome : nome;\n};\n\nconst formatarFormacaoProfessores = (formacao) => {\n  if (!formacao) return null;\n\n  const [status, ...resto] = formacao.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst formatarFormacaoContinuada = (valor) => {\n  if (!valor) return null;\n\n  const [status, ...resto] = valor.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst renderBooleanStatus = (valor) => {\n  const normalizado = String(valor).trim().toLowerCase();\n  if (normalizado === 'sim') {\n    return (\n      <div className=\"flex items-center gap-1 text-green-700\">\n        <Check className=\"w-5 h-5\" />\n        Sim\n      </div>\n    );\n  } else if (normalizado === 'não' || normalizado === 'nao') {\n    return (\n      <div className=\"flex items-center gap-1 text-gray-500\">\n        <X className=\"w-5 h-5\" />\n        Não\n      </div>\n    );\n  }\n  return valor;\n};\n\nconst GestaoProfessores = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const formacao = formatarFormacaoProfessores(escola.formacao_professores);\n  const continuada = formatarFormacaoContinuada(escola.formacao_continuada);\n\n  return (\n    <InfoSection title=\"Gestores\" icon={UsersRound}>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 mt-1 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={UserCheck}\n          label=\"Professores Indígenas\"\n          value={escola.professores_indigenas}\n        />\n        <MiniCard\n          icon={UserMinus}\n          label=\"Professores Não Indígenas\"\n          value={escola.professores_nao_indigenas}\n        />\n        <MiniCard\n          icon={MessageCircle}\n          label=\"Professores que falam língua indígena\"\n          value={renderBooleanStatus(escola.professores_falam_lingua)}\n        />\n        {formacao?.status && (\n          <MiniCard\n            icon={Star}\n            label=\"Formação dos Professores\"\n            value={renderBooleanStatus(formacao.status)}\n            description={formacao.descricao}\n          />\n        )}\n      </div>\n\n      <div className=\"space-y-2 mt-4 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={User}\n          label=\"Gestão/Nome\"\n          value={escola.gestao}\n        />\n        <MiniCard\n          icon={UsersRound}\n          label=\"Outros Funcionários\"\n          value={escola.outros_funcionarios}\n        />\n        {continuada?.status && (\n          <MiniCard\n            icon={NotebookPen}\n            label=\"Visitas de Supervisores e Formação Continuada\"\n            value={renderBooleanStatus(continuada.status)}\n            description={continuada.descricao}\n          />\n        )}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default GestaoProfessores;\n","import React, { memo } from 'react';\nimport {\n  Target,\n  BookOpen,\n  GraduationCap,\n  Users,\n  Heart,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst ProjectCard = ({ icon: Icon, label, value }) => {\n  const isNegative = value?.trim().toLowerCase() === 'não';\n\n  return (\n    <div className=\"flex items-start gap-4 rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow duration-200\">\n      <div className=\"mt-1\">\n        <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      </div>\n      <div className=\"flex-1 space-y-1\">\n        <div className=\"text-sm font-semibold text-gray-800\">{label}</div>\n        {isNegative ? (\n          <div className=\"text-sm text-gray-400 flex items-center gap-1\">\n            <X className=\"w-5 h-5 text-gray-400\" />\n            Não\n          </div>\n        ) : (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProjetosParcerias = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const projectsData = [\n    {\n      field: 'projetos_andamento',\n      icon: BookOpen,\n      label: 'Projetos em andamento',\n    },\n    {\n      field: 'parcerias_universidades',\n      icon: GraduationCap,\n      label: 'Parcerias com universidades',\n    },\n    {\n      field: 'acoes_ongs',\n      icon: Users,\n      label: 'Ações com ONGs ou coletivos',\n    },\n    {\n      field: 'desejos_comunidade',\n      icon: Heart,\n      label: 'Desejos da comunidade para a escola',\n    },\n    {\n      field: 'parcerias_municipio',\n      icon: Target,\n      label: 'Parcerias com o município',\n    },\n  ];\n\n  const availableProjects = projectsData.filter(\n    project => escola[project.field] && escola[project.field].trim()\n  );\n\n  if (availableProjects.length === 0) return null;\n\n  return (\n    <InfoSection title=\"Projetos e Parcerias\" icon={Target}>\n      <div className=\"grid grid-cols-1 gap-3 [&>*]:bg-green-100\">\n        {availableProjects.map((project) => (\n          <ProjectCard\n            key={project.field}\n            icon={project.icon}\n            label={project.label}\n            value={escola[project.field]}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default ProjetosParcerias;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { supabase } from '../../../supabaseClient';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { X } from 'lucide-react';\n\nconst ImagemHistoriadoProfessor = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagemHistoriadoProfessor: refreshKey mudou, forçando recarga');\n      setImagens([]);\n      setLoading(true);\n      setError(null);\n    }\n  }, [refreshKey]);\n\n  useEffect(() => {\n    if (!escola_id) return;\n\n    setLoading(true);\n    setError(null);\n\n    // Busca arquivos do bucket diretamente\n    supabase\n      .storage\n      .from('imagens-professores')\n      .list(`${escola_id}/`)\n      .then(async ({ data, error }) => {\n        if (error) {\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n\n        if (data && data.length > 0) {\n          console.log('Arquivos de professores encontrados:', data.length);\n          const imagensComUrl = await Promise.all(data.map(async (file, idx) => {\n            const { data: { publicUrl } } = supabase\n              .storage\n              .from('imagens-professores')\n              .getPublicUrl(`${escola_id}/${file.name}`);\n            \n            // Extrair gênero do nome do arquivo\n            let genero = 'professor';\n            if (file.name.startsWith('professora_')) {\n              genero = 'professora';\n            } else if (file.name.startsWith('professor_')) {\n              genero = 'professor';\n            }\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              const caminhoRelativo = `${escola_id}/${file.name}`;\n              console.log('Buscando legenda para professor:', caminhoRelativo);\n              legenda = await getLegendaByImageUrl(caminhoRelativo, escola_id, 'professor');\n              console.log('Legenda encontrada para professor:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda:', error);\n            }\n\n            return {\n              id: idx + 1,\n              publicURL: publicUrl,\n              genero,\n              nome: file.name,\n              created_at: file.created_at || '',\n              legenda: legenda?.legenda || `Imagem do ${genero}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n            };\n          }));\n          setImagens(imagensComUrl);\n        } else {\n          setImagens([]);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(`Erro inesperado: ${err.message}`);\n        setLoading(false);\n      });\n  }, [escola_id]);\n\n  if (loading) {\n    return <div className=\"text-gray-500\">Carregando imagens do professor...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-600\">Erro ao carregar imagens: {error}</div>;\n  }\n\n  if (!imagens.length) {\n    return null;\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.legenda}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.legenda && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.legenda}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n              alt={imagemZoom.legenda}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.legenda && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.legenda}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagemHistoriadoProfessor.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagemHistoriadoProfessor);\n","import { supabase } from '../supabaseClient';\n\n// Configurações para imagens das histórias do professor\nconst HISTORIA_PROFESSOR_CONFIG = {\n  BUCKET_NAME: 'historia-professor-imagens',\n  MAX_FILE_SIZE: 5 * 1024 * 1024, // 5MB\n  ALLOWED_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\n  MAX_IMAGES_PER_HISTORIA: 1,\n  MIN_DIMENSIONS: { width: 200, height: 200 }\n};\n\n/**\n * Valida um arquivo de imagem\n * @param {File} file - Arquivo a ser validado\n * @returns {Object} Resultado da validação\n */\nconst validateImageFile = (file) => {\n  // Verificar tipo MIME\n  if (!HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.includes(file.type)) {\n    return {\n      isValid: false,\n      error: `Tipo de arquivo não suportado. Use apenas: ${HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1].toUpperCase()).join(', ')}`\n    };\n  }\n\n  // Verificar tamanho\n  if (file.size > HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE) {\n    return {\n      isValid: false,\n      error: `Arquivo muito grande. Tamanho máximo: ${HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE / (1024 * 1024)}MB`\n    };\n  }\n\n  // Verificar extensão\n  const extension = file.name.split('.').pop().toLowerCase();\n  const allowedExtensions = HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1]);\n  if (!allowedExtensions.includes(extension)) {\n    return {\n      isValid: false,\n      error: `Extensão não permitida. Use apenas: ${allowedExtensions.join(', ')}`\n    };\n  }\n\n  return { isValid: true };\n};\n\n/**\n * Valida dimensões da imagem (opcional)\n * @param {File} file - Arquivo de imagem\n * @returns {Promise<boolean>} Se as dimensões são válidas\n */\nconst validateImageDimensions = (file) => {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => {\n      const isValid = img.width >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.width &&\n                     img.height >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.height;\n      resolve(isValid);\n    };\n    img.onerror = () => resolve(false);\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n/**\n * Gera nome único para o arquivo\n * @param {File} file - Arquivo\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @returns {string} Nome único do arquivo\n */\nconst generateUniqueFileName = (file, escolaId, historiaId) => {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 8);\n  const extension = file.name.split('.').pop().toLowerCase();\n  return `historia_${historiaId}_${timestamp}_${random}.${extension}`;\n};\n\n/**\n * Buscar todas as histórias do professor de uma escola\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Array>} Lista de histórias\n */\nexport const getHistoriasProfessor = async (escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('ordem', { ascending: true })\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      throw error;\n    }\n\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Adicionar URLs públicas das imagens\n    const historiasComImagens = data.map((historia) => {\n      if (historia.imagem_url) {\n        try {\n          const { data: { publicUrl } } = supabase.storage\n            .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n            .getPublicUrl(historia.imagem_url);\n\n          return { ...historia, imagem_public_url: publicUrl };\n        } catch (err) {\n          return { ...historia, imagem_public_url: null, urlError: err.message };\n        }\n      }\n      return historia;\n    });\n\n    return historiasComImagens;\n\n  } catch (error) {\n    console.error('Erro ao buscar histórias do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Criar nova história do professor\n * @param {Object} historiaData - Dados da história\n * @returns {Promise<Object>} História criada\n */\nexport const createHistoriaProfessor = async (historiaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .insert([{\n        escola_id: historiaData.escola_id,\n        nome_professor: historiaData.nome_professor || null,\n        historia: historiaData.historia,\n        ordem: historiaData.ordem || 1,\n        ativo: historiaData.ativo !== false\n      }])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao criar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar história do professor\n * @param {number} historiaId - ID da história\n * @param {Object} historiaData - Dados atualizados\n * @returns {Promise<Object>} História atualizada\n */\nexport const updateHistoriaProfessor = async (historiaId, historiaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .update({\n        nome_professor: historiaData.nome_professor,\n        historia: historiaData.historia,\n        ordem: historiaData.ordem,\n        ativo: historiaData.ativo,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao atualizar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessor = async (historiaId) => {\n  try {\n    // Deletar a história\n    const { error: deleteError } = await supabase\n      .from('historias_professor')\n      .delete()\n      .eq('id', historiaId);\n\n    if (deleteError) {\n      throw deleteError;\n    }\n  } catch (error) {\n    console.error('Erro ao deletar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Upload de imagem para uma história do professor\n * @param {File} file - Arquivo de imagem\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @param {string} descricao - Descrição da imagem\n * @returns {Promise<Object>} Dados da imagem salva\n */\nexport const uploadHistoriaProfessorImage = async (file, escolaId, historiaId, descricao = '') => {\n  try {\n    // Validar arquivo\n    const validation = validateImageFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n\n    // Validar dimensões (opcional)\n    const hasValidDimensions = await validateImageDimensions(file);\n    if (!hasValidDimensions) {\n      console.warn('Imagem com dimensões menores que o recomendado');\n    }\n\n    // Gerar nome único\n    const fileName = generateUniqueFileName(file, escolaId, historiaId);\n    const filePath = `${escolaId}/${fileName}`;\n\n    // Upload ao bucket\n    const { error: uploadError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .upload(filePath, file, {\n        cacheControl: '3600',\n        upsert: false\n      });\n\n    if (uploadError) {\n      throw new Error(`Erro no upload: ${uploadError.message}`);\n    }\n\n    // Obter URL pública\n    const { data: { publicUrl } } = supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .getPublicUrl(filePath);\n\n    // Atualizar a história com a URL da imagem\n    const { data: historia, error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: descricao.trim() || null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (updateError) {\n      // Se falhar ao atualizar, deletar o arquivo\n      await supabase.storage\n        .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n        .remove([filePath]);\n      throw new Error(`Erro ao salvar metadados: ${updateError.message}`);\n    }\n\n    return {\n      id: historia.id,\n      descricao_imagem: historia.descricao_imagem\n    };\n\n  } catch (error) {\n    console.error('Erro no upload da imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar imagem de uma história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessorImage = async (historiaId) => {\n  try {\n    // Buscar a história para obter a URL da imagem\n    const { data: historia, error: fetchError } = await supabase\n      .from('historias_professor')\n      .select('imagem_url')\n      .eq('id', historiaId)\n      .single();\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!historia.imagem_url) {\n      return; // Não há imagem para deletar\n    }\n\n    // Atualizar a história removendo a referência da imagem\n    const { error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId);\n\n    if (updateError) {\n      throw updateError;\n    }\n\n    // Deletar arquivo do storage\n    const { error: storageError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .remove([historia.imagem_url]);\n\n    if (storageError) {\n      console.warn('Erro ao deletar imagem do storage:', storageError);\n    }\n\n  } catch (error) {\n    console.error('Erro ao deletar imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Migrar dados existentes da tabela escolas_completa\n * @returns {Promise<Object>} Resultado da migração\n */\nexport const migrarDadosExistentes = async () => {\n  try {\n    // Buscar escolas com história do professor\n    const { data: escolas, error: fetchError } = await supabase\n      .from('escolas_completa')\n      .select('id, historia_do_prof')\n      .not('historia_do_prof', 'is', null)\n      .neq('historia_do_prof', '');\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!escolas || escolas.length === 0) {\n      return { migradas: 0, mensagem: 'Nenhuma história para migrar' };\n    }\n\n    // Inserir histórias na nova tabela\n    const historiasParaInserir = escolas.map(escola => ({\n      escola_id: escola.id,\n      historia: escola.historia_do_prof,\n      ordem: 1,\n      ativo: true,\n      created_at: new Date().toISOString()\n    }));\n\n    const { data: historiasInseridas, error: insertError } = await supabase\n      .from('historias_professor')\n      .insert(historiasParaInserir)\n      .select();\n\n    if (insertError) {\n      throw insertError;\n    }\n\n    return {\n      migradas: historiasInseridas.length,\n      mensagem: `${historiasInseridas.length} histórias migradas com sucesso`\n    };\n\n  } catch (error) {\n    console.error('Erro na migração de dados:', error);\n    throw error;\n  }\n};\n\n/**\n * Verificar se uma escola tem histórias do professor\n * @param {number} escolaId - ID da escola\n * @returns {Promise<boolean>} Se tem histórias\n */\nexport const escolaTemHistoriasProfessor = async (escolaId) => {\n  try {\n    const { count, error } = await supabase\n      .from('historias_professor')\n      .select('*', { count: 'exact', head: true })\n      .eq('escola_id', escolaId)\n      .eq('ativo', true);\n\n    if (error) {\n      throw error;\n    }\n\n    return (count || 0) > 0;\n\n  } catch (error) {\n    console.error('Erro ao verificar histórias do professor:', error);\n    return false;\n  }\n}; ","import React, { memo, useEffect, useState, useCallback } from 'react';\nimport { ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { getHistoriasProfessor } from '../../../../services/historiaProfessorService';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\n\nconst HistoriadoProfessor = memo(({ escola, refreshKey = 0 }) => {\n  const [historias, setHistorias] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentHistoriaIndex, setCurrentHistoriaIndex] = useState(0);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        fecharZoom();\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Carregar histórias do professor\n  useEffect(() => {\n    if (!escola?.id) {\n      setLoading(false);\n      return;\n    }\n    const carregarHistorias = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await getHistoriasProfessor(escola.id);\n        setHistorias(data || []);\n        setCurrentHistoriaIndex(0);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    carregarHistorias();\n  }, [escola?.id, refreshKey]);\n\n  // Navegação entre histórias\n  const nextHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev < historias.length - 1 ? prev + 1 : 0\n    );\n  }, [historias.length]);\n\n  const prevHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev > 0 ? prev - 1 : historias.length - 1\n    );\n  }, [historias.length]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (historias.length <= 1) return;\n      if (e.key === 'ArrowRight') {\n        nextHistoria();\n      } else if (e.key === 'ArrowLeft') {\n        prevHistoria();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [historias.length, nextHistoria, prevHistoria]);\n\n  if (loading) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-green-100/50\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando histórias do professor...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-red-100/50\">\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600\">Erro ao carregar histórias do professor: {error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!historias.length) {\n    return null;\n  }\n\n  const currentHistoria = historias[currentHistoriaIndex];\n  const hasMultipleHistorias = historias.length > 1;\n\n  return (\n    <article\n      className=\"\n        mt-8 mb-12 max-w-4xl mx-auto\n        px-4 sm:px-6 md:px-8 py-6\n        bg-white rounded-2xl shadow-lg\n        prose prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n        prose-img:rounded-xl prose-img:shadow-lg\n        prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n      \"\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n              <img \n                src={`${process.env.PUBLIC_URL}/passaro.svg`} \n                alt=\"Ícone de pássaro\" \n                className=\"w-12 h-12 sm:w-24 sm:h-24\" \n                style={{ \n                  filter: 'none', \n                  borderRadius: '0', \n                  boxShadow: 'none', \n                  margin: '0',\n                  padding: '0',\n                  border: 'none',\n                  outline: 'none'\n                }}\n                aria-hidden=\"true\"\n              />\n            </span>\n            <h2 className=\"text-xl sm:text-2xl font-bold text-black m-0\">\n              História dos Professores\n            </h2>\n          </div>\n          {hasMultipleHistorias && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span>{currentHistoriaIndex + 1} de {historias.length}</span>\n            </div>\n          )}\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      {/* Conteúdo da história atual */}\n      <section className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {currentHistoria.nome_professor && (\n          <h3 className=\"text-lg sm:text-xl font-semibold text-green-800 mb-4\">\n            {currentHistoria.nome_professor}\n          </h3>\n        )}\n        <div>{currentHistoria.historia}</div>\n        {currentHistoria.imagem_public_url && (\n          <figure className=\"my-6\">\n            <div className=\"relative\">\n              <img\n                src={currentHistoria.imagem_public_url}\n                alt={currentHistoria.descricao_imagem || 'Imagem da história do professor'}\n                className=\"w-full max-w-2xl mx-auto rounded-xl shadow-lg cursor-pointer transition-transform duration-200 hover:scale-105\"\n                onClick={() => setImagemZoom(currentHistoria)}\n                loading=\"lazy\"\n              />\n              {currentHistoria.descricao_imagem && (\n                <figcaption className=\"text-center text-sm text-gray-600 mt-2\">\n                  {currentHistoria.descricao_imagem}\n                </figcaption>\n              )}\n            </div>\n          </figure>\n        )}\n      </section>\n\n      {/* Navegação entre histórias */}\n      {hasMultipleHistorias && (\n        <div className=\"flex items-center justify-between mt-8 pt-6 border-t border-gray-200\">\n          <button\n            onClick={prevHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"História anterior\"\n          >\n            <ChevronLeft className=\"w-5 h-5\" />\n            <span className=\"hidden sm:inline\">Anterior</span>\n          </button>\n          <div className=\"flex gap-2\">\n            {historias.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentHistoriaIndex(index)}\n                className={`w-3 h-3 rounded-full border-2 ${index === currentHistoriaIndex ? 'bg-green-600 border-green-600' : 'bg-white border-gray-300'} transition-colors`}\n                aria-label={`Ir para história ${index + 1}`}\n              />\n            ))}\n          </div>\n          <button\n            onClick={nextHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"Próxima história\"\n          >\n            <span className=\"hidden sm:inline\">Próxima</span>\n            <ChevronRight className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Modal de zoom da imagem */}\n      {imagemZoom && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-80\" onClick={fecharZoom}>\n          <div className=\"relative max-w-3xl w-full p-4\" onClick={e => e.stopPropagation()}>\n            <button\n              className=\"absolute top-2 right-2 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-80\"\n              onClick={fecharZoom}\n              aria-label=\"Fechar zoom\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <img\n              src={imagemZoom.imagem_public_url}\n              alt={imagemZoom.descricao_imagem || 'Imagem da história do professor'}\n              className=\"w-full max-h-[80vh] object-contain rounded-xl shadow-2xl\"\n            />\n            {imagemZoom.descricao_imagem && (\n              <figcaption className=\"text-center text-base text-gray-200 mt-4\">\n                {imagemZoom.descricao_imagem}\n              </figcaption>\n            )}\n          </div>\n        </div>\n      )}\n\n      <ImagemHistoriadoProfessor escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriadoProfessor;\n","import React, { memo } from 'react';\n\n// Import all section components\nimport BasicInfo from './BasicInfo';\nimport HistoriaEscola from './HistoriaEscola';\n// import PovosLinguas from './PovosLinguas';\nimport Modalidades from './Modalidades';\nimport Infraestrutura from './Infraestrutura';\nimport GestaoProfessores from './GestaoProfessores';\nimport ProjetosParcerias from './ProjetosParcerias';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport HistoriadoProfessor from './HistoriadoProfessor';\n\n// CSS para layout Masonry real usando CSS columns\nconst masonryStyles = `\n  .masonry-grid {\n    column-count: 1;\n    column-gap: 1.5rem;\n    column-fill: balance;\n  }\n  \n  .masonry-grid > * {\n    display: block;\n    break-inside: avoid;\n    page-break-inside: avoid;\n    margin-bottom: 1.5rem;\n  }\n  \n  /* Mobile: 1 coluna */\n  @media (max-width: 767px) {\n    .masonry-grid {\n      column-count: 1;\n    }\n  }\n  \n  /* Tablet e Desktop: 2 colunas */\n  @media (min-width: 768px) {\n    .masonry-grid {\n      column-count: 2;\n    }\n  }\n`;\n\n// Componente wrapper para o grid\nconst GridLayoutWrapper = memo(({ children, shouldUseGrid }) => {\n  const containerClasses = shouldUseGrid\n    ? 'masonry-grid'\n    : 'space-y-4';\n\n  return (\n    <>\n      <style>{masonryStyles}</style>\n      <div className={`${containerClasses} transition-all duration-300 ease-in-out`}>\n        {children}\n      </div>\n    </>\n  );\n});\n\nconst EscolaInfo = memo(({ escola, shouldUseGrid = false, refreshKey = 0 }) => {\n  console.log(\"EscolaInfo recebeu:\", escola);\n  \n  if (!escola) {\n    console.log(\"EscolaInfo: escola é null ou undefined\");\n    return null;\n  }\n\n  // Componentes que serão renderizados no grid\n  const gridSections = [\n    { Component: BasicInfo, props: { escola } },\n    // { Component: PovosLinguas, props: { escola } },\n    { Component: Modalidades, props: { escola } },\n    { Component: Infraestrutura, props: { escola } },\n    { Component: GestaoProfessores, props: { escola } },\n    { Component: ProjetosParcerias, props: { escola } }\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Grid de cards */}\n      <GridLayoutWrapper shouldUseGrid={shouldUseGrid}>\n        {gridSections.map(({ Component, props }, index) => (\n          <Component key={index} {...props} />\n        ))}\n      </GridLayoutWrapper>\n\n      {/* História da Escola em destaque */}\n      <HistoriaEscola escola={escola} refreshKey={refreshKey} />\n      <HistoriadoProfessor escola={escola} refreshKey={refreshKey} />\n    </div>\n  );\n});\n\nexport default EscolaInfo; ","import React from 'react';\n\nconst HandFistIcon = ({ className = 'w-5 h-5', ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 256 256\"\n    fill=\"currentColor\"\n    className={className}\n    {...props}\n  >\n    <path d=\"M200,80H184V64a32,32,0,0,0-56-21.13A32,32,0,0,0,72.21,60.42,32,32,0,0,0,24,88v40a104,104,0,0,0,208,0V112A32,32,0,0,0,200,80ZM152,48a16,16,0,0,1,16,16V80H136V64A16,16,0,0,1,152,48ZM88,64a16,16,0,0,1,32,0v40a16,16,0,0,1-32,0ZM40,88a16,16,0,0,1,32,0v16a16,16,0,0,1-32,0Zm176,40a88,88,0,0,1-175.92,3.75A31.93,31.93,0,0,0,80,125.13a31.93,31.93,0,0,0,44.58,3.35,32.21,32.21,0,0,0,11.8,11.44A47.88,47.88,0,0,0,120,176a8,8,0,0,0,16,0,32,32,0,0,1,32-32,8,8,0,0,0,0-16H152a16,16,0,0,1-16-16V96h64a16,16,0,0,1,16,16Z\" />\n  </svg>\n);\n\nexport default HandFistIcon; ","import React, { memo } from 'react';\n\nconst InfoItem = memo(({ label, value, className = '', isTextArea = false }) => {\n  if (!value) return null;\n\n  const isFlexLayout = className.includes('flex flex-col');\n  const baseClasses = isFlexLayout \n    ? 'flex flex-col gap-1 text-sm py-0.5'\n    : 'grid grid-cols-[auto,1fr] gap-x-2 text-sm py-0.5';\n\n  return (\n    <div className={`${baseClasses} ${className}`}>\n      <span className=\"font-medium text-neutral-800\">{label}:</span>\n      {isTextArea ? (\n        <div className=\"text-neutral-600\">\n          <div className=\"whitespace-pre-wrap break-words text-sm leading-relaxed\">\n            {value}\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-neutral-600 break-words\">{value}</span>\n      )}\n    </div>\n  );\n});\n\nexport default InfoItem; ","import React, { memo } from 'react';\nimport HandFistIcon from './icons/HandFistIcon';\nimport InfoSection from './components/InfoSection';\nimport InfoItem from './components/InfoItem';\n\n// Wrapper para passar className maior ao ícone\nconst LargeHandFistIcon = (props) => <HandFistIcon className=\"w-8 h-8\" {...props} />;\n\nconst TerraIndigenaInfo = memo(({ terraIndigena }) => {\n  if (!terraIndigena) {\n    console.log(\"TerraIndigenaInfo: terraIndigena é null ou undefined\");\n    return null;\n  }\n\n  const formatarSuperficie = () => {\n    return terraIndigena.superficie ? \n      `Superfície: ${parseFloat(terraIndigena.superficie).toFixed(2)} ha` : null;\n  };\n\n  const formatarLocalizacao = () => {\n    return `${terraIndigena.municipio || ''}, ${terraIndigena.uf || ''}`.trim();\n  };\n\n  return (\n    <InfoSection title=\"Informações da Terra Indígena\" icon={LargeHandFistIcon}>\n      <InfoItem label=\"Povos Indígenas\" value={terraIndigena.etnia} />\n      <InfoItem label=\"Localização\" value={formatarLocalizacao()} />\n      <InfoItem label=\"Superfície\" value={formatarSuperficie()} />\n      <InfoItem label=\"Fase\" value={terraIndigena.fase} />\n      <InfoItem label=\"Modalidade\" value={terraIndigena.modalidade} />\n      <InfoItem label=\"Reestudo\" value={terraIndigena.reestudo} />\n      <InfoItem label=\"Coordenação Regional\" value={terraIndigena.cr} />\n      <InfoItem label=\"Faixa de Fronteira\" value={terraIndigena.faixa_fron} />\n      <InfoItem label=\"Unidade Administrativa\" value={terraIndigena.undadm_nom} />\n      <InfoItem label=\"Sigla Unidade\" value={terraIndigena.undadm_sig} />\n      <InfoItem label=\"Domínio\" value={terraIndigena.dominio_un} />\n      <InfoItem label=\"Data de Atualização\" value={terraIndigena.data_atual} />\n      <InfoItem label=\"Código Terra Indígena\" value={terraIndigena.terrai_cod} />\n      <InfoItem label=\"Código Unidade Administrativa\" value={terraIndigena.undadm_cod} />\n    </InfoSection>\n  );\n});\n\nexport default TerraIndigenaInfo; ","import React, { useState } from \"react\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n  LinkedinIcon,\n} from \"react-share\";\n\n// Componente Tooltip simples\nconst Tooltip = ({ children, text, position = \"top\" }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n  };\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      onFocus={() => setIsVisible(true)}\n      onBlur={() => setIsVisible(false)}\n    >\n      {children}\n      {isVisible && (\n        <div className={`\n          absolute z-50 px-2 py-1 text-xs text-white bg-gray-900 rounded shadow-lg whitespace-nowrap\n          ${positionClasses[position]}\n        `}>\n          {text}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShareButton = ({ onClick, url, title, description = \"\" }) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      // Fallback para navegadores mais antigos\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  // Frases de compartilhamento mais atrativas\n  const shareTextOptions = [\n    `Conheça a escola indígena: ${title}`,\n    `Descubra esta escola indígena: ${title}`,\n    `Escola indígena incrível: ${title}`,\n    `Educação indígena em destaque: ${title}`,\n    `Conheça esta escola: ${title}`,\n    `Escola indígena que inspira: ${title}`,\n    `Educação que transforma: ${title}`,\n    `Escola indígena de referência: ${title}`\n  ];\n\n  // Seleciona uma frase aleatória para variar o conteúdo\n  const randomIndex = Math.floor(Math.random() * shareTextOptions.length);\n  const shareText = shareTextOptions[randomIndex];\n  const shareUrl = url || window.location.href;\n\n  return (\n    <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n      <div className=\"mt-2 space-y-1\">\n        {/* Botão Copiar Link */}\n        <Tooltip text={copied ? \"Link copiado!\" : \"Copiar link para clipboard\"}>\n          <button\n            onClick={handleCopyLink}\n            className={`\n              w-full flex items-start gap-2 p-1.5 rounded-md transition-colors\n              focus:outline-none focus:ring-1 focus:ring-green-500\n              ${copied\n                ? 'bg-green-100'\n                : 'bg-green-100 hover:bg-green-200'\n              }\n            `}\n            aria-label=\"Copiar link para clipboard\"\n          >\n            <svg \n              className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" \n              />\n            </svg>\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700\">\n                {copied ? 'Link Copiado' : 'Copiar Link'}\n              </div>\n            </div>\n          </button>\n        </Tooltip>\n\n        {/* Botão WhatsApp */}\n        <Tooltip text=\"Compartilhar no WhatsApp\">\n          <WhatsappShareButton\n            url={shareUrl}\n            title={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no WhatsApp\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <WhatsappIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">WhatsApp</div>\n              </div>\n            </div>\n          </WhatsappShareButton>\n        </Tooltip>\n\n        {/* Botão Facebook */}\n        <Tooltip text=\"Compartilhar no Facebook\">\n          <FacebookShareButton\n            url={shareUrl}\n            quote={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no Facebook\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <FacebookIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Facebook</div>\n              </div>\n            </div>\n          </FacebookShareButton>\n        </Tooltip>\n\n        {/* Botão Twitter */}\n        <Tooltip text=\"Compartilhar no Twitter\">\n          <TwitterShareButton\n            url={shareUrl}\n            title={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no Twitter\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <TwitterIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Twitter</div>\n              </div>\n            </div>\n          </TwitterShareButton>\n        </Tooltip>\n\n        {/* Botão LinkedIn */}\n        <Tooltip text=\"Compartilhar no LinkedIn\">\n          <LinkedinShareButton\n            url={shareUrl}\n            title={title}\n            summary={description}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no LinkedIn\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <LinkedinIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">LinkedIn</div>\n              </div>\n            </div>\n          </LinkedinShareButton>\n        </Tooltip>\n\n        {/* Botão Compartilhar Nativo (fallback) */}\n        {navigator.share && (\n          <Tooltip text=\"Compartilhar usando opções do sistema\">\n            <button\n              onClick={onClick}\n              className=\"w-full flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md transition-colors focus:outline-none focus:ring-1 focus:ring-green-500\"\n              aria-label=\"Compartilhar usando opções do sistema\"\n            >\n              <svg \n                className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" \n                />\n              </svg>\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Compartilhar</div>\n              </div>\n            </button>\n          </Tooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ShareButton);","import React, { memo } from 'react';\nimport ShareButton from '../ShareButton';\n\nconst ShareSection = memo(({ copiarLink, compartilhar, painelInfo }) => {\n  // Gerar URL customizada para compartilhamento\n  const gerarLinkCustomizado = () => {\n    if (!painelInfo?.titulo) return window.location.href;\n    \n    const criarSlug = (texto) => {\n      return texto\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim();\n    };\n\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  return (\n    <ShareButton \n      onClick={compartilhar}\n      url={gerarLinkCustomizado()}\n      title={painelInfo?.titulo || 'Painel de Escola Indígena'}\n      description={painelInfo?.descricao || 'Confira informações sobre esta escola indígena no Observatório de Professores Indígenas.'}\n    />\n  );\n});\n\nexport default ShareSection; ","import React, { useMemo } from \"react\";\nimport DOMPurify from \"dompurify\";\n\n/**\n * Componente PainelDescricao - Exibe conteúdo formatado com sanitização HTML\n * \n * @param {Object} props - Propriedades do componente\n * @param {string} props.descricao - Texto HTML ou texto puro a ser exibido\n * @param {string} props.className - Classes CSS adicionais (opcional)\n * @returns {React.ReactElement|null} - Componente renderizado ou null\n */\nconst PainelDescricao = ({ descricao, className = \"\" }) => {\n  // Função para formatar o texto com quebras de linha\n  const formatText = (text) => {\n    if (!text) return \"\";\n    \n    // Preserva parágrafos convertendo linhas duplas em tags <p>\n    let formattedText = text.replace(/\\n\\n+/g, \"</p><p>\");\n    \n    // Substitui quebras de linha simples por <br>\n    formattedText = formattedText.replace(/\\n/g, \"<br>\");\n    \n    // Adiciona tags <p> no início e fim se não existirem\n    if (!formattedText.startsWith(\"<p>\")) {\n      formattedText = \"<p>\" + formattedText;\n    }\n    if (!formattedText.endsWith(\"</p>\")) {\n      formattedText = formattedText + \"</p>\";\n    }\n    \n    // Remove espaços extras entre tags HTML\n    formattedText = formattedText.replace(/>\\s+</g, \"><\");\n    \n    return formattedText;\n  };\n\n  // Usa useMemo para evitar sanitização redundante em re-renders\n  const sanitizedHTML = useMemo(() => {\n    if (!descricao) return \"\";\n    \n    return DOMPurify.sanitize(formatText(descricao), {\n      ALLOWED_TAGS: [\n        'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li',\n        'div', 'span', 'img', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n        'center', 'blockquote', 'code', 'pre', 'hr', 'table', 'thead', \n        'tbody', 'tr', 'th', 'td'\n      ],\n      ALLOWED_ATTR: [\n        'href', 'target', 'rel', 'class', 'style', 'src', 'alt',\n        'width', 'height', 'id', 'title', 'aria-label', 'aria-describedby'\n      ],\n      ADD_TAGS: ['center', 'blockquote'],\n      ADD_ATTR: ['target', 'className', 'title'],\n      KEEP_CONTENT: true,\n      ALLOW_DATA_ATTR: false\n    });\n  }, [descricao]);\n\n  if (!descricao) return null;\n\n  return (\n    <div className={`mb-6 ${className}`}>\n      <div\n        className=\"prose prose-lg lg:prose-xl max-w-none px-1\"\n        style={{\n          '--tw-prose-body': '#1f2937',\n          '--tw-prose-headings': '#111827',\n          '--tw-prose-links': '#059669',\n          '--tw-prose-bold': '#111827',\n          '--tw-prose-counters': '#1f2937',\n          '--tw-prose-bullets': '#4b5563',\n          '--tw-prose-hr': '#e5e7eb',\n          '--tw-prose-quotes': '#111827',\n          '--tw-prose-quote-borders': '#10b981',\n          '--tw-prose-captions': '#6b7280',\n          '--tw-prose-code': '#111827',\n          '--tw-prose-pre-code': '#e5e7eb',\n          '--tw-prose-pre-bg': '#1f2937',\n          '--tw-prose-th-borders': '#d1d5db',\n          '--tw-prose-td-borders': '#e5e7eb',\n          lineHeight: '1.8',\n          fontSize: '1.125rem',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n          letterSpacing: '0.015em',\n        }}\n        dangerouslySetInnerHTML={{ __html: sanitizedHTML }}\n        aria-live=\"polite\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PainelDescricao);","import React, { memo } from 'react';\nimport PainelDescricao from '../PainelDescricao';\n\nconst IntroPanel = memo(({ painelInfo }) => (\n  <div className=\"space-y-6\">\n    <div className=\"prose prose-lg lg:prose-xl max-w-none\">\n      <div className=\"bg-green-100 rounded-lg p-6\">\n        <PainelDescricao descricao={painelInfo.descricao_detalhada} />\n      </div>\n    </div>\n    {painelInfo.audioUrl && (\n      <div className=\"mt-6\">\n        <audio controls className=\"w-full\">\n          <source src={painelInfo.audioUrl} type=\"audio/mpeg\" />\n          Seu navegador não suporta o elemento de áudio.\n        </audio>\n      </div>\n    )}\n  </div>\n));\n\nexport default IntroPanel; ","/**\n * Utility functions for text formatting\n */\n\n/**\n * Lista de siglas que devem permanecer em maiúsculas\n */\nconst SIGLAS_MAIUSCULAS = ['EE', 'EEI'];\n\n/**\n * Capitalizes the first letter of each word in a string, keeping specific acronyms in uppercase\n * @param {string} str - The string to capitalize\n * @returns {string} The capitalized string\n */\nexport const capitalizeWords = (str) => {\n  if (!str || typeof str !== 'string') return '';\n  \n  // Primeiro, divide a string em palavras\n  const words = str.split(/\\s+/);\n  \n  // Processa cada palavra\n  const processedWords = words.map(word => {\n    // Verifica se a palavra é uma sigla que deve permanecer em maiúsculas\n    if (SIGLAS_MAIUSCULAS.includes(word.toUpperCase())) {\n      return word.toUpperCase();\n    }\n    \n    // Para outras palavras, aplica a capitalização normal\n    return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n  });\n  \n  // Junta as palavras de volta em uma string\n  return processedWords.join(' ');\n}; \n\n/**\n * Normalizes an address string by capitalizing words and handling common address abbreviations\n * @param {string} address - The address string to normalize\n * @returns {string} The normalized address string\n */\nexport const normalizeAddress = (address) => {\n  if (!address || typeof address !== 'string') return '';\n\n  // Lista de abreviações comuns em endereços\n  const abbreviations = {\n    'r.': 'Rua',\n    'av.': 'Avenida',\n    'al.': 'Alameda',\n    'pr.': 'Praça',\n    'tr.': 'Travessa',\n    'rod.': 'Rodovia',\n    'est.': 'Estrada',\n    'n.': 'Número',\n    'nº': 'Número',\n    'apt.': 'Apartamento',\n    'bl.': 'Bloco',\n    'qd.': 'Quadra',\n    'lt.': 'Lote',\n    'km': 'KM',\n    's/n': 'S/N'\n  };\n\n  // Primeiro, substitui as abreviações\n  let normalized = address.toLowerCase();\n  Object.entries(abbreviations).forEach(([abbr, full]) => {\n    normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'g'), full);\n  });\n\n  // Depois aplica a capitalização de palavras\n  return capitalizeWords(normalized);\n}; ","import React from \"react\";\nimport { X, Maximize2, Minimize2 } from \"lucide-react\";\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\nconst PainelHeader = ({ titulo, closePainel, toggleMaximize, isMaximized }) => {\n  const isMobile = window.innerWidth <= 768;\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const isVerySmallLandscape = isMobileLandscape && window.innerWidth <= 850;\n\n  return (\n    <header className={`relative px-3 sm:px-4 md:px-6 lg:px-8 py-3 sm:py-4 md:py-6 border-b border-green-100 ${isMobileLandscape ? 'min-h-[60px]' : ''}`}>\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between pr-12\">\n        <h2 \n          id=\"painel-titulo\"\n          className={`font-semibold text-gray-900 leading-tight tracking-normal break-words ${\n            isVerySmallLandscape\n              ? 'text-base' // Força fonte menor em paisagem muito estreita\n              : isMobileLandscape \n                ? 'text-lg sm:text-xl' \n                : 'text-xl sm:text-2xl md:text-3xl'\n          }`}\n          style={isVerySmallLandscape ? { fontSize: 'clamp(1rem, 4vw, 1.25rem)' } : {}}\n        >\n          {capitalizeWords(titulo)}\n        </h2>\n      </div>\n\n      <div className=\"absolute top-2 sm:top-4 right-2 sm:right-4 flex items-center gap-2\">\n        {!isMobile && (\n          <button\n            onClick={toggleMaximize}\n            className=\"p-2 text-green-700 hover:text-green-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            aria-label={isMaximized ? \"Restaurar painel\" : \"Maximizar painel\"}\n            title={isMaximized ? \"Restaurar\" : \"Maximizar\"}\n          >\n            {isMaximized ? (\n              <Minimize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            ) : (\n              <Maximize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            )}\n          </button>\n        )}\n\n        <button\n          onClick={closePainel}\n          className={`text-gray-700 hover:text-gray-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 ${\n            isMobileLandscape ? 'p-1.5' : 'p-2'\n          }`}\n          aria-label=\"Fechar painel\"\n        >\n          <X \n            size={isMobileLandscape ? 18 : 20} \n            aria-hidden=\"true\"\n            className=\"stroke-2\"\n          />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default PainelHeader;\n","import { useState, useEffect } from \"react\";\n\nconst usePainelVisibility = (painelInfo) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  console.log(\"usePainelVisibility - painelInfo:\", painelInfo);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileWidth = window.innerWidth <= 768;\n      const isMobileLandscape = window.innerWidth > window.innerHeight && window.innerWidth <= 1024;\n      setIsMobile(isMobileWidth || isMobileLandscape);\n    };\n    \n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    window.addEventListener(\"orientationchange\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n      window.removeEventListener(\"orientationchange\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.group(\"usePainelVisibility - Effect\");\n    console.log(\"painelInfo recebido:\", painelInfo);\n    \n    if (painelInfo && typeof painelInfo === 'object') {\n      console.log(\"painelInfo válido, definindo visibilidade como true\");\n      setIsVisible(true);\n      document.body.style.overflow = \"hidden\";\n    } else {\n      console.log(\"painelInfo inválido ou undefined, definindo visibilidade como false\");\n      setIsVisible(false);\n      document.body.style.overflow = \"\";\n    }\n\n    console.log(\"Estado atual:\", { isVisible, isMobile });\n    console.groupEnd();\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [painelInfo]);\n\n  console.log(\"usePainelVisibility - returning state:\", { isVisible, isMobile });\n\n  return { isVisible, isMobile };\n};\n\nexport default usePainelVisibility;","import React from 'react';\nimport PainelHeader from '../../PainelHeader';\nimport usePainelVisibility from '../../hooks/usePainelVisibility';\nimport { usePainelDimensions } from '../../hooks/usePainelDimensions';\n\nconst PainelContainer = ({ \n  painelInfo, \n  closePainel, \n  children,\n  isMaximized,\n  onToggleMaximize\n}) => {\n  const { isVisible, isMobile } = usePainelVisibility(painelInfo);\n  const painelDimensions = usePainelDimensions(isMobile, isMaximized);\n\n  if (!painelInfo) return null;\n\n  // Determinar altura da navbar baseada no tamanho da tela\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n\n  const baseClasses = `\n    fixed\n    ${isMobile \n      ? `inset-x-0 top-0 w-full h-full` \n      : 'top-30 bottom-0 right-0 w-full sm:w-3/4 lg:w-[49%] h-auto'\n    }\n    rounded-t-xl shadow-xl z-[9999] transform transition-all duration-500 ease-in-out\n    bg-white border-t-4 border-white\n  `;\n  \n  const visibilityClasses = isVisible \n    ? isMobile \n      ? \"translate-y-0 opacity-100\" \n      : \"translate-y-0 opacity-100\"\n    : isMobile \n      ? \"translate-y-full opacity-0\" \n      : \"translate-y-full opacity-0\";\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-labelledby=\"painel-titulo\"\n      aria-describedby=\"painel-descricao\"\n      aria-modal=\"true\"\n      className={`${baseClasses} ${visibilityClasses}${isMobile ? ' painel-informacoes-mobile' : ''}`}\n      style={{\n        height: painelDimensions.height,\n        maxHeight: painelDimensions.maxHeight,\n        width: isMobile ? '100%' : painelDimensions.width,\n        top: isMobile ? `${navbarHeight}px` : 72,\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...(isMobile && {\n          borderRadius: painelDimensions.isMobileLandscape ? '0' : '1rem 1rem 0 0',\n          boxShadow: painelDimensions.isMobileLandscape \n            ? '0 0 0 0' \n            : '0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06)'\n        })\n      }}\n    >\n      <PainelHeader \n        titulo={painelInfo.titulo} \n        closePainel={closePainel}\n        toggleMaximize={onToggleMaximize}\n        isMaximized={isMaximized}\n      />\n      \n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-green-600/40 scrollbar-track-green-50/20\">\n        <div className={`${isMobile ? 'p-3 sm:p-4' : 'p-6'} space-y-6 sm:space-y-8`}>\n          <div className=\"prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PainelContainer); ","import { useState, useEffect, useMemo } from 'react';\n\nexport const usePainelDimensions = (isMobile, isMaximized) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  \n  // Breakpoints para responsividade\n  const breakpoints = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    '2xl': 1536\n  };\n\n  // Detectar mudanças no tamanho da janela\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular dimensões base\n  const dimensions = useMemo(() => {\n    // Determinar altura da navbar baseada na orientação\n    const isMobileLandscape = isMobile && windowWidth > windowHeight;\n    const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n    const baseHeight = `calc(100vh - ${navbarHeight}px)`;\n    const baseMaxHeight = isMobile ? \"96vh\" : \"92vh\";\n\n    // Determinar se está em modo desktop\n    const isDesktop = windowWidth >= breakpoints.md;\n    \n    // Determinar se deve usar grid\n    const shouldUseGrid = isDesktop && isMaximized;\n\n    // Calcular largura do painel\n    let panelWidth;\n    if (isMobile) {\n      if (isMobileLandscape) {\n        // Mobile na horizontal: preencher toda a tela\n        panelWidth = '100%';\n      } else {\n        // Mobile na vertical: preencher toda a largura\n        panelWidth = '100%';\n      }\n    } else {\n      // Desktop\n      panelWidth = isMaximized \n      ? '100%' \n      : windowWidth >= breakpoints.lg \n        ? '49%' \n        : '75%';\n    }\n\n    return {\n      height: baseHeight,\n      maxHeight: baseMaxHeight,\n      width: panelWidth,\n      isDesktop,\n      isMobileLandscape,\n      shouldUseGrid,\n      breakpoints,\n      zIndex: 1000\n    };\n  }, [isMobile, isMaximized, windowWidth, windowHeight]);\n\n  return dimensions;\n};","import React, { useRef, useState, useEffect } from 'react';\n\n/**\n * DocumentViewer\n * Componente para exibir uma lista de documentos (PDFs) associados a uma escola.\n * Permite visualização via iframe (Google Drive/Docs) ou download externo, com tratamento de erros e fallback amigável.\n * Props:\n *   - documentos: Array de objetos { id, titulo, autoria, tipo, link_pdf }\n *   - title: string (opcional)\n */\n\n// Utility function to transform Google Drive links\nconst transformarLinkGoogleDrive = (link) => {\n  if (!link || typeof link !== 'string') return null;\n  \n  const match = link.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\n  if (!match) return null;\n  \n  const fileId = match[1];\n  return `https://docs.google.com/gview?url=https://drive.google.com/uc?id=${fileId}&embedded=true`;\n};\n\n/**\n * Componente de troca de visualização (lista/grade) acessível e reutilizável\n */\nconst ViewModeToggle = ({ viewMode, setViewMode }) => (\n  <div className=\"flex items-center gap-2\" role=\"tablist\" aria-label=\"Modos de visualização dos documentos\">\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'list'}\n      aria-label=\"Visualizar em lista\"\n      aria-pressed={viewMode === 'list'}\n      onClick={() => setViewMode('list')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'list'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de lista */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Lista</span>\n    </button>\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'grid'}\n      aria-label=\"Visualizar em grade\"\n      aria-pressed={viewMode === 'grid'}\n      onClick={() => setViewMode('grid')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'grid'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de grade */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Grade</span>\n    </button>\n  </div>\n);\n\nconst DocumentViewer = ({ documentos, title = \"Documentos\" }) => {\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [viewMode, setViewMode] = useState('list'); // 'list' ou 'grid'\n  const iframeRef = useRef(null);\n  const [iframeError, setIframeError] = useState(false);\n  const [useGoogleDocsViewer, setUseGoogleDocsViewer] = useState(false);\n\n  // Reset states when selected document changes\n  useEffect(() => {\n    if (selectedDoc) {\n      setIframeError(false);\n      setUseGoogleDocsViewer(false);\n    }\n  }, [selectedDoc]);\n\n  // Set first document as selected if none is selected\n  useEffect(() => {\n    if (!selectedDoc && documentos?.length > 0) {\n      setSelectedDoc(documentos[0]);\n    }\n  }, [documentos, selectedDoc]);\n\n  // Handle iframe events\n  useEffect(() => {\n    const iframe = iframeRef.current;\n    if (!iframe || !selectedDoc) return;\n\n    const handleLoad = () => {\n      setIframeError(false);\n    };\n\n    const handleError = () => {\n      setIframeError(true);\n      setUseGoogleDocsViewer(true);\n    };\n\n    iframe.addEventListener('load', handleLoad);\n    iframe.addEventListener('error', handleError);\n\n    return () => {\n      iframe.removeEventListener('load', handleLoad);\n      iframe.removeEventListener('error', handleError);\n    };\n  }, [selectedDoc]);\n\n  // Early return after all hooks\n  if (!documentos || documentos.length === 0) {\n    return null;\n  }\n\n  const renderDocumentGrid = () => {\n    return (\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n        {documentos.map((doc) => (\n          <div\n            key={doc.id}\n            className={`\n              flex flex-col justify-between h-full max-w-xs mx-auto\n              rounded-2xl transition-all duration-200 cursor-pointer\n              shadow-sm hover:shadow-lg\n              ${selectedDoc?.id === doc.id\n                ? 'bg-green-100 scale-[1.03]'\n                : 'bg-white hover:bg-green-50'\n              }\n            `}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            tabIndex={0}\n            aria-label={`Selecionar documento: ${doc.titulo}`}\n          >\n            <div className=\"p-5 flex-1 flex flex-col justify-between\">\n              <h4 className=\"font-semibold text-green-800 mb-2 line-clamp-2 text-lg\">{doc.titulo}</h4>\n              {doc.autoria && (\n                <p className=\"text-sm text-gray-600 mb-2 line-clamp-1\">Por: {doc.autoria}</p>\n              )}\n              {doc.tipo && (\n                <span className=\"inline-block px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                  {doc.tipo}\n                </span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentList = () => {\n    return (\n      <div className=\"space-y-2\">\n        {documentos.map((doc) => (\n          <button\n            key={doc.id}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            className={`w-full text-left p-3 rounded-lg transition-colors duration-200 ${\n              selectedDoc?.id === doc.id\n                ? 'bg-green-100'\n                : 'hover:bg-green-50'\n            }`}\n          >\n            <h4 className=\"font-medium text-green-800\">{doc.titulo}</h4>\n            {doc.autoria && (\n              <p className=\"text-sm text-gray-600\">Por: {doc.autoria}</p>\n            )}\n            {doc.tipo && (\n              <span className=\"inline-block mt-1 px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                {doc.tipo}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentViewer = () => {\n    if (!selectedDoc) return null;\n\n    const isGoogleDriveLink = selectedDoc.link_pdf.includes('drive.google.com/file/d/');\n\n    return (\n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        {isGoogleDriveLink ? (\n          <>\n            {!useGoogleDocsViewer ? (\n              <iframe \n                ref={iframeRef}\n                src={selectedDoc.link_pdf.replace('/view?usp=sharing', '/preview')}\n                width=\"100%\" \n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={selectedDoc.titulo}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            ) : (\n              <iframe\n                ref={iframeRef}\n                src={transformarLinkGoogleDrive(selectedDoc.link_pdf)}\n                width=\"100%\"\n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={`${selectedDoc.titulo} (Google Docs Viewer)`}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            )}\n            {iframeError && (\n              <div className=\"p-6 text-center text-gray-600 bg-green-100\">\n                <p className=\"mb-3 text-lg\">Não foi possível carregar o documento diretamente.</p>\n                <a\n                  href={selectedDoc.link_pdf}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n                >\n                  <svg \n                    className=\"w-5 h-5 mr-2\" \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path \n                      strokeLinecap=\"round\" \n                      strokeLinejoin=\"round\" \n                      strokeWidth={2} \n                      d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n                    />\n                  </svg>\n                  Abrir em nova aba\n                </a>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"flex justify-center p-6\">\n            <a\n              href={selectedDoc.link_pdf}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center px-6 py-3 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n            >\n              <svg \n                className=\"w-5 h-5 mr-2\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" \n                />\n              </svg>\n              Ver documento PDF\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold text-green-800\">{title}:</h3>\n        {documentos.length > 1 && (\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        )}\n      </div>\n      \n      {documentos.length > 1 && (\n        <div className=\"mb-6\">\n          {viewMode === 'grid' ? renderDocumentGrid() : renderDocumentList()}\n        </div>\n      )}\n      \n      {renderDocumentViewer()}\n    </div>\n  );\n};\n\nexport default React.memo(DocumentViewer); ","import React, { useState, useEffect } from 'react';\nimport { getTituloByVideoUrl } from '../../../services/legendasService';\n\n/**\n * VideoPlayer\n * Componente para exibir vídeos do YouTube de forma responsiva e acessível.\n * Faz extração do ID do vídeo a partir de diferentes formatos de URL e exibe fallback amigável em caso de erro.\n * Props:\n *   - videoUrl: string (URL do vídeo)\n *   - title: string (opcional)\n *   - escolaId: number (ID da escola para buscar título personalizado)\n */\n\n// Utility function to extract YouTube video ID\nconst extrairIdYoutube = (url) => {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  // Remove query parameters to simplify\n  const baseUrl = url.split('?')[0];\n\n  // Patterns to extract video ID\n  const patterns = [\n    /youtube\\.com\\/embed\\/([^/?&]+)/,                 // embed/ID\n    /youtube\\.com\\/watch\\?v=([^&]+)/,                 // watch?v=ID\n    /youtu\\.be\\/([^?&]+)/,                            // youtu.be/ID\n    /youtube\\.com\\/v\\/([^?&]+)/                       // youtube.com/v/ID\n  ];\n\n  for (const pattern of patterns) {\n    const match = baseUrl.match(pattern);\n    if (match && match[1]) {\n      return match[1];\n    }\n  }\n\n  return null;\n};\n\nconst VideoPlayer = ({ videoUrl, title = \"Vídeo\", escolaId }) => {\n  const [tituloPersonalizado, setTituloPersonalizado] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Buscar título personalizado da nova tabela\n  useEffect(() => {\n    const buscarTitulo = async () => {\n      if (!videoUrl || !escolaId) return;\n\n      try {\n        setLoading(true);\n        const titulo = await getTituloByVideoUrl(videoUrl, escolaId);\n        setTituloPersonalizado(titulo);\n      } catch (error) {\n        console.warn('Erro ao buscar título personalizado:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarTitulo();\n  }, [videoUrl, escolaId]);\n\n  if (!videoUrl) return null;\n\n  const videoId = extrairIdYoutube(videoUrl);\n  \n  if (!videoId) {\n    return (\n      <div className=\"mt-8 max-w-4xl mx-auto\">\n        <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n          {tituloPersonalizado?.titulo || title}:\n        </h3>\n        <div className=\"p-6 text-center text-gray-600 bg-gray-50 rounded-lg\">\n          <p className=\"mb-3 text-lg\">Link do vídeo inválido ou não suportado.</p>\n          <a\n            href={videoUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n          >\n            <svg \n              className=\"w-5 h-5 mr-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" \n              />\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \n              />\n            </svg>\n            Tentar abrir no YouTube\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n        {tituloPersonalizado?.titulo || title}:\n      </h3>\n      \n      {/* Informações adicionais do título personalizado */}\n      {tituloPersonalizado && (\n        <div className=\"mb-4 p-4 bg-green-100 rounded-lg\">\n          {tituloPersonalizado.descricao && (\n            <p className=\"text-gray-700 mb-2\">{tituloPersonalizado.descricao}</p>\n          )}\n          \n          <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n            {tituloPersonalizado.categoria && (\n              <span className=\"capitalize bg-green-200 text-green-800 px-2 py-1 rounded\">\n                {tituloPersonalizado.categoria}\n              </span>\n            )}\n            {tituloPersonalizado.plataforma && (\n              <span className=\"capitalize\">\n                {tituloPersonalizado.plataforma}\n              </span>\n            )}\n            {tituloPersonalizado.duracao && (\n              <span>Duração: {tituloPersonalizado.duracao}</span>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        <div className=\"relative pb-[56.25%] h-0\">\n          <iframe\n            className=\"absolute top-0 left-0 w-full h-full\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            title={tituloPersonalizado?.titulo || title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            loading=\"lazy\"\n            referrerPolicy=\"origin\"\n          />\n        </div>\n      </div>\n      \n      <div className=\"mt-4 text-center\">\n        <a\n          href={videoUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center text-green-700 hover:text-green-800 hover:underline\"\n        >\n          <svg \n            className=\"w-5 h-5 mr-2\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n            />\n          </svg>\n          Ver vídeo no YouTube\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(VideoPlayer); ","import React, { useRef, useState, useEffect } from \"react\";\nimport { useShare } from \"../hooks/useShare\";\nimport { useDynamicURL } from \"../hooks/useDynamicURL\";\nimport { useClickOutside } from \"../hooks/useClickOutside\";\nimport useAudio from \"../hooks/useAudio\";\nimport useDocumentosEscola from \"../hooks/useDocumentosEscola\";\n\n// Import modular components\nimport EscolaInfo from \"./components/EscolaInfo\";\nimport TerraIndigenaInfo from \"./TerraIndigenaInfo\";\nimport ShareSection from \"./ShareSection\";\nimport IntroPanel from \"./IntroPanel\";\nimport PainelContainer from \"./components/PainelContainer\";\nimport DocumentViewer from \"./components/DocumentViewer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst PainelInformacoes = ({ painelInfo, closePainel, escola_id, refreshKey = 0 }) => {\n  const painelRef = useRef(null);\n  const [isMaximized, setIsMaximized] = useState(false);\n  \n  const { gerarLinkCustomizado, copiarLink, compartilhar } = useShare(painelInfo);\n  const { documentos } = useDocumentosEscola(painelInfo?.id);\n  \n  const toggleMaximize = () => setIsMaximized(prev => !prev);\n  \n  useDynamicURL(painelInfo, gerarLinkCustomizado);\n  useClickOutside(painelRef, closePainel);\n\n  // Forçar re-renderização quando refreshKey mudar\n  useEffect(() => {\n    console.log('PainelInformacoes: refreshKey mudou para', refreshKey);\n  }, [refreshKey]);\n\n  if (!painelInfo) {\n    return null;\n  }\n\n  // Determine panel type\n  const isTerraIndigena = painelInfo.tipo === 'terra_indigena';\n  const isIntro = painelInfo.titulo === 'Sobre o site';\n\n  const renderContent = () => {\n    if (isIntro) {\n      return <IntroPanel painelInfo={painelInfo} />;\n    }\n    \n    if (isTerraIndigena) {\n      return <TerraIndigenaInfo terraIndigena={painelInfo} />;\n    }\n\n    return (\n      <>\n        <EscolaInfo \n          escola={painelInfo} \n          shouldUseGrid={true}\n          refreshKey={refreshKey}\n        />\n        {documentos && documentos.length > 0 && (\n          <DocumentViewer \n            documentos={documentos}\n            title=\"Produções e materiais da escola\"\n          />\n        )}\n        {painelInfo.link_para_videos && (\n          <VideoPlayer \n            videoUrl={painelInfo.link_para_videos}\n            title=\"Vídeo da escola\"\n            escolaId={painelInfo.id}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div ref={painelRef}>\n      <PainelContainer\n        painelInfo={painelInfo}\n        closePainel={closePainel}\n        isMaximized={isMaximized}\n        onToggleMaximize={toggleMaximize}\n      >\n        {renderContent()}\n        <ShareSection \n          copiarLink={copiarLink} \n          compartilhar={compartilhar} \n          painelInfo={painelInfo}\n        />\n      </PainelContainer>\n    </div>\n  );\n};\n\nexport default React.memo(PainelInformacoes); ","import { criarSlug } from '../../utils/slug';\n\nexport const useShare = (painelInfo) => {\n  const gerarLinkCustomizado = () => {\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  const copiarLink = async () => {\n    const url = gerarLinkCustomizado();\n    try {\n      await navigator.clipboard.writeText(url);\n      alert(\"Link copiado!\");\n    } catch (err) {\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      alert(\"Link copiado!\");\n    }\n  };\n\n  const compartilhar = () => {\n    const url = gerarLinkCustomizado();\n    const texto = `Confira este painel: ${painelInfo.titulo}`;\n    \n    if (navigator.share) {\n      navigator.share({\n        title: painelInfo.titulo,\n        text: texto,\n        url: url,\n      });\n    } else {\n      window.open(\n        `https://twitter.com/intent/tweet?text=${encodeURIComponent(texto)}&url=${encodeURIComponent(url)}`,\n        \"_blank\"\n      );\n    }\n  };\n\n  return { gerarLinkCustomizado, copiarLink, compartilhar };\n};","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Só fecha se o clique for no mapa (openlayers-container)\n      const el = event.target;\n      if (el.classList && el.classList.contains('openlayers-container')) {\n        return;\n      }\n      \n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};","import { useEffect, useRef } from \"react\";\n\nexport const useDynamicURL = (painelInfo, gerarLinkCustomizado) => {\n  const lastUrlRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!painelInfo) return;\n\n    // Limpa o timeout anterior se existir\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Cria um novo timeout para debounce\n    timeoutRef.current = setTimeout(() => {\n      const newUrl = gerarLinkCustomizado();\n      \n      // Só atualiza se a URL realmente mudou\n      if (newUrl !== lastUrlRef.current) {\n        try {\n          window.history.replaceState({}, \"\", newUrl);\n          lastUrlRef.current = newUrl;\n        } catch (error) {\n          console.warn('Erro ao atualizar URL:', error);\n        }\n      }\n    }, 300); // 300ms de debounce\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [painelInfo, gerarLinkCustomizado]);\n};","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].Latitude,\n      longitude: dataPoints[0].Longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  const [initialPanelOpened, setInitialPanelOpened] = useState(!!initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Abrir painel automaticamente quando initialPanel for encontrado (apenas uma vez)\n  useEffect(() => {\n    if (initialPanel && !painelInfo && !initialPanelOpened) {\n      console.log('MapaEscolasIndigenas: Abrindo painel automaticamente para:', initialPanel.titulo);\n      setPainelInfo(initialPanel);\n      setInitialPanelOpened(true);\n    }\n  }, [initialPanel, painelInfo, initialPanelOpened]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        painelAberto={!!painelInfo}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;"],"names":["addLegendaFoto","async","console","log","legenda","legendaData","_objectSpread","data","testData","error","testError","supabase","from","select","limit","code","warn","tipo_foto","columnError","insert","single","updateLegendaFoto","id","updates","update","eq","getLegendaByImageUrl","imagemUrl","escolaId","tipoFoto","arguments","length","undefined","query","caminhoRelativo","split","slice","join","query2","ilike","concat","data2","error2","getTituloByVideoUrl","videoUrl","testLegendasTable","tableData","tableError","structureData","structureError","tipoData","tipoError","testRecord","escola_id","imagem_url","descricao_detalhada","autor_foto","data_foto","categoria","ativo","created_at","Date","toISOString","updated_at","insertData","insertError","deleteError","delete","MARKER_SVG_PATH","process","createMarkerStyle","feature","showNames","markerData","get","isNearbyPair","markerStyle","Style","image","Icon","src","scale","anchor","anchorXUnits","anchorYUnits","geometry","getGeometry","titulo","text","Text","font","fill","Fill","color","stroke","Stroke","width","offsetY","textAlign","OpenLayersInteractions","constructor","map","options","this","enableHover","enableClick","enableDoubleClick","enableTouch","hoverDelay","clickDelay","eventHandlers","Map","hoveredFeature","clickedFeature","clickTimeout","hoverTimeout","tooltipElement","initializeInteractions","isMobile","window","innerWidth","setupHoverInteraction","setupClickInteraction","setupDoubleClickInteraction","setupTouchInteraction","on","event","handlePointerMove","handlePointerLeave","handleClick","handleDoubleClick","forEachFeatureAtPixel","pixel","type","schoolData","terraIndigenaInfo","clearHover","applyHover","handleMobileClick","clearTimeout","setTimeout","executeClickHandler","executeDoubleClickHandler","handleTouchEnd","forceHideTooltip","showTooltip","executeHoverHandler","applyHoverStyle","clearHoverStyle","hideTooltip","executeHoverOutHandler","hoverStyleFunction","tooltipContent","getTooltipContent","createTooltipElement","getTargetElement","appendChild","remove","content","element","document","createElement","className","innerHTML","tooltipStyles","includes","backgroundColor","Object","assign","style","position","padding","borderRadius","fontSize","fontFamily","fontWeight","pointerEvents","zIndex","maxWidth","whiteSpace","overflow","textOverflow","boxShadow","coordinate","getPixelFromCoordinate","left","top","tooltipContentFunction","handler","eventType","set","off","clearHandlers","clear","updateOptions","newOptions","destroy","createDefaultInteractions","MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","clusterMinDistance","clusterAnimationDuration","proximityThreshold","disableClusteringAtZoom","tooltipOffset","tooltipDelay","interaction","performance","enableLazyLoading","maxFeaturesPerTile","enableFeatureCulling","enableTileCaching","ANIMATION_CONFIG","duration","marker","cluster","pan","easing","MARKER_COLORS","small","medium","large","xlarge","CLUSTER_SIZES","min","max","size","PROJECTION_CONFIG","BASE_LAYER_CONFIG","url","attributions","wrapX","tilePixelRatio","tileSize","_ref","dataPoints","onPainelOpen","showMarcadores","showNomesEscolas","vectorSourceRef","useRef","vectorLayerRef","hoveredMarker","setHoveredMarker","React","selectedMarker","setSelectedMarker","isMobileDevice","useMemo","initializeMarkers","useCallback","current","VectorSource","VectorLayer","source","addLayer","setupInteractions","interactions","onMarkerClick","onMarkerHover","createMarkerInteractions","handleMarkerClick","handleMarkerHover","handleMarkerHoverOut","setStyle","f","baseStyle","hoverStyle","Array","isArray","changed","updateMarkers","pontosValidos","filter","point","latitude","longitude","lat","parseFloat","lng","isNaN","forEach","index","Feature","Point","fromLonLat","municipio","Municipio","uf","UF","addFeature","updateMarkerStyles","useEffect","removeLayer","_jsx","LAYER_COLORS","terrasIndigenas","regularizada","hover","declarada","estadoSP","createTerrasIndigenasStyle","isHovered","properties","colorConfig","fase_ti","colors","lineDash","showTerrasIndigenas","interactionsRef","setHoveredFeature","selectedFeature","setSelectedFeature","features","setFeatures","initializeLayer","geoJSONFeatures","GeoJSON","dataProjection","featureProjection","readFeatures","getProperties","terrai_nom","tipo","etnia","etnia_nome","municipio_","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","onFeatureClick","onFeatureHover","createGeoJSONInteractions","handleFeatureClick","handleFeatureHover","handleFeatureHoverOut","extent","getExtent","getView","fit","applySelectionStyleToFeature","selectionOptions","fillColor","strokeColor","strokeWidth","selectionStyle","applySelectionStyle","removeSelectionStyleFromFeature","timeout","showEstadoSP","createEstadoSPStyle","interactive","terrasIndigenasData","estadoSPData","terrasIndigenasRef","estadoSPRef","layersStatus","setLayersStatus","visible","loaded","hasValidData","updateLayerStatus","layerName","prev","handleLayerError","message","handleLayerSuccess","getLayersStats","stats","total","errors","values","layer","getLayersInfo","hasData","featureCount","info","_jsxs","children","OpenLayersTerrasIndigenas","ref","onLoad","onError","OpenLayersEstadoSP","props","proj4","defs","register","mapContainer","baseLayer","mapInfo","setMapInfo","useState","initialCenter","initialZoom","createBaseLayers","satelliteLayer","TileLayer","XYZ","preload","useInterimTilesOnError","initializeMap","target","layers","view","View","enableRotation","controls","defaultControls","defaultInteractions","dragRotate","pinchRotate","toLonLat","getCenter","newView","toFixed","getZoom","updateMapConfig","newCenter","newZoom","currentCenter","currentZoom","setCenter","setZoom","setTarget","MapWrapper","_Fragment","OpenLayersMarkers","OpenLayersLayers","cache","useGeoJSONCache","key","setData","loading","setLoading","setError","_geoJSON$features","_geoJSON$features2","response","fetch","ok","Error","status","geoJSON","json","crs","firstFeature","keys","coordinates","err","fetchGeoJSON","painelAberto","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","addEventListener","removeEventListener","handleMinimize","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","shouldReactivate","CabecalhoMenu","_ref2","onMinimize","viewBox","strokeLinecap","strokeLinejoin","d","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","subItems","item","cx","cy","r","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","criarSlug","texto","toLowerCase","normalize","replace","trim","documentos","setDocumentos","isLoading","setIsLoading","authData","authError","auth","getSession","temSessao","session","rlsData","rlsError","podeAcessar","details","hint","allDocs","allDocsError","doc","tipo_escola_id","valor_escola_id","toString","order","ascending","dataAsNumber","errorAsNumber","Number","dataAsString","errorAsString","String","count","fetchDocumentos","InfoGrid","memo","columns","gap","InfoTable","row","value","InfoStats","_ref4","stat","icon","_ref5","title","description","defaultCollapsed","layout","layoutProps","isCollapsed","setIsCollapsed","role","renderContent","capitalize","str","charAt","toUpperCase","CompactCard","Check","X","InfoBlock","AddressDetails","escola","logradouro","numero","bairro","cep","endereco","field","MapPin","estado","Boolean","MapButton","Latitude","Longitude","openMap","open","Navigation","SocialLinks","_ref6","links","expanded","onToggle","socialLinks","social","Globe","ChevronRight","link","href","rel","LinkIcon","ExternalLink","_ref7","setExpanded","toggle","basicInfoCards","Building","Calendar","ano_criacao","usa_redes_sociais","povos_indigenas","InfoSection","diretoria_ensino","links_redes_sociais","ImagensdasEscolas","refreshKey","imagens","setImagens","imagemZoom","setImagemZoom","cacheRef","cacheVersion","setCacheVersion","limparCacheERecarregar","fecharZoom","body","handleEsc","e","cacheKey","files","storage","list","imagensEncontradas","Promise","all","file","_legenda","_legenda2","_legenda3","_legenda4","_legenda5","filePath","name","publicUrl","getPublicUrl","publicURL","descricao","descricaoDetalhada","autor","dataFoto","urlError","buscarImagens","RefreshCw","img","alt","maxHeight","toLocaleDateString","stopPropagation","historia_da_escola","marginTop","ExpandableList","items","maxVisible","idx","minWidth","display","MiniCard","turnosValue","turnos_funcionamento","modalidadeList","modalidade_ensino","Sparkles","gridItems","Clock","Users","numero_alunos","MessageCircle","linguas_faladas","materiaisItems","BookOpen","BooleanValue","material_nao_indigena","material_indigena","Droplet","acesso_agua","Trash2","coleta_lixo","Wifi","acesso_internet","Monitor","equipamentos","modo_acesso","Utensils","cozinha","Apple","merenda_escolar","ChefHat","diferenciada","Home","espaco_escolar","renderBooleanStatus","valor","normalizado","formacao","resto","formatarFormacaoProfessores","formacao_professores","continuada","formatarFormacaoContinuada","formacao_continuada","UsersRound","UserCheck","professores_indigenas","UserMinus","professores_nao_indigenas","professores_falam_lingua","Star","User","gestao","outros_funcionarios","NotebookPen","ProjectCard","isNegative","availableProjects","GraduationCap","Heart","Target","project","ImagemHistoriadoProfessor","then","imagensComUrl","genero","startsWith","nome","catch","HISTORIA_PROFESSOR_CONFIG","BUCKET_NAME","MAX_FILE_SIZE","ALLOWED_TYPES","MAX_IMAGES_PER_HISTORIA","MIN_DIMENSIONS","height","historias","setHistorias","currentHistoriaIndex","setCurrentHistoriaIndex","historia","imagem_public_url","getHistoriasProfessor","carregarHistorias","nextHistoria","prevHistoria","handleKeyDown","currentHistoria","hasMultipleHistorias","margin","border","outline","nome_professor","descricao_imagem","ChevronLeft","_","GridLayoutWrapper","shouldUseGrid","containerClasses","gridSections","Component","BasicInfo","Modalidades","Infraestrutura","GestaoProfessores","ProjetosParcerias","HistoriaEscola","HistoriadoProfessor","_objectWithoutProperties","_excluded","xmlns","isTextArea","baseClasses","LargeHandFistIcon","HandFistIcon","terraIndigena","InfoItem","Tooltip","isVisible","setIsVisible","onMouseEnter","onMouseLeave","onFocus","onBlur","bottom","ShareButton","copied","setCopied","shareTextOptions","shareText","Math","floor","random","shareUrl","location","navigator","clipboard","writeText","input","execCommand","removeChild","WhatsappShareButton","WhatsappIcon","round","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","LinkedinShareButton","summary","LinkedinIcon","share","copiarLink","compartilhar","painelInfo","gerarLinkCustomizado","origin","pathname","PainelDescricao","sanitizedHTML","DOMPurify","sanitize","formattedText","endsWith","formatText","ALLOWED_TAGS","ALLOWED_ATTR","ADD_TAGS","ADD_ATTR","KEEP_CONTENT","ALLOW_DATA_ATTR","lineHeight","letterSpacing","dangerouslySetInnerHTML","__html","audioUrl","SIGLAS_MAIUSCULAS","capitalizeWords","word","substr","closePainel","toggleMaximize","isMaximized","isMobileLandscape","innerHeight","isVerySmallLandscape","Minimize2","Maximize2","isMobileWidth","group","groupEnd","PainelContainer","onToggleMaximize","usePainelVisibility","painelDimensions","usePainelDimensions","windowWidth","setWindowWidth","windowHeight","setWindowHeight","breakpoints","sm","md","lg","xl","handleResize","dimensions","baseHeight","isDesktop","panelWidth","navbarHeight","visibilityClasses","flexDirection","PainelHeader","transformarLinkGoogleDrive","match","fileId","ViewModeToggle","viewMode","setViewMode","tabIndex","DocumentViewer","selectedDoc","setSelectedDoc","iframeRef","iframeError","setIframeError","useGoogleDocsViewer","setUseGoogleDocsViewer","iframe","handleLoad","handleError","autoria","renderDocumentViewer","isGoogleDriveLink","link_pdf","allow","sandbox","VideoPlayer","tituloPersonalizado","setTituloPersonalizado","buscarTitulo","videoId","baseUrl","patterns","pattern","extrairIdYoutube","plataforma","duracao","frameBorder","allowFullScreen","referrerPolicy","PainelInformacoes","painelRef","setIsMaximized","alert","encodeURIComponent","useShare","useDocumentosEscola","useClickOutside","useDynamicURL","lastUrlRef","timeoutRef","newUrl","history","replaceState","listener","el","classList","contains","isTerraIndigena","isIntro","IntroPanel","TerraIndigenaInfo","EscolaInfo","link_para_videos","ShareSection","quantidade","exemplo","useRefresh","panel","URLSearchParams","search","initialPanel","find","setPainelInfo","initialPanelOpened","setInitialPanelOpened","escolasVisiveis","pontuacao","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","abrirPainel","refreshPainel","fecharPainel","MapSelector"],"sourceRoot":""}
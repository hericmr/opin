{"version":3,"file":"static/js/151.ce6ccc5f.chunk.js","mappings":"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","sources":["utils/mapConfig.js","components/map/MapWrapper.jsx","utils/markers/featureStyles.js","utils/markers/svgGenerator.js","utils/markers/markerStyles.js","components/OpenLayersMap.js","utils/markers/proximityUtils.js","hooks/useGeoJSONCache.js","components/MapSelector.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React from 'react';\n\nconst MapWrapper = React.forwardRef((props, ref) => {\n  return <div id=\"map\" className=\"w-full h-full\" ref={ref} {...props} />;\n});\n\nexport default MapWrapper; ","import { Style, Fill, Stroke } from 'ol/style';\n\n/**\n * Função de estilo para features de Terras Indígenas.\n * @param {ol.Feature} feature - Feature do OpenLayers.\n * @returns {ol.style.Style} Objeto de estilo do OpenLayers para a feature.\n */\nexport function terrasIndigenasStyle(feature) {\n  const properties = feature.getProperties();\n  const isRegularizada = properties.fase_ti === 'Regularizada';\n\n  return new Style({\n    fill: new Fill({\n      color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n    }),\n    stroke: new Stroke({\n      color: '#B22222',\n      width: 2,\n      lineDash: [3, 3]\n    })\n  });\n}\n\n/**\n * Função de estilo para features do Estado de SP.\n * @returns {ol.style.Style} Objeto de estilo do OpenLayers para a feature.\n */\nexport function estadoSPStyle() {\n  return new Style({\n    fill: new Fill({\n      color: 'rgba(0, 0, 0, 0.3)'\n    }),\n    stroke: new Stroke({\n      color: '#000000',\n      width: 2\n    })\n  });\n} ","/**\n * Gera SVG de marcador customizado para o mapa.\n * @param {string} color - Cor base do marcador.\n * @param {number} [size=24] - Tamanho do marcador.\n * @param {Object} options - Opções de customização.\n * @returns {string} SVG como string.\n */\nexport function createMarkerSVG(color, size = 24, options = {}) {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n}\n\n/**\n * Função para criar SVG de cluster\n * @param {string} color - Cor do cluster\n * @param {number} size - Tamanho do cluster\n * @param {number} count - Número de itens no cluster\n * @returns {string} SVG como string\n */\nexport const createClusterSVG = (color, size, count) => {\n  return createMarkerSVG(color, size, {\n    showShadow: true,\n    showGradient: true,\n    showGlow: count > 20,\n    isNearbyPair: false\n  });\n}; ","/**\n * Cria o estilo de marcador individual para o OpenLayers.\n * @param {ol.Feature} feature - Feature do marcador.\n * @param {boolean} showNomesEscolas - Se deve mostrar o nome da escola.\n * @returns {ol.style.Style|null} Estilo do marcador ou null.\n */\nimport { Style, Icon, Text, Fill, Stroke } from 'ol/style';\nimport { createMarkerSVG } from './svgGenerator';\n\nexport function createMarkerStyle(feature, showNomesEscolas = false) {\n  try {\n    const schoolData = feature.get('schoolData');\n    if (!schoolData) return null;\n\n    const baseColor = '#3B82F6';\n    const borderColor = '#1E40AF';\n    const isNearbyPair = feature.get('isNearbyPair');\n\n    // Gerar SVG dinamicamente\n    const svg = createMarkerSVG(baseColor, 24, {\n      borderColor: borderColor,\n      showShadow: true,\n      showGradient: true,\n      showGlow: false,\n      isNearbyPair: isNearbyPair\n    });\n    const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n    const style = new Style({\n      image: new Icon({\n        src: svgUrl,\n        scale: isNearbyPair ? 1.1 : 1.0,\n        anchor: [0.5, 1],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction'\n      })\n    });\n\n    if (showNomesEscolas) {\n      style.setText(new Text({\n        text: schoolData.titulo || 'Escola',\n        font: 'bold 10px Arial',\n        fill: new Fill({ color: '#FFFFFF' }),\n        stroke: new Stroke({ color: '#000000', width: 2 }),\n        offsetY: isNearbyPair ? -35 : -30,\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }));\n    }\n\n    return style;\n  } catch (error) {\n    return null;\n  }\n}\n\n/**\n * Cria o estilo de cluster de marcadores para o OpenLayers.\n * @param {ol.Feature} feature - Feature do cluster.\n * @param {Function} createMarkerStyle - Função para criar estilo de marcador individual.\n * @returns {ol.style.Style|null} Estilo do cluster ou null.\n */\nexport function createClusterStyle(feature, createMarkerStyle) {\n  try {\n    const features = feature.get('features');\n    if (!features || features.length === 0) return null;\n    const size = features.length;\n\n    if (size === 1) {\n      const singleFeature = features[0];\n      if (!singleFeature) return null;\n      return createMarkerStyle(singleFeature);\n    }\n\n    let baseColor = '#3B82F6';\n    let baseSize = 32;\n    if (size > 100) {\n      baseColor = '#1E40AF';\n      baseSize = 40;\n    } else if (size > 50) {\n      baseColor = '#2563EB';\n      baseSize = 36;\n    } else if (size > 20) {\n      baseColor = '#3B82F6';\n      baseSize = 34;\n    } else if (size > 10) {\n      baseColor = '#60A5FA';\n      baseSize = 33;\n    }\n    const scale = Math.min(1.0 + (size * 0.015), 1.8);\n    const finalSize = Math.round(baseSize * scale);\n\n    // Gerar SVG dinamicamente\n    const svg = createMarkerSVG(baseColor, finalSize, {\n      borderColor: baseColor,\n      showShadow: true,\n      showGradient: true,\n      showGlow: size > 20,\n      isNearbyPair: false\n    });\n    const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n    let fontSize = '12px';\n    let fontWeight = 'bold';\n    if (size > 100) fontSize = '14px';\n    else if (size > 50) fontSize = '13px';\n    else if (size > 20) fontSize = '12px';\n\n    return new Style({\n      image: new Icon({\n        src: svgUrl,\n        scale: 1,\n        anchor: [0.5, 0.5],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction'\n      }),\n      text: new Text({\n        text: size.toString(),\n        font: `${fontWeight} ${fontSize} Arial`,\n        fill: new Fill({ color: '#FFFFFF' }),\n        stroke: new Stroke({ color: '#000000', width: 2 }),\n        offsetY: finalSize * 0.6\n      })\n    });\n  } catch (error) {\n    return null;\n  }\n} ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\nimport MapWrapper from './map/MapWrapper';\nimport { findNearbyPairs } from '../utils/markers/proximityUtils';\nimport { terrasIndigenasStyle, estadoSPStyle } from '../utils/markers/featureStyles';\nimport { handleMarkerClick, handleGeoJSONClick } from '../utils/markers/handlers';\nimport { createMarkerStyle, createClusterStyle } from '../utils/markers/markerStyles';\n\n// Componentes GeoJSON\n// import OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\n// import OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Função para gerenciar cliques em marcador de escola (um clique abre o painel)\n  const handleMarkerClick = useCallback((feature, event) => {\n    const schoolData = feature.get('schoolData');\n    if (schoolData) {\n      if (isMobile()) {\n        console.log('[MOBILE] Marcador de escola clicado:', schoolData);\n      }\n      onPainelOpen?.(schoolData);\n    }\n  }, [onPainelOpen]);\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Verificar se é mobile e ajustar configurações\n    const isMobileDevice = isMobile();\n    const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: 18,\n        minZoom: 4,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions({\n        dragRotate: false, // Desabilitar rotação com arraste\n        pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      })\n    });\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            console.log('[CLUSTER] Clique em cluster com 1 marcador', features[0].get('schoolData'));\n            handleMarkerClick(features[0], event);\n          } else if (features.length > 1) {\n            console.log('[CLUSTER] Clique em cluster com', features.length, 'marcadores. Fazendo zoom.');\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            const clusterExtent = feature.getGeometry().getExtent();\n            const currentZoom = map.current.getView().getZoom();\n            let targetZoom = 12;\n            if (features.length > 20) {\n              targetZoom = 10;\n            } else if (features.length > 10) {\n              targetZoom = 11;\n            } else if (features.length > 5) {\n              targetZoom = 12;\n            } else {\n              targetZoom = 13;\n            }\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            map.current.getView().fit(clusterExtent, {\n              duration: 800,\n              padding: [80, 80, 80, 80],\n              maxZoom: targetZoom\n            });\n          }\n        } else {\n          console.log('[MARCADOR] Clique em marcador individual', feature.get('schoolData'));\n          // Marcador individual\n          handleMarkerClick(feature, event);\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n\n    map.current.on('pointermove', (event) => {\n      // Desabilitar tooltips de hover no mobile\n      if (isMobile()) return;\n      \n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador, mostrar tooltip\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData, 'school');\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Verificar se é um marcador de escola ou terra indígena\n          const schoolData = feature.get('schoolData');\n          const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n          \n          if (schoolData) {\n            // Marcador de escola - tooltip azul\n            tooltipElement = createTooltipElement(event, schoolData, 'school');\n          } else if (terraIndigenaInfo) {\n            // Terra indígena - tooltip vermelho\n            tooltipElement = createTooltipElement(event, terraIndigenaInfo, 'terra_indigena');\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, data, type) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.setAttribute('data-type', type);\n      \n      // Determinar o conteúdo e estilo baseado no tipo\n      let content, backgroundColor, borderColor;\n      \n      if (type === 'school') {\n        content = createTooltipHTML(data);\n        backgroundColor = 'rgba(59, 130, 246, 0.95)'; // Azul para escolas\n        borderColor = 'rgba(37, 99, 235, 0.8)';\n      } else if (type === 'terra_indigena') {\n        content = `Terra Indígena ${data.titulo || 'Indígena'}`;\n        backgroundColor = 'rgba(220, 20, 60, 0.95)'; // Vermelho para terras indígenas\n        borderColor = 'rgba(185, 28, 28, 0.8)';\n      }\n      \n      element.textContent = content;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = backgroundColor;\n      element.style.color = 'white';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.25)';\n      element.style.border = `1px solid ${borderColor}`;\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o elemento\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do elemento\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Desabilitar zoom no double click em marcadores individuais ou cluster de 1 escola\n    map.current.on('dblclick', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Se for marcador individual ou cluster de 1 escola, previne o zoom\n        if (!feature.get('features') || (feature.get('features') && feature.get('features').length === 1)) {\n          event.preventDefault();\n          event.stopPropagation();\n          console.log('[DBLCLICK] Zoom desabilitado em marcador individual ou cluster de 1 escola');\n        }\n      }\n    });\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [center, zoom, createBaseLayers, createClusterStyle, createTooltipHTML, onPainelOpen, handleMarkerClick]);\n\n  // Atualizar configurações do mapa quando props mudarem\n  useEffect(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom, showNomesEscolas]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        \n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        if (pairIndex !== -1) {\n          feature.set('isNearbyPair', true);\n        }\n        \n        vectorSource.current.addFeature(feature);\n      }\n    });\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle((feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)));\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle((feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)));\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    // Variáveis para controlar o sistema de clique duplo\n    let clickTimeout = null;\n    let lastClickedFeature = null;\n    let clickCount = 0;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo) {\n          // Verificar se é o mesmo feature clicado anteriormente\n          if (lastClickedFeature === feature) {\n            clickCount++;\n          } else {\n            // Novo feature, resetar contador\n            lastClickedFeature = feature;\n            clickCount = 1;\n          }\n\n          // Limpar timeout anterior\n          if (clickTimeout) {\n            clearTimeout(clickTimeout);\n          }\n\n          // Configurar timeout para resetar o contador\n          clickTimeout = setTimeout(() => {\n            clickCount = 0;\n            lastClickedFeature = null;\n          }, 500); // 500ms para detectar clique duplo\n\n          if (clickCount === 1) {\n            // Primeiro clique: fazer zoom\n            const geometry = feature.getGeometry();\n            if (geometry) {\n              const extent = geometry.getExtent();\n              map.current.getView().fit(extent, {\n                duration: 800,\n                padding: [50, 50, 50, 50],\n                maxZoom: 15\n              });\n            }\n          } else if (clickCount === 2) {\n            // Segundo clique: abrir painel de informações\n            if (onPainelOpen) {\n              onPainelOpen(terraIndigenaInfo);\n            }\n            // Resetar contador após abrir o painel\n            clickCount = 0;\n            lastClickedFeature = null;\n            if (clickTimeout) {\n              clearTimeout(clickTimeout);\n              clickTimeout = null;\n            }\n          }\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n      // Limpar timeout ao desmontar\n      if (clickTimeout) {\n        clearTimeout(clickTimeout);\n      }\n    };\n  }, [onPainelOpen]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: terrasIndigenasStyle,\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: estadoSPStyle,\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  return (\n    <MapWrapper ref={mapContainer}>\n      {/* Informações do mapa */}\n      {/* Bloco removido conforme solicitado */}\n    </MapWrapper>\n  );\n};\n\nexport default OpenLayersMap; ","/**\n * Constante para definir a proximidade entre marcadores (em graus)\n */\nexport const PROXIMITY_THRESHOLD = 0.00005;\n\n/**\n * Encontra pares de pontos próximos com base em um threshold de proximidade.\n * @param {Array} pontos - Array de objetos com latitude e longitude.\n * @param {number} [threshold=0.00005] - Threshold de proximidade em graus.\n * @returns {Array<Array<number>>} - Array de pares de índices próximos.\n */\nexport function findNearbyPairs(pontos, threshold = 0.00005) {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < threshold && lngDiff < threshold) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n}\n\n/**\n * Função para calcular distância entre dois pontos\n * @param {Object} point1 - Primeiro ponto {latitude, longitude}\n * @param {Object} point2 - Segundo ponto {latitude, longitude}\n * @returns {number} Distância em graus\n */\nexport const calculateDistance = (point1, point2) => {\n  const latDiff = Math.abs(parseFloat(point1.latitude) - parseFloat(point2.latitude));\n  const lngDiff = Math.abs(parseFloat(point1.longitude) - parseFloat(point2.longitude));\n  \n  return Math.sqrt(latDiff * latDiff + lngDiff * lngDiff);\n};\n\n/**\n * Função para verificar se dois pontos estão próximos\n * @param {Object} point1 - Primeiro ponto {latitude, longitude}\n * @param {Object} point2 - Segundo ponto {latitude, longitude}\n * @param {number} threshold - Limiar de proximidade\n * @returns {boolean} True se os pontos estão próximos\n */\nexport const arePointsNearby = (point1, point2, threshold = PROXIMITY_THRESHOLD) => {\n  const distance = calculateDistance(point1, point2);\n  return distance < threshold;\n}; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  painelAberto = false,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  useEffect(() => {\n    console.log('MapSelector: useEffect painelAberto mudou:', {\n      painelAberto,\n      isMobile,\n      showMarcadores,\n      shouldReactivate: !painelAberto && isMobile\n    });\n    \n    if (!painelAberto && isMobile) {\n      console.log('MapSelector: Painel fechado em mobile, reativando marcadores');\n      setShowMarcadores(true);\n    }\n  }, [painelAberto, isMobile]);\n\n  // Log para monitorar mudanças no showMarcadores\n  useEffect(() => {\n    console.log('MapSelector: showMarcadores mudou para:', showMarcadores);\n  }, [showMarcadores]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        painelAberto={!!painelInfo}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n}; "],"names":["MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","React","props","ref","_jsx","_objectSpread","id","className","terrasIndigenasStyle","feature","isRegularizada","getProperties","fase_ti","Style","fill","Fill","color","stroke","Stroke","width","lineDash","estadoSPStyle","createMarkerSVG","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","createMarkerStyle","showNomesEscolas","schoolData","get","svg","svgUrl","encodeURIComponent","style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","titulo","font","offsetY","textAlign","textBaseline","error","createClusterStyle","features","singleFeature","baseSize","Math","min","finalSize","round","fontSize","fontWeight","toString","proj4","defs","register","_ref","dataPoints","onPainelOpen","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","terrasIndigenasLayerRef","estadoSPLayerRef","handleMarkerClick","useCallback","event","isMobile","console","log","createBaseLayers","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createTooltipHTML","useEffect","current","isMobileDevice","initialCenter","initialZoom","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","f","zIndex","Map","target","layers","view","View","fromLonLat","enableRotation","controls","defaultControls","interactions","defaultInteractions","dragRotate","pinchRotate","on","getView","toLonLat","getCenter","newView","toFixed","getZoom","changed","forEachFeatureAtPixel","pixel","clusterExtent","getExtent","currentZoom","targetZoom","max","fit","duration","padding","tooltipElement","remove","createTooltipElement","createClusterTooltipElement","terraIndigenaInfo","data","type","element","document","createElement","content","backgroundColor","setAttribute","textContent","position","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","pointerEvents","boxShadow","border","backdropFilter","coordinate","getPixelFromCoordinate","left","top","appendChild","count","preventDefault","stopPropagation","setTarget","newCenter","newZoom","currentCenter","setCenter","setZoom","clear","pontosValidos","filter","point","latitude","longitude","parseFloat","isNaN","nearbyPairs","pontos","threshold","pairs","used","Set","i","has","j","p1","p2","latDiff","abs","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","findIndex","pair","includes","addFeature","setStyle","removeLayer","addLayer","clickTimeout","lastClickedFeature","clickCount","handleClick","clearTimeout","setTimeout","extent","un","GeoJSON","dataProjection","featureProjection","readFeatures","terrasIndigenasLayer","getSource","getFeatures","properties","terrai_nom","tipo","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","estadoSPLayer","interactive","MapWrapper","cache","useGeoJSONCache","key","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","crs","firstFeature","Object","keys","coordinates","err","fetchGeoJSON","painelAberto","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","terrasIndigenas","hasData","estadoSP","shouldReactivate","CabecalhoMenu","_ref2","onMinimize","_jsxs","children","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","quantidade","exemplo","refreshKey","useRefresh","panel","useMemo","URLSearchParams","location","search","initialPanel","find","criarSlug","painelInfo","setPainelInfo","escolasVisiveis","pontuacao","group","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","groupEnd","abrirPainel","info","refreshPainel","fecharPainel","MapSelector","_Fragment","PainelInformacoes","closePainel"],"sourceRoot":""}
{"version":3,"file":"static/js/649.cdaf5211.chunk.js","mappings":"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","sources":["components/Marcadores.js","../node_modules/react-leaflet/lib/GeoJSON.js","components/TerrasIndigenas.js","components/MapaBase.js","components/EstadoSP.js","components/MenuCamadas.js","components/detalhesInfo.js","../node_modules/react-error-boundary/dist/react-error-boundary.js","components/MapaEscolasIndigenas.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Marker, Tooltip, useMap } from \"react-leaflet\";\nimport { violetIcon } from \"./CustomIcon\";\nimport L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\n// Constante para definir a proximidade entre marcadores (em graus)\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para criar o conector entre marcadores\nconst createConnector = (map, centerLat, centerLng, markerLat, markerLng) => {\n  return L.polyline([[centerLat, centerLng], [markerLat, markerLng]], {\n    color: '#A0522D',\n    weight: 1.2,\n    dashArray: '3,3',\n    opacity: 0.6,\n    className: 'marker-connector'\n  }).addTo(map);\n};\n\n// Função para encontrar pares de marcadores próximos\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\nconst Marcadores = ({ dataPoints, visibility, onClick }) => {\n  const map = useMap();\n  const clusterGroupRef = useRef(null);\n  const connectorsRef = useRef([]);\n\n  // Filtra os pontos válidos\n  const pontosValidos = React.useMemo(() => {\n    if (!Array.isArray(dataPoints) || dataPoints.length === 0) {\n      return [];\n    }\n\n    // Array para armazenar escolas com coordenadas inválidas\n    const escolasComProblemas = [];\n\n    const pontosFiltrados = dataPoints.filter(ponto => {\n      // Verifica se o ponto tem as propriedades básicas\n      if (!ponto.titulo || !ponto.latitude || !ponto.longitude) {\n        escolasComProblemas.push({\n          escola: ponto.titulo || \"Sem nome\",\n          problema: \"Dados básicos ausentes\",\n          detalhes: {\n            titulo: !!ponto.titulo,\n            latitude: !!ponto.latitude,\n            longitude: !!ponto.longitude\n          }\n        });\n        return false;\n      }\n\n      const lat = parseFloat(ponto.latitude);\n      const lng = parseFloat(ponto.longitude);\n      \n      // Verifica se as coordenadas são números válidos\n      if (isNaN(lat) || isNaN(lng)) {\n        escolasComProblemas.push({\n          escola: ponto.titulo,\n          problema: \"Coordenadas não são números válidos\",\n          detalhes: {\n            latitude: ponto.latitude,\n            longitude: ponto.longitude\n          }\n        });\n        return false;\n      }\n\n      // Verifica se as coordenadas estão dentro dos limites válidos\n      if (lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        escolasComProblemas.push({\n          escola: ponto.titulo,\n          problema: \"Coordenadas fora dos limites válidos\",\n          detalhes: {\n            latitude: lat,\n            longitude: lng,\n            limites: {\n              latMin: -90,\n              latMax: 90,\n              lngMin: -180,\n              lngMax: 180\n            }\n          }\n        });\n        return false;\n      }\n\n      return true;\n    });\n\n    // Log detalhado das escolas com problemas\n    if (escolasComProblemas.length > 0) {\n      console.group(\"Escolas com coordenadas inválidas:\");\n      escolasComProblemas.forEach(escola => {\n        console.group(escola.escola);\n        console.log(\"Problema:\", escola.problema);\n        console.log(\"Detalhes:\", escola.detalhes);\n        console.groupEnd();\n      });\n      console.groupEnd();\n      console.log(`Total de escolas com problemas: ${escolasComProblemas.length}`);\n    }\n\n    return pontosFiltrados;\n  }, [dataPoints]);\n\n  // Configuração do ícone para escolas indígenas\n  const escolaIcon = violetIcon;\n\n  useEffect(() => {\n    if (!Array.isArray(dataPoints) || dataPoints.length === 0) {\n      return;\n    }\n\n    if (!map || !pontosValidos.length || !visibility.educacao) return;\n\n    // Remove o grupo de clusters anterior e conectores\n    if (clusterGroupRef.current) {\n      map.removeLayer(clusterGroupRef.current);\n    }\n    connectorsRef.current.forEach(connector => map.removeLayer(connector));\n    connectorsRef.current = [];\n\n    // Encontra pares de marcadores próximos\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    // Cria um novo grupo de clusters\n    const clusterGroup = new L.MarkerClusterGroup({\n      // Configurações básicas\n      chunkedLoading: true,\n      maxClusterRadius: 4,\n      spiderfyOnMaxZoom: true,\n      showCoverageOnHover: true,\n      zoomToBoundsOnClick: true,\n      removeOutsideVisibleBounds: true,\n      animate: true,\n      \n      // Configurações de zoom\n      disableClusteringAtZoom: 12,\n      minZoom: 4,\n      maxZoom: 18,\n      \n      // Configurações de ícones com estética indígena\n      iconCreateFunction: function(cluster) {\n        const count = cluster.getChildCount();\n        let size = 'small';\n        let background = '#A0522D';\n        let textColor = '#fff';\n\n        if (count > 100) {\n          size = 'large';\n          background = '#4B2E14';\n        } else if (count > 20) {\n          size = 'medium';\n          background = '#8B5A2B';\n        }\n\n        const iconUrl = violetIcon.options.iconUrl;\n        const iconSize = violetIcon.options.iconSize || [30, 30];\n\n        return L.divIcon({\n          html: `\n            <div style=\"\n              background: radial-gradient(circle at 30% 30%, ${background}, #3b2e2a);\n              color: ${textColor};\n              border-radius: 50%;\n              width: ${iconSize[0] + 10}px;\n              height: ${iconSize[1] + 10}px;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              font-weight: bold;\n              border: 2px solid #f5f5dc;\n              box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);\n              transition: transform 0.3s ease;\n              padding: 2px;\n            \">\n              <img src=\"${iconUrl}\" width=\"${iconSize[0] * 0.6}\" height=\"${iconSize[1] * 0.6}\" style=\"margin-bottom: 2px;\" />\n              <span style=\"\n                font-size: ${size === 'large' ? '16px' : size === 'medium' ? '14px' : '12px'};\n              \">${count}</span>\n            </div>`,\n          className: `marker-cluster marker-cluster-${size}`,\n          iconSize: L.point(iconSize[0] + 10, iconSize[1] + 10)\n        });\n      },\n      \n      // Configurações de animação suaves\n      animateAddingMarkers: true,\n      spiderLegPolylineOptions: { \n        weight: 1.3,\n        color: '#5C4033',\n        opacity: 0.5,\n        dashArray: '2,4'\n      },\n      \n      // Configurações de performance\n      chunkInterval: 200,\n      chunkDelay: 50,\n      \n      // Configurações de interatividade\n      singleMarkerMode: false,\n      spiderfyDistanceMultiplier: 1.5,\n      \n      // Configurações de estilo orgânico\n      polygonOptions: {\n        fillColor: '#A0522D',\n        color: '#5C4033',\n        weight: 1.2,\n        opacity: 0.6,\n        fillOpacity: 0.2\n      }\n    });\n\n    // Adiciona os marcadores ao grupo\n    pontosValidos.forEach((ponto, index) => {\n      const lat = parseFloat(ponto.latitude);\n      const lng = parseFloat(ponto.longitude);\n      \n      const marker = L.marker([lat, lng], { \n        icon: escolaIcon,\n        zIndexOffset: 1000\n      });\n\n      // Adiciona o tooltip com o título capitalizado\n      marker.bindTooltip(capitalizeWords(ponto.titulo), {\n        className: \"bg-white/95 text-gray-800 text-sm font-medium px-3 py-1.5 rounded shadow-sm border border-gray-100\",\n        direction: \"top\",\n        offset: [0, -10],\n        opacity: 1,\n        permanent: false,\n        interactive: true\n      });\n\n      // Adiciona os eventos de clique e toque\n      marker.on({\n        click: (e) => {\n          e.originalEvent.stopPropagation();\n          onClick?.(ponto);\n        },\n        touchstart: (e) => {\n          e.originalEvent.stopPropagation();\n        },\n        touchend: (e) => {\n          e.originalEvent.stopPropagation();\n          onClick?.(ponto);\n        }\n      });\n\n      // Verifica se este marcador faz parte de um par próximo\n      const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n      if (pairIndex !== -1) {\n        const [first, second] = nearbyPairs[pairIndex];\n        const isFirst = index === first;\n        const otherIndex = isFirst ? second : first;\n        const otherPonto = pontosValidos[otherIndex];\n\n        // Aplica o efeito de fan-out aprimorado\n        marker.on('add', function() {\n          const transform = isFirst \n            ? 'perspective(500px) rotateY(-20deg) translateX(-20px) rotate(-25deg) scale(0.9)'\n            : 'perspective(500px) rotateY(20deg) translateX(20px) rotate(25deg) scale(0.9)';\n          \n          this._icon.style.transform = transform;\n          this._icon.style.transition = 'transform 0.5s ease-out, filter 0.3s ease-in';\n          this._icon.style.filter = 'drop-shadow(0 4px 12px rgba(160, 82, 45, 0.35))';\n          this._icon.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.35)';\n        });\n\n        // Cria o conector entre os marcadores\n        const connector = createConnector(\n          map,\n          lat,\n          lng,\n          parseFloat(otherPonto.latitude),\n          parseFloat(otherPonto.longitude)\n        );\n        connectorsRef.current.push(connector);\n      }\n\n      clusterGroup.addLayer(marker);\n    });\n\n    // Adiciona o grupo ao mapa\n    map.addLayer(clusterGroup);\n    clusterGroupRef.current = clusterGroup;\n\n    // Limpa o grupo e conectores quando o componente for desmontado\n    return () => {\n      if (clusterGroupRef.current) {\n        map.removeLayer(clusterGroupRef.current);\n      }\n      connectorsRef.current.forEach(connector => map.removeLayer(connector));\n      connectorsRef.current = [];\n    };\n  }, [map, pontosValidos, onClick, escolaIcon, visibility.educacao, dataPoints]);\n\n  return null;\n};\n\nexport default Marcadores; ","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import React, { useCallback, useMemo, useEffect } from 'react';\nimport { GeoJSON, useMap } from 'react-leaflet';\nimport L from 'leaflet';\n\nconst TerrasIndigenas = ({ data, onClick }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (data) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\"TerrasIndigenas: Dados recebidos:\", {\n          type: data.type,\n          features: data.features ? data.features.length : 0,\n          properties: data.features ? data.features[0].properties : null\n        });\n      }\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n      }\n    }\n  }, [data]);\n\n  // Estilo padrão das terras indígenas\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#B22222', // Vermelho escuro na borda\n      weight: 2,\n      fillOpacity: 0.3,\n      fillColor: '#DC143C', // Vermelho vivo no preenchimento\n      dashArray: '3',\n      zIndex: 2\n    }),\n    []\n  );\n\n  // Função para determinar o estilo baseado no status da terra indígena\n  const style = useCallback(\n    (feature) => {\n      if (!feature || !feature.properties) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"Feature sem propriedades:\", feature);\n        }\n        return defaultStyle;\n      }\n\n      const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(`Terra indígena ${feature.properties.terrai_nom}: ${isRegularizada ? 'Regularizada' : 'Não Regularizada'}`);\n      }\n      \n      return {\n        ...defaultStyle,\n        fillColor: isRegularizada ? '#DC143C' : '#8B0000', // Regularizada vermelho vivo, não regularizada vermelho escuro\n        fillOpacity: isRegularizada ? 0.3 : 0.25\n      };\n    },\n    [defaultStyle]\n  );\n\n  // Estilo quando o mouse passa por cima\n  const hoverStyle = {\n    weight: 3,\n    color: '#FF0000', // Vermelho puro na borda ao passar o mouse\n    fillOpacity: 0.45,\n    dashArray: ''\n  };\n\n  const onEachFeature = useCallback(\n    (feature, layer) => {\n      if (!feature || !feature.properties) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"Feature sem propriedades no onEachFeature:\", feature);\n        }\n        return;\n      }\n\n      // Adiciona tooltip com informações básicas\n      const tooltipContent = `\n        <div class=\"bg-white p-2 rounded shadow-md\">\n          <strong>${feature.properties.terrai_nom || 'Nome não disponível'}</strong><br/>\n          ${feature.properties.etnia_nome || 'Etnia não disponível'}<br/>\n          ${feature.properties.fase_ti || 'Fase não disponível'}\n        </div>\n      `;\n      layer.bindTooltip(tooltipContent, {\n        sticky: true,\n        className: 'custom-tooltip'\n      });\n\n      layer.on({\n        mouseover: (e) => {\n          const layer = e.target;\n          layer.setStyle(hoverStyle);\n          layer.bringToFront();\n        },\n        mouseout: (e) => {\n          e.target.setStyle(style(feature));\n        },\n        click: (e) => {\n          const layer = e.target;\n\n          // Prepara os dados para o painel\n          const terraIndigenaInfo = {\n            titulo: feature.properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: feature.properties.etnia_nome,\n            municipio: feature.properties.municipio_,\n            uf: feature.properties.uf_sigla,\n            superficie: feature.properties.superficie,\n            fase: feature.properties.fase_ti,\n            modalidade: feature.properties.modalidade,\n            reestudo: feature.properties.reestudo_t,\n            cr: feature.properties.cr,\n            faixa_fron: feature.properties.faixa_fron,\n            undadm_nom: feature.properties.undadm_nom,\n            undadm_sig: feature.properties.undadm_sig,\n            dominio_un: feature.properties.dominio_un,\n            data_atual: feature.properties.data_atual,\n            terrai_cod: feature.properties.terrai_cod,\n            undadm_cod: feature.properties.undadm_cod\n          };\n\n          if (onClick) {\n            onClick(terraIndigenaInfo);\n          }\n        }\n      });\n    },\n    [map, style, onClick]\n  );\n\n  if (!data) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    }\n    return null;\n  }\n\n  if (!data.type || data.type !== 'FeatureCollection') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\"TerrasIndigenas: Formato de GeoJSON inválido. Esperado FeatureCollection, recebido:\", data.type);\n    }\n    return null;\n  }\n\n  if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\"TerrasIndigenas: GeoJSON sem features válidas\");\n    }\n    return null;\n  }\n\n  return <GeoJSON data={data} style={style} onEachFeature={onEachFeature} />;\n};\n\nexport default TerrasIndigenas; ","import React from 'react';\nimport { MapContainer, TileLayer } from \"react-leaflet\";\n\nconst isMobile = () => {\n  return window.innerWidth <= 768; // Define mobile para telas menores que 768px\n};\n\nconst MapaBase = ({ children }) => {\n  // Define coordenadas e zoom baseados no dispositivo para visualizar SP\n  const defaultPosition = isMobile() ? [-23.5505, -48.6333] : [-23.305, -43.9];\n  const defaultZoom = isMobile() ? 6 : 7; // Zoom mais aberto para visualizar mais do estado\n\n  return (\n    <div className=\"h-screen w-screen overflow-hidden\">\n      <MapContainer\n        center={defaultPosition}\n        zoom={defaultZoom}\n        className=\"h-full w-full\"\n        attributionControl={false} // Ativa o controle de atribuição padrão do Leaflet\n      >\n        {/* TileLayer com o mapa de fundo */}\n        <TileLayer\n        url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n      />\n\n        {/* Conteúdo adicional do mapa (marcadores, camadas, etc.) */}\n        {children}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapaBase;","import React, { useMemo, useEffect } from 'react';\nimport { GeoJSON } from 'react-leaflet';\n\nconst EstadoSP = ({ data }) => {\n  useEffect(() => {\n    if (data) {\n      console.log(\"EstadoSP: Dados recebidos:\", data);\n    }\n  }, [data]);\n\n  // Estilo para criar o efeito de contorno preto com escurecimento interno\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#000000',   // Linha preta\n      weight: 2,          // Espessura da linha\n      fillColor: '#000000', // Preto sólido\n      fillOpacity: 0.3,   // 30% de opacidade para escurecer o mapa\n      dashArray: '',      // Linha contínua\n      zIndex: 999,        // Mantém acima da base\n      interactive: false  // Desativa interatividade para manter fixo\n    }),\n    []\n  );\n\n  if (!data) return null;\n\n  return (\n    <GeoJSON \n      data={data} \n      style={defaultStyle}\n      interactive={false} // Garante que não há interatividade\n    />\n  );\n};\n\nexport default EstadoSP; ","import React, { useState, useEffect, memo, useCallback } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst CAMADAS = {\n  ESTADO_SP: { id: 'estadoSP', label: 'Estado de São Paulo', cor: '#10B981' },\n  ESCOLAS: { id: 'educacao', label: 'Escolas Indígenas', cor: '#3B82F6' },\n  TERRAS_INDIGENAS: { \n    id: 'terrasIndigenas', \n    label: 'Terras Indígenas', \n    cor: '#DC143C',\n    corSecundaria: '#8B0000',\n    labelSecundaria: 'Declaradas'\n  }\n};\n\nconst CabecalhoMenu = memo(({ onClose, onMinimize, isMobile, isMinimized }) => (\n  <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n    <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n    <div className=\"flex items-center gap-2\">\n      <button\n        onClick={onMinimize}\n        className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n        aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n        type=\"button\"\n      >\n        {isMinimized ? \"▾\" : \"▴\"}\n      </button>\n      <button\n        onClick={onClose}\n        className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n        aria-label=\"Fechar\"\n        type=\"button\"\n      >\n        ✕\n      </button>\n    </div>\n  </div>\n));\n\nCabecalhoMenu.displayName = 'CabecalhoMenu';\n\nconst BotaoCamada = memo(({ camada, ativo, onClick, total }) => (\n  <button\n    onClick={onClick}\n    className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n      ativo ? 'bg-gray-50' : 'hover:bg-gray-50'\n    }`}\n    type=\"button\"\n  >\n    {camada.id === 'terrasIndigenas' ? (\n      <div className=\"flex flex-col gap-1\">\n        <div className=\"flex items-center gap-1\">\n          <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.cor }} />\n          <span className=\"text-xs text-gray-600\">Regularizadas</span>\n        </div>\n        <div className=\"flex items-center gap-1\">\n          <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.corSecundaria }} />\n          <span className=\"text-xs text-gray-600\">{camada.labelSecundaria}</span>\n        </div>\n      </div>\n    ) : (\n      <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.cor }} />\n    )}\n    <span className=\"text-sm text-gray-800\">{camada.label}</span>\n    {total !== undefined && (\n      <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n    )}\n    <div className=\"ml-auto w-2 h-2 rounded-full\" style={{ backgroundColor: ativo ? camada.cor : '#e5e7eb' }} />\n  </button>\n));\n\nBotaoCamada.displayName = 'BotaoCamada';\n\nconst MenuCamadas = ({ estados, acoes, totalEscolas }) => {\n  const [menuAberto, setMenuAberto] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handlers para ações do menu\n  const handleMenuClose = useCallback(() => setMenuAberto(false), []);\n  const handleMenuOpen = useCallback(() => setMenuAberto(true), []);\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Renderização para mobile\n  if (isMobile) {\n    return (\n      <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n        <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n          <CabecalhoMenu\n            onClose={handleMenuClose}\n            onMinimize={handleMinimize}\n            isMobile={true}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n              <BotaoCamada \n                camada={CAMADAS.ESTADO_SP} \n                ativo={estados.estadoSP} \n                onClick={acoes.toggleEstadoSP} \n              />\n              <BotaoCamada \n                camada={CAMADAS.ESCOLAS} \n                ativo={estados.educacao} \n                onClick={acoes.toggleEducacao} \n                total={totalEscolas} \n              />\n              <BotaoCamada \n                camada={CAMADAS.TERRAS_INDIGENAS} \n                ativo={estados.terrasIndigenas} \n                onClick={acoes.toggleTerrasIndigenas} \n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Menu desktop fixo no topo direito\n  return (\n    <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n      <CabecalhoMenu \n        onClose={handleMenuClose}\n        onMinimize={handleMinimize}\n        isMobile={false}\n        isMinimized={isMinimized}\n      />\n      {!isMinimized && (\n        <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n          <BotaoCamada \n            camada={CAMADAS.ESTADO_SP} \n            ativo={estados.estadoSP} \n            onClick={acoes.toggleEstadoSP} \n          />\n          <BotaoCamada \n            camada={CAMADAS.ESCOLAS} \n            ativo={estados.educacao} \n            onClick={acoes.toggleEducacao} \n            total={totalEscolas} \n          />\n          <BotaoCamada \n            camada={CAMADAS.TERRAS_INDIGENAS} \n            ativo={estados.terrasIndigenas} \n            onClick={acoes.toggleTerrasIndigenas} \n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nMenuCamadas.propTypes = {\n  estados: PropTypes.shape({\n    estadoSP: PropTypes.bool.isRequired,\n    educacao: PropTypes.bool.isRequired,\n    terrasIndigenas: PropTypes.bool.isRequired\n  }).isRequired,\n  acoes: PropTypes.shape({\n    toggleEstadoSP: PropTypes.func.isRequired,\n    toggleEducacao: PropTypes.func.isRequired,\n    toggleTerrasIndigenas: PropTypes.func.isRequired\n  }).isRequired,\n  totalEscolas: PropTypes.number\n};\n\nMenuCamadas.displayName = 'MenuCamadas';\n\nexport default memo(MenuCamadas);","const detalhesIntro = {\n  titulo: \"Sobre o site\",\n  audioUrl: \"\",\n  descricao_detalhada: `Este é um observatório que busca mapear as escolas indígenas no estado de São Paulo.\n`,\n  imagens: [\"\"]\n};\n\nexport default detalhesIntro;\n","'use client';\nimport { createContext, Component, createElement, useContext, useState, useMemo, forwardRef } from 'react';\n\nconst ErrorBoundaryContext = createContext(null);\n\nconst initialState = {\n  didCatch: false,\n  error: null\n};\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n    this.state = initialState;\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      didCatch: true,\n      error\n    };\n  }\n  resetErrorBoundary() {\n    const {\n      error\n    } = this.state;\n    if (error !== null) {\n      var _this$props$onReset, _this$props;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {\n        args,\n        reason: \"imperative-api\"\n      });\n      this.setState(initialState);\n    }\n  }\n  componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      didCatch\n    } = this.state;\n    const {\n      resetKeys\n    } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onReset2, _this$props3;\n      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\"\n      });\n      this.setState(initialState);\n    }\n  }\n  render() {\n    const {\n      children,\n      fallbackRender,\n      FallbackComponent,\n      fallback\n    } = this.props;\n    const {\n      didCatch,\n      error\n    } = this.state;\n    let childToRender = children;\n    if (didCatch) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n      if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else if (fallback !== undefined) {\n        childToRender = fallback;\n      } else {\n        throw error;\n      }\n    }\n    return createElement(ErrorBoundaryContext.Provider, {\n      value: {\n        didCatch,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      }\n    }, childToRender);\n  }\n}\nfunction hasArrayChanged() {\n  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));\n}\n\nfunction assertErrorBoundaryContext(value) {\n  if (value == null || typeof value.didCatch !== \"boolean\" || typeof value.resetErrorBoundary !== \"function\") {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n}\n\nfunction useErrorBoundary() {\n  const context = useContext(ErrorBoundaryContext);\n  assertErrorBoundaryContext(context);\n  const [state, setState] = useState({\n    error: null,\n    hasError: false\n  });\n  const memoized = useMemo(() => ({\n    resetBoundary: () => {\n      context.resetErrorBoundary();\n      setState({\n        error: null,\n        hasError: false\n      });\n    },\n    showBoundary: error => setState({\n      error,\n      hasError: true\n    })\n  }), [context.resetErrorBoundary]);\n  if (state.hasError) {\n    throw state.error;\n  }\n  return memoized;\n}\n\nfunction withErrorBoundary(component, errorBoundaryProps) {\n  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {\n    ...props,\n    ref\n  })));\n\n  // Format for display in DevTools\n  const name = component.displayName || component.name || \"Unknown\";\n  Wrapped.displayName = \"withErrorBoundary(\".concat(name, \")\");\n  return Wrapped;\n}\n\nexport { ErrorBoundary, ErrorBoundaryContext, useErrorBoundary, withErrorBoundary };\n","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport MapaBase from \"./MapaBase\";\nimport Marcadores from \"./Marcadores\";\nimport Bairros from \"./Bairros\";\nimport TerrasIndigenas from \"./TerrasIndigenas\";\nimport EstadoSP from \"./EstadoSP\";\nimport MenuCamadas from \"./MenuCamadas\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport detalhesIntro from \"./detalhesInfo\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\n// Função para converter título em slug\nconst criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-')     // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '')         // Remove hífens do início e fim\n    .trim();\n};\n\n// Adiciona um componente de fallback para erros\nconst ErrorFallback = ({ error, resetErrorBoundary }) => (\n  <div role=\"alert\" className=\"fixed inset-0 bg-red-100 p-4 z-[1000]\">\n    <p className=\"text-red-700\">Algo deu errado ao fechar o painel:</p>\n    <pre className=\"text-sm text-red-600\">{error.message}</pre>\n    <button\n      onClick={resetErrorBoundary}\n      className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\"\n    >\n      Tentar novamente\n    </button>\n  </div>\n);\n\nconst MapaEscolasIndigenas = ({ dataPoints }) => {\n  // Adiciona log para verificar o PUBLIC_URL\n  console.log(\"MapaEscolasIndigenas - PUBLIC_URL:\", {\n    publicUrl: process.env.PUBLIC_URL,\n    baseUrl: window.location.origin + process.env.PUBLIC_URL,\n    currentPath: window.location.pathname,\n    fullUrl: window.location.href\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n      quantidade: dataPoints.length,\n      exemplo: dataPoints[0] ? {\n        titulo: dataPoints[0].titulo,\n        latitude: dataPoints[0].latitude,\n        longitude: dataPoints[0].longitude,\n        tipo: dataPoints[0].tipo\n      } : 'Nenhum ponto'\n    } : 'Nenhum dataPoint');\n  }\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const panel = urlParams.get('panel');\n  var initialPanel = detalhesIntro;\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(\"detalhesIntro:\", detalhesIntro);\n  }\n  if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n    const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n    if (pointFound != null) {\n      initialPanel = pointFound;\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(\"initialPanel:\", initialPanel);\n  }\n\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [terrasIndigenasData, setTerrasIndigenasData] = useState(null);\n  const [estadoSPData, setEstadoSPData] = useState(null);\n  const [visibilidade, setVisibilidade] = useState({\n    educacao: true,\n    terrasIndigenas: true,\n    estadoSP: true,\n  });\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n      console.log(\"Novo valor de painelInfo:\", {\n        titulo: painelInfo?.titulo,\n        tipo: painelInfo?.tipo,\n        hasLink: !!painelInfo?.link_para_documentos,\n        linkValue: painelInfo?.link_para_documentos,\n        isInitialPanel: painelInfo === initialPanel,\n        isNull: painelInfo === null,\n        isUndefined: painelInfo === undefined\n      });\n      console.groupEnd();\n    }\n  }, [painelInfo, initialPanel]);\n\n  // Calcula o total de escolas visíveis no mapa (com pontuação >= 0)\n  const escolasVisiveis = dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [];\n  const totalEscolas = escolasVisiveis.length;\n\n  useEffect(() => {\n    const fetchGeoJSON = async () => {\n      if (process.env.NODE_ENV !== 'production') {\n        console.log(\"Iniciando carregamento dos arquivos GeoJSON...\");\n      }\n      \n      try {\n        const [bairrosResponse, terrasIndigenasResponse, estadoSPResponse] = await Promise.all([\n          fetch(`${process.env.PUBLIC_URL}/bairros.geojson`),\n          fetch(`${process.env.PUBLIC_URL}/terras_indigenas_simplified.geojson`),\n          fetch(`${process.env.PUBLIC_URL}/SP_simplified.geojson`)\n        ]);\n\n        if (process.env.NODE_ENV !== 'production') {\n          console.log(\"Respostas recebidas:\", {\n            bairros: bairrosResponse.status,\n            terrasIndigenas: terrasIndigenasResponse.status,\n            estadoSP: estadoSPResponse.status\n          });\n        }\n\n        if (!bairrosResponse.ok) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(`Erro ao carregar GeoJSON dos bairros: HTTP status ${bairrosResponse.status}`);\n          }\n          return;\n        }\n        if (!terrasIndigenasResponse.ok) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(`Erro ao carregar GeoJSON das terras indígenas: HTTP status ${terrasIndigenasResponse.status}`);\n          }\n          return;\n        }\n        if (!estadoSPResponse.ok) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(`Erro ao carregar GeoJSON do estado: HTTP status ${estadoSPResponse.status}`);\n          }\n          return;\n        }\n\n        const [bairrosData, terrasIndigenasData, estadoSPData] = await Promise.all([\n          bairrosResponse.json(),\n          terrasIndigenasResponse.json(),\n          estadoSPResponse.json()\n        ]);\n\n        if (process.env.NODE_ENV !== 'production') {\n          console.log(\"Dados GeoJSON carregados:\", {\n            bairros: bairrosData ? \"OK\" : \"Falha\",\n            terrasIndigenas: terrasIndigenasData ? \"OK\" : \"Falha\",\n            estadoSP: estadoSPData ? \"OK\" : \"Falha\"\n          });\n        }\n\n        if (!bairrosData || !bairrosData.features) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(\"Dados dos bairros inválidos:\", bairrosData);\n          }\n          return;\n        }\n\n        if (!terrasIndigenasData || !terrasIndigenasData.features) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(\"Dados das terras indígenas inválidos:\", terrasIndigenasData);\n          }\n          return;\n        }\n\n        if (!estadoSPData || !estadoSPData.features) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error(\"Dados do estado inválidos:\", estadoSPData);\n          }\n          return;\n        }\n\n        setGeojsonData(bairrosData);\n        setTerrasIndigenasData(terrasIndigenasData);\n        setEstadoSPData(estadoSPData);\n\n        if (process.env.NODE_ENV !== 'production') {\n          console.log(\"Estados atualizados com os dados GeoJSON\");\n        }\n      } catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\"Erro ao carregar GeoJSON:\", error);\n        }\n      }\n    };\n    fetchGeoJSON();\n  }, []);\n\n  // Adicionar logs para verificar quando os dados são renderizados\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.log(\"Estado dos dados GeoJSON:\", {\n        bairros: geojsonData ? \"Carregado\" : \"Não carregado\",\n        terrasIndigenas: terrasIndigenasData ? \"Carregado\" : \"Não carregado\",\n        estadoSP: estadoSPData ? \"Carregado\" : \"Não carregado\"\n      });\n    }\n  }, [geojsonData, terrasIndigenasData, estadoSPData]);\n\n  const abrirPainel = (info) => {\n    console.group(\"MapaEscolasIndigenas - abrirPainel\");\n    console.log(\"Ambiente:\", process.env.NODE_ENV);\n    console.log(\"Info recebida:\", {\n      titulo: info?.titulo,\n      tipo: info?.tipo,\n      hasLink: !!info?.link_para_documentos,\n      linkValue: info?.link_para_documentos,\n      infoType: typeof info,\n      isNull: info === null,\n      isUndefined: info === undefined\n    });\n    \n    try {\n      // Força uma atualização imediata do estado\n      setPainelInfo(info);\n      \n      // Força uma re-renderização do componente\n      setForceUpdate(prev => prev + 1);\n      \n      // Verifica se o estado foi atualizado\n      requestAnimationFrame(() => {\n        console.log(\"Estado após requestAnimationFrame:\", {\n          painelInfo,\n          forceUpdate\n        });\n      });\n\n    } catch (error) {\n      console.error(\"Erro ao abrir painel:\", error);\n    } finally {\n      console.groupEnd();\n    }\n  };\n\n  // Adiciona um contador de força para atualização\n  const [forceUpdate, setForceUpdate] = useState(0);\n\n  const fecharPainel = useCallback(() => {\n    console.group(\"MapaEscolasIndigenas - fecharPainel\");\n    console.log(\"Ambiente:\", process.env.NODE_ENV);\n    console.log(\"Estado anterior:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      painelInfoType: typeof painelInfo,\n      painelInfoIsNull: painelInfo === null,\n      painelInfoIsUndefined: painelInfo === undefined,\n      forceUpdate\n    });\n    \n    try {\n      // Força uma atualização imediata do estado\n      setPainelInfo(null);\n      \n      // Força uma re-renderização do componente\n      setForceUpdate(prev => prev + 1);\n      \n      // Verifica se o estado foi atualizado\n      requestAnimationFrame(() => {\n        if (painelInfo !== null) {\n          console.warn(\"Estado não foi atualizado no primeiro frame, tentando novamente...\");\n          setPainelInfo(null);\n          setForceUpdate(prev => prev + 1);\n        }\n      });\n\n    } catch (error) {\n      console.error(\"Erro ao fechar painel:\", error);\n    } finally {\n      console.groupEnd();\n    }\n  }, [painelInfo, forceUpdate]);\n\n  // Monitora mudanças no painelInfo com mais detalhes em produção\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      console.group(\"MapaEscolasIndigenas - painelInfo changed (production)\");\n      console.log(\"Novo estado:\", {\n        value: painelInfo,\n        type: typeof painelInfo,\n        isNull: painelInfo === null,\n        isUndefined: painelInfo === undefined,\n        forceUpdate\n      });\n      console.groupEnd();\n    }\n  }, [painelInfo, forceUpdate]);\n\n  const toggleVisibilidade = (chave) => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.log(`Alterando visibilidade: ${chave}`);\n    }\n    setVisibilidade((prev) => ({ ...prev, [chave]: !prev[chave] }));\n  };\n\n  useEffect(() => {\n    if (painelInfo && process.env.NODE_ENV !== 'production') {\n      console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n        painelInfo,\n        hasLink: painelInfo?.link_para_documentos,\n        linkValue: painelInfo?.link_para_documentos\n      });\n    }\n  }, [painelInfo]);\n\n  return (\n    <div \n      className=\"relative h-screen w-full overflow-hidden\" \n      key={`mapa-container-${forceUpdate}`}\n      data-debug-info={JSON.stringify({\n        publicUrl: process.env.PUBLIC_URL,\n        baseUrl: window.location.origin + process.env.PUBLIC_URL,\n        currentPath: window.location.pathname\n      })}\n    >\n      <MapaBase>\n        {visibilidade.estadoSP && estadoSPData && <EstadoSP data={estadoSPData} />}\n        {visibilidade.terrasIndigenas && terrasIndigenasData && (\n          <TerrasIndigenas \n            data={terrasIndigenasData} \n            onClick={abrirPainel}\n          />\n        )}\n        {dataPoints && <Marcadores dataPoints={escolasVisiveis} visibility={visibilidade} onClick={abrirPainel} />}\n      </MapaBase>\n\n      {painelInfo && (\n        <ErrorBoundary\n          FallbackComponent={ErrorFallback}\n          onReset={() => {\n            setPainelInfo(null);\n            setForceUpdate(prev => prev + 1);\n          }}\n          key={`error-boundary-${forceUpdate}`}\n        >\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel}\n            key={`painel-${painelInfo?.titulo}-${forceUpdate}`}\n            publicUrl={process.env.PUBLIC_URL}\n          />\n        </ErrorBoundary>\n      )}\n      \n      <div className=\"absolute inset-0 pointer-events-none\">\n        <div className=\"pointer-events-auto\" style={{ zIndex: 20 }}>\n          <MenuCamadas\n            estados={visibilidade}\n            acoes={{\n              toggleEducacao: () => toggleVisibilidade(\"educacao\"),\n              toggleTerrasIndigenas: () => toggleVisibilidade(\"terrasIndigenas\"),\n              toggleEstadoSP: () => toggleVisibilidade(\"estadoSP\"),\n            }}\n            totalEscolas={totalEscolas}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;"],"names":["PROXIMITY_THRESHOLD","_ref","dataPoints","visibility","onClick","map","useMap","clusterGroupRef","useRef","connectorsRef","pontosValidos","React","Array","isArray","length","escolasComProblemas","pontosFiltrados","filter","ponto","titulo","latitude","longitude","push","escola","problema","detalhes","lat","parseFloat","lng","isNaN","limites","latMin","latMax","lngMin","lngMax","console","group","forEach","log","groupEnd","concat","escolaIcon","violetIcon","useEffect","educacao","current","removeLayer","connector","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","Math","abs","lngDiff","add","findNearbyPairs","clusterGroup","flat","L","chunkedLoading","maxClusterRadius","spiderfyOnMaxZoom","showCoverageOnHover","zoomToBoundsOnClick","removeOutsideVisibleBounds","animate","disableClusteringAtZoom","minZoom","maxZoom","iconCreateFunction","cluster","count","getChildCount","size","background","iconUrl","options","iconSize","html","className","animateAddingMarkers","spiderLegPolylineOptions","weight","color","opacity","dashArray","chunkInterval","chunkDelay","singleMarkerMode","spiderfyDistanceMultiplier","polygonOptions","fillColor","fillOpacity","index","marker","icon","zIndexOffset","bindTooltip","capitalizeWords","direction","offset","permanent","interactive","on","click","e","originalEvent","stopPropagation","touchstart","touchend","pairIndex","findIndex","pair","includes","first","second","isFirst","otherPonto","transform","this","_icon","style","transition","boxShadow","createConnector","centerLat","centerLng","markerLat","markerLng","addTo","addLayer","GeoJSON","createPathComponent","ctx","data","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","layer","props","prevProps","resetStyle","setStyle","defaultStyle","useMemo","zIndex","useCallback","feature","properties","isRegularizada","fase_ti","_objectSpread","hoverStyle","onEachFeature","tooltipContent","terrai_nom","etnia_nome","sticky","mouseover","target","bringToFront","mouseout","terraIndigenaInfo","tipo","etnia","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","type","features","_jsx","isMobile","window","innerWidth","children","defaultPosition","defaultZoom","_jsxs","MapContainer","center","zoom","attributionControl","TileLayer","url","CAMADAS","ESTADO_SP","id","label","cor","ESCOLAS","TERRAS_INDIGENAS","corSecundaria","labelSecundaria","CabecalhoMenu","memo","onClose","onMinimize","isMinimized","displayName","BotaoCamada","_ref2","camada","ativo","total","backgroundColor","undefined","MenuCamadas","_ref3","estados","acoes","totalEscolas","menuAberto","setMenuAberto","useState","setIsMobile","setIsMinimized","checkMobile","addEventListener","removeEventListener","handleMenuClose","handleMinimize","prev","estadoSP","toggleEstadoSP","toggleEducacao","terrasIndigenas","toggleTerrasIndigenas","audioUrl","descricao_detalhada","imagens","ErrorBoundaryContext","createContext","initialState","didCatch","error","ErrorBoundary","Component","constructor","super","resetErrorBoundary","bind","state","getDerivedStateFromError","_this$props$onReset","_this$props","_len","arguments","args","_key","onReset","call","reason","setState","componentDidCatch","info","_this$props$onError","_this$props2","onError","componentDidUpdate","prevState","resetKeys","_this$props$onReset2","_this$props3","a","b","some","item","Object","is","hasArrayChanged","next","render","fallbackRender","FallbackComponent","fallback","childToRender","createElement","Provider","value","ErrorFallback","role","message","publicUrl","process","baseUrl","location","origin","currentPath","pathname","fullUrl","href","panel","URLSearchParams","search","get","initialPanel","detalhesIntro","pointFound","find","toLowerCase","normalize","replace","trim","geojsonData","setGeojsonData","terrasIndigenasData","setTerrasIndigenasData","estadoSPData","setEstadoSPData","visibilidade","setVisibilidade","painelInfo","setPainelInfo","escolasVisiveis","point","pontuacao","async","bairrosResponse","terrasIndigenasResponse","estadoSPResponse","Promise","all","fetch","ok","bairrosData","json","fetchGeoJSON","abrirPainel","hasLink","link_para_documentos","linkValue","infoType","isNull","isUndefined","setForceUpdate","requestAnimationFrame","forceUpdate","fecharPainel","painelInfoType","painelInfoIsNull","painelInfoIsUndefined","warn","toggleVisibilidade","chave","JSON","stringify","MapaBase","EstadoSP","TerrasIndigenas","Marcadores","PainelInformacoes","closePainel"],"sourceRoot":""}
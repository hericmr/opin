{"version":3,"file":"static/js/992.27a86d50.chunk.js","mappings":"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","sources":["utils/mapConfig.js","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5 // Zoom ajustado para 5 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point, LineString } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Circle, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile, MobileInteractionManager } from '../utils/mobileUtils';\n\n// Componentes GeoJSON\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função debounce para suavizar o zoom\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Função para encontrar pares de marcadores próximos (adaptada do Leaflet)\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  // Log para debug do zoom recebido\n  console.log('OpenLayersMap - Debug zoom recebido:', {\n    center,\n    zoom,\n    defaultCenter: MAP_CONFIG.center,\n    defaultZoom: MAP_CONFIG.zoom,\n    mobileZoom: MAP_CONFIG.mobile.zoom\n  });\n\n  // Debug para onPainelOpen\n  console.log('OpenLayersMap - onPainelOpen disponível:', !!onPainelOpen);\n  console.log('OpenLayersMap - Tipo do onPainelOpen:', typeof onPainelOpen);\n\n  // Teste da função onPainelOpen (remover depois)\n  useEffect(() => {\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('OpenLayersMap: Testando função onPainelOpen...');\n      // Teste com dados mock (remover depois)\n      const testData = {\n        titulo: 'TESTE - Escola Teste',\n        id: 999,\n        tipo: 'escola',\n        latitude: -23.5505,\n        longitude: -46.6333\n      };\n      console.log('OpenLayersMap: Chamando onPainelOpen com dados de teste:', testData);\n      // onPainelOpen(testData); // Teste removido\n    }\n  }, [onPainelOpen]);\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Estado para controlar o zoom da barra\n  const [zoomValue, setZoomValue] = useState(zoom);\n  const [isZooming, setIsZooming] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Mobile interaction manager\n  const mobileInteraction = useRef(new MobileInteractionManager());\n  const [tooltipElement, setTooltipElement] = useState(null);\n  \n  // Estado para long press\n  const longPressTimeout = useRef(null);\n  const longPressDelay = 500; // 500ms para long press\n\n  // Função para aplicar zoom com animação suave\n  const applyZoom = useCallback((newZoom) => {\n    if (!map.current || !isInitialized) return;\n    \n    const view = map.current.getView();\n    const currentZoom = view.getZoom();\n    \n    // Limitar o zoom aos valores válidos\n    const clampedZoom = Math.max(4, Math.min(18, newZoom));\n    \n    // Se o zoom não mudou significativamente, não fazer nada\n    if (Math.abs(clampedZoom - currentZoom) < 0.01) return;\n    \n    // Calcular a diferença de zoom para determinar a duração da animação\n    const zoomDiff = Math.abs(clampedZoom - currentZoom);\n    const duration = Math.min(300 + (zoomDiff * 50), 800); // Duração baseada na diferença\n    \n    view.animate({\n      zoom: clampedZoom,\n      duration: duration,\n      easing: (t) => {\n        // Função de easing suave (ease-out)\n        return 1 - Math.pow(1 - t, 3);\n      }\n    });\n  }, [isInitialized]);\n\n  // Função debounced para aplicar zoom\n  const debouncedApplyZoom = useCallback(\n    debounce((newZoom) => {\n      applyZoom(newZoom);\n      setIsZooming(false);\n    }, 100),\n    [applyZoom]\n  );\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar estilo dos marcadores individuais\n  const createMarkerStyle = useCallback((feature) => {\n    try {\n      const schoolData = feature.get('schoolData');\n      if (!schoolData) {\n        console.log('OpenLayersMap: createMarkerStyle - feature sem schoolData');\n        return null;\n      }\n\n      console.log('OpenLayersMap: createMarkerStyle - criando estilo para:', schoolData.titulo);\n\n      const baseColor = '#3B82F6'; // Azul para satélite, violeta para rua\n      const borderColor = '#1E40AF';\n\n      // Verificar se é parte de um par próximo\n      const isNearbyPair = feature.get('isNearbyPair');\n      const pairIndex = feature.get('pairIndex');\n\n      // Usar a função createMarkerSVG para criar o marcador (tamanho reduzido)\n      const svg = createMarkerSVG(baseColor, 24, {\n        borderColor: borderColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: false,\n        isNearbyPair: isNearbyPair\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Criar estilo base com ícone (escala reduzida)\n      const style = new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: isNearbyPair ? 1.1 : 1.0, // Marcadores de pares próximos são ligeiramente maiores\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        })\n      });\n\n      // Adicionar texto apenas se showNomesEscolas for true\n      if (showNomesEscolas) {\n        style.setText(new Text({\n          text: schoolData.titulo || 'Escola',\n          font: 'bold 10px Arial',\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: isNearbyPair ? -35 : -30, // Ajustar posição para marcadores menores\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }));\n      }\n\n      console.log('OpenLayersMap: createMarkerStyle - estilo criado com sucesso para:', schoolData.titulo);\n      return style;\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do marcador:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [showNomesEscolas]);\n\n  // Função para criar estilo dos clusters\n  const createClusterStyle = useCallback((feature) => {\n    try {\n      const features = feature.get('features');\n      if (!features || features.length === 0) {\n        console.log('OpenLayersMap: createClusterStyle - feature sem features válidas');\n        return null; // Return null for invalid features\n      }\n      \n      const size = features.length;\n      console.log('OpenLayersMap: createClusterStyle - processando feature com', size, 'features');\n\n      // Se for apenas um marcador, retorna estilo individual\n      if (size === 1) {\n        const singleFeature = features[0];\n        if (!singleFeature) {\n          console.log('OpenLayersMap: createClusterStyle - singleFeature é null');\n          return null;\n        }\n        console.log('OpenLayersMap: createClusterStyle - retornando estilo individual para:', singleFeature.get('schoolData')?.titulo);\n        return createMarkerStyle(singleFeature);\n      }\n\n      // Determinar cor e tamanho base baseado na quantidade de escolas (tamanhos reduzidos)\n      let baseColor = '#3B82F6';\n      let baseSize = 32; // Tamanho base reduzido para clusters\n      \n      if (size > 100) {\n        baseColor = '#1E40AF';\n        baseSize = 40;\n      } else if (size > 50) {\n        baseColor = '#2563EB';\n        baseSize = 36;\n      } else if (size > 20) {\n        baseColor = '#3B82F6';\n        baseSize = 34;\n      } else if (size > 10) {\n        baseColor = '#60A5FA';\n        baseSize = 33;\n      }\n\n      // Calcular escala proporcional (mínimo 1.0x, máximo 1.8x)\n      const scale = Math.min(1.0 + (size * 0.015), 1.8);\n      const finalSize = Math.round(baseSize * scale);\n\n      // Usar a função createMarkerSVG para criar o cluster\n      const svg = createMarkerSVG(baseColor, finalSize, {\n        borderColor: baseColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: size > 20, // Adicionar brilho para clusters grandes\n        isNearbyPair: false // Clusters não têm indicador de par próximo\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Determinar tamanho da fonte baseado no tamanho do cluster (reduzido)\n      let fontSize = '12px';\n      let fontWeight = 'bold';\n      \n      if (size > 100) {\n        fontSize = '14px';\n      } else if (size > 50) {\n        fontSize = '13px';\n      } else if (size > 20) {\n        fontSize = '12px';\n      }\n\n      return new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: 1,\n          anchor: [0.5, 0.5],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        }),\n        text: new Text({\n          text: size.toString(),\n          font: `${fontWeight} ${fontSize} Arial`,\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: finalSize * 0.6 // Posicionar texto abaixo do marcador\n        })\n      });\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do cluster:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [createMarkerStyle]);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Função para mostrar tooltip temporário em mobile\n  const showMobileTooltip = useCallback((event, content) => {\n    try {\n      if (!isMobile()) return;\n\n      console.log('OpenLayersMap: Mostrando tooltip mobile:', content);\n\n      // Remove tooltip anterior\n      if (tooltipElement) {\n        tooltipElement.remove();\n        setTooltipElement(null);\n      }\n\n      const element = document.createElement('div');\n      element.className = 'mobile-tooltip';\n      element.innerHTML = `\n        <div style=\"font-weight: bold; margin-bottom: 4px;\">${content}</div>\n        <div style=\"font-size: 12px; opacity: 0.8;\">Toque novamente para abrir</div>\n      `;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';\n      element.style.color = 'white';\n      element.style.padding = '10px 14px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '14px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '280px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.4)';\n      element.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      if (map.current && event.coordinate) {\n        const coordinate = event.coordinate;\n        const pixel = map.current.getPixelFromCoordinate(coordinate);\n        if (pixel && mapContainer.current) {\n          element.style.left = (pixel[0] + 10) + 'px';\n          element.style.top = (pixel[1] - 10) + 'px';\n          \n          mapContainer.current.appendChild(element);\n          setTooltipElement(element);\n\n          // Auto-remove after 3 seconds (aumentado para dar mais tempo)\n          setTimeout(() => {\n            if (element.parentNode) {\n              element.remove();\n              setTooltipElement(null);\n            }\n          }, 3000);\n        }\n      }\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao mostrar tooltip mobile:', error);\n    }\n  }, [tooltipElement]);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15,\n      interactive: true // Garantir que a camada é interativa\n    });\n\n    console.log('OpenLayersMap: Camada vetorial criada com interatividade ativada');\n    \n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações padrão\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(center),\n        zoom: zoom,\n        maxZoom: 18,\n        minZoom: 4\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions()\n    });\n\n    console.log('OpenLayersMap: Mapa criado com interações:', map.current.getInteractions().getLength(), 'interações ativas');\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const currentMapZoom = view.getZoom();\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: currentMapZoom.toFixed(2)\n      };\n      \n      setMapInfo(newView);\n      \n      // Sincronizar com a barra de zoom apenas se não estiver sendo controlada pelo usuário\n      // e se já foi inicializado\n      if (!isZooming && isInitialized) {\n        const currentZoomValue = parseFloat(zoomValue);\n        // Só sincronizar se a diferença for significativa (evita micro-ajustes)\n        if (Math.abs(currentMapZoom - currentZoomValue) > 0.1) {\n          setZoomValue(currentMapZoom);\n        }\n      }\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      console.log('OpenLayersMap: Clique detectado no mapa');\n      console.log('OpenLayersMap: Pixel do clique:', event.pixel);\n      console.log('OpenLayersMap: Coordenada do clique:', event.coordinate);\n      \n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      console.log('OpenLayersMap: Feature encontrada pelo forEachFeatureAtPixel:', !!feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          console.log('OpenLayersMap: Cluster com', features.length, 'features');\n          \n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            console.log('OpenLayersMap: Cluster com 1 marcador - schoolData:', !!schoolData);\n            if (schoolData && onPainelOpen) {\n              onPainelOpen(schoolData);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            console.log(`OpenLayersMap: Cluster clicado com ${features.length} escolas`);\n            const clusterExtent = feature.getGeometry().getExtent();\n            const currentZoom = map.current.getView().getZoom();\n            let targetZoom = 12;\n            if (features.length > 20) {\n              targetZoom = 10;\n            } else if (features.length > 10) {\n              targetZoom = 11;\n            } else if (features.length > 5) {\n              targetZoom = 12;\n            } else {\n              targetZoom = 13;\n            }\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            map.current.getView().fit(clusterExtent, {\n              duration: 800,\n              padding: [80, 80, 80, 80],\n              maxZoom: targetZoom,\n              callback: () => {\n                console.log(`OpenLayersMap: Zoom concluído para cluster com ${features.length} escolas`);\n              }\n            });\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          console.log('OpenLayersMap: Marcador individual - schoolData:', !!schoolData);\n          if (schoolData && onPainelOpen) {\n            onPainelOpen(schoolData);\n          }\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n    let currentFeature = null;\n\n    map.current.on('pointermove', (event) => {\n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          console.log('OpenLayersMap: Cluster com', features.length, 'features');\n          \n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            console.log('OpenLayersMap: Cluster com 1 marcador - schoolData:', !!schoolData);\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          console.log('OpenLayersMap: Marcador individual - schoolData:', !!schoolData);\n          if (schoolData) {\n            tooltipElement = createTooltipElement(event, schoolData);\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, schoolData) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = createTooltipHTML(schoolData);\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o marcador\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do marcador\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n      if (tooltipElement) {\n        tooltipElement.remove();\n        setTooltipElement(null);\n      }\n      if (tooltipElement) {\n        tooltipElement.remove();\n      }\n      if (longPressTimeout.current) {\n        clearTimeout(longPressTimeout.current);\n        longPressTimeout.current = null;\n      }\n      mobileInteraction.current.reset();\n    };\n  }, [createBaseLayers, createClusterStyle, createTooltipHTML, showMobileTooltip, onPainelOpen]);\n\n  // Marcar como inicializado após um pequeno delay\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsInitialized(true);\n    }, 500);\n    \n    return () => clearTimeout(timer);\n  }, []);\n\n  // Sincronizar zoom inicial apenas uma vez\n  useEffect(() => {\n    if (!isInitialized) {\n      setZoomValue(zoom);\n    }\n  }, [zoom, isInitialized]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    console.log(`OpenLayersMap: Processando ${pontosValidos.length} marcadores válidos`);\n    console.log(`OpenLayersMap: Encontrados ${nearbyPairs.length} pares próximos`);\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        feature.set('isNearbyPair', pairIndex !== -1);\n        feature.set('pairIndex', pairIndex !== -1 ? pairIndex : null);\n        vectorSource.current.addFeature(feature);\n        if (index === 0) {\n          console.log('OpenLayersMap: Primeiro marcador criado:', {\n            ...point,\n            feature,\n            hasSchoolData: !!feature.get('schoolData')\n          });\n        }\n      }\n    });\n\n    // Forçar atualização do ClusterSource após adicionar features\n    if (clusterSource.current) {\n      clusterSource.current.refresh();\n      const clusterFeatures = clusterSource.current.getFeatures();\n      console.log('OpenLayersMap: ClusterSource atualizado. Total de features no ClusterSource:', clusterFeatures.length);\n    }\n\n    console.log(`OpenLayersMap: Adicionados ${pontosValidos.length} marcadores com clustering inteligente`);\n    \n    // Verificar se os marcadores foram criados corretamente\n    const allFeatures = vectorSource.current.getFeatures();\n    console.log('OpenLayersMap: Total de features na fonte:', allFeatures.length);\n    if (allFeatures.length > 0) {\n      console.log('OpenLayersMap: Primeira feature:', {\n        hasGeometry: !!allFeatures[0].getGeometry(),\n        hasSchoolData: !!allFeatures[0].get('schoolData'),\n        schoolData: allFeatures[0].get('schoolData')\n      });\n    }\n    \n    // Verificar se o ClusterSource está funcionando\n    const clusterFeatures = clusterSource.current.getFeatures();\n    console.log('OpenLayersMap: Total de features no ClusterSource:', clusterFeatures.length);\n    if (clusterFeatures.length > 0) {\n      console.log('OpenLayersMap: Primeira feature do cluster:', {\n        hasFeatures: !!clusterFeatures[0].get('features'),\n        featuresCount: clusterFeatures[0].get('features')?.length || 0,\n        hasGeometry: !!clusterFeatures[0].getGeometry()\n      });\n    }\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle(createClusterStyle);\n    }\n  }, [createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      console.log('OpenLayersMap: Atualizando estilo dos marcadores - showNomesEscolas:', showNomesEscolas);\n      vectorLayer.current.setStyle(createClusterStyle);\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n\n    console.log('OpenLayersMap: Recriando ClusterSource - showNomesEscolas:', showNomesEscolas);\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    console.log('OpenLayersMap: Gerenciando camadas GeoJSON:', {\n      showTerrasIndigenas,\n      showEstadoSP,\n      terrasIndigenasData: !!terrasIndigenasData,\n      estadoSPData: !!estadoSPData,\n      terrasFeatures: terrasIndigenasData?.features?.length || 0,\n      estadoFeatures: estadoSPData?.features?.length || 0,\n      mapLayers: map.current.getLayers().getLength()\n    });\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      console.log('OpenLayersMap: Adicionando camada Terras Indígenas');\n      console.log('OpenLayersMap: Dados Terras Indígenas:', {\n        type: terrasIndigenasData.type,\n        features: terrasIndigenasData.features?.length || 0,\n        crs: terrasIndigenasData.crs,\n        firstFeature: terrasIndigenasData.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades',\n          geometry: terrasIndigenasData.features[0].geometry ? {\n            type: terrasIndigenasData.features[0].geometry.type,\n            coordinates: terrasIndigenasData.features[0].geometry.coordinates ? \n              `${terrasIndigenasData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Terras Indígenas não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = terrasIndigenasData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada das Terras Indígenas:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        console.log('OpenLayersMap: Features lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: (feature) => {\n            const properties = feature.getProperties();\n            const isRegularizada = properties.fase_ti === 'Regularizada';\n            \n            return new Style({\n              fill: new Fill({\n                color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n              }),\n              stroke: new Stroke({\n                color: '#B22222',\n                width: 2,\n                lineDash: [3, 3]\n              })\n            });\n          },\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n        console.log('OpenLayersMap: Camada Terras Indígenas adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Terras Indígenas:', error);\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      console.log('OpenLayersMap: Adicionando camada Estado SP');\n      console.log('OpenLayersMap: Dados Estado SP:', {\n        type: estadoSPData.type,\n        features: estadoSPData.features?.length || 0,\n        crs: estadoSPData.crs,\n        firstFeature: estadoSPData.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades',\n          geometry: estadoSPData.features[0].geometry ? {\n            type: estadoSPData.features[0].geometry.type,\n            coordinates: estadoSPData.features[0].geometry.coordinates ? \n              `${estadoSPData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Estado SP não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = estadoSPData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada do Estado SP:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas Estado SP:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        console.log('OpenLayersMap: Features Estado SP lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature Estado SP processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: new Style({\n            fill: new Fill({\n              color: 'rgba(0, 0, 0, 0.3)'\n            }),\n            stroke: new Stroke({\n              color: '#000000',\n              width: 2\n            })\n          }),\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n        console.log('OpenLayersMap: Camada Estado SP adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Estado SP:', error);\n      }\n    }\n\n    console.log('OpenLayersMap: Finalização - Total de camadas no mapa:', map.current.getLayers().getLength());\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  // Adicionar event listeners para camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo && onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n    };\n  }, [onPainelOpen]);\n\n  return (\n    <div className={className} ref={mapContainer}>\n      {/* Barra de zoom */}\n      <div className=\"absolute bottom-20 sm:bottom-4 left-4 z-10 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"flex flex-col items-center space-y-1\">\n          {/* Botão de zoom in */}\n          <button\n            onClick={() => {\n              const newZoom = Math.min(18, parseFloat(zoomValue) + 1);\n              setZoomValue(newZoom);\n              setIsZooming(true);\n              applyZoom(newZoom);\n            }}\n            className=\"w-6 h-6 bg-white border border-gray-300 rounded shadow-sm hover:bg-gray-50 transition-colors duration-200 flex items-center justify-center text-gray-600 hover:text-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n            title=\"Zoom In\"\n            disabled={parseFloat(zoomValue) >= 18}\n          >\n            <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n            </svg>\n          </button>\n          \n          {/* Slider de zoom vertical */}\n          <div className=\"relative\">\n            <input\n              type=\"range\"\n              min=\"4\"\n              max=\"18\"\n              step=\"0.1\"\n              value={zoomValue}\n              onChange={(e) => {\n                const newZoom = parseFloat(e.target.value);\n                setZoomValue(newZoom);\n                setIsZooming(true);\n                debouncedApplyZoom(newZoom);\n              }}\n              onMouseDown={() => setIsZooming(true)}\n              onMouseUp={() => {\n                setTimeout(() => setIsZooming(false), 150);\n              }}\n              onTouchStart={() => setIsZooming(true)}\n              onTouchEnd={() => {\n                setTimeout(() => setIsZooming(false), 150);\n              }}\n              className=\"h-16 w-1 bg-gray-200 rounded appearance-none cursor-pointer slider-vertical\"\n              style={{\n                background: `linear-gradient(to bottom, #e5e7eb 0%, #e5e7eb ${100 - ((zoomValue - 4) / 14) * 100}%, #3b82f6 ${100 - ((zoomValue - 4) / 14) * 100}%, #3b82f6 100%)`,\n                outline: 'none',\n                transition: 'background 0.2s ease'\n              }}\n            />\n          </div>\n          \n          {/* Botão de zoom out */}\n          <button\n            onClick={() => {\n              const newZoom = Math.max(4, parseFloat(zoomValue) - 1);\n              setZoomValue(newZoom);\n              setIsZooming(true);\n              applyZoom(newZoom);\n            }}\n            className=\"w-6 h-6 bg-white border border-gray-300 rounded shadow-sm hover:bg-gray-50 transition-colors duration-200 flex items-center justify-center text-gray-600 hover:text-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n            title=\"Zoom Out\"\n            disabled={parseFloat(zoomValue) <= 4}\n          >\n            <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  // Log para debug do onPainelOpen\n  console.log('MapSelector - onPainelOpen disponível:', !!onPainelOpen);\n  console.log('MapSelector - Tipo do onPainelOpen:', typeof onPainelOpen);\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    console.log('MapaEscolasIndigenas: abrirPainel chamado com:', {\n      info,\n      titulo: info?.titulo,\n      tipo: info?.tipo,\n      id: info?.id,\n      isNull: info === null,\n      isUndefined: info === undefined\n    });\n    \n    if (!info) {\n      console.warn('MapaEscolasIndigenas: abrirPainel recebeu info null/undefined');\n      return;\n    }\n    \n    console.log('MapaEscolasIndigenas: Definindo painelInfo como:', info);\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n      \n      {/* Informações adicionais */}\n      <div className=\"absolute top-20 left-4 z-30 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-sm font-semibold text-gray-800\">\n          Escolas Indígenas: {totalEscolas}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Mapa otimizado sem gaps\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  // Verificar por user agent primeiro\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  const isMobileUserAgent = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent.toLowerCase());\n  \n  // Verificar por tamanho da tela\n  const isMobileScreen = window.innerWidth <= 768;\n  \n  // Verificar por touch capability\n  const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  \n  console.log('Mobile detection:', {\n    userAgent: userAgent,\n    isMobileUserAgent,\n    isMobileScreen,\n    isTouchDevice,\n    windowWidth: window.innerWidth,\n    windowHeight: window.innerHeight\n  });\n  \n  // Retornar true se qualquer um dos critérios for verdadeiro\n  return isMobileUserAgent || isMobileScreen || isTouchDevice;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n// Mobile interaction state management\nexport class MobileInteractionManager {\n  constructor() {\n    this.lastClickedFeature = null;\n    this.clickTimeout = null;\n    this.clickDelay = 500; // Aumentado para 500ms para dar mais tempo\n    this.lastClickTime = 0;\n  }\n\n  handleClick(feature, onFirstClick, onSecondClick) {\n    const currentTime = Date.now();\n    const isMobileDevice = isMobile();\n    \n    console.log('MobileInteractionManager: handleClick chamado', {\n      isMobile: isMobileDevice,\n      feature: feature ? 'presente' : 'ausente',\n      lastClickedFeature: this.lastClickedFeature ? 'presente' : 'ausente',\n      timeSinceLastClick: currentTime - this.lastClickTime,\n      clickDelay: this.clickDelay\n    });\n\n    if (!isMobileDevice) {\n      // Desktop behavior - direct action\n      console.log('MobileInteractionManager: Desktop - executando ação direta');\n      onSecondClick(feature);\n      return;\n    }\n\n    // Mobile behavior - two-click pattern\n    if (this.lastClickedFeature === feature && (currentTime - this.lastClickTime) < this.clickDelay) {\n      // Second click on same feature within timeout\n      console.log('MobileInteractionManager: Segundo clique detectado - executando ação');\n      this.clearTimeout();\n      this.lastClickedFeature = null;\n      this.lastClickTime = 0;\n      onSecondClick(feature);\n    } else {\n      // First click or click on different feature\n      console.log('MobileInteractionManager: Primeiro clique detectado');\n      \n      if (this.lastClickedFeature) {\n        // Clear previous first click\n        this.clearTimeout();\n      }\n      \n      this.lastClickedFeature = feature;\n      this.lastClickTime = currentTime;\n      onFirstClick(feature);\n      \n      // Set timeout to clear first click\n      this.clickTimeout = setTimeout(() => {\n        console.log('MobileInteractionManager: Timeout expirado - limpando primeiro clique');\n        this.lastClickedFeature = null;\n        this.lastClickTime = 0;\n      }, this.clickDelay);\n    }\n  }\n\n  clearTimeout() {\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n  }\n\n  reset() {\n    console.log('MobileInteractionManager: Reset chamado');\n    this.clearTimeout();\n    this.lastClickedFeature = null;\n    this.lastClickTime = 0;\n  }\n} "],"names":["MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","proj4","defs","register","PROXIMITY_THRESHOLD","createMarkerSVG","color","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","_ref","dataPoints","onPainelOpen","className","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","showNomesEscolas","console","log","defaultCenter","defaultZoom","mobileZoom","useEffect","testData","titulo","id","tipo","latitude","longitude","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","zoomValue","setZoomValue","isZooming","setIsZooming","isInitialized","setIsInitialized","terrasIndigenasLayerRef","estadoSPLayerRef","mobileInteraction","MobileInteractionManager","tooltipElement","setTooltipElement","longPressTimeout","applyZoom","useCallback","newZoom","current","view","getView","currentZoom","getZoom","clampedZoom","Math","max","min","abs","zoomDiff","duration","animate","easing","t","pow","debouncedApplyZoom","debounce","func","wait","timeout","_len","args","Array","_key","clearTimeout","setTimeout","later","createBaseLayers","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createMarkerStyle","feature","schoolData","get","svg","svgUrl","encodeURIComponent","style","Style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","font","fill","Fill","stroke","Stroke","width","offsetY","textAlign","textBaseline","error","createClusterStyle","features","_singleFeature$get","singleFeature","baseSize","finalSize","round","fontSize","fontWeight","toString","createTooltipHTML","showMobileTooltip","event","content","isMobile","remove","element","document","createElement","innerHTML","position","backgroundColor","padding","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","zIndex","pointerEvents","boxShadow","border","backdropFilter","coordinate","pixel","getPixelFromCoordinate","left","top","appendChild","parentNode","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","interactive","Map","target","layers","View","fromLonLat","controls","defaultControls","interactions","defaultInteractions","getInteractions","getLength","on","toLonLat","getCenter","currentMapZoom","newView","toFixed","currentZoomValue","parseFloat","changed","forEachFeatureAtPixel","clusterExtent","getExtent","targetZoom","fit","callback","createTooltipElement","createClusterTooltipElement","textContent","count","setTarget","reset","timer","clear","pontosValidos","filter","point","isNaN","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","pairIndex","findIndex","pair","includes","addFeature","_objectSpread","hasSchoolData","refresh","clusterFeatures","getFeatures","allFeatures","hasGeometry","_clusterFeatures$0$ge","hasFeatures","featuresCount","setStyle","removeLayer","addLayer","_terrasIndigenasData$","_estadoSPData$feature","terrasFeatures","estadoFeatures","mapLayers","getLayers","_terrasIndigenasData$2","_terrasIndigenasData$3","type","crs","firstFeature","properties","Object","keys","coordinates","coords","GeoJSON","dataProjection","featureProjection","readFeatures","extent","getProperties","terrasIndigenasLayer","isRegularizada","fase_ti","lineDash","getSource","terrai_nom","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","_estadoSPData$feature2","_estadoSPData$feature3","estadoSPLayer","handleClick","terraIndigenaInfo","un","_jsx","ref","children","_jsxs","onClick","title","disabled","height","viewBox","strokeWidth","x1","y1","x2","y2","step","value","onChange","e","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","background","outline","transition","cache","useGeoJSONCache","key","data","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","err","fetchGeoJSON","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","terrasIndigenas","hasData","estadoSP","CabecalhoMenu","_ref2","onMinimize","BotaoCamada","_ref3","label","checked","total","subItems","item","mapCenter","mapZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","quantidade","exemplo","refreshKey","useRefresh","panel","useMemo","URLSearchParams","location","search","initialPanel","find","criarSlug","painelInfo","setPainelInfo","escolasVisiveis","pontuacao","totalEscolas","group","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","groupEnd","abrirPainel","info","warn","refreshPainel","fecharPainel","MapSelector","_Fragment","PainelInformacoes","closePainel","userAgent","navigator","vendor","opera","isMobileUserAgent","test","toLowerCase","isMobileScreen","isTouchDevice","maxTouchPoints","windowWidth","windowHeight","innerHeight","constructor","this","lastClickedFeature","clickTimeout","clickDelay","lastClickTime","onFirstClick","onSecondClick","currentTime","Date","now","isMobileDevice","timeSinceLastClick"],"sourceRoot":""}
{"version":3,"file":"static/js/250.b669d4f8.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/GeoJSON.js","components/TerrasIndigenas.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import React, { useCallback, useMemo, useEffect } from 'react';\nimport { GeoJSON, useMap } from 'react-leaflet';\nimport L from 'leaflet';\n\nconst TerrasIndigenas = ({ data, onClick }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"TerrasIndigenas: Dados recebidos:\", {\n        type: data.type,\n        features: data.features ? data.features.length : 0,\n        properties: data.features ? data.features[0].properties : null\n      });\n    } else {\n      console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    }\n  }, [data]);\n\n  // Estilo padrão das terras indígenas\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#B22222', // Vermelho escuro na borda\n      weight: 2,\n      fillOpacity: 0.3,\n      fillColor: '#DC143C', // Vermelho vivo no preenchimento\n      dashArray: '3',\n      zIndex: 2\n    }),\n    []\n  );\n\n  // Função para determinar o estilo baseado no status da terra indígena\n  const style = useCallback(\n    (feature) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades:\", feature);\n        return defaultStyle;\n      }\n\n      const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n      console.log(`Terra indígena ${feature.properties.terrai_nom}: ${isRegularizada ? 'Regularizada' : 'Não Regularizada'}`);\n      \n      return {\n        ...defaultStyle,\n        fillColor: isRegularizada ? '#DC143C' : '#8B0000', // Regularizada vermelho vivo, não regularizada vermelho escuro\n        fillOpacity: isRegularizada ? 0.3 : 0.25\n      };\n    },\n    [defaultStyle]\n  );\n\n  // Estilo quando o mouse passa por cima\n  const hoverStyle = {\n    weight: 3,\n    color: '#FF0000', // Vermelho puro na borda ao passar o mouse\n    fillOpacity: 0.45,\n    dashArray: ''\n  };\n\n  const onEachFeature = useCallback(\n    (feature, layer) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades no onEachFeature:\", feature);\n        return;\n      }\n\n      // Adiciona tooltip com informações básicas\n      const tooltipContent = `\n        <div class=\"bg-white p-2 rounded shadow-md\">\n          <strong>${feature.properties.terrai_nom || 'Nome não disponível'}</strong><br/>\n          ${feature.properties.etnia_nome || 'Etnia não disponível'}<br/>\n          ${feature.properties.fase_ti || 'Fase não disponível'}\n        </div>\n      `;\n      layer.bindTooltip(tooltipContent, {\n        sticky: true,\n        className: 'custom-tooltip'\n      });\n\n      layer.on({\n        mouseover: (e) => {\n          const layer = e.target;\n          layer.setStyle(hoverStyle);\n          layer.bringToFront();\n        },\n        mouseout: (e) => {\n          e.target.setStyle(style(feature));\n        },\n        click: (e) => {\n          const layer = e.target;\n\n          // Prepara os dados para o painel\n          const terraIndigenaInfo = {\n            titulo: feature.properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: feature.properties.etnia_nome,\n            municipio: feature.properties.municipio_,\n            uf: feature.properties.uf_sigla,\n            superficie: feature.properties.superficie,\n            fase: feature.properties.fase_ti,\n            modalidade: feature.properties.modalidade,\n            reestudo: feature.properties.reestudo_t,\n            cr: feature.properties.cr,\n            faixa_fron: feature.properties.faixa_fron,\n            undadm_nom: feature.properties.undadm_nom,\n            undadm_sig: feature.properties.undadm_sig,\n            dominio_un: feature.properties.dominio_un,\n            data_atual: feature.properties.data_atual,\n            terrai_cod: feature.properties.terrai_cod,\n            undadm_cod: feature.properties.undadm_cod\n          };\n\n          if (onClick) {\n            onClick(terraIndigenaInfo);\n          }\n        }\n      });\n    },\n    [map, style, onClick]\n  );\n\n  if (!data) {\n    console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    return null;\n  }\n\n  if (!data.type || data.type !== 'FeatureCollection') {\n    console.error(\"TerrasIndigenas: Formato de GeoJSON inválido. Esperado FeatureCollection, recebido:\", data.type);\n    return null;\n  }\n\n  if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n    console.error(\"TerrasIndigenas: GeoJSON sem features válidas\");\n    return null;\n  }\n\n  return <GeoJSON data={data} style={style} onEachFeature={onEachFeature} />;\n};\n\nexport default TerrasIndigenas; "],"names":["GeoJSON","createPathComponent","_ref","ctx","data","options","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","layer","props","prevProps","style","resetStyle","setStyle","onClick","map","useMap","useEffect","console","log","type","features","length","properties","warn","defaultStyle","useMemo","color","weight","fillOpacity","fillColor","dashArray","zIndex","useCallback","feature","isRegularizada","fase_ti","concat","terrai_nom","_objectSpread","hoverStyle","onEachFeature","tooltipContent","etnia_nome","bindTooltip","sticky","className","on","mouseover","e","target","bringToFront","mouseout","click","terraIndigenaInfo","titulo","tipo","etnia","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","Array","isArray","_jsx","error"],"sourceRoot":""}
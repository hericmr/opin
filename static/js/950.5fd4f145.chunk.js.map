{"version":3,"file":"static/js/950.5fd4f145.chunk.js","mappings":"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","sources":["utils/textFormatting.js","utils/mapConfig.js","components/map/MapWrapper.jsx","utils/markers/featureStyles.js","utils/markers/svgGenerator.js","utils/markers/markerStyles.js","components/OpenLayersMap.js","utils/markers/proximityUtils.js","hooks/useGeoJSONCache.js","components/MapSelector.js","utils/slug.js","components/hooks/useDocumentosEscola.js","components/PainelInformacoes/components/InfoSection.js","components/PainelInformacoes/components/EscolaInfo/BasicInfo.js","components/PainelInformacoes/components/ImagensdasEscolas.js","components/PainelInformacoes/components/EscolaInfo/HistoriaEscola.js","components/PainelInformacoes/components/BooleanValue.js","components/PainelInformacoes/components/EscolaInfo/Modalidades.js","components/PainelInformacoes/components/EscolaInfo/Infraestrutura.js","components/PainelInformacoes/components/EscolaInfo/GestaoProfessores.js","components/PainelInformacoes/components/EscolaInfo/ProjetosParcerias.js","components/PainelInformacoes/components/ImagemHistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/HistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/index.js","components/PainelInformacoes/icons/HandFistIcon.js","components/PainelInformacoes/components/InfoItem.js","components/PainelInformacoes/TerraIndigenaInfo.js","components/ShareButton.js","components/PainelInformacoes/ShareSection.js","components/PainelDescricao.js","components/PainelInformacoes/IntroPanel.js","components/PainelHeader.js","components/hooks/usePainelVisibility.js","components/PainelInformacoes/components/PainelContainer.js","components/hooks/usePainelDimensions.js","components/PainelInformacoes/components/VideoPlayer.js","components/PainelInformacoes/index.js","components/hooks/useShare.js","components/hooks/useClickOutside.js","components/hooks/useDynamicURL.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["/**\n * Utility functions for text formatting\n */\n\n/**\n * Lista de siglas que devem permanecer em maiúsculas\n */\nconst SIGLAS_MAIUSCULAS = ['EE', 'EEI'];\n\n/**\n * Capitalizes the first letter of each word in a string, keeping specific acronyms in uppercase\n * @param {string} str - The string to capitalize\n * @returns {string} The capitalized string\n */\nexport const capitalizeWords = (str) => {\n  if (!str || typeof str !== 'string') return '';\n  \n  // Primeiro, divide a string em palavras\n  const words = str.split(/\\s+/);\n  \n  // Processa cada palavra\n  const processedWords = words.map(word => {\n    // Verifica se a palavra é uma sigla que deve permanecer em maiúsculas\n    if (SIGLAS_MAIUSCULAS.includes(word.toUpperCase())) {\n      return word.toUpperCase();\n    }\n    \n    // Para outras palavras, aplica a capitalização normal\n    return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n  });\n  \n  // Junta as palavras de volta em uma string\n  return processedWords.join(' ');\n}; \n\n/**\n * Normalizes an address string by capitalizing words and handling common address abbreviations\n * @param {string} address - The address string to normalize\n * @returns {string} The normalized address string\n */\nexport const normalizeAddress = (address) => {\n  if (!address || typeof address !== 'string') return '';\n\n  // Lista de abreviações comuns em endereços\n  const abbreviations = {\n    'r.': 'Rua',\n    'av.': 'Avenida',\n    'al.': 'Alameda',\n    'pr.': 'Praça',\n    'tr.': 'Travessa',\n    'rod.': 'Rodovia',\n    'est.': 'Estrada',\n    'n.': 'Número',\n    'nº': 'Número',\n    'apt.': 'Apartamento',\n    'bl.': 'Bloco',\n    'qd.': 'Quadra',\n    'lt.': 'Lote',\n    'km': 'KM',\n    's/n': 'S/N'\n  };\n\n  // Primeiro, substitui as abreviações\n  let normalized = address.toLowerCase();\n  Object.entries(abbreviations).forEach(([abbr, full]) => {\n    normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'g'), full);\n  });\n\n  // Depois aplica a capitalização de palavras\n  return capitalizeWords(normalized);\n}; ","// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React from 'react';\n\nconst MapWrapper = React.forwardRef((props, ref) => {\n  return <div id=\"map\" className=\"w-full h-full\" ref={ref} {...props} />;\n});\n\nexport default MapWrapper; ","import { Style, Fill, Stroke } from 'ol/style';\n\n/**\n * Função de estilo para features de Terras Indígenas.\n * @param {ol.Feature} feature - Feature do OpenLayers.\n * @returns {ol.style.Style} Objeto de estilo do OpenLayers para a feature.\n */\nexport function terrasIndigenasStyle(feature) {\n  const properties = feature.getProperties();\n  const isRegularizada = properties.fase_ti === 'Regularizada';\n\n  return new Style({\n    fill: new Fill({\n      color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n    }),\n    stroke: new Stroke({\n      color: '#B22222',\n      width: 2,\n      lineDash: [3, 3]\n    })\n  });\n}\n\n/**\n * Função de estilo para features do Estado de SP.\n * @returns {ol.style.Style} Objeto de estilo do OpenLayers para a feature.\n */\nexport function estadoSPStyle() {\n  return new Style({\n    fill: new Fill({\n      color: 'rgba(0, 0, 0, 0.3)'\n    }),\n    stroke: new Stroke({\n      color: '#000000',\n      width: 2\n    })\n  });\n} ","/**\n * Gera SVG de marcador customizado para o mapa.\n * @param {string} color - Cor base do marcador.\n * @param {number} [size=24] - Tamanho do marcador.\n * @param {Object} options - Opções de customização.\n * @returns {string} SVG como string.\n */\nexport function createMarkerSVG(color, size = 24, options = {}) {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n}\n\n/**\n * Função para criar SVG de cluster\n * @param {string} color - Cor do cluster\n * @param {number} size - Tamanho do cluster\n * @param {number} count - Número de itens no cluster\n * @returns {string} SVG como string\n */\nexport const createClusterSVG = (color, size, count) => {\n  return createMarkerSVG(color, size, {\n    showShadow: true,\n    showGradient: true,\n    showGlow: count > 20,\n    isNearbyPair: false\n  });\n}; ","/**\n * Cria o estilo de marcador individual para o OpenLayers.\n * @param {ol.Feature} feature - Feature do marcador.\n * @param {boolean} showNomesEscolas - Se deve mostrar o nome da escola.\n * @returns {ol.style.Style|null} Estilo do marcador ou null.\n */\nimport { Style, Icon, Text, Fill, Stroke } from 'ol/style';\nimport { createMarkerSVG } from './svgGenerator';\n\nexport function createMarkerStyle(feature, showNomesEscolas = false) {\n  try {\n    const schoolData = feature.get('schoolData');\n    if (!schoolData) return null;\n\n    const baseColor = '#3B82F6';\n    const borderColor = '#1E40AF';\n    const isNearbyPair = feature.get('isNearbyPair');\n\n    // Gerar SVG dinamicamente\n    const svg = createMarkerSVG(baseColor, 24, {\n      borderColor: borderColor,\n      showShadow: true,\n      showGradient: true,\n      showGlow: false,\n      isNearbyPair: isNearbyPair\n    });\n    const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n    const style = new Style({\n      image: new Icon({\n        src: svgUrl,\n        scale: isNearbyPair ? 1.1 : 1.0,\n        anchor: [0.5, 1],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction'\n      })\n    });\n\n    if (showNomesEscolas) {\n      style.setText(new Text({\n        text: schoolData.titulo || 'Escola',\n        font: 'bold 10px Arial',\n        fill: new Fill({ color: '#FFFFFF' }),\n        stroke: new Stroke({ color: '#000000', width: 2 }),\n        offsetY: isNearbyPair ? -35 : -30,\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }));\n    }\n\n    return style;\n  } catch (error) {\n    return null;\n  }\n}\n\n/**\n * Cria o estilo de cluster de marcadores para o OpenLayers.\n * @param {ol.Feature} feature - Feature do cluster.\n * @param {Function} createMarkerStyle - Função para criar estilo de marcador individual.\n * @returns {ol.style.Style|null} Estilo do cluster ou null.\n */\nexport function createClusterStyle(feature, createMarkerStyle) {\n  try {\n    const features = feature.get('features');\n    if (!features || features.length === 0) return null;\n    const size = features.length;\n\n    if (size === 1) {\n      const singleFeature = features[0];\n      if (!singleFeature) return null;\n      return createMarkerStyle(singleFeature);\n    }\n\n    let baseColor = '#3B82F6';\n    let baseSize = 32;\n    if (size > 100) {\n      baseColor = '#1E40AF';\n      baseSize = 40;\n    } else if (size > 50) {\n      baseColor = '#2563EB';\n      baseSize = 36;\n    } else if (size > 20) {\n      baseColor = '#3B82F6';\n      baseSize = 34;\n    } else if (size > 10) {\n      baseColor = '#60A5FA';\n      baseSize = 33;\n    }\n    const scale = Math.min(1.0 + (size * 0.015), 1.8);\n    const finalSize = Math.round(baseSize * scale);\n\n    // Gerar SVG dinamicamente\n    const svg = createMarkerSVG(baseColor, finalSize, {\n      borderColor: baseColor,\n      showShadow: true,\n      showGradient: true,\n      showGlow: size > 20,\n      isNearbyPair: false\n    });\n    const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n    let fontSize = '12px';\n    let fontWeight = 'bold';\n    if (size > 100) fontSize = '14px';\n    else if (size > 50) fontSize = '13px';\n    else if (size > 20) fontSize = '12px';\n\n    return new Style({\n      image: new Icon({\n        src: svgUrl,\n        scale: 1,\n        anchor: [0.5, 0.5],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction'\n      }),\n      text: new Text({\n        text: size.toString(),\n        font: `${fontWeight} ${fontSize} Arial`,\n        fill: new Fill({ color: '#FFFFFF' }),\n        stroke: new Stroke({ color: '#000000', width: 2 }),\n        offsetY: finalSize * 0.6\n      })\n    });\n  } catch (error) {\n    return null;\n  }\n} ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\nimport MapWrapper from './map/MapWrapper';\nimport { findNearbyPairs } from '../utils/markers/proximityUtils';\nimport { terrasIndigenasStyle, estadoSPStyle } from '../utils/markers/featureStyles';\nimport { handleMarkerClick, handleGeoJSONClick } from '../utils/markers/handlers';\nimport { createMarkerStyle, createClusterStyle } from '../utils/markers/markerStyles';\n\n// Componentes GeoJSON\n// import OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\n// import OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Função para gerenciar cliques em marcador de escola (um clique abre o painel)\n  const handleMarkerClick = useCallback((feature, event) => {\n    const schoolData = feature.get('schoolData');\n    if (schoolData) {\n      if (isMobile()) {\n        console.log('[MOBILE] Marcador de escola clicado:', schoolData);\n      }\n      onPainelOpen?.(schoolData);\n    }\n  }, [onPainelOpen]);\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Verificar se é mobile e ajustar configurações\n    const isMobileDevice = isMobile();\n    const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: 18,\n        minZoom: 4,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions({\n        dragRotate: false, // Desabilitar rotação com arraste\n        pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      })\n    });\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            console.log('[CLUSTER] Clique em cluster com 1 marcador', features[0].get('schoolData'));\n            handleMarkerClick(features[0], event);\n          } else if (features.length > 1) {\n            console.log('[CLUSTER] Clique em cluster com', features.length, 'marcadores. Fazendo zoom.');\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            const clusterExtent = feature.getGeometry().getExtent();\n            const currentZoom = map.current.getView().getZoom();\n            let targetZoom = 12;\n            if (features.length > 20) {\n              targetZoom = 10;\n            } else if (features.length > 10) {\n              targetZoom = 11;\n            } else if (features.length > 5) {\n              targetZoom = 12;\n            } else {\n              targetZoom = 13;\n            }\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            map.current.getView().fit(clusterExtent, {\n              duration: 800,\n              padding: [80, 80, 80, 80],\n              maxZoom: targetZoom\n            });\n          }\n        } else {\n          console.log('[MARCADOR] Clique em marcador individual', feature.get('schoolData'));\n          // Marcador individual\n          handleMarkerClick(feature, event);\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n\n    map.current.on('pointermove', (event) => {\n      // Desabilitar tooltips de hover no mobile\n      if (isMobile()) return;\n      \n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador, mostrar tooltip\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData, 'school');\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Verificar se é um marcador de escola ou terra indígena\n          const schoolData = feature.get('schoolData');\n          const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n          \n          if (schoolData) {\n            // Marcador de escola - tooltip azul\n            tooltipElement = createTooltipElement(event, schoolData, 'school');\n          } else if (terraIndigenaInfo) {\n            // Terra indígena - tooltip vermelho\n            tooltipElement = createTooltipElement(event, terraIndigenaInfo, 'terra_indigena');\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, data, type) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.setAttribute('data-type', type);\n      \n      // Determinar o conteúdo e estilo baseado no tipo\n      let content, backgroundColor, borderColor;\n      \n      if (type === 'school') {\n        content = createTooltipHTML(data);\n        backgroundColor = 'rgba(59, 130, 246, 0.95)'; // Azul para escolas\n        borderColor = 'rgba(37, 99, 235, 0.8)';\n      } else if (type === 'terra_indigena') {\n        content = `Terra Indígena ${data.titulo || 'Indígena'}`;\n        backgroundColor = 'rgba(220, 20, 60, 0.95)'; // Vermelho para terras indígenas\n        borderColor = 'rgba(185, 28, 28, 0.8)';\n      }\n      \n      element.textContent = content;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = backgroundColor;\n      element.style.color = 'white';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.25)';\n      element.style.border = `1px solid ${borderColor}`;\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o elemento\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do elemento\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Desabilitar zoom no double click em marcadores individuais ou cluster de 1 escola\n    map.current.on('dblclick', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Se for marcador individual ou cluster de 1 escola, previne o zoom\n        if (!feature.get('features') || (feature.get('features') && feature.get('features').length === 1)) {\n          event.preventDefault();\n          event.stopPropagation();\n          console.log('[DBLCLICK] Zoom desabilitado em marcador individual ou cluster de 1 escola');\n        }\n      }\n    });\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [center, zoom, createBaseLayers, createClusterStyle, createTooltipHTML, onPainelOpen, handleMarkerClick]);\n\n  // Atualizar configurações do mapa quando props mudarem\n  useEffect(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom, showNomesEscolas]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        \n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        if (pairIndex !== -1) {\n          feature.set('isNearbyPair', true);\n        }\n        \n        vectorSource.current.addFeature(feature);\n      }\n    });\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle((feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)));\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle((feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)));\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    // Variáveis para controlar o sistema de clique duplo\n    let clickTimeout = null;\n    let lastClickedFeature = null;\n    let clickCount = 0;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo) {\n          // Verificar se é mobile\n          if (isMobile()) {\n            // No mobile: clique único abre o painel diretamente\n            if (onPainelOpen) {\n              onPainelOpen(terraIndigenaInfo);\n            }\n          } else {\n            // No desktop: manter comportamento de clique duplo\n            // Verificar se é o mesmo feature clicado anteriormente\n            if (lastClickedFeature === feature) {\n              clickCount++;\n            } else {\n              // Novo feature, resetar contador\n              lastClickedFeature = feature;\n              clickCount = 1;\n            }\n\n            // Limpar timeout anterior\n            if (clickTimeout) {\n              clearTimeout(clickTimeout);\n            }\n\n            // Configurar timeout para resetar o contador\n            clickTimeout = setTimeout(() => {\n              clickCount = 0;\n              lastClickedFeature = null;\n            }, 500); // 500ms para detectar clique duplo\n\n            if (clickCount === 1) {\n              // Primeiro clique: fazer zoom\n              const geometry = feature.getGeometry();\n              if (geometry) {\n                const extent = geometry.getExtent();\n                map.current.getView().fit(extent, {\n                  duration: 800,\n                  padding: [50, 50, 50, 50],\n                  maxZoom: 15\n                });\n              }\n            } else if (clickCount === 2) {\n              // Segundo clique: abrir painel de informações\n              if (onPainelOpen) {\n                onPainelOpen(terraIndigenaInfo);\n              }\n              // Resetar contador após abrir o painel\n              clickCount = 0;\n              lastClickedFeature = null;\n              if (clickTimeout) {\n                clearTimeout(clickTimeout);\n                clickTimeout = null;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n      // Limpar timeout ao desmontar\n      if (clickTimeout) {\n        clearTimeout(clickTimeout);\n      }\n    };\n  }, [onPainelOpen]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: terrasIndigenasStyle,\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: estadoSPStyle,\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  return (\n    <MapWrapper ref={mapContainer}>\n      {/* Informações do mapa */}\n      {/* Bloco removido conforme solicitado */}\n    </MapWrapper>\n  );\n};\n\nexport default OpenLayersMap; ","/**\n * Constante para definir a proximidade entre marcadores (em graus)\n */\nexport const PROXIMITY_THRESHOLD = 0.00005;\n\n/**\n * Encontra pares de pontos próximos com base em um threshold de proximidade.\n * @param {Array} pontos - Array de objetos com latitude e longitude.\n * @param {number} [threshold=0.00005] - Threshold de proximidade em graus.\n * @returns {Array<Array<number>>} - Array de pares de índices próximos.\n */\nexport function findNearbyPairs(pontos, threshold = 0.00005) {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < threshold && lngDiff < threshold) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n}\n\n/**\n * Função para calcular distância entre dois pontos\n * @param {Object} point1 - Primeiro ponto {latitude, longitude}\n * @param {Object} point2 - Segundo ponto {latitude, longitude}\n * @returns {number} Distância em graus\n */\nexport const calculateDistance = (point1, point2) => {\n  const latDiff = Math.abs(parseFloat(point1.latitude) - parseFloat(point2.latitude));\n  const lngDiff = Math.abs(parseFloat(point1.longitude) - parseFloat(point2.longitude));\n  \n  return Math.sqrt(latDiff * latDiff + lngDiff * lngDiff);\n};\n\n/**\n * Função para verificar se dois pontos estão próximos\n * @param {Object} point1 - Primeiro ponto {latitude, longitude}\n * @param {Object} point2 - Segundo ponto {latitude, longitude}\n * @param {number} threshold - Limiar de proximidade\n * @returns {boolean} True se os pontos estão próximos\n */\nexport const arePointsNearby = (point1, point2, threshold = PROXIMITY_THRESHOLD) => {\n  const distance = calculateDistance(point1, point2);\n  return distance < threshold;\n}; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  painelAberto = false,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  useEffect(() => {\n    console.log('MapSelector: useEffect painelAberto mudou:', {\n      painelAberto,\n      isMobile,\n      showMarcadores,\n      shouldReactivate: !painelAberto && isMobile\n    });\n    \n    if (!painelAberto && isMobile) {\n      console.log('MapSelector: Painel fechado em mobile, reativando marcadores');\n      setShowMarcadores(true);\n    }\n  }, [painelAberto, isMobile]);\n\n  // Log para monitorar mudanças no showMarcadores\n  useEffect(() => {\n    console.log('MapSelector: showMarcadores mudou para:', showMarcadores);\n  }, [showMarcadores]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","// Central slug utility for the project\nexport const criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-') // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '') // Remove hífens do início e fim\n    .trim();\n}; ","import { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\n\nconst useDocumentosEscola = (escolaId) => {\n  const [documentos, setDocumentos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDocumentos = async () => {\n      console.log('🔄 Iniciando busca de documentos para escola:', escolaId, 'tipo:', typeof escolaId);\n      \n      if (!escolaId) {\n        console.log('⚠️ Nenhum ID de escola fornecido, retornando array vazio');\n        setDocumentos([]);\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        console.log('📡 Consultando tabela documentos_escola...');\n        \n        // Verificar conexão com Supabase\n        const { data: authData, error: authError } = await supabase.auth.getSession();\n        console.log('🔐 Estado da autenticação:', {\n          temSessao: !!authData?.session,\n          error: authError\n        });\n\n        // Verificar permissões da tabela\n        const { data: rlsData, error: rlsError } = await supabase\n          .from('documentos_escola')\n          .select('count')\n          .limit(1);\n\n        console.log('🔑 Verificação de permissões:', {\n          podeAcessar: !rlsError,\n          error: rlsError ? {\n            code: rlsError.code,\n            message: rlsError.message,\n            details: rlsError.details,\n            hint: rlsError.hint\n          } : null\n        });\n\n        // Primeiro, vamos verificar todos os documentos para debug\n        const { data: allDocs, error: allDocsError } = await supabase\n          .from('documentos_escola')\n          .select('*');\n\n        if (allDocsError) {\n          console.error('❌ Erro ao buscar todos os documentos:', {\n            code: allDocsError.code,\n            message: allDocsError.message,\n            details: allDocsError.details,\n            hint: allDocsError.hint\n          });\n        } else {\n          console.log('📊 Todos os documentos na tabela:', allDocs);\n          if (allDocs && allDocs.length > 0) {\n            console.log('📊 Exemplo de documento:', allDocs[0]);\n            console.log('📊 Tipos de escola_id encontrados:', allDocs.map(doc => ({\n              id: doc.id,\n              escola_id: doc.escola_id,\n              tipo_escola_id: typeof doc.escola_id,\n              valor_escola_id: doc.escola_id\n            })));\n          } else {\n            console.log('⚠️ Tabela está vazia ou não temos permissão para ver os dados');\n          }\n        }\n        \n        // Agora vamos buscar os documentos específicos\n        console.log('🔍 Buscando documentos para escola_id:', escolaId);\n        const { data, error } = await supabase\n          .from('documentos_escola')\n          .select('*')\n          .eq('escola_id', escolaId.toString()) // Convertendo para string para garantir\n          .order('created_at', { ascending: false });\n\n        if (error) {\n          console.error('❌ Erro na consulta Supabase:', {\n            code: error.code,\n            message: error.message,\n            details: error.details,\n            hint: error.hint\n          });\n          throw error;\n        }\n\n        console.log('✅ Documentos encontrados:', data?.length || 0);\n        if (data?.length === 0) {\n          console.log('ℹ️ Nenhum documento encontrado para a escola ID:', escolaId);\n          console.log('ℹ️ Tentando buscar com diferentes formatos de escola_id...');\n          \n          // Tentando diferentes formatos do ID\n          const { data: dataAsNumber, error: errorAsNumber } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', Number(escolaId));\n            \n          const { data: dataAsString, error: errorAsString } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', String(escolaId));\n            \n          console.log('Resultados com escola_id como número:', {\n            count: dataAsNumber?.length || 0,\n            error: errorAsNumber\n          });\n          console.log('Resultados com escola_id como string:', {\n            count: dataAsString?.length || 0,\n            error: errorAsString\n          });\n        } else {\n          console.log('📄 Dados dos documentos:', data);\n        }\n        \n        setDocumentos(data || []);\n      } catch (err) {\n        console.error('❌ Erro ao buscar documentos:', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n        console.log('🏁 Estado final:', { \n          documentos: documentos.length, \n          isLoading, \n          error: error || 'nenhum' \n        });\n      }\n    };\n\n    fetchDocumentos();\n  }, [escolaId]);\n\n  return { documentos, isLoading, error };\n};\n\nexport default useDocumentosEscola; ","import React, { memo, useState } from 'react';\n\n// Componente InfoCard para informações individuais\nconst InfoCard = memo(({ label, value, icon: Icon, type = 'text', className = '' }) => {\n  if (!value && value !== 0) return null;\n\n  const renderValue = () => {\n    switch (type) {\n      case 'number':\n        return (\n          <div className=\"text-2xl font-bold text-green-800\">\n            {value.toLocaleString('pt-BR')}\n          </div>\n        );\n      case 'boolean':\n        return (\n          <div className={`px-3 py-1 rounded-full text-xs font-medium ${\n            value ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'\n          }`}>\n            {value ? 'Sim' : 'Não'}\n          </div>\n        );\n      case 'badge':\n        return (\n          <div className=\"flex flex-wrap gap-1\">\n            {Array.isArray(value) ? value.map((item, index) => (\n              <span key={index} className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {item}\n              </span>\n            )) : (\n              <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {value}\n              </span>\n            )}\n          </div>\n        );\n      case 'link':\n        return (\n          <a \n            href={value} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"text-green-700 hover:text-green-800 underline text-sm\"\n          >\n            {value}\n          </a>\n        );\n      default:\n        return (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`rounded-lg p-4 transition-all duration-200 ${className}`}>\n      <div className=\"flex items-center gap-2 mb-2\">\n        {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n        <span className=\"text-xs font-medium text-gray-600 uppercase tracking-wide\">\n          {label}\n        </span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n});\n\n// Componente InfoGrid para layout em grid\nconst InfoGrid = memo(({ children, columns = 'auto-fit', gap = 4, className = '' }) => {\n  const gridClasses = {\n    'auto-fit': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '2': 'grid-cols-1 sm:grid-cols-2',\n    '3': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '4': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'\n  };\n\n  return (\n    <div className={`grid ${gridClasses[columns]} gap-${gap} ${className} [&>*]:bg-green-100`}>\n      {children}\n    </div>\n  );\n});\n\n// Componente InfoTable para dados tabulares\nconst InfoTable = memo(({ data, className = '' }) => {\n  if (!data || data.length === 0) return null;\n\n  return (\n    <div className={`bg-green-100 rounded-lg overflow-hidden ${className}`}>\n      <table className=\"w-full\">\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-green-50'}>\n              <td className=\"px-4 py-3 text-sm font-medium text-gray-700 border-r border-green-200\">\n                {row.label}\n              </td>\n              <td className=\"px-4 py-3 text-sm text-gray-600\">\n                {row.value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\n// Componente InfoStats para estatísticas com ícones\nconst InfoStats = memo(({ stats, className = '' }) => {\n  if (!stats || stats.length === 0) return null;\n\n  return (\n    <div className={`grid grid-cols-2 sm:grid-cols-4 gap-4 ${className} [&>*]:border-b [&>*]:border-gray-200 [&>*]:pb-2 [&>*]:mb-2`}>\n      {stats.map((stat, index) => (\n        <div key={index} className=\"text-center rounded-lg p-4\">\n          <div className=\"flex justify-center mb-2\">\n            {stat.icon && <stat.icon className=\"w-6 h-6 text-green-600\" />}\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {stat.value}\n          </div>\n          <div className=\"text-xs text-gray-600 mt-1\">\n            {stat.label}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n\n// Componente InfoSection refatorado\nconst InfoSection = memo(({ \n  title, \n  icon: Icon, \n  children, \n  description,\n  defaultCollapsed = false,\n  className = '',\n  layout = 'default', // 'default', 'grid', 'table', 'stats'\n  layoutProps = {}\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n\n  const renderContent = () => {\n    if (!children) return null;\n\n    switch (layout) {\n      case 'grid':\n        return (\n          <InfoGrid {...layoutProps}>\n            {children}\n          </InfoGrid>\n        );\n      case 'table':\n        return (\n          <InfoTable data={layoutProps.data} className={layoutProps.className} />\n        );\n      case 'stats':\n        return (\n          <InfoStats stats={layoutProps.stats} className={layoutProps.className} />\n        );\n      default:\n        return (\n          <div className=\"space-y-4\">\n            {children}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <section \n      className={`\n        bg-white rounded-2xl p-5 \n        shadow-sm transition-all duration-200\n        ${className}\n      `}\n    >\n      <button\n        onClick={() => setIsCollapsed(!isCollapsed)}\n        className=\"\n          w-full flex items-center justify-between \n          text-base font-semibold\n          mb-4 text-gray-900 hover:text-gray-800 \n          transition-colors focus:outline-none\n        \"\n        aria-expanded={!isCollapsed}\n        aria-controls={`${title}-content`}\n      >\n        <div className=\"flex items-center gap-2\">\n          {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n          <span className=\"tracking-wide\">{title}</span>\n        </div>\n      </button>\n      \n      {!isCollapsed && (\n        <div \n          id={`${title}-content`}\n          className=\"space-y-4\"\n          role=\"region\"\n          aria-labelledby={`${title}-button`}\n        >\n          {description && (\n            <div className=\"bg-green-100 rounded-lg p-4\">\n              <p className=\"text-gray-700 text-sm leading-relaxed\">\n                {description}\n              </p>\n            </div>\n          )}\n          {renderContent()}\n        </div>\n      )}\n    </section>\n  );\n});\n\n// Exportar todos os componentes\nexport { InfoCard, InfoGrid, InfoTable, InfoStats };\nexport default InfoSection; ","import React, { memo, useState } from 'react';\nimport {\n  MapPin,\n  Users,\n  Globe,\n  Calendar,\n  Building,\n  Link as LinkIcon,\n  ExternalLink,\n  ChevronRight,\n  Check,\n  X,\n  Navigation,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst capitalize = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst CompactCard = ({ icon: Icon, label, value, type = 'text' }) => {\n  const renderValue = () => {\n    switch (type) {\n      case 'boolean':\n        return value ? (\n          <span className=\"flex items-center gap-1 text-green-600 text-sm\">\n            <Check className=\"w-5 h-5\" />\n            Sim\n          </span>\n        ) : (\n          <span className=\"flex items-center gap-1 text-red-500 text-sm\">\n            <X className=\"w-5 h-5\" />\n            Não\n          </span>\n        );\n      default:\n        return <span className=\"text-sm text-gray-800 truncate\">{value}</span>;\n    }\n  };\n\n  return (\n    <div className=\"p-1 rounded-md transition-all\">\n      <div className=\"flex items-center gap-1.5 mb-1\">\n        <Icon className=\"w-5 h-5 text-gray-600\" />\n        <span className=\"text-xs text-gray-500 font-medium\">{label}</span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n};\n\nconst InfoBlock = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-center gap-2 bg-green-100 p-1.5 rounded-md text-xs\">\n    <Icon className=\"w-5 h-5 text-green-600\" />\n    <span className=\"text-gray-700 font-medium\">{label}:</span>\n    <span className=\"font-semibold text-green-800\">{capitalize(value)}</span>\n  </div>\n);\n\nconst AddressDetails = ({ escola }) => {\n  const hasDetailedAddress = escola.logradouro || escola.numero || escola.bairro || escola.cep;\n  \n  if (!hasDetailedAddress) {\n    return (\n      <div className=\"mt-2 p-2 bg-green-100 rounded-md\">\n        <p className=\"text-xs text-gray-700 leading-snug\">\n          {capitalize(escola.endereco)}\n        </p>\n      </div>\n    );\n  }\n\n  const addressFields = [\n    { field: 'logradouro', label: 'Logradouro' },\n    { field: 'numero', label: 'Número' },\n    { field: 'complemento', label: 'Complemento' },\n    { field: 'bairro', label: 'Bairro' },\n  ];\n\n  return (\n    <div className=\"mt-2 space-y-1\">\n      {addressFields.map(({ field, label }) => \n        escola[field] && (\n          <div key={field} className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n            <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700 mb-0.5\">{label}</div>\n              <div className=\"text-xs text-gray-800 leading-snug\">{escola[field]}</div>\n            </div>\n          </div>\n        )\n      )}\n      \n      {(escola.cep || escola.estado) && (\n        <div className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n          <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n          <div className=\"flex-1\">\n            <div className=\"text-xs font-medium text-gray-700 mb-0.5\">Localização</div>\n            <div className=\"text-xs text-gray-800 leading-snug\">\n              {[escola.municipio, escola.estado, escola.cep].filter(Boolean).join(', ')}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MapButton = ({ escola }) => {\n  const hasCoordinates = escola.latitude && escola.longitude;\n  \n  if (!hasCoordinates) return null;\n\n  const openMap = () => {\n    window.open(`https://www.google.com/maps?q=${escola.latitude},${escola.longitude}`, '_blank');\n  };\n\n  return (\n    <button\n      onClick={openMap}\n      className=\"mt-2 w-full flex items-center justify-center gap-2 p-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors text-xs font-medium\"\n    >\n      <Navigation className=\"w-5 h-5\" />\n      Ver no Google Maps\n    </button>\n  );\n};\n\nconst SocialLinks = ({ links, expanded, onToggle }) => {\n  const socialLinks = (links || '').split(',').map(url => url.trim()).filter(Boolean);\n  \n  if (socialLinks.length === 0) return null;\n\n  return (\n    <div className=\"bg-green-100 rounded-md\">\n      <button\n        onClick={() => onToggle('social')}\n        className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n        aria-expanded={expanded.social}\n      >\n        <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n          <Globe className=\"w-5 h-5 text-blue-600\" />\n          Redes sociais ({socialLinks.length})\n        </span>\n        <ChevronRight\n          className={`w-5 h-5 text-gray-400 transition-transform ${\n            expanded.social ? 'rotate-90' : ''\n          }`}\n        />\n      </button>\n      \n      {expanded.social && (\n        <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n          <div className=\"mt-1 space-y-1\">\n            {socialLinks.map((link, index) => (\n              <a\n                key={index}\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center gap-1.5 p-1.5 bg-green-100 rounded-md hover:bg-green-200 group text-xs\"\n              >\n                <LinkIcon className=\"w-5 h-5 text-blue-600\" />\n                <span className=\"truncate flex-1 text-gray-700\">{link}</span>\n                <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BasicInfo = memo(({ escola }) => {\n  const [expanded, setExpanded] = useState({});\n\n  if (!escola) return null;\n\n  const toggle = (key) => {\n    setExpanded(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const basicInfoCards = [\n    {\n      icon: Building,\n      label: 'Município',\n      value: capitalize(escola.municipio),\n    },\n    {\n      icon: Calendar,\n      label: 'Fundação',\n      value: escola.ano_criacao,\n    },\n    {\n      icon: Globe,\n      label: 'Redes sociais',\n      value: escola.usa_redes_sociais,\n      type: 'boolean',\n    },\n  ].filter(item => item.value);\n\n  return (\n    <>\n      {/* Povos Indígenas em destaque antes de tudo */}\n      {escola.povos_indigenas && (\n        <div className=\"mb-4\">\n          <div className=\"text-lg sm:text-xl font-bold text-green-800\">\n            Povos Indígenas: <span className=\"font-semibold text-black\">{escola.povos_indigenas}</span>\n          </div>\n        </div>\n      )}\n      <InfoSection title=\"Localização\" icon={MapPin}>\n        {/* Cards informativos básicos */}\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mb-3 [&>*]:bg-green-100\">\n          {basicInfoCards.map((item, index) => (\n            <CompactCard key={index} {...item} />\n          ))}\n        </div>\n\n        <div className=\"space-y-1.5\">\n          {/* Diretoria de ensino */}\n          {escola.diretoria_ensino && (\n            <InfoBlock \n              icon={Building} \n              label=\"Diretoria de ensino\" \n              value={escola.diretoria_ensino} \n            />\n          )}\n\n          {/* Gaveta do endereço */}\n          {escola.endereco && (\n            <div className=\"bg-green-100 rounded-md\">\n              <button\n                onClick={() => toggle('endereco')}\n                className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n                aria-expanded={expanded.endereco}\n              >\n                <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                  <Building className=\"w-5 h-5\" />\n                  Endereço\n                </span>\n                <ChevronRight\n                  className={`w-5 h-5 text-gray-400 transition-transform ${\n                    expanded.endereco ? 'rotate-90' : ''\n                  }`}\n                />\n              </button>\n              {expanded.endereco && (\n                <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n                  <AddressDetails escola={escola} />\n                  <MapButton escola={escola} />\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Redes sociais */}\n          <SocialLinks \n            links={escola.links_redes_sociais}\n            expanded={expanded}\n            onToggle={toggle}\n          />\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default BasicInfo;","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { X, RefreshCw } from 'lucide-react';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { supabase } from '../../../supabaseClient';\n\nconst ImagensdasEscolas = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [error, setError] = useState('');\n  const cacheRef = useRef({});\n  const [cacheVersion, setCacheVersion] = useState(0); // Para forçar recarga\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagensdasEscolas: refreshKey mudou, forçando recarga');\n      limparCacheERecarregar();\n    }\n  }, [refreshKey]);\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    document.body.style.overflow = 'auto';\n  }, []);\n\n  // ESC para fechar\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Função para limpar cache e recarregar\n  const limparCacheERecarregar = useCallback(() => {\n    console.log('Limpando cache e recarregando imagens...');\n    cacheRef.current = {};\n    setCacheVersion(prev => prev + 1);\n    setImagens([]);\n    setLoading(true);\n    setError('');\n  }, []);\n\n  useEffect(() => {\n    if (!escola_id) {\n      setLoading(false);\n      return;\n    }\n\n    // Verificar se há cache válido (com versão)\n    const cacheKey = `${escola_id}_v${cacheVersion}`;\n    if (cacheRef.current[cacheKey]) {\n      console.log('Usando cache para escola', escola_id);\n      setImagens(cacheRef.current[cacheKey]);\n      setLoading(false);\n      return;\n    }\n\n    const buscarImagens = async () => {\n      console.log('Buscando imagens para escola', escola_id);\n      \n      try {\n        // Usar a mesma abordagem do painel de edição: listar arquivos do bucket\n        const { data: files, error } = await supabase.storage\n          .from('imagens-das-escolas')\n          .list(`${escola_id}/`);\n\n        if (error) {\n          throw error;\n        }\n\n        if (!files || files.length === 0) {\n          console.log('Nenhum arquivo encontrado para escola', escola_id);\n          setImagens([]);\n          setLoading(false);\n          return;\n        }\n\n        console.log('Arquivos encontrados:', files.length);\n\n        // Processar cada arquivo encontrado\n        const imagensEncontradas = await Promise.all(\n          files.map(async (file, index) => {\n            const filePath = `${escola_id}/${file.name}`;\n            const { data: { publicUrl } } = supabase.storage\n              .from('imagens-das-escolas')\n              .getPublicUrl(filePath);\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              console.log('Buscando legenda para:', filePath);\n              legenda = await getLegendaByImageUrl(filePath, escola_id, 'escola');\n              console.log('Legenda encontrada:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda para', filePath, ':', error);\n            }\n\n            return {\n              id: `${escola_id}-${file.name}`,\n              publicURL: publicUrl,\n              descricao: legenda?.legenda || `Imagem ${index + 1}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n              urlError: null,\n            };\n          })\n        );\n\n        console.log('Imagens processadas:', imagensEncontradas.length);\n        \n        // Salvar no cache com versão\n        cacheRef.current[cacheKey] = imagensEncontradas;\n        setImagens(imagensEncontradas);\n        \n        if (imagensEncontradas.length === 0) {\n          setError('Nenhuma imagem encontrada para esta escola.');\n        }\n      } catch (error) {\n        console.error('Erro ao processar imagens:', error);\n        setError('Erro ao carregar imagens da escola.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarImagens();\n  }, [escola_id, cacheVersion]);\n\n  if (loading) {\n    return (\n      <div className=\"text-gray-500 flex items-center gap-2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n        Carregando imagens da escola...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-red-600 flex items-center gap-2\">\n        <span>{error}</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (!imagens.length) {\n    return (\n      <div className=\"text-yellow-700 flex items-center gap-2\">\n        <span>Nenhuma imagem encontrada para esta escola.</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.descricao}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.descricao && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.descricao}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n            alt={imagemZoom.descricao}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.descricao && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.descricao}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagensdasEscolas.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagensdasEscolas);\n","import React, { memo } from 'react';\nimport ImagensdasEscolas from '../ImagensdasEscolas';\n\nconst HistoriaEscola = memo(({ escola, refreshKey = 0 }) => {\n  if (!escola?.historia_da_escola) return null;\n\n  return (\n    <article\n      className={`\n        mt-8 mb-12\n        max-w-4xl mx-auto\n        prose\n        prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900\n        prose-p:text-green-800\n        prose-p:leading-relaxed\n        prose-p:text-justify\n        prose-img:rounded-xl\n        prose-img:shadow-lg\n        prose-a:text-green-700\n        prose-a:no-underline\n        prose-a:border-b-2\n        prose-a:border-green-100\n        prose-a:transition-colors\n        hover:prose-a:border-green-600\n        bg-white\n        rounded-2xl\n        px-4 sm:px-6 md:px-8 py-6\n        shadow-lg\n      `}\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center gap-3 mb-3 sm:mb-4\">\n          <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n            <img \n              src={`${process.env.PUBLIC_URL}/onca.svg`} \n              alt=\"Ícone de onça\" \n              className=\"w-32 h-32 sm:w-36 sm:h-36\" \n              style={{ filter: 'none', borderRadius: '0', boxShadow: 'none', marginTop: '80px' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n          <h2 className=\"text-xl sm:text-2xl font-bold text-green-900 m-0\">\n            História da Escola\n          </h2>\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      <div className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {escola.historia_da_escola}\n      </div>\n\n      {/* Imagens da escola, responsivas e modulares */}\n      <ImagensdasEscolas escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriaEscola; ","import React, { memo } from 'react';\n\nconst BooleanValue = memo(({ value }) => {\n  if (value === undefined || value === null) return null;\n\n  return (\n    <span className={`font-medium ${value ? 'text-green-600' : 'text-neutral-400'}`}>\n      {value ? 'Sim' : 'Não'}\n    </span>\n  );\n});\n\nexport default BooleanValue; ","import React, { memo, useState } from 'react';\nimport { Sparkles, BookOpen, Users, MessageCircle, Clock } from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../../components/BooleanValue';\n\n// Função utilitária para transformar o texto em lista\nfunction parseModalidadeEnsino(text) {\n  if (!text || typeof text !== 'string') return [];\n  // Divide pelo traço longo (–, U+2013) e remove espaços extras\n  return text\n    .split('–')\n    .map(item => item.trim())\n    .filter(Boolean);\n}\n\n// Componente de lista expansível\nconst ExpandableList = ({ items, maxVisible = 3 }) => {\n  if (!items || items.length === 0) return null;\n\n  return (\n    <div className=\"-mt-1\">\n      <ul className=\"list-none text-gray-800 text-xs pl-0 ml-0\">\n        {items.map((item, idx) => (\n          <li key={idx} className=\"leading-tight m-0 p-0 pl-0 ml-0 flex items-start\">\n            <span className=\"mr-1 text-green-700 select-none\" style={{minWidth: '1em', display: 'inline-block'}}>•</span>\n            <span>{item}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// MiniCard padronizado\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium p-0 m-0\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Modalidades = memo(({ escola }) => {\n  if (!escola) return null;\n\n  // Cards principais de Modalidades\n  const turnosValue = escola.turnos_funcionamento || escola['turnos_funcionamento'] || '';\n  const modalidadeList = parseModalidadeEnsino(escola.modalidade_ensino);\n  \n  // Card de Modalidade de Ensino (separado para ocupar linha inteira)\n  const modalidadeEnsinoCard = {\n    icon: Sparkles,\n    label: 'Modalidade de Ensino',\n    value: <ExpandableList items={modalidadeList} maxVisible={3} />,\n  };\n\n  // Outros cards para o grid\n  const gridItems = [\n    turnosValue && {\n      icon: Clock,\n      label: 'Turnos de Funcionamento',\n      value: turnosValue,\n    },\n    {\n      icon: Users,\n      label: 'Número de Alunos',\n      value: escola.numero_alunos,\n    },\n    {\n      icon: MessageCircle,\n      label: 'Línguas Faladas',\n      value: escola.linguas_faladas,\n    },\n  ].filter(Boolean);\n\n  // Cards de Materiais Pedagógicos\n  const materiaisItems = [\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Não Indígena',\n      value: <BooleanValue value={escola.material_nao_indigena} />,\n    },\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Indígena',\n      value: <BooleanValue value={escola.material_indigena} />,\n    },\n  ];\n\n  return (\n    <>\n      <InfoSection title=\"Modalidades\" icon={Sparkles}>\n        {/* Modalidade de Ensino em linha inteira */}\n        <div className=\"mb-4 bg-green-100 rounded-lg p-2\">\n          <ExpandableList items={modalidadeList} maxVisible={3} />\n        </div>\n        \n        {/* Grid com os outros cards */}\n        <div\n          className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\"\n        >\n          {gridItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n      \n      <InfoSection \n        title=\"Materiais Pedagógicos\" \n        icon={BookOpen}\n        description=\"Diferenciados e não diferenciados, produzidos dentro e fora da comunidade.\"\n      >\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\">\n          {materiaisItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default Modalidades; ","import React, { memo } from 'react';\nimport {\n  Home,\n  Droplet,\n  Trash2,\n  Wifi,\n  Monitor,\n  MapPin,\n  Utensils,\n  Apple,\n  ChefHat,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../BooleanValue';\n\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Infraestrutura = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const items = [\n    {\n      icon: Droplet,\n      label: 'Acesso à Água',\n      value: escola.acesso_agua,\n    },\n    {\n      icon: Trash2,\n      label: 'Coleta de Lixo',\n      value: escola.coleta_lixo,\n    },\n    {\n      icon: Wifi,\n      label: 'Acesso à Internet',\n      value: <BooleanValue value={escola.acesso_internet} />,\n    },\n    {\n      icon: Monitor,\n      label: 'Equipamentos Tecnológicos',\n      value: escola.equipamentos,\n    },\n    {\n      icon: MapPin,\n      label: 'Modo de Acesso à Escola',\n      value: escola.modo_acesso,\n    },\n    {\n      icon: Utensils,\n      label: 'Cozinha',\n      value: <BooleanValue value={escola.cozinha} />,\n    },\n    {\n      icon: Apple,\n      label: 'Merenda Escolar',\n      value: <BooleanValue value={escola.merenda_escolar} />,\n    },\n    {\n      icon: ChefHat,\n      label: 'Merenda Diferenciada',\n      value: <BooleanValue value={escola.diferenciada} />,\n    },\n  ];\n\n  return (\n    <InfoSection title=\"Infraestrutura\" icon={Home}>\n      {escola.espaco_escolar && (\n        <div className=\"p-2 text-sm text-gray-800 border-b border-gray-200 whitespace-pre-wrap\">\n          {escola.espaco_escolar}\n        </div>\n      )}\n      <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-3 [&>*]:bg-green-100\">\n        {items.map((item, idx) => (\n          <MiniCard\n            key={idx}\n            icon={item.icon}\n            label={item.label}\n            value={item.value}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default Infraestrutura;\n","import React, { memo } from 'react';\nimport {\n  UsersRound,\n  Star,\n  User,\n  UserCheck,\n  UserMinus,\n  MessageCircle,\n  NotebookPen,\n  Check,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst MiniCard = ({ icon: Icon, label, value, description }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium mt-0.5\">{value}</div>\n      {description && (\n        <div className=\"text-xs text-gray-600 mt-1 whitespace-pre-line\">\n          {description}\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nconst formatarNomeProfessor = (nome) => {\n  if (!nome) return nome;\n\n  const padroesIndigenas = [\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+\\(([^)]+)\\)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+-\\s+([^)]+)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+ou\\s+([^)]+)/,\n  ];\n\n  for (const padrao of padroesIndigenas) {\n    const match = nome.match(padrao);\n    if (match) {\n      const nomeIndigena = `${match[1]} ${match[2]}`;\n      const nomePortugues = match[3];\n      return `${nomeIndigena} (${nomePortugues})`;\n    }\n  }\n\n  return nome.includes('(') && nome.includes(')') ? nome : nome;\n};\n\nconst formatarFormacaoProfessores = (formacao) => {\n  if (!formacao) return null;\n\n  const [status, ...resto] = formacao.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst formatarFormacaoContinuada = (valor) => {\n  if (!valor) return null;\n\n  const [status, ...resto] = valor.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst renderBooleanStatus = (valor) => {\n  const normalizado = String(valor).trim().toLowerCase();\n  if (normalizado === 'sim') {\n    return (\n      <div className=\"flex items-center gap-1 text-green-700\">\n        <Check className=\"w-5 h-5\" />\n        Sim\n      </div>\n    );\n  } else if (normalizado === 'não' || normalizado === 'nao') {\n    return (\n      <div className=\"flex items-center gap-1 text-gray-500\">\n        <X className=\"w-5 h-5\" />\n        Não\n      </div>\n    );\n  }\n  return valor;\n};\n\nconst GestaoProfessores = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const formacao = formatarFormacaoProfessores(escola.formacao_professores);\n  const continuada = formatarFormacaoContinuada(escola.formacao_continuada);\n\n  return (\n    <InfoSection title=\"Gestores\" icon={UsersRound}>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 mt-1 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={UserCheck}\n          label=\"Professores Indígenas\"\n          value={escola.professores_indigenas}\n        />\n        <MiniCard\n          icon={UserMinus}\n          label=\"Professores Não Indígenas\"\n          value={escola.professores_nao_indigenas}\n        />\n        <MiniCard\n          icon={MessageCircle}\n          label=\"Professores que falam língua indígena\"\n          value={renderBooleanStatus(escola.professores_falam_lingua)}\n        />\n        {formacao?.status && (\n          <MiniCard\n            icon={Star}\n            label=\"Formação dos Professores\"\n            value={renderBooleanStatus(formacao.status)}\n            description={formacao.descricao}\n          />\n        )}\n      </div>\n\n      <div className=\"space-y-2 mt-4 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={User}\n          label=\"Gestão/Nome\"\n          value={escola.gestao}\n        />\n        <MiniCard\n          icon={UsersRound}\n          label=\"Outros Funcionários\"\n          value={escola.outros_funcionarios}\n        />\n        {continuada?.status && (\n          <MiniCard\n            icon={NotebookPen}\n            label=\"Visitas de Supervisores e Formação Continuada\"\n            value={renderBooleanStatus(continuada.status)}\n            description={continuada.descricao}\n          />\n        )}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default GestaoProfessores;\n","import React, { memo } from 'react';\nimport {\n  Target,\n  BookOpen,\n  GraduationCap,\n  Users,\n  Heart,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst ProjectCard = ({ icon: Icon, label, value }) => {\n  const isNegative = value?.trim().toLowerCase() === 'não';\n\n  return (\n    <div className=\"flex items-start gap-4 rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow duration-200\">\n      <div className=\"mt-1\">\n        <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      </div>\n      <div className=\"flex-1 space-y-1\">\n        <div className=\"text-sm font-semibold text-gray-800\">{label}</div>\n        {isNegative ? (\n          <div className=\"text-sm text-gray-400 flex items-center gap-1\">\n            <X className=\"w-5 h-5 text-gray-400\" />\n            Não\n          </div>\n        ) : (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProjetosParcerias = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const projectsData = [\n    {\n      field: 'projetos_andamento',\n      icon: BookOpen,\n      label: 'Projetos em andamento',\n    },\n    {\n      field: 'parcerias_universidades',\n      icon: GraduationCap,\n      label: 'Parcerias com universidades',\n    },\n    {\n      field: 'acoes_ongs',\n      icon: Users,\n      label: 'Ações com ONGs ou coletivos',\n    },\n    {\n      field: 'desejos_comunidade',\n      icon: Heart,\n      label: 'Desejos da comunidade para a escola',\n    },\n    {\n      field: 'parcerias_municipio',\n      icon: Target,\n      label: 'Parcerias com o município',\n    },\n  ];\n\n  const availableProjects = projectsData.filter(\n    project => escola[project.field] && escola[project.field].trim()\n  );\n\n  if (availableProjects.length === 0) return null;\n\n  return (\n    <InfoSection title=\"Projetos e Parcerias\" icon={Target}>\n      <div className=\"grid grid-cols-1 gap-3 [&>*]:bg-green-100\">\n        {availableProjects.map((project) => (\n          <ProjectCard\n            key={project.field}\n            icon={project.icon}\n            label={project.label}\n            value={escola[project.field]}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default ProjetosParcerias;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { supabase } from '../../../supabaseClient';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { X } from 'lucide-react';\n\nconst ImagemHistoriadoProfessor = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagemHistoriadoProfessor: refreshKey mudou, forçando recarga');\n      setImagens([]);\n      setLoading(true);\n      setError(null);\n    }\n  }, [refreshKey]);\n\n  useEffect(() => {\n    if (!escola_id) return;\n\n    setLoading(true);\n    setError(null);\n\n    // Busca arquivos do bucket diretamente\n    supabase\n      .storage\n      .from('imagens-professores')\n      .list(`${escola_id}/`)\n      .then(async ({ data, error }) => {\n        if (error) {\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n\n        if (data && data.length > 0) {\n          console.log('Arquivos de professores encontrados:', data.length);\n          const imagensComUrl = await Promise.all(data.map(async (file, idx) => {\n            const { data: { publicUrl } } = supabase\n              .storage\n              .from('imagens-professores')\n              .getPublicUrl(`${escola_id}/${file.name}`);\n            \n            // Extrair gênero do nome do arquivo\n            let genero = 'professor';\n            if (file.name.startsWith('professora_')) {\n              genero = 'professora';\n            } else if (file.name.startsWith('professor_')) {\n              genero = 'professor';\n            }\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              const caminhoRelativo = `${escola_id}/${file.name}`;\n              console.log('Buscando legenda para professor:', caminhoRelativo);\n              legenda = await getLegendaByImageUrl(caminhoRelativo, escola_id, 'professor');\n              console.log('Legenda encontrada para professor:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda:', error);\n            }\n\n            return {\n              id: idx + 1,\n              publicURL: publicUrl,\n              genero,\n              nome: file.name,\n              created_at: file.created_at || '',\n              legenda: legenda?.legenda || `Imagem do ${genero}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n            };\n          }));\n          setImagens(imagensComUrl);\n        } else {\n          setImagens([]);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(`Erro inesperado: ${err.message}`);\n        setLoading(false);\n      });\n  }, [escola_id]);\n\n  if (loading) {\n    return <div className=\"text-gray-500\">Carregando imagens do professor...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-600\">Erro ao carregar imagens: {error}</div>;\n  }\n\n  if (!imagens.length) {\n    return null;\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.legenda}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.legenda && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.legenda}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n              alt={imagemZoom.legenda}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.legenda && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.legenda}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagemHistoriadoProfessor.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagemHistoriadoProfessor);\n","import React, { memo, useEffect, useState, useCallback } from 'react';\nimport { ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { getHistoriasProfessor } from '../../../../services/historiaProfessorService';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\n\nconst HistoriadoProfessor = memo(({ escola, refreshKey = 0 }) => {\n  const [historias, setHistorias] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentHistoriaIndex, setCurrentHistoriaIndex] = useState(0);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        fecharZoom();\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Carregar histórias do professor\n  useEffect(() => {\n    if (!escola?.id) {\n      setLoading(false);\n      return;\n    }\n    const carregarHistorias = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await getHistoriasProfessor(escola.id);\n        setHistorias(data || []);\n        setCurrentHistoriaIndex(0);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    carregarHistorias();\n  }, [escola?.id, refreshKey]);\n\n  // Navegação entre histórias\n  const nextHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev < historias.length - 1 ? prev + 1 : 0\n    );\n  }, [historias.length]);\n\n  const prevHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev > 0 ? prev - 1 : historias.length - 1\n    );\n  }, [historias.length]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (historias.length <= 1) return;\n      if (e.key === 'ArrowRight') {\n        nextHistoria();\n      } else if (e.key === 'ArrowLeft') {\n        prevHistoria();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [historias.length, nextHistoria, prevHistoria]);\n\n  if (loading) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-green-100/50\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando histórias do professor...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-red-100/50\">\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600\">Erro ao carregar histórias do professor: {error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!historias.length) {\n    return null;\n  }\n\n  const currentHistoria = historias[currentHistoriaIndex];\n  const hasMultipleHistorias = historias.length > 1;\n\n  return (\n    <article\n      className=\"\n        mt-8 mb-12 max-w-4xl mx-auto\n        px-4 sm:px-6 md:px-8 py-6\n        bg-white rounded-2xl shadow-lg\n        prose prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n        prose-img:rounded-xl prose-img:shadow-lg\n        prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n      \"\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n              <img \n                src={`${process.env.PUBLIC_URL}/passaro.svg`} \n                alt=\"Ícone de pássaro\" \n                className=\"w-12 h-12 sm:w-24 sm:h-24\" \n                style={{ \n                  filter: 'none', \n                  borderRadius: '0', \n                  boxShadow: 'none', \n                  margin: '0',\n                  padding: '0',\n                  border: 'none',\n                  outline: 'none'\n                }}\n                aria-hidden=\"true\"\n              />\n            </span>\n            <h2 className=\"text-xl sm:text-2xl font-bold text-black m-0\">\n              História dos Professores\n            </h2>\n          </div>\n          {hasMultipleHistorias && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span>{currentHistoriaIndex + 1} de {historias.length}</span>\n            </div>\n          )}\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      {/* Conteúdo da história atual */}\n      <section className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {currentHistoria.nome_professor && (\n          <h3 className=\"text-lg sm:text-xl font-semibold text-green-800 mb-4\">\n            {currentHistoria.nome_professor}\n          </h3>\n        )}\n        <div>{currentHistoria.historia}</div>\n        {currentHistoria.imagem_public_url && (\n          <figure className=\"my-6\">\n            <div className=\"relative\">\n              <img\n                src={currentHistoria.imagem_public_url}\n                alt={currentHistoria.descricao_imagem || 'Imagem da história do professor'}\n                className=\"w-full max-w-2xl mx-auto rounded-xl shadow-lg cursor-pointer transition-transform duration-200 hover:scale-105\"\n                onClick={() => setImagemZoom(currentHistoria)}\n                loading=\"lazy\"\n              />\n              {currentHistoria.descricao_imagem && (\n                <figcaption className=\"text-center text-sm text-gray-600 mt-2\">\n                  {currentHistoria.descricao_imagem}\n                </figcaption>\n              )}\n            </div>\n          </figure>\n        )}\n      </section>\n\n      {/* Navegação entre histórias */}\n      {hasMultipleHistorias && (\n        <div className=\"flex items-center justify-between mt-8 pt-6 border-t border-gray-200\">\n          <button\n            onClick={prevHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"História anterior\"\n          >\n            <ChevronLeft className=\"w-5 h-5\" />\n            <span className=\"hidden sm:inline\">Anterior</span>\n          </button>\n          <div className=\"flex gap-2\">\n            {historias.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentHistoriaIndex(index)}\n                className={`w-3 h-3 rounded-full border-2 ${index === currentHistoriaIndex ? 'bg-green-600 border-green-600' : 'bg-white border-gray-300'} transition-colors`}\n                aria-label={`Ir para história ${index + 1}`}\n              />\n            ))}\n          </div>\n          <button\n            onClick={nextHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"Próxima história\"\n          >\n            <span className=\"hidden sm:inline\">Próxima</span>\n            <ChevronRight className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Modal de zoom da imagem */}\n      {imagemZoom && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-80\" onClick={fecharZoom}>\n          <div className=\"relative max-w-3xl w-full p-4\" onClick={e => e.stopPropagation()}>\n            <button\n              className=\"absolute top-2 right-2 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-80\"\n              onClick={fecharZoom}\n              aria-label=\"Fechar zoom\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <img\n              src={imagemZoom.imagem_public_url}\n              alt={imagemZoom.descricao_imagem || 'Imagem da história do professor'}\n              className=\"w-full max-h-[80vh] object-contain rounded-xl shadow-2xl\"\n            />\n            {imagemZoom.descricao_imagem && (\n              <figcaption className=\"text-center text-base text-gray-200 mt-4\">\n                {imagemZoom.descricao_imagem}\n              </figcaption>\n            )}\n          </div>\n        </div>\n      )}\n\n      <ImagemHistoriadoProfessor escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriadoProfessor;\n","import React, { memo } from 'react';\n\n// Import all section components\nimport BasicInfo from './BasicInfo';\nimport HistoriaEscola from './HistoriaEscola';\n// import PovosLinguas from './PovosLinguas';\nimport Modalidades from './Modalidades';\nimport Infraestrutura from './Infraestrutura';\nimport GestaoProfessores from './GestaoProfessores';\nimport ProjetosParcerias from './ProjetosParcerias';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport HistoriadoProfessor from './HistoriadoProfessor';\n\n// CSS para layout Masonry real usando CSS columns\nconst masonryStyles = `\n  .masonry-grid {\n    column-count: 1;\n    column-gap: 1.5rem;\n    column-fill: balance;\n  }\n  \n  .masonry-grid > * {\n    display: block;\n    break-inside: avoid;\n    page-break-inside: avoid;\n    margin-bottom: 1.5rem;\n  }\n  \n  /* Mobile: 1 coluna */\n  @media (max-width: 767px) {\n    .masonry-grid {\n      column-count: 1;\n    }\n  }\n  \n  /* Tablet e Desktop: 2 colunas */\n  @media (min-width: 768px) {\n    .masonry-grid {\n      column-count: 2;\n    }\n  }\n`;\n\n// Componente wrapper para o grid\nconst GridLayoutWrapper = memo(({ children, shouldUseGrid }) => {\n  const containerClasses = shouldUseGrid\n    ? 'masonry-grid'\n    : 'space-y-4';\n\n  return (\n    <>\n      <style>{masonryStyles}</style>\n      <div className={`${containerClasses} transition-all duration-300 ease-in-out`}>\n        {children}\n      </div>\n    </>\n  );\n});\n\nconst EscolaInfo = memo(({ escola, shouldUseGrid = false, refreshKey = 0 }) => {\n  console.log(\"EscolaInfo recebeu:\", escola);\n  \n  if (!escola) {\n    console.log(\"EscolaInfo: escola é null ou undefined\");\n    return null;\n  }\n\n  // Componentes que serão renderizados no grid\n  const gridSections = [\n    { Component: BasicInfo, props: { escola } },\n    // { Component: PovosLinguas, props: { escola } },\n    { Component: Modalidades, props: { escola } },\n    { Component: Infraestrutura, props: { escola } },\n    { Component: GestaoProfessores, props: { escola } },\n    { Component: ProjetosParcerias, props: { escola } }\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Grid de cards */}\n      <GridLayoutWrapper shouldUseGrid={shouldUseGrid}>\n        {gridSections.map(({ Component, props }, index) => (\n          <Component key={index} {...props} />\n        ))}\n      </GridLayoutWrapper>\n\n      {/* História da Escola em destaque */}\n      <HistoriaEscola escola={escola} refreshKey={refreshKey} />\n      <HistoriadoProfessor escola={escola} refreshKey={refreshKey} />\n    </div>\n  );\n});\n\nexport default EscolaInfo; ","import React from 'react';\n\nconst HandFistIcon = ({ className = 'w-5 h-5', ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 256 256\"\n    fill=\"currentColor\"\n    className={className}\n    {...props}\n  >\n    <path d=\"M200,80H184V64a32,32,0,0,0-56-21.13A32,32,0,0,0,72.21,60.42,32,32,0,0,0,24,88v40a104,104,0,0,0,208,0V112A32,32,0,0,0,200,80ZM152,48a16,16,0,0,1,16,16V80H136V64A16,16,0,0,1,152,48ZM88,64a16,16,0,0,1,32,0v40a16,16,0,0,1-32,0ZM40,88a16,16,0,0,1,32,0v16a16,16,0,0,1-32,0Zm176,40a88,88,0,0,1-175.92,3.75A31.93,31.93,0,0,0,80,125.13a31.93,31.93,0,0,0,44.58,3.35,32.21,32.21,0,0,0,11.8,11.44A47.88,47.88,0,0,0,120,176a8,8,0,0,0,16,0,32,32,0,0,1,32-32,8,8,0,0,0,0-16H152a16,16,0,0,1-16-16V96h64a16,16,0,0,1,16,16Z\" />\n  </svg>\n);\n\nexport default HandFistIcon; ","import React, { memo } from 'react';\n\nconst InfoItem = memo(({ label, value, className = '', isTextArea = false }) => {\n  if (!value) return null;\n\n  const isFlexLayout = className.includes('flex flex-col');\n  const baseClasses = isFlexLayout \n    ? 'flex flex-col gap-1 text-sm py-0.5'\n    : 'grid grid-cols-[auto,1fr] gap-x-2 text-sm py-0.5';\n\n  return (\n    <div className={`${baseClasses} ${className}`}>\n      <span className=\"font-medium text-neutral-800\">{label}:</span>\n      {isTextArea ? (\n        <div className=\"text-neutral-600\">\n          <div className=\"whitespace-pre-wrap break-words text-sm leading-relaxed\">\n            {value}\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-neutral-600 break-words\">{value}</span>\n      )}\n    </div>\n  );\n});\n\nexport default InfoItem; ","import React, { memo } from 'react';\nimport HandFistIcon from './icons/HandFistIcon';\nimport InfoSection from './components/InfoSection';\nimport InfoItem from './components/InfoItem';\n\n// Wrapper para passar className maior ao ícone\nconst LargeHandFistIcon = (props) => <HandFistIcon className=\"w-8 h-8\" {...props} />;\n\nconst TerraIndigenaInfo = memo(({ terraIndigena }) => {\n  if (!terraIndigena) {\n    console.log(\"TerraIndigenaInfo: terraIndigena é null ou undefined\");\n    return null;\n  }\n\n  const formatarSuperficie = () => {\n    return terraIndigena.superficie ? \n      `Superfície: ${parseFloat(terraIndigena.superficie).toFixed(2)} ha` : null;\n  };\n\n  const formatarLocalizacao = () => {\n    return `${terraIndigena.municipio || ''}, ${terraIndigena.uf || ''}`.trim();\n  };\n\n  return (\n    <InfoSection title=\"Informações da Terra Indígena\" icon={LargeHandFistIcon}>\n      <InfoItem label=\"Povos Indígenas\" value={terraIndigena.etnia} />\n      <InfoItem label=\"Localização\" value={formatarLocalizacao()} />\n      <InfoItem label=\"Superfície\" value={formatarSuperficie()} />\n      <InfoItem label=\"Fase\" value={terraIndigena.fase} />\n      <InfoItem label=\"Modalidade\" value={terraIndigena.modalidade} />\n      <InfoItem label=\"Reestudo\" value={terraIndigena.reestudo} />\n      <InfoItem label=\"Coordenação Regional\" value={terraIndigena.cr} />\n      <InfoItem label=\"Faixa de Fronteira\" value={terraIndigena.faixa_fron} />\n      <InfoItem label=\"Unidade Administrativa\" value={terraIndigena.undadm_nom} />\n      <InfoItem label=\"Sigla Unidade\" value={terraIndigena.undadm_sig} />\n      <InfoItem label=\"Domínio\" value={terraIndigena.dominio_un} />\n      <InfoItem label=\"Data de Atualização\" value={terraIndigena.data_atual} />\n      <InfoItem label=\"Código Terra Indígena\" value={terraIndigena.terrai_cod} />\n      <InfoItem label=\"Código Unidade Administrativa\" value={terraIndigena.undadm_cod} />\n    </InfoSection>\n  );\n});\n\nexport default TerraIndigenaInfo; ","import React, { useState } from \"react\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n  LinkedinIcon,\n} from \"react-share\";\n\n// Componente Tooltip simples\nconst Tooltip = ({ children, text, position = \"top\" }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n  };\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      onFocus={() => setIsVisible(true)}\n      onBlur={() => setIsVisible(false)}\n    >\n      {children}\n      {isVisible && (\n        <div className={`\n          absolute z-50 px-2 py-1 text-xs text-white bg-gray-900 rounded shadow-lg whitespace-nowrap\n          ${positionClasses[position]}\n        `}>\n          {text}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShareButton = ({ onClick, url, title, description = \"\" }) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      // Fallback para navegadores mais antigos\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  // Frases de compartilhamento mais atrativas\n  const shareTextOptions = [\n    `Conheça a escola indígena: ${title}`,\n    `Descubra esta escola indígena: ${title}`,\n    `Escola indígena incrível: ${title}`,\n    `Educação indígena em destaque: ${title}`,\n    `Conheça esta escola: ${title}`,\n    `Escola indígena que inspira: ${title}`,\n    `Educação que transforma: ${title}`,\n    `Escola indígena de referência: ${title}`\n  ];\n\n  // Seleciona uma frase aleatória para variar o conteúdo\n  const randomIndex = Math.floor(Math.random() * shareTextOptions.length);\n  const shareText = shareTextOptions[randomIndex];\n  const shareUrl = url || window.location.href;\n\n  return (\n    <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n      <div className=\"mt-2 space-y-1\">\n        {/* Botão Copiar Link */}\n        <Tooltip text={copied ? \"Link copiado!\" : \"Copiar link para clipboard\"}>\n          <button\n            onClick={handleCopyLink}\n            className={`\n              w-full flex items-start gap-2 p-1.5 rounded-md transition-colors\n              focus:outline-none focus:ring-1 focus:ring-green-500\n              ${copied\n                ? 'bg-green-100'\n                : 'bg-green-100 hover:bg-green-200'\n              }\n            `}\n            aria-label=\"Copiar link para clipboard\"\n          >\n            <svg \n              className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" \n              />\n            </svg>\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700\">\n                {copied ? 'Link Copiado' : 'Copiar Link'}\n              </div>\n            </div>\n          </button>\n        </Tooltip>\n\n        {/* Botão WhatsApp */}\n        <Tooltip text=\"Compartilhar no WhatsApp\">\n          <WhatsappShareButton\n            url={shareUrl}\n            title={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no WhatsApp\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <WhatsappIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">WhatsApp</div>\n              </div>\n            </div>\n          </WhatsappShareButton>\n        </Tooltip>\n\n        {/* Botão Facebook */}\n        <Tooltip text=\"Compartilhar no Facebook\">\n          <FacebookShareButton\n            url={shareUrl}\n            quote={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no Facebook\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <FacebookIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Facebook</div>\n              </div>\n            </div>\n          </FacebookShareButton>\n        </Tooltip>\n\n        {/* Botão Twitter */}\n        <Tooltip text=\"Compartilhar no Twitter\">\n          <TwitterShareButton\n            url={shareUrl}\n            title={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no Twitter\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <TwitterIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Twitter</div>\n              </div>\n            </div>\n          </TwitterShareButton>\n        </Tooltip>\n\n        {/* Botão LinkedIn */}\n        <Tooltip text=\"Compartilhar no LinkedIn\">\n          <LinkedinShareButton\n            url={shareUrl}\n            title={title}\n            summary={description}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no LinkedIn\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <LinkedinIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">LinkedIn</div>\n              </div>\n            </div>\n          </LinkedinShareButton>\n        </Tooltip>\n\n        {/* Botão Compartilhar Nativo (fallback) */}\n        {navigator.share && (\n          <Tooltip text=\"Compartilhar usando opções do sistema\">\n            <button\n              onClick={onClick}\n              className=\"w-full flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md transition-colors focus:outline-none focus:ring-1 focus:ring-green-500\"\n              aria-label=\"Compartilhar usando opções do sistema\"\n            >\n              <svg \n                className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" \n                />\n              </svg>\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Compartilhar</div>\n              </div>\n            </button>\n          </Tooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ShareButton);","import React, { memo } from 'react';\nimport ShareButton from '../ShareButton';\n\nconst ShareSection = memo(({ copiarLink, compartilhar, painelInfo }) => {\n  // Gerar URL customizada para compartilhamento\n  const gerarLinkCustomizado = () => {\n    if (!painelInfo?.titulo) return window.location.href;\n    \n    const criarSlug = (texto) => {\n      return texto\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim();\n    };\n\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  return (\n    <ShareButton \n      onClick={compartilhar}\n      url={gerarLinkCustomizado()}\n      title={painelInfo?.titulo || 'Painel de Escola Indígena'}\n      description={painelInfo?.descricao || 'Confira informações sobre esta escola indígena no Observatório de Professores Indígenas.'}\n    />\n  );\n});\n\nexport default ShareSection; ","import React, { useMemo } from \"react\";\nimport DOMPurify from \"dompurify\";\n\n/**\n * Componente PainelDescricao - Exibe conteúdo formatado com sanitização HTML\n * \n * @param {Object} props - Propriedades do componente\n * @param {string} props.descricao - Texto HTML ou texto puro a ser exibido\n * @param {string} props.className - Classes CSS adicionais (opcional)\n * @returns {React.ReactElement|null} - Componente renderizado ou null\n */\nconst PainelDescricao = ({ descricao, className = \"\" }) => {\n  // Função para formatar o texto com quebras de linha\n  const formatText = (text) => {\n    if (!text) return \"\";\n    \n    // Preserva parágrafos convertendo linhas duplas em tags <p>\n    let formattedText = text.replace(/\\n\\n+/g, \"</p><p>\");\n    \n    // Substitui quebras de linha simples por <br>\n    formattedText = formattedText.replace(/\\n/g, \"<br>\");\n    \n    // Adiciona tags <p> no início e fim se não existirem\n    if (!formattedText.startsWith(\"<p>\")) {\n      formattedText = \"<p>\" + formattedText;\n    }\n    if (!formattedText.endsWith(\"</p>\")) {\n      formattedText = formattedText + \"</p>\";\n    }\n    \n    // Remove espaços extras entre tags HTML\n    formattedText = formattedText.replace(/>\\s+</g, \"><\");\n    \n    return formattedText;\n  };\n\n  // Usa useMemo para evitar sanitização redundante em re-renders\n  const sanitizedHTML = useMemo(() => {\n    if (!descricao) return \"\";\n    \n    return DOMPurify.sanitize(formatText(descricao), {\n      ALLOWED_TAGS: [\n        'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li',\n        'div', 'span', 'img', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n        'center', 'blockquote', 'code', 'pre', 'hr', 'table', 'thead', \n        'tbody', 'tr', 'th', 'td'\n      ],\n      ALLOWED_ATTR: [\n        'href', 'target', 'rel', 'class', 'style', 'src', 'alt',\n        'width', 'height', 'id', 'title', 'aria-label', 'aria-describedby'\n      ],\n      ADD_TAGS: ['center', 'blockquote'],\n      ADD_ATTR: ['target', 'className', 'title'],\n      KEEP_CONTENT: true,\n      ALLOW_DATA_ATTR: false\n    });\n  }, [descricao]);\n\n  if (!descricao) return null;\n\n  return (\n    <div className={`mb-6 ${className}`}>\n      <div\n        className=\"prose prose-lg lg:prose-xl max-w-none px-1\"\n        style={{\n          '--tw-prose-body': '#1f2937',\n          '--tw-prose-headings': '#111827',\n          '--tw-prose-links': '#059669',\n          '--tw-prose-bold': '#111827',\n          '--tw-prose-counters': '#1f2937',\n          '--tw-prose-bullets': '#4b5563',\n          '--tw-prose-hr': '#e5e7eb',\n          '--tw-prose-quotes': '#111827',\n          '--tw-prose-quote-borders': '#10b981',\n          '--tw-prose-captions': '#6b7280',\n          '--tw-prose-code': '#111827',\n          '--tw-prose-pre-code': '#e5e7eb',\n          '--tw-prose-pre-bg': '#1f2937',\n          '--tw-prose-th-borders': '#d1d5db',\n          '--tw-prose-td-borders': '#e5e7eb',\n          lineHeight: '1.8',\n          fontSize: '1.125rem',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n          letterSpacing: '0.015em',\n        }}\n        dangerouslySetInnerHTML={{ __html: sanitizedHTML }}\n        aria-live=\"polite\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PainelDescricao);","import React, { memo } from 'react';\nimport PainelDescricao from '../PainelDescricao';\n\nconst IntroPanel = memo(({ painelInfo }) => (\n  <div className=\"space-y-6\">\n    <div className=\"prose prose-lg lg:prose-xl max-w-none\">\n      <div className=\"bg-green-100 rounded-lg p-6\">\n        <PainelDescricao descricao={painelInfo.descricao_detalhada} />\n      </div>\n    </div>\n    {painelInfo.audioUrl && (\n      <div className=\"mt-6\">\n        <audio controls className=\"w-full\">\n          <source src={painelInfo.audioUrl} type=\"audio/mpeg\" />\n          Seu navegador não suporta o elemento de áudio.\n        </audio>\n      </div>\n    )}\n  </div>\n));\n\nexport default IntroPanel; ","import React from \"react\";\nimport { X, Maximize2, Minimize2 } from \"lucide-react\";\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\nconst PainelHeader = ({ titulo, closePainel, toggleMaximize, isMaximized }) => {\n  const isMobile = window.innerWidth <= 768;\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const isVerySmallLandscape = isMobileLandscape && window.innerWidth <= 850;\n\n  return (\n    <header className={`relative px-3 sm:px-4 md:px-6 lg:px-8 py-3 sm:py-4 md:py-6 border-b border-green-100 ${isMobileLandscape ? 'min-h-[60px]' : ''}`}>\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between pr-12\">\n        <h2 \n          id=\"painel-titulo\"\n          className={`font-semibold text-gray-900 leading-tight tracking-normal break-words ${\n            isVerySmallLandscape\n              ? 'text-base' // Força fonte menor em paisagem muito estreita\n              : isMobileLandscape \n                ? 'text-lg sm:text-xl' \n                : 'text-xl sm:text-2xl md:text-3xl'\n          }`}\n          style={isVerySmallLandscape ? { fontSize: 'clamp(1rem, 4vw, 1.25rem)' } : {}}\n        >\n          {capitalizeWords(titulo)}\n        </h2>\n      </div>\n\n      <div className=\"absolute top-2 sm:top-4 right-2 sm:right-4 flex items-center gap-2\">\n        {!isMobile && (\n          <button\n            onClick={toggleMaximize}\n            className=\"p-2 text-green-700 hover:text-green-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            aria-label={isMaximized ? \"Restaurar painel\" : \"Maximizar painel\"}\n            title={isMaximized ? \"Restaurar\" : \"Maximizar\"}\n          >\n            {isMaximized ? (\n              <Minimize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            ) : (\n              <Maximize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            )}\n          </button>\n        )}\n\n        <button\n          onClick={closePainel}\n          className={`text-gray-700 hover:text-gray-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 ${\n            isMobileLandscape ? 'p-1.5' : 'p-2'\n          }`}\n          aria-label=\"Fechar painel\"\n        >\n          <X \n            size={isMobileLandscape ? 18 : 20} \n            aria-hidden=\"true\"\n            className=\"stroke-2\"\n          />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default PainelHeader;\n","import { useState, useEffect } from \"react\";\n\nconst usePainelVisibility = (painelInfo) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  console.log(\"usePainelVisibility - painelInfo:\", painelInfo);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileWidth = window.innerWidth <= 768;\n      const isMobileLandscape = window.innerWidth > window.innerHeight && window.innerWidth <= 1024;\n      setIsMobile(isMobileWidth || isMobileLandscape);\n    };\n    \n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    window.addEventListener(\"orientationchange\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n      window.removeEventListener(\"orientationchange\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.group(\"usePainelVisibility - Effect\");\n    console.log(\"painelInfo recebido:\", painelInfo);\n    \n    if (painelInfo && typeof painelInfo === 'object') {\n      console.log(\"painelInfo válido, definindo visibilidade como true\");\n      setIsVisible(true);\n      document.body.style.overflow = \"hidden\";\n    } else {\n      console.log(\"painelInfo inválido ou undefined, definindo visibilidade como false\");\n      setIsVisible(false);\n      document.body.style.overflow = \"\";\n    }\n\n    console.log(\"Estado atual:\", { isVisible, isMobile });\n    console.groupEnd();\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [painelInfo]);\n\n  console.log(\"usePainelVisibility - returning state:\", { isVisible, isMobile });\n\n  return { isVisible, isMobile };\n};\n\nexport default usePainelVisibility;","import React from 'react';\nimport PainelHeader from '../../PainelHeader';\nimport usePainelVisibility from '../../hooks/usePainelVisibility';\nimport { usePainelDimensions } from '../../hooks/usePainelDimensions';\n\nconst PainelContainer = ({ \n  painelInfo, \n  closePainel, \n  children,\n  isMaximized,\n  onToggleMaximize\n}) => {\n  const { isVisible, isMobile } = usePainelVisibility(painelInfo);\n  const painelDimensions = usePainelDimensions(isMobile, isMaximized);\n\n  if (!painelInfo) return null;\n\n  // Determinar altura da navbar baseada no tamanho da tela\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n\n  const baseClasses = `\n    fixed\n    ${isMobile \n      ? `inset-x-0 top-0 w-full h-full` \n      : 'top-30 bottom-0 right-0 w-full sm:w-3/4 lg:w-[49%] h-auto'\n    }\n    rounded-t-xl shadow-xl z-[9999] transform transition-all duration-500 ease-in-out\n    bg-white border-t-4 border-white\n  `;\n  \n  const visibilityClasses = isVisible \n    ? isMobile \n      ? \"translate-y-0 opacity-100\" \n      : \"translate-y-0 opacity-100\"\n    : isMobile \n      ? \"translate-y-full opacity-0\" \n      : \"translate-y-full opacity-0\";\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-labelledby=\"painel-titulo\"\n      aria-describedby=\"painel-descricao\"\n      aria-modal=\"true\"\n      className={`${baseClasses} ${visibilityClasses}${isMobile ? ' painel-informacoes-mobile' : ''}`}\n      style={{\n        height: painelDimensions.height,\n        maxHeight: painelDimensions.maxHeight,\n        width: isMobile ? '100%' : painelDimensions.width,\n        top: isMobile ? `${navbarHeight}px` : 72,\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...(isMobile && {\n          borderRadius: painelDimensions.isMobileLandscape ? '0' : '1rem 1rem 0 0',\n          boxShadow: painelDimensions.isMobileLandscape \n            ? '0 0 0 0' \n            : '0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06)'\n        })\n      }}\n    >\n      <PainelHeader \n        titulo={painelInfo.titulo} \n        closePainel={closePainel}\n        toggleMaximize={onToggleMaximize}\n        isMaximized={isMaximized}\n      />\n      \n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-green-600/40 scrollbar-track-green-50/20\">\n        <div className={`${isMobile ? 'p-3 sm:p-4' : 'p-6'} space-y-6 sm:space-y-8`}>\n          <div className=\"prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PainelContainer); ","import { useState, useEffect, useMemo } from 'react';\n\nexport const usePainelDimensions = (isMobile, isMaximized) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  \n  // Breakpoints para responsividade\n  const breakpoints = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    '2xl': 1536\n  };\n\n  // Detectar mudanças no tamanho da janela\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular dimensões base\n  const dimensions = useMemo(() => {\n    // Determinar altura da navbar baseada na orientação\n    const isMobileLandscape = isMobile && windowWidth > windowHeight;\n    const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n    const baseHeight = `calc(100vh - ${navbarHeight}px)`;\n    const baseMaxHeight = isMobile ? \"96vh\" : \"92vh\";\n\n    // Determinar se está em modo desktop\n    const isDesktop = windowWidth >= breakpoints.md;\n    \n    // Determinar se deve usar grid\n    const shouldUseGrid = isDesktop && isMaximized;\n\n    // Calcular largura do painel\n    let panelWidth;\n    if (isMobile) {\n      if (isMobileLandscape) {\n        // Mobile na horizontal: preencher toda a tela\n        panelWidth = '100%';\n      } else {\n        // Mobile na vertical: preencher toda a largura\n        panelWidth = '100%';\n      }\n    } else {\n      // Desktop\n      panelWidth = isMaximized \n      ? '100%' \n      : windowWidth >= breakpoints.lg \n        ? '49%' \n        : '75%';\n    }\n\n    return {\n      height: baseHeight,\n      maxHeight: baseMaxHeight,\n      width: panelWidth,\n      isDesktop,\n      isMobileLandscape,\n      shouldUseGrid,\n      breakpoints,\n      zIndex: 1000\n    };\n  }, [isMobile, isMaximized, windowWidth, windowHeight]);\n\n  return dimensions;\n};","import React, { useState, useEffect } from 'react';\nimport { getTituloByVideoUrl } from '../../../services/legendasService';\n\n/**\n * VideoPlayer\n * Componente para exibir vídeos do YouTube de forma responsiva e acessível.\n * Faz extração do ID do vídeo a partir de diferentes formatos de URL e exibe fallback amigável em caso de erro.\n * Props:\n *   - videoUrl: string (URL do vídeo)\n *   - title: string (opcional)\n *   - escolaId: number (ID da escola para buscar título personalizado)\n */\n\n// Utility function to extract YouTube video ID\nconst extrairIdYoutube = (url) => {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  // Remove query parameters to simplify\n  const baseUrl = url.split('?')[0];\n\n  // Patterns to extract video ID\n  const patterns = [\n    /youtube\\.com\\/embed\\/([^/?&]+)/,                 // embed/ID\n    /youtube\\.com\\/watch\\?v=([^&]+)/,                 // watch?v=ID\n    /youtu\\.be\\/([^?&]+)/,                            // youtu.be/ID\n    /youtube\\.com\\/v\\/([^?&]+)/                       // youtube.com/v/ID\n  ];\n\n  for (const pattern of patterns) {\n    const match = baseUrl.match(pattern);\n    if (match && match[1]) {\n      return match[1];\n    }\n  }\n\n  return null;\n};\n\nconst VideoPlayer = ({ videoUrl, title = \"Vídeo\", escolaId }) => {\n  const [tituloPersonalizado, setTituloPersonalizado] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Buscar título personalizado da nova tabela\n  useEffect(() => {\n    const buscarTitulo = async () => {\n      if (!videoUrl || !escolaId) return;\n\n      try {\n        setLoading(true);\n        const titulo = await getTituloByVideoUrl(videoUrl, escolaId);\n        setTituloPersonalizado(titulo);\n      } catch (error) {\n        console.warn('Erro ao buscar título personalizado:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarTitulo();\n  }, [videoUrl, escolaId]);\n\n  if (!videoUrl) return null;\n\n  const videoId = extrairIdYoutube(videoUrl);\n  \n  if (!videoId) {\n    return (\n      <div className=\"mt-8 max-w-4xl mx-auto\">\n        <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n          {tituloPersonalizado?.titulo || title}:\n        </h3>\n        <div className=\"p-6 text-center text-gray-600 bg-gray-50 rounded-lg\">\n          <p className=\"mb-3 text-lg\">Link do vídeo inválido ou não suportado.</p>\n          <a\n            href={videoUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n          >\n            <svg \n              className=\"w-5 h-5 mr-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" \n              />\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \n              />\n            </svg>\n            Tentar abrir no YouTube\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n        {tituloPersonalizado?.titulo || title}:\n      </h3>\n      \n      {/* Informações adicionais do título personalizado */}\n      {tituloPersonalizado && (\n        <div className=\"mb-4 p-4 bg-green-100 rounded-lg\">\n          {tituloPersonalizado.descricao && (\n            <p className=\"text-gray-700 mb-2\">{tituloPersonalizado.descricao}</p>\n          )}\n          \n          <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n            {tituloPersonalizado.categoria && (\n              <span className=\"capitalize bg-green-200 text-green-800 px-2 py-1 rounded\">\n                {tituloPersonalizado.categoria}\n              </span>\n            )}\n            {tituloPersonalizado.plataforma && (\n              <span className=\"capitalize\">\n                {tituloPersonalizado.plataforma}\n              </span>\n            )}\n            {tituloPersonalizado.duracao && (\n              <span>Duração: {tituloPersonalizado.duracao}</span>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        <div className=\"relative pb-[56.25%] h-0\">\n          <iframe\n            className=\"absolute top-0 left-0 w-full h-full\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            title={tituloPersonalizado?.titulo || title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            loading=\"lazy\"\n            referrerPolicy=\"origin\"\n          />\n        </div>\n      </div>\n      \n      <div className=\"mt-4 text-center\">\n        <a\n          href={videoUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center text-green-700 hover:text-green-800 hover:underline\"\n        >\n          <svg \n            className=\"w-5 h-5 mr-2\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n            />\n          </svg>\n          Ver vídeo no YouTube\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(VideoPlayer); ","import React, { useRef, useState, useEffect } from \"react\";\nimport { useShare } from \"../hooks/useShare\";\nimport { useDynamicURL } from \"../hooks/useDynamicURL\";\nimport { useClickOutside } from \"../hooks/useClickOutside\";\nimport useAudio from \"../hooks/useAudio\";\nimport useDocumentosEscola from \"../hooks/useDocumentosEscola\";\n\n// Import modular components\nimport EscolaInfo from \"./components/EscolaInfo\";\nimport TerraIndigenaInfo from \"./TerraIndigenaInfo\";\nimport ShareSection from \"./ShareSection\";\nimport IntroPanel from \"./IntroPanel\";\nimport PainelContainer from \"./components/PainelContainer\";\nimport DocumentViewer from \"./components/DocumentViewer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst PainelInformacoes = ({ painelInfo, closePainel, escola_id, refreshKey = 0 }) => {\n  const painelRef = useRef(null);\n  const [isMaximized, setIsMaximized] = useState(false);\n  \n  const { gerarLinkCustomizado, copiarLink, compartilhar } = useShare(painelInfo);\n  const { documentos } = useDocumentosEscola(painelInfo?.id);\n  \n  const toggleMaximize = () => setIsMaximized(prev => !prev);\n  \n  useDynamicURL(painelInfo, gerarLinkCustomizado);\n  useClickOutside(painelRef, closePainel);\n\n  // Forçar re-renderização quando refreshKey mudar\n  useEffect(() => {\n    console.log('PainelInformacoes: refreshKey mudou para', refreshKey);\n  }, [refreshKey]);\n\n  if (!painelInfo) {\n    return null;\n  }\n\n  // Determine panel type\n  const isTerraIndigena = painelInfo.tipo === 'terra_indigena';\n  const isIntro = painelInfo.titulo === 'Sobre o site';\n\n  const renderContent = () => {\n    if (isIntro) {\n      return <IntroPanel painelInfo={painelInfo} />;\n    }\n    \n    if (isTerraIndigena) {\n      return <TerraIndigenaInfo terraIndigena={painelInfo} />;\n    }\n\n    return (\n      <>\n        <EscolaInfo \n          escola={painelInfo} \n          shouldUseGrid={true}\n          refreshKey={refreshKey}\n        />\n        {documentos && documentos.length > 0 && (\n          <DocumentViewer \n            documentos={documentos}\n            title=\"Produções e materiais da escola\"\n          />\n        )}\n        {painelInfo.link_para_videos && (\n          <VideoPlayer \n            videoUrl={painelInfo.link_para_videos}\n            title=\"Vídeo da escola\"\n            escolaId={painelInfo.id}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div ref={painelRef}>\n      <PainelContainer\n        painelInfo={painelInfo}\n        closePainel={closePainel}\n        isMaximized={isMaximized}\n        onToggleMaximize={toggleMaximize}\n      >\n        {renderContent()}\n        <ShareSection \n          copiarLink={copiarLink} \n          compartilhar={compartilhar} \n          painelInfo={painelInfo}\n        />\n      </PainelContainer>\n    </div>\n  );\n};\n\nexport default React.memo(PainelInformacoes); ","import { criarSlug } from '../../utils/slug';\n\nexport const useShare = (painelInfo) => {\n  const gerarLinkCustomizado = () => {\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  const copiarLink = async () => {\n    const url = gerarLinkCustomizado();\n    try {\n      await navigator.clipboard.writeText(url);\n      alert(\"Link copiado!\");\n    } catch (err) {\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      alert(\"Link copiado!\");\n    }\n  };\n\n  const compartilhar = () => {\n    const url = gerarLinkCustomizado();\n    const texto = `Confira este painel: ${painelInfo.titulo}`;\n    \n    if (navigator.share) {\n      navigator.share({\n        title: painelInfo.titulo,\n        text: texto,\n        url: url,\n      });\n    } else {\n      window.open(\n        `https://twitter.com/intent/tweet?text=${encodeURIComponent(texto)}&url=${encodeURIComponent(url)}`,\n        \"_blank\"\n      );\n    }\n  };\n\n  return { gerarLinkCustomizado, copiarLink, compartilhar };\n};","import { useEffect } from \"react\";\n\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Só fecha se o clique for no mapa (leaflet-container)\n      let el = event.target;\n      let isMap = false;\n      while (el) {\n        if (\n          el.classList && el.classList.contains('leaflet-container')\n        ) {\n          isMap = true;\n          break;\n        }\n        if (\n          el.classList && el.classList.contains('ol-marker') ||\n          el.getAttribute?.('data-marker') === 'true' ||\n          el.getAttribute?.('data-map-marker') === 'true'\n        ) {\n          // Clique em marcador, não fecha\n          return;\n        }\n        el = el.parentElement;\n      }\n      if (isMap && ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    document.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n      document.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, handler]);\n};","import { useEffect, useRef } from \"react\";\n\nexport const useDynamicURL = (painelInfo, gerarLinkCustomizado) => {\n  const lastUrlRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!painelInfo) return;\n\n    // Limpa o timeout anterior se existir\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Cria um novo timeout para debounce\n    timeoutRef.current = setTimeout(() => {\n      const newUrl = gerarLinkCustomizado();\n      \n      // Só atualiza se a URL realmente mudou\n      if (newUrl !== lastUrlRef.current) {\n        try {\n          window.history.replaceState({}, \"\", newUrl);\n          lastUrlRef.current = newUrl;\n        } catch (error) {\n          console.warn('Erro ao atualizar URL:', error);\n        }\n      }\n    }, 300); // 300ms de debounce\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [painelInfo, gerarLinkCustomizado]);\n};","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  const [initialPanelOpened, setInitialPanelOpened] = useState(!!initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Abrir painel automaticamente quando initialPanel for encontrado (apenas uma vez)\n  useEffect(() => {\n    if (initialPanel && !painelInfo && !initialPanelOpened) {\n      console.log('MapaEscolasIndigenas: Abrindo painel automaticamente para:', initialPanel.titulo);\n      setPainelInfo(initialPanel);\n      setInitialPanelOpened(true);\n    }\n  }, [initialPanel, painelInfo, initialPanelOpened]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        painelAberto={!!painelInfo}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n}; "],"names":["SIGLAS_MAIUSCULAS","capitalizeWords","str","split","map","word","includes","toUpperCase","charAt","substr","toLowerCase","join","MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","React","props","ref","_jsx","_objectSpread","id","className","terrasIndigenasStyle","feature","isRegularizada","getProperties","fase_ti","Style","fill","Fill","color","stroke","Stroke","width","lineDash","estadoSPStyle","createMarkerSVG","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","createMarkerStyle","showNomesEscolas","schoolData","get","svg","svgUrl","encodeURIComponent","style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","titulo","font","offsetY","textAlign","textBaseline","error","createClusterStyle","features","singleFeature","baseSize","Math","min","finalSize","round","fontSize","fontWeight","toString","proj4","defs","register","_ref","dataPoints","onPainelOpen","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","mapContainer","useRef","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","terrasIndigenasLayerRef","estadoSPLayerRef","handleMarkerClick","useCallback","event","isMobile","console","log","createBaseLayers","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createTooltipHTML","useEffect","current","isMobileDevice","initialCenter","initialZoom","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","f","zIndex","Map","target","layers","view","View","fromLonLat","enableRotation","controls","defaultControls","interactions","defaultInteractions","dragRotate","pinchRotate","on","getView","toLonLat","getCenter","newView","toFixed","getZoom","changed","forEachFeatureAtPixel","pixel","clusterExtent","getExtent","currentZoom","targetZoom","max","fit","duration","padding","tooltipElement","remove","createTooltipElement","createClusterTooltipElement","terraIndigenaInfo","data","type","element","document","createElement","content","backgroundColor","setAttribute","textContent","position","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","pointerEvents","boxShadow","border","backdropFilter","coordinate","getPixelFromCoordinate","left","top","appendChild","count","preventDefault","stopPropagation","setTarget","newCenter","newZoom","currentCenter","setCenter","setZoom","clear","pontosValidos","filter","point","latitude","longitude","parseFloat","isNaN","nearbyPairs","pontos","threshold","pairs","used","Set","i","has","j","p1","p2","latDiff","abs","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","findIndex","pair","addFeature","setStyle","removeLayer","addLayer","clickTimeout","lastClickedFeature","clickCount","handleClick","clearTimeout","setTimeout","extent","un","GeoJSON","dataProjection","featureProjection","readFeatures","terrasIndigenasLayer","getSource","getFeatures","properties","terrai_nom","tipo","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","estadoSPLayer","interactive","MapWrapper","cache","useGeoJSONCache","key","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","crs","firstFeature","Object","keys","coordinates","err","fetchGeoJSON","painelAberto","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","terrasIndigenas","hasData","estadoSP","shouldReactivate","CabecalhoMenu","_ref2","onMinimize","_jsxs","children","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","criarSlug","texto","normalize","replace","trim","escolaId","documentos","setDocumentos","isLoading","setIsLoading","authData","authError","supabase","auth","getSession","temSessao","session","rlsData","rlsError","from","select","limit","podeAcessar","code","message","details","hint","allDocs","allDocsError","doc","escola_id","tipo_escola_id","valor_escola_id","eq","order","ascending","dataAsNumber","errorAsNumber","Number","dataAsString","errorAsString","String","fetchDocumentos","InfoGrid","memo","columns","gap","InfoTable","row","value","InfoStats","_ref4","stats","stat","icon","InfoSection","_ref5","title","description","defaultCollapsed","layout","layoutProps","isCollapsed","setIsCollapsed","role","renderContent","capitalize","slice","CompactCard","Check","X","InfoBlock","AddressDetails","escola","logradouro","numero","bairro","cep","endereco","field","MapPin","estado","Boolean","MapButton","openMap","open","Navigation","SocialLinks","_ref6","links","expanded","onToggle","socialLinks","social","Globe","ChevronRight","link","href","rel","LinkIcon","ExternalLink","_ref7","setExpanded","toggle","basicInfoCards","Building","Calendar","ano_criacao","usa_redes_sociais","_Fragment","povos_indigenas","diretoria_ensino","links_redes_sociais","ImagensdasEscolas","refreshKey","imagens","setImagens","imagemZoom","setImagemZoom","cacheRef","cacheVersion","setCacheVersion","limparCacheERecarregar","fecharZoom","body","handleEsc","e","cacheKey","files","storage","list","imagensEncontradas","Promise","all","file","_legenda","_legenda2","_legenda3","_legenda4","_legenda5","filePath","name","publicUrl","getPublicUrl","legenda","getLegendaByImageUrl","warn","publicURL","descricao","descricaoDetalhada","descricao_detalhada","autor","autor_foto","dataFoto","data_foto","categoria","urlError","buscarImagens","RefreshCw","img","alt","maxHeight","Date","toLocaleDateString","historia_da_escola","marginTop","ExpandableList","items","maxVisible","idx","minWidth","display","MiniCard","turnosValue","turnos_funcionamento","modalidadeList","modalidade_ensino","Sparkles","gridItems","Clock","Users","numero_alunos","MessageCircle","linguas_faladas","materiaisItems","BookOpen","BooleanValue","material_nao_indigena","material_indigena","Droplet","acesso_agua","Trash2","coleta_lixo","Wifi","acesso_internet","Monitor","equipamentos","modo_acesso","Utensils","cozinha","Apple","merenda_escolar","ChefHat","diferenciada","Home","espaco_escolar","renderBooleanStatus","valor","normalizado","formacao","resto","formatarFormacaoProfessores","formacao_professores","continuada","formatarFormacaoContinuada","formacao_continuada","UsersRound","UserCheck","professores_indigenas","UserMinus","professores_nao_indigenas","professores_falam_lingua","Star","User","gestao","outros_funcionarios","NotebookPen","ProjectCard","isNegative","availableProjects","GraduationCap","Heart","Target","project","ImagemHistoriadoProfessor","then","imagensComUrl","genero","startsWith","caminhoRelativo","nome","created_at","catch","historias","setHistorias","currentHistoriaIndex","setCurrentHistoriaIndex","getHistoriasProfessor","carregarHistorias","nextHistoria","prevHistoria","handleKeyDown","currentHistoria","hasMultipleHistorias","margin","outline","nome_professor","historia","imagem_public_url","descricao_imagem","ChevronLeft","_","GridLayoutWrapper","shouldUseGrid","containerClasses","gridSections","Component","BasicInfo","Modalidades","Infraestrutura","GestaoProfessores","ProjetosParcerias","HistoriaEscola","HistoriadoProfessor","_objectWithoutProperties","_excluded","xmlns","viewBox","d","isTextArea","baseClasses","LargeHandFistIcon","HandFistIcon","terraIndigena","InfoItem","Tooltip","isVisible","setIsVisible","onMouseEnter","onMouseLeave","onFocus","onBlur","bottom","ShareButton","copied","setCopied","shareTextOptions","shareText","floor","random","shareUrl","location","navigator","clipboard","writeText","input","execCommand","removeChild","strokeLinecap","strokeLinejoin","strokeWidth","WhatsappShareButton","WhatsappIcon","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","LinkedinShareButton","summary","LinkedinIcon","share","copiarLink","compartilhar","painelInfo","gerarLinkCustomizado","origin","pathname","PainelDescricao","sanitizedHTML","useMemo","DOMPurify","sanitize","formattedText","endsWith","formatText","ALLOWED_TAGS","ALLOWED_ATTR","ADD_TAGS","ADD_ATTR","KEEP_CONTENT","ALLOW_DATA_ATTR","lineHeight","letterSpacing","dangerouslySetInnerHTML","__html","audioUrl","closePainel","toggleMaximize","isMaximized","isMobileLandscape","innerHeight","isVerySmallLandscape","Minimize2","Maximize2","isMobileWidth","group","groupEnd","PainelContainer","onToggleMaximize","usePainelVisibility","painelDimensions","usePainelDimensions","windowWidth","setWindowWidth","windowHeight","setWindowHeight","breakpoints","sm","md","lg","xl","handleResize","baseHeight","isDesktop","panelWidth","height","navbarHeight","visibilityClasses","flexDirection","PainelHeader","VideoPlayer","videoUrl","tituloPersonalizado","setTituloPersonalizado","getTituloByVideoUrl","buscarTitulo","videoId","baseUrl","patterns","pattern","match","extrairIdYoutube","plataforma","duracao","frameBorder","allow","allowFullScreen","referrerPolicy","PainelInformacoes","painelRef","setIsMaximized","alert","useShare","useDocumentosEscola","useClickOutside","handler","useDynamicURL","lastUrlRef","timeoutRef","newUrl","history","replaceState","handleClickOutside","el","isMap","_el$getAttribute","_el","_el$getAttribute2","_el2","classList","contains","getAttribute","call","parentElement","isTerraIndigena","isIntro","IntroPanel","TerraIndigenaInfo","EscolaInfo","DocumentViewer","link_para_videos","ShareSection","quantidade","exemplo","useRefresh","panel","URLSearchParams","search","initialPanel","find","setPainelInfo","initialPanelOpened","setInitialPanelOpened","escolasVisiveis","pontuacao","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","abrirPainel","info","refreshPainel","fecharPainel","MapSelector"],"sourceRoot":""}
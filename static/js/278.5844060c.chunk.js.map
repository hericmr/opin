{"version":3,"file":"static/js/278.5844060c.chunk.js","mappings":"8OAQO,MAqCMA,EAAiBC,UAC5B,IACEC,QAAQC,IAAI,iCACZD,QAAQC,IAAI,mBAAoBC,GAGhC,MAAMC,GAAWC,EAAAA,EAAAA,GAAA,GAAQF,GACzBF,QAAQC,IAAI,kBAAmBE,GAG/B,IACEH,QAAQC,IAAI,+CAEZ,MAAQI,KAAMC,EAAUC,MAAOC,SAAoBC,EAAAA,EAChDC,KAAK,kBACLC,OAAO,aACPC,MAAM,GAETZ,QAAQC,IAAI,6BAA8B,CAAEK,WAAUE,cAElDA,GAAgC,UAAnBA,EAAUK,OAEzBb,QAAQc,KAAK,qFACNX,EAAYY,UAEvB,CAAE,MAAOC,GAEPhB,QAAQc,KAAK,qFACNX,EAAYY,SACrB,CAEAf,QAAQC,IAAI,oCAA+BE,GAE3C,MAAM,KAAEE,EAAI,MAAEE,SAAgBE,EAAAA,EAC3BC,KAAK,kBACLO,OAAO,CAACd,IACRQ,SACAO,SAIH,GAFAlB,QAAQC,IAAI,wBAAyB,CAAEI,OAAME,UAEzCA,EAEF,MADAP,QAAQO,MAAM,oBAAqBA,GAC7BA,EAIR,OADAP,QAAQC,IAAI,8BAA+BI,GACpCA,CACT,CAAE,MAAOE,GAEP,MADAP,QAAQO,MAAM,qCAAsCA,GAC9CA,CACR,GASWY,EAAoBpB,MAAOqB,EAAIC,KAC1C,IACErB,QAAQC,IAAI,oCACZD,QAAQC,IAAI,iBAAkBmB,GAC9BpB,QAAQC,IAAI,gCAA2BoB,GAEvC,MAAM,KAAEhB,EAAI,MAAEE,SAAgBE,EAAAA,EAC3BC,KAAK,kBACLY,OAAOD,GACPE,GAAG,KAAMH,GACTT,SACAO,SAIH,GAFAlB,QAAQC,IAAI,wBAAyB,CAAEI,OAAME,UAEzCA,EAEF,MADAP,QAAQO,MAAM,iCAAkCA,GAC1CA,EAIR,OADAP,QAAQC,IAAI,kCAAmCI,GACxCA,CACT,CAAE,MAAOE,GAEP,MADAP,QAAQO,MAAM,qCAAsCA,GAC9CA,CACR,GAmIWiB,EAAuBzB,eAAO0B,EAAWC,GAA+B,IAArBC,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACzE,IACE5B,QAAQC,IAAI,oCAAqC,CAAEwB,YAAWC,WAAUC,aAGxE,IAAII,EAAQtB,EAAAA,EACTC,KAAK,kBACLC,OAAO,KACPY,GAAG,aAAcE,GACjBF,GAAG,YAAaG,GAChBH,GAAG,SAAS,GAEf,GAAII,EACF,IACEI,EAAQA,EAAMR,GAAG,YAAaI,EAChC,CAAE,MAAOX,GACPhB,QAAQc,KAAK,iEACf,CAGF,IAAI,KAAET,EAAI,MAAEE,SAAgBwB,EAAMb,SAIlC,GAHAlB,QAAQC,IAAI,2BAA4B,CAAEI,OAAME,UAG3CA,GAAwB,aAAfA,EAAMM,OAAyBR,EAAM,CACjDL,QAAQC,IAAI,2CAEZ,MAAM+B,EAAkBP,EAAUQ,MAAM,KAAKC,OAAO,GAAGC,KAAK,KAC5DnC,QAAQC,IAAI,gCAA8B+B,GAE1C,IAAII,EAAS3B,EAAAA,EACVC,KAAK,kBACLC,OAAO,KACP0B,MAAM,aAAa,KAADC,OAAON,IACzBT,GAAG,YAAaG,GAChBH,GAAG,SAAS,GAEf,GAAII,EACF,IACES,EAASA,EAAOb,GAAG,YAAaI,EAClC,CAAE,MAAOX,GACP,CAIJ,MAAQX,KAAMkC,EAAOhC,MAAOiC,SAAiBJ,EAAOlB,SAGpD,GAFAlB,QAAQC,IAAI,2CAAsC,CAAEsC,QAAOC,YAEtDA,GAAUD,EACb,OAAOA,CAEX,CAEA,GAAIhC,GAAwB,aAAfA,EAAMM,KACjB,MAAMN,EAGR,OAAOF,GAAQ,IACjB,CAAE,MAAOE,GAEP,OADAP,QAAQO,MAAM,kCAAmCA,GAC1C,IACT,CACF,EAQakC,EAAsB1C,MAAO2C,EAAUhB,KAClD,IACE,MAAM,KAAErB,EAAI,MAAEE,SAAgBE,EAAAA,EAC3BC,KAAK,kBACLC,OAAO,KACPY,GAAG,YAAamB,GAChBnB,GAAG,YAAaG,GAChBH,GAAG,SAAS,GACZL,SAEH,GAAIX,GAAwB,aAAfA,EAAMM,KACjB,MAAMN,EAGR,OAAOF,GAAQ,IACjB,CAAE,MAAOE,GAEP,OADAP,QAAQO,MAAM,oCAAkCA,GACzC,IACT,GAsHWoC,EAAoB5C,UAC/B,IACEC,QAAQC,IAAI,iEAGZ,MAAQI,KAAMuC,EAAWrC,MAAOsC,SAAqBpC,EAAAA,EAClDC,KAAK,kBACLC,OAAO,KACPC,MAAM,GAIT,GAFAZ,QAAQC,IAAI,2BAA4B,CAAE2C,YAAWC,eAEjDA,EAEF,YADA7C,QAAQO,MAAM,mFAAmEsC,GAKnF,MAAQxC,KAAMyC,EAAevC,MAAOwC,SAAyBtC,EAAAA,EAC1DC,KAAK,kBACLC,OAAO,4HACPC,MAAM,GAETZ,QAAQC,IAAI,iCAAkC,CAAE6C,gBAAeC,mBAE3DA,EACF/C,QAAQO,MAAM,iDAA6CwC,GAE3D/C,QAAQC,IAAI,mDAId,IACE,MAAQI,KAAM2C,EAAUzC,MAAO0C,SAAoBxC,EAAAA,EAChDC,KAAK,kBACLC,OAAO,aACPC,MAAM,GAETZ,QAAQC,IAAI,8BAA+B,CAAE+C,WAAUC,cAEnDA,GAAgC,UAAnBA,EAAUpC,KACzBb,QAAQC,IAAI,gEACHgD,EACTjD,QAAQO,MAAM,8CAA0C0C,GAExDjD,QAAQC,IAAI,iCAEhB,CAAE,MAAOgD,GACPjD,QAAQC,IAAI,+DACd,CAGAD,QAAQC,IAAI,wCACZ,MAAMiD,EAAa,CACjBC,UAAW,OACXC,WAAY,gBACZlD,QAAS,mBACTmD,oBAAqB,2BACrBC,WAAY,QACZC,UAAW,aACXC,UAAW,QACXC,OAAO,EACPC,YAAY,IAAIC,MAAOC,cACvBC,YAAY,IAAIF,MAAOC,eAGzB,IACE,MAAQvD,KAAMyD,EAAYvD,MAAOwD,SAAsBtD,EAAAA,EACpDC,KAAK,kBACLO,OAAO,CAACiC,IACRvC,SACAO,SAIH,GAFAlB,QAAQC,IAAI,qCAAgC,CAAE6D,aAAYC,gBAEtDA,EACF/D,QAAQO,MAAM,4CAAkCwD,OAC3C,CACL/D,QAAQC,IAAI,sEAGZ,MAAQM,MAAOyD,SAAsBvD,EAAAA,EAClCC,KAAK,kBACLuD,SACA1C,GAAG,KAAMuC,EAAW1C,IAEnB4C,EACFhE,QAAQO,MAAM,wEAAyDyD,GAEvEhE,QAAQC,IAAI,gDAEhB,CACF,CAAE,MAAO8D,GACP/D,QAAQO,MAAM,iDAAuCwD,EACvD,CAEA/D,QAAQC,IAAI,uBAEd,CAAE,MAAOM,GACPP,QAAQO,MAAM,wCAAoCA,EACpD,E,0NCrjBK,MAAM2D,EAAa,CAExBC,OAAQ,EAAE,SAAU,SACpBC,KAAM,KACNC,QAAS,GACTC,QAAS,EAGTC,OAAQ,CACNJ,OAAQ,EAAE,SAAU,SACpBC,KAAM,KAIRI,gBAAiB,GAGjBC,mBAAoB,KAGpBC,wBAAyB,GAGzBC,cAAe,I,iCCvBjB,MAIA,EAJmBC,EAAAA,YAAiB,CAACC,EAAOC,KACnCC,EAAAA,EAAAA,KAAA,OAAA3E,EAAAA,EAAAA,GAAA,CAAKgB,GAAG,MAAM4D,UAAU,gBAAgBF,IAAKA,GAASD,M,kCCIxD,SAASI,EAAqBC,GACnC,MACMC,EAAwC,iBAD3BD,EAAQE,gBACOC,QAElC,OAAO,IAAIC,EAAAA,GAAM,CACfC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAON,EAAiB,yBAA2B,0BAErDO,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,EACPC,SAAU,CAAC,EAAG,MAGpB,CAMO,SAASC,IACd,OAAO,IAAIR,EAAAA,GAAM,CACfC,KAAM,IAAIC,EAAAA,EAAK,CACbC,MAAO,uBAETC,OAAQ,IAAIC,EAAAA,EAAO,CACjBF,MAAO,UACPG,MAAO,KAGb,C,wBC9BO,SAASG,EAAgBN,GAAiC,IAA1BO,EAAIpE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIqE,EAAOrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3D,MAAM,YACJsE,EAAc,KAAI,WAClBC,GAAa,EAAI,aACjBC,GAAe,EAAI,SACnBC,GAAW,EAAK,aAChBC,GAAe,GACbL,EAEEM,EAAYd,EACZe,EAAmBN,GAAeK,EAClCpC,EAAS6B,EAAO,EAChBS,EAAQT,EAAO,GACfU,EAAe,EAAID,EACnBE,EAAa,EAAIF,EAEjBG,EAAU,IAAAtE,OAAO6B,EAAM,KAAA7B,OAAI,EAAImE,EAAK,KAAAnE,OAAI6B,EAAS,KAAOsC,EAAK,KAAAnE,OAAI,EAAImE,EAAK,KAAAnE,OAAI6B,EAAS,EAAIsC,EAAK,KAAAnE,OAAI,KAAOmE,EAAK,KAAAnE,OAAI6B,EAAS,EAAIsC,EAAK,KAAAnE,OAAI,EAAImE,EAAK,OAAAnE,OAAM,KAAOmE,EAAK,KAAAnE,OAAI,EAAImE,EAAK,KAAAnE,OAAI,GAAKmE,EAAK,KAAAnE,OAAI,EAAImE,EAAK,KAAAnE,OAAI,GAAKmE,EAAK,KAAAnE,OAAI,EAAImE,EAAK,MAAAnE,OAAK,KAAOmE,EAAK,KAAAnE,OAAI,EAAImE,EAAK,MAAAnE,OAAK,GAAKmE,EAAK,QAAAnE,OAAO,KAAOmE,EAAK,MAAAnE,OAAK,KAAOmE,EAAK,MAAAnE,OAAK,EAAImE,EAAK,MAAAnE,OAAK,EAAImE,EAAK,MAAAnE,OAAK,EAAImE,EAAK,KAEzW,MAAM,qBAANnE,OACgB0D,EAAI,cAAA1D,OAAa0D,EAAI,mBAAA1D,OAAkB0D,EAAI,KAAA1D,OAAI0D,EAAI,iEAAA1D,OAE3D6D,EAAU,gCAAA7D,OACS0D,EAAI,wFAAA1D,OACI,EAAImE,EAAK,oBAAAnE,OAAmB,EAAImE,EAAK,kEAE9D,GAAE,cAAAnE,OACJ8D,EAAY,0CAAA9D,OACiB0D,EAAI,0FAAA1D,OACKiE,EAAS,yEAAAjE,OACPkE,EAAgB,4DAEtD,GAAE,cAAAlE,OACJ+D,EAAQ,8BAAA/D,OACS0D,EAAI,6FAAA1D,OACW,EAAImE,EAAK,iMAMvC,GAAE,+EAAAnE,OAIN+D,EAAQ,uBAAA/D,OACI6B,EAAS,EAAIsC,EAAK,UAAAnE,OAAS6B,EAAS,EAAIsC,EAAK,SAAAnE,OAAQqE,EAAU,0CACzE,GAAE,uFAAArE,OAGKsE,EAAU,0BAAAtE,OACP8D,EAAY,iBAAA9D,OAAoB0D,EAAI,KAAMO,EAAS,oBAAAjE,OACzD6D,EAAU,uBAAA7D,OAA0B0D,EAAI,MAAO,GAAE,kBAAA1D,OACjD+D,EAAQ,qBAAA/D,OAAwB0D,EAAI,MAAO,GAAE,4FAAA1D,OAGvC6B,EAAM,UAAA7B,OAAS,EAAImE,EAAK,SAAAnE,OAAQoE,EAAY,+GAAApE,OAG5C6B,EAAS,EAAIsC,EAAK,UAAAnE,OAAS,EAAImE,EAAK,SAAAnE,OAAuB,GAAfoE,EAAkB,sHAAApE,OAG1EgE,EAAY,uBAAAhE,OACA0D,EAAO,EAAIS,EAAK,UAAAnE,OAAS,EAAImE,EAAK,SAAAnE,OAAQ,EAAImE,EAAK,qDAAAnE,OACtD0D,EAAO,EAAIS,EAAK,SAAAnE,OAAQ,EAAImE,EAAK,sCAAAnE,OAAqC,EAAImE,EAAK,sDACtF,GAAE,mBAGZ,CCjEO,SAASI,EAAkB3B,GAAoC,IAA3B4B,EAAgBlF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACzD,IACE,MAAMmF,EAAa7B,EAAQ8B,IAAI,cAC/B,IAAKD,EAAY,OAAO,KAExB,MAAMR,EAAY,UACZL,EAAc,UACdI,EAAepB,EAAQ8B,IAAI,gBAG3BC,EAAMlB,EAAgBQ,EAAW,GAAI,CACzCL,YAAaA,EACbC,YAAY,EACZC,cAAc,EACdC,UAAU,EACVC,aAAcA,IAEVY,EAAS,oCAAsCC,mBAAmBF,GAElEG,EAAQ,IAAI9B,EAAAA,GAAM,CACtB+B,MAAO,IAAIC,EAAAA,EAAK,CACdC,IAAKL,EACLT,MAAOH,EAAe,IAAM,EAC5BkB,OAAQ,CAAC,GAAK,GACdC,aAAc,WACdC,aAAc,eAgBlB,OAZIZ,GACFM,EAAMO,QAAQ,IAAIC,EAAAA,EAAK,CACrBC,KAAMd,EAAWe,QAAU,SAC3BC,KAAM,kBACNxC,KAAM,IAAIC,EAAAA,EAAK,CAAEC,MAAO,YACxBC,OAAQ,IAAIC,EAAAA,EAAO,CAAEF,MAAO,UAAWG,MAAO,IAC9CoC,QAAS1B,GAAgB,IAAM,GAC/B2B,UAAW,SACXC,aAAc,YAIXd,CACT,CAAE,MAAO7G,GACP,OAAO,IACT,CACF,CAQO,SAAS4H,EAAmBjD,EAAS2B,GAC1C,IACE,MAAMuB,EAAWlD,EAAQ8B,IAAI,YAC7B,IAAKoB,GAAgC,IAApBA,EAASvG,OAAc,OAAO,KAC/C,MAAMmE,EAAOoC,EAASvG,OAEtB,GAAa,IAATmE,EAAY,CACd,MAAMqC,EAAgBD,EAAS,GAC/B,OAAKC,EACExB,EAAkBwB,GADE,IAE7B,CAEA,IAAI9B,EAAY,UACZ+B,EAAW,GACXtC,EAAO,KACTO,EAAY,UACZ+B,EAAW,IACFtC,EAAO,IAChBO,EAAY,UACZ+B,EAAW,IACFtC,EAAO,IAChBO,EAAY,UACZ+B,EAAW,IACFtC,EAAO,KAChBO,EAAY,UACZ+B,EAAW,IAEb,MAAM7B,EAAQ8B,KAAKC,IAAI,EAAc,KAAPxC,EAAe,KACvCyC,EAAYF,KAAKG,MAAMJ,EAAW7B,GAGlCQ,EAAMlB,EAAgBQ,EAAWkC,EAAW,CAChDvC,YAAaK,EACbJ,YAAY,EACZC,cAAc,EACdC,SAAUL,EAAO,GACjBM,cAAc,IAEVY,EAAS,oCAAsCC,mBAAmBF,GAExE,IAAI0B,EAAW,OACXC,EAAa,OAKjB,OAJI5C,EAAO,IAAK2C,EAAW,OAClB3C,EAAO,GAAI2C,EAAW,OACtB3C,EAAO,KAAI2C,EAAW,QAExB,IAAIrD,EAAAA,GAAM,CACf+B,MAAO,IAAIC,EAAAA,EAAK,CACdC,IAAKL,EACLT,MAAO,EACPe,OAAQ,CAAC,GAAK,IACdC,aAAc,WACdC,aAAc,aAEhBG,KAAM,IAAID,EAAAA,EAAK,CACbC,KAAM7B,EAAK6C,WACXd,KAAK,GAADzF,OAAKsG,EAAU,KAAAtG,OAAIqG,EAAQ,UAC/BpD,KAAM,IAAIC,EAAAA,EAAK,CAAEC,MAAO,YACxBC,OAAQ,IAAIC,EAAAA,EAAO,CAAEF,MAAO,UAAWG,MAAO,IAC9CoC,QAAqB,GAAZS,KAGf,CAAE,MAAOlI,GACP,OAAO,IACT,CACF,CChGAuI,EAAAA,EAAMC,KAAK,YAAa,+DACxBC,EAAAA,EAAAA,IAASF,EAAAA,GAGT,MAsvBA,EA3qBsBG,IAcf,IAdgB,WACrBC,EAAa,GAAE,aACfC,EAAY,OACZhF,EAASD,EAAWC,OAAM,KAC1BC,EAAOF,EAAWE,KAAI,UACtBY,EAAY,kBAAiB,oBAE7BoE,EAAsB,KAAI,aAC1BC,EAAe,KAAI,oBACnBC,GAAsB,EAAI,aAC1BC,GAAe,EAAI,eAEnBC,GAAiB,EAAI,iBACrB1C,GAAmB,GACpBmC,EACC,MAAMQ,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,GAAMD,EAAAA,EAAAA,QAAO,MACbE,GAAeF,EAAAA,EAAAA,QAAO,MACtBG,GAAgBH,EAAAA,EAAAA,QAAO,MACvBI,GAAcJ,EAAAA,EAAAA,QAAO,MACrBK,GAAYL,EAAAA,EAAAA,QAAO,OAClBM,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CACrCC,IAAKhG,EAAO,GACZiG,IAAKjG,EAAO,GACZC,KAAMA,IAIFiG,GAA0BX,EAAAA,EAAAA,QAAO,MACjCY,GAAmBZ,EAAAA,EAAAA,QAAO,MAG1Ba,GAAoBC,EAAAA,EAAAA,cAAY,CAACtF,EAASuF,KAC9C,MAAM1D,EAAa7B,EAAQ8B,IAAI,cAC3BD,KACE2D,EAAAA,EAAAA,MACF1K,QAAQC,IAAI,uCAAwC8G,GAE1C,OAAZoC,QAAY,IAAZA,GAAAA,EAAepC,MAEhB,CAACoC,IAGEwB,GAAmBH,EAAAA,EAAAA,cAAY,KAc5B,CAAEI,eAbc,IAAIC,EAAAA,EAAU,CACnCC,OAAQ,IAAIC,EAAAA,EAAI,CACdC,IAAK,gGACLC,aAAc,gDACd5G,QAAS,GACT6G,OAAO,EACPC,eAAgB,EAChBC,SAAU,MAEZC,QAAS,EACTC,wBAAwB,OAIzB,IAGGC,GAAoBf,EAAAA,EAAAA,cAAazD,GAC9BA,EAAWe,QAAU,sBAC3B,IAomBH,OAjmBA0D,EAAAA,EAAAA,YAAU,KACR,GAAI7B,EAAI8B,QAAS,OAGjB,MAAMC,GAAiBhB,EAAAA,EAAAA,KACjBiB,EAAgBD,EAAiBxH,EAAWK,OAAOJ,OAASA,EAC5DyH,EAAcF,EAAiBxH,EAAWK,OAAOH,KAAOA,EAG9DwF,EAAa6B,QAAU,IAAII,EAAAA,EAG3BhC,EAAc4B,QAAU,IAAIK,EAAAA,EAAc,CACxCC,SAAUjF,EAAmB,GAAK,EAClCgE,OAAQlB,EAAa6B,QAErBO,iBAAmB9G,IACjB,MAAM+G,EAAW/G,EAAQgH,cACzB,MAA2B,UAAvBD,EAASE,UACJF,EAEF,QAKXnC,EAAY2B,QAAU,IAAIW,EAAAA,EAAY,CACpCtB,OAAQjB,EAAc4B,QACtBrE,MAAQlC,GAAYiD,EAAmBjD,GAAUmH,GAAMxF,EAAkBwF,EAAGvF,KAC5EwF,OAAQ,KAIV,MAAM,eAAE1B,GAAmBD,IAC3BZ,EAAU0B,QAAUb,EAGpBjB,EAAI8B,QAAU,IAAIc,EAAAA,EAAI,CACpBC,OAAQ/C,EAAagC,QACrBgB,OAAQ,CACN1C,EAAU0B,QACV3B,EAAY2B,SAEdiB,KAAM,IAAIC,EAAAA,GAAK,CACbxI,QAAQyI,EAAAA,EAAAA,IAAWjB,GACnBvH,KAAMwH,EACNvH,QAAS,GACTC,QAAS,EACTuI,gBAAgB,IAElBC,UAAUC,EAAAA,EAAAA,KACVC,cAAcC,EAAAA,EAAAA,GAAoB,CAChCC,YAAY,EACZC,aAAa,MAKjBxD,EAAI8B,QAAQ2B,GAAG,WAAW,KACxB,MAAMV,EAAO/C,EAAI8B,QAAQ4B,UACnBlJ,GAASmJ,EAAAA,EAAAA,IAASZ,EAAKa,aACvBC,EAAU,CACdrD,IAAKhG,EAAO,GAAGsJ,QAAQ,GACvBrD,IAAKjG,EAAO,GAAGsJ,QAAQ,GACvBrJ,KAAMsI,EAAKgB,UAAUD,QAAQ,IAG/BxD,EAAWuD,MAIb7D,EAAI8B,QAAQ2B,GAAG,WAAW,KAEpBtD,EAAY2B,SACd3B,EAAY2B,QAAQkC,aAKxBhE,EAAI8B,QAAQ2B,GAAG,SAAU3C,IACvB,MAAMvF,EAAUyE,EAAI8B,QAAQmC,sBAAsBnD,EAAMoD,OAAQ3I,GAAYA,IAC5E,GAAIA,EAEF,GAAIA,EAAQ8B,IAAI,YAAa,CAC3B,MAAMoB,EAAWlD,EAAQ8B,IAAI,YAC7B,GAAwB,IAApBoB,EAASvG,OACX7B,QAAQC,IAAI,6CAA8CmI,EAAS,GAAGpB,IAAI,eAC1EuD,EAAkBnC,EAAS,GAAIqC,QAC1B,GAAIrC,EAASvG,OAAS,EAAG,CAC9B7B,QAAQC,IAAI,kCAAmCmI,EAASvG,OAAQ,6BAEhE,MAAMiM,EAAgB5I,EAAQgH,cAAc6B,YACtCC,EAAcrE,EAAI8B,QAAQ4B,UAAUK,UAC1C,IAAIO,EAAa,GAEfA,EADE7F,EAASvG,OAAS,GACP,GACJuG,EAASvG,OAAS,GACd,GACJuG,EAASvG,OAAS,EACd,GAEA,GAEfoM,EAAa1F,KAAK2F,IAAID,EAAYD,EAAc,GAChDrE,EAAI8B,QAAQ4B,UAAUc,IAAIL,EAAe,CACvCM,SAAU,IACVC,QAAS,CAAC,GAAI,GAAI,GAAI,IACtBhK,QAAS4J,GAEb,CACF,MACEjO,QAAQC,IAAI,2CAA4CiF,EAAQ8B,IAAI,eAEpEuD,EAAkBrF,EAASuF,MAMjC,IAAI6D,EAAiB,KAErB3E,EAAI8B,QAAQ2B,GAAG,eAAgB3C,IAE7B,IAAIC,EAAAA,EAAAA,KAAY,OAEZ4D,IACFA,EAAeC,SACfD,EAAiB,MAGnB,MAAMpJ,EAAUyE,EAAI8B,QAAQmC,sBAAsBnD,EAAMoD,OAAQ3I,GAAYA,IAE5E,GAAIA,EAEF,GAAIA,EAAQ8B,IAAI,YAAa,CAC3B,MAAMoB,EAAWlD,EAAQ8B,IAAI,YAC7B,GAAwB,IAApBoB,EAASvG,OAAc,CAEzB,MAAMkF,EAAaqB,EAAS,GAAGpB,IAAI,cAC/BD,IACFuH,EAAiBE,EAAqB/D,EAAO1D,EAAY,UAE7D,MAEEuH,EAAiBG,EAA4BhE,EAAOrC,EAASvG,OAEjE,KAAO,CAEL,MAAMkF,EAAa7B,EAAQ8B,IAAI,cACzB0H,EAAoBxJ,EAAQ8B,IAAI,qBAElCD,EAEFuH,EAAiBE,EAAqB/D,EAAO1D,EAAY,UAChD2H,IAETJ,EAAiBE,EAAqB/D,EAAOiE,EAAmB,kBAEpE,KAKJ,MAAMF,EAAuBA,CAAC/D,EAAOpK,EAAMsO,KACzC,MAAMC,EAAUC,SAASC,cAAc,OAKvC,IAAIC,EAASC,EAAiB9I,EAJ9B0I,EAAQ5J,UAAY,aACpB4J,EAAQK,aAAa,YAAaN,GAKrB,WAATA,GACFI,EAAUxD,EAAkBlL,GAC5B2O,EAAkB,2BAClB9I,EAAc,0BACI,mBAATyI,IACTI,EAAO,qBAAAzM,OAAqBjC,EAAKyH,QAAU,eAC3CkH,EAAkB,0BAClB9I,EAAc,0BAGhB0I,EAAQM,YAAcH,EACtBH,EAAQxH,MAAM+H,SAAW,WACzBP,EAAQxH,MAAM4H,gBAAkBA,EAChCJ,EAAQxH,MAAM3B,MAAQ,QACtBmJ,EAAQxH,MAAMiH,QAAU,WACxBO,EAAQxH,MAAMgI,aAAe,MAC7BR,EAAQxH,MAAMuB,SAAW,OACzBiG,EAAQxH,MAAMiI,WAAa,oBAC3BT,EAAQxH,MAAMwB,WAAa,MAC3BgG,EAAQxH,MAAMkI,SAAW,QACzBV,EAAQxH,MAAMmI,WAAa,SAC3BX,EAAQxH,MAAMoI,SAAW,SACzBZ,EAAQxH,MAAMqI,aAAe,WAC7Bb,EAAQxH,MAAMkF,OAAS,OACvBsC,EAAQxH,MAAMsI,cAAgB,OAC9Bd,EAAQxH,MAAMuI,UAAY,iCAC1Bf,EAAQxH,MAAMwI,OAAM,aAAAtN,OAAgB4D,GACpC0I,EAAQxH,MAAMyI,eAAiB,YAE/B,MAAMC,EAAarF,EAAMqF,WACnBjC,EAAQlE,EAAI8B,QAAQsE,uBAAuBD,GAWjD,OAJAlB,EAAQxH,MAAM4I,KAAQnC,EAAM,IAHZ,IAG4B,KAC5Ce,EAAQxH,MAAM6I,IAAOpC,EAAM,IAHV,GAG0B,KAE3CpE,EAAagC,QAAQyE,YAAYtB,GAC1BA,GAIHH,EAA8BA,CAAChE,EAAO0F,KAC1C,MAAMvB,EAAUC,SAASC,cAAc,OACvCF,EAAQ5J,UAAY,aACpB4J,EAAQM,YAAW,GAAA5M,OAAM6N,EAAK,yBAC9BvB,EAAQxH,MAAM+H,SAAW,WACzBP,EAAQxH,MAAM4H,gBAAkB,4BAChCJ,EAAQxH,MAAM3B,MAAQ,UACtBmJ,EAAQxH,MAAMiH,QAAU,WACxBO,EAAQxH,MAAMgI,aAAe,MAC7BR,EAAQxH,MAAMuB,SAAW,OACzBiG,EAAQxH,MAAMiI,WAAa,oBAC3BT,EAAQxH,MAAMwB,WAAa,MAC3BgG,EAAQxH,MAAMkI,SAAW,QACzBV,EAAQxH,MAAMmI,WAAa,SAC3BX,EAAQxH,MAAMoI,SAAW,SACzBZ,EAAQxH,MAAMqI,aAAe,WAC7Bb,EAAQxH,MAAMkF,OAAS,OACvBsC,EAAQxH,MAAMsI,cAAgB,OAC9Bd,EAAQxH,MAAMuI,UAAY,iCAC1Bf,EAAQxH,MAAMwI,OAAS,+BACvBhB,EAAQxH,MAAMyI,eAAiB,YAE/B,MAAMC,EAAarF,EAAMqF,WACnBjC,EAAQlE,EAAI8B,QAAQsE,uBAAuBD,GAWjD,OAJAlB,EAAQxH,MAAM4I,KAAQnC,EAAM,IAHZ,IAG4B,KAC5Ce,EAAQxH,MAAM6I,IAAOpC,EAAM,IAHV,GAG0B,KAE3CpE,EAAagC,QAAQyE,YAAYtB,GAC1BA,GAiBT,OAbAjF,EAAI8B,QAAQ2B,GAAG,YAAa3C,IAC1B,MAAMvF,EAAUyE,EAAI8B,QAAQmC,sBAAsBnD,EAAMoD,OAAQ3I,GAAYA,IACxEA,KAEGA,EAAQ8B,IAAI,aAAgB9B,EAAQ8B,IAAI,aAAkD,IAAnC9B,EAAQ8B,IAAI,YAAYnF,UAClF4I,EAAM2F,iBACN3F,EAAM4F,kBACNrQ,QAAQC,IAAI,kFAMX,KACD0J,EAAI8B,UACN9B,EAAI8B,QAAQ6E,eAAUxO,GACtB6H,EAAI8B,QAAU,SAGjB,CAACtH,EAAQC,EAAMuG,EAAkBxC,EAAoBoD,EAAmBpC,EAAcoB,KAGzFiB,EAAAA,EAAAA,YAAU,KACR,IAAK7B,EAAI8B,QAAS,OAElB,MAAMC,GAAiBhB,EAAAA,EAAAA,KACjB6F,EAAY7E,EAAiBxH,EAAWK,OAAOJ,OAASA,EACxDqM,EAAU9E,EAAiBxH,EAAWK,OAAOH,KAAOA,EAEpDsI,EAAO/C,EAAI8B,QAAQ4B,UACnBoD,GAAgBnD,EAAAA,EAAAA,IAASZ,EAAKa,aAC9BS,EAActB,EAAKgB,UAGrB+C,EAAc,KAAOF,EAAU,IAAME,EAAc,KAAOF,EAAU,IAAMvC,IAAgBwC,IAC5F9D,EAAKgE,WAAU9D,EAAAA,EAAAA,IAAW2D,IAC1B7D,EAAKiE,QAAQH,MAEd,CAACrM,EAAQC,EAAM0C,KAGlB0E,EAAAA,EAAAA,YAAU,KACR,IAAK5B,EAAa6B,UAAYvC,IAAeM,EAAgB,OAG7DI,EAAa6B,QAAQmF,QAGrB,MAAMC,EAAgB3H,EAAW4H,QAAOC,IACtC,IAAKA,EAAMC,WAAaD,EAAME,UAAW,OAAO,EAChD,MAAM7G,EAAM8G,WAAWH,EAAMC,UACvB7G,EAAM+G,WAAWH,EAAME,WAC7B,OAAQE,MAAM/G,KAAS+G,MAAMhH,IACtBC,IAAQ,IAAMA,GAAO,IACrBD,IAAQ,KAAOA,GAAO,OAIzBiH,EC7dH,SAAyBC,GAA8B,IAAtBC,EAAS1P,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAClD,MAAM2P,EAAQ,GACRC,EAAO,IAAIC,IAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOxP,OAAQ6P,IACjC,IAAIF,EAAKG,IAAID,GAEb,IAAK,IAAIE,EAAIF,EAAI,EAAGE,EAAIP,EAAOxP,OAAQ+P,IAAK,CAC1C,GAAIJ,EAAKG,IAAIC,GAAI,SAEjB,MAAMC,EAAKR,EAAOK,GACZI,EAAKT,EAAOO,GAEZG,EAAUxJ,KAAKyJ,IAAId,WAAWW,EAAGb,UAAYE,WAAWY,EAAGd,WAC3DiB,EAAU1J,KAAKyJ,IAAId,WAAWW,EAAGZ,WAAaC,WAAWY,EAAGb,YAElE,GAAIc,EAAUT,GAAaW,EAAUX,EAAW,CAC9CC,EAAMW,KAAK,CAACR,EAAGE,IACfJ,EAAKW,IAAIT,GACTF,EAAKW,IAAIP,GACT,KACF,CACF,CAGF,OAAOL,CACT,CDmcwBa,CAAgBvB,GAChB,IAAIY,IAAIL,EAAYiB,QAGxCxB,EAAcyB,SAAQ,CAACvB,EAAOwB,KAC5B,GAAIxB,EAAMC,UAAYD,EAAME,UAAW,CACrC,MAAM/L,EAAU,IAAIsN,EAAAA,EAAQ,CAC1BvG,SAAU,IAAIwG,EAAAA,GAAM7F,EAAAA,EAAAA,IAAW,CAACmE,EAAME,UAAWF,EAAMC,cAEzD9L,EAAQwN,IAAI,aAAc3B,IAIP,IADDK,EAAYuB,WAAUC,GAAQA,EAAKC,SAASN,MAE5DrN,EAAQwN,IAAI,gBAAgB,GAG9B9I,EAAa6B,QAAQqH,WAAW5N,EAClC,OAED,CAACgE,EAAYM,KAGhBgC,EAAAA,EAAAA,YAAU,KACJ1B,EAAY2B,SACd3B,EAAY2B,QAAQsH,UAAU7N,GAAYiD,EAAmBjD,GAAUmH,GAAMxF,EAAkBwF,EAAGvF,SAEnG,CAACA,EAAkBqB,KAGtBqD,EAAAA,EAAAA,YAAU,KACJ1B,EAAY2B,UACd3B,EAAY2B,QAAQsH,UAAU7N,GAAYiD,EAAmBjD,GAAUmH,GAAMxF,EAAkBwF,EAAGvF,OAClGgD,EAAY2B,QAAQkC,aAErB,CAAC7G,EAAkBqB,KAGtBqD,EAAAA,EAAAA,YAAU,KACH7B,EAAI8B,SAAY7B,EAAa6B,UAG9B3B,EAAY2B,SACd9B,EAAI8B,QAAQuH,YAAYlJ,EAAY2B,SAItC5B,EAAc4B,QAAU,IAAIK,EAAAA,EAAc,CACxCC,SAAUjF,EAAmB,GAAK,GAClCgE,OAAQlB,EAAa6B,QACrBO,iBAAmB9G,IACjB,MAAM+G,EAAW/G,EAAQgH,cACzB,MAA2B,UAAvBD,EAASE,UACJF,EAEF,QAKXnC,EAAY2B,QAAU,IAAIW,EAAAA,EAAY,CACpCtB,OAAQjB,EAAc4B,QACtBrE,MAAQlC,GAAYiD,EAAmBjD,GAAUmH,GAAMxF,EAAkBwF,EAAGvF,KAC5EwF,OAAQ,KAIV3C,EAAI8B,QAAQwH,SAASnJ,EAAY2B,YAEhC,CAAC3E,EAAkBqB,KAGtBqD,EAAAA,EAAAA,YAAU,KACR,IAAK7B,EAAI8B,QAAS,OAGlB,IAAIyH,EAAe,KACfC,EAAqB,KACrBC,EAAa,EAEjB,MAAMC,EAAe5I,IACnB,MAAMvF,EAAUyE,EAAI8B,QAAQmC,sBAAsBnD,EAAMoD,OAAQ3I,GAAYA,IAC5E,GAAIA,EAAS,CACX,MAAMwJ,EAAoBxJ,EAAQ8B,IAAI,qBACtC,GAAI0H,EAEF,IAAIhE,EAAAA,EAAAA,KAEEvB,GACFA,EAAauF,QAwBf,GAnBIyE,IAAuBjO,EACzBkO,KAGAD,EAAqBjO,EACrBkO,EAAa,GAIXF,GACFI,aAAaJ,GAIfA,EAAeK,YAAW,KACxBH,EAAa,EACbD,EAAqB,OACpB,KAEgB,IAAfC,EAAkB,CAEpB,MAAMnH,EAAW/G,EAAQgH,cACzB,GAAID,EAAU,CACZ,MAAMuH,EAASvH,EAAS8B,YACxBpE,EAAI8B,QAAQ4B,UAAUc,IAAIqF,EAAQ,CAChCpF,SAAU,IACVC,QAAS,CAAC,GAAI,GAAI,GAAI,IACtBhK,QAAS,IAEb,CACF,MAA0B,IAAf+O,IAELjK,GACFA,EAAauF,GAGf0E,EAAa,EACbD,EAAqB,KACjBD,IACFI,aAAaJ,GACbA,EAAe,MAKzB,GAKF,OAFAvJ,EAAI8B,QAAQ2B,GAAG,QAASiG,GAEjB,KACD1J,EAAI8B,SACN9B,EAAI8B,QAAQgI,GAAG,QAASJ,GAGtBH,GACFI,aAAaJ,MAGhB,CAAC/J,KAGJqC,EAAAA,EAAAA,YAAU,KACH7B,EAAI8B,SAAY7B,EAAa6B,UAG9B3B,EAAY2B,SACd9B,EAAI8B,QAAQuH,YAAYlJ,EAAY2B,SAItC5B,EAAc4B,QAAU,IAAIK,EAAAA,EAAc,CACxCC,SAAUjF,EAAmB,GAAK,GAClCgE,OAAQlB,EAAa6B,QACrBO,iBAAmB9G,IACjB,MAAM+G,EAAW/G,EAAQgH,cACzB,MAA2B,UAAvBD,EAASE,UACJF,EAEF,QAKXnC,EAAY2B,QAAU,IAAIW,EAAAA,EAAY,CACpCtB,OAAQjB,EAAc4B,QACtBrE,MAAQlC,GAAYiD,EAAmBjD,GAAUmH,GAAMxF,EAAkBwF,EAAGvF,KAC5EwF,OAAQ,KAIV3C,EAAI8B,QAAQwH,SAASnJ,EAAY2B,YAEhC,CAAC3E,EAAkBqB,KAGtBqD,EAAAA,EAAAA,YAAU,KACR,GAAK7B,EAAI8B,QAAT,CAaA,GAVIpB,EAAwBoB,UAC1B9B,EAAI8B,QAAQuH,YAAY3I,EAAwBoB,SAChDpB,EAAwBoB,QAAU,MAEhCnB,EAAiBmB,UACnB9B,EAAI8B,QAAQuH,YAAY1I,EAAiBmB,SACzCnB,EAAiBmB,QAAU,MAIzBnC,GAAuBF,EAAqB,CAE9C,IAAKA,EAAoBhB,UAAoD,IAAxCgB,EAAoBhB,SAASvG,OAChE,OAGF,IACE,MAIMuG,EAJgB,IAAIsL,EAAAA,EAAQ,CAChCC,eAAgB,YAChBC,kBAAmB,cAEUC,aAAazK,GAE5C,GAAIhB,EAASvG,OAAS,EAAG,CACFuG,EAAS,GACA8D,aAChC,CAEA,MAAM4H,EAAuB,IAAI1H,EAAAA,EAAY,CAC3CtB,OAAQ,IAAIe,EAAAA,EAAa,CACvBzD,SAAUA,IAEZhB,MAAOnC,EACPqH,OAAQ,KAIVwH,EAAqBC,YAAYC,cAAc1B,SAAQpN,IACrD,MAAM+O,EAAa/O,EAAQE,gBAC3BF,EAAQwN,IAAI,oBAAqB,CAC/B5K,OAAQmM,EAAWC,WACnBC,KAAM,iBACNC,MAAOH,EAAWI,WAClBC,UAAWL,EAAWM,WACtBC,GAAIP,EAAWQ,SACfC,WAAYT,EAAWS,WACvBC,KAAMV,EAAW5O,QACjBuP,WAAYX,EAAWW,WACvBC,SAAUZ,EAAWa,WACrBC,GAAId,EAAWc,GACfC,WAAYf,EAAWe,WACvBC,WAAYhB,EAAWgB,WACvBC,WAAYjB,EAAWiB,WACvBC,WAAYlB,EAAWkB,WACvBC,WAAYnB,EAAWmB,WACvBC,WAAYpB,EAAWoB,WACvBC,WAAYrB,EAAWqB,gBAI3B3L,EAAI8B,QAAQwH,SAASa,GACrBzJ,EAAwBoB,QAAUqI,CACpC,CAAE,MAAOvT,GACP,CAEJ,CAGA,GAAIgJ,GAAgBF,EAAc,CAEhC,IAAKA,EAAajB,UAA6C,IAAjCiB,EAAajB,SAASvG,OAClD,OAGF,IACE,MAIMuG,EAJgB,IAAIsL,EAAAA,EAAQ,CAChCC,eAAgB,YAChBC,kBAAmB,cAEUC,aAAaxK,GAE5C,GAAIjB,EAASvG,OAAS,EAAG,CACFuG,EAAS,GACA8D,aAChC,CAEA,MAAMqJ,EAAgB,IAAInJ,EAAAA,EAAY,CACpCtB,OAAQ,IAAIe,EAAAA,EAAa,CACvBzD,SAAUA,IAEZhB,MAAOtB,EACPwG,OAAQ,EACRkJ,aAAa,IAGf7L,EAAI8B,QAAQwH,SAASsC,GACrBjL,EAAiBmB,QAAU8J,CAC7B,CAAE,MAAOhV,GACP,CAEJ,CAvGwB,IAwGvB,CAAC+I,EAAqBC,EAAcH,EAAqBC,KAG1DtE,EAAAA,EAAAA,KAAC0Q,EAAU,CAAC3Q,IAAK2E,KE/wBfiM,EAAQ,CAAC,EAEFC,EAAmBC,IAC9B,MAAOvV,EAAMwV,IAAW3L,EAAAA,EAAAA,UAAS,OAC1B4L,EAASC,IAAc7L,EAAAA,EAAAA,WAAS,IAChC3J,EAAOyV,IAAY9L,EAAAA,EAAAA,UAAS,MA6CnC,OA3CAsB,EAAAA,EAAAA,YAAU,KACR,IAAKoK,EAAK,OAEW7V,WACnB,GAAI2V,EAAME,GAGP,OAFA5V,QAAQC,IAAI,6BAADqC,OAA8BsT,EAAG,+BAC5CC,EAAQH,EAAME,IAGjBG,GAAW,GACX,IAAK,IAADE,EAAAC,EACD,MAAMlL,EAAG,GAAA1I,OAAM6T,oBAAsB,KAAA7T,OAAIsT,EAAG,YAC5C5V,QAAQC,IAAI,+BAADqC,OAAgCsT,EAAG,QAAQ5K,GACtD,MAAMoL,QAAiBC,MAAMrL,GAC7B,IAAKoL,EAASE,GAAI,MAAM,IAAIC,MAAM,2BAADjU,OAA4B8T,EAASI,OAAM,MAC5E,MAAMC,QAAgBL,EAASM,OAC/B1W,QAAQC,IAAI,oBAADqC,OAAqBsT,EAAG,2BAA2B,CAC5DjH,KAAM8H,EAAQ9H,KACdvG,UAA0B,QAAhB6N,EAAAQ,EAAQrO,gBAAQ,IAAA6N,OAAA,EAAhBA,EAAkBpU,SAAU,EACtC8U,IAAKF,EAAQE,IACbC,aAA8B,QAAhBV,EAAAO,EAAQrO,gBAAQ,IAAA8N,GAAhBA,EAAmB,GAAK,CACpCvH,KAAM8H,EAAQrO,SAAS,GAAGuG,KAC1BsF,WAAYwC,EAAQrO,SAAS,GAAG6L,WAAa4C,OAAOC,KAAKL,EAAQrO,SAAS,GAAG6L,YAAc,mBAC3FhI,SAAUwK,EAAQrO,SAAS,GAAG6D,SAAW,CACvC0C,KAAM8H,EAAQrO,SAAS,GAAG6D,SAAS0C,KACnCoI,YAAaN,EAAQrO,SAAS,GAAG6D,SAAS8K,YAAW,GAAAzU,OAChDmU,EAAQrO,SAAS,GAAG6D,SAAS8K,YAAYlV,OAAM,WAAY,mBAC9D,iBACF,mBAEN6T,EAAME,GAAOa,EACbZ,EAAQY,EACX,CAAE,MAAOO,GACNhX,QAAQO,MAAM,qCAAD+B,OAAsCsT,EAAG,KAAKoB,GAC3DhB,EAASgB,EACZ,CAAC,QACEjB,GAAW,EACd,GAGFkB,KACC,CAACrB,IAEG,CAAEvV,OAAMyV,UAASvV,UC2O1B,EA3RoB0I,IAKb,IALc,WACnBC,EAAU,aACVC,EAAY,aACZ+N,GAAe,EAAK,UACpBlS,EAAY,mBACbiE,EAEC,MAAQ5I,KAAM+I,EAAqB0M,QAASqB,EAAe5W,MAAO6W,GAAgBzB,EAAgB,qBAC1FtV,KAAMgJ,EAAcyM,QAASuB,EAAe9W,MAAO+W,GAAgB3B,EAAgB,OAGpFrM,EAAqBiO,IAA0BrN,EAAAA,EAAAA,WAAS,IACxDX,EAAciO,IAAmBtN,EAAAA,EAAAA,WAAS,IAG1CV,EAAgBiO,IAAqBvN,EAAAA,EAAAA,WAAS,IAG9CQ,EAAUgN,IAAexN,EAAAA,EAAAA,WAAS,IAClCyN,EAAaC,IAAkB1N,EAAAA,EAAAA,WAAS,GAGzC2N,GAAcrN,EAAAA,EAAAA,cAAY,KAC9BkN,EAAYI,OAAOC,YAAc,OAChC,KAEHvM,EAAAA,EAAAA,YAAU,KAERqM,IAGAC,OAAOE,iBAAiB,SAAUH,GAE3B,KACLC,OAAOG,oBAAoB,SAAUJ,MAEtC,CAACA,IAGJ,MAAMK,GAAiB1N,EAAAA,EAAAA,cAAY,IAAMoN,GAAeO,IAASA,KAAO,KAGxE3M,EAAAA,EAAAA,YAAU,KAAO,IAAD4M,EAAAC,EAAAC,EAAAC,EACdvY,QAAQC,IAAI,2CAA4C,CACtDuY,gBAAiB,CACf1C,QAASqB,EACT5W,MAAO6W,EACPqB,UAAWrP,EACXhB,UAA6B,OAAnBgB,QAAmB,IAAnBA,GAA6B,QAAVgP,EAAnBhP,EAAqBhB,gBAAQ,IAAAgQ,OAAV,EAAnBA,EAA+BvW,SAAU,EACnD8M,KAAyB,OAAnBvF,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBuF,KAC3BiI,aAAiC,OAAnBxN,QAAmB,IAAnBA,GAA6B,QAAViP,EAAnBjP,EAAqBhB,gBAAQ,IAAAiQ,GAA7BA,EAAgC,GAAK,CACjD1J,KAAMvF,EAAoBhB,SAAS,GAAGuG,KACtCsF,WAAY7K,EAAoBhB,SAAS,GAAG6L,WAAa4C,OAAOC,KAAK1N,EAAoBhB,SAAS,GAAG6L,YAAc,oBACjH,kBAENyE,SAAU,CACR5C,QAASuB,EACT9W,MAAO+W,EACPmB,UAAWpP,EACXjB,UAAsB,OAAZiB,QAAY,IAAZA,GAAsB,QAAViP,EAAZjP,EAAcjB,gBAAQ,IAAAkQ,OAAV,EAAZA,EAAwBzW,SAAU,EAC5C8M,KAAkB,OAAZtF,QAAY,IAAZA,OAAY,EAAZA,EAAcsF,KACpBiI,aAA0B,OAAZvN,QAAY,IAAZA,GAAsB,QAAVkP,EAAZlP,EAAcjB,gBAAQ,IAAAmQ,GAAtBA,EAAyB,GAAK,CAC1C5J,KAAMtF,EAAajB,SAAS,GAAGuG,KAC/BsF,WAAY5K,EAAajB,SAAS,GAAG6L,WAAa4C,OAAOC,KAAKzN,EAAajB,SAAS,GAAG6L,YAAc,oBACnG,sBAGP,CAAC7K,EAAqBC,EAAc8N,EAAeE,EAAeD,EAAaE,KAElF9L,EAAAA,EAAAA,YAAU,KACRxL,QAAQC,IAAI,6CAA8C,CACxDiX,eACAxM,WACAlB,iBACAmP,kBAAmBzB,GAAgBxM,KAGhCwM,GAAgBxM,IACnB1K,QAAQC,IAAI,gEACZwX,GAAkB,MAEnB,CAACP,EAAcxM,KAGlBc,EAAAA,EAAAA,YAAU,KACRxL,QAAQC,IAAI,0CAA2CuJ,KACtD,CAACA,IAGJ,MAAMoP,EAAgBC,IAAA,IAAC,WAAEC,EAAU,SAAEpO,EAAQ,YAAEiN,GAAakB,EAAA,OAC1DE,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gFAA+EgU,SAAA,EAC5FjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCgU,SAAC,qBAClDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBgU,UACtCjU,EAAAA,EAAAA,KAAA,UACEkU,QAASH,EACT9T,UAAU,0DACV,aAAY2S,EAAc,WAAa,YACvChJ,KAAK,SAAQqK,SAEZrB,EAAc,SAAM,iBAOvBuB,EAAcC,IAAA,IAAC,GAAE/X,EAAE,MAAEgY,EAAK,QAAEC,EAAO,SAAEC,EAAQ,SAAEC,GAAW,EAAK,QAAEzD,GAAU,EAAK,MAAEvV,GAAQ,EAAK,MAAEiZ,EAAK,MAAE/T,EAAK,SAAEgU,EAAW,MAAMN,EAAA,OACpIJ,EAAAA,EAAAA,MAAA,UACEpK,KAAK,SACLsK,QAASK,EACTC,SAAUA,EACVvU,UAAS,yEAAA1C,OACP+W,EAAU,aAAe,mBAAkB,KAAA/W,OACzCiX,EAAW,gCAAkC,IAAKP,SAAA,CAErDS,GAEC1U,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBgU,SACjCS,EAAS9P,KAAI,CAAC+P,EAAMnH,KACnBwG,EAAAA,EAAAA,MAAA,OAAiB/T,UAAU,0BAAyBgU,SAAA,EAClDjU,EAAAA,EAAAA,KAAA,OACEC,UAAU,uBACVoC,MAAO,CAAE4H,gBAAiB0K,EAAKjU,UAEjCV,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBgU,SAAEU,EAAKN,UALtC7G,QAWdxN,EAAAA,EAAAA,KAAA,OACEC,UAAU,uBACVoC,MAAO,CAAE4H,gBAAiBvJ,MAI9BV,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBgU,SAAEI,SAE9BtX,IAAV0X,IACCT,EAAAA,EAAAA,MAAA,QAAM/T,UAAU,6BAA4BgU,SAAA,CAAC,IAAEQ,EAAM,OAGtD1D,IAAW/Q,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBgU,SAAC,oBAChDzY,IAASwE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBgU,SAAC,WAE7CS,GAEC1U,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAGfD,EAAAA,EAAAA,KAAA,OACEC,UAAU,+BACVoC,MAAO,CAAE4H,gBAAiBvJ,SAO5BkU,EAAYjP,EAAWxG,EAAWK,OAAOJ,OAASD,EAAWC,OAC7DyV,EAAUlP,EAAWxG,EAAWK,OAAOH,KAAOF,EAAWE,KAa/D,OAVApE,QAAQC,IAAI,4BAA6B,CACvCyK,WACAmP,WAAY3V,EAAWK,OAAOH,KAC9B0V,YAAa5V,EAAWE,KACxB2V,aAAcH,EACdI,aAAc9V,EAAWK,OAAOJ,OAChC8V,cAAe/V,EAAWC,OAC1B+V,eAAgBP,KAIhBZ,EAAAA,EAAAA,MAAA,OAAK/T,UAAWA,EAAWoC,MAAO,CAAE+H,SAAU,YAAa6J,SAAA,CAExDtO,GAEC3F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCgU,UACjDD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,8CAA6CgU,SAAA,EAC1DjU,EAAAA,EAAAA,KAAC6T,EAAa,CACZE,WAAYZ,EACZxN,UAAU,EACViN,YAAaA,KAEbA,IACAoB,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,mDAAkDgU,SAAA,EAC/DjU,EAAAA,EAAAA,KAACmU,EAAW,CACV9X,GAAG,YACHgY,MAAM,yBACNC,QAAS9P,EACT+P,SAAUA,IAAM9B,GAAiBjO,GACjCuM,QAASuB,EACT9W,MAAO+W,EACP7R,MAAM,aAERV,EAAAA,EAAAA,KAACmU,EAAW,CACV9X,GAAG,aACHgY,MAAM,uBACNC,QAAS7P,EACT8P,SAAUA,IAAM7B,GAAmBjO,GACnCgQ,MAAiB,OAAVtQ,QAAU,IAAVA,OAAU,EAAVA,EAAYrH,OACnB4D,MAAM,aAERV,EAAAA,EAAAA,KAACmU,EAAW,CACV9X,GAAG,mBACHgY,MAAM,sBACNC,QAAS/P,EACTgQ,SAAUA,IAAM/B,GAAwBjO,GACxCwM,QAASqB,EACT5W,MAAO6W,EACPqC,SAAU,CACR,CAAEL,MAAO,gBAAiB3T,MAAO,WACjC,CAAE2T,MAAO,aAAc3T,MAAO,uBAS1CsT,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,sFAAqFgU,SAAA,EAClGjU,EAAAA,EAAAA,KAAC6T,EAAa,CACZE,WAAYZ,EACZxN,UAAU,EACViN,YAAaA,KAEbA,IACAoB,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,mDAAkDgU,SAAA,EAC/DjU,EAAAA,EAAAA,KAACmU,EAAW,CACV9X,GAAG,YACHgY,MAAM,yBACNC,QAAS9P,EACT+P,SAAUA,IAAM9B,GAAiBjO,GACjCuM,QAASuB,EACT9W,MAAO+W,EACP7R,MAAM,aAERV,EAAAA,EAAAA,KAACmU,EAAW,CACV9X,GAAG,aACHgY,MAAM,uBACNC,QAAS7P,EACT8P,SAAUA,IAAM7B,GAAmBjO,GACnCgQ,MAAiB,OAAVtQ,QAAU,IAAVA,OAAU,EAAVA,EAAYrH,OACnB4D,MAAM,aAERV,EAAAA,EAAAA,KAACmU,EAAW,CACV9X,GAAG,mBACHgY,MAAM,sBACNC,QAAS/P,EACTgQ,SAAUA,IAAM/B,GAAwBjO,GACxCwM,QAASqB,EACT5W,MAAO6W,EACPqC,SAAU,CACR,CAAEL,MAAO,gBAAiB3T,MAAO,WACjC,CAAE2T,MAAO,aAAc3T,MAAO,qBAS1CV,EAAAA,EAAAA,KAACoV,EAAa,CACZjR,WAAYM,EAAiBN,EAAa,GAC1CC,aAAcA,EACdnE,UAAU,gBACVb,OAAQwV,EACRvV,KAAMwV,EAENxQ,oBAAqBA,EACrBC,aAAcA,EACdC,oBAAqBA,EACrBC,aAAcA,EAEdC,eAAgBA,QCzRX4Q,EAAaC,GACjBA,EACJC,cACAC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BA,QAAQ,cAAe,KACvBA,QAAQ,WAAY,IACpBC,O,cCLL,MAwIA,EAxI6B/Y,IAC3B,MAAOgZ,EAAYC,IAAiBzQ,EAAAA,EAAAA,UAAS,KACtC0Q,EAAWC,IAAgB3Q,EAAAA,EAAAA,WAAS,IACpC3J,EAAOyV,IAAY9L,EAAAA,EAAAA,UAAS,MAkInC,OAhIAsB,EAAAA,EAAAA,YAAU,KACgBzL,WAGtB,GAFAC,QAAQC,IAAI,0DAAiDyB,EAAU,eAAgBA,IAElFA,EAIH,OAHA1B,QAAQC,IAAI,sEACZ0a,EAAc,SACdE,GAAa,GAIf,IACEA,GAAa,GACb7a,QAAQC,IAAI,wDAGZ,MAAQI,KAAMya,EAAUva,MAAOwa,SAAoBta,EAAAA,EAASua,KAAKC,aACjEjb,QAAQC,IAAI,6CAA8B,CACxCib,YAAqB,OAARJ,QAAQ,IAARA,IAAAA,EAAUK,SACvB5a,MAAOwa,IAIT,MAAQ1a,KAAM+a,EAAS7a,MAAO8a,SAAmB5a,EAAAA,EAC9CC,KAAK,qBACLC,OAAO,SACPC,MAAM,GAETZ,QAAQC,IAAI,mDAAiC,CAC3Cqb,aAAcD,EACd9a,MAAO8a,EAAW,CAChBxa,KAAMwa,EAASxa,KACf0a,QAASF,EAASE,QAClBC,QAASH,EAASG,QAClBC,KAAMJ,EAASI,MACb,OAIN,MAAQpb,KAAMqb,EAASnb,MAAOob,SAAuBlb,EAAAA,EAClDC,KAAK,qBACLC,OAAO,KAENgb,EACF3b,QAAQO,MAAM,6CAAyC,CACrDM,KAAM8a,EAAa9a,KACnB0a,QAASI,EAAaJ,QACtBC,QAASG,EAAaH,QACtBC,KAAME,EAAaF,QAGrBzb,QAAQC,IAAI,8CAAqCyb,GAC7CA,GAAWA,EAAQ7Z,OAAS,GAC9B7B,QAAQC,IAAI,qCAA4Byb,EAAQ,IAChD1b,QAAQC,IAAI,+CAAsCyb,EAAQ/R,KAAIiS,IAAG,CAC/Dxa,GAAIwa,EAAIxa,GACR+B,UAAWyY,EAAIzY,UACf0Y,sBAAuBD,EAAIzY,UAC3B2Y,gBAAiBF,EAAIzY,gBAGvBnD,QAAQC,IAAI,qFAKhBD,QAAQC,IAAI,mDAA0CyB,GACtD,MAAM,KAAErB,EAAI,MAAEE,SAAgBE,EAAAA,EAC3BC,KAAK,qBACLC,OAAO,KACPY,GAAG,YAAaG,EAASmH,YACzBkT,MAAM,aAAc,CAAEC,WAAW,IAEpC,GAAIzb,EAOF,MANAP,QAAQO,MAAM,oCAAgC,CAC5CM,KAAMN,EAAMM,KACZ0a,QAAShb,EAAMgb,QACfC,QAASjb,EAAMib,QACfC,KAAMlb,EAAMkb,OAERlb,EAIR,GADAP,QAAQC,IAAI,kCAAiC,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,SAAU,GACpC,KAAb,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,QAAc,CACtB7B,QAAQC,IAAI,6DAAoDyB,GAChE1B,QAAQC,IAAI,wEAGZ,MAAQI,KAAM4b,EAAc1b,MAAO2b,SAAwBzb,EAAAA,EACxDC,KAAK,qBACLC,OAAO,KACPY,GAAG,YAAa4a,OAAOza,KAElBrB,KAAM+b,EAAc7b,MAAO8b,SAAwB5b,EAAAA,EACxDC,KAAK,qBACLC,OAAO,KACPY,GAAG,YAAa+a,OAAO5a,IAE1B1B,QAAQC,IAAI,2CAAyC,CACnDkQ,OAAmB,OAAZ8L,QAAY,IAAZA,OAAY,EAAZA,EAAcpa,SAAU,EAC/BtB,MAAO2b,IAETlc,QAAQC,IAAI,wCAAyC,CACnDkQ,OAAmB,OAAZiM,QAAY,IAAZA,OAAY,EAAZA,EAAcva,SAAU,EAC/BtB,MAAO8b,GAEX,MACErc,QAAQC,IAAI,qCAA4BI,GAG1Csa,EAActa,GAAQ,GACxB,CAAE,MAAO2W,GACPhX,QAAQO,MAAM,oCAAgCyW,GAC9ChB,EAASgB,EAAIuE,QACf,CAAC,QACCV,GAAa,GACb7a,QAAQC,IAAI,6BAAoB,CAC9Bya,WAAYA,EAAW7Y,OACvB+Y,YACAra,MAAOA,GAAS,UAEpB,GAGFgc,KACC,CAAC7a,IAEG,CAAEgZ,aAAYE,YAAWra,U,sGCrIlC,MAmEMic,GAAWC,EAAAA,EAAAA,OAAK5D,IAAkE,IAAjE,SAAEG,EAAQ,QAAE0D,EAAU,WAAU,IAAEC,EAAM,EAAC,UAAE3X,EAAY,IAAI6T,EAQhF,OACE9T,EAAAA,EAAAA,KAAA,OAAKC,UAAS,QAAA1C,OARI,CAClB,WAAY,4CACZ,EAAK,6BACL,EAAK,4CACL,EAAK,6CAI+Boa,GAAQ,SAAApa,OAAQqa,EAAG,KAAAra,OAAI0C,EAAS,uBAAsBgU,SACvFA,OAMD4D,GAAYH,EAAAA,EAAAA,OAAKtD,IAA+B,IAA9B,KAAE9Y,EAAI,UAAE2E,EAAY,IAAImU,EAC9C,OAAK9Y,GAAwB,IAAhBA,EAAKwB,QAGhBkD,EAAAA,EAAAA,KAAA,OAAKC,UAAS,2CAAA1C,OAA6C0C,GAAYgU,UACrEjU,EAAAA,EAAAA,KAAA,SAAOC,UAAU,SAAQgU,UACvBjU,EAAAA,EAAAA,KAAA,SAAAiU,SACG3Y,EAAKsJ,KAAI,CAACkT,EAAKtK,KACdwG,EAAAA,EAAAA,MAAA,MAAgB/T,UAAWuN,EAAQ,IAAM,EAAI,WAAa,cAAcyG,SAAA,EACtEjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wEAAuEgU,SAClF6D,EAAIzD,SAEPrU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kCAAiCgU,SAC5C6D,EAAIC,UALAvK,WAPoB,QAuBnCwK,GAAYN,EAAAA,EAAAA,OAAKO,IAAgC,IAA/B,MAAEC,EAAK,UAAEjY,EAAY,IAAIgY,EAC/C,OAAKC,GAA0B,IAAjBA,EAAMpb,QAGlBkD,EAAAA,EAAAA,KAAA,OAAKC,UAAS,yCAAA1C,OAA2C0C,EAAS,+DAA8DgU,SAC7HiE,EAAMtT,KAAI,CAACuT,EAAM3K,KAChBwG,EAAAA,EAAAA,MAAA,OAAiB/T,UAAU,6BAA4BgU,SAAA,EACrDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BgU,SACtCkE,EAAKC,OAAQpY,EAAAA,EAAAA,KAACmY,EAAKC,KAAI,CAACnY,UAAU,8BAErCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAC/CkE,EAAKJ,SAER/X,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BgU,SACxCkE,EAAK9D,UARA7G,OALyB,QAsBrC6K,IAAcX,EAAAA,EAAAA,OAAKY,IASlB,IATmB,MACxBC,EACAH,KAAM7V,EAAI,SACV0R,EAAQ,YACRuE,EAAW,iBACXC,GAAmB,EAAK,UACxBxY,EAAY,GAAE,OACdyY,EAAS,UAAS,YAClBC,EAAc,CAAC,GAChBL,EACC,MAAOM,EAAaC,IAAkB1T,EAAAA,EAAAA,UAASsT,GA6B/C,OACEzE,EAAAA,EAAAA,MAAA,WACE/T,UAAS,+FAAA1C,OAGL0C,EAAS,YACXgU,SAAA,EAEFjU,EAAAA,EAAAA,KAAA,UACEkU,QAASA,IAAM2E,GAAgBD,GAC/B3Y,UAAU,mJAMV,iBAAgB2Y,EAChB,mBAAArb,OAAkBgb,EAAK,YAAWtE,UAElCD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0BAAyBgU,SAAA,CACrC1R,IAAQvC,EAAAA,EAAAA,KAACuC,EAAI,CAACtC,UAAU,4BACzBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAegU,SAAEsE,UAInCK,IACA5E,EAAAA,EAAAA,MAAA,OACE3X,GAAE,GAAAkB,OAAKgb,EAAK,YACZtY,UAAU,YACV6Y,KAAK,SACL,qBAAAvb,OAAoBgb,EAAK,WAAUtE,SAAA,CAElCuE,IACCxY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BgU,UAC1CjU,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCgU,SACjDuE,MA9DOO,MACpB,IAAK9E,EAAU,OAAO,KAEtB,OAAQyE,GACN,IAAK,OACH,OACE1Y,EAAAA,EAAAA,KAACyX,GAAQpc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKsd,GAAW,IAAA1E,SACtBA,KAGP,IAAK,QACH,OACEjU,EAAAA,EAAAA,KAAC6X,EAAS,CAACvc,KAAMqd,EAAYrd,KAAM2E,UAAW0Y,EAAY1Y,YAE9D,IAAK,QACH,OACED,EAAAA,EAAAA,KAACgY,EAAS,CAACE,MAAOS,EAAYT,MAAOjY,UAAW0Y,EAAY1Y,YAEhE,QACE,OACED,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWgU,SACvBA,MA6CF8E,YASX,MC5MMC,GAAcC,GACbA,EACEA,EAAIC,OAAO,GAAGC,cAAgBF,EAAI9b,MAAM,GAAGoY,cADjC,GAIb6D,GAAclV,IAAkD,IAA/CkU,KAAM7V,EAAI,MAAE8R,EAAK,MAAE0D,EAAK,KAAEnO,EAAO,QAAQ1F,EAoB9D,OACE8P,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gCAA+BgU,SAAA,EAC5CD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,iCAAgCgU,SAAA,EAC7CjU,EAAAA,EAAAA,KAACuC,EAAI,CAACtC,UAAU,2BAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oCAAmCgU,SAAEI,OArBlD,YADCzK,EAEGmO,GACL/D,EAAAA,EAAAA,MAAA,QAAM/T,UAAU,iDAAgDgU,SAAA,EAC9DjU,EAAAA,EAAAA,KAACqZ,EAAAA,EAAK,CAACpZ,UAAU,YAAY,UAI/B+T,EAAAA,EAAAA,MAAA,QAAM/T,UAAU,+CAA8CgU,SAAA,EAC5DjU,EAAAA,EAAAA,KAACsZ,EAAAA,EAAC,CAACrZ,UAAU,YAAY,aAKtBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iCAAgCgU,SAAE8D,QAe3DwB,GAAYzF,IAAA,IAAGsE,KAAM7V,EAAI,MAAE8R,EAAK,MAAE0D,GAAOjE,EAAA,OAC7CE,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gEAA+DgU,SAAA,EAC5EjU,EAAAA,EAAAA,KAACuC,EAAI,CAACtC,UAAU,4BAChB+T,EAAAA,EAAAA,MAAA,QAAM/T,UAAU,4BAA2BgU,SAAA,CAAEI,EAAM,QACnDrU,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+BAA8BgU,SAAE+E,GAAWjB,SAIzDyB,GAAiBpF,IAAiB,IAAhB,OAAEqF,GAAQrF,EAGhC,KAF2BqF,EAAOC,YAAcD,EAAOE,QAAUF,EAAOG,QAAUH,EAAOI,KAGvF,OACE7Z,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCgU,UAC/CjU,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qCAAoCgU,SAC9C+E,GAAWS,EAAOK,cAa3B,OACE9F,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,iBAAgBgU,SAAA,CARX,CACpB,CAAE8F,MAAO,aAAc1F,MAAO,cAC9B,CAAE0F,MAAO,SAAU1F,MAAO,aAC1B,CAAE0F,MAAO,cAAe1F,MAAO,eAC/B,CAAE0F,MAAO,SAAU1F,MAAO,WAKTzP,KAAIqT,IAAA,IAAC,MAAE8B,EAAK,MAAE1F,GAAO4D,EAAA,OAClCwB,EAAOM,KACL/F,EAAAA,EAAAA,MAAA,OAAiB/T,UAAU,uDAAsDgU,SAAA,EAC/EjU,EAAAA,EAAAA,KAACga,EAAAA,EAAM,CAAC/Z,UAAU,gDAClB+T,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,SAAQgU,SAAA,EACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CgU,SAAEI,KAC3DrU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCgU,SAAEwF,EAAOM,UAJtDA,OAUZN,EAAOI,KAAOJ,EAAOQ,UACrBjG,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,uDAAsDgU,SAAA,EACnEjU,EAAAA,EAAAA,KAACga,EAAAA,EAAM,CAAC/Z,UAAU,gDAClB+T,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,SAAQgU,SAAA,EACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CgU,SAAC,uBAC1DjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCgU,SAChD,CAACwF,EAAOlK,UAAWkK,EAAOQ,OAAQR,EAAOI,KAAK9N,OAAOmO,SAAS9c,KAAK,kBAS5E+c,GAAY7B,IAAiB,IAAhB,OAAEmB,GAAQnB,EAG3B,KAFuBmB,EAAOxN,UAAYwN,EAAOvN,WAE5B,OAAO,KAM5B,OACE8H,EAAAA,EAAAA,MAAA,UACEE,QANYkG,KACdrH,OAAOsH,KAAK,iCAAD9c,OAAkCkc,EAAOxN,SAAQ,KAAA1O,OAAIkc,EAAOvN,WAAa,WAMlFjM,UAAU,qJAAoJgU,SAAA,EAE9JjU,EAAAA,EAAAA,KAACsa,EAAAA,EAAU,CAACra,UAAU,YAAY,yBAMlCsa,GAAcC,IAAoC,IAAnC,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,GAAUH,EAChD,MAAMI,GAAeH,GAAS,IAAIvd,MAAM,KAAK0H,KAAIqB,GAAOA,EAAIyP,SAAQ3J,OAAOmO,SAE3E,OAA2B,IAAvBU,EAAY9d,OAAqB,MAGnCkX,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0BAAyBgU,SAAA,EACtCD,EAAAA,EAAAA,MAAA,UACEE,QAASA,IAAMyG,EAAS,UACxB1a,UAAU,4EACV,gBAAeya,EAASG,OAAO5G,SAAA,EAE/BD,EAAAA,EAAAA,MAAA,QAAM/T,UAAU,oDAAmDgU,SAAA,EACjEjU,EAAAA,EAAAA,KAAC8a,EAAAA,EAAK,CAAC7a,UAAU,0BAA0B,kBAC3B2a,EAAY9d,OAAO,QAErCkD,EAAAA,EAAAA,KAAC+a,EAAAA,EAAY,CACX9a,UAAS,8CAAA1C,OACPmd,EAASG,OAAS,YAAc,SAKrCH,EAASG,SACR7a,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CgU,UAC3DjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBgU,SAC5B2G,EAAYhW,KAAI,CAACoW,EAAMxN,KACtBwG,EAAAA,EAAAA,MAAA,KAEEiH,KAAMD,EACNvT,OAAO,SACPyT,IAAI,sBACJjb,UAAU,2FAA0FgU,SAAA,EAEpGjU,EAAAA,EAAAA,KAACmb,EAAAA,EAAQ,CAAClb,UAAU,2BACpBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gCAA+BgU,SAAE+G,KACjDhb,EAAAA,EAAAA,KAACob,EAAAA,EAAY,CAACnb,UAAU,sDARnBuN,aAiHrB,IA/FkBkK,EAAAA,EAAAA,OAAK2D,IAAiB,IAAhB,OAAE5B,GAAQ4B,EAChC,MAAOX,EAAUY,IAAenW,EAAAA,EAAAA,UAAS,CAAC,GAE1C,IAAKsU,EAAQ,OAAO,KAEpB,MAAM8B,EAAU1K,IACdyK,GAAYlI,IAAI/X,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAU+X,GAAI,IAAE,CAACvC,IAAOuC,EAAKvC,QAGzC2K,EAAiB,CACrB,CACEpD,KAAMqD,EAAAA,EACNpH,MAAO,eACP0D,MAAOiB,GAAWS,EAAOlK,YAE3B,CACE6I,KAAMsD,EAAAA,EACNrH,MAAO,iBACP0D,MAAO0B,EAAOkC,aAEhB,CACEvD,KAAM0C,EAAAA,EACNzG,MAAO,gBACP0D,MAAO0B,EAAOmC,kBACdhS,KAAM,YAERmC,QAAO4I,GAAQA,EAAKoD,QAEtB,OACE/D,EAAAA,EAAAA,MAAA6H,EAAAA,SAAA,CAAA5H,SAAA,CAEGwF,EAAOqC,kBACN9b,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMgU,UACnBD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,8CAA6CgU,SAAA,CAAC,wBAC1CjU,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BgU,SAAEwF,EAAOqC,wBAI1E9H,EAAAA,EAAAA,MAACqE,GAAW,CAACE,MAAM,oBAAcH,KAAM4B,EAAAA,EAAO/F,SAAA,EAE5CjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oFAAmFgU,SAC/FuH,EAAe5W,KAAI,CAAC+P,EAAMnH,KACzBxN,EAAAA,EAAAA,KAACoZ,IAAW/d,EAAAA,EAAAA,GAAA,GAAiBsZ,GAAXnH,QAItBwG,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,cAAagU,SAAA,CAEzBwF,EAAOsC,mBACN/b,EAAAA,EAAAA,KAACuZ,GAAS,CACRnB,KAAMqD,EAAAA,EACNpH,MAAM,sBACN0D,MAAO0B,EAAOsC,mBAKjBtC,EAAOK,WACN9F,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0BAAyBgU,SAAA,EACtCD,EAAAA,EAAAA,MAAA,UACEE,QAASA,IAAMqH,EAAO,YACtBtb,UAAU,4EACV,gBAAeya,EAASZ,SAAS7F,SAAA,EAEjCD,EAAAA,EAAAA,MAAA,QAAM/T,UAAU,oDAAmDgU,SAAA,EACjEjU,EAAAA,EAAAA,KAACyb,EAAAA,EAAQ,CAACxb,UAAU,YAAY,kBAGlCD,EAAAA,EAAAA,KAAC+a,EAAAA,EAAY,CACX9a,UAAS,8CAAA1C,OACPmd,EAASZ,SAAW,YAAc,SAIvCY,EAASZ,WACR9F,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,+CAA8CgU,SAAA,EAC3DjU,EAAAA,EAAAA,KAACwZ,GAAc,CAACC,OAAQA,KACxBzZ,EAAAA,EAAAA,KAACma,GAAS,CAACV,OAAQA,WAO3BzZ,EAAAA,EAAAA,KAACua,GAAW,CACVE,MAAOhB,EAAOuC,oBACdtB,SAAUA,EACVC,SAAUY,gB,yBChQtB,MAAMU,GAAoB/X,IAAoC,IAAnC,UAAE9F,EAAS,WAAE8d,EAAa,GAAGhY,EACtD,MAAOiY,EAASC,IAAcjX,EAAAA,EAAAA,UAAS,KAChC4L,EAASC,IAAc7L,EAAAA,EAAAA,WAAS,IAChCkX,EAAYC,IAAiBnX,EAAAA,EAAAA,UAAS,OACtC3J,EAAOyV,IAAY9L,EAAAA,EAAAA,UAAS,IAC7BoX,GAAW5X,EAAAA,EAAAA,QAAO,CAAC,IAClB6X,EAAcC,IAAmBtX,EAAAA,EAAAA,UAAS,IAGjDsB,EAAAA,EAAAA,YAAU,KACJyV,EAAa,IACfjhB,QAAQC,IAAI,4DACZwhB,OAED,CAACR,IAEJ,MAAMS,GAAalX,EAAAA,EAAAA,cAAY,KAC7B6W,EAAc,MACdxS,SAAS8S,KAAKva,MAAMoI,SAAW,SAC9B,KAGHhE,EAAAA,EAAAA,YAAU,KACR,MAAMoW,EAAaC,IACH,WAAVA,EAAEjM,KAAkB8L,KAG1B,OADA5J,OAAOE,iBAAiB,UAAW4J,GAC5B,IAAM9J,OAAOG,oBAAoB,UAAW2J,KAClD,CAACF,IAGJ,MAAMD,GAAyBjX,EAAAA,EAAAA,cAAY,KACzCxK,QAAQC,IAAI,4CACZqhB,EAAS7V,QAAU,CAAC,EACpB+V,GAAgBrJ,GAAQA,EAAO,IAC/BgJ,EAAW,IACXpL,GAAW,GACXC,EAAS,MACR,IA0FH,OAxFAxK,EAAAA,EAAAA,YAAU,KACR,IAAKrI,EAEH,YADA4S,GAAW,GAKb,MAAM+L,EAAQ,GAAAxf,OAAMa,EAAS,MAAAb,OAAKif,GAClC,GAAID,EAAS7V,QAAQqW,GAInB,OAHA9hB,QAAQC,IAAI,2BAA4BkD,GACxCge,EAAWG,EAAS7V,QAAQqW,SAC5B/L,GAAW,GAIShW,WACpBC,QAAQC,IAAI,+BAAgCkD,GAE5C,IAEE,MAAQ9C,KAAM0hB,EAAK,MAAExhB,SAAgBE,EAAAA,EAASuhB,QAC3CthB,KAAK,uBACLuhB,KAAK,GAAD3f,OAAIa,EAAS,MAEpB,GAAI5C,EACF,MAAMA,EAGR,IAAKwhB,GAA0B,IAAjBA,EAAMlgB,OAIlB,OAHA7B,QAAQC,IAAI,wCAAyCkD,GACrDge,EAAW,SACXpL,GAAW,GAIb/V,QAAQC,IAAI,wBAAyB8hB,EAAMlgB,QAG3C,MAAMqgB,QAA2BC,QAAQC,IACvCL,EAAMpY,KAAI5J,MAAOsiB,EAAM9P,KAAW,IAAD+P,EAAAC,EAAAC,EAAAC,EAAAC,EAC/B,MAAMC,EAAQ,GAAArgB,OAAMa,EAAS,KAAAb,OAAI+f,EAAKO,OAC9BviB,MAAM,UAAEwiB,IAAgBpiB,EAAAA,EAASuhB,QACtCthB,KAAK,uBACLoiB,aAAaH,GAGhB,IAAIziB,EAAU,KACd,IACEF,QAAQC,IAAI,yBAA0B0iB,GACtCziB,QAAgBsB,EAAAA,GAAAA,IAAqBmhB,EAAUxf,EAAW,UAC1DnD,QAAQC,IAAI,sBAAuBC,EACrC,CAAE,MAAOK,GACPP,QAAQc,KAAK,8BAA+B6hB,EAAU,IAAKpiB,EAC7D,CAEA,MAAO,CACLa,GAAG,GAADkB,OAAKa,EAAS,KAAAb,OAAI+f,EAAKO,MACzBG,UAAWF,EACXG,WAAkB,QAAPV,EAAApiB,SAAO,IAAAoiB,OAAA,EAAPA,EAASpiB,UAAO,UAAAoC,OAAciQ,EAAQ,GACjD0Q,mBAA2B,QAATV,EAAEriB,SAAO,IAAAqiB,OAAA,EAAPA,EAASlf,oBAC7B6f,MAAc,QAATV,EAAEtiB,SAAO,IAAAsiB,OAAA,EAAPA,EAASlf,WAChB6f,SAAiB,QAATV,EAAEviB,SAAO,IAAAuiB,OAAA,EAAPA,EAASlf,UACnBC,UAAkB,QAATkf,EAAExiB,SAAO,IAAAwiB,OAAA,EAAPA,EAASlf,UACpB4f,SAAU,UAKhBpjB,QAAQC,IAAI,uBAAwBiiB,EAAmBrgB,QAGvDyf,EAAS7V,QAAQqW,GAAYI,EAC7Bf,EAAWe,GAEuB,IAA9BA,EAAmBrgB,QACrBmU,EAAS,8CAEb,CAAE,MAAOzV,GACPP,QAAQO,MAAM,6BAA8BA,GAC5CyV,EAAS,sCACX,CAAC,QACCD,GAAW,EACb,GAGFsN,KACC,CAAClgB,EAAWoe,IAEXzL,GAEAiD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,wCAAuCgU,SAAA,EACpDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iEAAqE,qCAMtFzE,GAEAwY,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,uCAAsCgU,SAAA,EACnDjU,EAAAA,EAAAA,KAAA,QAAAiU,SAAOzY,KACPwE,EAAAA,EAAAA,KAAA,UACEkU,QAASwI,EACTzc,UAAU,oCACVsY,MAAM,mBAAkBtE,UAExBjU,EAAAA,EAAAA,KAACue,GAAAA,EAAS,CAACte,UAAU,iBAMxBkc,EAAQrf,QAgBXkX,EAAAA,EAAAA,MAAA,WAAS/T,UAAU,OAAMgU,SAAA,EACvBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDgU,SAClEkI,EAAQvX,KAAK4Z,IACZxK,EAAAA,EAAAA,MAAA,UAEE/T,UAAU,+GACViU,QAASA,IAAMsK,EAAIR,WAAa1B,EAAckC,GAAKvK,SAAA,EAEnDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mEAAkEgU,UAC/EjU,EAAAA,EAAAA,KAAA,OACEwC,IAAKgc,EAAIR,UACTS,IAAKD,EAAIP,UACThe,UAAU,6FACV8Q,QAAQ,OACR1O,MAAO,CAAEqc,UAAW,aAKvBF,EAAIP,YACHjK,EAAAA,EAAAA,MAAA,cAAY/T,UAAU,eAAcgU,SAAA,EAClCjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCgU,SACnDuK,EAAIP,aAIPjK,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gDAA+CgU,SAAA,CAC3DuK,EAAI/f,YACHuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2CAA0CgU,SACvDuK,EAAI/f,YAGR+f,EAAIL,QACHnK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,QAAMuK,EAAIL,SAEjBK,EAAIJ,WACHpe,EAAAA,EAAAA,KAAA,QAAAiU,SAAO,IAAIrV,KAAK4f,EAAIJ,UAAUO,mBAAmB,cAKpDH,EAAIN,qBACHle,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0CAAyCgU,SACnDuK,EAAIN,0BAvCRM,EAAIniB,QAiDdggB,IACCrI,EAAAA,EAAAA,MAAA,OACE/T,UAAU,sFACViU,QAASyI,EAAW1I,SAAA,EAEpBjU,EAAAA,EAAAA,KAAA,UACEkU,QAASyI,EACT1c,UAAU,kEACV,aAAW,SAAQgU,UAEnBjU,EAAAA,EAAAA,KAACsZ,EAAAA,EAAC,CAACrY,KAAM,QAGX+S,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,uBAAsBgU,SAAA,EACrCjU,EAAAA,EAAAA,KAAA,OACEwC,IAAK6Z,EAAW2B,UAChBS,IAAKpC,EAAW4B,UAChBhe,UAAU,oEACViU,QAAU4I,GAAMA,EAAExR,oBAIjB+Q,EAAW4B,YACVjK,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,yCAAwCgU,SAAA,EACrDjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCgU,SAC7CoI,EAAW4B,aAIdjK,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,qDAAoDgU,SAAA,CAChEoI,EAAW5d,YACVuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2CAA0CgU,SACvDoI,EAAW5d,YAGf4d,EAAW8B,QACVnK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,iBAAYoI,EAAW8B,SAE9B9B,EAAW+B,WACVpK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,SAAO,IAAIrV,KAAKyd,EAAW+B,UAAUO,mBAAmB,eAKjEtC,EAAW6B,qBACVle,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAA+BgU,SACzCoI,EAAW6B,kCAjH1BlK,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0CAAyCgU,SAAA,EACtDjU,EAAAA,EAAAA,KAAA,QAAAiU,SAAM,iDACNjU,EAAAA,EAAAA,KAAA,UACEkU,QAASwI,EACTzc,UAAU,oCACVsY,MAAM,mBAAkBtE,UAExBjU,EAAAA,EAAAA,KAACue,GAAAA,EAAS,CAACte,UAAU,kBA2H/B,GAAeJ,EAAAA,KAAWoc,ICvO1B,IAxDuBvE,EAAAA,EAAAA,OAAKxT,IAAiC,IAAhC,OAAEuV,EAAM,WAAEyC,EAAa,GAAGhY,EACrD,OAAW,OAANuV,QAAM,IAANA,GAAAA,EAAQmF,oBAGX5K,EAAAA,EAAAA,MAAA,WACE/T,UAAS,smBAqBPgU,SAAA,EAEFD,EAAAA,EAAAA,MAAA,UAAQ/T,UAAU,eAAcgU,SAAA,EAC9BD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,uCAAsCgU,SAAA,EACnDjU,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uFAAsFgU,UACpGjU,EAAAA,EAAAA,KAAA,OACEwC,IAAG,GAAAjF,OAAK6T,oBAAsB,aAC9BqN,IAAI,sBACJxe,UAAU,4BACVoC,MAAO,CAAE0J,OAAQ,OAAQ1B,aAAc,IAAKO,UAAW,OAAQiU,UAAW,QAC1E,cAAY,YAGhB7e,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDgU,SAAC,8BAInEjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAGjBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wDAAuDgU,SACnEwF,EAAOmF,sBAIV5e,EAAAA,EAAAA,KAACic,GAAiB,CAAC7d,UAAWqb,EAAOpd,GAAI6f,WAAYA,OAlDjB,Q,0DCF1C,MAUA,IAVqBxE,EAAAA,EAAAA,OAAKxT,IAAgB,IAAf,MAAE6T,GAAO7T,EAClC,YAAcnH,IAAVgb,GAAiC,OAAVA,EAAuB,MAGhD/X,EAAAA,EAAAA,KAAA,QAAMC,UAAS,eAAA1C,OAAiBwa,EAAQ,iBAAmB,oBAAqB9D,SAC7E8D,EAAQ,MAAQ,cCSvB,MAAM+G,GAAiB5a,IAAgC,IAA/B,MAAE6a,EAAK,WAAEC,EAAa,GAAG9a,EAC/C,OAAK6a,GAA0B,IAAjBA,EAAMjiB,QAGlBkD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOgU,UACpBjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CgU,SACtD8K,EAAMna,KAAI,CAAC+P,EAAMsK,KAChBjL,EAAAA,EAAAA,MAAA,MAAc/T,UAAU,mDAAkDgU,SAAA,EACxEjU,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kCAAkCoC,MAAO,CAAC6c,SAAU,MAAOC,QAAS,gBAAgBlL,SAAC,YACrGjU,EAAAA,EAAAA,KAAA,QAAAiU,SAAOU,MAFAsK,SANwB,MAiBrCG,GAAWtL,IAAA,IAAGsE,KAAM7V,EAAI,MAAE8R,EAAK,MAAE0D,GAAOjE,EAAA,OAC5CE,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0CAAyCgU,SAAA,EACtDjU,EAAAA,EAAAA,KAACuC,EAAI,CAACtC,UAAU,gDAChB+T,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,SAAQgU,SAAA,EACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBgU,SAAEI,KACxCrU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAAE8D,WAqF1D,IAhFoBL,EAAAA,EAAAA,OAAKtD,IAAiB,IAAhB,OAAEqF,GAAQrF,EAClC,IAAKqF,EAAQ,OAAO,KAGpB,MAAM4F,EAAc5F,EAAO6F,sBAAwB7F,EAA6B,sBAAK,GAC/E8F,GA3CuBzc,EA2CgB2W,EAAO+F,oBA1CvB,kBAAT1c,EAEbA,EACJ5F,MAAM,UACN0H,KAAI+P,GAAQA,EAAKe,SACjB3J,OAAOmO,SALoC,GADhD,IAA+BpX,EA+CrB2c,GAAAA,EADR,MAOMC,EAAY,CAChBL,GAAe,CACbjH,KAAMuH,GAAAA,EACNtL,MAAO,0BACP0D,MAAOsH,GAET,CACEjH,KAAMwH,GAAAA,EACNvL,MAAO,sBACP0D,MAAO0B,EAAOoG,eAEhB,CACEzH,KAAM0H,GAAAA,EACNzL,MAAO,qBACP0D,MAAO0B,EAAOsG,kBAEhBhU,OAAOmO,SAGH8F,EAAiB,CACrB,CACE5H,KAAM6H,GAAAA,EACN5L,MAAO,4CACP0D,OAAO/X,EAAAA,EAAAA,KAACkgB,GAAY,CAACnI,MAAO0B,EAAO0G,yBAErC,CACE/H,KAAM6H,GAAAA,EACN5L,MAAO,qCACP0D,OAAO/X,EAAAA,EAAAA,KAACkgB,GAAY,CAACnI,MAAO0B,EAAO2G,sBAIvC,OACEpM,EAAAA,EAAAA,MAAA6H,EAAAA,SAAA,CAAA5H,SAAA,EACED,EAAAA,EAAAA,MAACqE,GAAW,CAACE,MAAM,cAAcH,KAAMqH,GAAAA,EAASxL,SAAA,EAE9CjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCgU,UAC/CjU,EAAAA,EAAAA,KAAC8e,GAAc,CAACC,MAAOQ,EAAgBP,WAAY,OAIrDhf,EAAAA,EAAAA,KAAA,OACEC,UAAU,oFAAmFgU,SAE5FyL,EAAU9a,KAAI,CAAC+P,EAAMsK,KACpBjf,EAAAA,EAAAA,KAACof,GAAQ,CAAWhH,KAAMzD,EAAKyD,KAAM/D,MAAOM,EAAKN,MAAO0D,MAAOpD,EAAKoD,OAArDkH,WAKrBjf,EAAAA,EAAAA,KAACqY,GAAW,CACVE,MAAM,2BACNH,KAAM6H,GAAAA,EACNzH,YAAY,gFAA4EvE,UAExFjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oFAAmFgU,SAC/F+L,EAAepb,KAAI,CAAC+P,EAAMsK,KACzBjf,EAAAA,EAAAA,KAACof,GAAQ,CAAWhH,KAAMzD,EAAKyD,KAAM/D,MAAOM,EAAKN,MAAO0D,MAAOpD,EAAKoD,OAArDkH,e,2FCrG3B,MAAMG,GAAWlb,IAAA,IAAGkU,KAAM7V,EAAI,MAAE8R,EAAK,MAAE0D,GAAO7T,EAAA,OAC5C8P,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gDAA+CgU,SAAA,EAC5DjU,EAAAA,EAAAA,KAACuC,EAAI,CAACtC,UAAU,gDAChB+T,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,SAAQgU,SAAA,EACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAegU,SAAEI,KAChCrU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BgU,SAAE8D,WAwElD,IAnEuBL,EAAAA,EAAAA,OAAK5D,IAAiB,IAAhB,OAAE2F,GAAQ3F,EACrC,IAAK2F,EAAQ,OAAO,KAEpB,MAAMsF,EAAQ,CACZ,CACE3G,KAAMiI,GAAAA,EACNhM,MAAO,sBACP0D,MAAO0B,EAAO6G,aAEhB,CACElI,KAAMmI,GAAAA,EACNlM,MAAO,iBACP0D,MAAO0B,EAAO+G,aAEhB,CACEpI,KAAMqI,GAAAA,EACNpM,MAAO,uBACP0D,OAAO/X,EAAAA,EAAAA,KAACkgB,GAAY,CAACnI,MAAO0B,EAAOiH,mBAErC,CACEtI,KAAMuI,GAAAA,EACNtM,MAAO,+BACP0D,MAAO0B,EAAOmH,cAEhB,CACExI,KAAM4B,EAAAA,EACN3F,MAAO,6BACP0D,MAAO0B,EAAOoH,aAEhB,CACEzI,KAAM0I,GAAAA,EACNzM,MAAO,UACP0D,OAAO/X,EAAAA,EAAAA,KAACkgB,GAAY,CAACnI,MAAO0B,EAAOsH,WAErC,CACE3I,KAAM4I,GAAAA,EACN3M,MAAO,kBACP0D,OAAO/X,EAAAA,EAAAA,KAACkgB,GAAY,CAACnI,MAAO0B,EAAOwH,mBAErC,CACE7I,KAAM8I,GAAAA,EACN7M,MAAO,uBACP0D,OAAO/X,EAAAA,EAAAA,KAACkgB,GAAY,CAACnI,MAAO0B,EAAO0H,iBAIvC,OACEnN,EAAAA,EAAAA,MAACqE,GAAW,CAACE,MAAM,iBAAiBH,KAAMgJ,GAAAA,EAAKnN,SAAA,CAC5CwF,EAAO4H,iBACNrhB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yEAAwEgU,SACpFwF,EAAO4H,kBAGZrhB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oFAAmFgU,SAC/F8K,EAAMna,KAAI,CAAC+P,EAAMsK,KAChBjf,EAAAA,EAAAA,KAACof,GAAQ,CAEPhH,KAAMzD,EAAKyD,KACX/D,MAAOM,EAAKN,MACZ0D,MAAOpD,EAAKoD,OAHPkH,a,sECnEjB,MAAMG,GAAWlb,IAAA,IAAGkU,KAAM7V,EAAI,MAAE8R,EAAK,MAAE0D,EAAK,YAAES,GAAatU,EAAA,OACzD8P,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gDAA+CgU,SAAA,EAC5DjU,EAAAA,EAAAA,KAACuC,EAAI,CAACtC,UAAU,gDAChB+T,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,SAAQgU,SAAA,EACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBgU,SAAEI,KACxCrU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCgU,SAAE8D,IAClDS,IACCxY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDgU,SAC5DuE,WAoDL8I,GAAuBC,IAC3B,MAAMC,EAAcjK,OAAOgK,GAAO7L,OAAOH,cACzC,MAAoB,QAAhBiM,GAEAxN,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,yCAAwCgU,SAAA,EACrDjU,EAAAA,EAAAA,KAACqZ,EAAAA,EAAK,CAACpZ,UAAU,YAAY,SAIR,WAAhBuhB,GAAyC,QAAhBA,GAEhCxN,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,wCAAuCgU,SAAA,EACpDjU,EAAAA,EAAAA,KAACsZ,EAAAA,EAAC,CAACrZ,UAAU,YAAY,YAKxBshB,GA6DT,IA1D0B7J,EAAAA,EAAAA,OAAK5D,IAAiB,IAAhB,OAAE2F,GAAQ3F,EACxC,IAAK2F,EAAQ,OAAO,KAEpB,MAAMgI,EA/C6BA,KACnC,IAAKA,EAAU,OAAO,KAEtB,MAAOhQ,KAAWiQ,GAASD,EAASvkB,MAAM,KACpC+gB,EAAYyD,EAAMtkB,KAAK,KAAKsY,OAElC,MAAO,CACLjE,OAAwC,QAAhCA,EAAOiE,OAAOH,cAA0B,MAAQ9D,EAAOiE,OAC/DuI,UAAWA,GAAa,OAuCT0D,CAA4BlI,EAAOmI,sBAC9CC,EApC4BN,KAClC,IAAKA,EAAO,OAAO,KAEnB,MAAO9P,KAAWiQ,GAASH,EAAMrkB,MAAM,KACjC+gB,EAAYyD,EAAMtkB,KAAK,KAAKsY,OAElC,MAAO,CACLjE,OAAwC,QAAhCA,EAAOiE,OAAOH,cAA0B,MAAQ9D,EAAOiE,OAC/DuI,UAAWA,GAAa,OA4BP6D,CAA2BrI,EAAOsI,qBAErD,OACE/N,EAAAA,EAAAA,MAACqE,GAAW,CAACE,MAAM,WAAWH,KAAM4J,GAAAA,EAAW/N,SAAA,EAC7CD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gEAA+DgU,SAAA,EAC5EjU,EAAAA,EAAAA,KAACof,GAAQ,CACPhH,KAAM6J,GAAAA,EACN5N,MAAM,2BACN0D,MAAO0B,EAAOyI,yBAEhBliB,EAAAA,EAAAA,KAACof,GAAQ,CACPhH,KAAM+J,GAAAA,EACN9N,MAAM,kCACN0D,MAAO0B,EAAO2I,6BAEhBpiB,EAAAA,EAAAA,KAACof,GAAQ,CACPhH,KAAM0H,GAAAA,EACNzL,MAAM,8CACN0D,MAAOuJ,GAAoB7H,EAAO4I,6BAE3B,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUhQ,UACTzR,EAAAA,EAAAA,KAACof,GAAQ,CACPhH,KAAMkK,GAAAA,EACNjO,MAAM,iCACN0D,MAAOuJ,GAAoBG,EAAShQ,QACpC+G,YAAaiJ,EAASxD,gBAK5BjK,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,oCAAmCgU,SAAA,EAChDjU,EAAAA,EAAAA,KAACof,GAAQ,CACPhH,KAAMmK,GAAAA,EACNlO,MAAM,iBACN0D,MAAO0B,EAAO+I,UAEhBxiB,EAAAA,EAAAA,KAACof,GAAQ,CACPhH,KAAM4J,GAAAA,EACN3N,MAAM,yBACN0D,MAAO0B,EAAOgJ,uBAEL,OAAVZ,QAAU,IAAVA,OAAU,EAAVA,EAAYpQ,UACXzR,EAAAA,EAAAA,KAACof,GAAQ,CACPhH,KAAMsK,GAAAA,EACNrO,MAAM,sDACN0D,MAAOuJ,GAAoBO,EAAWpQ,QACtC+G,YAAaqJ,EAAW5D,qB,qCCrIpC,MAAM0E,GAAcze,IAAmC,IAAhCkU,KAAM7V,EAAI,MAAE8R,EAAK,MAAE0D,GAAO7T,EAC/C,MAAM0e,EAA6C,YAA3B,OAAL7K,QAAK,IAALA,OAAK,EAALA,EAAOrC,OAAOH,eAEjC,OACEvB,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,iGAAgGgU,SAAA,EAC7GjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMgU,UACnBjU,EAAAA,EAAAA,KAACuC,EAAI,CAACtC,UAAU,4CAElB+T,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,mBAAkBgU,SAAA,EAC/BjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCgU,SAAEI,IACrDuO,GACC5O,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gDAA+CgU,SAAA,EAC5DjU,EAAAA,EAAAA,KAACsZ,EAAAA,EAAC,CAACrZ,UAAU,0BAA0B,aAIzCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCgU,SACnD8D,WA6Db,IArD0BL,EAAAA,EAAAA,OAAK5D,IAAiB,IAAhB,OAAE2F,GAAQ3F,EACxC,IAAK2F,EAAQ,OAAO,KAEpB,MA4BMoJ,EA5Be,CACnB,CACE9I,MAAO,qBACP3B,KAAM6H,GAAAA,EACN5L,MAAO,yBAET,CACE0F,MAAO,0BACP3B,KAAM0K,GAAAA,EACNzO,MAAO,+BAET,CACE0F,MAAO,aACP3B,KAAMwH,GAAAA,EACNvL,MAAO,qCAET,CACE0F,MAAO,qBACP3B,KAAM2K,GAAAA,EACN1O,MAAO,uCAET,CACE0F,MAAO,sBACP3B,KAAM4K,GAAAA,EACN3O,MAAO,iCAI4BtI,QACrCkX,GAAWxJ,EAAOwJ,EAAQlJ,QAAUN,EAAOwJ,EAAQlJ,OAAOrE,SAG5D,OAAiC,IAA7BmN,EAAkB/lB,OAAqB,MAGzCkD,EAAAA,EAAAA,KAACqY,GAAW,CAACE,MAAM,uBAAuBH,KAAM4K,GAAAA,EAAO/O,UACrDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CgU,SACvD4O,EAAkBje,KAAKqe,IACtBjjB,EAAAA,EAAAA,KAAC2iB,GAAW,CAEVvK,KAAM6K,EAAQ7K,KACd/D,MAAO4O,EAAQ5O,MACf0D,MAAO0B,EAAOwJ,EAAQlJ,QAHjBkJ,EAAQlJ,gBCxEnBmJ,GAA4Bhf,IAAoC,IAAnC,UAAE9F,EAAS,WAAE8d,EAAa,GAAGhY,EAC9D,MAAOiY,EAASC,IAAcjX,EAAAA,EAAAA,UAAS,KAChC4L,EAASC,IAAc7L,EAAAA,EAAAA,WAAS,IAChC3J,EAAOyV,IAAY9L,EAAAA,EAAAA,UAAS,OAC5BkX,EAAYC,IAAiBnX,EAAAA,EAAAA,UAAS,MAEvCwX,GAAalX,EAAAA,EAAAA,cAAY,IAAM6W,EAAc,OAAO,IA2F1D,OAxFA7V,EAAAA,EAAAA,YAAU,KACR,MAAMoW,EAAaC,IACH,WAAVA,EAAEjM,KAAkB8L,KAG1B,OADA5J,OAAOE,iBAAiB,UAAW4J,GAC5B,IAAM9J,OAAOG,oBAAoB,UAAW2J,KAClD,CAACF,KAGJlW,EAAAA,EAAAA,YAAU,KACJyV,EAAa,IACfjhB,QAAQC,IAAI,oEACZkhB,EAAW,IACXpL,GAAW,GACXC,EAAS,SAEV,CAACiL,KAEJzV,EAAAA,EAAAA,YAAU,KACHrI,IAEL4S,GAAW,GACXC,EAAS,MAGTvV,EAAAA,EACGuhB,QACAthB,KAAK,uBACLuhB,KAAK,GAAD3f,OAAIa,EAAS,MACjB+kB,MAAKnoB,UAA4B,IAArB,KAAEM,EAAI,MAAEE,GAAOsY,EAC1B,GAAItY,EAGF,OAFAyV,EAASzV,EAAMgb,cACfxF,GAAW,GAIb,GAAI1V,GAAQA,EAAKwB,OAAS,EAAG,CAC3B7B,QAAQC,IAAI,uCAAwCI,EAAKwB,QACzD,MAAMsmB,QAAsBhG,QAAQC,IAAI/hB,EAAKsJ,KAAI5J,MAAOsiB,EAAM2B,KAAS,IAAD1B,EAAAC,EAAAC,EAAAC,EAAAC,EACpE,MAAQriB,MAAM,UAAEwiB,IAAgBpiB,EAAAA,EAC7BuhB,QACAthB,KAAK,uBACLoiB,aAAa,GAADxgB,OAAIa,EAAS,KAAAb,OAAI+f,EAAKO,OAGrC,IAAIwF,EAAS,YACT/F,EAAKO,KAAKyF,WAAW,eACvBD,EAAS,aACA/F,EAAKO,KAAKyF,WAAW,gBAC9BD,EAAS,aAIX,IAAIloB,EAAU,KACd,IACE,MAAM8B,EAAe,GAAAM,OAAMa,EAAS,KAAAb,OAAI+f,EAAKO,MAC7C5iB,QAAQC,IAAI,mCAAoC+B,GAChD9B,QAAgBsB,EAAAA,GAAAA,IAAqBQ,EAAiBmB,EAAW,aACjEnD,QAAQC,IAAI,qCAAsCC,EACpD,CAAE,MAAOK,GACPP,QAAQc,KAAK,0BAA2BP,EAC1C,CAEA,MAAO,CACLa,GAAI4iB,EAAM,EACVjB,UAAWF,EACXuF,SACAE,KAAMjG,EAAKO,KACXlf,WAAY2e,EAAK3e,YAAc,GAC/BxD,SAAgB,QAAPoiB,EAAApiB,SAAO,IAAAoiB,OAAA,EAAPA,EAASpiB,UAAO,aAAAoC,OAAiB8lB,GAC1CnF,mBAA2B,QAATV,EAAEriB,SAAO,IAAAqiB,OAAA,EAAPA,EAASlf,oBAC7B6f,MAAc,QAATV,EAAEtiB,SAAO,IAAAsiB,OAAA,EAAPA,EAASlf,WAChB6f,SAAiB,QAATV,EAAEviB,SAAO,IAAAuiB,OAAA,EAAPA,EAASlf,UACnBC,UAAkB,QAATkf,EAAExiB,SAAO,IAAAwiB,OAAA,EAAPA,EAASlf,eAGxB2d,EAAWgH,EACb,MACEhH,EAAW,IAEbpL,GAAW,MAEZwS,OAAMvR,IACLhB,EAAS,oBAAD1T,OAAqB0U,EAAIuE,UACjCxF,GAAW,SAEd,CAAC5S,IAEA2S,GACK/Q,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAegU,SAAC,uCAGpCzY,GACKwY,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,eAAcgU,SAAA,CAAC,6BAA2BzY,KAG7D2gB,EAAQrf,QAKXkX,EAAAA,EAAAA,MAAA,WAAS/T,UAAU,OAAMgU,SAAA,EACvBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDgU,SAClEkI,EAAQvX,KAAK4Z,IACZxK,EAAAA,EAAAA,MAAA,UAEE/T,UAAU,+GACViU,QAASA,IAAMsK,EAAIR,WAAa1B,EAAckC,GAAKvK,SAAA,EAEnDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mEAAkEgU,UAC/EjU,EAAAA,EAAAA,KAAA,OACEwC,IAAKgc,EAAIR,UACTS,IAAKD,EAAIrjB,QACT8E,UAAU,6FACV8Q,QAAQ,OACR1O,MAAO,CAAEqc,UAAW,aAKvBF,EAAIrjB,UACH6Y,EAAAA,EAAAA,MAAA,cAAY/T,UAAU,eAAcgU,SAAA,EAClCjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yCAAwCgU,SACnDuK,EAAIrjB,WAIP6Y,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gDAA+CgU,SAAA,CAC3DuK,EAAI/f,YACHuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2CAA0CgU,SACvDuK,EAAI/f,YAGR+f,EAAIL,QACHnK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,QAAMuK,EAAIL,SAEjBK,EAAIJ,WACHpe,EAAAA,EAAAA,KAAA,QAAAiU,SAAO,IAAIrV,KAAK4f,EAAIJ,UAAUO,mBAAmB,cAKpDH,EAAIN,qBACHle,EAAAA,EAAAA,KAAA,KAAGC,UAAU,0CAAyCgU,SACnDuK,EAAIN,0BAvCRM,EAAIniB,QAiDdggB,IACCrI,EAAAA,EAAAA,MAAA,OACE/T,UAAU,sFACViU,QAASyI,EAAW1I,SAAA,EAEpBjU,EAAAA,EAAAA,KAAA,UACEkU,QAASyI,EACT1c,UAAU,kEACV,aAAW,SAAQgU,UAEnBjU,EAAAA,EAAAA,KAACsZ,EAAAA,EAAC,CAACrY,KAAM,QAGX+S,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,uBAAsBgU,SAAA,EACrCjU,EAAAA,EAAAA,KAAA,OACEwC,IAAK6Z,EAAW2B,UACdS,IAAKpC,EAAWlhB,QAClB8E,UAAU,oEACViU,QAAU4I,GAAMA,EAAExR,oBAIjB+Q,EAAWlhB,UACV6Y,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,yCAAwCgU,SAAA,EACrDjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mCAAkCgU,SAC7CoI,EAAWlhB,WAId6Y,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,qDAAoDgU,SAAA,CAChEoI,EAAW5d,YACVuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2CAA0CgU,SACvDoI,EAAW5d,YAGf4d,EAAW8B,QACVnK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,iBAAYoI,EAAW8B,SAE9B9B,EAAW+B,WACVpK,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,SAAO,IAAIrV,KAAKyd,EAAW+B,UAAUO,mBAAmB,eAKjEtC,EAAW6B,qBACVle,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gCAA+BgU,SACzCoI,EAAW6B,iCAvGrB,MAwHX,GAAere,EAAAA,KAAWqjB,I,eCrO1B,MAAMO,GAA4B,CAChCC,YAAa,6BACbC,cAAe,QACfC,cAAe,CAAC,aAAc,YAAa,YAAa,aAAc,aACtEC,wBAAyB,EACzBC,eAAgB,CAAEjjB,MAAO,IAAKkjB,OAAQ,MCqOxC,IAxO4BrM,EAAAA,EAAAA,OAAKxT,IAAiC,IAAhC,OAAEuV,EAAM,WAAEyC,EAAa,GAAGhY,EAC1D,MAAO8f,EAAWC,IAAgB9e,EAAAA,EAAAA,UAAS,KACpC4L,EAASC,IAAc7L,EAAAA,EAAAA,WAAS,IAChC3J,EAAOyV,IAAY9L,EAAAA,EAAAA,UAAS,OAC5B+e,EAAsBC,IAA2Bhf,EAAAA,EAAAA,UAAS,IAC1DkX,EAAYC,IAAiBnX,EAAAA,EAAAA,UAAS,MAEvCwX,GAAalX,EAAAA,EAAAA,cAAY,IAAM6W,EAAc,OAAO,KAG1D7V,EAAAA,EAAAA,YAAU,KACR,MAAMoW,EAAaC,IACH,WAAVA,EAAEjM,KACJ8L,KAIJ,OADA5J,OAAOE,iBAAiB,UAAW4J,GAC5B,IAAM9J,OAAOG,oBAAoB,UAAW2J,KAClD,CAACF,KAGJlW,EAAAA,EAAAA,YAAU,KACR,GAAW,OAANgT,QAAM,IAANA,IAAAA,EAAQpd,GAEX,YADA2U,GAAW,GAGahW,WACxB,IACEgW,GAAW,GACXC,EAAS,MACT,MAAM3V,ODgDuBN,WACnC,IACE,MAAM,KAAEM,EAAI,MAAEE,SAAgBE,EAAAA,EAC3BC,KAAK,uBACLC,OAAO,KACPY,GAAG,YAAaG,GAChBH,GAAG,SAAS,GACZwa,MAAM,QAAS,CAAEC,WAAW,IAC5BD,MAAM,aAAc,CAAEC,WAAW,IAEpC,GAAIzb,EACF,MAAMA,EAGR,OAAKF,GAAwB,IAAhBA,EAAKwB,OAKUxB,EAAKsJ,KAAKwf,IACpC,GAAIA,EAAS/lB,WACX,IACE,MAAQ/C,MAAM,UAAEwiB,IAAgBpiB,EAAAA,EAASuhB,QACtCthB,KAAK8nB,GAA0BC,aAC/B3F,aAAaqG,EAAS/lB,YAEzB,OAAAhD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY+oB,GAAQ,IAAEC,kBAAmBvG,GAC3C,CAAE,MAAO7L,GACP,OAAA5W,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY+oB,GAAQ,IAAEC,kBAAmB,KAAMhG,SAAUpM,EAAIuE,SAC/D,CAEF,OAAO4N,KAhBA,EAqBX,CAAE,MAAO5oB,GAEP,MADAP,QAAQO,MAAM,4CAA0CA,GAClDA,CACR,GCvFyB8oB,CAAsB7K,EAAOpd,IAChD4nB,EAAa3oB,GAAQ,IACrB6oB,EAAwB,EAC1B,CAAE,MAAOlS,GACPhB,EAASgB,EAAIuE,QACf,CAAC,QACCxF,GAAW,EACb,GAEFuT,KACC,CAAO,OAAN9K,QAAM,IAANA,OAAM,EAANA,EAAQpd,GAAI6f,IAGhB,MAAMsI,GAAe/e,EAAAA,EAAAA,cAAY,KAC/B0e,GAAwB/Q,GACtBA,EAAO4Q,EAAUlnB,OAAS,EAAIsW,EAAO,EAAI,MAE1C,CAAC4Q,EAAUlnB,SAER2nB,GAAehf,EAAAA,EAAAA,cAAY,KAC/B0e,GAAwB/Q,GACtBA,EAAO,EAAIA,EAAO,EAAI4Q,EAAUlnB,OAAS,MAE1C,CAACknB,EAAUlnB,SAgBd,IAbA2J,EAAAA,EAAAA,YAAU,KACR,MAAMie,EAAiB5H,IACjBkH,EAAUlnB,QAAU,IACV,eAAVggB,EAAEjM,IACJ2T,IACmB,cAAV1H,EAAEjM,KACX4T,MAIJ,OADA1R,OAAOE,iBAAiB,UAAWyR,GAC5B,IAAM3R,OAAOG,oBAAoB,UAAWwR,KAClD,CAACV,EAAUlnB,OAAQ0nB,EAAcC,IAEhC1T,EACF,OACE/Q,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mHAAkHgU,UAC/HD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,wCAAuCgU,SAAA,EACpDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mEACfD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBgU,SAAC,iDAM7C,GAAIzY,EACF,OACEwE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iHAAgHgU,UAC7HjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBgU,UAC/BD,EAAAA,EAAAA,MAAA,KAAG/T,UAAU,eAAcgU,SAAA,CAAC,+CAA0CzY,SAM9E,IAAKwoB,EAAUlnB,OACb,OAAO,KAGT,MAAM6nB,EAAkBX,EAAUE,GAC5BU,EAAuBZ,EAAUlnB,OAAS,EAEhD,OACEkX,EAAAA,EAAAA,MAAA,WACE/T,UAAU,6YAQTgU,SAAA,EAEDD,EAAAA,EAAAA,MAAA,UAAQ/T,UAAU,eAAcgU,SAAA,EAC9BD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,iDAAgDgU,SAAA,EAC7DD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0BAAyBgU,SAAA,EACtCjU,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uFAAsFgU,UACpGjU,EAAAA,EAAAA,KAAA,OACEwC,IAAG,GAAAjF,OAAK6T,oBAAsB,gBAC9BqN,IAAI,yBACJxe,UAAU,4BACVoC,MAAO,CACL0J,OAAQ,OACR1B,aAAc,IACdO,UAAW,OACXia,OAAQ,IACRvb,QAAS,IACTuB,OAAQ,OACRia,QAAS,QAEX,cAAY,YAGhB9kB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+CAA8CgU,SAAC,mCAI9D2Q,IACC5kB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CgU,UAC5DD,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAOiQ,EAAuB,EAAE,OAAKF,EAAUlnB,gBAIrDkD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAIjB+T,EAAAA,EAAAA,MAAA,WAAS/T,UAAU,wDAAuDgU,SAAA,CACvE0Q,EAAgBI,iBACf/kB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uDAAsDgU,SACjE0Q,EAAgBI,kBAGrB/kB,EAAAA,EAAAA,KAAA,OAAAiU,SAAM0Q,EAAgBP,WACrBO,EAAgBN,oBACfrkB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,OAAMgU,UACtBD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,WAAUgU,SAAA,EACvBjU,EAAAA,EAAAA,KAAA,OACEwC,IAAKmiB,EAAgBN,kBACrB5F,IAAKkG,EAAgBK,kBAAoB,qCACzC/kB,UAAU,iHACViU,QAASA,IAAMoI,EAAcqI,GAC7B5T,QAAQ,SAET4T,EAAgBK,mBACfhlB,EAAAA,EAAAA,KAAA,cAAYC,UAAU,yCAAwCgU,SAC3D0Q,EAAgBK,2BAS5BJ,IACC5Q,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,uEAAsEgU,SAAA,EACnFD,EAAAA,EAAAA,MAAA,UACEE,QAASuQ,EACTxkB,UAAU,uHACV,aAAW,uBAAmBgU,SAAA,EAE9BjU,EAAAA,EAAAA,KAACilB,GAAAA,EAAW,CAAChlB,UAAU,aACvBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBgU,SAAC,iBAErCjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYgU,SACxB+P,EAAUpf,KAAI,CAACsgB,EAAG1X,KACjBxN,EAAAA,EAAAA,KAAA,UAEEkU,QAASA,IAAMiQ,EAAwB3W,GACvCvN,UAAS,iCAAA1C,OAAmCiQ,IAAU0W,EAAuB,gCAAkC,2BAA0B,sBACzI,oCAAA3mB,OAAgCiQ,EAAQ,IAHnCA,QAOXwG,EAAAA,EAAAA,MAAA,UACEE,QAASsQ,EACTvkB,UAAU,uHACV,aAAW,yBAAkBgU,SAAA,EAE7BjU,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBgU,SAAC,gBACnCjU,EAAAA,EAAAA,KAAC+a,EAAAA,EAAY,CAAC9a,UAAU,kBAM7Boc,IACCrc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6EAA6EiU,QAASyI,EAAW1I,UAC9GD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gCAAgCiU,QAAS4I,GAAKA,EAAExR,kBAAkB2I,SAAA,EAC/EjU,EAAAA,EAAAA,KAAA,UACEC,UAAU,gGACViU,QAASyI,EACT,aAAW,cAAa1I,UAExBjU,EAAAA,EAAAA,KAACsZ,EAAAA,EAAC,CAACrZ,UAAU,eAEfD,EAAAA,EAAAA,KAAA,OACEwC,IAAK6Z,EAAWgI,kBAChB5F,IAAKpC,EAAW2I,kBAAoB,qCACpC/kB,UAAU,6DAEXoc,EAAW2I,mBACVhlB,EAAAA,EAAAA,KAAA,cAAYC,UAAU,2CAA0CgU,SAC7DoI,EAAW2I,yBAOtBhlB,EAAAA,EAAAA,KAACkjB,GAAyB,CAAC9kB,UAAWqb,EAAOpd,GAAI6f,WAAYA,UC5L7DiJ,IAAoBzN,EAAAA,EAAAA,OAAKxT,IAAkC,IAAjC,SAAE+P,EAAQ,cAAEmR,GAAelhB,EACzD,MAAMmhB,EAAmBD,EACrB,eACA,YAEJ,OACEpR,EAAAA,EAAAA,MAAA6H,EAAAA,SAAA,CAAA5H,SAAA,EACEjU,EAAAA,EAAAA,KAAA,SAAAiU,SArCa,2eAsCbjU,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAA1C,OAAK8nB,EAAgB,4CAA2CpR,SAC3EA,UAwCT,IAlCmByD,EAAAA,EAAAA,OAAK5D,IAAwD,IAAvD,OAAE2F,EAAM,cAAE2L,GAAgB,EAAK,WAAElJ,EAAa,GAAGpI,EAGxE,GAFA7Y,QAAQC,IAAI,sBAAuBue,IAE9BA,EAEH,OADAxe,QAAQC,IAAI,6CACL,KAIT,MAAMoqB,EAAe,CACnB,CAAEC,UAAWC,GAAW1lB,MAAO,CAAE2Z,WAEjC,CAAE8L,UAAWE,GAAa3lB,MAAO,CAAE2Z,WACnC,CAAE8L,UAAWG,GAAgB5lB,MAAO,CAAE2Z,WACtC,CAAE8L,UAAWI,GAAmB7lB,MAAO,CAAE2Z,WACzC,CAAE8L,UAAWK,GAAmB9lB,MAAO,CAAE2Z,YAG3C,OACEzF,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,YAAWgU,SAAA,EAExBjU,EAAAA,EAAAA,KAACmlB,GAAiB,CAACC,cAAeA,EAAcnR,SAC7CqR,EAAa1gB,KAAI,CAAAwP,EAAuB5G,KAAK,IAA3B,UAAE+X,EAAS,MAAEzlB,GAAOsU,EAAA,OACrCpU,EAAAA,EAAAA,KAACulB,GAASlqB,EAAAA,EAAAA,GAAA,GAAiByE,GAAX0N,SAKpBxN,EAAAA,EAAAA,KAAC6lB,GAAc,CAACpM,OAAQA,EAAQyC,WAAYA,KAC5Clc,EAAAA,EAAAA,KAAC8lB,GAAmB,CAACrM,OAAQA,EAAQyC,WAAYA,U,sCC1EvD,GAZqBhY,IAAA,IAAC,UAAEjE,EAAY,WAAqBiE,EAAPpE,GAAKimB,EAAAA,GAAAA,GAAA7hB,EAAA8hB,IAAA,OACrDhmB,EAAAA,EAAAA,KAAA,OAAA3E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACE4qB,MAAM,6BACNC,QAAQ,cACR1lB,KAAK,eACLP,UAAWA,GACPH,GAAK,IAAAmU,UAETjU,EAAAA,EAAAA,KAAA,QAAMmmB,EAAE,kgBCgBZ,IAxBiBzO,EAAAA,EAAAA,OAAKxT,IAA2D,IAA1D,MAAEmQ,EAAK,MAAE0D,EAAK,UAAE9X,EAAY,GAAE,WAAEmmB,GAAa,GAAOliB,EACzE,IAAK6T,EAAO,OAAO,KAEnB,MACMsO,EADepmB,EAAU6N,SAAS,iBAEpC,qCACA,mDAEJ,OACEkG,EAAAA,EAAAA,MAAA,OAAK/T,UAAS,GAAA1C,OAAK8oB,EAAW,KAAA9oB,OAAI0C,GAAYgU,SAAA,EAC5CD,EAAAA,EAAAA,MAAA,QAAM/T,UAAU,+BAA8BgU,SAAA,CAAEI,EAAM,OACrD+R,GACCpmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBgU,UAC/BjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0DAAyDgU,SACrE8D,OAIL/X,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+BAA8BgU,SAAE8D,UCdlDuO,GAAqBxmB,IAAUE,EAAAA,EAAAA,KAACumB,IAAYlrB,EAAAA,EAAAA,GAAA,CAAC4E,UAAU,WAAcH,IAqC3E,IAnC0B4X,EAAAA,EAAAA,OAAKxT,IAAwB,IAAvB,cAAEsiB,GAAetiB,EAC/C,IAAKsiB,EAEH,OADAvrB,QAAQC,IAAI,2DACL,KAYT,OACE8Y,EAAAA,EAAAA,MAACqE,GAAW,CAACE,MAAM,yCAAgCH,KAAMkO,GAAkBrS,SAAA,EACzEjU,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,qBAAkB0D,MAAOyO,EAAcnX,SACvDrP,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,oBAAc0D,MANzB,GAAAxa,OAAGipB,EAAcjX,WAAa,GAAE,MAAAhS,OAAKipB,EAAc/W,IAAM,IAAKiG,UAOnE1V,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,gBAAa0D,MAZxByO,EAAc7W,WAAU,kBAAApS,OACd4O,WAAWqa,EAAc7W,YAAYjH,QAAQ,GAAE,OAAQ,QAYtE1I,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,OAAO0D,MAAOyO,EAAc5W,QAC5C5P,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,aAAa0D,MAAOyO,EAAc3W,cAClD7P,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,WAAW0D,MAAOyO,EAAc1W,YAChD9P,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,6BAAuB0D,MAAOyO,EAAcxW,MAC5DhQ,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,qBAAqB0D,MAAOyO,EAAcvW,cAC1DjQ,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,yBAAyB0D,MAAOyO,EAActW,cAC9DlQ,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,gBAAgB0D,MAAOyO,EAAcrW,cACrDnQ,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,aAAU0D,MAAOyO,EAAcpW,cAC/CpQ,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,4BAAsB0D,MAAOyO,EAAcnW,cAC3DrQ,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,8BAAwB0D,MAAOyO,EAAclW,cAC7DtQ,EAAAA,EAAAA,KAACymB,GAAQ,CAACpS,MAAM,mCAAgC0D,MAAOyO,EAAcjW,mB,cCzB3E,MAAMmW,GAAUxiB,IAA2C,IAA1C,SAAE+P,EAAQ,KAAEnR,EAAI,SAAEsH,EAAW,OAAOlG,EACnD,MAAOyiB,EAAWC,IAAgBzhB,EAAAA,EAAAA,WAAS,GAO3C,OACE6O,EAAAA,EAAAA,MAAA,OACE/T,UAAU,wBACV4mB,aAAcA,IAAMD,GAAa,GACjCE,aAAcA,IAAMF,GAAa,GACjCG,QAASA,IAAMH,GAAa,GAC5BI,OAAQA,IAAMJ,GAAa,GAAO3S,SAAA,CAEjCA,EACA0S,IACC3S,EAAAA,EAAAA,MAAA,OAAK/T,UAAS,qHAAA1C,OAfI,CACtB2N,IAAK,uDACL+b,OAAQ,qDAegB7c,GAAS,cAC3B6J,SAAA,CACCnR,GACD9C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sIAOnBinB,GAAcpT,IAAgD,IAA/C,QAAEI,EAAO,IAAEjO,EAAG,MAAEsS,EAAK,YAAEC,EAAc,IAAI1E,EAC5D,MAAOqT,EAAQC,IAAajiB,EAAAA,EAAAA,WAAS,GAqB/BkiB,EAAmB,CAAC,oCAAD9pB,OACOgb,GAAK,qCAAAhb,OACDgb,GAAK,mCAAAhb,OACVgb,GAAK,2CAAAhb,OACAgb,GAAK,2BAAAhb,OACfgb,GAAK,mCAAAhb,OACGgb,GAAK,kCAAAhb,OACTgb,GAAK,wCAAAhb,OACCgb,IAK9B+O,EAAYD,EADE7jB,KAAK+jB,MAAM/jB,KAAKgkB,SAAWH,EAAiBvqB,SAE1D2qB,EAAWxhB,GAAO8M,OAAO2U,SAASzM,KAExC,OACEjb,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CgU,UAC3DD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,iBAAgBgU,SAAA,EAE7BjU,EAAAA,EAAAA,KAAC0mB,GAAO,CAAC5jB,KAAMqkB,EAAS,gBAAkB,6BAA6BlT,UACrED,EAAAA,EAAAA,MAAA,UACEE,QAzCalZ,UACrB,UACQ2sB,UAAUC,UAAUC,UAAU5hB,GACpCmhB,GAAU,GACV5Y,YAAW,IAAM4Y,GAAU,IAAQ,IACrC,CAAE,MAAOnV,GAEP,MAAM6V,EAAQhe,SAASC,cAAc,SACrC+d,EAAM/P,MAAQ9R,EACd6D,SAAS8S,KAAKzR,YAAY2c,GAC1BA,EAAMlsB,SACNkO,SAASie,YAAY,QACrBje,SAAS8S,KAAKoL,YAAYF,GAC1BV,GAAU,GACV5Y,YAAW,IAAM4Y,GAAU,IAAQ,IACrC,GA2BQnnB,UAAS,uKAAA1C,OAGL4pB,EACE,eACA,kCAAiC,kBAGvC,aAAW,6BAA4BlT,SAAA,EAEvCjU,EAAAA,EAAAA,KAAA,OACEC,UAAU,6CACVO,KAAK,OACLG,OAAO,eACPulB,QAAQ,YAAWjS,UAEnBjU,EAAAA,EAAAA,KAAA,QACEioB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhC,EAAE,6HAGNnmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQgU,UACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAC/CkT,EAAS,eAAiB,wBAOnCnnB,EAAAA,EAAAA,KAAC0mB,GAAO,CAAC5jB,KAAK,2BAA0BmR,UACtCjU,EAAAA,EAAAA,KAACooB,GAAAA,GAAmB,CAClBniB,IAAKwhB,EACLlP,MAAO+O,EACPrnB,UAAU,2FACV,aAAW,2BAA0BgU,UAErCD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0EAAyEgU,SAAA,EACtFjU,EAAAA,EAAAA,KAACqoB,GAAAA,GAAY,CAACpnB,KAAM,GAAI0C,OAAO,EAAO1D,UAAU,0BAChDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQgU,UACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAAC,uBAO3DjU,EAAAA,EAAAA,KAAC0mB,GAAO,CAAC5jB,KAAK,2BAA0BmR,UACtCjU,EAAAA,EAAAA,KAACsoB,GAAAA,GAAmB,CAClBriB,IAAKwhB,EACLc,MAAOjB,EACPrnB,UAAU,2FACV,aAAW,2BAA0BgU,UAErCD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0EAAyEgU,SAAA,EACtFjU,EAAAA,EAAAA,KAACwoB,GAAAA,GAAY,CAACvnB,KAAM,GAAI0C,OAAO,EAAO1D,UAAU,0BAChDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQgU,UACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAAC,uBAO3DjU,EAAAA,EAAAA,KAAC0mB,GAAO,CAAC5jB,KAAK,0BAAyBmR,UACrCjU,EAAAA,EAAAA,KAACyoB,GAAAA,GAAkB,CACjBxiB,IAAKwhB,EACLlP,MAAO+O,EACPrnB,UAAU,2FACV,aAAW,0BAAyBgU,UAEpCD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0EAAyEgU,SAAA,EACtFjU,EAAAA,EAAAA,KAAC0oB,GAAAA,GAAW,CAACznB,KAAM,GAAI0C,OAAO,EAAO1D,UAAU,0BAC/CD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQgU,UACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAAC,sBAO3DjU,EAAAA,EAAAA,KAAC0mB,GAAO,CAAC5jB,KAAK,2BAA0BmR,UACtCjU,EAAAA,EAAAA,KAAC2oB,GAAAA,GAAmB,CAClB1iB,IAAKwhB,EACLlP,MAAOA,EACPqQ,QAASpQ,EACTvY,UAAU,2FACV,aAAW,2BAA0BgU,UAErCD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0EAAyEgU,SAAA,EACtFjU,EAAAA,EAAAA,KAAC6oB,GAAAA,GAAY,CAAC5nB,KAAM,GAAI0C,OAAO,EAAO1D,UAAU,0BAChDD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQgU,UACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAAC,sBAO1D0T,UAAUmB,QACT9oB,EAAAA,EAAAA,KAAC0mB,GAAO,CAAC5jB,KAAK,8CAAuCmR,UACnDD,EAAAA,EAAAA,MAAA,UACEE,QAASA,EACTjU,UAAU,wJACV,aAAW,8CAAuCgU,SAAA,EAElDjU,EAAAA,EAAAA,KAAA,OACEC,UAAU,6CACVO,KAAK,OACLG,OAAO,eACPulB,QAAQ,YAAWjS,UAEnBjU,EAAAA,EAAAA,KAAA,QACEioB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhC,EAAE,6OAGNnmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQgU,UACrBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCgU,SAAC,8BAUnE,GAAepU,EAAAA,KAAWqnB,ICvL1B,IAlCqBxP,EAAAA,EAAAA,OAAKxT,IAA+C,IAA9C,WAAE6kB,EAAU,aAAEC,EAAY,WAAEC,GAAY/kB,EAwBjE,OACElE,EAAAA,EAAAA,KAACknB,GAAW,CACVhT,QAAS8U,EACT/iB,IAzByBijB,MAC3B,GAAe,OAAVD,QAAU,IAAVA,IAAAA,EAAYlmB,OAAQ,OAAOgQ,OAAO2U,SAASzM,KAahD,OACElI,OAAO2U,SAASyB,OAChBpW,OAAO2U,SAAS0B,SAChB,UACUH,EAAWlmB,OAblBwS,cACAC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BA,QAAQ,gBAAiB,IACzBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,KACfC,QAcEwT,GACL3Q,OAAiB,OAAV0Q,QAAU,IAAVA,OAAU,EAAVA,EAAYlmB,SAAU,+BAC7ByV,aAAuB,OAAVyQ,QAAU,IAAVA,OAAU,EAAVA,EAAYhL,YAAa,+G,eCrB5C,MAAMoL,GAAkBnlB,IAAoC,IAAnC,UAAE+Z,EAAS,UAAEhe,EAAY,IAAIiE,EAEpD,MAwBMolB,GAAgBC,EAAAA,EAAAA,UAAQ,IACvBtL,EAEEuL,GAAAA,EAAUC,SA3BC3mB,KAClB,IAAKA,EAAM,MAAO,GAGlB,IAAI4mB,EAAgB5mB,EAAK2S,QAAQ,SAAU,WAgB3C,OAbAiU,EAAgBA,EAAcjU,QAAQ,MAAO,QAGxCiU,EAAcpG,WAAW,SAC5BoG,EAAgB,MAAQA,GAErBA,EAAcC,SAAS,UAC1BD,GAAgC,QAIlCA,EAAgBA,EAAcjU,QAAQ,SAAU,MAEzCiU,GAOmBE,CAAW3L,GAAY,CAC/C4L,aAAc,CACZ,IAAK,IAAK,KAAM,SAAU,IAAK,IAAK,KAAM,KAAM,KAAM,KACtD,MAAO,OAAQ,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KACpD,SAAU,aAAc,OAAQ,MAAO,KAAM,QAAS,QACtD,QAAS,KAAM,KAAM,MAEvBC,aAAc,CACZ,OAAQ,SAAU,MAAO,QAAS,QAAS,MAAO,MAClD,QAAS,SAAU,KAAM,QAAS,aAAc,oBAElDC,SAAU,CAAC,SAAU,cACrBC,SAAU,CAAC,SAAU,YAAa,SAClCC,cAAc,EACdC,iBAAiB,IAhBI,IAkBtB,CAACjM,IAEJ,OAAKA,GAGHje,EAAAA,EAAAA,KAAA,OAAKC,UAAS,QAAA1C,OAAU0C,GAAYgU,UAClCjU,EAAAA,EAAAA,KAAA,OACEC,UAAU,6CACVoC,MAAO,CACL,kBAAmB,UACnB,sBAAuB,UACvB,mBAAoB,UACpB,kBAAmB,UACnB,sBAAuB,UACvB,qBAAsB,UACtB,gBAAiB,UACjB,oBAAqB,UACrB,2BAA4B,UAC5B,sBAAuB,UACvB,kBAAmB,UACnB,sBAAuB,UACvB,oBAAqB,UACrB,wBAAyB,UACzB,wBAAyB,UACzB8nB,WAAY,MACZvmB,SAAU,WACV0G,WAAY,6FACZ8f,cAAe,WAEjBC,wBAAyB,CAAEC,OAAQhB,GACnC,YAAU,aA5BO,MAkCzB,GAAezpB,EAAAA,KAAWwpB,ICvE1B,IAlBmB3R,EAAAA,EAAAA,OAAKxT,IAAA,IAAC,WAAE+kB,GAAY/kB,EAAA,OACrC8P,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,YAAWgU,SAAA,EACxBjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCgU,UACpDjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BgU,UAC1CjU,EAAAA,EAAAA,KAACqpB,GAAe,CAACpL,UAAWgL,EAAW3qB,0BAG1C2qB,EAAWsB,WACVvqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMgU,UACnBD,EAAAA,EAAAA,MAAA,SAAOjM,UAAQ,EAAC9H,UAAU,SAAQgU,SAAA,EAChCjU,EAAAA,EAAAA,KAAA,UAAQwC,IAAKymB,EAAWsB,SAAU3gB,KAAK,eAAe,kE,qCCThE,MAyDA,GAzDqB1F,IAA2D,IAA1D,OAAEnB,EAAM,YAAEynB,EAAW,eAAEC,EAAc,YAAEC,GAAaxmB,EACxE,MAAMyB,EAAWoN,OAAOC,YAAc,IAChC2X,EAAoBhlB,GAAYoN,OAAOC,WAAaD,OAAO6X,YAC3DC,EAAuBF,GAAqB5X,OAAOC,YAAc,IAEvE,OACEgB,EAAAA,EAAAA,MAAA,UAAQ/T,UAAS,wFAAA1C,OAA0FotB,EAAoB,eAAiB,IAAK1W,SAAA,EACnJjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8EAA6EgU,UAC1FjU,EAAAA,EAAAA,KAAA,MACE3D,GAAG,gBACH4D,UAAS,yEAAA1C,OACPstB,EACI,YACAF,EACE,qBACA,mCAERtoB,MAAOwoB,EAAuB,CAAEjnB,SAAU,6BAAgC,CAAC,EAAEqQ,UAE5E6W,EAAAA,GAAAA,GAAgB/nB,QAIrBiR,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,qEAAoEgU,SAAA,EAC/EtO,IACA3F,EAAAA,EAAAA,KAAA,UACEkU,QAASuW,EACTxqB,UAAU,gLACV,aAAYyqB,EAAc,mBAAqB,mBAC/CnS,MAAOmS,EAAc,YAAc,YAAYzW,SAE9CyW,GACC1qB,EAAAA,EAAAA,KAAC+qB,GAAAA,EAAS,CAAC9pB,KAAM,GAAIhB,UAAU,WAAW,cAAY,UAEtDD,EAAAA,EAAAA,KAACgrB,GAAAA,EAAS,CAAC/pB,KAAM,GAAIhB,UAAU,WAAW,cAAY,YAK5DD,EAAAA,EAAAA,KAAA,UACEkU,QAASsW,EACTvqB,UAAS,2KAAA1C,OACPotB,EAAoB,QAAU,OAEhC,aAAW,gBAAe1W,UAE1BjU,EAAAA,EAAAA,KAACsZ,EAAAA,EAAC,CACArY,KAAM0pB,EAAoB,GAAK,GAC/B,cAAY,OACZ1qB,UAAU,sBCDtB,GAlD6BgpB,IAC3B,MAAOtC,EAAWC,IAAgBzhB,EAAAA,EAAAA,WAAS,IACpCQ,EAAUgN,IAAexN,EAAAA,EAAAA,UAAS4N,OAAOC,YAAc,KA6C9D,OA3CA/X,QAAQC,IAAI,oCAAqC+tB,IAEjDxiB,EAAAA,EAAAA,YAAU,KACR,MAAMqM,EAAcA,KAClB,MAAMmY,EAAgBlY,OAAOC,YAAc,IACrC2X,EAAoB5X,OAAOC,WAAaD,OAAO6X,aAAe7X,OAAOC,YAAc,KACzFL,EAAYsY,GAAiBN,IAO/B,OAJA7X,IACAC,OAAOE,iBAAiB,SAAUH,GAClCC,OAAOE,iBAAiB,oBAAqBH,GAEtC,KACLC,OAAOG,oBAAoB,SAAUJ,GACrCC,OAAOG,oBAAoB,oBAAqBJ,MAEjD,KAEHrM,EAAAA,EAAAA,YAAU,KACRxL,QAAQiwB,MAAM,gCACdjwB,QAAQC,IAAI,uBAAwB+tB,GAEhCA,GAAoC,kBAAfA,GACvBhuB,QAAQC,IAAI,0DACZ0rB,GAAa,GACb9c,SAAS8S,KAAKva,MAAMoI,SAAW,WAE/BxP,QAAQC,IAAI,0EACZ0rB,GAAa,GACb9c,SAAS8S,KAAKva,MAAMoI,SAAW,IAGjCxP,QAAQC,IAAI,gBAAiB,CAAEyrB,YAAWhhB,aAC1C1K,QAAQkwB,WAED,KACLrhB,SAAS8S,KAAKva,MAAMoI,SAAW,MAEhC,CAACwe,IAEJhuB,QAAQC,IAAI,yCAA0C,CAAEyrB,YAAWhhB,aAE5D,CAAEghB,YAAWhhB,aC5ChBylB,GAAkBlnB,IAMjB,IANkB,WACvB+kB,EAAU,YACVuB,EAAW,SACXvW,EAAQ,YACRyW,EAAW,iBACXW,GACDnnB,EACC,MAAM,UAAEyiB,EAAS,SAAEhhB,GAAa2lB,GAAoBrC,GAC9CsC,ECX2BC,EAAC7lB,EAAU+kB,KAC5C,MAAOe,EAAaC,IAAkBvmB,EAAAA,EAAAA,UAAS4N,OAAOC,aAC/C2Y,EAAcC,IAAmBzmB,EAAAA,EAAAA,UAAS4N,OAAO6X,aAGlDiB,EAAc,CAClBC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJ,MAAO,MA2DT,OAvDAxlB,EAAAA,EAAAA,YAAU,KACR,MAAMylB,EAAeA,KACnBR,EAAe3Y,OAAOC,YACtB4Y,EAAgB7Y,OAAO6X,cAIzB,OADA7X,OAAOE,iBAAiB,SAAUiZ,GAC3B,IAAMnZ,OAAOG,oBAAoB,SAAUgZ,KACjD,KAGgB3C,EAAAA,EAAAA,UAAQ,KAEzB,MAAMoB,EAAoBhlB,GAAY8lB,EAAcE,EAE9CQ,EAAU,gBAAA5uB,OADKotB,EAAoB,GAAKhlB,EAAW,GAAK,GACf,OAIzCymB,EAAYX,GAAeI,EAAYE,GAM7C,IAAIM,EAkBJ,OAdIA,EAHA1mB,GAUW+kB,EAPE,OASbe,GAAeI,EAAYG,GACzB,MACA,MAGC,CACLjI,OAAQoI,EACRzN,UA7BoB/Y,EAAW,OAAS,OA8BxC9E,MAAOwrB,EACPD,YACAzB,oBACAvF,cA3BoBgH,GAAa1B,EA4BjCmB,cACAtkB,OAAQ,OAET,CAAC5B,EAAU+kB,EAAae,EAAaE,KDxDfH,CAAoB7lB,EAAU+kB,GAEvD,IAAKzB,EAAY,OAAO,KAGxB,MACMqD,EADoB3mB,GAAYoN,OAAOC,WAAaD,OAAO6X,YACxB,GAAKjlB,EAAW,GAAK,GAExD0gB,EAAW,oBAAA9oB,OAEboI,EAAQ,gCAEN,4DAA2D,qIAM3D4mB,EAAoB5F,EAEpB,4BAGA,6BAGN,OACE3S,EAAAA,EAAAA,MAAA,OACE8E,KAAK,SACL,kBAAgB,gBAChB,mBAAiB,mBACjB,aAAW,OACX7Y,UAAS,GAAA1C,OAAK8oB,EAAW,KAAA9oB,OAAIgvB,GAAiBhvB,OAAGoI,EAAW,6BAA+B,IAC3FtD,OAAKhH,EAAAA,EAAAA,GAAA,CACH0oB,OAAQwH,EAAiBxH,OACzBrF,UAAW6M,EAAiB7M,UAC5B7d,MAAO8E,EAAW,OAAS4lB,EAAiB1qB,MAC5CqK,IAAKvF,EAAQ,GAAApI,OAAM+uB,EAAY,MAAO,GACtCnN,QAAS,OACTqN,cAAe,UACX7mB,GAAY,CACd0E,aAAckhB,EAAiBZ,kBAAoB,IAAM,gBACzD/f,UAAW2gB,EAAiBZ,kBACxB,UACA,4EAEN1W,SAAA,EAEFjU,EAAAA,EAAAA,KAACysB,GAAY,CACX1pB,OAAQkmB,EAAWlmB,OACnBynB,YAAaA,EACbC,eAAgBY,EAChBX,YAAaA,KAGf1qB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iGAAgGgU,UAC7GjU,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAA1C,OAAKoI,EAAW,aAAe,MAAK,2BAA0BsO,UAC1EjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kEAAiEgU,SAC7EA,YAQb,GAAepU,EAAAA,KAAWurB,IEnEpBsB,GAA8B1R,IAClC,IAAKA,GAAwB,kBAATA,EAAmB,OAAO,KAE9C,MAAM2R,EAAQ3R,EAAK2R,MAAM,yBACzB,IAAKA,EAAO,OAAO,KAEnB,MAAMC,EAASD,EAAM,GACrB,MAAM,oEAANpvB,OAA2EqvB,EAAM,mBAM7EC,GAAiB3oB,IAAA,IAAC,SAAE4oB,EAAQ,YAAEC,GAAa7oB,EAAA,OAC/C8P,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,0BAA0B6Y,KAAK,UAAU,aAAW,6CAAsC7E,SAAA,EACvGD,EAAAA,EAAAA,MAAA,UACEpK,KAAK,SACLkP,KAAK,MACL,gBAA4B,SAAbgU,EACf,aAAW,sBACX,eAA2B,SAAbA,EACd5Y,QAASA,IAAM6Y,EAAY,QAC3B9sB,UAAS,iHAAA1C,OACM,SAAbuvB,EACI,4CACA,mCAENE,SAAU,EAAE/Y,SAAA,EAGZjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUO,KAAK,OAAOG,OAAO,eAAeulB,QAAQ,YAAWjS,UAC5EjU,EAAAA,EAAAA,KAAA,QAAMioB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGhC,EAAE,+BAEvEnmB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBgU,SAAC,cAErCD,EAAAA,EAAAA,MAAA,UACEpK,KAAK,SACLkP,KAAK,MACL,gBAA4B,SAAbgU,EACf,aAAW,sBACX,eAA2B,SAAbA,EACd5Y,QAASA,IAAM6Y,EAAY,QAC3B9sB,UAAS,iHAAA1C,OACM,SAAbuvB,EACI,4CACA,mCAENE,SAAU,EAAE/Y,SAAA,EAGZjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUO,KAAK,OAAOG,OAAO,eAAeulB,QAAQ,YAAWjS,UAC5EjU,EAAAA,EAAAA,KAAA,QAAMioB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGhC,EAAE,4QAEvEnmB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mBAAkBgU,SAAC,iBAKnCgZ,GAAiBnZ,IAA2C,IAA1C,WAAE6B,EAAU,MAAE4C,EAAQ,cAAczE,EAC1D,MAAOoZ,EAAaC,IAAkBhoB,EAAAA,EAAAA,UAAS,OACxC2nB,EAAUC,IAAe5nB,EAAAA,EAAAA,UAAS,QACnCioB,GAAYzoB,EAAAA,EAAAA,QAAO,OAClB0oB,EAAaC,IAAkBnoB,EAAAA,EAAAA,WAAS,IACxCooB,EAAqBC,IAA0BroB,EAAAA,EAAAA,WAAS,GAyC/D,IAtCAsB,EAAAA,EAAAA,YAAU,KACJymB,IACFI,GAAe,GACfE,GAAuB,MAExB,CAACN,KAGJzmB,EAAAA,EAAAA,YAAU,MACHymB,IAAyB,OAAVvX,QAAU,IAAVA,OAAU,EAAVA,EAAY7Y,QAAS,GACvCqwB,EAAexX,EAAW,MAE3B,CAACA,EAAYuX,KAGhBzmB,EAAAA,EAAAA,YAAU,KACR,MAAMgnB,EAASL,EAAU1mB,QACzB,IAAK+mB,IAAWP,EAAa,OAE7B,MAAMQ,EAAaA,KACjBJ,GAAe,IAGXK,EAAcA,KAClBL,GAAe,GACfE,GAAuB,IAMzB,OAHAC,EAAOxa,iBAAiB,OAAQya,GAChCD,EAAOxa,iBAAiB,QAAS0a,GAE1B,KACLF,EAAOva,oBAAoB,OAAQwa,GACnCD,EAAOva,oBAAoB,QAASya,MAErC,CAACT,KAGCvX,GAAoC,IAAtBA,EAAW7Y,OAC5B,OAAO,KAiKT,OACEkX,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,yBAAwBgU,SAAA,EACrCD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,yCAAwCgU,SAAA,EACrDD,EAAAA,EAAAA,MAAA,MAAI/T,UAAU,uCAAsCgU,SAAA,CAAEsE,EAAM,OAC3D5C,EAAW7Y,OAAS,IACnBkD,EAAAA,EAAAA,KAAC6sB,GAAc,CAACC,SAAUA,EAAUC,YAAaA,OAIpDpX,EAAW7Y,OAAS,IACnBkD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMgU,SACL,SAAb6Y,GAvKL9sB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDgU,SAClE0B,EAAW/Q,KAAKiS,IACf7W,EAAAA,EAAAA,KAAA,OAEEC,UAAS,uMAAA1C,QAIM,OAAX2vB,QAAW,IAAXA,OAAW,EAAXA,EAAa7wB,MAAOwa,EAAIxa,GACtB,4BACA,6BAA4B,kBAGlC6X,QAASA,KACPiZ,EAAetW,IAEjBmW,SAAU,EACV,sCAAAzvB,OAAqCsZ,EAAI9T,QAASkR,UAElDD,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,2CAA0CgU,SAAA,EACvDjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yDAAwDgU,SAAE4C,EAAI9T,SAC3E8T,EAAI+W,UACH5Z,EAAAA,EAAAA,MAAA,KAAG/T,UAAU,0CAAyCgU,SAAA,CAAC,QAAM4C,EAAI+W,WAElE/W,EAAIzH,OACHpP,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sFAAqFgU,SAClG4C,EAAIzH,WAvBNyH,EAAIxa,SAmCf2D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWgU,SACvB0B,EAAW/Q,KAAKiS,IACf7C,EAAAA,EAAAA,MAAA,UAEEE,QAASA,KACPiZ,EAAetW,IAEjB5W,UAAS,kEAAA1C,QACI,OAAX2vB,QAAW,IAAXA,OAAW,EAAXA,EAAa7wB,MAAOwa,EAAIxa,GACpB,eACA,qBACH4X,SAAA,EAEHjU,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BgU,SAAE4C,EAAI9T,SAC/C8T,EAAI+W,UACH5Z,EAAAA,EAAAA,MAAA,KAAG/T,UAAU,wBAAuBgU,SAAA,CAAC,QAAM4C,EAAI+W,WAEhD/W,EAAIzH,OACHpP,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2FAA0FgU,SACvG4C,EAAIzH,SAhBJyH,EAAIxa,UAyBUwxB,MAC3B,IAAKX,EAAa,OAAO,KAEzB,MAAMY,EAAoBZ,EAAYa,SAASjgB,SAAS,4BAExD,OACE9N,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CgU,SAC3D6Z,GACC9Z,EAAAA,EAAAA,MAAA6H,EAAAA,SAAA,CAAA5H,SAAA,CACIsZ,GAaAvtB,EAAAA,EAAAA,KAAA,UACED,IAAKqtB,EACL5qB,IAAKkqB,GAA2BQ,EAAYa,UAC5CltB,MAAM,OACNkjB,OAAO,QACPiK,MAAM,WACNjd,QAAQ,OACRwH,MAAK,GAAAhb,OAAK2vB,EAAYnqB,OAAM,yBAC5BkrB,QAAQ,2DACRhuB,UAAU,cArBZD,EAAAA,EAAAA,KAAA,UACED,IAAKqtB,EACL5qB,IAAK0qB,EAAYa,SAAStY,QAAQ,oBAAqB,YACvD5U,MAAM,OACNkjB,OAAO,QACPiK,MAAM,WACNjd,QAAQ,OACRwH,MAAO2U,EAAYnqB,OACnBkrB,QAAQ,2DACRhuB,UAAU,aAebotB,IACCrZ,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,6CAA4CgU,SAAA,EACzDjU,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcgU,SAAC,8DAC5BD,EAAAA,EAAAA,MAAA,KACEiH,KAAMiS,EAAYa,SAClBtmB,OAAO,SACPyT,IAAI,sBACJjb,UAAU,0KAAyKgU,SAAA,EAEnLjU,EAAAA,EAAAA,KAAA,OACEC,UAAU,eACVO,KAAK,OACLG,OAAO,eACPulB,QAAQ,YAAWjS,UAEnBjU,EAAAA,EAAAA,KAAA,QACEioB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhC,EAAE,mFAEA,8BAOdnmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBgU,UACtCD,EAAAA,EAAAA,MAAA,KACEiH,KAAMiS,EAAYa,SAClBtmB,OAAO,SACPyT,IAAI,sBACJjb,UAAU,0KAAyKgU,SAAA,EAEnLjU,EAAAA,EAAAA,KAAA,OACEC,UAAU,eACVO,KAAK,OACLG,OAAO,eACPulB,QAAQ,YAAWjS,UAEnBjU,EAAAA,EAAAA,KAAA,QACEioB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhC,EAAE,sIAEA,4BAwBb0H,OAKP,GAAehuB,EAAAA,KAAWotB,IClQpBiB,GAAchqB,IAA8C,IAA7C,SAAEvG,EAAQ,MAAE4a,EAAQ,WAAO,SAAE5b,GAAUuH,EAC1D,MAAOiqB,EAAqBC,IAA0BjpB,EAAAA,EAAAA,UAAS,OACxD4L,EAASC,IAAc7L,EAAAA,EAAAA,WAAS,GAqBvC,IAlBAsB,EAAAA,EAAAA,YAAU,KACazL,WACnB,GAAK2C,GAAahB,EAElB,IACEqU,GAAW,GACX,MAAMjO,QAAerF,EAAAA,GAAAA,IAAoBC,EAAUhB,GACnDyxB,EAAuBrrB,EACzB,CAAE,MAAOvH,GACPP,QAAQc,KAAK,0CAAwCP,EACvD,CAAC,QACCwV,GAAW,EACb,GAGFqd,KACC,CAAC1wB,EAAUhB,KAETgB,EAAU,OAAO,KAEtB,MAAM2wB,EAnDkBroB,KACxB,IAAKA,GAAsB,kBAARA,EACjB,OAAO,KAIT,MAAMsoB,EAAUtoB,EAAI/I,MAAM,KAAK,GAGzBsxB,EAAW,CACf,iCACA,iCACA,sBACA,6BAGF,IAAK,MAAMC,KAAWD,EAAU,CAC9B,MAAM7B,EAAQ4B,EAAQ5B,MAAM8B,GAC5B,GAAI9B,GAASA,EAAM,GACjB,OAAOA,EAAM,EAEjB,CAEA,OAAO,MA4BS+B,CAAiB/wB,GAEjC,OAAK2wB,GAyCHta,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,yBAAwBgU,SAAA,EACrCD,EAAAA,EAAAA,MAAA,MAAI/T,UAAU,4CAA2CgU,SAAA,EACnC,OAAnBka,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBprB,SAAUwV,EAAM,OAIvC4V,IACCna,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,mCAAkCgU,SAAA,CAC9Cka,EAAoBlQ,YACnBje,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBgU,SAAEka,EAAoBlQ,aAGzDjK,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,gDAA+CgU,SAAA,CAC3Dka,EAAoB1vB,YACnBuB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2DAA0DgU,SACvEka,EAAoB1vB,YAGxB0vB,EAAoBQ,aACnB3uB,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYgU,SACzBka,EAAoBQ,aAGxBR,EAAoBS,UACnB5a,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,kBAAUka,EAAoBS,kBAM5C5uB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CgU,UAC5DjU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BgU,UACvCjU,EAAAA,EAAAA,KAAA,UACEC,UAAU,sCACVuC,IAAG,iCAAAjF,OAAmC+wB,GACtC/V,OAA0B,OAAnB4V,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBprB,SAAUwV,EACtCsW,YAAY,IACZb,MAAM,2FACNc,iBAAe,EACf/d,QAAQ,OACRge,eAAe,gBAKrB/uB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBgU,UAC/BD,EAAAA,EAAAA,MAAA,KACEiH,KAAMtd,EACN8J,OAAO,SACPyT,IAAI,sBACJjb,UAAU,+EAA8EgU,SAAA,EAExFjU,EAAAA,EAAAA,KAAA,OACEC,UAAU,eACVO,KAAK,OACLG,OAAO,eACPulB,QAAQ,YAAWjS,UAEnBjU,EAAAA,EAAAA,KAAA,QACEioB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhC,EAAE,mFAEA,mCAvGVnS,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,yBAAwBgU,SAAA,EACrCD,EAAAA,EAAAA,MAAA,MAAI/T,UAAU,4CAA2CgU,SAAA,EACnC,OAAnBka,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBprB,SAAUwV,EAAM,QAExCvE,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,sDAAqDgU,SAAA,EAClEjU,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcgU,SAAC,uDAC5BD,EAAAA,EAAAA,MAAA,KACEiH,KAAMtd,EACN8J,OAAO,SACPyT,IAAI,sBACJjb,UAAU,0KAAyKgU,SAAA,EAEnLD,EAAAA,EAAAA,MAAA,OACE/T,UAAU,eACVO,KAAK,OACLG,OAAO,eACPulB,QAAQ,YAAWjS,SAAA,EAEnBjU,EAAAA,EAAAA,KAAA,QACEioB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhC,EAAE,sGAEJnmB,EAAAA,EAAAA,KAAA,QACEioB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbhC,EAAE,0CAEA,oCAiFlB,GAAetmB,EAAAA,KAAWquB,ICpKpBc,GAAoB9qB,IAA6D,IAA5D,WAAE+kB,EAAU,YAAEuB,EAAW,UAAEpsB,EAAS,WAAE8d,EAAa,GAAGhY,EAC/E,MAAM+qB,GAAYtqB,EAAAA,EAAAA,QAAO,OAClB+lB,EAAawE,IAAkB/pB,EAAAA,EAAAA,WAAS,IAEzC,qBAAE+jB,EAAoB,WAAEH,EAAU,aAAEC,GClBnBC,KACvB,MAAMC,EAAuBA,IAEzBnW,OAAO2U,SAASyB,OAChBpW,OAAO2U,SAAS0B,SAChB,UACA/T,EAAU4T,EAAWlmB,QAsCzB,MAAO,CAAEmmB,uBAAsBH,WAlCZ/tB,UACjB,MAAMiL,EAAMijB,IACZ,UACQvB,UAAUC,UAAUC,UAAU5hB,GACpCkpB,MAAM,gBACR,CAAE,MAAOld,GACP,MAAM6V,EAAQhe,SAASC,cAAc,SACrC+d,EAAM/P,MAAQ9R,EACd6D,SAAS8S,KAAKzR,YAAY2c,GAC1BA,EAAMlsB,SACNkO,SAASie,YAAY,QACrBje,SAAS8S,KAAKoL,YAAYF,GAC1BqH,MAAM,gBACR,GAqByCnG,aAlBtBA,KACnB,MAAM/iB,EAAMijB,IACN5T,EAAK,wBAAA/X,OAA2B0rB,EAAWlmB,QAE7C4kB,UAAUmB,MACZnB,UAAUmB,MAAM,CACdvQ,MAAO0Q,EAAWlmB,OAClBD,KAAMwS,EACNrP,IAAKA,IAGP8M,OAAOsH,KAAK,yCAAD9c,OACgC6E,mBAAmBkT,GAAM,SAAA/X,OAAQ6E,mBAAmB6D,IAC7F,aDrBqDmpB,CAASnG,IAC9D,WAAEtT,GAAe0Z,EAA8B,OAAVpG,QAAU,IAAVA,OAAU,EAAVA,EAAY5sB,IEnB1BizB,IAACvvB,EAAKwvB,EF+BnC,GG/B2BC,EAACvG,EAAYC,KACxC,MAAMuG,GAAa9qB,EAAAA,EAAAA,QAAO,MACpB+qB,GAAa/qB,EAAAA,EAAAA,QAAO,OAE1B8B,EAAAA,EAAAA,YAAU,KACR,GAAKwiB,EAsBL,OAnBIyG,EAAWhpB,SACb6H,aAAamhB,EAAWhpB,SAI1BgpB,EAAWhpB,QAAU8H,YAAW,KAC9B,MAAMmhB,EAASzG,IAGf,GAAIyG,IAAWF,EAAW/oB,QACxB,IACEqM,OAAO6c,QAAQC,aAAa,CAAC,EAAG,GAAIF,GACpCF,EAAW/oB,QAAUipB,CACvB,CAAE,MAAOn0B,GACPP,QAAQc,KAAK,yBAA0BP,EACzC,IAED,KAEI,KACDk0B,EAAWhpB,SACb6H,aAAamhB,EAAWhpB,YAG3B,CAACuiB,EAAYC,KHThBsG,CAAcvG,EAAYC,GEvBInpB,EFwBdkvB,EExBmBM,EFwBR/E,GEvB3B/jB,EAAAA,EAAAA,YAAU,KACR,MAAMqpB,EAAsBpqB,IAE1B,IAAIqqB,EAAKrqB,EAAM+B,OACXuoB,GAAQ,EACZ,KAAOD,GAAI,CAAC,IAADE,EAAAC,EAAAC,EAAAC,EACT,GACEL,EAAGM,WAAaN,EAAGM,UAAUC,SAAS,qBACtC,CACAN,GAAQ,EACR,KACF,CACA,GACED,EAAGM,WAAaN,EAAGM,UAAUC,SAAS,cACD,UAAtB,QAAfL,GAAAC,EAAAH,GAAGQ,oBAAY,IAAAN,OAAA,EAAfA,EAAAO,KAAAN,EAAkB,iBACuB,UAA1B,QAAfC,GAAAC,EAAAL,GAAGQ,oBAAY,IAAAJ,OAAA,EAAfA,EAAAK,KAAAJ,EAAkB,oBAGlB,OAEFL,EAAKA,EAAGU,aACV,CACIT,GAASjwB,EAAI2G,UAAY3G,EAAI2G,QAAQ4pB,SAAS5qB,EAAM+B,SACtD8nB,KAMJ,OAFAzlB,SAASmJ,iBAAiB,YAAa6c,GACvChmB,SAASmJ,iBAAiB,aAAc6c,GACjC,KACLhmB,SAASoJ,oBAAoB,YAAa4c,GAC1ChmB,SAASoJ,oBAAoB,aAAc4c,MAE5C,CAAC/vB,EAAKwvB,KFPT9oB,EAAAA,EAAAA,YAAU,KACRxL,QAAQC,IAAI,2CAA4CghB,KACvD,CAACA,KAEC+M,EACH,OAAO,KAIT,MAAMyH,EAAsC,mBAApBzH,EAAW7Z,KAC7BuhB,EAAgC,iBAAtB1H,EAAWlmB,OAmC3B,OACE/C,EAAAA,EAAAA,KAAA,OAAKD,IAAKkvB,EAAUhb,UAClBD,EAAAA,EAAAA,MAACoX,GAAe,CACdnC,WAAYA,EACZuB,YAAaA,EACbE,YAAaA,EACbW,iBAzDiBZ,IAAMyE,GAAe9b,IAASA,IAyDda,SAAA,CAtCjC0c,GACK3wB,EAAAA,EAAAA,KAAC4wB,GAAU,CAAC3H,WAAYA,IAG7ByH,GACK1wB,EAAAA,EAAAA,KAAC6wB,GAAiB,CAACrK,cAAeyC,KAIzCjV,EAAAA,EAAAA,MAAA6H,EAAAA,SAAA,CAAA5H,SAAA,EACEjU,EAAAA,EAAAA,KAAC8wB,GAAU,CACTrX,OAAQwP,EACR7D,eAAe,EACflJ,WAAYA,IAEbvG,GAAcA,EAAW7Y,OAAS,IACjCkD,EAAAA,EAAAA,KAACitB,GAAc,CACbtX,WAAYA,EACZ4C,MAAM,0CAGT0Q,EAAW8H,mBACV/wB,EAAAA,EAAAA,KAACkuB,GAAW,CACVvwB,SAAUsrB,EAAW8H,iBACrBxY,MAAM,qBACN5b,SAAUssB,EAAW5sB,SAgBzB2D,EAAAA,EAAAA,KAACgxB,GAAY,CACXjI,WAAYA,EACZC,aAAcA,EACdC,WAAYA,UAOtB,GAAeppB,EAAAA,KAAWmvB,I,eI9E1B,MAkHA,GAlH6B9qB,IAAmC,IAAlC,WAAEC,EAAU,aAAEC,GAAcF,EACxDjJ,QAAQC,IAAI,gDAAiDiJ,EAAa,CACxE8sB,WAAY9sB,EAAWrH,OACvBo0B,QAAS/sB,EAAW,GAAK,CACvBpB,OAAQoB,EAAW,GAAGpB,OACtBkJ,SAAU9H,EAAW,GAAG8H,SACxBC,UAAW/H,EAAW,GAAG+H,UACzBkD,KAAMjL,EAAW,GAAGiL,MAClB,gBACF,oBAEJ,MAAM,WAAE8M,IAAeiV,EAAAA,GAAAA,KAGjBC,GADY7H,EAAAA,EAAAA,UAAQ,IAAM,IAAI8H,gBAAgBte,OAAO2U,SAAS4J,SAAS,IACrDrvB,IAAI,SACtBsvB,GAAehI,EAAAA,EAAAA,UAAQ,KAC3B,GAAI6H,GAAmB,KAAVA,GAAgBjtB,GAAcA,EAAWrH,OAAS,EAAG,CAEhE,OADmBqH,EAAWqtB,MAAM7c,GAASU,EAAUV,EAAK5R,UAAYquB,KACnD,IACvB,CACA,OAAO,OACN,CAACA,EAAOjtB,KAEJ8kB,EAAYwI,IAAiBtsB,EAAAA,EAAAA,UAASosB,IACtCG,EAAoBC,IAAyBxsB,EAAAA,EAAAA,YAAWosB,GAGzDK,GAAkBrI,EAAAA,EAAAA,UAAQ,IAC9BplB,EAAaA,EAAW4H,QAAOC,GAASA,EAAM6lB,WAAa,IAAK,IAChE,CAAC1tB,KAGkBolB,EAAAA,EAAAA,UAAQ,IAAMqI,EAAgB90B,QAAQ,CAAC80B,KAG5DnrB,EAAAA,EAAAA,YAAU,MACJ8qB,GAAiBtI,GAAeyI,IAClCz2B,QAAQC,IAAI,6DAA8Dq2B,EAAaxuB,QACvF0uB,EAAcF,GACdI,GAAsB,MAEvB,CAACJ,EAActI,EAAYyI,KAG9BjrB,EAAAA,EAAAA,YAAU,KACRxL,QAAQiwB,MAAM,mDACdjwB,QAAQC,IAAI,4BAA6B,CACvC6H,OAAkB,OAAVkmB,QAAU,IAAVA,OAAU,EAAVA,EAAYlmB,OACpBqM,KAAgB,OAAV6Z,QAAU,IAAVA,OAAU,EAAVA,EAAY7Z,KAClB0iB,UAAqB,OAAV7I,QAAU,IAAVA,IAAAA,EAAY8I,sBACvBC,UAAqB,OAAV/I,QAAU,IAAVA,OAAU,EAAVA,EAAY8I,qBACvBE,eAAgBhJ,IAAesI,EAC/BW,OAAuB,OAAfjJ,EACRkJ,iBAA4Bp1B,IAAfksB,IAEfhuB,QAAQkwB,aACP,CAAClC,EAAYsI,IAGhB,MAAMa,GAAc3sB,EAAAA,EAAAA,cAAa4sB,IAC1BA,GACLZ,EAAcY,KACb,IAGGC,GAAgB7sB,EAAAA,EAAAA,cAAY,KAChCxK,QAAQC,IAAI,wDAEX,KAGHuL,EAAAA,EAAAA,YAAU,KACRxL,QAAQC,IAAI,sDAAoDkJ,GAChEnJ,QAAQC,IAAI,qDAAmDk3B,GAC3DhuB,GAAwC,oBAAjBA,IACzBnJ,QAAQC,IAAI,0EACZkJ,EAAaguB,EAAaE,MAE3B,CAACF,EAAahuB,EAAckuB,IAG/B,MAAMC,GAAe9sB,EAAAA,EAAAA,cAAY,KAC/BgsB,EAAc,QACb,IAEH,OACEzd,EAAAA,EAAAA,MAAA,OAAK/T,UAAU,2CAA0CgU,SAAA,EAEvDjU,EAAAA,EAAAA,KAACwyB,EAAW,CACVruB,WAAYytB,EACZxtB,aAAcguB,EACdjgB,eAAgB8W,EAChBhpB,UAAU,kBAIXgpB,IACCjV,EAAAA,EAAAA,MAAA6H,EAAAA,SAAA,CAAA5H,SAAA,CACGhZ,QAAQC,IAAI,6DAA8D,CACzE+tB,aACA6I,QAAmB,OAAV7I,QAAU,IAAVA,OAAU,EAAVA,EAAY8I,qBACrBC,UAAqB,OAAV/I,QAAU,IAAVA,OAAU,EAAVA,EAAY8I,wBAEzB/xB,EAAAA,EAAAA,KAACgvB,GAAiB,CAChB/F,WAAYA,EACZuB,YAAa+H,EACbrW,WAAYA,U,kCClHxB,MAAMuW,EAAoB,CAAC,KAAM,OAOpB3H,EAAmB7R,IAC9B,IAAKA,GAAsB,kBAARA,EAAkB,MAAO,GAiB5C,OAdcA,EAAI/b,MAAM,OAGK0H,KAAI8tB,GAE3BD,EAAkB3kB,SAAS4kB,EAAKvZ,eAC3BuZ,EAAKvZ,cAIPuZ,EAAKxZ,OAAO,GAAGC,cAAgBuZ,EAAKC,OAAO,GAAGpd,gBAIjCnY,KAAK,K,kCC9BtB,MAAMuI,EAAWA,IACfoN,OAAOC,YAAc,G","sources":["services/legendasService.js","utils/mapConfig.js","components/map/MapWrapper.jsx","utils/markers/featureStyles.js","utils/markers/svgGenerator.js","utils/markers/markerStyles.js","components/OpenLayersMap.js","utils/markers/proximityUtils.js","hooks/useGeoJSONCache.js","components/MapSelector.js","utils/slug.js","components/hooks/useDocumentosEscola.js","components/PainelInformacoes/components/InfoSection.js","components/PainelInformacoes/components/EscolaInfo/BasicInfo.js","components/PainelInformacoes/components/ImagensdasEscolas.js","components/PainelInformacoes/components/EscolaInfo/HistoriaEscola.js","components/PainelInformacoes/components/BooleanValue.js","components/PainelInformacoes/components/EscolaInfo/Modalidades.js","components/PainelInformacoes/components/EscolaInfo/Infraestrutura.js","components/PainelInformacoes/components/EscolaInfo/GestaoProfessores.js","components/PainelInformacoes/components/EscolaInfo/ProjetosParcerias.js","components/PainelInformacoes/components/ImagemHistoriadoProfessor.js","services/historiaProfessorService.js","components/PainelInformacoes/components/EscolaInfo/HistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/index.js","components/PainelInformacoes/icons/HandFistIcon.js","components/PainelInformacoes/components/InfoItem.js","components/PainelInformacoes/TerraIndigenaInfo.js","components/ShareButton.js","components/PainelInformacoes/ShareSection.js","components/PainelDescricao.js","components/PainelInformacoes/IntroPanel.js","components/PainelHeader.js","components/hooks/usePainelVisibility.js","components/PainelInformacoes/components/PainelContainer.js","components/hooks/usePainelDimensions.js","components/PainelInformacoes/components/DocumentViewer.js","components/PainelInformacoes/components/VideoPlayer.js","components/PainelInformacoes/index.js","components/hooks/useShare.js","components/hooks/useClickOutside.js","components/hooks/useDynamicURL.js","components/MapaEscolasIndigenas.js","utils/textFormatting.js","utils/mobileUtils.js"],"sourcesContent":["import { supabase } from '../supabaseClient';\n\n/**\n * Buscar legendas de fotos de uma escola\n * @param {number} escolaId - ID da escola\n * @param {string} tipoFoto - 'escola' ou 'professor' (opcional, busca todas se não especificado)\n * @returns {Promise<Array>} Lista de legendas de fotos\n */\nexport const getLegendasFotos = async (escolaId, tipoFoto = null) => {\n  try {\n    let query = supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('created_at', { ascending: false });\n\n    // Verificar se a coluna tipo_foto existe antes de usá-la\n    if (tipoFoto) {\n      try {\n        query = query.eq('tipo_foto', tipoFoto);\n      } catch (columnError) {\n        // Se a coluna não existe, ignorar o filtro por tipo\n        console.warn('Coluna tipo_foto não encontrada. Ignorando filtro por tipo.');\n      }\n    }\n\n    const { data, error } = await query;\n\n    if (error) {\n      throw error;\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Erro ao buscar legendas de fotos:', error);\n    throw error;\n  }\n};\n\n/**\n * Adicionar legenda de foto\n * @param {Object} legenda - Dados da legenda\n * @returns {Promise<Object>} Legenda criada\n */\nexport const addLegendaFoto = async (legenda) => {\n  try {\n    console.log('=== DEBUG: addLegendaFoto ===');\n    console.log('Dados recebidos:', legenda);\n    \n    // Remover tipo_foto se a coluna não existir no banco\n    const legendaData = { ...legenda };\n    console.log('Dados iniciais:', legendaData);\n    \n    // Verificar se a coluna tipo_foto existe antes de incluí-la\n    try {\n      console.log('Verificando se a coluna tipo_foto existe...');\n      // Tentar uma consulta simples para verificar se a coluna existe\n      const { data: testData, error: testError } = await supabase\n        .from('legendas_fotos')\n        .select('tipo_foto')\n        .limit(1);\n      \n      console.log('Teste da coluna tipo_foto:', { testData, testError });\n      \n      if (testError && testError.code === '42703') {\n        // Se a coluna não existe, remover do objeto\n        console.warn('Coluna tipo_foto não encontrada. Removendo do objeto de inserção.');\n        delete legendaData.tipo_foto;\n      }\n    } catch (columnError) {\n      // Se a coluna não existe, remover do objeto\n      console.warn('Coluna tipo_foto não encontrada. Removendo do objeto de inserção.');\n      delete legendaData.tipo_foto;\n    }\n\n    console.log('Dados finais para inserção:', legendaData);\n    \n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .insert([legendaData])\n      .select()\n      .single();\n\n    console.log('Resposta do Supabase:', { data, error });\n\n    if (error) {\n      console.error('Erro do Supabase:', error);\n      throw error;\n    }\n\n    console.log('Legenda criada com sucesso:', data);\n    return data;\n  } catch (error) {\n    console.error('Erro ao adicionar legenda de foto:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar legenda de foto\n * @param {number} id - ID da legenda\n * @param {Object} updates - Dados para atualizar\n * @returns {Promise<Object>} Legenda atualizada\n */\nexport const updateLegendaFoto = async (id, updates) => {\n  try {\n    console.log('=== DEBUG: updateLegendaFoto ===');\n    console.log('ID da legenda:', id);\n    console.log('Dados para atualização:', updates);\n    \n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    console.log('Resposta do Supabase:', { data, error });\n\n    if (error) {\n      console.error('Erro do Supabase ao atualizar:', error);\n      throw error;\n    }\n\n    console.log('Legenda atualizada com sucesso:', data);\n    return data;\n  } catch (error) {\n    console.error('Erro ao atualizar legenda de foto:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar legenda de foto (soft delete)\n * @param {number} id - ID da legenda\n * @returns {Promise<boolean>} Sucesso da operação\n */\nexport const deleteLegendaFoto = async (id) => {\n  try {\n    const { error } = await supabase\n      .from('legendas_fotos')\n      .update({ ativo: false })\n      .eq('id', id);\n\n    if (error) {\n      throw error;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao deletar legenda de foto:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar títulos de vídeos de uma escola\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Array>} Lista de títulos de vídeos\n */\nexport const getTitulosVideos = async (escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      throw error;\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Erro ao buscar títulos de vídeos:', error);\n    throw error;\n  }\n};\n\n/**\n * Adicionar título de vídeo\n * @param {Object} titulo - Dados do título\n * @returns {Promise<Object>} Título criado\n */\nexport const addTituloVideo = async (titulo) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .insert([titulo])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao adicionar título de vídeo:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar título de vídeo\n * @param {number} id - ID do título\n * @param {Object} updates - Dados para atualizar\n * @returns {Promise<Object>} Título atualizado\n */\nexport const updateTituloVideo = async (id, updates) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .update(updates)\n      .eq('id', id)\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao atualizar título de vídeo:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar título de vídeo (soft delete)\n * @param {number} id - ID do título\n * @returns {Promise<boolean>} Sucesso da operação\n */\nexport const deleteTituloVideo = async (id) => {\n  try {\n    const { error } = await supabase\n      .from('titulos_videos')\n      .update({ ativo: false })\n      .eq('id', id);\n\n    if (error) {\n      throw error;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao deletar título de vídeo:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar legenda de foto por URL da imagem\n * @param {string} imagemUrl - URL da imagem\n * @param {number} escolaId - ID da escola\n * @param {string} tipoFoto - 'escola' ou 'professor' (opcional)\n * @returns {Promise<Object|null>} Legenda encontrada ou null\n */\nexport const getLegendaByImageUrl = async (imagemUrl, escolaId, tipoFoto = null) => {\n  try {\n    console.log('getLegendaByImageUrl chamada com:', { imagemUrl, escolaId, tipoFoto });\n    \n    // 1. Tenta buscar por igualdade exata\n    let query = supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', imagemUrl)\n      .eq('escola_id', escolaId)\n      .eq('ativo', true);\n\n    if (tipoFoto) {\n      try {\n        query = query.eq('tipo_foto', tipoFoto);\n      } catch (columnError) {\n        console.warn('Coluna tipo_foto não encontrada. Ignorando filtro por tipo.');\n      }\n    }\n\n    let { data, error } = await query.single();\n    console.log('Busca exata resultou em:', { data, error });\n\n    // Se não encontrou, tenta buscar por finalização\n    if ((error && error.code === 'PGRST116') || !data) {\n      console.log('Tentando busca por finalização...');\n      // Busca por finalização (ilike)\n      const caminhoRelativo = imagemUrl.split('/').slice(-2).join('/'); // ex: 20/2.png\n      console.log('Caminho relativo extraído:', caminhoRelativo);\n      \n      let query2 = supabase\n        .from('legendas_fotos')\n        .select('*')\n        .ilike('imagem_url', `%/${caminhoRelativo}`)\n        .eq('escola_id', escolaId)\n        .eq('ativo', true);\n\n      if (tipoFoto) {\n        try {\n          query2 = query2.eq('tipo_foto', tipoFoto);\n        } catch (columnError) {\n          // Se a coluna não existe, ignora\n        }\n      }\n\n      const { data: data2, error: error2 } = await query2.single();\n      console.log('Busca por finalização resultou em:', { data2, error2 });\n      \n      if (!error2 && data2) {\n        return data2;\n      }\n    }\n\n    if (error && error.code !== 'PGRST116') {\n      throw error;\n    }\n\n    return data || null;\n  } catch (error) {\n    console.error('Erro ao buscar legenda por URL:', error);\n    return null;\n  }\n};\n\n/**\n * Buscar título de vídeo por URL do vídeo\n * @param {string} videoUrl - URL do vídeo\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Object|null>} Título encontrado ou null\n */\nexport const getTituloByVideoUrl = async (videoUrl, escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('titulos_videos')\n      .select('*')\n      .eq('video_url', videoUrl)\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .single();\n\n    if (error && error.code !== 'PGRST116') { // PGRST116 = no rows returned\n      throw error;\n    }\n\n    return data || null;\n  } catch (error) {\n    console.error('Erro ao buscar título por URL:', error);\n    return null;\n  }\n};\n\n/**\n * Migrar dados existentes de imagens para legendas\n * @param {number} escolaId - ID da escola\n * @param {string} tipoFoto - 'escola' ou 'professor'\n * @returns {Promise<Array>} Legendas migradas\n */\nexport const migrarLegendasExistentes = async (escolaId, tipoFoto = 'escola') => {\n  try {\n    let imagens = [];\n    \n    if (tipoFoto === 'escola') {\n      // Buscar imagens existentes da tabela imagens_escola\n      const { data, error } = await supabase\n        .from('imagens_escola')\n        .select('*')\n        .eq('escola_id', escolaId)\n        .eq('ativo', true);\n\n      if (error) {\n        throw error;\n      }\n      imagens = data || [];\n    } else if (tipoFoto === 'professor') {\n      // Buscar imagens dos professores do bucket\n      const { data, error } = await supabase.storage\n        .from('imagens-professores')\n        .list(`${escolaId}/`);\n\n      if (error) {\n        throw error;\n      }\n      \n      imagens = (data || []).map(file => ({\n        url: `${escolaId}/${file.name}`,\n        descricao: `Imagem do professor - ${file.name}`,\n        created_at: file.created_at\n      }));\n    }\n\n    const legendasMigradas = [];\n\n    for (const imagem of imagens) {\n      // Verificar se já existe legenda para esta imagem\n      const legendaExistente = await getLegendaByImageUrl(imagem.url, escolaId, tipoFoto);\n      \n      if (!legendaExistente) {\n        // Criar nova legenda\n        const novaLegenda = await addLegendaFoto({\n          escola_id: escolaId,\n          imagem_url: imagem.url,\n          legenda: imagem.descricao || `Imagem da ${tipoFoto}`,\n          descricao_detalhada: imagem.descricao,\n          categoria: 'geral',\n          tipo_foto: tipoFoto,\n          ativo: true\n        });\n        \n        legendasMigradas.push(novaLegenda);\n      }\n    }\n\n    return legendasMigradas;\n  } catch (error) {\n    console.error('Erro ao migrar legendas existentes:', error);\n    throw error;\n  }\n};\n\n/**\n * Migrar dados existentes de vídeos para títulos\n * @param {number} escolaId - ID da escola\n * @param {string} videoUrl - URL do vídeo\n * @returns {Promise<Object|null>} Título migrado\n */\nexport const migrarTituloExistente = async (escolaId, videoUrl) => {\n  try {\n    if (!videoUrl) return null;\n\n    // Verificar se já existe título para este vídeo\n    const tituloExistente = await getTituloByVideoUrl(videoUrl, escolaId);\n    \n    if (!tituloExistente) {\n      // Determinar plataforma\n      let plataforma = 'outro';\n      if (videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be')) {\n        plataforma = 'youtube';\n      } else if (videoUrl.includes('vimeo.com')) {\n        plataforma = 'vimeo';\n      }\n\n      // Criar novo título\n      const novoTitulo = await addTituloVideo({\n        escola_id: escolaId,\n        video_url: videoUrl,\n        titulo: `Vídeo da Escola - ${plataforma.charAt(0).toUpperCase() + plataforma.slice(1)}`,\n        descricao: 'Vídeo relacionado à escola indígena',\n        plataforma: plataforma,\n        categoria: 'geral',\n        ativo: true\n      });\n      \n      return novoTitulo;\n    }\n\n    return tituloExistente;\n  } catch (error) {\n    console.error('Erro ao migrar título existente:', error);\n    throw error;\n  }\n};\n\n/**\n * Função de teste para verificar a estrutura da tabela legendas_fotos\n * @returns {Promise<void>}\n */\nexport const testLegendasTable = async () => {\n  try {\n    console.log('=== TESTE: Verificando estrutura da tabela legendas_fotos ===');\n    \n    // Teste 1: Verificar se a tabela existe\n    const { data: tableData, error: tableError } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .limit(1);\n    \n    console.log('Teste 1 - Tabela existe:', { tableData, tableError });\n    \n    if (tableError) {\n      console.error('❌ ERRO: Tabela legendas_fotos não existe ou não está acessível:', tableError);\n      return;\n    }\n    \n    // Teste 2: Verificar estrutura da tabela\n    const { data: structureData, error: structureError } = await supabase\n      .from('legendas_fotos')\n      .select('id, escola_id, imagem_url, legenda, descricao_detalhada, autor_foto, data_foto, categoria, ativo, created_at, updated_at')\n      .limit(1);\n    \n    console.log('Teste 2 - Estrutura da tabela:', { structureData, structureError });\n    \n    if (structureError) {\n      console.error('❌ ERRO: Problema com estrutura da tabela:', structureError);\n    } else {\n      console.log('✅ Estrutura básica da tabela está OK');\n    }\n    \n    // Teste 3: Verificar se a coluna tipo_foto existe\n    try {\n      const { data: tipoData, error: tipoError } = await supabase\n        .from('legendas_fotos')\n        .select('tipo_foto')\n        .limit(1);\n      \n      console.log('Teste 3 - Coluna tipo_foto:', { tipoData, tipoError });\n      \n      if (tipoError && tipoError.code === '42703') {\n        console.log('⚠️ AVISO: Coluna tipo_foto não existe na tabela');\n      } else if (tipoError) {\n        console.error('❌ ERRO: Problema com coluna tipo_foto:', tipoError);\n      } else {\n        console.log('✅ Coluna tipo_foto existe');\n      }\n    } catch (tipoError) {\n      console.log('⚠️ AVISO: Coluna tipo_foto não existe na tabela');\n    }\n    \n    // Teste 4: Tentar inserir um registro de teste\n    console.log('Teste 4 - Testando inserção...');\n    const testRecord = {\n      escola_id: 999999, // ID que não existe\n      imagem_url: 'test/test.jpg',\n      legenda: 'Teste de legenda',\n      descricao_detalhada: 'Descrição de teste',\n      autor_foto: 'Teste',\n      data_foto: '2024-01-01',\n      categoria: 'teste',\n      ativo: true,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    };\n    \n    try {\n      const { data: insertData, error: insertError } = await supabase\n        .from('legendas_fotos')\n        .insert([testRecord])\n        .select()\n        .single();\n      \n      console.log('Teste 4 - Inserção de teste:', { insertData, insertError });\n      \n      if (insertError) {\n        console.error('❌ ERRO: Problema com inserção:', insertError);\n      } else {\n        console.log('✅ Inserção funcionando - removendo registro de teste...');\n        \n        // Remover o registro de teste\n        const { error: deleteError } = await supabase\n          .from('legendas_fotos')\n          .delete()\n          .eq('id', insertData.id);\n        \n        if (deleteError) {\n          console.error('⚠️ AVISO: Não foi possível remover registro de teste:', deleteError);\n        } else {\n          console.log('✅ Registro de teste removido com sucesso');\n        }\n      }\n    } catch (insertError) {\n      console.error('❌ ERRO: Falha na inserção de teste:', insertError);\n    }\n    \n    console.log('=== FIM DO TESTE ===');\n    \n  } catch (error) {\n    console.error('❌ ERRO GERAL no teste da tabela:', error);\n  }\n}; \n ","// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React from 'react';\n\nconst MapWrapper = React.forwardRef((props, ref) => {\n  return <div id=\"map\" className=\"w-full h-full\" ref={ref} {...props} />;\n});\n\nexport default MapWrapper; ","import { Style, Fill, Stroke } from 'ol/style';\n\n/**\n * Função de estilo para features de Terras Indígenas.\n * @param {ol.Feature} feature - Feature do OpenLayers.\n * @returns {ol.style.Style} Objeto de estilo do OpenLayers para a feature.\n */\nexport function terrasIndigenasStyle(feature) {\n  const properties = feature.getProperties();\n  const isRegularizada = properties.fase_ti === 'Regularizada';\n\n  return new Style({\n    fill: new Fill({\n      color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n    }),\n    stroke: new Stroke({\n      color: '#B22222',\n      width: 2,\n      lineDash: [3, 3]\n    })\n  });\n}\n\n/**\n * Função de estilo para features do Estado de SP.\n * @returns {ol.style.Style} Objeto de estilo do OpenLayers para a feature.\n */\nexport function estadoSPStyle() {\n  return new Style({\n    fill: new Fill({\n      color: 'rgba(0, 0, 0, 0.3)'\n    }),\n    stroke: new Stroke({\n      color: '#000000',\n      width: 2\n    })\n  });\n} ","/**\n * Gera SVG de marcador customizado para o mapa.\n * @param {string} color - Cor base do marcador.\n * @param {number} [size=24] - Tamanho do marcador.\n * @param {Object} options - Opções de customização.\n * @returns {string} SVG como string.\n */\nexport function createMarkerSVG(color, size = 24, options = {}) {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n}\n\n/**\n * Função para criar SVG de cluster\n * @param {string} color - Cor do cluster\n * @param {number} size - Tamanho do cluster\n * @param {number} count - Número de itens no cluster\n * @returns {string} SVG como string\n */\nexport const createClusterSVG = (color, size, count) => {\n  return createMarkerSVG(color, size, {\n    showShadow: true,\n    showGradient: true,\n    showGlow: count > 20,\n    isNearbyPair: false\n  });\n}; ","/**\n * Cria o estilo de marcador individual para o OpenLayers.\n * @param {ol.Feature} feature - Feature do marcador.\n * @param {boolean} showNomesEscolas - Se deve mostrar o nome da escola.\n * @returns {ol.style.Style|null} Estilo do marcador ou null.\n */\nimport { Style, Icon, Text, Fill, Stroke } from 'ol/style';\nimport { createMarkerSVG } from './svgGenerator';\n\nexport function createMarkerStyle(feature, showNomesEscolas = false) {\n  try {\n    const schoolData = feature.get('schoolData');\n    if (!schoolData) return null;\n\n    const baseColor = '#3B82F6';\n    const borderColor = '#1E40AF';\n    const isNearbyPair = feature.get('isNearbyPair');\n\n    // Gerar SVG dinamicamente\n    const svg = createMarkerSVG(baseColor, 24, {\n      borderColor: borderColor,\n      showShadow: true,\n      showGradient: true,\n      showGlow: false,\n      isNearbyPair: isNearbyPair\n    });\n    const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n    const style = new Style({\n      image: new Icon({\n        src: svgUrl,\n        scale: isNearbyPair ? 1.1 : 1.0,\n        anchor: [0.5, 1],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction'\n      })\n    });\n\n    if (showNomesEscolas) {\n      style.setText(new Text({\n        text: schoolData.titulo || 'Escola',\n        font: 'bold 10px Arial',\n        fill: new Fill({ color: '#FFFFFF' }),\n        stroke: new Stroke({ color: '#000000', width: 2 }),\n        offsetY: isNearbyPair ? -35 : -30,\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }));\n    }\n\n    return style;\n  } catch (error) {\n    return null;\n  }\n}\n\n/**\n * Cria o estilo de cluster de marcadores para o OpenLayers.\n * @param {ol.Feature} feature - Feature do cluster.\n * @param {Function} createMarkerStyle - Função para criar estilo de marcador individual.\n * @returns {ol.style.Style|null} Estilo do cluster ou null.\n */\nexport function createClusterStyle(feature, createMarkerStyle) {\n  try {\n    const features = feature.get('features');\n    if (!features || features.length === 0) return null;\n    const size = features.length;\n\n    if (size === 1) {\n      const singleFeature = features[0];\n      if (!singleFeature) return null;\n      return createMarkerStyle(singleFeature);\n    }\n\n    let baseColor = '#3B82F6';\n    let baseSize = 32;\n    if (size > 100) {\n      baseColor = '#1E40AF';\n      baseSize = 40;\n    } else if (size > 50) {\n      baseColor = '#2563EB';\n      baseSize = 36;\n    } else if (size > 20) {\n      baseColor = '#3B82F6';\n      baseSize = 34;\n    } else if (size > 10) {\n      baseColor = '#60A5FA';\n      baseSize = 33;\n    }\n    const scale = Math.min(1.0 + (size * 0.015), 1.8);\n    const finalSize = Math.round(baseSize * scale);\n\n    // Gerar SVG dinamicamente\n    const svg = createMarkerSVG(baseColor, finalSize, {\n      borderColor: baseColor,\n      showShadow: true,\n      showGradient: true,\n      showGlow: size > 20,\n      isNearbyPair: false\n    });\n    const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n    let fontSize = '12px';\n    let fontWeight = 'bold';\n    if (size > 100) fontSize = '14px';\n    else if (size > 50) fontSize = '13px';\n    else if (size > 20) fontSize = '12px';\n\n    return new Style({\n      image: new Icon({\n        src: svgUrl,\n        scale: 1,\n        anchor: [0.5, 0.5],\n        anchorXUnits: 'fraction',\n        anchorYUnits: 'fraction'\n      }),\n      text: new Text({\n        text: size.toString(),\n        font: `${fontWeight} ${fontSize} Arial`,\n        fill: new Fill({ color: '#FFFFFF' }),\n        stroke: new Stroke({ color: '#000000', width: 2 }),\n        offsetY: finalSize * 0.6\n      })\n    });\n  } catch (error) {\n    return null;\n  }\n} ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\nimport MapWrapper from './map/MapWrapper';\nimport { findNearbyPairs } from '../utils/markers/proximityUtils';\nimport { terrasIndigenasStyle, estadoSPStyle } from '../utils/markers/featureStyles';\nimport { handleMarkerClick, handleGeoJSONClick } from '../utils/markers/handlers';\nimport { createMarkerStyle, createClusterStyle } from '../utils/markers/markerStyles';\n\n// Componentes GeoJSON\n// import OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\n// import OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Função para gerenciar cliques em marcador de escola (um clique abre o painel)\n  const handleMarkerClick = useCallback((feature, event) => {\n    const schoolData = feature.get('schoolData');\n    if (schoolData) {\n      if (isMobile()) {\n        console.log('[MOBILE] Marcador de escola clicado:', schoolData);\n      }\n      onPainelOpen?.(schoolData);\n    }\n  }, [onPainelOpen]);\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Verificar se é mobile e ajustar configurações\n    const isMobileDevice = isMobile();\n    const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: 18,\n        minZoom: 4,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions({\n        dragRotate: false, // Desabilitar rotação com arraste\n        pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      })\n    });\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            console.log('[CLUSTER] Clique em cluster com 1 marcador', features[0].get('schoolData'));\n            handleMarkerClick(features[0], event);\n          } else if (features.length > 1) {\n            console.log('[CLUSTER] Clique em cluster com', features.length, 'marcadores. Fazendo zoom.');\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            const clusterExtent = feature.getGeometry().getExtent();\n            const currentZoom = map.current.getView().getZoom();\n            let targetZoom = 12;\n            if (features.length > 20) {\n              targetZoom = 10;\n            } else if (features.length > 10) {\n              targetZoom = 11;\n            } else if (features.length > 5) {\n              targetZoom = 12;\n            } else {\n              targetZoom = 13;\n            }\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            map.current.getView().fit(clusterExtent, {\n              duration: 800,\n              padding: [80, 80, 80, 80],\n              maxZoom: targetZoom\n            });\n          }\n        } else {\n          console.log('[MARCADOR] Clique em marcador individual', feature.get('schoolData'));\n          // Marcador individual\n          handleMarkerClick(feature, event);\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n\n    map.current.on('pointermove', (event) => {\n      // Desabilitar tooltips de hover no mobile\n      if (isMobile()) return;\n      \n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador, mostrar tooltip\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData, 'school');\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Verificar se é um marcador de escola ou terra indígena\n          const schoolData = feature.get('schoolData');\n          const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n          \n          if (schoolData) {\n            // Marcador de escola - tooltip azul\n            tooltipElement = createTooltipElement(event, schoolData, 'school');\n          } else if (terraIndigenaInfo) {\n            // Terra indígena - tooltip vermelho\n            tooltipElement = createTooltipElement(event, terraIndigenaInfo, 'terra_indigena');\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, data, type) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.setAttribute('data-type', type);\n      \n      // Determinar o conteúdo e estilo baseado no tipo\n      let content, backgroundColor, borderColor;\n      \n      if (type === 'school') {\n        content = createTooltipHTML(data);\n        backgroundColor = 'rgba(59, 130, 246, 0.95)'; // Azul para escolas\n        borderColor = 'rgba(37, 99, 235, 0.8)';\n      } else if (type === 'terra_indigena') {\n        content = `Terra Indígena ${data.titulo || 'Indígena'}`;\n        backgroundColor = 'rgba(220, 20, 60, 0.95)'; // Vermelho para terras indígenas\n        borderColor = 'rgba(185, 28, 28, 0.8)';\n      }\n      \n      element.textContent = content;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = backgroundColor;\n      element.style.color = 'white';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.25)';\n      element.style.border = `1px solid ${borderColor}`;\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o elemento\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do elemento\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Desabilitar zoom no double click em marcadores individuais ou cluster de 1 escola\n    map.current.on('dblclick', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Se for marcador individual ou cluster de 1 escola, previne o zoom\n        if (!feature.get('features') || (feature.get('features') && feature.get('features').length === 1)) {\n          event.preventDefault();\n          event.stopPropagation();\n          console.log('[DBLCLICK] Zoom desabilitado em marcador individual ou cluster de 1 escola');\n        }\n      }\n    });\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [center, zoom, createBaseLayers, createClusterStyle, createTooltipHTML, onPainelOpen, handleMarkerClick]);\n\n  // Atualizar configurações do mapa quando props mudarem\n  useEffect(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom, showNomesEscolas]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        \n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        if (pairIndex !== -1) {\n          feature.set('isNearbyPair', true);\n        }\n        \n        vectorSource.current.addFeature(feature);\n      }\n    });\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle((feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)));\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle((feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)));\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    // Variáveis para controlar o sistema de clique duplo\n    let clickTimeout = null;\n    let lastClickedFeature = null;\n    let clickCount = 0;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo) {\n          // Verificar se é mobile\n          if (isMobile()) {\n            // No mobile: clique único abre o painel diretamente\n            if (onPainelOpen) {\n              onPainelOpen(terraIndigenaInfo);\n            }\n          } else {\n            // No desktop: manter comportamento de clique duplo\n            // Verificar se é o mesmo feature clicado anteriormente\n            if (lastClickedFeature === feature) {\n              clickCount++;\n            } else {\n              // Novo feature, resetar contador\n              lastClickedFeature = feature;\n              clickCount = 1;\n            }\n\n            // Limpar timeout anterior\n            if (clickTimeout) {\n              clearTimeout(clickTimeout);\n            }\n\n            // Configurar timeout para resetar o contador\n            clickTimeout = setTimeout(() => {\n              clickCount = 0;\n              lastClickedFeature = null;\n            }, 500); // 500ms para detectar clique duplo\n\n            if (clickCount === 1) {\n              // Primeiro clique: fazer zoom\n              const geometry = feature.getGeometry();\n              if (geometry) {\n                const extent = geometry.getExtent();\n                map.current.getView().fit(extent, {\n                  duration: 800,\n                  padding: [50, 50, 50, 50],\n                  maxZoom: 15\n                });\n              }\n            } else if (clickCount === 2) {\n              // Segundo clique: abrir painel de informações\n              if (onPainelOpen) {\n                onPainelOpen(terraIndigenaInfo);\n              }\n              // Resetar contador após abrir o painel\n              clickCount = 0;\n              lastClickedFeature = null;\n              if (clickTimeout) {\n                clearTimeout(clickTimeout);\n                clickTimeout = null;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n      // Limpar timeout ao desmontar\n      if (clickTimeout) {\n        clearTimeout(clickTimeout);\n      }\n    };\n  }, [onPainelOpen]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: (feature) => createClusterStyle(feature, (f) => createMarkerStyle(f, showNomesEscolas)),\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: terrasIndigenasStyle,\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: estadoSPStyle,\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  return (\n    <MapWrapper ref={mapContainer}>\n      {/* Informações do mapa */}\n      {/* Bloco removido conforme solicitado */}\n    </MapWrapper>\n  );\n};\n\nexport default OpenLayersMap; ","/**\n * Constante para definir a proximidade entre marcadores (em graus)\n */\nexport const PROXIMITY_THRESHOLD = 0.00005;\n\n/**\n * Encontra pares de pontos próximos com base em um threshold de proximidade.\n * @param {Array} pontos - Array de objetos com latitude e longitude.\n * @param {number} [threshold=0.00005] - Threshold de proximidade em graus.\n * @returns {Array<Array<number>>} - Array de pares de índices próximos.\n */\nexport function findNearbyPairs(pontos, threshold = 0.00005) {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < threshold && lngDiff < threshold) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n}\n\n/**\n * Função para calcular distância entre dois pontos\n * @param {Object} point1 - Primeiro ponto {latitude, longitude}\n * @param {Object} point2 - Segundo ponto {latitude, longitude}\n * @returns {number} Distância em graus\n */\nexport const calculateDistance = (point1, point2) => {\n  const latDiff = Math.abs(parseFloat(point1.latitude) - parseFloat(point2.latitude));\n  const lngDiff = Math.abs(parseFloat(point1.longitude) - parseFloat(point2.longitude));\n  \n  return Math.sqrt(latDiff * latDiff + lngDiff * lngDiff);\n};\n\n/**\n * Função para verificar se dois pontos estão próximos\n * @param {Object} point1 - Primeiro ponto {latitude, longitude}\n * @param {Object} point2 - Segundo ponto {latitude, longitude}\n * @param {number} threshold - Limiar de proximidade\n * @returns {boolean} True se os pontos estão próximos\n */\nexport const arePointsNearby = (point1, point2, threshold = PROXIMITY_THRESHOLD) => {\n  const distance = calculateDistance(point1, point2);\n  return distance < threshold;\n}; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  painelAberto = false,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  useEffect(() => {\n    console.log('MapSelector: useEffect painelAberto mudou:', {\n      painelAberto,\n      isMobile,\n      showMarcadores,\n      shouldReactivate: !painelAberto && isMobile\n    });\n    \n    if (!painelAberto && isMobile) {\n      console.log('MapSelector: Painel fechado em mobile, reativando marcadores');\n      setShowMarcadores(true);\n    }\n  }, [painelAberto, isMobile]);\n\n  // Log para monitorar mudanças no showMarcadores\n  useEffect(() => {\n    console.log('MapSelector: showMarcadores mudou para:', showMarcadores);\n  }, [showMarcadores]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","// Central slug utility for the project\nexport const criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-') // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '') // Remove hífens do início e fim\n    .trim();\n}; ","import { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\n\nconst useDocumentosEscola = (escolaId) => {\n  const [documentos, setDocumentos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDocumentos = async () => {\n      console.log('🔄 Iniciando busca de documentos para escola:', escolaId, 'tipo:', typeof escolaId);\n      \n      if (!escolaId) {\n        console.log('⚠️ Nenhum ID de escola fornecido, retornando array vazio');\n        setDocumentos([]);\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        console.log('📡 Consultando tabela documentos_escola...');\n        \n        // Verificar conexão com Supabase\n        const { data: authData, error: authError } = await supabase.auth.getSession();\n        console.log('🔐 Estado da autenticação:', {\n          temSessao: !!authData?.session,\n          error: authError\n        });\n\n        // Verificar permissões da tabela\n        const { data: rlsData, error: rlsError } = await supabase\n          .from('documentos_escola')\n          .select('count')\n          .limit(1);\n\n        console.log('🔑 Verificação de permissões:', {\n          podeAcessar: !rlsError,\n          error: rlsError ? {\n            code: rlsError.code,\n            message: rlsError.message,\n            details: rlsError.details,\n            hint: rlsError.hint\n          } : null\n        });\n\n        // Primeiro, vamos verificar todos os documentos para debug\n        const { data: allDocs, error: allDocsError } = await supabase\n          .from('documentos_escola')\n          .select('*');\n\n        if (allDocsError) {\n          console.error('❌ Erro ao buscar todos os documentos:', {\n            code: allDocsError.code,\n            message: allDocsError.message,\n            details: allDocsError.details,\n            hint: allDocsError.hint\n          });\n        } else {\n          console.log('📊 Todos os documentos na tabela:', allDocs);\n          if (allDocs && allDocs.length > 0) {\n            console.log('📊 Exemplo de documento:', allDocs[0]);\n            console.log('📊 Tipos de escola_id encontrados:', allDocs.map(doc => ({\n              id: doc.id,\n              escola_id: doc.escola_id,\n              tipo_escola_id: typeof doc.escola_id,\n              valor_escola_id: doc.escola_id\n            })));\n          } else {\n            console.log('⚠️ Tabela está vazia ou não temos permissão para ver os dados');\n          }\n        }\n        \n        // Agora vamos buscar os documentos específicos\n        console.log('🔍 Buscando documentos para escola_id:', escolaId);\n        const { data, error } = await supabase\n          .from('documentos_escola')\n          .select('*')\n          .eq('escola_id', escolaId.toString()) // Convertendo para string para garantir\n          .order('created_at', { ascending: false });\n\n        if (error) {\n          console.error('❌ Erro na consulta Supabase:', {\n            code: error.code,\n            message: error.message,\n            details: error.details,\n            hint: error.hint\n          });\n          throw error;\n        }\n\n        console.log('✅ Documentos encontrados:', data?.length || 0);\n        if (data?.length === 0) {\n          console.log('ℹ️ Nenhum documento encontrado para a escola ID:', escolaId);\n          console.log('ℹ️ Tentando buscar com diferentes formatos de escola_id...');\n          \n          // Tentando diferentes formatos do ID\n          const { data: dataAsNumber, error: errorAsNumber } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', Number(escolaId));\n            \n          const { data: dataAsString, error: errorAsString } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', String(escolaId));\n            \n          console.log('Resultados com escola_id como número:', {\n            count: dataAsNumber?.length || 0,\n            error: errorAsNumber\n          });\n          console.log('Resultados com escola_id como string:', {\n            count: dataAsString?.length || 0,\n            error: errorAsString\n          });\n        } else {\n          console.log('📄 Dados dos documentos:', data);\n        }\n        \n        setDocumentos(data || []);\n      } catch (err) {\n        console.error('❌ Erro ao buscar documentos:', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n        console.log('🏁 Estado final:', { \n          documentos: documentos.length, \n          isLoading, \n          error: error || 'nenhum' \n        });\n      }\n    };\n\n    fetchDocumentos();\n  }, [escolaId]);\n\n  return { documentos, isLoading, error };\n};\n\nexport default useDocumentosEscola; ","import React, { memo, useState } from 'react';\n\n// Componente InfoCard para informações individuais\nconst InfoCard = memo(({ label, value, icon: Icon, type = 'text', className = '' }) => {\n  if (!value && value !== 0) return null;\n\n  const renderValue = () => {\n    switch (type) {\n      case 'number':\n        return (\n          <div className=\"text-2xl font-bold text-green-800\">\n            {value.toLocaleString('pt-BR')}\n          </div>\n        );\n      case 'boolean':\n        return (\n          <div className={`px-3 py-1 rounded-full text-xs font-medium ${\n            value ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'\n          }`}>\n            {value ? 'Sim' : 'Não'}\n          </div>\n        );\n      case 'badge':\n        return (\n          <div className=\"flex flex-wrap gap-1\">\n            {Array.isArray(value) ? value.map((item, index) => (\n              <span key={index} className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {item}\n              </span>\n            )) : (\n              <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {value}\n              </span>\n            )}\n          </div>\n        );\n      case 'link':\n        return (\n          <a \n            href={value} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"text-green-700 hover:text-green-800 underline text-sm\"\n          >\n            {value}\n          </a>\n        );\n      default:\n        return (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`rounded-lg p-4 transition-all duration-200 ${className}`}>\n      <div className=\"flex items-center gap-2 mb-2\">\n        {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n        <span className=\"text-xs font-medium text-gray-600 uppercase tracking-wide\">\n          {label}\n        </span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n});\n\n// Componente InfoGrid para layout em grid\nconst InfoGrid = memo(({ children, columns = 'auto-fit', gap = 4, className = '' }) => {\n  const gridClasses = {\n    'auto-fit': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '2': 'grid-cols-1 sm:grid-cols-2',\n    '3': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '4': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'\n  };\n\n  return (\n    <div className={`grid ${gridClasses[columns]} gap-${gap} ${className} [&>*]:bg-green-100`}>\n      {children}\n    </div>\n  );\n});\n\n// Componente InfoTable para dados tabulares\nconst InfoTable = memo(({ data, className = '' }) => {\n  if (!data || data.length === 0) return null;\n\n  return (\n    <div className={`bg-green-100 rounded-lg overflow-hidden ${className}`}>\n      <table className=\"w-full\">\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-green-50'}>\n              <td className=\"px-4 py-3 text-sm font-medium text-gray-700 border-r border-green-200\">\n                {row.label}\n              </td>\n              <td className=\"px-4 py-3 text-sm text-gray-600\">\n                {row.value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\n// Componente InfoStats para estatísticas com ícones\nconst InfoStats = memo(({ stats, className = '' }) => {\n  if (!stats || stats.length === 0) return null;\n\n  return (\n    <div className={`grid grid-cols-2 sm:grid-cols-4 gap-4 ${className} [&>*]:border-b [&>*]:border-gray-200 [&>*]:pb-2 [&>*]:mb-2`}>\n      {stats.map((stat, index) => (\n        <div key={index} className=\"text-center rounded-lg p-4\">\n          <div className=\"flex justify-center mb-2\">\n            {stat.icon && <stat.icon className=\"w-6 h-6 text-green-600\" />}\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {stat.value}\n          </div>\n          <div className=\"text-xs text-gray-600 mt-1\">\n            {stat.label}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n\n// Componente InfoSection refatorado\nconst InfoSection = memo(({ \n  title, \n  icon: Icon, \n  children, \n  description,\n  defaultCollapsed = false,\n  className = '',\n  layout = 'default', // 'default', 'grid', 'table', 'stats'\n  layoutProps = {}\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n\n  const renderContent = () => {\n    if (!children) return null;\n\n    switch (layout) {\n      case 'grid':\n        return (\n          <InfoGrid {...layoutProps}>\n            {children}\n          </InfoGrid>\n        );\n      case 'table':\n        return (\n          <InfoTable data={layoutProps.data} className={layoutProps.className} />\n        );\n      case 'stats':\n        return (\n          <InfoStats stats={layoutProps.stats} className={layoutProps.className} />\n        );\n      default:\n        return (\n          <div className=\"space-y-4\">\n            {children}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <section \n      className={`\n        bg-white rounded-2xl p-5 \n        shadow-sm transition-all duration-200\n        ${className}\n      `}\n    >\n      <button\n        onClick={() => setIsCollapsed(!isCollapsed)}\n        className=\"\n          w-full flex items-center justify-between \n          text-base font-semibold\n          mb-4 text-gray-900 hover:text-gray-800 \n          transition-colors focus:outline-none\n        \"\n        aria-expanded={!isCollapsed}\n        aria-controls={`${title}-content`}\n      >\n        <div className=\"flex items-center gap-2\">\n          {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n          <span className=\"tracking-wide\">{title}</span>\n        </div>\n      </button>\n      \n      {!isCollapsed && (\n        <div \n          id={`${title}-content`}\n          className=\"space-y-4\"\n          role=\"region\"\n          aria-labelledby={`${title}-button`}\n        >\n          {description && (\n            <div className=\"bg-green-100 rounded-lg p-4\">\n              <p className=\"text-gray-700 text-sm leading-relaxed\">\n                {description}\n              </p>\n            </div>\n          )}\n          {renderContent()}\n        </div>\n      )}\n    </section>\n  );\n});\n\n// Exportar todos os componentes\nexport { InfoCard, InfoGrid, InfoTable, InfoStats };\nexport default InfoSection; ","import React, { memo, useState } from 'react';\nimport {\n  MapPin,\n  Users,\n  Globe,\n  Calendar,\n  Building,\n  Link as LinkIcon,\n  ExternalLink,\n  ChevronRight,\n  Check,\n  X,\n  Navigation,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst capitalize = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst CompactCard = ({ icon: Icon, label, value, type = 'text' }) => {\n  const renderValue = () => {\n    switch (type) {\n      case 'boolean':\n        return value ? (\n          <span className=\"flex items-center gap-1 text-green-600 text-sm\">\n            <Check className=\"w-5 h-5\" />\n            Sim\n          </span>\n        ) : (\n          <span className=\"flex items-center gap-1 text-red-500 text-sm\">\n            <X className=\"w-5 h-5\" />\n            Não\n          </span>\n        );\n      default:\n        return <span className=\"text-sm text-gray-800 truncate\">{value}</span>;\n    }\n  };\n\n  return (\n    <div className=\"p-1 rounded-md transition-all\">\n      <div className=\"flex items-center gap-1.5 mb-1\">\n        <Icon className=\"w-5 h-5 text-gray-600\" />\n        <span className=\"text-xs text-gray-500 font-medium\">{label}</span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n};\n\nconst InfoBlock = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-center gap-2 bg-green-100 p-1.5 rounded-md text-xs\">\n    <Icon className=\"w-5 h-5 text-green-600\" />\n    <span className=\"text-gray-700 font-medium\">{label}:</span>\n    <span className=\"font-semibold text-green-800\">{capitalize(value)}</span>\n  </div>\n);\n\nconst AddressDetails = ({ escola }) => {\n  const hasDetailedAddress = escola.logradouro || escola.numero || escola.bairro || escola.cep;\n  \n  if (!hasDetailedAddress) {\n    return (\n      <div className=\"mt-2 p-2 bg-green-100 rounded-md\">\n        <p className=\"text-xs text-gray-700 leading-snug\">\n          {capitalize(escola.endereco)}\n        </p>\n      </div>\n    );\n  }\n\n  const addressFields = [\n    { field: 'logradouro', label: 'Logradouro' },\n    { field: 'numero', label: 'Número' },\n    { field: 'complemento', label: 'Complemento' },\n    { field: 'bairro', label: 'Bairro' },\n  ];\n\n  return (\n    <div className=\"mt-2 space-y-1\">\n      {addressFields.map(({ field, label }) => \n        escola[field] && (\n          <div key={field} className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n            <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700 mb-0.5\">{label}</div>\n              <div className=\"text-xs text-gray-800 leading-snug\">{escola[field]}</div>\n            </div>\n          </div>\n        )\n      )}\n      \n      {(escola.cep || escola.estado) && (\n        <div className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n          <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n          <div className=\"flex-1\">\n            <div className=\"text-xs font-medium text-gray-700 mb-0.5\">Localização</div>\n            <div className=\"text-xs text-gray-800 leading-snug\">\n              {[escola.municipio, escola.estado, escola.cep].filter(Boolean).join(', ')}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MapButton = ({ escola }) => {\n  const hasCoordinates = escola.latitude && escola.longitude;\n  \n  if (!hasCoordinates) return null;\n\n  const openMap = () => {\n    window.open(`https://www.google.com/maps?q=${escola.latitude},${escola.longitude}`, '_blank');\n  };\n\n  return (\n    <button\n      onClick={openMap}\n      className=\"mt-2 w-full flex items-center justify-center gap-2 p-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors text-xs font-medium\"\n    >\n      <Navigation className=\"w-5 h-5\" />\n      Ver no Google Maps\n    </button>\n  );\n};\n\nconst SocialLinks = ({ links, expanded, onToggle }) => {\n  const socialLinks = (links || '').split(',').map(url => url.trim()).filter(Boolean);\n  \n  if (socialLinks.length === 0) return null;\n\n  return (\n    <div className=\"bg-green-100 rounded-md\">\n      <button\n        onClick={() => onToggle('social')}\n        className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n        aria-expanded={expanded.social}\n      >\n        <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n          <Globe className=\"w-5 h-5 text-blue-600\" />\n          Redes sociais ({socialLinks.length})\n        </span>\n        <ChevronRight\n          className={`w-5 h-5 text-gray-400 transition-transform ${\n            expanded.social ? 'rotate-90' : ''\n          }`}\n        />\n      </button>\n      \n      {expanded.social && (\n        <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n          <div className=\"mt-1 space-y-1\">\n            {socialLinks.map((link, index) => (\n              <a\n                key={index}\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center gap-1.5 p-1.5 bg-green-100 rounded-md hover:bg-green-200 group text-xs\"\n              >\n                <LinkIcon className=\"w-5 h-5 text-blue-600\" />\n                <span className=\"truncate flex-1 text-gray-700\">{link}</span>\n                <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BasicInfo = memo(({ escola }) => {\n  const [expanded, setExpanded] = useState({});\n\n  if (!escola) return null;\n\n  const toggle = (key) => {\n    setExpanded(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const basicInfoCards = [\n    {\n      icon: Building,\n      label: 'Município',\n      value: capitalize(escola.municipio),\n    },\n    {\n      icon: Calendar,\n      label: 'Fundação',\n      value: escola.ano_criacao,\n    },\n    {\n      icon: Globe,\n      label: 'Redes sociais',\n      value: escola.usa_redes_sociais,\n      type: 'boolean',\n    },\n  ].filter(item => item.value);\n\n  return (\n    <>\n      {/* Povos Indígenas em destaque antes de tudo */}\n      {escola.povos_indigenas && (\n        <div className=\"mb-4\">\n          <div className=\"text-lg sm:text-xl font-bold text-green-800\">\n            Povos Indígenas: <span className=\"font-semibold text-black\">{escola.povos_indigenas}</span>\n          </div>\n        </div>\n      )}\n      <InfoSection title=\"Localização\" icon={MapPin}>\n        {/* Cards informativos básicos */}\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mb-3 [&>*]:bg-green-100\">\n          {basicInfoCards.map((item, index) => (\n            <CompactCard key={index} {...item} />\n          ))}\n        </div>\n\n        <div className=\"space-y-1.5\">\n          {/* Diretoria de ensino */}\n          {escola.diretoria_ensino && (\n            <InfoBlock \n              icon={Building} \n              label=\"Diretoria de ensino\" \n              value={escola.diretoria_ensino} \n            />\n          )}\n\n          {/* Gaveta do endereço */}\n          {escola.endereco && (\n            <div className=\"bg-green-100 rounded-md\">\n              <button\n                onClick={() => toggle('endereco')}\n                className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n                aria-expanded={expanded.endereco}\n              >\n                <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                  <Building className=\"w-5 h-5\" />\n                  Endereço\n                </span>\n                <ChevronRight\n                  className={`w-5 h-5 text-gray-400 transition-transform ${\n                    expanded.endereco ? 'rotate-90' : ''\n                  }`}\n                />\n              </button>\n              {expanded.endereco && (\n                <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n                  <AddressDetails escola={escola} />\n                  <MapButton escola={escola} />\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Redes sociais */}\n          <SocialLinks \n            links={escola.links_redes_sociais}\n            expanded={expanded}\n            onToggle={toggle}\n          />\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default BasicInfo;","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { X, RefreshCw } from 'lucide-react';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { supabase } from '../../../supabaseClient';\n\nconst ImagensdasEscolas = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [error, setError] = useState('');\n  const cacheRef = useRef({});\n  const [cacheVersion, setCacheVersion] = useState(0); // Para forçar recarga\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagensdasEscolas: refreshKey mudou, forçando recarga');\n      limparCacheERecarregar();\n    }\n  }, [refreshKey]);\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    document.body.style.overflow = 'auto';\n  }, []);\n\n  // ESC para fechar\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Função para limpar cache e recarregar\n  const limparCacheERecarregar = useCallback(() => {\n    console.log('Limpando cache e recarregando imagens...');\n    cacheRef.current = {};\n    setCacheVersion(prev => prev + 1);\n    setImagens([]);\n    setLoading(true);\n    setError('');\n  }, []);\n\n  useEffect(() => {\n    if (!escola_id) {\n      setLoading(false);\n      return;\n    }\n\n    // Verificar se há cache válido (com versão)\n    const cacheKey = `${escola_id}_v${cacheVersion}`;\n    if (cacheRef.current[cacheKey]) {\n      console.log('Usando cache para escola', escola_id);\n      setImagens(cacheRef.current[cacheKey]);\n      setLoading(false);\n      return;\n    }\n\n    const buscarImagens = async () => {\n      console.log('Buscando imagens para escola', escola_id);\n      \n      try {\n        // Usar a mesma abordagem do painel de edição: listar arquivos do bucket\n        const { data: files, error } = await supabase.storage\n          .from('imagens-das-escolas')\n          .list(`${escola_id}/`);\n\n        if (error) {\n          throw error;\n        }\n\n        if (!files || files.length === 0) {\n          console.log('Nenhum arquivo encontrado para escola', escola_id);\n          setImagens([]);\n          setLoading(false);\n          return;\n        }\n\n        console.log('Arquivos encontrados:', files.length);\n\n        // Processar cada arquivo encontrado\n        const imagensEncontradas = await Promise.all(\n          files.map(async (file, index) => {\n            const filePath = `${escola_id}/${file.name}`;\n            const { data: { publicUrl } } = supabase.storage\n              .from('imagens-das-escolas')\n              .getPublicUrl(filePath);\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              console.log('Buscando legenda para:', filePath);\n              legenda = await getLegendaByImageUrl(filePath, escola_id, 'escola');\n              console.log('Legenda encontrada:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda para', filePath, ':', error);\n            }\n\n            return {\n              id: `${escola_id}-${file.name}`,\n              publicURL: publicUrl,\n              descricao: legenda?.legenda || `Imagem ${index + 1}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n              urlError: null,\n            };\n          })\n        );\n\n        console.log('Imagens processadas:', imagensEncontradas.length);\n        \n        // Salvar no cache com versão\n        cacheRef.current[cacheKey] = imagensEncontradas;\n        setImagens(imagensEncontradas);\n        \n        if (imagensEncontradas.length === 0) {\n          setError('Nenhuma imagem encontrada para esta escola.');\n        }\n      } catch (error) {\n        console.error('Erro ao processar imagens:', error);\n        setError('Erro ao carregar imagens da escola.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarImagens();\n  }, [escola_id, cacheVersion]);\n\n  if (loading) {\n    return (\n      <div className=\"text-gray-500 flex items-center gap-2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n        Carregando imagens da escola...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-red-600 flex items-center gap-2\">\n        <span>{error}</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (!imagens.length) {\n    return (\n      <div className=\"text-yellow-700 flex items-center gap-2\">\n        <span>Nenhuma imagem encontrada para esta escola.</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.descricao}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.descricao && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.descricao}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n            alt={imagemZoom.descricao}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.descricao && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.descricao}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagensdasEscolas.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagensdasEscolas);\n","import React, { memo } from 'react';\nimport ImagensdasEscolas from '../ImagensdasEscolas';\n\nconst HistoriaEscola = memo(({ escola, refreshKey = 0 }) => {\n  if (!escola?.historia_da_escola) return null;\n\n  return (\n    <article\n      className={`\n        mt-8 mb-12\n        max-w-4xl mx-auto\n        prose\n        prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900\n        prose-p:text-green-800\n        prose-p:leading-relaxed\n        prose-p:text-justify\n        prose-img:rounded-xl\n        prose-img:shadow-lg\n        prose-a:text-green-700\n        prose-a:no-underline\n        prose-a:border-b-2\n        prose-a:border-green-100\n        prose-a:transition-colors\n        hover:prose-a:border-green-600\n        bg-white\n        rounded-2xl\n        px-4 sm:px-6 md:px-8 py-6\n        shadow-lg\n      `}\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center gap-3 mb-3 sm:mb-4\">\n          <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n            <img \n              src={`${process.env.PUBLIC_URL}/onca.svg`} \n              alt=\"Ícone de onça\" \n              className=\"w-32 h-32 sm:w-36 sm:h-36\" \n              style={{ filter: 'none', borderRadius: '0', boxShadow: 'none', marginTop: '80px' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n          <h2 className=\"text-xl sm:text-2xl font-bold text-green-900 m-0\">\n            História da Escola\n          </h2>\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      <div className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {escola.historia_da_escola}\n      </div>\n\n      {/* Imagens da escola, responsivas e modulares */}\n      <ImagensdasEscolas escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriaEscola; ","import React, { memo } from 'react';\n\nconst BooleanValue = memo(({ value }) => {\n  if (value === undefined || value === null) return null;\n\n  return (\n    <span className={`font-medium ${value ? 'text-green-600' : 'text-neutral-400'}`}>\n      {value ? 'Sim' : 'Não'}\n    </span>\n  );\n});\n\nexport default BooleanValue; ","import React, { memo, useState } from 'react';\nimport { Sparkles, BookOpen, Users, MessageCircle, Clock } from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../../components/BooleanValue';\n\n// Função utilitária para transformar o texto em lista\nfunction parseModalidadeEnsino(text) {\n  if (!text || typeof text !== 'string') return [];\n  // Divide pelo traço longo (–, U+2013) e remove espaços extras\n  return text\n    .split('–')\n    .map(item => item.trim())\n    .filter(Boolean);\n}\n\n// Componente de lista expansível\nconst ExpandableList = ({ items, maxVisible = 3 }) => {\n  if (!items || items.length === 0) return null;\n\n  return (\n    <div className=\"-mt-1\">\n      <ul className=\"list-none text-gray-800 text-xs pl-0 ml-0\">\n        {items.map((item, idx) => (\n          <li key={idx} className=\"leading-tight m-0 p-0 pl-0 ml-0 flex items-start\">\n            <span className=\"mr-1 text-green-700 select-none\" style={{minWidth: '1em', display: 'inline-block'}}>•</span>\n            <span>{item}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// MiniCard padronizado\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium p-0 m-0\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Modalidades = memo(({ escola }) => {\n  if (!escola) return null;\n\n  // Cards principais de Modalidades\n  const turnosValue = escola.turnos_funcionamento || escola['turnos_funcionamento'] || '';\n  const modalidadeList = parseModalidadeEnsino(escola.modalidade_ensino);\n  \n  // Card de Modalidade de Ensino (separado para ocupar linha inteira)\n  const modalidadeEnsinoCard = {\n    icon: Sparkles,\n    label: 'Modalidade de Ensino',\n    value: <ExpandableList items={modalidadeList} maxVisible={3} />,\n  };\n\n  // Outros cards para o grid\n  const gridItems = [\n    turnosValue && {\n      icon: Clock,\n      label: 'Turnos de Funcionamento',\n      value: turnosValue,\n    },\n    {\n      icon: Users,\n      label: 'Número de Alunos',\n      value: escola.numero_alunos,\n    },\n    {\n      icon: MessageCircle,\n      label: 'Línguas Faladas',\n      value: escola.linguas_faladas,\n    },\n  ].filter(Boolean);\n\n  // Cards de Materiais Pedagógicos\n  const materiaisItems = [\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Não Indígena',\n      value: <BooleanValue value={escola.material_nao_indigena} />,\n    },\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Indígena',\n      value: <BooleanValue value={escola.material_indigena} />,\n    },\n  ];\n\n  return (\n    <>\n      <InfoSection title=\"Modalidades\" icon={Sparkles}>\n        {/* Modalidade de Ensino em linha inteira */}\n        <div className=\"mb-4 bg-green-100 rounded-lg p-2\">\n          <ExpandableList items={modalidadeList} maxVisible={3} />\n        </div>\n        \n        {/* Grid com os outros cards */}\n        <div\n          className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\"\n        >\n          {gridItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n      \n      <InfoSection \n        title=\"Materiais Pedagógicos\" \n        icon={BookOpen}\n        description=\"Diferenciados e não diferenciados, produzidos dentro e fora da comunidade.\"\n      >\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\">\n          {materiaisItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default Modalidades; ","import React, { memo } from 'react';\nimport {\n  Home,\n  Droplet,\n  Trash2,\n  Wifi,\n  Monitor,\n  MapPin,\n  Utensils,\n  Apple,\n  ChefHat,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../BooleanValue';\n\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Infraestrutura = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const items = [\n    {\n      icon: Droplet,\n      label: 'Acesso à Água',\n      value: escola.acesso_agua,\n    },\n    {\n      icon: Trash2,\n      label: 'Coleta de Lixo',\n      value: escola.coleta_lixo,\n    },\n    {\n      icon: Wifi,\n      label: 'Acesso à Internet',\n      value: <BooleanValue value={escola.acesso_internet} />,\n    },\n    {\n      icon: Monitor,\n      label: 'Equipamentos Tecnológicos',\n      value: escola.equipamentos,\n    },\n    {\n      icon: MapPin,\n      label: 'Modo de Acesso à Escola',\n      value: escola.modo_acesso,\n    },\n    {\n      icon: Utensils,\n      label: 'Cozinha',\n      value: <BooleanValue value={escola.cozinha} />,\n    },\n    {\n      icon: Apple,\n      label: 'Merenda Escolar',\n      value: <BooleanValue value={escola.merenda_escolar} />,\n    },\n    {\n      icon: ChefHat,\n      label: 'Merenda Diferenciada',\n      value: <BooleanValue value={escola.diferenciada} />,\n    },\n  ];\n\n  return (\n    <InfoSection title=\"Infraestrutura\" icon={Home}>\n      {escola.espaco_escolar && (\n        <div className=\"p-2 text-sm text-gray-800 border-b border-gray-200 whitespace-pre-wrap\">\n          {escola.espaco_escolar}\n        </div>\n      )}\n      <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-3 [&>*]:bg-green-100\">\n        {items.map((item, idx) => (\n          <MiniCard\n            key={idx}\n            icon={item.icon}\n            label={item.label}\n            value={item.value}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default Infraestrutura;\n","import React, { memo } from 'react';\nimport {\n  UsersRound,\n  Star,\n  User,\n  UserCheck,\n  UserMinus,\n  MessageCircle,\n  NotebookPen,\n  Check,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst MiniCard = ({ icon: Icon, label, value, description }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium mt-0.5\">{value}</div>\n      {description && (\n        <div className=\"text-xs text-gray-600 mt-1 whitespace-pre-line\">\n          {description}\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nconst formatarNomeProfessor = (nome) => {\n  if (!nome) return nome;\n\n  const padroesIndigenas = [\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+\\(([^)]+)\\)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+-\\s+([^)]+)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+ou\\s+([^)]+)/,\n  ];\n\n  for (const padrao of padroesIndigenas) {\n    const match = nome.match(padrao);\n    if (match) {\n      const nomeIndigena = `${match[1]} ${match[2]}`;\n      const nomePortugues = match[3];\n      return `${nomeIndigena} (${nomePortugues})`;\n    }\n  }\n\n  return nome.includes('(') && nome.includes(')') ? nome : nome;\n};\n\nconst formatarFormacaoProfessores = (formacao) => {\n  if (!formacao) return null;\n\n  const [status, ...resto] = formacao.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst formatarFormacaoContinuada = (valor) => {\n  if (!valor) return null;\n\n  const [status, ...resto] = valor.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst renderBooleanStatus = (valor) => {\n  const normalizado = String(valor).trim().toLowerCase();\n  if (normalizado === 'sim') {\n    return (\n      <div className=\"flex items-center gap-1 text-green-700\">\n        <Check className=\"w-5 h-5\" />\n        Sim\n      </div>\n    );\n  } else if (normalizado === 'não' || normalizado === 'nao') {\n    return (\n      <div className=\"flex items-center gap-1 text-gray-500\">\n        <X className=\"w-5 h-5\" />\n        Não\n      </div>\n    );\n  }\n  return valor;\n};\n\nconst GestaoProfessores = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const formacao = formatarFormacaoProfessores(escola.formacao_professores);\n  const continuada = formatarFormacaoContinuada(escola.formacao_continuada);\n\n  return (\n    <InfoSection title=\"Gestores\" icon={UsersRound}>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 mt-1 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={UserCheck}\n          label=\"Professores Indígenas\"\n          value={escola.professores_indigenas}\n        />\n        <MiniCard\n          icon={UserMinus}\n          label=\"Professores Não Indígenas\"\n          value={escola.professores_nao_indigenas}\n        />\n        <MiniCard\n          icon={MessageCircle}\n          label=\"Professores que falam língua indígena\"\n          value={renderBooleanStatus(escola.professores_falam_lingua)}\n        />\n        {formacao?.status && (\n          <MiniCard\n            icon={Star}\n            label=\"Formação dos Professores\"\n            value={renderBooleanStatus(formacao.status)}\n            description={formacao.descricao}\n          />\n        )}\n      </div>\n\n      <div className=\"space-y-2 mt-4 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={User}\n          label=\"Gestão/Nome\"\n          value={escola.gestao}\n        />\n        <MiniCard\n          icon={UsersRound}\n          label=\"Outros Funcionários\"\n          value={escola.outros_funcionarios}\n        />\n        {continuada?.status && (\n          <MiniCard\n            icon={NotebookPen}\n            label=\"Visitas de Supervisores e Formação Continuada\"\n            value={renderBooleanStatus(continuada.status)}\n            description={continuada.descricao}\n          />\n        )}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default GestaoProfessores;\n","import React, { memo } from 'react';\nimport {\n  Target,\n  BookOpen,\n  GraduationCap,\n  Users,\n  Heart,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst ProjectCard = ({ icon: Icon, label, value }) => {\n  const isNegative = value?.trim().toLowerCase() === 'não';\n\n  return (\n    <div className=\"flex items-start gap-4 rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow duration-200\">\n      <div className=\"mt-1\">\n        <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      </div>\n      <div className=\"flex-1 space-y-1\">\n        <div className=\"text-sm font-semibold text-gray-800\">{label}</div>\n        {isNegative ? (\n          <div className=\"text-sm text-gray-400 flex items-center gap-1\">\n            <X className=\"w-5 h-5 text-gray-400\" />\n            Não\n          </div>\n        ) : (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProjetosParcerias = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const projectsData = [\n    {\n      field: 'projetos_andamento',\n      icon: BookOpen,\n      label: 'Projetos em andamento',\n    },\n    {\n      field: 'parcerias_universidades',\n      icon: GraduationCap,\n      label: 'Parcerias com universidades',\n    },\n    {\n      field: 'acoes_ongs',\n      icon: Users,\n      label: 'Ações com ONGs ou coletivos',\n    },\n    {\n      field: 'desejos_comunidade',\n      icon: Heart,\n      label: 'Desejos da comunidade para a escola',\n    },\n    {\n      field: 'parcerias_municipio',\n      icon: Target,\n      label: 'Parcerias com o município',\n    },\n  ];\n\n  const availableProjects = projectsData.filter(\n    project => escola[project.field] && escola[project.field].trim()\n  );\n\n  if (availableProjects.length === 0) return null;\n\n  return (\n    <InfoSection title=\"Projetos e Parcerias\" icon={Target}>\n      <div className=\"grid grid-cols-1 gap-3 [&>*]:bg-green-100\">\n        {availableProjects.map((project) => (\n          <ProjectCard\n            key={project.field}\n            icon={project.icon}\n            label={project.label}\n            value={escola[project.field]}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default ProjetosParcerias;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { supabase } from '../../../supabaseClient';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { X } from 'lucide-react';\n\nconst ImagemHistoriadoProfessor = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagemHistoriadoProfessor: refreshKey mudou, forçando recarga');\n      setImagens([]);\n      setLoading(true);\n      setError(null);\n    }\n  }, [refreshKey]);\n\n  useEffect(() => {\n    if (!escola_id) return;\n\n    setLoading(true);\n    setError(null);\n\n    // Busca arquivos do bucket diretamente\n    supabase\n      .storage\n      .from('imagens-professores')\n      .list(`${escola_id}/`)\n      .then(async ({ data, error }) => {\n        if (error) {\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n\n        if (data && data.length > 0) {\n          console.log('Arquivos de professores encontrados:', data.length);\n          const imagensComUrl = await Promise.all(data.map(async (file, idx) => {\n            const { data: { publicUrl } } = supabase\n              .storage\n              .from('imagens-professores')\n              .getPublicUrl(`${escola_id}/${file.name}`);\n            \n            // Extrair gênero do nome do arquivo\n            let genero = 'professor';\n            if (file.name.startsWith('professora_')) {\n              genero = 'professora';\n            } else if (file.name.startsWith('professor_')) {\n              genero = 'professor';\n            }\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              const caminhoRelativo = `${escola_id}/${file.name}`;\n              console.log('Buscando legenda para professor:', caminhoRelativo);\n              legenda = await getLegendaByImageUrl(caminhoRelativo, escola_id, 'professor');\n              console.log('Legenda encontrada para professor:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda:', error);\n            }\n\n            return {\n              id: idx + 1,\n              publicURL: publicUrl,\n              genero,\n              nome: file.name,\n              created_at: file.created_at || '',\n              legenda: legenda?.legenda || `Imagem do ${genero}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n            };\n          }));\n          setImagens(imagensComUrl);\n        } else {\n          setImagens([]);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(`Erro inesperado: ${err.message}`);\n        setLoading(false);\n      });\n  }, [escola_id]);\n\n  if (loading) {\n    return <div className=\"text-gray-500\">Carregando imagens do professor...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-600\">Erro ao carregar imagens: {error}</div>;\n  }\n\n  if (!imagens.length) {\n    return null;\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.legenda}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.legenda && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.legenda}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n              alt={imagemZoom.legenda}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.legenda && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.legenda}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagemHistoriadoProfessor.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagemHistoriadoProfessor);\n","import { supabase } from '../supabaseClient';\n\n// Configurações para imagens das histórias do professor\nconst HISTORIA_PROFESSOR_CONFIG = {\n  BUCKET_NAME: 'historia-professor-imagens',\n  MAX_FILE_SIZE: 5 * 1024 * 1024, // 5MB\n  ALLOWED_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\n  MAX_IMAGES_PER_HISTORIA: 1,\n  MIN_DIMENSIONS: { width: 200, height: 200 }\n};\n\n/**\n * Valida um arquivo de imagem\n * @param {File} file - Arquivo a ser validado\n * @returns {Object} Resultado da validação\n */\nconst validateImageFile = (file) => {\n  // Verificar tipo MIME\n  if (!HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.includes(file.type)) {\n    return {\n      isValid: false,\n      error: `Tipo de arquivo não suportado. Use apenas: ${HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1].toUpperCase()).join(', ')}`\n    };\n  }\n\n  // Verificar tamanho\n  if (file.size > HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE) {\n    return {\n      isValid: false,\n      error: `Arquivo muito grande. Tamanho máximo: ${HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE / (1024 * 1024)}MB`\n    };\n  }\n\n  // Verificar extensão\n  const extension = file.name.split('.').pop().toLowerCase();\n  const allowedExtensions = HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1]);\n  if (!allowedExtensions.includes(extension)) {\n    return {\n      isValid: false,\n      error: `Extensão não permitida. Use apenas: ${allowedExtensions.join(', ')}`\n    };\n  }\n\n  return { isValid: true };\n};\n\n/**\n * Valida dimensões da imagem (opcional)\n * @param {File} file - Arquivo de imagem\n * @returns {Promise<boolean>} Se as dimensões são válidas\n */\nconst validateImageDimensions = (file) => {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => {\n      const isValid = img.width >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.width &&\n                     img.height >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.height;\n      resolve(isValid);\n    };\n    img.onerror = () => resolve(false);\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n/**\n * Gera nome único para o arquivo\n * @param {File} file - Arquivo\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @returns {string} Nome único do arquivo\n */\nconst generateUniqueFileName = (file, escolaId, historiaId) => {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 8);\n  const extension = file.name.split('.').pop().toLowerCase();\n  return `historia_${historiaId}_${timestamp}_${random}.${extension}`;\n};\n\n/**\n * Buscar todas as histórias do professor de uma escola\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Array>} Lista de histórias\n */\nexport const getHistoriasProfessor = async (escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('ordem', { ascending: true })\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      throw error;\n    }\n\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Adicionar URLs públicas das imagens\n    const historiasComImagens = data.map((historia) => {\n      if (historia.imagem_url) {\n        try {\n          const { data: { publicUrl } } = supabase.storage\n            .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n            .getPublicUrl(historia.imagem_url);\n\n          return { ...historia, imagem_public_url: publicUrl };\n        } catch (err) {\n          return { ...historia, imagem_public_url: null, urlError: err.message };\n        }\n      }\n      return historia;\n    });\n\n    return historiasComImagens;\n\n  } catch (error) {\n    console.error('Erro ao buscar histórias do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Criar nova história do professor\n * @param {Object} historiaData - Dados da história\n * @returns {Promise<Object>} História criada\n */\nexport const createHistoriaProfessor = async (historiaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .insert([{\n        escola_id: historiaData.escola_id,\n        nome_professor: historiaData.nome_professor || null,\n        historia: historiaData.historia,\n        ordem: historiaData.ordem || 1,\n        ativo: historiaData.ativo !== false\n      }])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao criar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar história do professor\n * @param {number} historiaId - ID da história\n * @param {Object} historiaData - Dados atualizados\n * @returns {Promise<Object>} História atualizada\n */\nexport const updateHistoriaProfessor = async (historiaId, historiaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .update({\n        nome_professor: historiaData.nome_professor,\n        historia: historiaData.historia,\n        ordem: historiaData.ordem,\n        ativo: historiaData.ativo,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao atualizar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessor = async (historiaId) => {\n  try {\n    // Deletar a história\n    const { error: deleteError } = await supabase\n      .from('historias_professor')\n      .delete()\n      .eq('id', historiaId);\n\n    if (deleteError) {\n      throw deleteError;\n    }\n  } catch (error) {\n    console.error('Erro ao deletar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Upload de imagem para uma história do professor\n * @param {File} file - Arquivo de imagem\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @param {string} descricao - Descrição da imagem\n * @returns {Promise<Object>} Dados da imagem salva\n */\nexport const uploadHistoriaProfessorImage = async (file, escolaId, historiaId, descricao = '') => {\n  try {\n    // Validar arquivo\n    const validation = validateImageFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n\n    // Validar dimensões (opcional)\n    const hasValidDimensions = await validateImageDimensions(file);\n    if (!hasValidDimensions) {\n      console.warn('Imagem com dimensões menores que o recomendado');\n    }\n\n    // Gerar nome único\n    const fileName = generateUniqueFileName(file, escolaId, historiaId);\n    const filePath = `${escolaId}/${fileName}`;\n\n    // Upload ao bucket\n    const { error: uploadError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .upload(filePath, file, {\n        cacheControl: '3600',\n        upsert: false\n      });\n\n    if (uploadError) {\n      throw new Error(`Erro no upload: ${uploadError.message}`);\n    }\n\n    // Obter URL pública\n    const { data: { publicUrl } } = supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .getPublicUrl(filePath);\n\n    // Atualizar a história com a URL da imagem\n    const { data: historia, error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: descricao.trim() || null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (updateError) {\n      // Se falhar ao atualizar, deletar o arquivo\n      await supabase.storage\n        .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n        .remove([filePath]);\n      throw new Error(`Erro ao salvar metadados: ${updateError.message}`);\n    }\n\n    return {\n      id: historia.id,\n      descricao_imagem: historia.descricao_imagem\n    };\n\n  } catch (error) {\n    console.error('Erro no upload da imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar imagem de uma história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessorImage = async (historiaId) => {\n  try {\n    // Buscar a história para obter a URL da imagem\n    const { data: historia, error: fetchError } = await supabase\n      .from('historias_professor')\n      .select('imagem_url')\n      .eq('id', historiaId)\n      .single();\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!historia.imagem_url) {\n      return; // Não há imagem para deletar\n    }\n\n    // Atualizar a história removendo a referência da imagem\n    const { error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId);\n\n    if (updateError) {\n      throw updateError;\n    }\n\n    // Deletar arquivo do storage\n    const { error: storageError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .remove([historia.imagem_url]);\n\n    if (storageError) {\n      console.warn('Erro ao deletar imagem do storage:', storageError);\n    }\n\n  } catch (error) {\n    console.error('Erro ao deletar imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Migrar dados existentes da tabela escolas_completa\n * @returns {Promise<Object>} Resultado da migração\n */\nexport const migrarDadosExistentes = async () => {\n  try {\n    // Buscar escolas com história do professor\n    const { data: escolas, error: fetchError } = await supabase\n      .from('escolas_completa')\n      .select('id, historia_do_prof')\n      .not('historia_do_prof', 'is', null)\n      .neq('historia_do_prof', '');\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!escolas || escolas.length === 0) {\n      return { migradas: 0, mensagem: 'Nenhuma história para migrar' };\n    }\n\n    // Inserir histórias na nova tabela\n    const historiasParaInserir = escolas.map(escola => ({\n      escola_id: escola.id,\n      historia: escola.historia_do_prof,\n      ordem: 1,\n      ativo: true,\n      created_at: new Date().toISOString()\n    }));\n\n    const { data: historiasInseridas, error: insertError } = await supabase\n      .from('historias_professor')\n      .insert(historiasParaInserir)\n      .select();\n\n    if (insertError) {\n      throw insertError;\n    }\n\n    return {\n      migradas: historiasInseridas.length,\n      mensagem: `${historiasInseridas.length} histórias migradas com sucesso`\n    };\n\n  } catch (error) {\n    console.error('Erro na migração de dados:', error);\n    throw error;\n  }\n};\n\n/**\n * Verificar se uma escola tem histórias do professor\n * @param {number} escolaId - ID da escola\n * @returns {Promise<boolean>} Se tem histórias\n */\nexport const escolaTemHistoriasProfessor = async (escolaId) => {\n  try {\n    const { count, error } = await supabase\n      .from('historias_professor')\n      .select('*', { count: 'exact', head: true })\n      .eq('escola_id', escolaId)\n      .eq('ativo', true);\n\n    if (error) {\n      throw error;\n    }\n\n    return (count || 0) > 0;\n\n  } catch (error) {\n    console.error('Erro ao verificar histórias do professor:', error);\n    return false;\n  }\n}; ","import React, { memo, useEffect, useState, useCallback } from 'react';\nimport { ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { getHistoriasProfessor } from '../../../../services/historiaProfessorService';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\n\nconst HistoriadoProfessor = memo(({ escola, refreshKey = 0 }) => {\n  const [historias, setHistorias] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentHistoriaIndex, setCurrentHistoriaIndex] = useState(0);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        fecharZoom();\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Carregar histórias do professor\n  useEffect(() => {\n    if (!escola?.id) {\n      setLoading(false);\n      return;\n    }\n    const carregarHistorias = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await getHistoriasProfessor(escola.id);\n        setHistorias(data || []);\n        setCurrentHistoriaIndex(0);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    carregarHistorias();\n  }, [escola?.id, refreshKey]);\n\n  // Navegação entre histórias\n  const nextHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev < historias.length - 1 ? prev + 1 : 0\n    );\n  }, [historias.length]);\n\n  const prevHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev > 0 ? prev - 1 : historias.length - 1\n    );\n  }, [historias.length]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (historias.length <= 1) return;\n      if (e.key === 'ArrowRight') {\n        nextHistoria();\n      } else if (e.key === 'ArrowLeft') {\n        prevHistoria();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [historias.length, nextHistoria, prevHistoria]);\n\n  if (loading) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-green-100/50\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando histórias do professor...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-red-100/50\">\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600\">Erro ao carregar histórias do professor: {error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!historias.length) {\n    return null;\n  }\n\n  const currentHistoria = historias[currentHistoriaIndex];\n  const hasMultipleHistorias = historias.length > 1;\n\n  return (\n    <article\n      className=\"\n        mt-8 mb-12 max-w-4xl mx-auto\n        px-4 sm:px-6 md:px-8 py-6\n        bg-white rounded-2xl shadow-lg\n        prose prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n        prose-img:rounded-xl prose-img:shadow-lg\n        prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n      \"\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n              <img \n                src={`${process.env.PUBLIC_URL}/passaro.svg`} \n                alt=\"Ícone de pássaro\" \n                className=\"w-12 h-12 sm:w-24 sm:h-24\" \n                style={{ \n                  filter: 'none', \n                  borderRadius: '0', \n                  boxShadow: 'none', \n                  margin: '0',\n                  padding: '0',\n                  border: 'none',\n                  outline: 'none'\n                }}\n                aria-hidden=\"true\"\n              />\n            </span>\n            <h2 className=\"text-xl sm:text-2xl font-bold text-black m-0\">\n              História dos Professores\n            </h2>\n          </div>\n          {hasMultipleHistorias && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span>{currentHistoriaIndex + 1} de {historias.length}</span>\n            </div>\n          )}\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      {/* Conteúdo da história atual */}\n      <section className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {currentHistoria.nome_professor && (\n          <h3 className=\"text-lg sm:text-xl font-semibold text-green-800 mb-4\">\n            {currentHistoria.nome_professor}\n          </h3>\n        )}\n        <div>{currentHistoria.historia}</div>\n        {currentHistoria.imagem_public_url && (\n          <figure className=\"my-6\">\n            <div className=\"relative\">\n              <img\n                src={currentHistoria.imagem_public_url}\n                alt={currentHistoria.descricao_imagem || 'Imagem da história do professor'}\n                className=\"w-full max-w-2xl mx-auto rounded-xl shadow-lg cursor-pointer transition-transform duration-200 hover:scale-105\"\n                onClick={() => setImagemZoom(currentHistoria)}\n                loading=\"lazy\"\n              />\n              {currentHistoria.descricao_imagem && (\n                <figcaption className=\"text-center text-sm text-gray-600 mt-2\">\n                  {currentHistoria.descricao_imagem}\n                </figcaption>\n              )}\n            </div>\n          </figure>\n        )}\n      </section>\n\n      {/* Navegação entre histórias */}\n      {hasMultipleHistorias && (\n        <div className=\"flex items-center justify-between mt-8 pt-6 border-t border-gray-200\">\n          <button\n            onClick={prevHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"História anterior\"\n          >\n            <ChevronLeft className=\"w-5 h-5\" />\n            <span className=\"hidden sm:inline\">Anterior</span>\n          </button>\n          <div className=\"flex gap-2\">\n            {historias.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentHistoriaIndex(index)}\n                className={`w-3 h-3 rounded-full border-2 ${index === currentHistoriaIndex ? 'bg-green-600 border-green-600' : 'bg-white border-gray-300'} transition-colors`}\n                aria-label={`Ir para história ${index + 1}`}\n              />\n            ))}\n          </div>\n          <button\n            onClick={nextHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"Próxima história\"\n          >\n            <span className=\"hidden sm:inline\">Próxima</span>\n            <ChevronRight className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Modal de zoom da imagem */}\n      {imagemZoom && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-80\" onClick={fecharZoom}>\n          <div className=\"relative max-w-3xl w-full p-4\" onClick={e => e.stopPropagation()}>\n            <button\n              className=\"absolute top-2 right-2 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-80\"\n              onClick={fecharZoom}\n              aria-label=\"Fechar zoom\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <img\n              src={imagemZoom.imagem_public_url}\n              alt={imagemZoom.descricao_imagem || 'Imagem da história do professor'}\n              className=\"w-full max-h-[80vh] object-contain rounded-xl shadow-2xl\"\n            />\n            {imagemZoom.descricao_imagem && (\n              <figcaption className=\"text-center text-base text-gray-200 mt-4\">\n                {imagemZoom.descricao_imagem}\n              </figcaption>\n            )}\n          </div>\n        </div>\n      )}\n\n      <ImagemHistoriadoProfessor escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriadoProfessor;\n","import React, { memo } from 'react';\n\n// Import all section components\nimport BasicInfo from './BasicInfo';\nimport HistoriaEscola from './HistoriaEscola';\n// import PovosLinguas from './PovosLinguas';\nimport Modalidades from './Modalidades';\nimport Infraestrutura from './Infraestrutura';\nimport GestaoProfessores from './GestaoProfessores';\nimport ProjetosParcerias from './ProjetosParcerias';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport HistoriadoProfessor from './HistoriadoProfessor';\n\n// CSS para layout Masonry real usando CSS columns\nconst masonryStyles = `\n  .masonry-grid {\n    column-count: 1;\n    column-gap: 1.5rem;\n    column-fill: balance;\n  }\n  \n  .masonry-grid > * {\n    display: block;\n    break-inside: avoid;\n    page-break-inside: avoid;\n    margin-bottom: 1.5rem;\n  }\n  \n  /* Mobile: 1 coluna */\n  @media (max-width: 767px) {\n    .masonry-grid {\n      column-count: 1;\n    }\n  }\n  \n  /* Tablet e Desktop: 2 colunas */\n  @media (min-width: 768px) {\n    .masonry-grid {\n      column-count: 2;\n    }\n  }\n`;\n\n// Componente wrapper para o grid\nconst GridLayoutWrapper = memo(({ children, shouldUseGrid }) => {\n  const containerClasses = shouldUseGrid\n    ? 'masonry-grid'\n    : 'space-y-4';\n\n  return (\n    <>\n      <style>{masonryStyles}</style>\n      <div className={`${containerClasses} transition-all duration-300 ease-in-out`}>\n        {children}\n      </div>\n    </>\n  );\n});\n\nconst EscolaInfo = memo(({ escola, shouldUseGrid = false, refreshKey = 0 }) => {\n  console.log(\"EscolaInfo recebeu:\", escola);\n  \n  if (!escola) {\n    console.log(\"EscolaInfo: escola é null ou undefined\");\n    return null;\n  }\n\n  // Componentes que serão renderizados no grid\n  const gridSections = [\n    { Component: BasicInfo, props: { escola } },\n    // { Component: PovosLinguas, props: { escola } },\n    { Component: Modalidades, props: { escola } },\n    { Component: Infraestrutura, props: { escola } },\n    { Component: GestaoProfessores, props: { escola } },\n    { Component: ProjetosParcerias, props: { escola } }\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Grid de cards */}\n      <GridLayoutWrapper shouldUseGrid={shouldUseGrid}>\n        {gridSections.map(({ Component, props }, index) => (\n          <Component key={index} {...props} />\n        ))}\n      </GridLayoutWrapper>\n\n      {/* História da Escola em destaque */}\n      <HistoriaEscola escola={escola} refreshKey={refreshKey} />\n      <HistoriadoProfessor escola={escola} refreshKey={refreshKey} />\n    </div>\n  );\n});\n\nexport default EscolaInfo; ","import React from 'react';\n\nconst HandFistIcon = ({ className = 'w-5 h-5', ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 256 256\"\n    fill=\"currentColor\"\n    className={className}\n    {...props}\n  >\n    <path d=\"M200,80H184V64a32,32,0,0,0-56-21.13A32,32,0,0,0,72.21,60.42,32,32,0,0,0,24,88v40a104,104,0,0,0,208,0V112A32,32,0,0,0,200,80ZM152,48a16,16,0,0,1,16,16V80H136V64A16,16,0,0,1,152,48ZM88,64a16,16,0,0,1,32,0v40a16,16,0,0,1-32,0ZM40,88a16,16,0,0,1,32,0v16a16,16,0,0,1-32,0Zm176,40a88,88,0,0,1-175.92,3.75A31.93,31.93,0,0,0,80,125.13a31.93,31.93,0,0,0,44.58,3.35,32.21,32.21,0,0,0,11.8,11.44A47.88,47.88,0,0,0,120,176a8,8,0,0,0,16,0,32,32,0,0,1,32-32,8,8,0,0,0,0-16H152a16,16,0,0,1-16-16V96h64a16,16,0,0,1,16,16Z\" />\n  </svg>\n);\n\nexport default HandFistIcon; ","import React, { memo } from 'react';\n\nconst InfoItem = memo(({ label, value, className = '', isTextArea = false }) => {\n  if (!value) return null;\n\n  const isFlexLayout = className.includes('flex flex-col');\n  const baseClasses = isFlexLayout \n    ? 'flex flex-col gap-1 text-sm py-0.5'\n    : 'grid grid-cols-[auto,1fr] gap-x-2 text-sm py-0.5';\n\n  return (\n    <div className={`${baseClasses} ${className}`}>\n      <span className=\"font-medium text-neutral-800\">{label}:</span>\n      {isTextArea ? (\n        <div className=\"text-neutral-600\">\n          <div className=\"whitespace-pre-wrap break-words text-sm leading-relaxed\">\n            {value}\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-neutral-600 break-words\">{value}</span>\n      )}\n    </div>\n  );\n});\n\nexport default InfoItem; ","import React, { memo } from 'react';\nimport HandFistIcon from './icons/HandFistIcon';\nimport InfoSection from './components/InfoSection';\nimport InfoItem from './components/InfoItem';\n\n// Wrapper para passar className maior ao ícone\nconst LargeHandFistIcon = (props) => <HandFistIcon className=\"w-8 h-8\" {...props} />;\n\nconst TerraIndigenaInfo = memo(({ terraIndigena }) => {\n  if (!terraIndigena) {\n    console.log(\"TerraIndigenaInfo: terraIndigena é null ou undefined\");\n    return null;\n  }\n\n  const formatarSuperficie = () => {\n    return terraIndigena.superficie ? \n      `Superfície: ${parseFloat(terraIndigena.superficie).toFixed(2)} ha` : null;\n  };\n\n  const formatarLocalizacao = () => {\n    return `${terraIndigena.municipio || ''}, ${terraIndigena.uf || ''}`.trim();\n  };\n\n  return (\n    <InfoSection title=\"Informações da Terra Indígena\" icon={LargeHandFistIcon}>\n      <InfoItem label=\"Povos Indígenas\" value={terraIndigena.etnia} />\n      <InfoItem label=\"Localização\" value={formatarLocalizacao()} />\n      <InfoItem label=\"Superfície\" value={formatarSuperficie()} />\n      <InfoItem label=\"Fase\" value={terraIndigena.fase} />\n      <InfoItem label=\"Modalidade\" value={terraIndigena.modalidade} />\n      <InfoItem label=\"Reestudo\" value={terraIndigena.reestudo} />\n      <InfoItem label=\"Coordenação Regional\" value={terraIndigena.cr} />\n      <InfoItem label=\"Faixa de Fronteira\" value={terraIndigena.faixa_fron} />\n      <InfoItem label=\"Unidade Administrativa\" value={terraIndigena.undadm_nom} />\n      <InfoItem label=\"Sigla Unidade\" value={terraIndigena.undadm_sig} />\n      <InfoItem label=\"Domínio\" value={terraIndigena.dominio_un} />\n      <InfoItem label=\"Data de Atualização\" value={terraIndigena.data_atual} />\n      <InfoItem label=\"Código Terra Indígena\" value={terraIndigena.terrai_cod} />\n      <InfoItem label=\"Código Unidade Administrativa\" value={terraIndigena.undadm_cod} />\n    </InfoSection>\n  );\n});\n\nexport default TerraIndigenaInfo; ","import React, { useState } from \"react\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n  LinkedinIcon,\n} from \"react-share\";\n\n// Componente Tooltip simples\nconst Tooltip = ({ children, text, position = \"top\" }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n  };\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      onFocus={() => setIsVisible(true)}\n      onBlur={() => setIsVisible(false)}\n    >\n      {children}\n      {isVisible && (\n        <div className={`\n          absolute z-50 px-2 py-1 text-xs text-white bg-gray-900 rounded shadow-lg whitespace-nowrap\n          ${positionClasses[position]}\n        `}>\n          {text}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShareButton = ({ onClick, url, title, description = \"\" }) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    } catch (err) {\n      // Fallback para navegadores mais antigos\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 2000);\n    }\n  };\n\n  // Frases de compartilhamento mais atrativas\n  const shareTextOptions = [\n    `Conheça a escola indígena: ${title}`,\n    `Descubra esta escola indígena: ${title}`,\n    `Escola indígena incrível: ${title}`,\n    `Educação indígena em destaque: ${title}`,\n    `Conheça esta escola: ${title}`,\n    `Escola indígena que inspira: ${title}`,\n    `Educação que transforma: ${title}`,\n    `Escola indígena de referência: ${title}`\n  ];\n\n  // Seleciona uma frase aleatória para variar o conteúdo\n  const randomIndex = Math.floor(Math.random() * shareTextOptions.length);\n  const shareText = shareTextOptions[randomIndex];\n  const shareUrl = url || window.location.href;\n\n  return (\n    <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n      <div className=\"mt-2 space-y-1\">\n        {/* Botão Copiar Link */}\n        <Tooltip text={copied ? \"Link copiado!\" : \"Copiar link para clipboard\"}>\n          <button\n            onClick={handleCopyLink}\n            className={`\n              w-full flex items-start gap-2 p-1.5 rounded-md transition-colors\n              focus:outline-none focus:ring-1 focus:ring-green-500\n              ${copied\n                ? 'bg-green-100'\n                : 'bg-green-100 hover:bg-green-200'\n              }\n            `}\n            aria-label=\"Copiar link para clipboard\"\n          >\n            <svg \n              className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" \n              />\n            </svg>\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700\">\n                {copied ? 'Link Copiado' : 'Copiar Link'}\n              </div>\n            </div>\n          </button>\n        </Tooltip>\n\n        {/* Botão WhatsApp */}\n        <Tooltip text=\"Compartilhar no WhatsApp\">\n          <WhatsappShareButton\n            url={shareUrl}\n            title={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no WhatsApp\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <WhatsappIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">WhatsApp</div>\n              </div>\n            </div>\n          </WhatsappShareButton>\n        </Tooltip>\n\n        {/* Botão Facebook */}\n        <Tooltip text=\"Compartilhar no Facebook\">\n          <FacebookShareButton\n            url={shareUrl}\n            quote={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no Facebook\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <FacebookIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Facebook</div>\n              </div>\n            </div>\n          </FacebookShareButton>\n        </Tooltip>\n\n        {/* Botão Twitter */}\n        <Tooltip text=\"Compartilhar no Twitter\">\n          <TwitterShareButton\n            url={shareUrl}\n            title={shareText}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no Twitter\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <TwitterIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Twitter</div>\n              </div>\n            </div>\n          </TwitterShareButton>\n        </Tooltip>\n\n        {/* Botão LinkedIn */}\n        <Tooltip text=\"Compartilhar no LinkedIn\">\n          <LinkedinShareButton\n            url={shareUrl}\n            title={title}\n            summary={description}\n            className=\"w-full transition-colors focus:outline-none focus:ring-1 focus:ring-green-500 rounded-md\"\n            aria-label=\"Compartilhar no LinkedIn\"\n          >\n            <div className=\"flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md\">\n              <LinkedinIcon size={20} round={false} className=\"mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">LinkedIn</div>\n              </div>\n            </div>\n          </LinkedinShareButton>\n        </Tooltip>\n\n        {/* Botão Compartilhar Nativo (fallback) */}\n        {navigator.share && (\n          <Tooltip text=\"Compartilhar usando opções do sistema\">\n            <button\n              onClick={onClick}\n              className=\"w-full flex items-start gap-2 p-1.5 bg-green-100 hover:bg-green-200 rounded-md transition-colors focus:outline-none focus:ring-1 focus:ring-green-500\"\n              aria-label=\"Compartilhar usando opções do sistema\"\n            >\n              <svg \n                className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" \n                />\n              </svg>\n              <div className=\"flex-1\">\n                <div className=\"text-xs font-medium text-gray-700\">Compartilhar</div>\n              </div>\n            </button>\n          </Tooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ShareButton);","import React, { memo } from 'react';\nimport ShareButton from '../ShareButton';\n\nconst ShareSection = memo(({ copiarLink, compartilhar, painelInfo }) => {\n  // Gerar URL customizada para compartilhamento\n  const gerarLinkCustomizado = () => {\n    if (!painelInfo?.titulo) return window.location.href;\n    \n    const criarSlug = (texto) => {\n      return texto\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim();\n    };\n\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  return (\n    <ShareButton \n      onClick={compartilhar}\n      url={gerarLinkCustomizado()}\n      title={painelInfo?.titulo || 'Painel de Escola Indígena'}\n      description={painelInfo?.descricao || 'Confira informações sobre esta escola indígena no Observatório de Professores Indígenas.'}\n    />\n  );\n});\n\nexport default ShareSection; ","import React, { useMemo } from \"react\";\nimport DOMPurify from \"dompurify\";\n\n/**\n * Componente PainelDescricao - Exibe conteúdo formatado com sanitização HTML\n * \n * @param {Object} props - Propriedades do componente\n * @param {string} props.descricao - Texto HTML ou texto puro a ser exibido\n * @param {string} props.className - Classes CSS adicionais (opcional)\n * @returns {React.ReactElement|null} - Componente renderizado ou null\n */\nconst PainelDescricao = ({ descricao, className = \"\" }) => {\n  // Função para formatar o texto com quebras de linha\n  const formatText = (text) => {\n    if (!text) return \"\";\n    \n    // Preserva parágrafos convertendo linhas duplas em tags <p>\n    let formattedText = text.replace(/\\n\\n+/g, \"</p><p>\");\n    \n    // Substitui quebras de linha simples por <br>\n    formattedText = formattedText.replace(/\\n/g, \"<br>\");\n    \n    // Adiciona tags <p> no início e fim se não existirem\n    if (!formattedText.startsWith(\"<p>\")) {\n      formattedText = \"<p>\" + formattedText;\n    }\n    if (!formattedText.endsWith(\"</p>\")) {\n      formattedText = formattedText + \"</p>\";\n    }\n    \n    // Remove espaços extras entre tags HTML\n    formattedText = formattedText.replace(/>\\s+</g, \"><\");\n    \n    return formattedText;\n  };\n\n  // Usa useMemo para evitar sanitização redundante em re-renders\n  const sanitizedHTML = useMemo(() => {\n    if (!descricao) return \"\";\n    \n    return DOMPurify.sanitize(formatText(descricao), {\n      ALLOWED_TAGS: [\n        'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li',\n        'div', 'span', 'img', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n        'center', 'blockquote', 'code', 'pre', 'hr', 'table', 'thead', \n        'tbody', 'tr', 'th', 'td'\n      ],\n      ALLOWED_ATTR: [\n        'href', 'target', 'rel', 'class', 'style', 'src', 'alt',\n        'width', 'height', 'id', 'title', 'aria-label', 'aria-describedby'\n      ],\n      ADD_TAGS: ['center', 'blockquote'],\n      ADD_ATTR: ['target', 'className', 'title'],\n      KEEP_CONTENT: true,\n      ALLOW_DATA_ATTR: false\n    });\n  }, [descricao]);\n\n  if (!descricao) return null;\n\n  return (\n    <div className={`mb-6 ${className}`}>\n      <div\n        className=\"prose prose-lg lg:prose-xl max-w-none px-1\"\n        style={{\n          '--tw-prose-body': '#1f2937',\n          '--tw-prose-headings': '#111827',\n          '--tw-prose-links': '#059669',\n          '--tw-prose-bold': '#111827',\n          '--tw-prose-counters': '#1f2937',\n          '--tw-prose-bullets': '#4b5563',\n          '--tw-prose-hr': '#e5e7eb',\n          '--tw-prose-quotes': '#111827',\n          '--tw-prose-quote-borders': '#10b981',\n          '--tw-prose-captions': '#6b7280',\n          '--tw-prose-code': '#111827',\n          '--tw-prose-pre-code': '#e5e7eb',\n          '--tw-prose-pre-bg': '#1f2937',\n          '--tw-prose-th-borders': '#d1d5db',\n          '--tw-prose-td-borders': '#e5e7eb',\n          lineHeight: '1.8',\n          fontSize: '1.125rem',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n          letterSpacing: '0.015em',\n        }}\n        dangerouslySetInnerHTML={{ __html: sanitizedHTML }}\n        aria-live=\"polite\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PainelDescricao);","import React, { memo } from 'react';\nimport PainelDescricao from '../PainelDescricao';\n\nconst IntroPanel = memo(({ painelInfo }) => (\n  <div className=\"space-y-6\">\n    <div className=\"prose prose-lg lg:prose-xl max-w-none\">\n      <div className=\"bg-green-100 rounded-lg p-6\">\n        <PainelDescricao descricao={painelInfo.descricao_detalhada} />\n      </div>\n    </div>\n    {painelInfo.audioUrl && (\n      <div className=\"mt-6\">\n        <audio controls className=\"w-full\">\n          <source src={painelInfo.audioUrl} type=\"audio/mpeg\" />\n          Seu navegador não suporta o elemento de áudio.\n        </audio>\n      </div>\n    )}\n  </div>\n));\n\nexport default IntroPanel; ","import React from \"react\";\nimport { X, Maximize2, Minimize2 } from \"lucide-react\";\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\nconst PainelHeader = ({ titulo, closePainel, toggleMaximize, isMaximized }) => {\n  const isMobile = window.innerWidth <= 768;\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const isVerySmallLandscape = isMobileLandscape && window.innerWidth <= 850;\n\n  return (\n    <header className={`relative px-3 sm:px-4 md:px-6 lg:px-8 py-3 sm:py-4 md:py-6 border-b border-green-100 ${isMobileLandscape ? 'min-h-[60px]' : ''}`}>\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between pr-12\">\n        <h2 \n          id=\"painel-titulo\"\n          className={`font-semibold text-gray-900 leading-tight tracking-normal break-words ${\n            isVerySmallLandscape\n              ? 'text-base' // Força fonte menor em paisagem muito estreita\n              : isMobileLandscape \n                ? 'text-lg sm:text-xl' \n                : 'text-xl sm:text-2xl md:text-3xl'\n          }`}\n          style={isVerySmallLandscape ? { fontSize: 'clamp(1rem, 4vw, 1.25rem)' } : {}}\n        >\n          {capitalizeWords(titulo)}\n        </h2>\n      </div>\n\n      <div className=\"absolute top-2 sm:top-4 right-2 sm:right-4 flex items-center gap-2\">\n        {!isMobile && (\n          <button\n            onClick={toggleMaximize}\n            className=\"p-2 text-green-700 hover:text-green-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            aria-label={isMaximized ? \"Restaurar painel\" : \"Maximizar painel\"}\n            title={isMaximized ? \"Restaurar\" : \"Maximizar\"}\n          >\n            {isMaximized ? (\n              <Minimize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            ) : (\n              <Maximize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            )}\n          </button>\n        )}\n\n        <button\n          onClick={closePainel}\n          className={`text-gray-700 hover:text-gray-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 ${\n            isMobileLandscape ? 'p-1.5' : 'p-2'\n          }`}\n          aria-label=\"Fechar painel\"\n        >\n          <X \n            size={isMobileLandscape ? 18 : 20} \n            aria-hidden=\"true\"\n            className=\"stroke-2\"\n          />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default PainelHeader;\n","import { useState, useEffect } from \"react\";\n\nconst usePainelVisibility = (painelInfo) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  console.log(\"usePainelVisibility - painelInfo:\", painelInfo);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileWidth = window.innerWidth <= 768;\n      const isMobileLandscape = window.innerWidth > window.innerHeight && window.innerWidth <= 1024;\n      setIsMobile(isMobileWidth || isMobileLandscape);\n    };\n    \n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    window.addEventListener(\"orientationchange\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n      window.removeEventListener(\"orientationchange\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.group(\"usePainelVisibility - Effect\");\n    console.log(\"painelInfo recebido:\", painelInfo);\n    \n    if (painelInfo && typeof painelInfo === 'object') {\n      console.log(\"painelInfo válido, definindo visibilidade como true\");\n      setIsVisible(true);\n      document.body.style.overflow = \"hidden\";\n    } else {\n      console.log(\"painelInfo inválido ou undefined, definindo visibilidade como false\");\n      setIsVisible(false);\n      document.body.style.overflow = \"\";\n    }\n\n    console.log(\"Estado atual:\", { isVisible, isMobile });\n    console.groupEnd();\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [painelInfo]);\n\n  console.log(\"usePainelVisibility - returning state:\", { isVisible, isMobile });\n\n  return { isVisible, isMobile };\n};\n\nexport default usePainelVisibility;","import React from 'react';\nimport PainelHeader from '../../PainelHeader';\nimport usePainelVisibility from '../../hooks/usePainelVisibility';\nimport { usePainelDimensions } from '../../hooks/usePainelDimensions';\n\nconst PainelContainer = ({ \n  painelInfo, \n  closePainel, \n  children,\n  isMaximized,\n  onToggleMaximize\n}) => {\n  const { isVisible, isMobile } = usePainelVisibility(painelInfo);\n  const painelDimensions = usePainelDimensions(isMobile, isMaximized);\n\n  if (!painelInfo) return null;\n\n  // Determinar altura da navbar baseada no tamanho da tela\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n\n  const baseClasses = `\n    fixed\n    ${isMobile \n      ? `inset-x-0 top-0 w-full h-full` \n      : 'top-30 bottom-0 right-0 w-full sm:w-3/4 lg:w-[49%] h-auto'\n    }\n    rounded-t-xl shadow-xl z-[9999] transform transition-all duration-500 ease-in-out\n    bg-white border-t-4 border-white\n  `;\n  \n  const visibilityClasses = isVisible \n    ? isMobile \n      ? \"translate-y-0 opacity-100\" \n      : \"translate-y-0 opacity-100\"\n    : isMobile \n      ? \"translate-y-full opacity-0\" \n      : \"translate-y-full opacity-0\";\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-labelledby=\"painel-titulo\"\n      aria-describedby=\"painel-descricao\"\n      aria-modal=\"true\"\n      className={`${baseClasses} ${visibilityClasses}${isMobile ? ' painel-informacoes-mobile' : ''}`}\n      style={{\n        height: painelDimensions.height,\n        maxHeight: painelDimensions.maxHeight,\n        width: isMobile ? '100%' : painelDimensions.width,\n        top: isMobile ? `${navbarHeight}px` : 72,\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...(isMobile && {\n          borderRadius: painelDimensions.isMobileLandscape ? '0' : '1rem 1rem 0 0',\n          boxShadow: painelDimensions.isMobileLandscape \n            ? '0 0 0 0' \n            : '0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06)'\n        })\n      }}\n    >\n      <PainelHeader \n        titulo={painelInfo.titulo} \n        closePainel={closePainel}\n        toggleMaximize={onToggleMaximize}\n        isMaximized={isMaximized}\n      />\n      \n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-green-600/40 scrollbar-track-green-50/20\">\n        <div className={`${isMobile ? 'p-3 sm:p-4' : 'p-6'} space-y-6 sm:space-y-8`}>\n          <div className=\"prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PainelContainer); ","import { useState, useEffect, useMemo } from 'react';\n\nexport const usePainelDimensions = (isMobile, isMaximized) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  \n  // Breakpoints para responsividade\n  const breakpoints = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    '2xl': 1536\n  };\n\n  // Detectar mudanças no tamanho da janela\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular dimensões base\n  const dimensions = useMemo(() => {\n    // Determinar altura da navbar baseada na orientação\n    const isMobileLandscape = isMobile && windowWidth > windowHeight;\n    const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n    const baseHeight = `calc(100vh - ${navbarHeight}px)`;\n    const baseMaxHeight = isMobile ? \"96vh\" : \"92vh\";\n\n    // Determinar se está em modo desktop\n    const isDesktop = windowWidth >= breakpoints.md;\n    \n    // Determinar se deve usar grid\n    const shouldUseGrid = isDesktop && isMaximized;\n\n    // Calcular largura do painel\n    let panelWidth;\n    if (isMobile) {\n      if (isMobileLandscape) {\n        // Mobile na horizontal: preencher toda a tela\n        panelWidth = '100%';\n      } else {\n        // Mobile na vertical: preencher toda a largura\n        panelWidth = '100%';\n      }\n    } else {\n      // Desktop\n      panelWidth = isMaximized \n      ? '100%' \n      : windowWidth >= breakpoints.lg \n        ? '49%' \n        : '75%';\n    }\n\n    return {\n      height: baseHeight,\n      maxHeight: baseMaxHeight,\n      width: panelWidth,\n      isDesktop,\n      isMobileLandscape,\n      shouldUseGrid,\n      breakpoints,\n      zIndex: 1000\n    };\n  }, [isMobile, isMaximized, windowWidth, windowHeight]);\n\n  return dimensions;\n};","import React, { useRef, useState, useEffect } from 'react';\n\n/**\n * DocumentViewer\n * Componente para exibir uma lista de documentos (PDFs) associados a uma escola.\n * Permite visualização via iframe (Google Drive/Docs) ou download externo, com tratamento de erros e fallback amigável.\n * Props:\n *   - documentos: Array de objetos { id, titulo, autoria, tipo, link_pdf }\n *   - title: string (opcional)\n */\n\n// Utility function to transform Google Drive links\nconst transformarLinkGoogleDrive = (link) => {\n  if (!link || typeof link !== 'string') return null;\n  \n  const match = link.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\n  if (!match) return null;\n  \n  const fileId = match[1];\n  return `https://docs.google.com/gview?url=https://drive.google.com/uc?id=${fileId}&embedded=true`;\n};\n\n/**\n * Componente de troca de visualização (lista/grade) acessível e reutilizável\n */\nconst ViewModeToggle = ({ viewMode, setViewMode }) => (\n  <div className=\"flex items-center gap-2\" role=\"tablist\" aria-label=\"Modos de visualização dos documentos\">\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'list'}\n      aria-label=\"Visualizar em lista\"\n      aria-pressed={viewMode === 'list'}\n      onClick={() => setViewMode('list')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'list'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de lista */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Lista</span>\n    </button>\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'grid'}\n      aria-label=\"Visualizar em grade\"\n      aria-pressed={viewMode === 'grid'}\n      onClick={() => setViewMode('grid')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'grid'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de grade */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Grade</span>\n    </button>\n  </div>\n);\n\nconst DocumentViewer = ({ documentos, title = \"Documentos\" }) => {\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [viewMode, setViewMode] = useState('list'); // 'list' ou 'grid'\n  const iframeRef = useRef(null);\n  const [iframeError, setIframeError] = useState(false);\n  const [useGoogleDocsViewer, setUseGoogleDocsViewer] = useState(false);\n\n  // Reset states when selected document changes\n  useEffect(() => {\n    if (selectedDoc) {\n      setIframeError(false);\n      setUseGoogleDocsViewer(false);\n    }\n  }, [selectedDoc]);\n\n  // Set first document as selected if none is selected\n  useEffect(() => {\n    if (!selectedDoc && documentos?.length > 0) {\n      setSelectedDoc(documentos[0]);\n    }\n  }, [documentos, selectedDoc]);\n\n  // Handle iframe events\n  useEffect(() => {\n    const iframe = iframeRef.current;\n    if (!iframe || !selectedDoc) return;\n\n    const handleLoad = () => {\n      setIframeError(false);\n    };\n\n    const handleError = () => {\n      setIframeError(true);\n      setUseGoogleDocsViewer(true);\n    };\n\n    iframe.addEventListener('load', handleLoad);\n    iframe.addEventListener('error', handleError);\n\n    return () => {\n      iframe.removeEventListener('load', handleLoad);\n      iframe.removeEventListener('error', handleError);\n    };\n  }, [selectedDoc]);\n\n  // Early return after all hooks\n  if (!documentos || documentos.length === 0) {\n    return null;\n  }\n\n  const renderDocumentGrid = () => {\n    return (\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n        {documentos.map((doc) => (\n          <div\n            key={doc.id}\n            className={`\n              flex flex-col justify-between h-full max-w-xs mx-auto\n              rounded-2xl transition-all duration-200 cursor-pointer\n              shadow-sm hover:shadow-lg\n              ${selectedDoc?.id === doc.id\n                ? 'bg-green-100 scale-[1.03]'\n                : 'bg-white hover:bg-green-50'\n              }\n            `}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            tabIndex={0}\n            aria-label={`Selecionar documento: ${doc.titulo}`}\n          >\n            <div className=\"p-5 flex-1 flex flex-col justify-between\">\n              <h4 className=\"font-semibold text-green-800 mb-2 line-clamp-2 text-lg\">{doc.titulo}</h4>\n              {doc.autoria && (\n                <p className=\"text-sm text-gray-600 mb-2 line-clamp-1\">Por: {doc.autoria}</p>\n              )}\n              {doc.tipo && (\n                <span className=\"inline-block px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                  {doc.tipo}\n                </span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentList = () => {\n    return (\n      <div className=\"space-y-2\">\n        {documentos.map((doc) => (\n          <button\n            key={doc.id}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            className={`w-full text-left p-3 rounded-lg transition-colors duration-200 ${\n              selectedDoc?.id === doc.id\n                ? 'bg-green-100'\n                : 'hover:bg-green-50'\n            }`}\n          >\n            <h4 className=\"font-medium text-green-800\">{doc.titulo}</h4>\n            {doc.autoria && (\n              <p className=\"text-sm text-gray-600\">Por: {doc.autoria}</p>\n            )}\n            {doc.tipo && (\n              <span className=\"inline-block mt-1 px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                {doc.tipo}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentViewer = () => {\n    if (!selectedDoc) return null;\n\n    const isGoogleDriveLink = selectedDoc.link_pdf.includes('drive.google.com/file/d/');\n\n    return (\n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        {isGoogleDriveLink ? (\n          <>\n            {!useGoogleDocsViewer ? (\n              <iframe \n                ref={iframeRef}\n                src={selectedDoc.link_pdf.replace('/view?usp=sharing', '/preview')}\n                width=\"100%\" \n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={selectedDoc.titulo}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            ) : (\n              <iframe\n                ref={iframeRef}\n                src={transformarLinkGoogleDrive(selectedDoc.link_pdf)}\n                width=\"100%\"\n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={`${selectedDoc.titulo} (Google Docs Viewer)`}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            )}\n            {iframeError && (\n              <div className=\"p-6 text-center text-gray-600 bg-green-100\">\n                <p className=\"mb-3 text-lg\">Não foi possível carregar o documento diretamente.</p>\n                <a\n                  href={selectedDoc.link_pdf}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n                >\n                  <svg \n                    className=\"w-5 h-5 mr-2\" \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path \n                      strokeLinecap=\"round\" \n                      strokeLinejoin=\"round\" \n                      strokeWidth={2} \n                      d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n                    />\n                  </svg>\n                  Abrir em nova aba\n                </a>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"flex justify-center p-6\">\n            <a\n              href={selectedDoc.link_pdf}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center px-6 py-3 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n            >\n              <svg \n                className=\"w-5 h-5 mr-2\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" \n                />\n              </svg>\n              Ver documento PDF\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold text-green-800\">{title}:</h3>\n        {documentos.length > 1 && (\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        )}\n      </div>\n      \n      {documentos.length > 1 && (\n        <div className=\"mb-6\">\n          {viewMode === 'grid' ? renderDocumentGrid() : renderDocumentList()}\n        </div>\n      )}\n      \n      {renderDocumentViewer()}\n    </div>\n  );\n};\n\nexport default React.memo(DocumentViewer); ","import React, { useState, useEffect } from 'react';\nimport { getTituloByVideoUrl } from '../../../services/legendasService';\n\n/**\n * VideoPlayer\n * Componente para exibir vídeos do YouTube de forma responsiva e acessível.\n * Faz extração do ID do vídeo a partir de diferentes formatos de URL e exibe fallback amigável em caso de erro.\n * Props:\n *   - videoUrl: string (URL do vídeo)\n *   - title: string (opcional)\n *   - escolaId: number (ID da escola para buscar título personalizado)\n */\n\n// Utility function to extract YouTube video ID\nconst extrairIdYoutube = (url) => {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  // Remove query parameters to simplify\n  const baseUrl = url.split('?')[0];\n\n  // Patterns to extract video ID\n  const patterns = [\n    /youtube\\.com\\/embed\\/([^/?&]+)/,                 // embed/ID\n    /youtube\\.com\\/watch\\?v=([^&]+)/,                 // watch?v=ID\n    /youtu\\.be\\/([^?&]+)/,                            // youtu.be/ID\n    /youtube\\.com\\/v\\/([^?&]+)/                       // youtube.com/v/ID\n  ];\n\n  for (const pattern of patterns) {\n    const match = baseUrl.match(pattern);\n    if (match && match[1]) {\n      return match[1];\n    }\n  }\n\n  return null;\n};\n\nconst VideoPlayer = ({ videoUrl, title = \"Vídeo\", escolaId }) => {\n  const [tituloPersonalizado, setTituloPersonalizado] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Buscar título personalizado da nova tabela\n  useEffect(() => {\n    const buscarTitulo = async () => {\n      if (!videoUrl || !escolaId) return;\n\n      try {\n        setLoading(true);\n        const titulo = await getTituloByVideoUrl(videoUrl, escolaId);\n        setTituloPersonalizado(titulo);\n      } catch (error) {\n        console.warn('Erro ao buscar título personalizado:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarTitulo();\n  }, [videoUrl, escolaId]);\n\n  if (!videoUrl) return null;\n\n  const videoId = extrairIdYoutube(videoUrl);\n  \n  if (!videoId) {\n    return (\n      <div className=\"mt-8 max-w-4xl mx-auto\">\n        <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n          {tituloPersonalizado?.titulo || title}:\n        </h3>\n        <div className=\"p-6 text-center text-gray-600 bg-gray-50 rounded-lg\">\n          <p className=\"mb-3 text-lg\">Link do vídeo inválido ou não suportado.</p>\n          <a\n            href={videoUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n          >\n            <svg \n              className=\"w-5 h-5 mr-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" \n              />\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \n              />\n            </svg>\n            Tentar abrir no YouTube\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n        {tituloPersonalizado?.titulo || title}:\n      </h3>\n      \n      {/* Informações adicionais do título personalizado */}\n      {tituloPersonalizado && (\n        <div className=\"mb-4 p-4 bg-green-100 rounded-lg\">\n          {tituloPersonalizado.descricao && (\n            <p className=\"text-gray-700 mb-2\">{tituloPersonalizado.descricao}</p>\n          )}\n          \n          <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n            {tituloPersonalizado.categoria && (\n              <span className=\"capitalize bg-green-200 text-green-800 px-2 py-1 rounded\">\n                {tituloPersonalizado.categoria}\n              </span>\n            )}\n            {tituloPersonalizado.plataforma && (\n              <span className=\"capitalize\">\n                {tituloPersonalizado.plataforma}\n              </span>\n            )}\n            {tituloPersonalizado.duracao && (\n              <span>Duração: {tituloPersonalizado.duracao}</span>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        <div className=\"relative pb-[56.25%] h-0\">\n          <iframe\n            className=\"absolute top-0 left-0 w-full h-full\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            title={tituloPersonalizado?.titulo || title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            loading=\"lazy\"\n            referrerPolicy=\"origin\"\n          />\n        </div>\n      </div>\n      \n      <div className=\"mt-4 text-center\">\n        <a\n          href={videoUrl}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-flex items-center text-green-700 hover:text-green-800 hover:underline\"\n        >\n          <svg \n            className=\"w-5 h-5 mr-2\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\" \n              strokeWidth={2} \n              d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n            />\n          </svg>\n          Ver vídeo no YouTube\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(VideoPlayer); ","import React, { useRef, useState, useEffect } from \"react\";\nimport { useShare } from \"../hooks/useShare\";\nimport { useDynamicURL } from \"../hooks/useDynamicURL\";\nimport { useClickOutside } from \"../hooks/useClickOutside\";\nimport useAudio from \"../hooks/useAudio\";\nimport useDocumentosEscola from \"../hooks/useDocumentosEscola\";\n\n// Import modular components\nimport EscolaInfo from \"./components/EscolaInfo\";\nimport TerraIndigenaInfo from \"./TerraIndigenaInfo\";\nimport ShareSection from \"./ShareSection\";\nimport IntroPanel from \"./IntroPanel\";\nimport PainelContainer from \"./components/PainelContainer\";\nimport DocumentViewer from \"./components/DocumentViewer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst PainelInformacoes = ({ painelInfo, closePainel, escola_id, refreshKey = 0 }) => {\n  const painelRef = useRef(null);\n  const [isMaximized, setIsMaximized] = useState(false);\n  \n  const { gerarLinkCustomizado, copiarLink, compartilhar } = useShare(painelInfo);\n  const { documentos } = useDocumentosEscola(painelInfo?.id);\n  \n  const toggleMaximize = () => setIsMaximized(prev => !prev);\n  \n  useDynamicURL(painelInfo, gerarLinkCustomizado);\n  useClickOutside(painelRef, closePainel);\n\n  // Forçar re-renderização quando refreshKey mudar\n  useEffect(() => {\n    console.log('PainelInformacoes: refreshKey mudou para', refreshKey);\n  }, [refreshKey]);\n\n  if (!painelInfo) {\n    return null;\n  }\n\n  // Determine panel type\n  const isTerraIndigena = painelInfo.tipo === 'terra_indigena';\n  const isIntro = painelInfo.titulo === 'Sobre o site';\n\n  const renderContent = () => {\n    if (isIntro) {\n      return <IntroPanel painelInfo={painelInfo} />;\n    }\n    \n    if (isTerraIndigena) {\n      return <TerraIndigenaInfo terraIndigena={painelInfo} />;\n    }\n\n    return (\n      <>\n        <EscolaInfo \n          escola={painelInfo} \n          shouldUseGrid={true}\n          refreshKey={refreshKey}\n        />\n        {documentos && documentos.length > 0 && (\n          <DocumentViewer \n            documentos={documentos}\n            title=\"Produções e materiais da escola\"\n          />\n        )}\n        {painelInfo.link_para_videos && (\n          <VideoPlayer \n            videoUrl={painelInfo.link_para_videos}\n            title=\"Vídeo da escola\"\n            escolaId={painelInfo.id}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div ref={painelRef}>\n      <PainelContainer\n        painelInfo={painelInfo}\n        closePainel={closePainel}\n        isMaximized={isMaximized}\n        onToggleMaximize={toggleMaximize}\n      >\n        {renderContent()}\n        <ShareSection \n          copiarLink={copiarLink} \n          compartilhar={compartilhar} \n          painelInfo={painelInfo}\n        />\n      </PainelContainer>\n    </div>\n  );\n};\n\nexport default React.memo(PainelInformacoes); ","import { criarSlug } from '../../utils/slug';\n\nexport const useShare = (painelInfo) => {\n  const gerarLinkCustomizado = () => {\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  const copiarLink = async () => {\n    const url = gerarLinkCustomizado();\n    try {\n      await navigator.clipboard.writeText(url);\n      alert(\"Link copiado!\");\n    } catch (err) {\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      alert(\"Link copiado!\");\n    }\n  };\n\n  const compartilhar = () => {\n    const url = gerarLinkCustomizado();\n    const texto = `Confira este painel: ${painelInfo.titulo}`;\n    \n    if (navigator.share) {\n      navigator.share({\n        title: painelInfo.titulo,\n        text: texto,\n        url: url,\n      });\n    } else {\n      window.open(\n        `https://twitter.com/intent/tweet?text=${encodeURIComponent(texto)}&url=${encodeURIComponent(url)}`,\n        \"_blank\"\n      );\n    }\n  };\n\n  return { gerarLinkCustomizado, copiarLink, compartilhar };\n};","import { useEffect } from \"react\";\n\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Só fecha se o clique for no mapa (leaflet-container)\n      let el = event.target;\n      let isMap = false;\n      while (el) {\n        if (\n          el.classList && el.classList.contains('leaflet-container')\n        ) {\n          isMap = true;\n          break;\n        }\n        if (\n          el.classList && el.classList.contains('ol-marker') ||\n          el.getAttribute?.('data-marker') === 'true' ||\n          el.getAttribute?.('data-map-marker') === 'true'\n        ) {\n          // Clique em marcador, não fecha\n          return;\n        }\n        el = el.parentElement;\n      }\n      if (isMap && ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    document.addEventListener(\"touchstart\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n      document.removeEventListener(\"touchstart\", handleClickOutside);\n    };\n  }, [ref, handler]);\n};","import { useEffect, useRef } from \"react\";\n\nexport const useDynamicURL = (painelInfo, gerarLinkCustomizado) => {\n  const lastUrlRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!painelInfo) return;\n\n    // Limpa o timeout anterior se existir\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Cria um novo timeout para debounce\n    timeoutRef.current = setTimeout(() => {\n      const newUrl = gerarLinkCustomizado();\n      \n      // Só atualiza se a URL realmente mudou\n      if (newUrl !== lastUrlRef.current) {\n        try {\n          window.history.replaceState({}, \"\", newUrl);\n          lastUrlRef.current = newUrl;\n        } catch (error) {\n          console.warn('Erro ao atualizar URL:', error);\n        }\n      }\n    }, 300); // 300ms de debounce\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [painelInfo, gerarLinkCustomizado]);\n};","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  const [initialPanelOpened, setInitialPanelOpened] = useState(!!initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Abrir painel automaticamente quando initialPanel for encontrado (apenas uma vez)\n  useEffect(() => {\n    if (initialPanel && !painelInfo && !initialPanelOpened) {\n      console.log('MapaEscolasIndigenas: Abrindo painel automaticamente para:', initialPanel.titulo);\n      setPainelInfo(initialPanel);\n      setInitialPanelOpened(true);\n    }\n  }, [initialPanel, painelInfo, initialPanelOpened]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        painelAberto={!!painelInfo}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","/**\n * Utility functions for text formatting\n */\n\n/**\n * Lista de siglas que devem permanecer em maiúsculas\n */\nconst SIGLAS_MAIUSCULAS = ['EE', 'EEI'];\n\n/**\n * Capitalizes the first letter of each word in a string, keeping specific acronyms in uppercase\n * @param {string} str - The string to capitalize\n * @returns {string} The capitalized string\n */\nexport const capitalizeWords = (str) => {\n  if (!str || typeof str !== 'string') return '';\n  \n  // Primeiro, divide a string em palavras\n  const words = str.split(/\\s+/);\n  \n  // Processa cada palavra\n  const processedWords = words.map(word => {\n    // Verifica se a palavra é uma sigla que deve permanecer em maiúsculas\n    if (SIGLAS_MAIUSCULAS.includes(word.toUpperCase())) {\n      return word.toUpperCase();\n    }\n    \n    // Para outras palavras, aplica a capitalização normal\n    return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n  });\n  \n  // Junta as palavras de volta em uma string\n  return processedWords.join(' ');\n}; \n\n/**\n * Normalizes an address string by capitalizing words and handling common address abbreviations\n * @param {string} address - The address string to normalize\n * @returns {string} The normalized address string\n */\nexport const normalizeAddress = (address) => {\n  if (!address || typeof address !== 'string') return '';\n\n  // Lista de abreviações comuns em endereços\n  const abbreviations = {\n    'r.': 'Rua',\n    'av.': 'Avenida',\n    'al.': 'Alameda',\n    'pr.': 'Praça',\n    'tr.': 'Travessa',\n    'rod.': 'Rodovia',\n    'est.': 'Estrada',\n    'n.': 'Número',\n    'nº': 'Número',\n    'apt.': 'Apartamento',\n    'bl.': 'Bloco',\n    'qd.': 'Quadra',\n    'lt.': 'Lote',\n    'km': 'KM',\n    's/n': 'S/N'\n  };\n\n  // Primeiro, substitui as abreviações\n  let normalized = address.toLowerCase();\n  Object.entries(abbreviations).forEach(([abbr, full]) => {\n    normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'g'), full);\n  });\n\n  // Depois aplica a capitalização de palavras\n  return capitalizeWords(normalized);\n}; ","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n}; "],"names":["addLegendaFoto","async","console","log","legenda","legendaData","_objectSpread","data","testData","error","testError","supabase","from","select","limit","code","warn","tipo_foto","columnError","insert","single","updateLegendaFoto","id","updates","update","eq","getLegendaByImageUrl","imagemUrl","escolaId","tipoFoto","arguments","length","undefined","query","caminhoRelativo","split","slice","join","query2","ilike","concat","data2","error2","getTituloByVideoUrl","videoUrl","testLegendasTable","tableData","tableError","structureData","structureError","tipoData","tipoError","testRecord","escola_id","imagem_url","descricao_detalhada","autor_foto","data_foto","categoria","ativo","created_at","Date","toISOString","updated_at","insertData","insertError","deleteError","delete","MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","React","props","ref","_jsx","className","terrasIndigenasStyle","feature","isRegularizada","getProperties","fase_ti","Style","fill","Fill","color","stroke","Stroke","width","lineDash","estadoSPStyle","createMarkerSVG","size","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","createMarkerStyle","showNomesEscolas","schoolData","get","svg","svgUrl","encodeURIComponent","style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","titulo","font","offsetY","textAlign","textBaseline","createClusterStyle","features","singleFeature","baseSize","Math","min","finalSize","round","fontSize","fontWeight","toString","proj4","defs","register","_ref","dataPoints","onPainelOpen","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","terrasIndigenasLayerRef","estadoSPLayerRef","handleMarkerClick","useCallback","event","isMobile","createBaseLayers","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createTooltipHTML","useEffect","current","isMobileDevice","initialCenter","initialZoom","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","f","zIndex","Map","target","layers","view","View","fromLonLat","enableRotation","controls","defaultControls","interactions","defaultInteractions","dragRotate","pinchRotate","on","getView","toLonLat","getCenter","newView","toFixed","getZoom","changed","forEachFeatureAtPixel","pixel","clusterExtent","getExtent","currentZoom","targetZoom","max","fit","duration","padding","tooltipElement","remove","createTooltipElement","createClusterTooltipElement","terraIndigenaInfo","type","element","document","createElement","content","backgroundColor","setAttribute","textContent","position","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","pointerEvents","boxShadow","border","backdropFilter","coordinate","getPixelFromCoordinate","left","top","appendChild","count","preventDefault","stopPropagation","setTarget","newCenter","newZoom","currentCenter","setCenter","setZoom","clear","pontosValidos","filter","point","latitude","longitude","parseFloat","isNaN","nearbyPairs","pontos","threshold","pairs","used","Set","i","has","j","p1","p2","latDiff","abs","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","findIndex","pair","includes","addFeature","setStyle","removeLayer","addLayer","clickTimeout","lastClickedFeature","clickCount","handleClick","clearTimeout","setTimeout","extent","un","GeoJSON","dataProjection","featureProjection","readFeatures","terrasIndigenasLayer","getSource","getFeatures","properties","terrai_nom","tipo","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","estadoSPLayer","interactive","MapWrapper","cache","useGeoJSONCache","key","setData","loading","setLoading","setError","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","crs","firstFeature","Object","keys","coordinates","err","fetchGeoJSON","painelAberto","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","terrasIndigenas","hasData","estadoSP","shouldReactivate","CabecalhoMenu","_ref2","onMinimize","_jsxs","children","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","criarSlug","texto","toLowerCase","normalize","replace","trim","documentos","setDocumentos","isLoading","setIsLoading","authData","authError","auth","getSession","temSessao","session","rlsData","rlsError","podeAcessar","message","details","hint","allDocs","allDocsError","doc","tipo_escola_id","valor_escola_id","order","ascending","dataAsNumber","errorAsNumber","Number","dataAsString","errorAsString","String","fetchDocumentos","InfoGrid","memo","columns","gap","InfoTable","row","value","InfoStats","_ref4","stats","stat","icon","InfoSection","_ref5","title","description","defaultCollapsed","layout","layoutProps","isCollapsed","setIsCollapsed","role","renderContent","capitalize","str","charAt","toUpperCase","CompactCard","Check","X","InfoBlock","AddressDetails","escola","logradouro","numero","bairro","cep","endereco","field","MapPin","estado","Boolean","MapButton","openMap","open","Navigation","SocialLinks","_ref6","links","expanded","onToggle","socialLinks","social","Globe","ChevronRight","link","href","rel","LinkIcon","ExternalLink","_ref7","setExpanded","toggle","basicInfoCards","Building","Calendar","ano_criacao","usa_redes_sociais","_Fragment","povos_indigenas","diretoria_ensino","links_redes_sociais","ImagensdasEscolas","refreshKey","imagens","setImagens","imagemZoom","setImagemZoom","cacheRef","cacheVersion","setCacheVersion","limparCacheERecarregar","fecharZoom","body","handleEsc","e","cacheKey","files","storage","list","imagensEncontradas","Promise","all","file","_legenda","_legenda2","_legenda3","_legenda4","_legenda5","filePath","name","publicUrl","getPublicUrl","publicURL","descricao","descricaoDetalhada","autor","dataFoto","urlError","buscarImagens","RefreshCw","img","alt","maxHeight","toLocaleDateString","historia_da_escola","marginTop","ExpandableList","items","maxVisible","idx","minWidth","display","MiniCard","turnosValue","turnos_funcionamento","modalidadeList","modalidade_ensino","Sparkles","gridItems","Clock","Users","numero_alunos","MessageCircle","linguas_faladas","materiaisItems","BookOpen","BooleanValue","material_nao_indigena","material_indigena","Droplet","acesso_agua","Trash2","coleta_lixo","Wifi","acesso_internet","Monitor","equipamentos","modo_acesso","Utensils","cozinha","Apple","merenda_escolar","ChefHat","diferenciada","Home","espaco_escolar","renderBooleanStatus","valor","normalizado","formacao","resto","formatarFormacaoProfessores","formacao_professores","continuada","formatarFormacaoContinuada","formacao_continuada","UsersRound","UserCheck","professores_indigenas","UserMinus","professores_nao_indigenas","professores_falam_lingua","Star","User","gestao","outros_funcionarios","NotebookPen","ProjectCard","isNegative","availableProjects","GraduationCap","Heart","Target","project","ImagemHistoriadoProfessor","then","imagensComUrl","genero","startsWith","nome","catch","HISTORIA_PROFESSOR_CONFIG","BUCKET_NAME","MAX_FILE_SIZE","ALLOWED_TYPES","MAX_IMAGES_PER_HISTORIA","MIN_DIMENSIONS","height","historias","setHistorias","currentHistoriaIndex","setCurrentHistoriaIndex","historia","imagem_public_url","getHistoriasProfessor","carregarHistorias","nextHistoria","prevHistoria","handleKeyDown","currentHistoria","hasMultipleHistorias","margin","outline","nome_professor","descricao_imagem","ChevronLeft","_","GridLayoutWrapper","shouldUseGrid","containerClasses","gridSections","Component","BasicInfo","Modalidades","Infraestrutura","GestaoProfessores","ProjetosParcerias","HistoriaEscola","HistoriadoProfessor","_objectWithoutProperties","_excluded","xmlns","viewBox","d","isTextArea","baseClasses","LargeHandFistIcon","HandFistIcon","terraIndigena","InfoItem","Tooltip","isVisible","setIsVisible","onMouseEnter","onMouseLeave","onFocus","onBlur","bottom","ShareButton","copied","setCopied","shareTextOptions","shareText","floor","random","shareUrl","location","navigator","clipboard","writeText","input","execCommand","removeChild","strokeLinecap","strokeLinejoin","strokeWidth","WhatsappShareButton","WhatsappIcon","FacebookShareButton","quote","FacebookIcon","TwitterShareButton","TwitterIcon","LinkedinShareButton","summary","LinkedinIcon","share","copiarLink","compartilhar","painelInfo","gerarLinkCustomizado","origin","pathname","PainelDescricao","sanitizedHTML","useMemo","DOMPurify","sanitize","formattedText","endsWith","formatText","ALLOWED_TAGS","ALLOWED_ATTR","ADD_TAGS","ADD_ATTR","KEEP_CONTENT","ALLOW_DATA_ATTR","lineHeight","letterSpacing","dangerouslySetInnerHTML","__html","audioUrl","closePainel","toggleMaximize","isMaximized","isMobileLandscape","innerHeight","isVerySmallLandscape","capitalizeWords","Minimize2","Maximize2","isMobileWidth","group","groupEnd","PainelContainer","onToggleMaximize","usePainelVisibility","painelDimensions","usePainelDimensions","windowWidth","setWindowWidth","windowHeight","setWindowHeight","breakpoints","sm","md","lg","xl","handleResize","baseHeight","isDesktop","panelWidth","navbarHeight","visibilityClasses","flexDirection","PainelHeader","transformarLinkGoogleDrive","match","fileId","ViewModeToggle","viewMode","setViewMode","tabIndex","DocumentViewer","selectedDoc","setSelectedDoc","iframeRef","iframeError","setIframeError","useGoogleDocsViewer","setUseGoogleDocsViewer","iframe","handleLoad","handleError","autoria","renderDocumentViewer","isGoogleDriveLink","link_pdf","allow","sandbox","VideoPlayer","tituloPersonalizado","setTituloPersonalizado","buscarTitulo","videoId","baseUrl","patterns","pattern","extrairIdYoutube","plataforma","duracao","frameBorder","allowFullScreen","referrerPolicy","PainelInformacoes","painelRef","setIsMaximized","alert","useShare","useDocumentosEscola","useClickOutside","handler","useDynamicURL","lastUrlRef","timeoutRef","newUrl","history","replaceState","handleClickOutside","el","isMap","_el$getAttribute","_el","_el$getAttribute2","_el2","classList","contains","getAttribute","call","parentElement","isTerraIndigena","isIntro","IntroPanel","TerraIndigenaInfo","EscolaInfo","link_para_videos","ShareSection","quantidade","exemplo","useRefresh","panel","URLSearchParams","search","initialPanel","find","setPainelInfo","initialPanelOpened","setInitialPanelOpened","escolasVisiveis","pontuacao","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","abrirPainel","info","refreshPainel","fecharPainel","MapSelector","SIGLAS_MAIUSCULAS","word","substr"],"sourceRoot":""}
{"version":3,"file":"static/js/214.61e08cff.chunk.js","mappings":"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","sources":["utils/mapConfig.js","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","components/detalhesInfo.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 4.5 // Zoom mais distante para visualização mais ampla\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point, LineString } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Circle, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile, MobileInteractionManager } from '../utils/mobileUtils';\n\n// Componentes GeoJSON\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para encontrar pares de marcadores próximos (adaptada do Leaflet)\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Mobile interaction manager\n  const mobileInteraction = useRef(new MobileInteractionManager());\n  const [tooltipElement, setTooltipElement] = useState(null);\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar estilo dos marcadores individuais\n  const createMarkerStyle = useCallback((feature) => {\n    try {\n      const schoolData = feature.get('schoolData');\n      if (!schoolData) return null;\n\n      const baseColor = '#3B82F6'; // Azul para satélite, violeta para rua\n      const borderColor = '#1E40AF';\n\n      // Verificar se é parte de um par próximo\n      const isNearbyPair = feature.get('isNearbyPair');\n      const pairIndex = feature.get('pairIndex');\n\n      // Usar a função createMarkerSVG para criar o marcador\n      const svg = createMarkerSVG(baseColor, 32, {\n        borderColor: borderColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: false,\n        isNearbyPair: isNearbyPair\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Criar estilo base com ícone\n      const style = new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: isNearbyPair ? 1.3 : 1.2, // Marcadores de pares próximos são ligeiramente maiores\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        })\n      });\n\n      // Adicionar texto apenas se showNomesEscolas for true\n      if (showNomesEscolas) {\n        style.setText(new Text({\n          text: schoolData.titulo || 'Escola',\n          font: 'bold 11px Arial',\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: isNearbyPair ? -50 : -40, // Ajustar posição para marcadores maiores\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }));\n      }\n\n      return style;\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do marcador:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [showNomesEscolas]);\n\n  // Função para criar estilo dos clusters\n  const createClusterStyle = useCallback((feature) => {\n    try {\n      const features = feature.get('features');\n      if (!features || features.length === 0) {\n        return null; // Return null for invalid features\n      }\n      \n      const size = features.length;\n\n      // Se for apenas um marcador, retorna estilo individual\n      if (size === 1) {\n        const singleFeature = features[0];\n        if (!singleFeature) return null;\n        return createMarkerStyle(singleFeature);\n      }\n\n      // Determinar cor e tamanho base baseado na quantidade de escolas\n      let baseColor = '#3B82F6';\n      let baseSize = 48; // Tamanho base para clusters\n      \n      if (size > 100) {\n        baseColor = '#1E40AF';\n        baseSize = 64;\n      } else if (size > 50) {\n        baseColor = '#2563EB';\n        baseSize = 56;\n      } else if (size > 20) {\n        baseColor = '#3B82F6';\n        baseSize = 52;\n      } else if (size > 10) {\n        baseColor = '#60A5FA';\n        baseSize = 50;\n      }\n\n      // Calcular escala proporcional (mínimo 1.2x, máximo 2.5x)\n      const scale = Math.min(1.2 + (size * 0.02), 2.5);\n      const finalSize = Math.round(baseSize * scale);\n\n      // Usar a função createMarkerSVG para criar o cluster\n      const svg = createMarkerSVG(baseColor, finalSize, {\n        borderColor: baseColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: size > 20, // Adicionar brilho para clusters grandes\n        isNearbyPair: false // Clusters não têm indicador de par próximo\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Determinar tamanho da fonte baseado no tamanho do cluster\n      let fontSize = '14px';\n      let fontWeight = 'bold';\n      \n      if (size > 100) {\n        fontSize = '18px';\n      } else if (size > 50) {\n        fontSize = '16px';\n      } else if (size > 20) {\n        fontSize = '15px';\n      }\n\n      return new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: 1,\n          anchor: [0.5, 0.5],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        }),\n        text: new Text({\n          text: size.toString(),\n          font: `${fontWeight} ${fontSize} Arial`,\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: finalSize * 0.6 // Posicionar texto abaixo do marcador\n        })\n      });\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do cluster:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [createMarkerStyle]);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Função para mostrar tooltip temporário em mobile\n  const showMobileTooltip = useCallback((event, content) => {\n    try {\n      if (!isMobile()) return;\n\n      console.log('OpenLayersMap: Mostrando tooltip mobile:', content);\n\n      // Remove tooltip anterior\n      if (tooltipElement) {\n        tooltipElement.remove();\n        setTooltipElement(null);\n      }\n\n      const element = document.createElement('div');\n      element.className = 'mobile-tooltip';\n      element.textContent = content;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';\n      element.style.color = 'white';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '6px';\n      element.style.fontSize = '14px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '250px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.3)';\n      element.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n      \n      if (map.current && event.coordinate) {\n        const coordinate = event.coordinate;\n        const pixel = map.current.getPixelFromCoordinate(coordinate);\n        if (pixel && mapContainer.current) {\n          element.style.left = (pixel[0] + 10) + 'px';\n          element.style.top = (pixel[1] - 10) + 'px';\n          \n          mapContainer.current.appendChild(element);\n          setTooltipElement(element);\n\n          // Auto-remove after 2 seconds\n          setTimeout(() => {\n            if (element.parentNode) {\n              element.remove();\n              setTooltipElement(null);\n            }\n          }, 2000);\n        }\n      }\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao mostrar tooltip mobile:', error);\n    }\n  }, [tooltipElement]);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações padrão\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(center),\n        zoom: zoom,\n        maxZoom: 18,\n        minZoom: 4\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions()\n    });\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              mobileInteraction.current.handleClick(\n                feature,\n                // First click - show name\n                () => showMobileTooltip(event, schoolData.titulo || 'Escola Indígena'),\n                // Second click - open panel\n                () => onPainelOpen?.(schoolData)\n              );\n            }\n          } else {\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            console.log(`OpenLayersMap: Cluster clicado com ${features.length} escolas`);\n            \n            // Calcular a extensão específica do cluster clicado\n            const clusterExtent = feature.getGeometry().getExtent();\n            \n            // Obter o zoom atual\n            const currentZoom = map.current.getView().getZoom();\n            \n            // Calcular zoom ideal baseado na quantidade de escolas no cluster\n            let targetZoom = 12; // Zoom padrão para clusters\n            if (features.length > 20) {\n              targetZoom = 10; // Zoom menor para clusters muito grandes\n            } else if (features.length > 10) {\n              targetZoom = 11; // Zoom médio para clusters grandes\n            } else if (features.length > 5) {\n              targetZoom = 12; // Zoom padrão para clusters médios\n            } else {\n              targetZoom = 13; // Zoom maior para clusters pequenos\n            }\n            \n            // Garantir que o zoom não seja menor que o atual (evitar zoom out)\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            \n            console.log(`OpenLayersMap: Fazendo zoom de ${currentZoom} para ${targetZoom}`);\n            \n            // Fazer zoom suave para a extensão do cluster\n            map.current.getView().fit(clusterExtent, {\n              duration: 800, // Animação mais suave\n              padding: [80, 80, 80, 80], // Padding maior para melhor visualização\n              maxZoom: targetZoom, // Limitar o zoom máximo\n              callback: () => {\n                console.log(`OpenLayersMap: Zoom concluído para cluster com ${features.length} escolas`);\n              }\n            });\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          if (schoolData) {\n            console.log('OpenLayersMap: Marcador individual clicado:', schoolData.titulo);\n            \n            // Verificar se é mobile\n            if (isMobile()) {\n              // Mobile: usar sistema de dois cliques\n              mobileInteraction.current.handleClick(\n                feature,\n                // First click - show name\n                () => {\n                  console.log('OpenLayersMap: Primeiro clique mobile - mostrando nome');\n                  showMobileTooltip(event, schoolData.titulo || 'Escola Indígena');\n                },\n                // Second click - open panel\n                () => {\n                  console.log('OpenLayersMap: Segundo clique mobile - abrindo painel');\n                  onPainelOpen?.(schoolData);\n                }\n              );\n            } else {\n              // Desktop: abrir painel diretamente\n              console.log('OpenLayersMap: Clique desktop - abrindo painel diretamente');\n              onPainelOpen?.(schoolData);\n            }\n          }\n        }\n      }\n    });\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n      if (tooltipElement) {\n        tooltipElement.remove();\n        setTooltipElement(null);\n      }\n      mobileInteraction.current.reset();\n    };\n  }, [createBaseLayers, createClusterStyle, createTooltipHTML, showMobileTooltip, onPainelOpen]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    console.log(`OpenLayersMap: Processando ${pontosValidos.length} marcadores válidos`);\n    console.log(`OpenLayersMap: Encontrados ${nearbyPairs.length} pares próximos`);\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        \n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        if (pairIndex !== -1) {\n          feature.set('isNearbyPair', true);\n          feature.set('pairIndex', pairIndex);\n        }\n        \n        vectorSource.current.addFeature(feature);\n      }\n    });\n\n    console.log(`OpenLayersMap: Adicionados ${pontosValidos.length} marcadores com clustering inteligente`);\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle(createClusterStyle);\n    }\n  }, [createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      console.log('OpenLayersMap: Atualizando estilo dos marcadores - showNomesEscolas:', showNomesEscolas);\n      vectorLayer.current.setStyle(createClusterStyle);\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n\n    console.log('OpenLayersMap: Recriando ClusterSource - showNomesEscolas:', showNomesEscolas);\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    console.log('OpenLayersMap: Gerenciando camadas GeoJSON:', {\n      showTerrasIndigenas,\n      showEstadoSP,\n      terrasIndigenasData: !!terrasIndigenasData,\n      estadoSPData: !!estadoSPData,\n      terrasFeatures: terrasIndigenasData?.features?.length || 0,\n      estadoFeatures: estadoSPData?.features?.length || 0,\n      mapLayers: map.current.getLayers().getLength()\n    });\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      console.log('OpenLayersMap: Adicionando camada Terras Indígenas');\n      console.log('OpenLayersMap: Dados Terras Indígenas:', {\n        type: terrasIndigenasData.type,\n        features: terrasIndigenasData.features?.length || 0,\n        crs: terrasIndigenasData.crs,\n        firstFeature: terrasIndigenasData.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades',\n          geometry: terrasIndigenasData.features[0].geometry ? {\n            type: terrasIndigenasData.features[0].geometry.type,\n            coordinates: terrasIndigenasData.features[0].geometry.coordinates ? \n              `${terrasIndigenasData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Terras Indígenas não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = terrasIndigenasData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada das Terras Indígenas:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        console.log('OpenLayersMap: Features lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: (feature) => {\n            const properties = feature.getProperties();\n            const isRegularizada = properties.fase_ti === 'Regularizada';\n            \n            return new Style({\n              fill: new Fill({\n                color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n              }),\n              stroke: new Stroke({\n                color: '#B22222',\n                width: 2,\n                lineDash: [3, 3]\n              })\n            });\n          },\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n        console.log('OpenLayersMap: Camada Terras Indígenas adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Terras Indígenas:', error);\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      console.log('OpenLayersMap: Adicionando camada Estado SP');\n      console.log('OpenLayersMap: Dados Estado SP:', {\n        type: estadoSPData.type,\n        features: estadoSPData.features?.length || 0,\n        crs: estadoSPData.crs,\n        firstFeature: estadoSPData.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades',\n          geometry: estadoSPData.features[0].geometry ? {\n            type: estadoSPData.features[0].geometry.type,\n            coordinates: estadoSPData.features[0].geometry.coordinates ? \n              `${estadoSPData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Estado SP não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = estadoSPData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada do Estado SP:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas Estado SP:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        console.log('OpenLayersMap: Features Estado SP lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature Estado SP processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: new Style({\n            fill: new Fill({\n              color: 'rgba(0, 0, 0, 0.3)'\n            }),\n            stroke: new Stroke({\n              color: '#000000',\n              width: 2\n            })\n          }),\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n        console.log('OpenLayersMap: Camada Estado SP adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Estado SP:', error);\n      }\n    }\n\n    console.log('OpenLayersMap: Finalização - Total de camadas no mapa:', map.current.getLayers().getLength());\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  // Adicionar event listeners para camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo && onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n    };\n  }, [onPainelOpen]);\n\n  return (\n    <div className={className} ref={mapContainer}>\n      {/* Informações do mapa */}\n      <div className=\"absolute bottom-4 left-4 z-10 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-xs text-gray-600\">\n          Lat: {mapInfo.lat} | Lng: {mapInfo.lng}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Zoom: {mapInfo.zoom}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","const detalhesIntro = {\n  titulo: \"Sobre o site\",\n  audioUrl: \"\",\n  descricao_detalhada: `Este é o OPIN (Observatório dos Professores Indígenas no Estado de São Paulo), que busca mapear as escolas indígenas no estado de São Paulo.\n`,\n  imagens: [\"\"]\n};\n\nexport default detalhesIntro;\n","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport detalhesIntro from \"./detalhesInfo\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || detalhesIntro;\n    }\n    return detalhesIntro;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n      \n      {/* Informações adicionais */}\n      <div className=\"absolute top-20 left-4 z-30 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-sm font-semibold text-gray-800\">\n          Escolas Indígenas: {totalEscolas}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Mapa otimizado sem gaps\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n// Mobile interaction state management\nexport class MobileInteractionManager {\n  constructor() {\n    this.lastClickedFeature = null;\n    this.clickTimeout = null;\n    this.clickDelay = 300; // Time in ms to wait for second click\n  }\n\n  handleClick(feature, onFirstClick, onSecondClick) {\n    if (!isMobile()) {\n      // Desktop behavior - direct action\n      onSecondClick(feature);\n      return;\n    }\n\n    // Mobile behavior - two-click pattern\n    if (this.lastClickedFeature === feature) {\n      // Second click on same feature\n      this.clearTimeout();\n      this.lastClickedFeature = null;\n      onSecondClick(feature);\n    } else {\n      // First click or click on different feature\n      if (this.lastClickedFeature) {\n        // Clear previous first click\n        this.clearTimeout();\n      }\n      \n      this.lastClickedFeature = feature;\n      onFirstClick(feature);\n      \n      // Set timeout to clear first click\n      this.clickTimeout = setTimeout(() => {\n        this.lastClickedFeature = null;\n      }, this.clickDelay);\n    }\n  }\n\n  clearTimeout() {\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n  }\n\n  reset() {\n    this.clearTimeout();\n    this.lastClickedFeature = null;\n  }\n} "],"names":["MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","proj4","defs","register","PROXIMITY_THRESHOLD","createMarkerSVG","color","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","_ref","dataPoints","onPainelOpen","className","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","showNomesEscolas","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","terrasIndigenasLayerRef","estadoSPLayerRef","mobileInteraction","MobileInteractionManager","tooltipElement","setTooltipElement","createBaseLayers","useCallback","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createMarkerStyle","feature","schoolData","get","svg","svgUrl","encodeURIComponent","style","Style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","titulo","font","fill","Fill","stroke","Stroke","width","offsetY","textAlign","textBaseline","error","console","createClusterStyle","features","singleFeature","baseSize","Math","min","finalSize","round","fontSize","fontWeight","toString","createTooltipHTML","showMobileTooltip","event","content","isMobile","log","remove","element","document","createElement","textContent","position","backgroundColor","padding","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","zIndex","pointerEvents","boxShadow","border","current","coordinate","pixel","getPixelFromCoordinate","left","top","appendChild","setTimeout","parentNode","useEffect","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","Map","target","layers","view","View","fromLonLat","controls","defaultControls","interactions","defaultInteractions","on","getView","toLonLat","getCenter","newView","toFixed","getZoom","changed","forEachFeatureAtPixel","handleClick","clusterExtent","getExtent","currentZoom","targetZoom","max","fit","duration","callback","setTarget","reset","clear","pontosValidos","filter","point","latitude","longitude","parseFloat","isNaN","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","abs","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","pairIndex","findIndex","pair","includes","addFeature","setStyle","removeLayer","addLayer","_terrasIndigenasData$","_estadoSPData$feature","terrasFeatures","estadoFeatures","mapLayers","getLayers","getLength","_terrasIndigenasData$2","_terrasIndigenasData$3","type","crs","firstFeature","properties","Object","keys","coordinates","coords","GeoJSON","dataProjection","featureProjection","readFeatures","extent","getProperties","terrasIndigenasLayer","isRegularizada","fase_ti","lineDash","getSource","getFeatures","terrai_nom","tipo","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","_estadoSPData$feature2","_estadoSPData$feature3","estadoSPLayer","interactive","terraIndigenaInfo","un","_jsx","ref","children","_jsxs","cache","useGeoJSONCache","key","data","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","err","fetchGeoJSON","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","terrasIndigenas","hasData","estadoSP","CabecalhoMenu","_ref2","onMinimize","onClick","BotaoCamada","_ref3","id","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","OpenLayersMap","audioUrl","descricao_detalhada","imagens","quantidade","exemplo","refreshKey","useRefresh","panel","useMemo","URLSearchParams","location","search","initialPanel","find","criarSlug","detalhesIntro","painelInfo","setPainelInfo","escolasVisiveis","pontuacao","totalEscolas","group","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","groupEnd","abrirPainel","info","refreshPainel","fecharPainel","MapSelector","_Fragment","PainelInformacoes","closePainel","constructor","this","lastClickedFeature","clickTimeout","clickDelay","onFirstClick","onSecondClick","clearTimeout"],"sourceRoot":""}
{"version":3,"file":"static/js/967.265d93ea.chunk.js","mappings":"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","sources":["components/PageHeader/index.js","services/csvDataService.js","hooks/useScrollAnimation.js","components/ScrollAnimatedWrapper.js","components/Charts/DistribuicaoAlunosModalidadeChart.js","components/Charts/DistribuicaoEscolasCombinadoChart.js","components/Charts/EquipamentosChart.js","components/Charts/EscolasPorDiretoriaChart.js","components/Charts/TiposEnsinoChart.js","components/Dashboard.js"],"sourcesContent":["import React from 'react';\n\nconst PageHeader = ({ \n  title, \n  description, \n  titleFontFamily = 'PapakiloLight, sans-serif',\n  titleSize = 'text-4xl md:text-5xl lg:text-6xl',\n  descriptionSize = 'text-sm md:text-base',\n  className = '',\n  children \n}) => {\n  return (\n    <div className={`bg-gradient-to-r from-green-800 to-green-700 text-white shadow-lg ${className}`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex items-center space-x-4\">\n          {/* Título da Página - Lado esquerdo */}\n          <div className=\"flex-shrink-0\">\n            <h1 \n              className={`text-white ${titleSize} uppercase leading-none`} \n              style={{ fontFamily: titleFontFamily }}\n            >\n              {title}\n            </h1>\n          </div>\n          \n          {/* Barra verde separadora */}\n          <div className=\"w-px h-12 md:h-16 bg-white/30 flex-shrink-0\"></div>\n          \n          {/* Descrição - Lado direito */}\n          <div className=\"flex-1 min-w-0\">\n            <p className={`${descriptionSize} text-green-100 leading-relaxed`}>\n              {description}\n            </p>\n          </div>\n        </div>\n        \n        {/* Conteúdo adicional opcional */}\n        {children && (\n          <div className=\"mt-6\">\n            {children}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PageHeader;","import Papa from 'papaparse';\n\nclass CSVDataService {\n  constructor() {\n    this.cache = new Map();\n  }\n\n  async loadCSV(filename) {\n    // Verifica se os dados já estão em cache\n    if (this.cache.has(filename)) {\n      return this.cache.get(filename);\n    }\n\n    try {\n      const response = await fetch(`./data/${filename}`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const csvText = await response.text();\n      \n      return new Promise((resolve, reject) => {\n        Papa.parse(csvText, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            if (results.errors && results.errors.length > 0) {\n              console.error(`Erros ao processar ${filename}:`, results.errors);\n            }\n            const data = results.data;\n            this.cache.set(filename, data);\n            resolve(data);\n          },\n          error: (error) => {\n            console.error(`Erro ao processar ${filename}:`, error);\n            reject(error);\n          }\n        });\n      });\n    } catch (error) {\n      console.error(`Erro ao carregar ${filename}:`, error);\n      throw error;\n    }\n  }\n\n  // Carrega dados das escolas\n  async loadEscolasData() {\n    try {\n      const data = await this.loadCSV('escolas.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Carrega dados dos docentes\n  async loadDocentesData() {\n    try {\n      const data = await this.loadCSV('docentes.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Carrega dados dos equipamentos\n  async loadEquipamentosData() {\n    try {\n      const data = await this.loadCSV('equipamentos.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Carrega dados das turmas por tipo\n  async loadTurmasPorTipoData() {\n    try {\n      const data = await this.loadCSV('turmas_por_tipo.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Processa dados para gráfico de alunos vs docentes\n  async getAlunosVsDocentesData() {\n    const escolasData = await this.loadEscolasData();\n    const docentesData = await this.loadDocentesData();\n\n    // Conta professores únicos por escola\n    const docentesPorEscola = {};\n    docentesData.forEach(docente => {\n      if (!docentesPorEscola[docente.CIE_Escola]) {\n        docentesPorEscola[docente.CIE_Escola] = new Set();\n      }\n      docentesPorEscola[docente.CIE_Escola].add(docente.Nome);\n    });\n\n    // Converte para array de dados para o gráfico\n    const chartData = escolasData.map(escola => {\n      const cie = escola.CIE.toString();\n      const alunos = parseInt(escola.Total_Alunos) || 0;\n      const docentes = docentesPorEscola[cie] ? docentesPorEscola[cie].size : 0;\n      \n      return {\n        nome: escola.Nome,\n        alunos: alunos,\n        docentes: docentes,\n        cie: cie\n      };\n    }).filter(item => item.alunos > 0 || item.docentes > 0); // Filtra apenas escolas com dados válidos\n\n    return chartData;\n  }\n\n  // Processa dados para gráfico de alunos por escola\n  async getAlunosPorEscolaData() {\n    const escolasData = await this.loadEscolasData();\n    \n    // Filtra apenas escolas indígenas\n    const escolasIndigenas = escolasData\n      .filter(escola => escola.Tipo === 'EEI - INDIGENA')\n      .map(escola => ({\n        nome: escola.Nome,\n        alunos: parseInt(escola.Total_Alunos) || 0,\n        cie: escola.CIE.toString()\n      }))\n      .filter(escola => escola.alunos > 0) // Filtra apenas escolas com alunos\n      .sort((a, b) => b.alunos - a.alunos);\n\n    return escolasIndigenas;\n  }\n\n  // Processa dados para gráfico de distribuição de alunos\n  async getDistribuicaoAlunosData() {\n    const escolasData = await this.loadEscolasData();\n    \n    const bins = [0, 10, 25, 50, 100, Infinity];\n    const labels = ['Até 10 alunos', '11 a 25 alunos', '26 a 50 alunos', '51 a 100 alunos', 'Mais de 100 alunos'];\n    \n    const distribuicao = {};\n    labels.forEach(label => distribuicao[label] = 0);\n\n    escolasData.forEach(escola => {\n      const alunos = parseInt(escola.Total_Alunos) || 0;\n      for (let i = 0; i < bins.length - 1; i++) {\n        if (alunos >= bins[i] && alunos < bins[i + 1]) {\n          distribuicao[labels[i]]++;\n          break;\n        }\n      }\n    });\n\n    return Object.entries(distribuicao).map(([name, value]) => ({\n      name,\n      value\n    }));\n  }\n\n  // Processa dados para gráfico de equipamentos\n  async getEquipamentosData() {\n    const equipamentosData = await this.loadEquipamentosData();\n    \n    const equipamentosPorTipo = {};\n    equipamentosData.forEach(equipamento => {\n      if (!equipamentosPorTipo[equipamento.Equipamento]) {\n        equipamentosPorTipo[equipamento.Equipamento] = 0;\n      }\n      equipamentosPorTipo[equipamento.Equipamento] += parseInt(equipamento.Quantidade) || 0;\n    });\n\n    return Object.entries(equipamentosPorTipo)\n      .map(([equipamento, quantidade]) => ({\n        equipamento,\n        quantidade\n      }))\n      .filter(item => item.quantidade > 0) // Filtra apenas equipamentos com quantidade > 0\n      .sort((a, b) => b.quantidade - a.quantidade);\n  }\n\n  // Processa dados para gráfico de escolas por diretoria\n  async getEscolasPorDiretoriaData() {\n    const escolasData = await this.loadEscolasData();\n    \n    // Conta TODAS as escolas por diretoria (não apenas indígenas)\n    const escolasPorDiretoria = {};\n    escolasData.forEach(escola => {\n      if (escola.Diretoria && escola.Diretoria.trim() !== '') {\n        if (!escolasPorDiretoria[escola.Diretoria]) {\n          escolasPorDiretoria[escola.Diretoria] = 0;\n        }\n        escolasPorDiretoria[escola.Diretoria]++;\n      }\n    });\n\n    return Object.entries(escolasPorDiretoria)\n      .map(([diretoria, quantidade]) => ({\n        diretoria,\n        quantidade\n      }))\n      .sort((a, b) => a.quantidade - b.quantidade); // Ordena crescente como no Python\n  }\n\n  // Processa dados para gráfico de tipos de ensino\n  async getTiposEnsinoData() {\n    const turmasData = await this.loadTurmasPorTipoData();\n    \n    const tiposEnsino = [\n      'Anos_Iniciais',\n      'Anos_Finais',\n      'EJA_Anos_Iniciais',\n      'EJA_Anos_Finais',\n      'EJA_Ensino_Medio',\n      'Ensino_Infantil'\n    ];\n\n    const labelMapping = {\n      'Anos_Iniciais': 'Anos Iniciais',\n      'Anos_Finais': 'Anos Finais',\n      'EJA_Anos_Iniciais': 'EJA Anos Iniciais',\n      'EJA_Anos_Finais': 'EJA Anos Finais',\n      'EJA_Ensino_Medio': 'EJA Ensino Médio',\n      'Ensino_Infantil': 'Ensino Infantil'\n    };\n\n    const counts = {};\n    tiposEnsino.forEach(tipo => {\n      counts[tipo] = turmasData.filter(escola => {\n        const valor = parseInt(escola[tipo]) || 0;\n        return valor > 0;\n      }).length;\n    });\n\n    return Object.entries(counts)\n      .map(([tipo, quantidade]) => ({\n        tipo: labelMapping[tipo],\n        quantidade\n      }))\n      .filter(item => item.quantidade > 0) // Filtra apenas tipos com quantidade > 0\n      .sort((a, b) => b.quantidade - a.quantidade);\n  }\n\n  // Processa dados para gráfico de distribuição de alunos por modalidade\n  async getDistribuicaoAlunosModalidadeData() {\n    // Dados específicos fornecidos pelo usuário\n    const dadosModalidade = [\n      { name: 'Anos Iniciais', value: 654 },\n      { name: 'Anos Finais', value: 568 },\n      { name: 'Ensino Médio', value: 269 },\n      { name: 'EJA', value: 130 }\n    ];\n\n    return dadosModalidade;\n  }\n}\n\nconst csvDataService = new CSVDataService();\nexport default csvDataService;","import { useState, useEffect, useRef } from 'react';\n\nconst useScrollAnimation = (options = {}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [hasAnimated, setHasAnimated] = useState(false);\n  const ref = useRef();\n\n  const {\n    threshold = 0.1,\n    rootMargin = '0px 0px -50px 0px',\n    triggerOnce = true\n  } = options;\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          if (triggerOnce) {\n            setHasAnimated(true);\n          }\n        } else if (!triggerOnce) {\n          setIsVisible(false);\n        }\n      },\n      {\n        threshold,\n        rootMargin\n      }\n    );\n\n    const currentRef = ref.current;\n    if (currentRef) {\n      observer.observe(currentRef);\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef);\n      }\n    };\n  }, [threshold, rootMargin, triggerOnce]);\n\n  return [ref, isVisible, hasAnimated];\n};\n\nexport default useScrollAnimation;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport useScrollAnimation from '../hooks/useScrollAnimation';\n\nconst ScrollAnimatedWrapper = ({ \n  children, \n  animationType = 'fadeInUp',\n  delay = 0,\n  duration = 0.6,\n  className = ''\n}) => {\n  const [ref, isVisible] = useScrollAnimation({\n    threshold: 0.1,\n    rootMargin: '0px 0px -50px 0px',\n    triggerOnce: true\n  });\n\n  const animations = {\n    fadeInUp: {\n      hidden: { \n        opacity: 0, \n        y: 50,\n        scale: 0.95\n      },\n      visible: { \n        opacity: 1, \n        y: 0,\n        scale: 1\n      }\n    },\n    fadeInLeft: {\n      hidden: { \n        opacity: 0, \n        x: -50,\n        scale: 0.95\n      },\n      visible: { \n        opacity: 1, \n        x: 0,\n        scale: 1\n      }\n    },\n    fadeInRight: {\n      hidden: { \n        opacity: 0, \n        x: 50,\n        scale: 0.95\n      },\n      visible: { \n        opacity: 1, \n        x: 0,\n        scale: 1\n      }\n    },\n    scaleIn: {\n      hidden: { \n        opacity: 0, \n        scale: 0.8\n      },\n      visible: { \n        opacity: 1, \n        scale: 1\n      }\n    }\n  };\n\n  const selectedAnimation = animations[animationType] || animations.fadeInUp;\n\n  return (\n    <motion.div\n      ref={ref}\n      initial=\"hidden\"\n      animate={isVisible ? \"visible\" : \"hidden\"}\n      variants={selectedAnimation}\n      transition={{\n        duration,\n        delay,\n        ease: \"easeOut\"\n      }}\n      className={`w-full ${className}`}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default ScrollAnimatedWrapper;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Legend } from 'recharts';\nimport ScrollAnimatedWrapper from '../ScrollAnimatedWrapper';\n\nconst DistribuicaoAlunosModalidadeChart = ({ data }) => {\n  // Cores específicas para cada modalidade\n  const MODALIDADE_COLORS = {\n    'Anos Iniciais': '#1B5E20',    // Verde escuro\n    'Anos Finais': '#1565C0',       // Azul escuro\n    'Ensino Médio': '#00695C',      // Verde esmeralda escuro\n    'EJA': '#2E7D32'                // Verde médio\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border border-gray-300 rounded-lg shadow-lg\">\n          <p className=\"font-semibold text-gray-800\">{data.name}</p>\n          <p className=\"text-sm text-gray-600\">Alunos: {data.value.toLocaleString()}</p>\n          <p className=\"text-sm text-gray-600\">Percentual: {data.percentual}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomPieTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border border-gray-300 rounded-lg shadow-lg\">\n          <p className=\"font-semibold text-gray-800\">{data.name}</p>\n          <p className=\"text-sm text-gray-600\">Alunos: {data.value.toLocaleString()}</p>\n          <p className=\"text-sm text-gray-600\">Percentual: {data.percentual}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text \n        x={x} \n        y={y} \n        fill=\"white\" \n        textAnchor={x > cx ? 'start' : 'end'} \n        dominantBaseline=\"central\"\n        fontSize={12}\n        fontWeight=\"bold\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  // Calcula o total para percentuais\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  const dataWithPercentual = data.map(item => ({ \n    ...item, \n    percentual: ((item.value / total) * 100).toFixed(1)\n  }));\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Distribuição de Alunos por Modalidade de Ensino\n      </h3>\n      \n      {/* Texto introdutório */}\n      <div className=\"mb-6 p-4 max-w-4xl mx-auto\">\n        <p className=\"text-gray-700 leading-relaxed text-justify\">\n          Existem 42 Escolas Estaduais Indígenas no estado de São Paulo, distribuídas entre a capital, o interior e o litoral, atendendo 1.621 estudantes. Essas escolas oferecem os anos iniciais e finais do Ensino Fundamental, o Ensino Médio e a Educação de Jovens e Adultos (EJA). A maior parte das matrículas está no Ensino Fundamental, que reúne 75,3% dos alunos. Os anos iniciais concentram 654 estudantes (40,3%), seguidos pelos anos finais, com 568 alunos (35,0%). O Ensino Médio responde por 269 matrículas (16,6%), enquanto a EJA conta com 130 estudantes (8,0%).\n        </p>\n      </div>\n      \n      {/* Informações gerais */}\n      <div className=\"mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 rounded-lg\">\n        <div className=\"text-center\">\n          <p className=\"text-lg font-semibold text-gray-800\">\n            Total de Alunos: <span className=\"text-green-700\">{total.toLocaleString()}</span>\n          </p>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            Escolas Indígenas do Estado de São Paulo\n          </p>\n        </div>\n      </div>\n\n      {/* Grid de gráficos */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        \n        {/* Gráfico de Barras */}\n        <div>\n          <h4 className=\"text-lg font-semibold mb-3 text-gray-700 text-center\">\n            Distribuição por Quantidade\n          </h4>\n          <ScrollAnimatedWrapper animationType=\"fadeInLeft\" delay={0.2}>\n            <div className=\"h-80 w-full\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart\n                  data={dataWithPercentual}\n                  margin={{\n                    top: 20,\n                    right: 10,\n                    left: 10,\n                    bottom: 5,\n                  }}\n                >\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                  <XAxis \n                    dataKey=\"name\" \n                    tick={{ fontSize: 12 }}\n                    angle={-45}\n                    textAnchor=\"end\"\n                    height={80}\n                  />\n                  <YAxis \n                    tick={{ fontSize: 12 }}\n                    label={{ value: 'Número de Alunos', angle: -90, position: 'insideLeft' }}\n                  />\n                  <Tooltip content={<CustomTooltip />} />\n                  <Bar \n                    dataKey=\"value\" \n                    radius={[4, 4, 0, 0]}\n                  >\n                    {dataWithPercentual.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={MODALIDADE_COLORS[entry.name]} />\n                    ))}\n                  </Bar>\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </ScrollAnimatedWrapper>\n        </div>\n\n        {/* Gráfico de Pizza */}\n        <div>\n          <h4 className=\"text-lg font-semibold mb-3 text-gray-700 text-center\">\n            Distribuição Percentual\n          </h4>\n          <ScrollAnimatedWrapper animationType=\"fadeInRight\" delay={0.4}>\n            <div className=\"h-80 w-full\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={dataWithPercentual}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={CustomLabel}\n                    outerRadius={100}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {dataWithPercentual.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={MODALIDADE_COLORS[entry.name]} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={<CustomPieTooltip />} />\n                  <Legend \n                    verticalAlign=\"bottom\" \n                    height={36}\n                    formatter={(value, entry) => (\n                      <span style={{ color: entry.color }}>\n                        {value}\n                      </span>\n                    )}\n                  />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </ScrollAnimatedWrapper>\n        </div>\n      </div>\n\n      {/* Estatísticas detalhadas */}\n      <div className=\"mt-6 grid grid-cols-2 lg:grid-cols-4 gap-4\">\n        {dataWithPercentual.map((item, index) => (\n          <div key={index} className=\"text-center p-2 rounded-lg border\" style={{ \n            borderColor: MODALIDADE_COLORS[item.name]\n          }}>\n            <div \n              className=\"w-4 h-4 rounded-full mx-auto mb-2\" \n              style={{ backgroundColor: MODALIDADE_COLORS[item.name] }}\n            ></div>\n            <p className=\"font-semibold text-sm text-gray-800\">{item.name}</p>\n            <p className=\"text-lg font-bold text-gray-800\">\n              {item.value.toLocaleString()}\n            </p>\n            <p className=\"text-xs text-gray-600\">{item.percentual}%</p>\n          </div>\n        ))}\n      </div>\n\n\n      <p className=\"text-sm text-gray-500 mt-4 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default DistribuicaoAlunosModalidadeChart;","import React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend, BarChart, Bar, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport ScrollAnimatedWrapper from '../ScrollAnimatedWrapper';\n\nconst DistribuicaoEscolasCombinadoChart = ({ distribuicaoData, alunosPorEscolaData }) => {\n  const NATURAL_GREEN_COLORS = ['#22c55e', '#16a34a', '#15803d', '#166534', '#14532d', '#365314', '#3f6212', '#4ade80'];\n\n  // Função para normalizar nomes das escolas\n  const normalizeSchoolName = (name) => {\n    if (!name) return '';\n    \n    return name\n      .toLowerCase()\n      .split(' ')\n      .map(word => {\n        // Palavras que devem permanecer em maiúscula\n        const uppercaseWords = ['ee', 'eei', 'eja', 'sp', 'unifesp', 'lindi'];\n        if (uppercaseWords.includes(word)) {\n          return word.toUpperCase();\n        }\n        // Primeira letra de cada palavra em maiúscula\n        return word.charAt(0).toUpperCase() + word.slice(1);\n      })\n      .join(' ');\n  };\n\n  // Normaliza os dados antes de renderizar\n  const normalizedAlunosData = alunosPorEscolaData.map(item => ({\n    ...item,\n    nome: normalizeSchoolName(item.nome)\n  }));\n\n  // Tooltip para o gráfico de pizza\n  const PieTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.name}</p>\n          <p className=\"text-sm\">Escolas: {data.value}</p>\n          <p className=\"text-sm\">Percentual: {((data.value / data.total) * 100).toFixed(1)}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Tooltip para o gráfico de barras\n  const BarTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.nome}</p>\n          <p className=\"text-sm text-gray-600\">CIE: {data.cie}</p>\n          <p className=\"text-sm\">Alunos: {data.alunos}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Label customizado para o gráfico de pizza\n  const CustomLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text \n        x={x} \n        y={y} \n        fill=\"white\" \n        textAnchor={x > cx ? 'start' : 'end'} \n        dominantBaseline=\"central\"\n        fontSize={12}\n        fontWeight=\"bold\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  // Calcula o total para percentuais do gráfico de pizza\n  const total = distribuicaoData.reduce((sum, item) => sum + item.value, 0);\n  const dataWithTotal = distribuicaoData.map(item => ({ ...item, total }));\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      {/* Título principal */}\n      <h3 className=\"text-2xl font-bold mb-6 text-gray-800\">\n        Distribuição de Escolas por Número de Alunos\n      </h3>\n\n      {/* Primeiro gráfico - Distribuição Geral (Pizza) */}\n      <div className=\"mb-8\">\n        {/* Texto introdutório antes do gráfico */}\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg max-w-4xl mx-auto\">\n          <p className=\"text-gray-700 leading-relaxed text-justify\">\n            As EEIs, em sua grande parte, funcionam com turmas de número reduzido a moderado, o que garante um cuidado individualizado e um acompanhamento pedagógico mais próximo dos estudantes. Dez escolas (24,4%) possuem até 10 alunos, 11 escolas (26,8%) atendem entre 11 e 25 alunos, e 12 escolas (29,3%) concentram de 26 a 50 alunos. Juntas, essas pequenas unidades representam 80,5% da rede, evidenciando o predomínio de escolas de porte reduzido. Em contraste, apenas quatro escolas (9,8%) atendem entre 51 e 100 alunos, e outras quatro (9,8%) possuem mais de 100 alunos, indicando que poucas unidades concentram grandes contingentes estudantis.\n          </p>\n        </div>\n        \n        <h4 className=\"text-lg font-semibold mb-4 text-gray-700 text-center\">\n          Visão Geral da Distribuição\n        </h4>\n        <ScrollAnimatedWrapper animationType=\"scaleIn\" delay={0.2}>\n          <div className=\"h-96 w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={dataWithTotal}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={CustomLabel}\n                  outerRadius={120}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {dataWithTotal.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={NATURAL_GREEN_COLORS[index % NATURAL_GREEN_COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip content={<PieTooltip />} />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </ScrollAnimatedWrapper>\n      </div>\n\n      {/* Segundo gráfico - Detalhamento por Escola (Barras) */}\n      <div className=\"mb-6\">\n        {/* Texto introdutório */}\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg max-w-4xl mx-auto\">\n          <p className=\"text-gray-700 leading-relaxed text-justify\">\n            Entre as escolas de maior porte, destacam-se a Indígena Guarani Gwyra Pepo, com 296 alunos, a E.E.I. Djekupe Amba Arandy, com 249 alunos, a E.E.I. Txeru Ba'e Kua-i, com 111 alunos, e a CECI Krukutu, com 101 alunos. No extremo oposto, algumas escolas atendem menos de 10 alunos, como a Aldeia Uru'ity, com 4 estudantes, e a Aldeia Santa Cruz, com apenas 3. Essa distribuição evidencia a grande heterogeneidade no tamanho das turmas, o que impacta diretamente a gestão, a oferta de recursos e a qualidade do ensino.\n          </p>\n        </div>\n        \n        <h4 className=\"text-lg font-semibold mb-4 text-gray-700 text-center\">\n          Detalhamento por Escola Indígena\n        </h4>\n\n        <ScrollAnimatedWrapper animationType=\"fadeInUp\" delay={0.4}>\n          <div className=\"h-96 w-full\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={normalizedAlunosData}\n                margin={{\n                  top: 20,\n                  right: 10,\n                  left: 10,\n                  bottom: 80,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"nome\" \n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={100}\n                  interval={0}\n                />\n                <YAxis \n                  label={{ value: 'Número de Alunos', angle: -90, position: 'insideLeft' }}\n                />\n                <Tooltip content={<BarTooltip />} />\n                <Bar dataKey=\"alunos\" fill=\"#22c55e\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </ScrollAnimatedWrapper>\n      </div>\n\n      {/* Fonte */}\n      <p className=\"text-sm text-gray-500 mt-4 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default DistribuicaoEscolasCombinadoChart;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\nimport ScrollAnimatedWrapper from '../ScrollAnimatedWrapper';\n\nconst EquipamentosChart = ({ data }) => {\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.equipamento}</p>\n          <p className=\"text-sm\">Quantidade: {data.quantidade}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Se não há dados, mostra mensagem\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n        <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n          Distribuição de Equipamentos nas Escolas\n        </h3>\n        <div className=\"h-96 flex items-center justify-center\">\n          <p className=\"text-gray-500\">Nenhum dado disponível</p>\n        </div>\n        <p className=\"text-sm text-gray-500 mt-2 text-center\">\n          Fonte: SEDUC 2025\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      {/* Texto sobre infraestrutura tecnológica */}\n      <div className=\"mb-6\">\n        <h4 className=\"text-lg font-semibold mb-4 text-gray-700 text-center\">\n          Infraestrutura Tecnológica\n        </h4>\n        \n        <div className=\"p-4 max-w-4xl mx-auto\">\n          <p className=\"text-gray-700 leading-relaxed text-justify\">\n            A infraestrutura tecnológica das escolas estaduais indígenas evidencia desigualdades significativas no acesso a equipamentos e conectividade. O recurso mais presente é o tablet para alunos, disponível em 653 unidades (55,4%), seguido por computadores portáteis (110, 9,3%) e computadores destinados aos alunos (98, 8,3%). Outros recursos, como aparelhos de TV (57, 4,8%), computadores para uso administrativo (56, 4,8%), aparelhos de Wi-Fi/access points (33, 2,8%) e rede local (18, 1,5%), estão presentes em proporções muito inferiores.\n          </p>\n          <p className=\"text-gray-700 leading-relaxed mt-3 text-justify\">\n            O acesso à internet é muito restrito. Para uso pedagógico e administrativo, está disponível em apenas 22 escolas (1,9%). Para uso pelos alunos, são apenas 19 escolas (1,6%). Isso mostra que a maior parte das escolas ainda não dispõe de conectividade adequada para práticas digitais. Embora a tecnologia esteja presente em diversas escolas, seu uso pedagógico efetivo continua limitado. Essa limitação compromete a qualidade do ensino e dificulta a inclusão digital de professores e estudantes.\n          </p>\n        </div>\n      </div>\n      \n      <h3 className=\"text-xl font-bold mb-4 text-gray-800 text-center\">\n        Distribuição de Equipamentos nas Escolas\n      </h3>\n      <ScrollAnimatedWrapper animationType=\"fadeInUp\" delay={0.2}>\n        <div className=\"h-96 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={data}\n              margin={{\n                top: 20,\n                right: 10,\n                left: 10,\n                bottom: 80,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis \n                dataKey=\"equipamento\"\n                angle={-45}\n                textAnchor=\"end\"\n                height={100}\n                interval={0}\n                tick={{ fontSize: 10 }}\n              />\n              <YAxis \n                label={{ value: 'Quantidade Total', angle: -90, position: 'insideLeft' }}\n              />\n              <Tooltip content={<CustomTooltip />} />\n              <Bar dataKey=\"quantidade\" fill=\"#16a34a\">\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill=\"#16a34a\" />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </ScrollAnimatedWrapper>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default EquipamentosChart;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\n\nconst EscolasPorDiretoriaChart = ({ data }) => {\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.diretoria}</p>\n          <p className=\"text-sm\">Escolas: {data.quantidade}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Se não há dados, mostra mensagem\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n        <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n          Número de Escolas por Diretoria de Ensino\n        </h3>\n        <div className=\"h-96 flex items-center justify-center\">\n          <p className=\"text-gray-500\">Nenhum dado disponível</p>\n        </div>\n        <p className=\"text-sm text-gray-500 mt-2 text-center\">\n          Fonte: SEDUC 2025\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      \n      <h3 className=\"text-xl font-bold mb-4 text-gray-800 text-center\">\n        Número de Escolas por Diretoria de Ensino\n      </h3>\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            data={data}\n            margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 80,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"diretoria\"\n              angle={-45}\n              textAnchor=\"end\"\n              height={100}\n              interval={0}\n              tick={{ fontSize: 10 }}\n            />\n            <YAxis \n              label={{ value: 'Número de Escolas', angle: -90, position: 'insideLeft' }}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Bar dataKey=\"quantidade\" fill=\"#15803d\">\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill=\"#15803d\" />\n              ))}\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default EscolasPorDiretoriaChart;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst TiposEnsinoChart = ({ data }) => {\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.tipo}</p>\n          <p className=\"text-sm\">Escolas: {data.quantidade}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      \n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Número de Escolas por Tipo de Ensino Oferecido\n      </h3>\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            data={data}\n            margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 60,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"tipo\" \n              angle={-45}\n              textAnchor=\"end\"\n              height={100}\n              interval={0}\n            />\n            <YAxis \n              label={{ value: 'Número de Escolas', angle: -90, position: 'insideLeft' }}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Bar dataKey=\"quantidade\" fill=\"#166534\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default TiposEnsinoChart;","import React, { useState, useEffect } from 'react';\nimport { ChevronRight } from 'lucide-react';\nimport csvDataService from '../services/csvDataService';\nimport PageHeader from './PageHeader';\nimport {\n  DistribuicaoEscolasCombinadoChart,\n  DistribuicaoAlunosModalidadeChart,\n  EquipamentosChart,\n  EscolasPorDiretoriaChart,\n  TiposEnsinoChart\n} from './Charts';\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState({\n    alunosPorEscola: [],\n    distribuicaoAlunos: [],\n    distribuicaoAlunosModalidade: [],\n    equipamentos: [],\n    escolasPorDiretoria: [],\n    tiposEnsino: []\n  });\n\n  // Breadcrumbs de Navegação\n  const breadcrumbs = [\n    { label: 'Início', path: '/', active: false },\n    { label: 'Painel de Dados', path: '/dashboard', active: true }\n  ];\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const [\n          alunosPorEscola,\n          distribuicaoAlunos,\n          distribuicaoAlunosModalidade,\n          equipamentos,\n          escolasPorDiretoria,\n          tiposEnsino\n        ] = await Promise.all([\n          csvDataService.getAlunosPorEscolaData().catch(err => {\n            console.error('Erro ao carregar alunos por escola:', err);\n            return [];\n          }),\n          csvDataService.getDistribuicaoAlunosData().catch(err => {\n            console.error('Erro ao carregar distribuição de alunos:', err);\n            return [];\n          }),\n          csvDataService.getDistribuicaoAlunosModalidadeData().catch(err => {\n            console.error('Erro ao carregar distribuição de alunos por modalidade:', err);\n            return [];\n          }),\n          csvDataService.getEquipamentosData().catch(err => {\n            console.error('Erro ao carregar equipamentos:', err);\n            return [];\n          }),\n          csvDataService.getEscolasPorDiretoriaData().catch(err => {\n            console.error('Erro ao carregar escolas por diretoria:', err);\n            return [];\n          }),\n          csvDataService.getTiposEnsinoData().catch(err => {\n            console.error('Erro ao carregar tipos de ensino:', err);\n            return [];\n          })\n        ]);\n\n\n        setData({\n          alunosPorEscola,\n          distribuicaoAlunos,\n          distribuicaoAlunosModalidade,\n          equipamentos,\n          escolasPorDiretoria,\n          tiposEnsino\n        });\n      } catch (err) {\n        console.error('Erro geral ao carregar dados:', err);\n        setError(`Erro ao carregar os dados dos gráficos: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-lg text-gray-600\">Carregando dados dos gráficos...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n            <p className=\"font-bold\">Erro</p>\n            <p>{error}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-amber-50 pt-16 sm:pt-20 dashboard-scroll\">\n      {/* Breadcrumbs de Navegação */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3\">\n          <nav className=\"flex items-center space-x-2 text-sm\">\n            {breadcrumbs.map((crumb, index) => (\n              <div key={index} className=\"flex items-center\">\n                {index > 0 && (\n                  <ChevronRight className=\"w-4 h-4 text-gray-400 mx-2\" />\n                )}\n                {crumb.path ? (\n                  <button\n                    onClick={() => window.location.href = crumb.path}\n                    className=\"text-gray-600 hover:text-green-700 transition-colors\"\n                  >\n                    {crumb.label}\n                  </button>\n                ) : (\n                  <span className={`font-medium ${crumb.active ? 'text-green-700' : 'text-gray-900'}`}>\n                    {crumb.label}\n                  </span>\n                )}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* Cabeçalho com design indígena */}\n      <PageHeader\n        title=\"Painel de Dados\"\n        description={\n          <>\n            Este espaço reúne informações sobre as escolas indígenas do estado de São Paulo, apresentando indicadores como número de estudantes e docentes, infraestrutura disponível, distribuição geográfica por Diretorias de Ensino e modalidades de ensino oferecidas. Os dados foram fornecidos pela Secretaria da Educação do Estado de São Paulo (SEDUC) e referem-se ao ano de 2025. A base completa pode ser acessada em:{' '}\n            <a \n              href=\"https://dados.educacao.sp.gov.br/\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-white hover:text-green-100 underline font-medium\"\n            >\n              dados.educacao.sp.gov.br\n            </a>\n          </>\n        }\n      />\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n\n\n        {/* Grid de Gráficos */}\n        <div className=\"space-y-8\">\n          {/* PRIMEIRO GRÁFICO - Distribuição de Alunos por Modalidade */}\n          <div>\n            <DistribuicaoAlunosModalidadeChart data={data.distribuicaoAlunosModalidade} />\n          </div>\n\n          {/* Gráfico de Barras - Tipos de Ensino */}\n          <div>\n            <TiposEnsinoChart data={data.tiposEnsino} />\n          </div>\n\n          {/* Gráfico Combinado - Distribuição de Escolas por Número de Alunos */}\n          <div>\n            <DistribuicaoEscolasCombinadoChart \n              distribuicaoData={data.distribuicaoAlunos}\n              alunosPorEscolaData={data.alunosPorEscola}\n            />\n          </div>\n\n          {/* Gráfico de Barras Horizontais - Equipamentos */}\n          <div>\n            <EquipamentosChart data={data.equipamentos} />\n          </div>\n\n          {/* Gráfico de Barras Horizontais - Escolas por Diretoria */}\n          <div>\n            <EscolasPorDiretoriaChart data={data.escolasPorDiretoria} />\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"names":["_ref","title","description","titleFontFamily","titleSize","descriptionSize","className","children","_jsx","concat","_jsxs","style","fontFamily","constructor","this","cache","Map","loadCSV","filename","has","get","response","fetch","ok","Error","status","csvText","text","Promise","resolve","reject","Papa","header","skipEmptyLines","complete","results","errors","length","console","error","data","set","loadEscolasData","loadDocentesData","loadEquipamentosData","loadTurmasPorTipoData","getAlunosVsDocentesData","escolasData","docentesData","docentesPorEscola","forEach","docente","CIE_Escola","Set","add","Nome","map","escola","cie","CIE","toString","alunos","parseInt","Total_Alunos","docentes","size","nome","filter","item","getAlunosPorEscolaData","Tipo","sort","a","b","getDistribuicaoAlunosData","bins","Infinity","labels","distribuicao","label","i","Object","entries","name","value","getEquipamentosData","equipamentosData","equipamentosPorTipo","equipamento","Equipamento","Quantidade","_ref2","quantidade","getEscolasPorDiretoriaData","escolasPorDiretoria","Diretoria","trim","_ref3","diretoria","getTiposEnsinoData","turmasData","labelMapping","counts","tipo","_ref4","getDistribuicaoAlunosModalidadeData","options","arguments","undefined","isVisible","setIsVisible","useState","hasAnimated","setHasAnimated","ref","useRef","threshold","rootMargin","triggerOnce","useEffect","observer","IntersectionObserver","entry","isIntersecting","currentRef","current","observe","unobserve","animationType","delay","duration","useScrollAnimation","animations","fadeInUp","hidden","opacity","y","scale","visible","fadeInLeft","x","fadeInRight","scaleIn","selectedAnimation","motion","div","initial","animate","variants","transition","ease","MODALIDADE_COLORS","CustomTooltip","active","payload","toLocaleString","percentual","CustomPieTooltip","total","reduce","sum","dataWithPercentual","_objectSpread","toFixed","ScrollAnimatedWrapper","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","tick","fontSize","angle","textAnchor","YAxis","position","Tooltip","content","Bar","radius","index","Cell","fill","PieChart","Pie","cx","cy","labelLine","midAngle","innerRadius","outerRadius","percent","RADIAN","Math","PI","cos","sin","dominantBaseline","fontWeight","Legend","verticalAlign","formatter","color","borderColor","backgroundColor","distribuicaoData","alunosPorEscolaData","NATURAL_GREEN_COLORS","normalizedAlunosData","toLowerCase","split","word","includes","toUpperCase","charAt","slice","join","PieTooltip","BarTooltip","dataWithTotal","interval","Dashboard","loading","setLoading","setError","setData","alunosPorEscola","distribuicaoAlunos","distribuicaoAlunosModalidade","equipamentos","tiposEnsino","async","all","csvDataService","catch","err","message","loadData","path","crumb","ChevronRight","onClick","window","location","href","PageHeader","_Fragment","target","rel","DistribuicaoAlunosModalidadeChart","TiposEnsinoChart","DistribuicaoEscolasCombinadoChart","EquipamentosChart","EscolasPorDiretoriaChart"],"sourceRoot":""}
{"version":3,"file":"static/js/779.069ed8df.chunk.js","mappings":"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","sources":["../node_modules/react-leaflet/lib/GeoJSON.js","components/TerrasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import React, { useCallback, useMemo, useEffect, useRef } from 'react';\nimport { GeoJSON, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport { isMobile, MobileInteractionManager } from '../utils/mobileUtils';\n\nconst TerrasIndigenas = ({ data, onClick }) => {\n  const map = useMap();\n  const mobileInteraction = useRef(new MobileInteractionManager());\n  const tooltipRef = useRef(null);\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"TerrasIndigenas: Dados recebidos:\", {\n        type: data.type,\n        features: data.features ? data.features.length : 0,\n        properties: data.features ? data.features[0].properties : null\n      });\n    } else {\n      console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    }\n  }, [data]);\n\n  // Função para mostrar tooltip temporário em mobile\n  const showMobileTooltip = useCallback((event, content) => {\n    if (!isMobile()) return;\n\n    // Remove tooltip anterior\n    if (tooltipRef.current) {\n      tooltipRef.current.remove();\n      tooltipRef.current = null;\n    }\n\n    const element = document.createElement('div');\n    element.className = 'mobile-tooltip-terra';\n    element.textContent = content;\n    element.style.position = 'absolute';\n    element.style.backgroundColor = 'rgba(139, 0, 0, 0.95)';\n    element.style.color = 'white';\n    element.style.padding = '8px 12px';\n    element.style.borderRadius = '6px';\n    element.style.fontSize = '14px';\n    element.style.fontFamily = 'Arial, sans-serif';\n    element.style.fontWeight = '500';\n    element.style.maxWidth = '250px';\n    element.style.whiteSpace = 'nowrap';\n    element.style.overflow = 'hidden';\n    element.style.textOverflow = 'ellipsis';\n    element.style.zIndex = '1000';\n    element.style.pointerEvents = 'none';\n    element.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.3)';\n    element.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n    \n    const latlng = event.latlng;\n    const point = map.latLngToLayerPoint(latlng);\n    element.style.left = (point.x + 10) + 'px';\n    element.style.top = (point.y - 10) + 'px';\n    \n    map.getContainer().appendChild(element);\n    tooltipRef.current = element;\n\n    // Auto-remove after 2 seconds\n    setTimeout(() => {\n      if (element.parentNode) {\n        element.remove();\n        tooltipRef.current = null;\n      }\n    }, 2000);\n  }, [map]);\n\n  // Estilo padrão das terras indígenas\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#B22222', // Vermelho escuro na borda\n      weight: 2,\n      fillOpacity: 0.3,\n      fillColor: '#DC143C', // Vermelho vivo no preenchimento\n      dashArray: '3',\n      zIndex: 2\n    }),\n    []\n  );\n\n  // Função para determinar o estilo baseado no status da terra indígena\n  const style = useCallback(\n    (feature) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades:\", feature);\n        return defaultStyle;\n      }\n\n      const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n      console.log(`Terra indígena ${feature.properties.terrai_nom}: ${isRegularizada ? 'Regularizada' : 'Não Regularizada'}`);\n      \n      return {\n        ...defaultStyle,\n        fillColor: isRegularizada ? '#DC143C' : '#8B0000', // Regularizada vermelho vivo, não regularizada vermelho escuro\n        fillOpacity: isRegularizada ? 0.3 : 0.25\n      };\n    },\n    [defaultStyle]\n  );\n\n  // Estilo quando o mouse passa por cima\n  const hoverStyle = {\n    weight: 3,\n    color: '#FF0000', // Vermelho puro na borda ao passar o mouse\n    fillOpacity: 0.45,\n    dashArray: ''\n  };\n\n  const onEachFeature = useCallback(\n    (feature, layer) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades no onEachFeature:\", feature);\n        return;\n      }\n\n      // Adiciona tooltip com informações básicas (desktop only)\n      if (!isMobile()) {\n        const tooltipContent = `\n          <div class=\"bg-white p-2 rounded shadow-md\">\n            <strong>${feature.properties.terrai_nom || 'Nome não disponível'}</strong><br/>\n            ${feature.properties.etnia_nome || 'Etnia não disponível'}<br/>\n            ${feature.properties.fase_ti || 'Fase não disponível'}\n          </div>\n        `;\n        layer.bindTooltip(tooltipContent, {\n          sticky: true,\n          className: 'custom-tooltip'\n        });\n      }\n\n      layer.on({\n        mouseover: (e) => {\n          if (isMobile()) return; // Skip hover on mobile\n          const layer = e.target;\n          layer.setStyle(hoverStyle);\n          layer.bringToFront();\n        },\n        mouseout: (e) => {\n          if (isMobile()) return; // Skip hover on mobile\n          e.target.setStyle(style(feature));\n        },\n        click: (e) => {\n          const layer = e.target;\n\n          // Prepara os dados para o painel\n          const terraIndigenaInfo = {\n            titulo: feature.properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: feature.properties.etnia_nome,\n            municipio: feature.properties.municipio_,\n            uf: feature.properties.uf_sigla,\n            superficie: feature.properties.superficie,\n            fase: feature.properties.fase_ti,\n            modalidade: feature.properties.modalidade,\n            reestudo: feature.properties.reestudo_t,\n            cr: feature.properties.cr,\n            faixa_fron: feature.properties.faixa_fron,\n            undadm_nom: feature.properties.undadm_nom,\n            undadm_sig: feature.properties.undadm_sig,\n            dominio_un: feature.properties.dominio_un,\n            data_atual: feature.properties.data_atual,\n            terrai_cod: feature.properties.terrai_cod,\n            undadm_cod: feature.properties.undadm_cod\n          };\n\n          // Handle mobile two-click behavior\n          mobileInteraction.current.handleClick(\n            feature,\n            // First click - show name\n            () => showMobileTooltip(e, feature.properties.terrai_nom || 'Terra Indígena'),\n            // Second click - open panel\n            () => onClick?.(terraIndigenaInfo)\n          );\n        }\n      });\n    },\n    [map, style, onClick, showMobileTooltip]\n  );\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (tooltipRef.current) {\n        tooltipRef.current.remove();\n        tooltipRef.current = null;\n      }\n      mobileInteraction.current.reset();\n    };\n  }, []);\n\n  if (!data) {\n    console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    return null;\n  }\n\n  if (!data.type || data.type !== 'FeatureCollection') {\n    console.error(\"TerrasIndigenas: Formato de GeoJSON inválido. Esperado FeatureCollection, recebido:\", data.type);\n    return null;\n  }\n\n  if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n    console.error(\"TerrasIndigenas: GeoJSON sem features válidas\");\n    return null;\n  }\n\n  return <GeoJSON data={data} style={style} onEachFeature={onEachFeature} />;\n};\n\nexport default TerrasIndigenas; ","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n// Mobile interaction state management\nexport class MobileInteractionManager {\n  constructor() {\n    this.lastClickedFeature = null;\n    this.clickTimeout = null;\n    this.clickDelay = 300; // Time in ms to wait for second click\n  }\n\n  handleClick(feature, onFirstClick, onSecondClick, isMobileDevice = false) {\n    if (!isMobileDevice) {\n      // Desktop behavior - direct action\n      onSecondClick(feature);\n      return;\n    }\n\n    // Mobile behavior - two-click pattern\n    if (this.lastClickedFeature === feature) {\n      // Second click on same feature\n      this.clearTimeout();\n      this.lastClickedFeature = null;\n      onSecondClick(feature);\n    } else {\n      // First click or click on different feature\n      if (this.lastClickedFeature) {\n        // Clear previous first click\n        this.clearTimeout();\n      }\n      \n      this.lastClickedFeature = feature;\n      onFirstClick(feature);\n      \n      // Set timeout to clear first click\n      this.clickTimeout = setTimeout(() => {\n        this.lastClickedFeature = null;\n      }, this.clickDelay);\n    }\n  }\n\n  clearTimeout() {\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n  }\n\n  reset() {\n    this.clearTimeout();\n    this.lastClickedFeature = null;\n  }\n} "],"names":["GeoJSON","createPathComponent","_ref","ctx","data","options","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","layer","props","prevProps","style","resetStyle","setStyle","onClick","map","useMap","mobileInteraction","useRef","MobileInteractionManager","tooltipRef","useEffect","console","log","type","features","length","properties","warn","showMobileTooltip","useCallback","event","content","isMobile","current","remove","element","document","createElement","className","textContent","position","backgroundColor","color","padding","borderRadius","fontSize","fontFamily","fontWeight","maxWidth","whiteSpace","overflow","textOverflow","zIndex","pointerEvents","boxShadow","border","latlng","point","latLngToLayerPoint","left","x","top","y","getContainer","appendChild","setTimeout","parentNode","defaultStyle","useMemo","weight","fillOpacity","fillColor","dashArray","feature","isRegularizada","fase_ti","concat","terrai_nom","_objectSpread","hoverStyle","onEachFeature","tooltipContent","etnia_nome","bindTooltip","sticky","on","mouseover","e","target","bringToFront","mouseout","click","terraIndigenaInfo","titulo","tipo","etnia","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","handleClick","reset","Array","isArray","_jsx","error","window","innerWidth","constructor","this","lastClickedFeature","clickTimeout","clickDelay","onFirstClick","onSecondClick","arguments","undefined","clearTimeout"],"sourceRoot":""}
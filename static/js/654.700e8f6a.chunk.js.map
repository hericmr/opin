{"version":3,"file":"static/js/654.700e8f6a.chunk.js","mappings":"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","sources":["components/EditEscolaPanel/ProfessorImageUploadSection.js","components/EditEscolaPanel/EditEscolaPanel.js","components/EditEscolaPanel/ImageUploadSection.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Upload, X, User, Trash2, Edit3, Check, AlertCircle } from 'lucide-react';\nimport { \n  uploadProfessorImage, \n  getEscolaImages, \n  deleteImage, \n  updateImageDescription,\n  checkImageLimit \n} from '../../services/escolaImageService';\nimport { debounce } from 'lodash';\n\nconst ProfessorImageUploadSection = ({ escolaId, onImagesUpdate }) => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [existingImages, setExistingImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imageLimit, setImageLimit] = useState({ current: 0, limit: 5, canUpload: true });\n  const [genero, setGenero] = useState('professor');\n  const [titulo, setTitulo] = useState('');\n  const [descricaoUpload, setDescricaoUpload] = useState('');\n  const [localDescriptions, setLocalDescriptions] = useState({});\n\n  // Buscar imagens existentes dos professores\n  const fetchExistingImages = useCallback(async () => {\n    if (!escolaId) return;\n    \n    try {\n      setLoading(true);\n      const images = await getEscolaImages(escolaId, 'imagens-professores');\n      setExistingImages(images);\n      \n      // Inicializar descrições locais\n      const initialDescriptions = {};\n      images.forEach(image => {\n        initialDescriptions[image.id] = image.descricao;\n      });\n      setLocalDescriptions(initialDescriptions);\n      \n      // Verificar limite\n      const limit = await checkImageLimit(escolaId, 'imagens-professores');\n      setImageLimit(limit);\n    } catch (err) {\n      console.error('Erro ao buscar imagens dos professores:', err);\n      setError('Erro ao carregar imagens dos professores');\n    } finally {\n      setLoading(false);\n    }\n  }, [escolaId]);\n\n  useEffect(() => {\n    fetchExistingImages();\n  }, [fetchExistingImages]);\n\n  // Limpar mensagens após 5 segundos\n  useEffect(() => {\n    if (error || success) {\n      const timer = setTimeout(() => {\n        setError('');\n        setSuccess('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error, success]);\n\n  // Handler para seleção de arquivos\n  const handleFileSelect = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n\n    // Verificar se ainda pode fazer upload\n    if (!imageLimit.canUpload) {\n      setError(`Limite de ${imageLimit.limit} imagens dos professores atingido. Remova algumas imagens antes de adicionar novas.`);\n      return;\n    }\n\n    // Verificar se não excederá o limite\n    const totalImages = existingImages.length + selectedFiles.length + files.length;\n    if (totalImages > imageLimit.limit) {\n      setError(`Você pode adicionar no máximo ${imageLimit.limit - existingImages.length - selectedFiles.length} imagens dos professores.`);\n      return;\n    }\n\n    // Validar arquivos\n    const validFiles = files.filter(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'].includes(file.type);\n      const isValidSize = file.size <= 5 * 1024 * 1024; // 5MB\n      \n      if (!isValidType) {\n        setError(`Arquivo \"${file.name}\" não é uma imagem válida. Use apenas JPG, PNG, WEBP ou GIF.`);\n      }\n      if (!isValidSize) {\n        setError(`Arquivo \"${file.name}\" é muito grande. Tamanho máximo: 5MB.`);\n      }\n      \n      return isValidType && isValidSize;\n    });\n\n    if (validFiles.length > 0) {\n      setSelectedFiles(prev => [...prev, ...validFiles]);\n      setError('');\n    }\n  };\n\n  // Handler para drag & drop\n  const handleDrop = useCallback((event) => {\n    event.preventDefault();\n    const files = Array.from(event.dataTransfer.files);\n    \n    if (files.length === 0) return;\n\n    // Verificar se ainda pode fazer upload\n    if (!imageLimit.canUpload) {\n      setError(`Limite de ${imageLimit.limit} imagens dos professores atingido. Remova algumas imagens antes de adicionar novas.`);\n      return;\n    }\n\n    // Verificar se não excederá o limite\n    const totalImages = existingImages.length + selectedFiles.length + files.length;\n    if (totalImages > imageLimit.limit) {\n      setError(`Você pode adicionar no máximo ${imageLimit.limit - existingImages.length - selectedFiles.length} imagens dos professores.`);\n      return;\n    }\n\n    // Filtrar apenas imagens\n    const imageFiles = files.filter(file => file.type.startsWith('image/'));\n    if (imageFiles.length > 0) {\n      setSelectedFiles(prev => [...prev, ...imageFiles]);\n      setError('');\n    }\n  }, [imageLimit, existingImages.length, selectedFiles.length]);\n\n  const handleDragOver = useCallback((event) => {\n    event.preventDefault();\n  }, []);\n\n  // Remover arquivo selecionado\n  const removeSelectedFile = (index) => {\n    setSelectedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n\n  // Upload das imagens selecionadas\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) return;\n\n    setUploading(true);\n    setUploadProgress(0);\n    setError('');\n\n    try {\n      const uploadedImages = [];\n      \n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n        const progress = ((i + 1) / selectedFiles.length) * 100;\n        setUploadProgress(progress);\n\n        const uploadedImage = await uploadProfessorImage(file, escolaId, descricaoUpload, genero, titulo);\n        uploadedImages.push(uploadedImage);\n      }\n\n      // Atualizar lista de imagens\n      setExistingImages(prev => [...prev, ...uploadedImages]);\n      setSelectedFiles([]);\n      setDescricaoUpload('');\n      setUploadProgress(0);\n      setSuccess(`${uploadedImages.length} imagem(ns) do(s) professor(es) carregada(s) com sucesso!`);\n\n      // Atualizar limite\n      const newLimit = await checkImageLimit(escolaId, 'imagens-professores');\n      setImageLimit(newLimit);\n\n      // Notificar componente pai\n      if (onImagesUpdate) {\n        onImagesUpdate();\n      }\n\n    } catch (err) {\n      console.error('Erro no upload:', err);\n      setError(`Erro ao fazer upload: ${err.message}`);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n    }\n  };\n\n  // Deletar imagem existente\n  const handleDeleteImage = async (imageId, filePath) => {\n    if (!window.confirm('Tem certeza que deseja excluir esta imagem do professor?')) return;\n\n    try {\n      await deleteImage(imageId, filePath, 'imagens-professores');\n      \n      // Atualizar lista\n      setExistingImages(prev => prev.filter(img => img.id !== imageId));\n      \n      // Atualizar limite\n      const newLimit = await checkImageLimit(escolaId, 'imagens-professores');\n      setImageLimit(newLimit);\n\n      setSuccess('Imagem do professor excluída com sucesso!');\n\n      // Notificar componente pai\n      if (onImagesUpdate) {\n        onImagesUpdate();\n      }\n\n    } catch (err) {\n      console.error('Erro ao deletar imagem:', err);\n      setError(`Erro ao excluir imagem: ${err.message}`);\n    }\n  };\n\n  // Atualizar descrição da imagem\n  const handleDescriptionChange = async (imageId, newDescription) => {\n    try {\n      await updateImageDescription(imageId, newDescription);\n      \n      // Atualizar lista\n      setExistingImages(prev => prev.map(img => \n        img.id === imageId \n          ? { ...img, descricao: newDescription.trim() }\n          : img\n      ));\n\n      setSuccess('Descrição atualizada com sucesso!');\n\n    } catch (err) {\n      console.error('Erro ao atualizar descrição:', err);\n      setError(`Erro ao atualizar descrição: ${err.message}`);\n    }\n  };\n\n  // Debounce para salvar descrição\n  const debouncedSave = useCallback(\n    debounce((imageId, description) => {\n      handleDescriptionChange(imageId, description);\n    }, 1000),\n    []\n  );\n\n  // Atualizar descrição local\n  const handleLocalDescriptionChange = (imageId, value) => {\n    setLocalDescriptions(prev => ({\n      ...prev,\n      [imageId]: value\n    }));\n    debouncedSave(imageId, value);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 bg-gray-50 rounded-lg\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando imagens dos professores...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <User className=\"w-5 h-5 text-green-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Imagens dos Professores</h3>\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          {imageLimit.current}/{imageLimit.limit} imagens\n        </div>\n      </div>\n\n      {/* Mensagens */}\n      {error && (\n        <div className=\"flex items-center gap-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n          <AlertCircle className=\"w-5 h-5 text-red-600\" />\n          <span className=\"text-red-700\">{error}</span>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"flex items-center gap-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\n          <Check className=\"w-5 h-5 text-green-600\" />\n          <span className=\"text-green-700\">{success}</span>\n        </div>\n      )}\n\n      {/* Área de Upload */}\n      {imageLimit.canUpload && (\n        <div className=\"space-y-4\">\n          {/* Campo de seleção de gênero */}\n          <div className=\"flex items-center gap-2 mb-2\">\n            <label htmlFor=\"genero-professor\" className=\"text-sm font-medium text-gray-700\">Gênero:</label>\n            <select\n              id=\"genero-professor\"\n              value={genero}\n              onChange={e => setGenero(e.target.value)}\n              className=\"border rounded px-2 py-1 text-sm\"\n              disabled={uploading}\n            >\n              <option value=\"professor\">Professor</option>\n              <option value=\"professora\">Professora</option>\n            </select>\n          </div>\n          {/* Campo de título da história */}\n          <div className=\"flex items-center gap-2 mb-2\">\n            <label htmlFor=\"titulo-historia\" className=\"text-sm font-medium text-gray-700\">Título da história:</label>\n            <input\n              id=\"titulo-historia\"\n              type=\"text\"\n              value={titulo}\n              onChange={e => setTitulo(e.target.value)}\n              className=\"border rounded px-2 py-1 text-sm w-full\"\n              placeholder=\"Ex: História da professora Mariza\"\n              disabled={uploading}\n            />\n          </div>\n          {/* Campo de legenda/descrição da imagem */}\n          <div className=\"flex items-center gap-2 mb-2\">\n            <label htmlFor=\"descricao-upload\" className=\"text-sm font-medium text-gray-700\">Legenda da imagem:</label>\n            <input\n              id=\"descricao-upload\"\n              type=\"text\"\n              value={descricaoUpload}\n              onChange={e => setDescricaoUpload(e.target.value)}\n              className=\"border rounded px-2 py-1 text-sm w-full\"\n              placeholder=\"Ex: Professor em atividade cultural\"\n              disabled={uploading}\n            />\n          </div>\n          {/* Drag & Drop */}\n          <div\n            className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n              uploading \n                ? 'border-gray-300 bg-gray-50' \n                : 'border-green-300 bg-green-50 hover:border-green-400 hover:bg-green-100'\n            }`}\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n          >\n            <Upload className=\"w-8 h-8 text-green-600 mx-auto mb-2\" />\n            <p className=\"text-gray-600 mb-2\">\n              Arraste imagens dos professores aqui ou clique para selecionar\n            </p>\n            <p className=\"text-sm text-gray-500 mb-4\">\n              JPG, PNG, WEBP, GIF • Máximo 5MB por arquivo • Máximo 5 imagens\n            </p>\n            \n            <label className=\"inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 cursor-pointer transition-colors\">\n              <input\n                type=\"file\"\n                multiple\n                accept=\"image/jpeg,image/jpg,image/png,image/webp,image/gif\"\n                onChange={handleFileSelect}\n                className=\"hidden\"\n                disabled={uploading}\n              />\n              Selecionar Arquivos\n            </label>\n          </div>\n\n          {/* Progress Bar */}\n          {uploading && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm text-gray-600\">\n                <span>Fazendo upload das imagens dos professores...</span>\n                <span>{Math.round(uploadProgress)}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${uploadProgress}%` }}\n                ></div>\n              </div>\n            </div>\n          )}\n\n          {/* Arquivos Selecionados */}\n          {selectedFiles.length > 0 && (\n            <div className=\"space-y-3\">\n              <h4 className=\"font-medium text-gray-900\">Arquivos selecionados ({selectedFiles.length})</h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                {selectedFiles.map((file, index) => (\n                  <div key={index} className=\"relative group\">\n                    <img\n                      src={URL.createObjectURL(file)}\n                      alt={file.name}\n                      className=\"w-full h-24 object-cover rounded-lg border\"\n                    />\n                    <button\n                      onClick={() => removeSelectedFile(index)}\n                      className=\"absolute top-1 right-1 p-1 bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                    >\n                      <X className=\"w-3 h-3\" />\n                    </button>\n                    <p className=\"text-xs text-gray-600 mt-1 truncate\">{file.name}</p>\n                  </div>\n                ))}\n              </div>\n              <button\n                onClick={handleUpload}\n                disabled={uploading}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {uploading ? 'Fazendo Upload...' : 'Fazer Upload'}\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Imagens Existentes */}\n      {existingImages.length > 0 && (\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium text-gray-900\">Imagens dos Professores ({existingImages.length})</h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n            {existingImages.map((image) => (\n              <div key={image.id} className=\"relative group bg-white rounded-lg border shadow-sm overflow-hidden\">\n                <img\n                  src={image.publicUrl}\n                  alt={image.descricao || 'Imagem do professor'}\n                  className=\"w-full h-32 object-cover\"\n                />\n                \n                {/* Botão de exclusão */}\n                <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <button\n                    onClick={() => handleDeleteImage(image.id, image.url)}\n                    className=\"p-1 bg-red-600 text-white rounded-full hover:bg-red-700\"\n                    title=\"Excluir imagem\"\n                  >\n                    <Trash2 className=\"w-3 h-3\" />\n                  </button>\n                </div>\n\n                {/* Campo de edição de descrição */}\n                <div className=\"p-2\">\n                  <textarea\n                    value={localDescriptions[image.id] || image.descricao || ''}\n                    onChange={(e) => {\n                      handleLocalDescriptionChange(image.id, e.target.value);\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault();\n                      }\n                    }}\n                    className=\"w-full p-2 text-xs border rounded resize-none\"\n                    rows=\"2\"\n                    placeholder=\"Digite a descrição da imagem do professor...\"\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Mensagem quando não há imagens */}\n      {existingImages.length === 0 && !uploading && (\n        <div className=\"text-center py-8 text-gray-500\">\n          <User className=\"w-12 h-12 mx-auto mb-2 text-gray-300\" />\n          <p>Nenhuma imagem dos professores adicionada ainda.</p>\n          <p className=\"text-sm\">Adicione imagens para mostrar os professores da escola.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nProfessorImageUploadSection.propTypes = {\n  escolaId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onImagesUpdate: PropTypes.func\n};\n\nexport default ProfessorImageUploadSection; ","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image as ImageIcon, User, BookOpen, MapPin, Users, Settings } from 'lucide-react';\nimport ImageUploadSection from './ImageUploadSection';\nimport ProfessorImageUploadSection from './ProfessorImageUploadSection';\n\nconst EditEscolaPanel = ({ escola, onClose, onSave }) => {\n  const [nomeEscola, setNomeEscola] = useState(escola?.Escola || '');\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [activeTab, setActiveTab] = useState('dados-basicos');\n\n  // Configuração das abas\n  const tabs = [\n    { \n      id: 'dados-basicos', \n      label: 'Dados Básicos', \n      icon: BookOpen,\n      description: 'Informações principais da escola'\n    },\n    { \n      id: 'imagens-escola', \n      label: 'Imagens da Escola', \n      icon: ImageIcon,\n      description: 'Upload e gerenciamento de imagens da escola (máx. 10)'\n    },\n    { \n      id: 'imagens-professores', \n      label: 'Imagens dos Professores', \n      icon: User,\n      description: 'Upload e gerenciamento de imagens dos professores (máx. 5)'\n    },\n    { \n      id: 'localizacao', \n      label: 'Localização', \n      icon: MapPin,\n      description: 'Coordenadas e endereço da escola'\n    },\n    { \n      id: 'gestao', \n      label: 'Gestão', \n      icon: Users,\n      description: 'Informações sobre gestão e funcionários'\n    },\n    { \n      id: 'configuracoes', \n      label: 'Configurações', \n      icon: Settings,\n      description: 'Configurações avançadas da escola'\n    }\n  ];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!nomeEscola.trim()) {\n      setError('O nome da escola é obrigatório.');\n      return;\n    }\n    setError('');\n    setIsSaving(true);\n    try {\n      await onSave({ ...escola, Escola: nomeEscola });\n      onClose();\n    } catch (err) {\n      setError('Erro ao salvar.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Handler para atualização de imagens\n  const handleImagesUpdate = () => {\n    // Aqui você pode adicionar lógica para atualizar o PainelInformacoes\n    // Por exemplo, disparar um evento ou callback para refresh\n    console.log('Imagens atualizadas - PainelInformacoes deve ser atualizado');\n  };\n\n  // Renderizar conteúdo da aba ativa\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'dados-basicos':\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Nome da Escola *\n              </label>\n              <input\n                type=\"text\"\n                className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                value={nomeEscola}\n                onChange={e => setNomeEscola(e.target.value)}\n                disabled={isSaving}\n                placeholder=\"Digite o nome da escola\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Município\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  value={escola?.['Município'] || ''}\n                  onChange={e => onSave({ ...escola, 'Município': e.target.value })}\n                  placeholder=\"Nome do município\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Terra Indígena (TI)\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  value={escola?.['Terra Indigena (TI)'] || ''}\n                  onChange={e => onSave({ ...escola, 'Terra Indigena (TI)': e.target.value })}\n                  placeholder=\"Nome da terra indígena\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Endereço\n              </label>\n              <textarea\n                className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                rows=\"3\"\n                value={escola?.['Endereço'] || ''}\n                onChange={e => onSave({ ...escola, 'Endereço': e.target.value })}\n                placeholder=\"Endereço completo da escola\"\n              />\n            </div>\n          </div>\n        );\n\n      case 'imagens-escola':\n        return (\n          <ImageUploadSection \n            escolaId={escola?.id} \n            onImagesUpdate={handleImagesUpdate}\n          />\n        );\n\n      case 'imagens-professores':\n        return (\n          <ProfessorImageUploadSection \n            escolaId={escola?.id} \n            onImagesUpdate={handleImagesUpdate}\n          />\n        );\n\n      case 'localizacao':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Latitude\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"any\"\n                  className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  value={escola?.latitude || ''}\n                  onChange={e => onSave({ ...escola, latitude: parseFloat(e.target.value) || null })}\n                  placeholder=\"Ex: -23.5505\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Longitude\n                </label>\n                <input\n                  type=\"number\"\n                  step=\"any\"\n                  className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  value={escola?.longitude || ''}\n                  onChange={e => onSave({ ...escola, longitude: parseFloat(e.target.value) || null })}\n                  placeholder=\"Ex: -46.6333\"\n                />\n              </div>\n            </div>\n            \n            <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n              <p className=\"text-sm text-blue-800\">\n                <strong>Dica:</strong> Use o Google Maps para encontrar as coordenadas exatas da escola.\n                Clique com o botão direito no local da escola e selecione as coordenadas.\n              </p>\n            </div>\n          </div>\n        );\n\n      case 'gestao':\n        return (\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Gestão/Nome\n              </label>\n              <input\n                type=\"text\"\n                className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                value={escola?.gestao || ''}\n                onChange={e => onSave({ ...escola, gestao: e.target.value })}\n                placeholder=\"Nome da gestão atual\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Professores Indígenas\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  value={escola?.professores_indigenas || ''}\n                  onChange={e => onSave({ ...escola, professores_indigenas: e.target.value })}\n                  placeholder=\"Quantidade ou nomes\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Professores Não Indígenas\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"w-full border rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  value={escola?.professores_nao_indigenas || ''}\n                  onChange={e => onSave({ ...escola, professores_nao_indigenas: e.target.value })}\n                  placeholder=\"Quantidade ou nomes\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'configuracoes':\n        return (\n          <div className=\"space-y-4\">\n            <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n              <p className=\"text-sm text-yellow-800\">\n                <strong>Configurações Avançadas:</strong> Esta seção será implementada em breve.\n                Aqui você poderá configurar permissões, notificações e outras opções avançadas.\n              </p>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-xl max-w-4xl mx-auto\">\n      {/* Header */}\n      <div className=\"border-b border-gray-200 px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              Editar Escola: {escola?.Escola || 'Nova Escola'}\n            </h2>\n            <p className=\"text-sm text-gray-500 mt-1\">\n              Gerencie as informações e imagens da escola\n            </p>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      {/* Navegação por abas */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"flex space-x-8 px-6 overflow-x-auto\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                type=\"button\"\n                onClick={() => setActiveTab(tab.id)}\n                className={`whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm flex items-center gap-2 transition-colors ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n                title={tab.description}\n              >\n                <Icon className=\"w-4 h-4\" />\n                {tab.label}\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Conteúdo */}\n      <div className=\"p-6\">\n        <form onSubmit={handleSubmit}>\n          {/* Conteúdo da aba ativa */}\n          <div className=\"min-h-[400px]\">\n            {renderTabContent()}\n          </div>\n\n          {/* Mensagens de erro */}\n          {error && (\n            <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-red-700 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {/* Botões de ação */}\n          <div className=\"flex gap-3 mt-6 pt-6 border-t border-gray-200\">\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              disabled={isSaving}\n            >\n              {isSaving ? 'Salvando...' : 'Salvar Alterações'}\n            </button>\n            <button\n              type=\"button\"\n              className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors\"\n              onClick={onClose}\n              disabled={isSaving}\n            >\n              Cancelar\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nEditEscolaPanel.propTypes = {\n  escola: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default EditEscolaPanel;","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Upload, X, Image as ImageIcon, Trash2, Edit3, Check, AlertCircle } from 'lucide-react';\nimport { \n  uploadEscolaImage, \n  getEscolaImages, \n  deleteImage, \n  updateImageDescription,\n  checkImageLimit \n} from '../../services/escolaImageService';\nimport { debounce } from 'lodash';\n\nconst ImageUploadSection = ({ escolaId, onImagesUpdate }) => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [existingImages, setExistingImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imageLimit, setImageLimit] = useState({ current: 0, limit: 10, canUpload: true });\n  const [localDescriptions, setLocalDescriptions] = useState({});\n\n  // Buscar imagens existentes\n  const fetchExistingImages = useCallback(async () => {\n    if (!escolaId) return;\n    \n    try {\n      setLoading(true);\n      const images = await getEscolaImages(escolaId, 'imagens-das-escolas');\n      setExistingImages(images);\n      \n      // Inicializar descrições locais\n      const initialDescriptions = {};\n      images.forEach(image => {\n        initialDescriptions[image.id] = image.descricao;\n      });\n      setLocalDescriptions(initialDescriptions);\n      \n      // Verificar limite\n      const limit = await checkImageLimit(escolaId, 'imagens-das-escolas');\n      setImageLimit(limit);\n    } catch (err) {\n      console.error('Erro ao buscar imagens:', err);\n      setError('Erro ao carregar imagens existentes');\n    } finally {\n      setLoading(false);\n    }\n  }, [escolaId]);\n\n  useEffect(() => {\n    fetchExistingImages();\n  }, [fetchExistingImages]);\n\n  // Limpar mensagens após 5 segundos\n  useEffect(() => {\n    if (error || success) {\n      const timer = setTimeout(() => {\n        setError('');\n        setSuccess('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error, success]);\n\n  // Handler para seleção de arquivos\n  const handleFileSelect = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n\n    // Verificar se ainda pode fazer upload\n    if (!imageLimit.canUpload) {\n      setError(`Limite de ${imageLimit.limit} imagens atingido. Remova algumas imagens antes de adicionar novas.`);\n      return;\n    }\n\n    // Verificar se não excederá o limite\n    const totalImages = existingImages.length + selectedFiles.length + files.length;\n    if (totalImages > imageLimit.limit) {\n      setError(`Você pode adicionar no máximo ${imageLimit.limit - existingImages.length - selectedFiles.length} imagens.`);\n      return;\n    }\n\n    // Validar arquivos\n    const validFiles = files.filter(file => {\n      const isValidType = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'].includes(file.type);\n      const isValidSize = file.size <= 5 * 1024 * 1024; // 5MB\n      \n      if (!isValidType) {\n        setError(`Arquivo \"${file.name}\" não é uma imagem válida. Use apenas JPG, PNG, WEBP ou GIF.`);\n      }\n      if (!isValidSize) {\n        setError(`Arquivo \"${file.name}\" é muito grande. Tamanho máximo: 5MB.`);\n      }\n      \n      return isValidType && isValidSize;\n    });\n\n    if (validFiles.length > 0) {\n      setSelectedFiles(prev => [...prev, ...validFiles]);\n      setError('');\n    }\n  };\n\n  // Handler para drag & drop\n  const handleDrop = useCallback((event) => {\n    event.preventDefault();\n    const files = Array.from(event.dataTransfer.files);\n    \n    if (files.length === 0) return;\n\n    // Verificar se ainda pode fazer upload\n    if (!imageLimit.canUpload) {\n      setError(`Limite de ${imageLimit.limit} imagens atingido. Remova algumas imagens antes de adicionar novas.`);\n      return;\n    }\n\n    // Verificar se não excederá o limite\n    const totalImages = existingImages.length + selectedFiles.length + files.length;\n    if (totalImages > imageLimit.limit) {\n      setError(`Você pode adicionar no máximo ${imageLimit.limit - existingImages.length - selectedFiles.length} imagens.`);\n      return;\n    }\n\n    // Filtrar apenas imagens\n    const imageFiles = files.filter(file => file.type.startsWith('image/'));\n    if (imageFiles.length > 0) {\n      setSelectedFiles(prev => [...prev, ...imageFiles]);\n      setError('');\n    }\n  }, [imageLimit, existingImages.length, selectedFiles.length]);\n\n  const handleDragOver = useCallback((event) => {\n    event.preventDefault();\n  }, []);\n\n  // Remover arquivo selecionado\n  const removeSelectedFile = (index) => {\n    setSelectedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n\n  // Upload das imagens selecionadas\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) return;\n\n    setUploading(true);\n    setUploadProgress(0);\n    setError('');\n\n    try {\n      const uploadedImages = [];\n      \n      for (let i = 0; i < selectedFiles.length; i++) {\n        const file = selectedFiles[i];\n        const progress = ((i + 1) / selectedFiles.length) * 100;\n        setUploadProgress(progress);\n\n        const uploadedImage = await uploadEscolaImage(file, escolaId);\n        uploadedImages.push(uploadedImage);\n      }\n\n      // Atualizar lista de imagens\n      setExistingImages(prev => [...prev, ...uploadedImages]);\n      setSelectedFiles([]);\n      setUploadProgress(0);\n      setSuccess(`${uploadedImages.length} imagem(ns) carregada(s) com sucesso!`);\n\n      // Atualizar limite\n      const newLimit = await checkImageLimit(escolaId, 'imagens-das-escolas');\n      setImageLimit(newLimit);\n\n      // Notificar componente pai\n      if (onImagesUpdate) {\n        onImagesUpdate();\n      }\n\n    } catch (err) {\n      console.error('Erro no upload:', err);\n      setError(`Erro ao fazer upload: ${err.message}`);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n    }\n  };\n\n  // Deletar imagem existente\n  const handleDeleteImage = async (imageId, filePath) => {\n    if (!window.confirm('Tem certeza que deseja excluir esta imagem?')) return;\n\n    try {\n      await deleteImage(imageId, filePath, 'imagens-das-escolas');\n      \n      // Atualizar lista\n      setExistingImages(prev => prev.filter(img => img.id !== imageId));\n      \n      // Atualizar limite\n      const newLimit = await checkImageLimit(escolaId, 'imagens-das-escolas');\n      setImageLimit(newLimit);\n\n      setSuccess('Imagem excluída com sucesso!');\n\n      // Notificar componente pai\n      if (onImagesUpdate) {\n        onImagesUpdate();\n      }\n\n    } catch (err) {\n      console.error('Erro ao deletar imagem:', err);\n      setError(`Erro ao excluir imagem: ${err.message}`);\n    }\n  };\n\n  // Atualizar descrição da imagem\n  const handleDescriptionChange = async (imageId, newDescription) => {\n    try {\n      await updateImageDescription(imageId, newDescription);\n      \n      // Atualizar lista\n      setExistingImages(prev => prev.map(img => \n        img.id === imageId \n          ? { ...img, descricao: newDescription.trim() }\n          : img\n      ));\n\n      setSuccess('Descrição atualizada com sucesso!');\n\n    } catch (err) {\n      console.error('Erro ao atualizar descrição:', err);\n      setError(`Erro ao atualizar descrição: ${err.message}`);\n    }\n  };\n\n  // Debounce para salvar descrição\n  const debouncedSave = useCallback(\n    debounce((imageId, description) => {\n      handleDescriptionChange(imageId, description);\n    }, 1000),\n    []\n  );\n\n  // Atualizar descrição local\n  const handleLocalDescriptionChange = (imageId, value) => {\n    setLocalDescriptions(prev => ({\n      ...prev,\n      [imageId]: value\n    }));\n    debouncedSave(imageId, value);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6 bg-gray-50 rounded-lg\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando imagens...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          <ImageIcon className=\"w-5 h-5 text-blue-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Imagens da Escola</h3>\n        </div>\n        <div className=\"text-sm text-gray-500\">\n          {imageLimit.current}/{imageLimit.limit} imagens\n        </div>\n      </div>\n\n      {/* Mensagens */}\n      {error && (\n        <div className=\"flex items-center gap-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n          <AlertCircle className=\"w-5 h-5 text-red-600\" />\n          <span className=\"text-red-700\">{error}</span>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"flex items-center gap-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\n          <Check className=\"w-5 h-5 text-green-600\" />\n          <span className=\"text-green-700\">{success}</span>\n        </div>\n      )}\n\n      {/* Área de Upload */}\n      {imageLimit.canUpload && (\n        <div className=\"space-y-4\">\n          {/* Drag & Drop */}\n          <div\n            className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n              uploading \n                ? 'border-gray-300 bg-gray-50' \n                : 'border-blue-300 bg-blue-50 hover:border-blue-400 hover:bg-blue-100'\n            }`}\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n          >\n            <Upload className=\"w-8 h-8 text-blue-600 mx-auto mb-2\" />\n            <p className=\"text-gray-600 mb-2\">\n              Arraste imagens aqui ou clique para selecionar\n            </p>\n            <p className=\"text-sm text-gray-500 mb-4\">\n              JPG, PNG, WEBP, GIF • Máximo 5MB por arquivo\n            </p>\n            \n            <label className=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer transition-colors\">\n              <input\n                type=\"file\"\n                multiple\n                accept=\"image/jpeg,image/jpg,image/png,image/webp,image/gif\"\n                onChange={handleFileSelect}\n                className=\"hidden\"\n                disabled={uploading}\n              />\n              Selecionar Arquivos\n            </label>\n          </div>\n\n          {/* Progress Bar */}\n          {uploading && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm text-gray-600\">\n                <span>Fazendo upload...</span>\n                <span>{Math.round(uploadProgress)}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${uploadProgress}%` }}\n                ></div>\n              </div>\n            </div>\n          )}\n\n          {/* Arquivos Selecionados */}\n          {selectedFiles.length > 0 && (\n            <div className=\"space-y-3\">\n              <h4 className=\"font-medium text-gray-900\">Arquivos selecionados ({selectedFiles.length})</h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                {selectedFiles.map((file, index) => (\n                  <div key={index} className=\"relative group\">\n                    <img\n                      src={URL.createObjectURL(file)}\n                      alt={file.name}\n                      className=\"w-full h-24 object-cover rounded-lg border\"\n                    />\n                    <button\n                      onClick={() => removeSelectedFile(index)}\n                      className=\"absolute top-1 right-1 p-1 bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                    >\n                      <X className=\"w-3 h-3\" />\n                    </button>\n                    <p className=\"text-xs text-gray-600 mt-1 truncate\">{file.name}</p>\n                  </div>\n                ))}\n              </div>\n              <button\n                onClick={handleUpload}\n                disabled={uploading}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {uploading ? 'Fazendo Upload...' : 'Fazer Upload'}\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Imagens Existentes */}\n      {existingImages.length > 0 && (\n        <div className=\"space-y-4\">\n          <h4 className=\"font-medium text-gray-900\">Imagens da Escola ({existingImages.length})</h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n            {existingImages.map((image) => (\n              <div key={image.id} className=\"relative group bg-white rounded-lg border shadow-sm overflow-hidden\">\n                <img\n                  src={image.publicUrl}\n                  alt={image.descricao || 'Imagem da escola'}\n                  className=\"w-full h-32 object-cover\"\n                />\n                \n                {/* Botão de exclusão */}\n                <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <button\n                    onClick={() => handleDeleteImage(image.id, image.url)}\n                    className=\"p-1 bg-red-600 text-white rounded-full hover:bg-red-700\"\n                    title=\"Excluir imagem\"\n                  >\n                    <Trash2 className=\"w-3 h-3\" />\n                  </button>\n                </div>\n\n                {/* Campo de edição de descrição */}\n                <div className=\"p-2\">\n                  <textarea\n                    value={localDescriptions[image.id] || image.descricao || ''}\n                    onChange={(e) => {\n                      handleLocalDescriptionChange(image.id, e.target.value);\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter') {\n                        e.preventDefault();\n                      }\n                    }}\n                    className=\"w-full p-2 text-xs border rounded resize-none\"\n                    rows=\"2\"\n                    placeholder=\"Digite a descrição da imagem...\"\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Mensagem quando não há imagens */}\n      {existingImages.length === 0 && !uploading && (\n        <div className=\"text-center py-8 text-gray-500\">\n          <ImageIcon className=\"w-12 h-12 mx-auto mb-2 text-gray-300\" />\n          <p>Nenhuma imagem adicionada ainda.</p>\n          <p className=\"text-sm\">Adicione imagens para mostrar a escola.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nImageUploadSection.propTypes = {\n  escolaId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onImagesUpdate: PropTypes.func\n};\n\nexport default ImageUploadSection; "],"names":["_ref","escolaId","onImagesUpdate","selectedFiles","setSelectedFiles","useState","uploading","setUploading","uploadProgress","setUploadProgress","error","setError","success","setSuccess","existingImages","setExistingImages","loading","setLoading","imageLimit","setImageLimit","current","limit","canUpload","genero","setGenero","titulo","setTitulo","descricaoUpload","setDescricaoUpload","localDescriptions","setLocalDescriptions","fetchExistingImages","useCallback","async","images","getEscolaImages","initialDescriptions","forEach","image","id","descricao","checkImageLimit","err","console","useEffect","timer","setTimeout","clearTimeout","handleDrop","event","preventDefault","files","Array","from","dataTransfer","length","concat","imageFiles","filter","file","type","startsWith","prev","handleDragOver","debouncedSave","debounce","imageId","description","newDescription","updateImageDescription","map","img","_objectSpread","trim","message","handleDescriptionChange","_jsx","className","children","_jsxs","User","AlertCircle","Check","htmlFor","value","onChange","e","target","disabled","placeholder","onDrop","onDragOver","Upload","multiple","accept","validFiles","isValidType","includes","isValidSize","size","name","Math","round","style","width","index","src","URL","createObjectURL","alt","onClick","_","i","removeSelectedFile","X","uploadedImages","progress","uploadedImage","uploadProfessorImage","push","newLimit","publicUrl","filePath","window","confirm","deleteImage","handleDeleteImage","url","title","Trash2","handleLocalDescriptionChange","onKeyDown","key","rows","escola","onClose","onSave","nomeEscola","setNomeEscola","Escola","isSaving","setIsSaving","activeTab","setActiveTab","tabs","label","icon","BookOpen","ImageIcon","MapPin","Users","Settings","handleImagesUpdate","log","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","tab","Icon","onSubmit","renderTabContent","ImageUploadSection","ProfessorImageUploadSection","step","latitude","parseFloat","longitude","gestao","professores_indigenas","professores_nao_indigenas","uploadEscolaImage"],"sourceRoot":""}
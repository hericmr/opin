{"version":3,"file":"static/js/992.af31a3ed.chunk.js","mappings":"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","sources":["utils/mapConfig.js","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5 // Zoom ajustado para 5 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point, LineString } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Circle, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\n\n// Componentes GeoJSON\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função debounce para suavizar o zoom\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Função para encontrar pares de marcadores próximos (adaptada do Leaflet)\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  onMapRef,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  // Log para debug do zoom recebido\n  console.log('OpenLayersMap - Debug zoom recebido:', {\n    center,\n    zoom,\n    defaultCenter: MAP_CONFIG.center,\n    defaultZoom: MAP_CONFIG.zoom,\n    mobileZoom: MAP_CONFIG.mobile.zoom\n  });\n\n  // Debug para onPainelOpen\n  console.log('OpenLayersMap - onPainelOpen disponível:', !!onPainelOpen);\n  console.log('OpenLayersMap - Tipo do onPainelOpen:', typeof onPainelOpen);\n\n  // Teste da função onPainelOpen (remover depois)\n  useEffect(() => {\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('OpenLayersMap: Testando função onPainelOpen...');\n      // Teste com dados mock (remover depois)\n      const testData = {\n        titulo: 'TESTE - Escola Teste',\n        id: 999,\n        tipo: 'escola',\n        latitude: -23.5505,\n        longitude: -46.6333\n      };\n      console.log('OpenLayersMap: Chamando onPainelOpen com dados de teste:', testData);\n      // onPainelOpen(testData); // Teste removido\n    }\n  }, [onPainelOpen]);\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Estado para controlar o zoom da barra\n  const [zoomValue, setZoomValue] = useState(zoom);\n  const [isZooming, setIsZooming] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Estado para tooltip\n  const [tooltipElement, setTooltipElement] = useState(null);\n  \n  // Estado para long press\n  const longPressTimeout = useRef(null);\n  const longPressDelay = 500; // 500ms para long press\n\n  // Função para aplicar zoom com animação suave\n  const applyZoom = useCallback((newZoom) => {\n    if (!map.current || !isInitialized) return;\n    \n    const view = map.current.getView();\n    const currentZoom = view.getZoom();\n    \n    // Limitar o zoom aos valores válidos\n    const clampedZoom = Math.max(4, Math.min(18, newZoom));\n    \n    // Se o zoom não mudou significativamente, não fazer nada\n    if (Math.abs(clampedZoom - currentZoom) < 0.01) return;\n    \n    // Calcular a diferença de zoom para determinar a duração da animação\n    const zoomDiff = Math.abs(clampedZoom - currentZoom);\n    const duration = Math.min(300 + (zoomDiff * 50), 800); // Duração baseada na diferença\n    \n    view.animate({\n      zoom: clampedZoom,\n      duration: duration,\n      easing: (t) => {\n        // Função de easing suave (ease-out)\n        return 1 - Math.pow(1 - t, 3);\n      }\n    });\n  }, [isInitialized]);\n\n  // Função debounced para aplicar zoom\n  const debouncedApplyZoom = useCallback(\n    debounce((newZoom) => {\n      applyZoom(newZoom);\n      setIsZooming(false);\n    }, 100),\n    [applyZoom]\n  );\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar estilo dos marcadores individuais\n  const createMarkerStyle = useCallback((feature) => {\n    try {\n      const schoolData = feature.get('schoolData');\n      if (!schoolData) {\n        console.log('OpenLayersMap: createMarkerStyle - feature sem schoolData');\n        return null;\n      }\n\n      console.log('OpenLayersMap: createMarkerStyle - criando estilo para:', schoolData.titulo);\n\n      const baseColor = '#3B82F6'; // Azul para satélite, violeta para rua\n      const borderColor = '#1E40AF';\n\n      // Verificar se é parte de um par próximo\n      const isNearbyPair = feature.get('isNearbyPair');\n      const pairIndex = feature.get('pairIndex');\n\n      // Usar a função createMarkerSVG para criar o marcador (tamanho reduzido)\n      const svg = createMarkerSVG(baseColor, 24, {\n        borderColor: borderColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: false,\n        isNearbyPair: isNearbyPair\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Criar estilo base com ícone (escala reduzida)\n      const style = new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: isNearbyPair ? 1.1 : 1.0, // Marcadores de pares próximos são ligeiramente maiores\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        })\n      });\n\n      // Adicionar texto apenas se showNomesEscolas for true\n      if (showNomesEscolas) {\n        style.setText(new Text({\n          text: schoolData.titulo || 'Escola',\n          font: 'bold 10px Arial',\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: isNearbyPair ? -35 : -30, // Ajustar posição para marcadores menores\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }));\n      }\n\n      console.log('OpenLayersMap: createMarkerStyle - estilo criado com sucesso para:', schoolData.titulo);\n      return style;\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do marcador:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [showNomesEscolas]);\n\n  // Função para criar estilo dos clusters\n  const createClusterStyle = useCallback((feature) => {\n    try {\n      const features = feature.get('features');\n      if (!features || features.length === 0) {\n        console.log('OpenLayersMap: createClusterStyle - feature sem features válidas');\n        return null; // Return null for invalid features\n      }\n      \n      const size = features.length;\n      console.log('OpenLayersMap: createClusterStyle - processando feature com', size, 'features');\n\n      // Se for apenas um marcador, retorna estilo individual\n      if (size === 1) {\n        const singleFeature = features[0];\n        if (!singleFeature) {\n          console.log('OpenLayersMap: createClusterStyle - singleFeature é null');\n          return null;\n        }\n        console.log('OpenLayersMap: createClusterStyle - retornando estilo individual para:', singleFeature.get('schoolData')?.titulo);\n        return createMarkerStyle(singleFeature);\n      }\n\n      // Determinar cor e tamanho base baseado na quantidade de escolas (tamanhos reduzidos)\n      let baseColor = '#3B82F6';\n      let baseSize = 32; // Tamanho base reduzido para clusters\n      \n      if (size > 100) {\n        baseColor = '#1E40AF';\n        baseSize = 40;\n      } else if (size > 50) {\n        baseColor = '#2563EB';\n        baseSize = 36;\n      } else if (size > 20) {\n        baseColor = '#3B82F6';\n        baseSize = 34;\n      } else if (size > 10) {\n        baseColor = '#60A5FA';\n        baseSize = 33;\n      }\n\n      // Calcular escala proporcional (mínimo 1.0x, máximo 1.8x)\n      const scale = Math.min(1.0 + (size * 0.015), 1.8);\n      const finalSize = Math.round(baseSize * scale);\n\n      // Usar a função createMarkerSVG para criar o cluster\n      const svg = createMarkerSVG(baseColor, finalSize, {\n        borderColor: baseColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: size > 20, // Adicionar brilho para clusters grandes\n        isNearbyPair: false // Clusters não têm indicador de par próximo\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Determinar tamanho da fonte baseado no tamanho do cluster (reduzido)\n      let fontSize = '12px';\n      let fontWeight = 'bold';\n      \n      if (size > 100) {\n        fontSize = '14px';\n      } else if (size > 50) {\n        fontSize = '13px';\n      } else if (size > 20) {\n        fontSize = '12px';\n      }\n\n      return new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: 1,\n          anchor: [0.5, 0.5],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        }),\n        text: new Text({\n          text: size.toString(),\n          font: `${fontWeight} ${fontSize} Arial`,\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: finalSize * 0.6 // Posicionar texto abaixo do marcador\n        })\n      });\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do cluster:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [createMarkerStyle]);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Função para mostrar tooltip temporário em mobile\n  const showMobileTooltip = useCallback((event, content) => {\n    try {\n      if (!isMobile()) return;\n\n      console.log('OpenLayersMap: Mostrando tooltip mobile:', content);\n\n      // Remove tooltip anterior\n      if (tooltipElement) {\n        tooltipElement.remove();\n        setTooltipElement(null);\n      }\n\n      const element = document.createElement('div');\n      element.className = 'mobile-tooltip';\n      element.innerHTML = `\n        <div style=\"font-weight: bold; margin-bottom: 4px;\">${content}</div>\n        <div style=\"font-size: 12px; opacity: 0.8;\">Toque novamente para abrir</div>\n      `;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';\n      element.style.color = 'white';\n      element.style.padding = '10px 14px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '14px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '280px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.4)';\n      element.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      if (map.current && event.coordinate) {\n        const coordinate = event.coordinate;\n        const pixel = map.current.getPixelFromCoordinate(coordinate);\n        if (pixel && mapContainer.current) {\n          element.style.left = (pixel[0] + 10) + 'px';\n          element.style.top = (pixel[1] - 10) + 'px';\n          \n          mapContainer.current.appendChild(element);\n          setTooltipElement(element);\n\n          // Auto-remove after 3 seconds (aumentado para dar mais tempo)\n          setTimeout(() => {\n            if (element.parentNode) {\n              element.remove();\n              setTooltipElement(null);\n            }\n          }, 3000);\n        }\n      }\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao mostrar tooltip mobile:', error);\n    }\n  }, [tooltipElement]);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15,\n      interactive: true // Garantir que a camada é interativa\n    });\n\n    console.log('OpenLayersMap: Camada vetorial criada com interatividade ativada');\n    \n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações padrão\n    const view = new View({\n      center: fromLonLat(center),\n      zoom: zoom,\n      maxZoom: 18,\n      minZoom: 4\n    });\n\n    console.log('OpenLayersMap - View criada com configurações:', {\n      center: center,\n      zoom: zoom,\n      viewCenter: toLonLat(view.getCenter()),\n      viewZoom: view.getZoom(),\n      viewMaxZoom: view.getMaxZoom(),\n      viewMinZoom: view.getMinZoom()\n    });\n\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: view,\n      controls: defaultControls(),\n      interactions: defaultInteractions()\n    });\n\n    console.log('OpenLayersMap: Mapa criado com configurações:', {\n      center: center,\n      zoom: zoom,\n      actualCenter: toLonLat(map.current.getView().getCenter()),\n      actualZoom: map.current.getView().getZoom(),\n      maxZoom: map.current.getView().getMaxZoom(),\n      minZoom: map.current.getView().getMinZoom()\n    });\n\n    // Passar referência do mapa para o componente pai\n    if (onMapRef && typeof onMapRef === 'function') {\n      onMapRef(map.current);\n    }\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const currentMapZoom = view.getZoom();\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: currentMapZoom.toFixed(2)\n      };\n      \n      setMapInfo(newView);\n      \n      // Sincronizar com a barra de zoom apenas se não estiver sendo controlada pelo usuário\n      // e se já foi inicializado\n      if (!isZooming && isInitialized) {\n        const currentZoomValue = parseFloat(zoomValue);\n        // Só sincronizar se a diferença for significativa (evita micro-ajustes)\n        if (Math.abs(currentMapZoom - currentZoomValue) > 0.1) {\n          setZoomValue(currentMapZoom);\n        }\n      }\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      console.log('OpenLayersMap: Clique detectado no mapa');\n      console.log('OpenLayersMap: Pixel do clique:', event.pixel);\n      console.log('OpenLayersMap: Coordenada do clique:', event.coordinate);\n      \n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      console.log('OpenLayersMap: Feature encontrada pelo forEachFeatureAtPixel:', !!feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          console.log('OpenLayersMap: Cluster com', features.length, 'features');\n          \n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            console.log('OpenLayersMap: Cluster com 1 marcador - schoolData:', !!schoolData);\n            if (schoolData && onPainelOpen) {\n              onPainelOpen(schoolData);\n            }\n          } else if (features.length === 2) {\n            // Cluster com exatamente duas escolas - comportamento especial\n            console.log('OpenLayersMap: Cluster com exatamente 2 escolas - aplicando zoom especial');\n            \n            // Calcular o extent que inclui ambas as escolas\n            const extent = features.reduce((acc, feat) => {\n              const geom = feat.getGeometry();\n              if (geom) {\n                const featExtent = geom.getExtent();\n                if (acc === null) {\n                  return featExtent;\n                } else {\n                  return [\n                    Math.min(acc[0], featExtent[0]),\n                    Math.min(acc[1], featExtent[1]),\n                    Math.max(acc[2], featExtent[2]),\n                    Math.max(acc[3], featExtent[3])\n                  ];\n                }\n              }\n              return acc;\n            }, null);\n            \n            if (extent) {\n              // Fazer zoom suave para incluir ambas as escolas com padding adequado\n              map.current.getView().fit(extent, {\n                duration: 1000, // Animação mais suave para 2 escolas\n                padding: [120, 120, 120, 120], // Padding maior para melhor visualização\n                maxZoom: 16, // Limitar zoom máximo para evitar zoom excessivo\n                callback: () => {\n                  console.log('OpenLayersMap: Zoom concluído para cluster com 2 escolas');\n                  // Verificar se o cluster foi expandido após o zoom\n                  setTimeout(() => {\n                    const currentFeatures = clusterSource.current.getFeatures();\n                    const expandedFeatures = currentFeatures.filter(f => \n                      f.get('features') && f.get('features').length === 1\n                    );\n                    console.log('OpenLayersMap: Features expandidas após zoom:', expandedFeatures.length);\n                  }, 100);\n                }\n              });\n            }\n          } else {\n            // Cluster com múltiplos marcadores (mais de 2), fazer zoom inteligente\n            console.log(`OpenLayersMap: Cluster clicado com ${features.length} escolas`);\n            const clusterExtent = feature.getGeometry().getExtent();\n            const currentZoom = map.current.getView().getZoom();\n            let targetZoom = 12;\n            if (features.length > 20) {\n              targetZoom = 10;\n            } else if (features.length > 10) {\n              targetZoom = 11;\n            } else if (features.length > 5) {\n              targetZoom = 12;\n            } else {\n              targetZoom = 13;\n            }\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            map.current.getView().fit(clusterExtent, {\n              duration: 800,\n              padding: [80, 80, 80, 80],\n              maxZoom: targetZoom,\n              callback: () => {\n                console.log(`OpenLayersMap: Zoom concluído para cluster com ${features.length} escolas`);\n              }\n            });\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          console.log('OpenLayersMap: Marcador individual - schoolData:', !!schoolData);\n          if (schoolData && onPainelOpen) {\n            onPainelOpen(schoolData);\n          }\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n    let currentFeature = null;\n\n    map.current.on('pointermove', (event) => {\n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          console.log('OpenLayersMap: Cluster com', features.length, 'features');\n          \n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            console.log('OpenLayersMap: Cluster com 1 marcador - schoolData:', !!schoolData);\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          console.log('OpenLayersMap: Marcador individual - schoolData:', !!schoolData);\n          if (schoolData) {\n            tooltipElement = createTooltipElement(event, schoolData);\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, schoolData) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = createTooltipHTML(schoolData);\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o marcador\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do marcador\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Event listener específico para touch em mobile\n    if (isMobile()) {\n      console.log('OpenLayersMap: Adicionando event listener para touch em mobile');\n      \n      map.current.on('singleclick', (event) => {\n        console.log('OpenLayersMap: Singleclick detectado no mapa (mobile)');\n        console.log('OpenLayersMap: Pixel do singleclick:', event.pixel);\n        console.log('OpenLayersMap: Coordenada do singleclick:', event.coordinate);\n        \n        const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n        console.log('OpenLayersMap: Feature encontrada pelo singleclick:', !!feature);\n        \n        if (feature) {\n          // Verificar se é um cluster\n          if (feature.get('features')) {\n            const features = feature.get('features');\n            console.log('OpenLayersMap: Cluster com', features.length, 'features (mobile)');\n            \n            if (features.length === 1) {\n              // Cluster com apenas um marcador\n              const schoolData = features[0].get('schoolData');\n              console.log('OpenLayersMap: Cluster com 1 marcador - schoolData (mobile):', !!schoolData);\n              if (schoolData && onPainelOpen) {\n                onPainelOpen(schoolData);\n              }\n            } else if (features.length === 2) {\n              // Cluster com exatamente duas escolas - comportamento especial\n              console.log('OpenLayersMap: Cluster com exatamente 2 escolas - aplicando zoom especial (mobile)');\n              \n              // Calcular o extent que inclui ambas as escolas\n              const extent = features.reduce((acc, feat) => {\n                const geom = feat.getGeometry();\n                if (geom) {\n                  const featExtent = geom.getExtent();\n                  if (acc === null) {\n                    return featExtent;\n                  } else {\n                    return [\n                      Math.min(acc[0], featExtent[0]),\n                      Math.min(acc[1], featExtent[1]),\n                      Math.max(acc[2], featExtent[2]),\n                      Math.max(acc[3], featExtent[3])\n                    ];\n                  }\n                }\n                return acc;\n              }, null);\n              \n              if (extent) {\n                // Fazer zoom suave para incluir ambas as escolas com padding adequado\n                map.current.getView().fit(extent, {\n                  duration: 1000,\n                  padding: [120, 120, 120, 120],\n                  maxZoom: 16,\n                  callback: () => {\n                    console.log('OpenLayersMap: Zoom concluído para cluster com 2 escolas (mobile)');\n                  }\n                });\n              }\n            } else {\n              // Cluster com múltiplos marcadores\n              console.log(`OpenLayersMap: Cluster clicado com ${features.length} escolas (mobile)`);\n              const clusterExtent = feature.getGeometry().getExtent();\n              const currentZoom = map.current.getView().getZoom();\n              let targetZoom = 12;\n              if (features.length > 20) {\n                targetZoom = 10;\n              } else if (features.length > 10) {\n                targetZoom = 11;\n              } else if (features.length > 5) {\n                targetZoom = 12;\n              } else {\n                targetZoom = 13;\n              }\n              targetZoom = Math.max(targetZoom, currentZoom + 1);\n              map.current.getView().fit(clusterExtent, {\n                duration: 800,\n                padding: [80, 80, 80, 80],\n                maxZoom: targetZoom,\n                callback: () => {\n                  console.log(`OpenLayersMap: Zoom concluído para cluster com ${features.length} escolas (mobile)`);\n                }\n              });\n            }\n          } else {\n            // Marcador individual\n            const schoolData = feature.get('schoolData');\n            console.log('OpenLayersMap: Marcador individual - schoolData (mobile):', !!schoolData);\n            if (schoolData && onPainelOpen) {\n              onPainelOpen(schoolData);\n            }\n          }\n        }\n      });\n    }\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n      if (tooltipElement) {\n        tooltipElement.remove();\n        setTooltipElement(null);\n      }\n      if (tooltipElement) {\n        tooltipElement.remove();\n      }\n      if (longPressTimeout.current) {\n        clearTimeout(longPressTimeout.current);\n        longPressTimeout.current = null;\n      }\n    };\n  }, [createBaseLayers, createClusterStyle, createTooltipHTML, showMobileTooltip, onPainelOpen]);\n\n  // Marcar como inicializado após um pequeno delay\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsInitialized(true);\n      // Verificar se o zoom foi aplicado corretamente\n      if (map.current) {\n        const actualZoom = map.current.getView().getZoom();\n        console.log('OpenLayersMap - Verificação pós-inicialização:', {\n          expectedZoom: zoom,\n          actualZoom: actualZoom,\n          zoomDifference: Math.abs(actualZoom - zoom),\n          isCorrect: Math.abs(actualZoom - zoom) < 0.1\n        });\n        \n        // Se o zoom não foi aplicado corretamente, forçar a aplicação\n        if (Math.abs(actualZoom - zoom) > 0.1) {\n          console.log('OpenLayersMap - Forçando aplicação do zoom correto:', zoom);\n          map.current.getView().setZoom(zoom);\n          \n          // Verificar se o zoom foi aplicado corretamente após a animação\n          setTimeout(() => {\n            const finalZoom = map.current.getView().getZoom();\n            console.log('OpenLayersMap - Zoom após animação:', {\n              expectedZoom: zoom,\n              finalZoom: finalZoom,\n              success: Math.abs(finalZoom - zoom) < 0.1\n            });\n          }, 600);\n        }\n      }\n    }, 500);\n    \n    return () => clearTimeout(timer);\n  }, [zoom]);\n\n  // Sincronizar zoom inicial apenas uma vez\n  useEffect(() => {\n    if (!isInitialized) {\n      setZoomValue(zoom);\n    }\n  }, [zoom, isInitialized]);\n\n  // Forçar aplicação do zoom inicial\n  useEffect(() => {\n    if (map.current && isInitialized) {\n      const currentZoom = map.current.getView().getZoom();\n      console.log('OpenLayersMap - Forçando zoom inicial:', {\n        expectedZoom: zoom,\n        currentZoom: currentZoom,\n        difference: Math.abs(currentZoom - zoom)\n      });\n      \n      if (Math.abs(currentZoom - zoom) > 0.1) {\n        console.log('OpenLayersMap - Aplicando zoom correto:', zoom);\n        map.current.getView().animate({\n          zoom: zoom,\n          duration: 500,\n          center: fromLonLat(center)\n        });\n        \n        // Verificar se o zoom foi aplicado corretamente após a animação\n        setTimeout(() => {\n          const finalZoom = map.current.getView().getZoom();\n          console.log('OpenLayersMap - Zoom após animação:', {\n            expectedZoom: zoom,\n            finalZoom: finalZoom,\n            success: Math.abs(finalZoom - zoom) < 0.1\n          });\n        }, 600);\n      }\n    }\n  }, [map.current, isInitialized, zoom, center]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    console.log(`OpenLayersMap: Processando ${pontosValidos.length} marcadores válidos`);\n    console.log(`OpenLayersMap: Encontrados ${nearbyPairs.length} pares próximos`);\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        feature.set('isNearbyPair', pairIndex !== -1);\n        feature.set('pairIndex', pairIndex !== -1 ? pairIndex : null);\n        vectorSource.current.addFeature(feature);\n        if (index === 0) {\n          console.log('OpenLayersMap: Primeiro marcador criado:', {\n            ...point,\n            feature,\n            hasSchoolData: !!feature.get('schoolData')\n          });\n        }\n      }\n    });\n\n    // Forçar atualização do ClusterSource após adicionar features\n    if (clusterSource.current) {\n      clusterSource.current.refresh();\n      const clusterFeatures = clusterSource.current.getFeatures();\n      console.log('OpenLayersMap: ClusterSource atualizado. Total de features no ClusterSource:', clusterFeatures.length);\n    }\n\n    console.log(`OpenLayersMap: Adicionados ${pontosValidos.length} marcadores com clustering inteligente`);\n    \n    // Verificar se os marcadores foram criados corretamente\n    const allFeatures = vectorSource.current.getFeatures();\n    console.log('OpenLayersMap: Total de features na fonte:', allFeatures.length);\n    if (allFeatures.length > 0) {\n      console.log('OpenLayersMap: Primeira feature:', {\n        hasGeometry: !!allFeatures[0].getGeometry(),\n        hasSchoolData: !!allFeatures[0].get('schoolData'),\n        schoolData: allFeatures[0].get('schoolData')\n      });\n    }\n    \n    // Verificar se o ClusterSource está funcionando\n    const clusterFeatures = clusterSource.current.getFeatures();\n    console.log('OpenLayersMap: Total de features no ClusterSource:', clusterFeatures.length);\n    if (clusterFeatures.length > 0) {\n      console.log('OpenLayersMap: Primeira feature do cluster:', {\n        hasFeatures: !!clusterFeatures[0].get('features'),\n        featuresCount: clusterFeatures[0].get('features')?.length || 0,\n        hasGeometry: !!clusterFeatures[0].getGeometry()\n      });\n    }\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle(createClusterStyle);\n    }\n  }, [createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      console.log('OpenLayersMap: Atualizando estilo dos marcadores - showNomesEscolas:', showNomesEscolas);\n      vectorLayer.current.setStyle(createClusterStyle);\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n\n    console.log('OpenLayersMap: Recriando ClusterSource - showNomesEscolas:', showNomesEscolas);\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    console.log('OpenLayersMap: Gerenciando camadas GeoJSON:', {\n      showTerrasIndigenas,\n      showEstadoSP,\n      terrasIndigenasData: !!terrasIndigenasData,\n      estadoSPData: !!estadoSPData,\n      terrasFeatures: terrasIndigenasData?.features?.length || 0,\n      estadoFeatures: estadoSPData?.features?.length || 0,\n      mapLayers: map.current.getLayers().getLength()\n    });\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      console.log('OpenLayersMap: Adicionando camada Terras Indígenas');\n      console.log('OpenLayersMap: Dados Terras Indígenas:', {\n        type: terrasIndigenasData.type,\n        features: terrasIndigenasData.features?.length || 0,\n        crs: terrasIndigenasData.crs,\n        firstFeature: terrasIndigenasData.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades',\n          geometry: terrasIndigenasData.features[0].geometry ? {\n            type: terrasIndigenasData.features[0].geometry.type,\n            coordinates: terrasIndigenasData.features[0].geometry.coordinates ? \n              `${terrasIndigenasData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Terras Indígenas não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = terrasIndigenasData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada das Terras Indígenas:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        console.log('OpenLayersMap: Features lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: (feature) => {\n            const properties = feature.getProperties();\n            const isRegularizada = properties.fase_ti === 'Regularizada';\n            \n            return new Style({\n              fill: new Fill({\n                color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n              }),\n              stroke: new Stroke({\n                color: '#B22222',\n                width: 2,\n                lineDash: [3, 3]\n              })\n            });\n          },\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n        console.log('OpenLayersMap: Camada Terras Indígenas adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Terras Indígenas:', error);\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      console.log('OpenLayersMap: Adicionando camada Estado SP');\n      console.log('OpenLayersMap: Dados Estado SP:', {\n        type: estadoSPData.type,\n        features: estadoSPData.features?.length || 0,\n        crs: estadoSPData.crs,\n        firstFeature: estadoSPData.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades',\n          geometry: estadoSPData.features[0].geometry ? {\n            type: estadoSPData.features[0].geometry.type,\n            coordinates: estadoSPData.features[0].geometry.coordinates ? \n              `${estadoSPData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Estado SP não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = estadoSPData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada do Estado SP:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas Estado SP:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        console.log('OpenLayersMap: Features Estado SP lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature Estado SP processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: new Style({\n            fill: new Fill({\n              color: 'rgba(0, 0, 0, 0.3)'\n            }),\n            stroke: new Stroke({\n              color: '#000000',\n              width: 2\n            })\n          }),\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n        console.log('OpenLayersMap: Camada Estado SP adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Estado SP:', error);\n      }\n    }\n\n    console.log('OpenLayersMap: Finalização - Total de camadas no mapa:', map.current.getLayers().getLength());\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  // Adicionar event listeners para camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo && onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n    };\n  }, [onPainelOpen]);\n\n  return (\n    <div className={className} ref={mapContainer}>\n    </div>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  onMapRef,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    const isMobileDevice = window.innerWidth <= 768 || \n                          /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    console.log('MapSelector - Detecção mobile:', {\n      windowWidth: window.innerWidth,\n      userAgent: navigator.userAgent,\n      isMobileByWidth: window.innerWidth <= 768,\n      isMobileByUserAgent: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n      finalIsMobile: isMobileDevice\n    });\n    setIsMobile(isMobileDevice);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  // Log detalhado para debug\n  console.log('MapSelector - Configurações finais:', {\n    isMobile,\n    windowWidth: typeof window !== 'undefined' ? window.innerWidth : 'N/A',\n    userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'N/A',\n    mapCenter,\n    mapZoom,\n    configSource: isMobile ? 'mobile' : 'desktop'\n  });\n\n  // Verificar mudanças no estado mobile\n  useEffect(() => {\n    console.log('MapSelector - Estado mobile mudou:', {\n      isMobile,\n      mapCenter,\n      mapZoom,\n      mobileConfig: MAP_CONFIG.mobile,\n      desktopConfig: { center: MAP_CONFIG.center, zoom: MAP_CONFIG.zoom }\n    });\n  }, [isMobile, mapCenter, mapZoom]);\n\n  // Log para debug do onPainelOpen\n  console.log('MapSelector - onPainelOpen disponível:', !!onPainelOpen);\n  console.log('MapSelector - Tipo do onPainelOpen:', typeof onPainelOpen);\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        onMapRef={onMapRef}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n  const mapRef = useRef(null);\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    console.log('MapaEscolasIndigenas: abrirPainel chamado com:', {\n      info,\n      titulo: info?.titulo,\n      tipo: info?.tipo,\n      id: info?.id,\n      isNull: info === null,\n      isUndefined: info === undefined\n    });\n    \n    if (!info) {\n      console.warn('MapaEscolasIndigenas: abrirPainel recebeu info null/undefined');\n      return;\n    }\n    \n    console.log('MapaEscolasIndigenas: Definindo painelInfo como:', info);\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  // Função para obter referência do mapa do MapSelector\n  const handleMapRef = useCallback((mapInstance) => {\n    mapRef.current = mapInstance;\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        onMapRef={handleMapRef}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  // Verificar por user agent primeiro\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  const isMobileUserAgent = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent.toLowerCase());\n  \n  // Verificar por tamanho da tela\n  const isMobileScreen = window.innerWidth <= 768;\n  \n  // Verificar por touch capability\n  const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  \n  console.log('Mobile detection:', {\n    userAgent: userAgent,\n    isMobileUserAgent,\n    isMobileScreen,\n    isTouchDevice,\n    windowWidth: window.innerWidth,\n    windowHeight: window.innerHeight\n  });\n  \n  // Retornar true se qualquer um dos critérios for verdadeiro\n  return isMobileUserAgent || isMobileScreen || isTouchDevice;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n// Mobile interaction state management\nexport class MobileInteractionManager {\n  constructor() {\n    this.lastClickedFeature = null;\n    this.clickTimeout = null;\n    this.clickDelay = 500; // Aumentado para 500ms para dar mais tempo\n    this.lastClickTime = 0;\n  }\n\n  handleClick(feature, onFirstClick, onSecondClick) {\n    const currentTime = Date.now();\n    const isMobileDevice = isMobile();\n    \n    console.log('MobileInteractionManager: handleClick chamado', {\n      isMobile: isMobileDevice,\n      feature: feature ? 'presente' : 'ausente',\n      lastClickedFeature: this.lastClickedFeature ? 'presente' : 'ausente',\n      timeSinceLastClick: currentTime - this.lastClickTime,\n      clickDelay: this.clickDelay\n    });\n\n    if (!isMobileDevice) {\n      // Desktop behavior - direct action\n      console.log('MobileInteractionManager: Desktop - executando ação direta');\n      onSecondClick(feature);\n      return;\n    }\n\n    // Mobile behavior - two-click pattern\n    if (this.lastClickedFeature === feature && (currentTime - this.lastClickTime) < this.clickDelay) {\n      // Second click on same feature within timeout\n      console.log('MobileInteractionManager: Segundo clique detectado - executando ação');\n      this.clearTimeout();\n      this.lastClickedFeature = null;\n      this.lastClickTime = 0;\n      onSecondClick(feature);\n    } else {\n      // First click or click on different feature\n      console.log('MobileInteractionManager: Primeiro clique detectado');\n      \n      if (this.lastClickedFeature) {\n        // Clear previous first click\n        this.clearTimeout();\n      }\n      \n      this.lastClickedFeature = feature;\n      this.lastClickTime = currentTime;\n      onFirstClick(feature);\n      \n      // Set timeout to clear first click\n      this.clickTimeout = setTimeout(() => {\n        console.log('MobileInteractionManager: Timeout expirado - limpando primeiro clique');\n        this.lastClickedFeature = null;\n        this.lastClickTime = 0;\n      }, this.clickDelay);\n    }\n  }\n\n  clearTimeout() {\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n  }\n\n  reset() {\n    console.log('MobileInteractionManager: Reset chamado');\n    this.clearTimeout();\n    this.lastClickedFeature = null;\n    this.lastClickTime = 0;\n  }\n} "],"names":["MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","proj4","defs","register","PROXIMITY_THRESHOLD","createMarkerSVG","color","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","_ref","dataPoints","onPainelOpen","onMapRef","className","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","showNomesEscolas","console","log","defaultCenter","defaultZoom","mobileZoom","useEffect","testData","titulo","id","tipo","latitude","longitude","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","zoomValue","setZoomValue","isZooming","setIsZooming","isInitialized","setIsInitialized","terrasIndigenasLayerRef","estadoSPLayerRef","tooltipElement","setTooltipElement","longPressTimeout","applyZoom","useCallback","newZoom","current","view","getView","currentZoom","getZoom","clampedZoom","Math","max","min","abs","zoomDiff","duration","animate","easing","t","pow","createBaseLayers","debounce","func","wait","timeout","_len","args","Array","_key","clearTimeout","setTimeout","later","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createMarkerStyle","feature","schoolData","get","svg","svgUrl","encodeURIComponent","style","Style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","font","fill","Fill","stroke","Stroke","width","offsetY","textAlign","textBaseline","error","createClusterStyle","features","_singleFeature$get","singleFeature","baseSize","finalSize","round","fontSize","fontWeight","toString","createTooltipHTML","showMobileTooltip","event","content","isMobile","remove","element","document","createElement","innerHTML","position","backgroundColor","padding","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","zIndex","pointerEvents","boxShadow","border","backdropFilter","coordinate","pixel","getPixelFromCoordinate","left","top","appendChild","parentNode","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","interactive","View","fromLonLat","viewCenter","toLonLat","getCenter","viewZoom","viewMaxZoom","getMaxZoom","viewMinZoom","getMinZoom","Map","target","layers","controls","defaultControls","interactions","defaultInteractions","actualCenter","actualZoom","on","currentMapZoom","newView","toFixed","currentZoomValue","parseFloat","changed","forEachFeatureAtPixel","extent","reduce","acc","feat","geom","featExtent","getExtent","fit","callback","expandedFeatures","getFeatures","filter","f","clusterExtent","targetZoom","createTooltipElement","createClusterTooltipElement","textContent","count","setTarget","timer","expectedZoom","zoomDifference","isCorrect","setZoom","finalZoom","success","difference","clear","pontosValidos","point","isNaN","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","pairIndex","findIndex","pair","includes","addFeature","_objectSpread","hasSchoolData","refresh","clusterFeatures","allFeatures","hasGeometry","_clusterFeatures$0$ge","hasFeatures","featuresCount","setStyle","removeLayer","addLayer","_terrasIndigenasData$","_estadoSPData$feature","terrasFeatures","estadoFeatures","mapLayers","getLayers","getLength","_terrasIndigenasData$2","_terrasIndigenasData$3","type","crs","firstFeature","properties","Object","keys","coordinates","coords","GeoJSON","dataProjection","featureProjection","readFeatures","getProperties","terrasIndigenasLayer","isRegularizada","fase_ti","lineDash","getSource","terrai_nom","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","_estadoSPData$feature2","_estadoSPData$feature3","estadoSPLayer","handleClick","terraIndigenaInfo","un","_jsx","ref","cache","useGeoJSONCache","key","data","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","err","fetchGeoJSON","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","isMobileDevice","window","innerWidth","test","navigator","userAgent","windowWidth","isMobileByWidth","isMobileByUserAgent","finalIsMobile","addEventListener","removeEventListener","handleMinimize","prev","terrasIndigenas","hasData","estadoSP","CabecalhoMenu","_ref2","onMinimize","_jsxs","children","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","configSource","mobileConfig","desktopConfig","OpenLayersMap","quantidade","exemplo","refreshKey","useRefresh","mapRef","panel","useMemo","URLSearchParams","location","search","initialPanel","find","criarSlug","painelInfo","setPainelInfo","escolasVisiveis","pontuacao","group","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","groupEnd","abrirPainel","info","warn","refreshPainel","fecharPainel","handleMapRef","mapInstance","MapSelector","_Fragment","PainelInformacoes","closePainel","vendor","opera","isMobileUserAgent","toLowerCase","isMobileScreen","isTouchDevice","maxTouchPoints","windowHeight","innerHeight","MobileInteractionManager","constructor","this","lastClickedFeature","clickTimeout","clickDelay","lastClickTime","onFirstClick","onSecondClick","currentTime","Date","now","timeSinceLastClick","reset"],"sourceRoot":""}
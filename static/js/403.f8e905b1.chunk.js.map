{"version":3,"file":"static/js/403.f8e905b1.chunk.js","mappings":"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","sources":["services/legendasService.js","utils/openlayers/markerStyles.js","utils/mobileUtils.js","utils/openlayers/interactions.js","utils/mapConfig.js","components/OpenLayers/OpenLayersMarkers.js","utils/openlayers/layerStyles.js","components/OpenLayers/OpenLayersTerrasIndigenas.js","components/OpenLayers/OpenLayersEstadoSP.js","components/OpenLayers/OpenLayersLayers.js","components/map/MapWrapper.jsx","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","utils/slug.js","components/hooks/useDocumentosEscola.js","components/PainelInformacoes/components/InfoSection.js","components/PainelInformacoes/components/EscolaInfo/BasicInfo.js","components/PainelInformacoes/components/ImagensdasEscolas.js","components/PainelInformacoes/components/EscolaInfo/HistoriaEscola.js","components/PainelInformacoes/components/BooleanValue.js","components/PainelInformacoes/components/EscolaInfo/Modalidades.js","components/PainelInformacoes/components/EscolaInfo/Infraestrutura.js","components/PainelInformacoes/components/EscolaInfo/GestaoProfessores.js","components/PainelInformacoes/components/EscolaInfo/ProjetosParcerias.js","components/PainelInformacoes/components/ImagemHistoriadoProfessor.js","components/shared/Avatar.js","components/shared/AvatarThemes.js","components/PainelInformacoes/components/FotoProfessor.js","components/PainelInformacoes/components/EscolaInfo/HistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/index.js","components/PainelInformacoes/icons/HandFistIcon.js","components/PainelInformacoes/components/InfoItem.js","components/PainelInformacoes/TerraIndigenaInfo.js","components/ShareButton.js","components/PainelInformacoes/ShareSection.js","components/PainelDescricao.js","components/PainelInformacoes/IntroPanel.js","utils/textFormatting.js","components/PainelHeader.js","components/hooks/usePainelVisibility.js","components/PainelInformacoes/components/PainelContainer.js","components/hooks/usePainelDimensions.js","components/PainelInformacoes/components/DocumentViewer.js","components/PainelInformacoes/components/VideoPlayer.js","components/PainelInformacoes/index.js","components/hooks/useShare.js","components/hooks/useClickOutside.js","components/hooks/useDynamicURL.js","components/MapaEscolasIndigenas.js","services/historiaProfessorService.js"],"sourcesContent":["import { supabase } from '../supabaseClient';\n\n/**\n * Serviço para gerenciar legendas de fotos\n */\n\n/**\n * Testar se a tabela legendas_fotos existe e está acessível\n * @returns {Promise<boolean>} True se a tabela existe\n */\nexport const testLegendasTable = async () => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .select('count')\n      .limit(1);\n    \n    if (error) {\n      console.warn('Tabela legendas_fotos não encontrada ou sem permissão:', error.message);\n      return false;\n    }\n    \n    console.log('Tabela legendas_fotos acessível');\n    return true;\n  } catch (error) {\n    console.warn('Erro ao testar tabela legendas_fotos:', error.message);\n    return false;\n  }\n};\n\n/**\n * Buscar legenda por URL da imagem\n * @param {string} imageUrl - URL da imagem\n * @param {number} escolaId - ID da escola\n * @param {string} categoria - Categoria da imagem (professor, escola, etc.)\n * @returns {Promise<Object|null>} Legenda encontrada ou null\n */\nexport const getLegendaByImageUrl = async (imageUrl, escolaId, categoria = 'professor') => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', imageUrl)\n      .eq('escola_id', escolaId)\n      .eq('categoria', categoria)\n      .single();\n\n    if (error) {\n      // Se não encontrar, retorna null (não é erro)\n      if (error.code === 'PGRST116') {\n        return null;\n      }\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.warn('Erro ao buscar legenda:', error.message);\n    return null;\n  }\n};\n\n/**\n * Adicionar nova legenda de foto\n * @param {Object} legendaData - Dados da legenda\n * @returns {Promise<Object>} Legenda criada\n */\nexport const addLegendaFoto = async (legendaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .insert([legendaData])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao adicionar legenda:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar legenda de foto existente\n * @param {number} legendaId - ID da legenda\n * @param {Object} updateData - Dados para atualizar\n * @returns {Promise<Object>} Legenda atualizada\n */\nexport const updateLegendaFoto = async (legendaId, updateData) => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .update(updateData)\n      .eq('id', legendaId)\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.error('Erro ao atualizar legenda:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar legenda de foto\n * @param {number} legendaId - ID da legenda\n * @returns {Promise<boolean>} True se deletado com sucesso\n */\nexport const deleteLegendaFoto = async (legendaId) => {\n  try {\n    const { error } = await supabase\n      .from('legendas_fotos')\n      .delete()\n      .eq('id', legendaId);\n\n    if (error) {\n      throw error;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao deletar legenda:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar todas as legendas de uma escola\n * @param {number} escolaId - ID da escola\n * @param {string} categoria - Categoria das imagens (opcional)\n * @returns {Promise<Array>} Lista de legendas\n */\nexport const getLegendasByEscola = async (escolaId, categoria = null) => {\n  try {\n    let query = supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('escola_id', escolaId);\n\n    if (categoria) {\n      query = query.eq('categoria', categoria);\n    }\n\n    const { data, error } = await query.order('created_at', { ascending: false });\n\n    if (error) {\n      throw error;\n    }\n\n    return data || [];\n  } catch (error) {\n    console.error('Erro ao buscar legendas da escola:', error);\n    throw error;\n  }\n};\n\n/**\n * Buscar título personalizado de vídeo por URL\n * @param {string} videoUrl - URL do vídeo\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Object|null>} Título encontrado ou null\n */\nexport const getTituloByVideoUrl = async (videoUrl, escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('legendas_fotos')\n      .select('*')\n      .eq('imagem_url', videoUrl)\n      .eq('escola_id', escolaId)\n      .eq('categoria', 'video')\n      .single();\n\n    if (error) {\n      // Se não encontrar, retorna null (não é erro)\n      if (error.code === 'PGRST116') {\n        return null;\n      }\n      throw error;\n    }\n\n    return data;\n  } catch (error) {\n    console.warn('Erro ao buscar título do vídeo:', error.message);\n    return null;\n  }\n};\n\nexport default {\n  testLegendasTable,\n  getLegendaByImageUrl,\n  addLegendaFoto,\n  updateLegendaFoto,\n  deleteLegendaFoto,\n  getLegendasByEscola,\n  getTituloByVideoUrl\n};\n","import { Style, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\n\n// Caminho para o marcador SVG\nconst MARKER_SVG_PATH = `${process.env.PUBLIC_URL || ''}/map-marker.svg`;\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n/**\n * Cria estilo para marcador individual\n * @param {Object} feature - Feature do OpenLayers\n * @param {boolean} showNames - Se deve mostrar nomes das escolas\n * @returns {Style} Estilo do marcador\n */\nexport const createMarkerStyle = (feature, showNames = false) => {\n  const markerData = feature.get('markerData') || feature.get('schoolData'); // Suporta ambos\n  const isNearbyPair = feature.get('isNearbyPair');\n  \n  if (!markerData) return null;\n\n  const baseColor = isNearbyPair ? MARKER_COLORS.nearbyPair : MARKER_COLORS.individual;\n  const borderColor = isNearbyPair ? '#DC2626' : MARKER_COLORS.individualBorder;\n\n  // Estilo base do marcador (ícone SVG)\n  const markerStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: isNearbyPair ? 1.2 : 1.0,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Se deve mostrar nomes, adicionar texto\n  if (showNames && markerData.titulo) {\n    const textStyle = new Style({\n      text: new Text({\n        text: markerData.titulo,\n        font: '12px Arial',\n        fill: new Fill({\n          color: '#1F2937'\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center'\n      }),\n      geometry: feature.getGeometry()\n    });\n    \n    return [markerStyle, textStyle];\n  }\n\n  return markerStyle;\n};\n\n/**\n * Cria estilo para cluster de marcadores\n * @param {Object} feature - Feature do cluster\n * @param {Function} markerStyleFunction - Função para estilizar marcadores individuais\n * @returns {Style} Estilo do cluster\n */\nexport const createClusterStyle = (feature, markerStyleFunction) => {\n  const features = feature.get('features');\n  \n  if (!features || features.length === 0) {\n    return markerStyleFunction(feature);\n  }\n\n  // Se for apenas um marcador, usar estilo de marcador individual\n  if (features.length === 1) {\n    return markerStyleFunction(features[0]);\n  }\n\n  // Determinar tamanho e cor do cluster baseado na quantidade\n  let clusterSize, clusterColor;\n  const count = features.length;\n\n  if (count <= CLUSTER_SIZES.small.max) {\n    clusterSize = CLUSTER_SIZES.small.size;\n    clusterColor = MARKER_COLORS.cluster.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    clusterSize = CLUSTER_SIZES.medium.size;\n    clusterColor = MARKER_COLORS.cluster.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    clusterSize = CLUSTER_SIZES.large.size;\n    clusterColor = MARKER_COLORS.cluster.large;\n  } else if (count <= CLUSTER_SIZES.xlarge.max) {\n    clusterSize = CLUSTER_SIZES.xlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  } else {\n    clusterSize = CLUSTER_SIZES.xxlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  }\n\n  // Determinar fonte baseada no tamanho\n  let font;\n  if (count <= CLUSTER_SIZES.small.max) {\n    font = CLUSTER_FONTS.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    font = CLUSTER_FONTS.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    font = CLUSTER_FONTS.large;\n  } else {\n    font = CLUSTER_FONTS.xlarge;\n  }\n\n  return new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: Math.max(0.8, clusterSize / 80),\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    text: new Text({\n      text: count.toString(),\n      font: font,\n      fill: new Fill({\n        color: '#FFFFFF'\n      }),\n      stroke: new Stroke({\n        color: '#1F2937',\n        width: 1\n      })\n    })\n  });\n};\n\n/**\n * Cria estilo para marcador com indicador de par próximo\n * @param {Object} feature - Feature do marcador\n * @returns {Style} Estilo do marcador com indicador\n */\nexport const createNearbyPairStyle = (feature) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle || !Array.isArray(baseStyle)) {\n    return baseStyle;\n  }\n\n  // Adicionar indicador de par próximo\n  const indicatorStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 0.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Posicionar indicador no canto superior direito\n  const geometry = feature.getGeometry();\n  const coordinates = geometry.getCoordinates();\n  const offsetX = 0.0001; // Ajustar conforme necessário\n  const offsetY = 0.0001;\n  \n  const indicatorGeometry = new Point([\n    coordinates[0] + offsetX,\n    coordinates[1] + offsetY\n  ]);\n  \n  indicatorStyle.setGeometry(indicatorGeometry);\n  \n  return [...baseStyle, indicatorStyle];\n};\n\n/**\n * Cria estilo para marcador com tooltip\n * @param {Object} feature - Feature do marcador\n * @param {string} tooltipText - Texto do tooltip\n * @returns {Style} Estilo do marcador com tooltip\n */\nexport const createMarkerWithTooltipStyle = (feature, tooltipText) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle) return null;\n\n  // Adicionar tooltip como texto\n  const tooltipStyle = new Style({\n    text: new Text({\n      text: tooltipText,\n      font: '11px Arial',\n      fill: new Fill({\n        color: '#1F2937'\n      }),\n      stroke: new Stroke({\n        color: '#FFFFFF',\n        width: 2\n      }),\n      offsetY: -25,\n      textAlign: 'center',\n      backgroundFill: new Fill({\n        color: 'rgba(255, 255, 255, 0.9)'\n      }),\n      backgroundStroke: new Stroke({\n        color: '#E5E7EB',\n        width: 1\n      }),\n      padding: [4, 8]\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, tooltipStyle] : [baseStyle, tooltipStyle];\n};\n\n/**\n * Aplica estilo de hover ao marcador\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito hover\n */\nexport const applyHoverStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const hoverStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.3,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, hoverStyle] : [baseStyle, hoverStyle];\n};\n\n/**\n * Cria estilo para marcador selecionado\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const selectionStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n","// Utility functions for mobile detection and interaction\n\n/**\n * Detecta se é um dispositivo mobile baseado em múltiplos critérios\n */\nexport const isMobile = () => {\n  // Verificar largura da tela\n  const isMobileWidth = window.innerWidth <= 768;\n  \n  // Verificar se tem capacidades de toque\n  const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  \n  // Verificar se é um dispositivo móvel baseado no user agent\n  const isMobileUserAgent = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  \n  // Verificar orientação (mobile geralmente tem orientação variável)\n  const isMobileOrientation = window.orientation !== undefined;\n  \n  // Retorna true se pelo menos 2 critérios forem verdadeiros\n  const criteria = [isMobileWidth, hasTouch, isMobileUserAgent, isMobileOrientation];\n  const mobileCriteria = criteria.filter(Boolean).length;\n  \n  console.log('[mobileUtils] Critérios de mobile:', {\n    isMobileWidth,\n    hasTouch,\n    isMobileUserAgent,\n    isMobileOrientation,\n    mobileCriteria,\n    userAgent: navigator.userAgent\n  });\n  \n  return mobileCriteria >= 2;\n};\n\n/**\n * Detecta se é mobile em orientação paisagem\n */\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n/**\n * Detecta especificamente se o dispositivo tem capacidades de toque\n */\nexport const hasTouchCapabilities = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n};\n\n/**\n * Detecta se o evento atual é um evento de toque\n */\nexport const isTouchEvent = (event) => {\n  return event.type && event.type.startsWith('touch');\n}; ","import { isMobile, hasTouchCapabilities, isTouchEvent } from '../mobileUtils';\nimport { DragPan, MouseWheelZoom, PinchZoom } from 'ol/interaction';\n\n/**\n * Classe para gerenciar interações e eventos do OpenLayers\n */\nexport class OpenLayersInteractions {\n  constructor(map, options = {}) {\n    this.map = map;\n    this.options = {\n      enableHover: options.enableHover !== false,\n      enableClick: options.enableClick !== false,\n      enableDoubleClick: options.enableDoubleClick !== false,\n      enableTouch: options.enableTouch !== false,\n      hoverDelay: options.hoverDelay || 200,\n      clickDelay: options.clickDelay || 300,\n      ...options\n    };\n\n    this.eventHandlers = new Map();\n    this.hoveredFeature = null;\n    this.clickedFeature = null;\n    this.clickTimeout = null;\n    this.hoverTimeout = null;\n    this.tooltipElement = null;\n    console.log('[OpenLayersInteractions] Interações inicializadas');\n\n    this.initializeInteractions();\n  }\n\n  /**\n   * Verifica se é dispositivo mobile (dinâmico e robusto)\n   */\n  isMobile() {\n    const mobile = isMobile();\n    const hasTouch = hasTouchCapabilities();\n    \n    console.log('[OpenLayersInteractions] Detecção de mobile:', {\n      mobile,\n      hasTouch,\n      windowWidth: window.innerWidth,\n      userAgent: navigator.userAgent\n    });\n    \n    return mobile || hasTouch;\n  }\n\n  /**\n   * Inicializa todas as interações\n   */\n  initializeInteractions() {\n    if (this.options.enableHover) {\n      this.setupHoverInteraction();\n    }\n\n    if (this.options.enableClick) {\n      this.setupClickInteraction();\n    }\n\n    if (this.options.enableDoubleClick) {\n      this.setupDoubleClickInteraction();\n    }\n\n    if (this.options.enableTouch && this.isMobile()) {\n      this.setupTouchInteraction();\n    }\n  }\n\n  /**\n   * Configura interação de hover\n   */\n  setupHoverInteraction() {\n    this.map.on('pointermove', (event) => {\n      this.handlePointerMove(event);\n    });\n\n    this.map.on('pointerleave', () => {\n      this.handlePointerLeave();\n    });\n  }\n\n  /**\n   * Configura interação de clique\n   */\n  setupClickInteraction() {\n    this.map.on('click', (event) => {\n      this.handleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação de duplo clique\n   */\n  setupDoubleClickInteraction() {\n    this.map.on('dblclick', (event) => {\n      this.handleDoubleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação touch para mobile\n   */\n  setupTouchInteraction() {\n    // Em mobile, usar o sistema de clique com tooltip\n    // O handleClick já trata mobile vs desktop\n    console.log('[OpenLayersInteractions] Touch interaction configurada para mobile');\n  }\n\n  /**\n   * Handler para movimento do ponteiro (hover)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handlePointerMove(event) {\n    if (this.isMobile()) return; // Desabilitar hover em mobile\n\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    // Debug: verificar se está detectando features\n    if (feature && !this.hoveredFeature) {\n      console.log('[OpenLayersInteractions] Feature detectado:', {\n        type: feature.get('type'),\n        schoolData: feature.get('schoolData'),\n        terraIndigenaInfo: feature.get('terraIndigenaInfo')\n      });\n    }\n    \n    if (feature !== this.hoveredFeature) {\n      // Limpar hover anterior\n      if (this.hoveredFeature) {\n        this.clearHover();\n      }\n\n      // Aplicar novo hover\n      if (feature) {\n        this.applyHover(feature, event);\n      }\n    }\n  }\n\n  /**\n   * Handler para saída do ponteiro\n   */\n  handlePointerLeave() {\n    this.clearHover();\n  }\n\n  /**\n   * Handler para clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, primeiro clique mostra tooltip, segundo abre painel\n    if (this.isMobile()) {\n      this.handleMobileClick(feature, event);\n      return;\n    }\n\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique no mesmo feature\n      this.handleDoubleClick(event);\n      return;\n    }\n\n    // Primeiro clique\n    this.clickedFeature = feature;\n    \n    // Configurar timeout para resetar o clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      this.clickedFeature = null;\n    }, this.options.clickDelay);\n\n    // Executar handler de clique único\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para duplo clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleDoubleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Limpar timeout de clique único\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n\n    // Resetar feature clicado\n    this.clickedFeature = null;\n\n    // Executar handler de duplo clique\n    this.executeDoubleClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para fim de toque (mobile)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleTouchEnd(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, toque único executa ação de clique\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para clique em mobile (primeiro mostra tooltip, segundo abre painel)\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleMobileClick(feature, event) {\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique: abrir painel\n      console.log('[OpenLayersInteractions] Segundo clique em mobile - abrindo painel');\n      this.forceHideTooltip(); // Esconder tooltip e resetar estado\n      this.executeClickHandler(feature, event); // Abrir painel\n      return;\n    }\n\n    // Primeiro clique: mostrar tooltip\n    console.log('[OpenLayersInteractions] Primeiro clique em mobile - mostrando tooltip');\n    this.clickedFeature = feature;\n    \n    // Mostrar tooltip\n    if (this.options.showTooltip) {\n      this.showTooltip(feature, event);\n    }\n\n    // Configurar timeout para esconder tooltip e resetar clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      console.log('[OpenLayersInteractions] Timeout mobile - escondendo tooltip e resetando');\n      this.forceHideTooltip();\n    }, 3000); // 3 segundos de timeout\n\n    // Executar handler de hover para aplicar estilo visual\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Aplica efeito de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  applyHover(feature, event) {\n    this.hoveredFeature = feature;\n    \n    // Aplicar estilo de hover\n    this.applyHoverStyle(feature);\n    \n    // Mostrar tooltip se configurado (apenas em desktop)\n    if (this.options.showTooltip && !this.isMobile()) {\n      this.showTooltip(feature, event);\n    }\n\n    // Executar handler de hover\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Remove efeito de hover\n   */\n  clearHover() {\n    if (this.hoveredFeature) {\n      // Remover estilo de hover\n      this.clearHoverStyle(this.hoveredFeature);\n      \n      // Em mobile, não esconder tooltip automaticamente\n      // O tooltip é controlado pelo sistema de clique\n      if (!this.isMobile()) {\n        this.hideTooltip();\n      }\n      \n      // Executar handler de hover out\n      this.executeHoverOutHandler(this.hoveredFeature);\n      \n      this.hoveredFeature = null;\n    }\n  }\n\n  /**\n   * Aplica estilo de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  applyHoverStyle(feature) {\n    // Implementar lógica de estilo de hover\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, true);\n    }\n  }\n\n  /**\n   * Remove estilo de hover de um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  clearHoverStyle(feature) {\n    // Implementar lógica de remoção de estilo de hover\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, false);\n    }\n  }\n\n  /**\n   * Mostra tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  showTooltip(feature, event) {\n    if (this.tooltipElement) {\n      this.hideTooltip();\n    }\n\n    const tooltipContent = this.getTooltipContent(feature);\n    console.log('[OpenLayersInteractions] Conteúdo do tooltip:', tooltipContent);\n    \n    if (!tooltipContent) {\n      console.log('[OpenLayersInteractions] Sem conteúdo para tooltip');\n      return;\n    }\n\n    this.tooltipElement = this.createTooltipElement(tooltipContent, event);\n    this.map.getTargetElement().appendChild(this.tooltipElement);\n    console.log('[OpenLayersInteractions] Tooltip criado e adicionado ao DOM');\n  }\n\n  /**\n   * Esconde tooltip\n   */\n  hideTooltip() {\n    if (this.tooltipElement) {\n      this.tooltipElement.remove();\n      this.tooltipElement = null;\n      console.log('[OpenLayersInteractions] Tooltip escondido');\n    }\n  }\n\n  /**\n   * Força limpeza do tooltip (útil para mobile)\n   */\n  forceHideTooltip() {\n    this.hideTooltip();\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n    this.clickedFeature = null;\n    console.log('[OpenLayersInteractions] Tooltip forçadamente escondido e estado resetado');\n  }\n\n  /**\n   * Cria elemento de tooltip\n   * @param {string} content - Conteúdo do tooltip\n   * @param {Object} event - Evento do OpenLayers\n   * @returns {HTMLElement} Elemento do tooltip\n   */\n  createTooltipElement(content, event) {\n    const element = document.createElement('div');\n    element.className = 'ol-tooltip';\n    \n    // Detectar se é terra indígena baseado no conteúdo\n    const isTerraIndigena = content.includes('Terra Indígena');\n    \n    // Em mobile, tornar o nome clicável\n    if (this.isMobile()) {\n      // Criar tooltip clicável para mobile\n      const clickableContent = `<span class=\"tooltip-clickable\">${content}</span>`;\n      element.innerHTML = clickableContent;\n      \n      // Configurar estilos para mobile\n      const tooltipStyles = isTerraIndigena ? {\n        backgroundColor: '#fef2f2', // Fundo vermelho claro\n        borderColor: 'rgba(239, 68, 68, 0.3)' // Borda vermelha\n      } : {\n        backgroundColor: '#bbf7d0', // Fundo verde\n        borderColor: 'rgba(34, 197, 94, 0.3)' // Borda verde\n      };\n      \n      Object.assign(element.style, {\n        position: 'absolute',\n        padding: '8px 12px',\n        borderRadius: '8px',\n        fontSize: '14px',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n        fontWeight: '700',\n        color: '#000000',\n        pointerEvents: 'auto', // IMPORTANTE: Permitir eventos de clique no mobile\n        zIndex: '1000',\n        maxWidth: '250px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n        border: `2px solid ${tooltipStyles.borderColor}`,\n        cursor: 'default',\n        ...tooltipStyles\n      });\n      \n      // Configurar o span clicável\n      const clickableSpan = element.querySelector('.tooltip-clickable');\n      if (clickableSpan) {\n        Object.assign(clickableSpan.style, {\n          cursor: 'pointer',\n          textDecoration: 'underline',\n          textDecorationColor: '#3B82F6',\n          textDecorationThickness: '2px',\n          transition: 'all 0.2s ease',\n          display: 'inline-block',\n          padding: '2px 4px',\n          borderRadius: '4px',\n          fontWeight: '800'\n        });\n        \n        // Adicionar evento de clique para abrir o painel\n        clickableSpan.addEventListener('click', () => {\n          console.log('[OpenLayersInteractions] Nome clicado no tooltip mobile');\n          // Emitir evento para abrir o painel\n          const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n          if (feature) {\n            this.executeClickHandler(feature, event);\n          }\n        });\n        \n        // Adicionar efeitos de hover\n        clickableSpan.addEventListener('mouseenter', () => {\n          clickableSpan.style.backgroundColor = 'rgba(59, 130, 246, 0.1)';\n          clickableSpan.style.textDecorationColor = '#1D4ED8';\n          clickableSpan.style.transform = 'scale(1.05)';\n        });\n        \n        clickableSpan.addEventListener('mouseleave', () => {\n          clickableSpan.style.backgroundColor = 'transparent';\n          clickableSpan.style.textDecorationColor = '#3B82F6';\n          clickableSpan.style.transform = 'scale(1)';\n        });\n      }\n    } else {\n      // Desktop: tooltip normal (não clicável)\n      element.innerHTML = content;\n      \n      // Estilos do tooltip para desktop\n      const tooltipStyles = isTerraIndigena ? {\n        backgroundColor: '#fef2f2' // Fundo vermelho claro\n      } : {\n        backgroundColor: '#bbf7d0' // Fundo verde\n      };\n      \n      Object.assign(element.style, {\n        position: 'absolute',\n        padding: '6px 10px',\n        borderRadius: '6px',\n        fontSize: '12px',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n        fontWeight: '700',\n        color: '#000000',\n        pointerEvents: 'none',\n        zIndex: '1000',\n        maxWidth: '200px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        ...tooltipStyles\n      });\n    }\n\n    // Posicionar tooltip\n    const coordinate = event.coordinate;\n    const pixel = this.map.getPixelFromCoordinate(coordinate);\n    \n    element.style.left = (pixel[0] + 10) + 'px';\n    element.style.top = (pixel[1] - 10) + 'px';\n\n    return element;\n  }\n\n  /**\n   * Obtém conteúdo do tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @returns {string} Conteúdo do tooltip\n   */\n  getTooltipContent(feature) {\n    console.log('[OpenLayersInteractions] Obtendo conteúdo do tooltip para feature:', {\n      type: feature.get('type'),\n      schoolData: feature.get('schoolData'),\n      terraIndigenaInfo: feature.get('terraIndigenaInfo')\n    });\n\n    // Implementar lógica para obter conteúdo do tooltip\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.tooltipContentFunction) {\n      const content = this.options.tooltipContentFunction(feature);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (função customizada):', content);\n      return content;\n    }\n\n    // Conteúdo padrão baseado no tipo de feature\n    const schoolData = feature.get('schoolData');\n    if (schoolData) {\n      // FORÇAR apenas o título da escola, SEM município ou outras informações\n      const titulo = schoolData.titulo || 'Escola Indígena';\n      console.log('[OpenLayersInteractions] Título extraído (padrão):', titulo);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão escola - FORÇADO apenas título):', titulo);\n      return titulo; // Retorna APENAS o título\n    }\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (terraIndigenaInfo) {\n      const content = `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão terra indígena):', content);\n      return content;\n    }\n\n    console.log('[OpenLayersInteractions] Nenhum conteúdo encontrado para tooltip');\n    return null;\n  }\n\n  /**\n   * Executa handler de clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('click');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de duplo clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeDoubleClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('doubleClick');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover\n   * @param {Object} feature - Feature em hover\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeHoverHandler(feature, event) {\n    const handler = this.eventHandlers.get('hover');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover out\n   * @param {Object} feature - Feature que saiu do hover\n   */\n  executeHoverOutHandler(feature) {\n    const handler = this.eventHandlers.get('hoverOut');\n    if (handler && typeof handler === 'function') {\n      handler(feature);\n    }\n  }\n\n  /**\n   * Registra handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   * @param {Function} handler - Função handler\n   */\n  on(eventType, handler) {\n    this.eventHandlers.set(eventType, handler);\n  }\n\n  /**\n   * Remove handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   */\n  off(eventType) {\n    this.eventHandlers.delete(eventType);\n  }\n\n  /**\n   * Remove todos os handlers\n   */\n  clearHandlers() {\n    this.eventHandlers.clear();\n  }\n\n  /**\n   * Atualiza opções de interação\n   * @param {Object} newOptions - Novas opções\n   */\n  updateOptions(newOptions) {\n    this.options = { ...this.options, ...newOptions };\n    \n    // Reconfigurar interações se necessário\n    if (newOptions.enableHover !== undefined) {\n      // Implementar lógica para habilitar/desabilitar hover\n    }\n    \n    if (newOptions.enableClick !== undefined) {\n      // Implementar lógica para habilitar/desabilitar clique\n    }\n  }\n\n  /**\n   * Limpa todas as interações e handlers\n   */\n  destroy() {\n    // Limpar timeouts\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    if (this.hoverTimeout) {\n      clearTimeout(this.hoverTimeout);\n    }\n\n    // Esconder tooltip\n    this.hideTooltip();\n\n    // Limpar hover\n    this.clearHover();\n\n    // Limpar handlers\n    this.clearHandlers();\n\n    // Remover event listeners do mapa\n    // Nota: OpenLayers não tem método un() para remover listeners específicos\n    // Seria necessário recriar o mapa ou implementar controle manual\n  }\n}\n\n/**\n * Função utilitária para criar interações padrão\n * @param {Object} map - Mapa OpenLayers\n * @param {Object} options - Opções de configuração\n * @returns {OpenLayersInteractions} Instância de interações\n */\nexport function createDefaultInteractions(map, options = {}) {\n  const defaultOptions = {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    showTooltip: true,\n    hoverDelay: 200,\n    clickDelay: 300\n  };\n\n  return new OpenLayersInteractions(map, { ...defaultOptions, ...options });\n}\n\n/**\n * Função utilitária para configurar interações específicas para marcadores\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onMarkerClick - Handler para clique em marcador (opcional)\n * @param {Function} onMarkerHover - Handler para hover em marcador\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createMarkerInteractions(map, onMarkerClick, onMarkerHover) {\n  console.log('[createMarkerInteractions] Criando interações para marcadores...');\n  \n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      console.log('[createMarkerInteractions] Função de conteúdo do tooltip chamada para:', feature);\n      const schoolData = feature.get('schoolData');\n      if (schoolData) {\n        // FORÇAR apenas o título da escola, SEM município\n        const titulo = schoolData.titulo || 'Escola Indígena';\n        console.log('[createMarkerInteractions] Título extraído:', titulo);\n        console.log('[createMarkerInteractions] Conteúdo do tooltip gerado (FORÇADO apenas título):', titulo);\n        return titulo; // Retorna APENAS o título\n      }\n      console.log('[createMarkerInteractions] Sem dados de escola para tooltip');\n      return null;\n    }\n  });\n\n  // Configurar handler de clique se fornecido\n  if (onMarkerClick) {\n    console.log('[createMarkerInteractions] Configurando handler de clique personalizado');\n    interactions.on('click', onMarkerClick);\n  }\n\n  if (onMarkerHover) {\n    interactions.on('hover', onMarkerHover);\n  }\n\n  console.log('[createMarkerInteractions] Interações criadas com sucesso');\n  return interactions;\n}\n\n/**\n * Função utilitária para configurar interações específicas para camadas GeoJSON\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onFeatureClick - Handler para clique em feature\n * @param {Function} onFeatureHover - Handler para hover em feature\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createGeoJSONInteractions(map, onFeatureClick, onFeatureHover) {\n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n      if (terraIndigenaInfo) {\n        return `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      }\n      return null;\n    }\n  });\n\n  if (onFeatureClick) {\n    interactions.on('click', onFeatureClick);\n  }\n\n  if (onFeatureHover) {\n    interactions.on('hover', onFeatureHover);\n  }\n\n  return interactions;\n}\n","// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização - Ajustadas para mostrar mais marcadores individuais\n  clusterDistance: 15, // Reduzido para mostrar mais marcadores individuais\n  clusterMinDistance: 3, // Reduzido para permitir marcadores mais próximos\n  clusterAnimationDuration: 300,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10,\n  tooltipDelay: 200,\n  \n  // Configurações de interação\n  interaction: {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    clickDelay: 300,\n    hoverDelay: 200\n  },\n  \n  // Configurações de performance\n  performance: {\n    enableLazyLoading: true,\n    maxFeaturesPerTile: 1000,\n    enableFeatureCulling: true,\n    enableTileCaching: true\n  },\n\n  // Configurações de animação\n  ANIMATION_CONFIG: {\n    duration: {\n      marker: 300,\n      cluster: 500,\n      zoom: 800,\n      pan: 600\n    },\n    easing: {\n      marker: 'ease-out',\n      cluster: 'ease-in-out',\n      zoom: 'ease-out',\n      pan: 'ease-out'\n    }\n  }\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B',\n  selected: '#10B981',\n  hover: '#F59E0B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857',\n  // Projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\n  sirgas2000: 'EPSG:4674'\n};\n\n// Configurações de camadas base\nexport const BASE_LAYER_CONFIG = {\n  satellite: {\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n    maxZoom: 19,\n    wrapX: false,\n    tilePixelRatio: 1,\n    tileSize: 256\n  },\n  osm: {\n    url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    maxZoom: 19\n  },\n  terrain: {\n    url: 'https://{a-d}.tile.opentopomap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://opentopomap.org/\">OpenTopoMap</a> contributors',\n    maxZoom: 17\n  }\n};\n\n// Configurações de estilos para diferentes tipos de marcadores\nexport const MARKER_STYLE_CONFIG = {\n  escola: {\n    default: {\n      radius: 6,\n      fillColor: MARKER_COLORS.individual,\n      strokeColor: MARKER_COLORS.individualBorder,\n      strokeWidth: 2\n    },\n    hover: {\n      radius: 8,\n      fillColor: MARKER_COLORS.hover,\n      strokeColor: '#D97706',\n      strokeWidth: 3\n    },\n    selected: {\n      radius: 10,\n      fillColor: MARKER_COLORS.selected,\n      strokeColor: '#059669',\n      strokeWidth: 3,\n      lineDash: [5, 5]\n    },\n    nearbyPair: {\n      radius: 8,\n      fillColor: MARKER_COLORS.nearbyPair,\n      strokeColor: '#DC2626',\n      strokeWidth: 2\n    }\n  },\n  cluster: {\n    small: {\n      radius: CLUSTER_SIZES.small.size / 2,\n      fillColor: MARKER_COLORS.cluster.small,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    medium: {\n      radius: CLUSTER_SIZES.medium.size / 2,\n      fillColor: MARKER_COLORS.cluster.medium,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    large: {\n      radius: CLUSTER_SIZES.large.size / 2,\n      fillColor: MARKER_COLORS.cluster.large,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    xlarge: {\n      radius: CLUSTER_SIZES.xlarge.size / 2,\n      fillColor: MARKER_COLORS.cluster.xlarge,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    }\n  }\n};\n\n// Configurações de animações\nexport const ANIMATION_CONFIG = {\n  duration: {\n    marker: 300,\n    cluster: 500,\n    zoom: 800,\n    pan: 600\n  },\n  easing: {\n    marker: 'ease-out',\n    cluster: 'ease-in-out',\n    zoom: 'ease-out',\n    pan: 'ease-out'\n  }\n};\n\n// Configurações de responsividade\nexport const RESPONSIVE_CONFIG = {\n  breakpoints: {\n    mobile: 768,\n    tablet: 1024,\n    desktop: 1200\n  },\n  mobile: {\n    clusterDistance: 12, // Reduzido para mobile\n    tooltipOffset: 8,\n    markerRadius: 5\n  },\n  tablet: {\n    clusterDistance: 15, // Reduzido para tablet\n    tooltipOffset: 10,\n    markerRadius: 6\n  },\n  desktop: {\n    clusterDistance: 15, // Reduzido para desktop\n    tooltipOffset: 10,\n    markerRadius: 6\n  }\n};\n\n// Configurações de cache\nexport const CACHE_CONFIG = {\n  markers: {\n    maxSize: 1000,\n    ttl: 300000, // 5 minutos\n    enableCompression: true\n  },\n  tiles: {\n    maxSize: 100,\n    ttl: 600000, // 10 minutos\n    enableCompression: true\n  },\n  geojson: {\n    maxSize: 50,\n    ttl: 1800000, // 30 minutos\n    enableCompression: true\n  }\n};\n\n// Configurações de debug\nexport const DEBUG_CONFIG = {\n  enableLogging: process.env.NODE_ENV === 'development',\n  enablePerformanceMonitoring: process.env.NODE_ENV === 'development',\n  enableFeatureCount: process.env.NODE_ENV === 'development',\n  logLevel: process.env.NODE_ENV === 'development' ? 'debug' : 'error'\n}; ","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport { \n  createMarkerStyle, \n  applyHoverStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/markerStyles';\nimport { createMarkerInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersMarkers - Substitui completamente o Marcadores.js do Leaflet\n * IMPLEMENTAÇÃO SIMPLIFICADA: Mostra todos os marcadores individuais sem clustering\n */\nconst OpenLayersMarkers = ({ \n  dataPoints = [], \n  onPainelOpen,\n  showMarcadores = true,\n  showNomesEscolas = false,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas e fontes\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredMarker, setHoveredMarker] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de marcadores (SEM clustering)\n   */\n  const initializeMarkers = useCallback(() => {\n    if (!map) return;\n\n    console.log('[OpenLayersMarkers] Inicializando marcadores individuais...');\n\n    // Criar fonte vetorial para marcadores\n    vectorSourceRef.current = new VectorSource();\n    \n    // Criar camada vetorial para marcadores INDIVIDUAIS (sem clustering)\n    vectorLayerRef.current = new VectorLayer({\n      source: vectorSourceRef.current,\n      style: (feature) => createMarkerStyle(feature, showNomesEscolas),\n      zIndex: 100\n    });\n\n    // Adicionar camada ao mapa\n    map.addLayer(vectorLayerRef.current);\n\n    // Configurar interações\n    setupInteractions();\n\n  }, [map, showNomesEscolas]);\n\n  /**\n   * Configura as interações dos marcadores\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    console.log('[OpenLayersMarkers] Configurando interações com tooltips...');\n\n    // Criar interações específicas para marcadores com tooltips\n    const interactions = createMarkerInteractions(\n      map,\n      handleMarkerClick,\n      handleMarkerHover\n    );\n\n    // Configurar handlers específicos\n    interactions.on('click', handleMarkerClick);\n    interactions.on('hover', handleMarkerHover);\n    interactions.on('hoverOut', handleMarkerHoverOut);\n\n    // IMPORTANTE: Integrar as interações com o mapa para que os tooltips funcionem\n    // O sistema de interações do OpenLayers precisa estar ativo para detectar hover\n    console.log('[OpenLayersMarkers] Interações configuradas e integradas com o mapa');\n\n  }, [map]);\n\n  /**\n   * Handler para clique em marcador\n   */\n  const handleMarkerClick = useCallback((feature, event) => {\n    // Usar schoolData em vez de markerData para consistência com o sistema de interações\n    const schoolData = feature.get('schoolData');\n    if (schoolData && onPainelOpen) {\n      console.log('[OpenLayersMarkers] Marcador clicado:', schoolData.titulo);\n      onPainelOpen(schoolData);\n    }\n  }, [onPainelOpen]);\n\n  /**\n   * Handler para hover em marcador\n   */\n  const handleMarkerHover = useCallback((feature, event) => {\n    // IMPORTANTE: Não desabilitar hover em mobile\n    // O sistema de interações precisa do hover para funcionar corretamente\n    // O hover é usado para mostrar tooltips e aplicar estilos visuais\n    \n    setHoveredMarker(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return applyHoverStyle(f, createMarkerStyle(f, showNomesEscolas));\n        }\n        return createMarkerStyle(f, showNomesEscolas);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [showNomesEscolas]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleMarkerHoverOut = useCallback(() => {\n    setHoveredMarker(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createMarkerStyle(f, showNomesEscolas));\n      vectorLayerRef.current.changed();\n    }\n  }, [showNomesEscolas]);\n\n  /**\n   * Atualiza marcadores quando dataPoints mudar\n   */\n  const updateMarkers = useCallback(() => {\n    if (!vectorSourceRef.current || !dataPoints) return;\n\n    console.log('[OpenLayersMarkers] Atualizando marcadores...', dataPoints.length, 'showMarcadores:', showMarcadores);\n\n    // Limpar marcadores existentes\n    vectorSourceRef.current.clear();\n    \n    // Se showMarcadores for false, não adicionar marcadores\n    if (!showMarcadores) {\n      console.log('[OpenLayersMarkers] Marcadores desabilitados, removendo todos');\n      return;\n    }\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    console.log('[OpenLayersMarkers] Pontos válidos:', pontosValidos.length);\n\n    // Adicionar novos marcadores INDIVIDUAIS\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        \n        feature.set('markerData', point);\n        feature.set('schoolData', point); // Dados para tooltips\n        feature.set('markerId', `marker_${index}`);\n        feature.set('type', 'marker');\n        \n        // Debug: verificar dados do tooltip\n        console.log(`[OpenLayersMarkers] Marcador ${index}:`, {\n          titulo: point.titulo,\n          municipio: point.municipio || point.Municipio,\n          uf: point.uf || point.UF\n        });\n        \n        vectorSourceRef.current.addFeature(feature);\n      }\n    });\n\n    console.log(`[OpenLayersMarkers] ${pontosValidos.length} marcadores individuais adicionados`);\n\n  }, [dataPoints, showMarcadores]);\n\n  /**\n   * Atualiza estilo dos marcadores quando showNomesEscolas mudar\n   */\n  const updateMarkerStyles = useCallback(() => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((feature) => createMarkerStyle(feature, showNomesEscolas));\n    vectorLayerRef.current.changed();\n  }, [showNomesEscolas]);\n\n  // Inicializar marcadores quando componente montar\n  useEffect(() => {\n    if (map) {\n      initializeMarkers();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, initializeMarkers]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    updateMarkers();\n  }, [updateMarkers]);\n\n  // Atualizar estilos quando showNomesEscolas mudar\n  useEffect(() => {\n    updateMarkerStyles();\n  }, [updateMarkerStyles]);\n\n  // Sempre renderizar o componente para manter a camada ativa\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia as camadas do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersMarkers;\n","import { Style, Fill, Stroke, Text } from 'ol/style';\n\n// Configurações de cores para camadas GeoJSON\nexport const LAYER_COLORS = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n/**\n * Cria estilo para terras indígenas baseado no status\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo da terra indígena\n */\nexport const createTerrasIndigenasStyle = (feature, isHovered = false) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.fill\n      }),\n      stroke: new Stroke({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.stroke,\n        width: 2\n      })\n    });\n  }\n\n  const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n  const colorConfig = isRegularizada \n    ? LAYER_COLORS.terrasIndigenas.regularizada \n    : LAYER_COLORS.terrasIndigenas.declarada;\n\n  const colors = isHovered ? colorConfig.hover : colorConfig;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 3 : 2,\n      lineDash: isHovered ? [] : [3, 3]\n    })\n  });\n};\n\n/**\n * Cria estilo para estado de São Paulo\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo do estado\n */\nexport const createEstadoSPStyle = (feature, isHovered = false) => {\n  const colors = isHovered ? LAYER_COLORS.estadoSP.hover : LAYER_COLORS.estadoSP;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 2 : 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com label\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} labelProperty - Propriedade para usar como label\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com label\n */\nexport const createLabeledFeatureStyle = (feature, labelProperty, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    labelColor = '#000000',\n    labelSize = '12px',\n    labelFont = 'Arial'\n  } = styleOptions;\n\n  const labelText = feature.properties?.[labelProperty] || '';\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar label se houver texto\n  if (labelText) {\n    styles.push(new Style({\n      text: new Text({\n        text: labelText,\n        font: `${labelSize} ${labelFont}`,\n        fill: new Fill({\n          color: labelColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: 0,\n        textAlign: 'center'\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature com tooltip\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} tooltipText - Texto do tooltip\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com tooltip\n */\nexport const createFeatureWithTooltipStyle = (feature, tooltipText, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    tooltipColor = '#1F2937',\n    tooltipBackground = 'rgba(255, 255, 255, 0.95)',\n    tooltipBorder = '#E5E7EB'\n  } = styleOptions;\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar tooltip como texto\n  if (tooltipText) {\n    styles.push(new Style({\n      text: new Text({\n        text: tooltipText,\n        font: '11px Arial',\n        fill: new Fill({\n          color: tooltipColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center',\n        backgroundFill: new Fill({\n          color: tooltipBackground\n        }),\n        backgroundStroke: new Stroke({\n          color: tooltipBorder,\n          width: 1\n        }),\n        padding: [4, 8]\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature selecionada\n * @param {Object} feature - Feature do GeoJSON\n * @param {Style} baseStyle - Estilo base\n * @param {Object} selectionOptions - Opções de seleção\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle, selectionOptions = {}) => {\n  const {\n    fillColor = 'rgba(59, 130, 246, 0.3)',\n    strokeColor = '#1E40AF',\n    strokeWidth = 3,\n    lineDash = [5, 5]\n  } = selectionOptions;\n\n  const selectionStyle = new Style({\n    fill: new Fill({\n      color: fillColor\n    }),\n    stroke: new Stroke({\n      color: strokeColor,\n      width: strokeWidth,\n      lineDash: lineDash\n    })\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n\n/**\n * Cria estilo para feature com indicador de status\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} statusProperty - Propriedade que indica o status\n * @param {Object} statusConfig - Configuração dos status\n * @returns {Style} Estilo com indicador de status\n */\nexport const createStatusFeatureStyle = (feature, statusProperty, statusConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: '#000000',\n        width: 1\n      })\n    });\n  }\n\n  const status = feature.properties[statusProperty];\n  const config = statusConfig[status] || statusConfig.default || {\n    fill: 'rgba(0, 0, 0, 0.1)',\n    stroke: '#000000'\n  };\n\n  return new Style({\n    fill: new Fill({\n      color: config.fill\n    }),\n    stroke: new Stroke({\n      color: config.stroke,\n      width: config.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com gradiente baseado em valor numérico\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} valueProperty - Propriedade com valor numérico\n * @param {Object} gradientConfig - Configuração do gradiente\n * @returns {Style} Estilo com gradiente\n */\nexport const createGradientFeatureStyle = (feature, valueProperty, gradientConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: gradientConfig.defaultColor || 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: gradientConfig.strokeColor || '#000000',\n        width: gradientConfig.strokeWidth || 1\n      })\n    });\n  }\n\n  const value = parseFloat(feature.properties[valueProperty]) || 0;\n  const { min, max, colors } = gradientConfig;\n\n  // Calcular cor baseada no valor\n  let color;\n  if (value <= min) {\n    color = colors.min;\n  } else if (value >= max) {\n    color = colors.max;\n  } else {\n    // Interpolação linear entre cores\n    const ratio = (value - min) / (max - min);\n    color = interpolateColor(colors.min, colors.max, ratio);\n  }\n\n  return new Style({\n    fill: new Fill({\n      color: color\n    }),\n    stroke: new Stroke({\n      color: gradientConfig.strokeColor || '#000000',\n      width: gradientConfig.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Interpola entre duas cores\n * @param {string} color1 - Primeira cor (hex)\n * @param {string} color2 - Segunda cor (hex)\n * @param {number} ratio - Razão de interpolação (0-1)\n * @returns {string} Cor interpolada\n */\nfunction interpolateColor(color1, color2, ratio) {\n  const hex1 = color1.replace('#', '');\n  const hex2 = color2.replace('#', '');\n  \n  const r1 = parseInt(hex1.substr(0, 2), 16);\n  const g1 = parseInt(hex1.substr(2, 2), 16);\n  const b1 = parseInt(hex1.substr(4, 2), 16);\n  \n  const r2 = parseInt(hex2.substr(0, 2), 16);\n  const g2 = parseInt(hex2.substr(2, 2), 16);\n  const b2 = parseInt(hex2.substr(4, 2), 16);\n  \n  const r = Math.round(r1 + (r2 - r1) * ratio);\n  const g = Math.round(g1 + (g2 - g1) * ratio);\n  const b = Math.round(b1 + (b2 - b1) * ratio);\n  \n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { \n  createTerrasIndigenasStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/layerStyles';\nimport { createGeoJSONInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG, PROJECTION_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersTerrasIndigenas - Substitui completamente o TerrasIndigenas.js do Leaflet\n * Implementa camada GeoJSON de terras indígenas com estilos dinâmicos e interações\n */\nconst OpenLayersTerrasIndigenas = ({ \n  data,\n  onPainelOpen,\n  showTerrasIndigenas = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  const interactionsRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredFeature, setHoveredFeature] = React.useState(null);\n  const [selectedFeature, setSelectedFeature] = React.useState(null);\n  const [features, setFeatures] = React.useState([]);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de terras indígenas\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersTerrasIndigenas] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n      setFeatures(geoJSONFeatures);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createTerrasIndigenasStyle(feature, false),\n        zIndex: 10\n      });\n\n      // Adicionar dados de terra indígena a cada feature\n      geoJSONFeatures.forEach(feature => {\n        const properties = feature.getProperties();\n        feature.set('terraIndigenaInfo', {\n          titulo: properties.terrai_nom,\n          tipo: 'terra_indigena',\n          etnia: properties.etnia_nome,\n          municipio: properties.municipio_,\n          uf: properties.uf_sigla,\n          superficie: properties.superficie,\n          fase: properties.fase_ti,\n          modalidade: properties.modalidade,\n          reestudo: properties.reestudo_t,\n          cr: properties.cr,\n          faixa_fron: properties.faixa_fron,\n          undadm_nom: properties.undadm_nom,\n          undadm_sig: properties.undadm_sig,\n          dominio_un: properties.dominio_un,\n          data_atual: properties.data_atual,\n          terrai_cod: properties.terrai_cod,\n          undadm_cod: properties.undadm_cod\n        });\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      // Configurar interações\n      setupInteractions();\n\n      console.log(`[OpenLayersTerrasIndigenas] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersTerrasIndigenas] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  /**\n   * Configura as interações da camada\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    // Criar interações específicas para camadas GeoJSON\n    interactionsRef.current = createGeoJSONInteractions(\n      map,\n      handleFeatureClick,\n      handleFeatureHover\n    );\n\n    // Configurar handlers específicos\n    interactionsRef.current.on('click', handleFeatureClick);\n    interactionsRef.current.on('hover', handleFeatureHover);\n    interactionsRef.current.on('hoverOut', handleFeatureHoverOut);\n\n  }, [map]);\n\n  /**\n   * Handler para clique em feature\n   */\n  const handleFeatureClick = useCallback((feature, event) => {\n    if (!feature) return;\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (!terraIndigenaInfo) return;\n\n    if (isMobileDevice) {\n      // No mobile: clique único abre o painel diretamente\n      if (onPainelOpen) {\n        onPainelOpen(terraIndigenaInfo);\n      }\n    } else {\n      // No desktop: primeiro clique faz zoom, segundo abre painel\n      if (selectedFeature === feature) {\n        // Segundo clique: abrir painel\n        if (onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n        setSelectedFeature(null);\n      } else {\n        // Primeiro clique: fazer zoom\n        setSelectedFeature(feature);\n        \n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const extent = geometry.getExtent();\n          map.getView().fit(extent, {\n            duration: MAP_CONFIG.ANIMATION_CONFIG.duration.zoom,\n            padding: [50, 50, 50, 50],\n            maxZoom: 15\n          });\n        }\n      }\n    }\n  }, [isMobileDevice, onPainelOpen, selectedFeature, map]);\n\n  /**\n   * Handler para hover em feature\n   */\n  const handleFeatureHover = useCallback((feature, event) => {\n    if (isMobileDevice) return; // Desabilitar hover em mobile\n    \n    setHoveredFeature(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return createTerrasIndigenasStyle(f, true); // true = hover\n        }\n        return createTerrasIndigenasStyle(f, false);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [isMobileDevice]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleFeatureHoverOut = useCallback((feature) => {\n    setHoveredFeature(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n      vectorLayerRef.current.changed();\n    }\n  }, []);\n\n  /**\n   * Aplica estilo de seleção a um feature\n   */\n  const applySelectionStyleToFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => {\n      if (f === feature) {\n        const baseStyle = createTerrasIndigenasStyle(f, false);\n        return applySelectionStyle(f, baseStyle);\n      }\n      return createTerrasIndigenasStyle(f, false);\n    });\n    vectorLayerRef.current.changed();\n  }, []);\n\n  /**\n   * Remove estilo de seleção de um feature\n   */\n  const removeSelectionStyleFromFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n    vectorLayerRef.current.changed();\n  }, []);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showTerrasIndigenas) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (interactionsRef.current) {\n        interactionsRef.current.destroy();\n      }\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showTerrasIndigenas, initializeLayer]);\n\n  // Aplicar/remover estilo de seleção quando selectedFeature mudar\n  useEffect(() => {\n    if (selectedFeature) {\n      applySelectionStyleToFeature(selectedFeature);\n    } else if (vectorLayerRef.current) {\n      // Remover seleção de todos os features\n      removeSelectionStyleFromFeature();\n    }\n  }, [selectedFeature, applySelectionStyleToFeature, removeSelectionStyleFromFeature]);\n\n  // Limpar seleção após timeout (para comportamento de clique duplo)\n  useEffect(() => {\n    if (selectedFeature) {\n      const timeout = setTimeout(() => {\n        setSelectedFeature(null);\n      }, MAP_CONFIG.interaction.clickDelay);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [selectedFeature]);\n\n  // Se não deve mostrar terras indígenas, não renderizar nada\n  if (!showTerrasIndigenas || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersTerrasIndigenas;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { createEstadoSPStyle } from '../../utils/openlayers/layerStyles';\nimport { PROJECTION_CONFIG } from '../../utils/mapConfig';\n\n/**\n * Componente OpenLayersEstadoSP - Substitui completamente o EstadoSP.js do Leaflet\n * Implementa camada GeoJSON de fundo do estado de São Paulo (não-interativa)\n */\nconst OpenLayersEstadoSP = ({ \n  data,\n  showEstadoSP = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n\n  /**\n   * Inicializa a camada do estado de São Paulo\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersEstadoSP] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial (não-interativa, apenas visual)\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createEstadoSPStyle(feature, false),\n        zIndex: 5, // Camada de fundo com zIndex baixo\n        interactive: false // Desabilitar interações\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      console.log(`[OpenLayersEstadoSP] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersEstadoSP] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showEstadoSP) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showEstadoSP, initializeLayer]);\n\n  // Se não deve mostrar estado SP, não renderizar nada\n  if (!showEstadoSP || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON de fundo do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersEstadoSP;\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n/**\n * Componente OpenLayersLayers - Gerenciador unificado de todas as camadas GeoJSON\n * Centraliza o controle das camadas de terras indígenas e estado SP\n */\nconst OpenLayersLayers = ({ \n  terrasIndigenasData,\n  estadoSPData,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  onPainelOpen,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas\n  const terrasIndigenasRef = useRef(null);\n  const estadoSPRef = useRef(null);\n  \n  // Estados para controle das camadas\n  const [layersStatus, setLayersStatus] = React.useState({\n    terrasIndigenas: {\n      visible: showTerrasIndigenas,\n      loaded: false,\n      error: null\n    },\n    estadoSP: {\n      visible: showEstadoSP,\n      loaded: false,\n      error: null\n    }\n  });\n\n  // Verificar se há dados válidos\n  const hasValidData = useMemo(() => {\n    return {\n      terrasIndigenas: terrasIndigenasData && terrasIndigenasData.features && terrasIndigenasData.features.length > 0,\n      estadoSP: estadoSPData && estadoSPData.features && estadoSPData.features.length > 0\n    };\n  }, [terrasIndigenasData, estadoSPData]);\n\n  /**\n   * Atualiza status de uma camada\n   */\n  const updateLayerStatus = useCallback((layerName, updates) => {\n    setLayersStatus(prev => ({\n      ...prev,\n      [layerName]: {\n        ...prev[layerName],\n        ...updates\n      }\n    }));\n  }, []);\n\n  /**\n   * Handler para mudanças na visibilidade das camadas\n   */\n  const handleLayerVisibilityChange = useCallback((layerName, visible) => {\n    updateLayerStatus(layerName, { visible });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para erros nas camadas\n   */\n  const handleLayerError = useCallback((layerName, error) => {\n    console.error(`[OpenLayersLayers] Erro na camada ${layerName}:`, error);\n    updateLayerStatus(layerName, { error: error.message });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para sucesso no carregamento das camadas\n   */\n  const handleLayerSuccess = useCallback((layerName) => {\n    updateLayerStatus(layerName, { loaded: true, error: null });\n  }, [updateLayerStatus]);\n\n  /**\n   * Obtém estatísticas das camadas\n   */\n  const getLayersStats = useCallback(() => {\n    const stats = {\n      total: 0,\n      visible: 0,\n      loaded: 0,\n      errors: 0\n    };\n\n    Object.values(layersStatus).forEach(layer => {\n      stats.total++;\n      if (layer.visible) stats.visible++;\n      if (layer.loaded) stats.loaded++;\n      if (layer.error) stats.errors++;\n    });\n\n    return stats;\n  }, [layersStatus]);\n\n  /**\n   * Obtém informações detalhadas das camadas\n   */\n  const getLayersInfo = useCallback(() => {\n    return {\n      terrasIndigenas: {\n        ...layersStatus.terrasIndigenas,\n        hasData: hasValidData.terrasIndigenas,\n        featureCount: hasValidData.terrasIndigenas ? terrasIndigenasData.features.length : 0\n      },\n      estadoSP: {\n        ...layersStatus.estadoSP,\n        hasData: hasValidData.estadoSP,\n        featureCount: hasValidData.estadoSP ? estadoSPData.features.length : 0\n      }\n    };\n  }, [layersStatus, hasValidData, terrasIndigenasData, estadoSPData]);\n\n  // Log de status das camadas\n  useEffect(() => {\n    const stats = getLayersStats();\n    const info = getLayersInfo();\n    \n    console.log('[OpenLayersLayers] Status das camadas:', {\n      stats,\n      info,\n      hasValidData\n    });\n  }, [layersStatus, getLayersStats, getLayersInfo, hasValidData]);\n\n  // Atualizar status quando props mudarem\n  useEffect(() => {\n    setLayersStatus(prev => ({\n      terrasIndigenas: {\n        ...prev.terrasIndigenas,\n        visible: showTerrasIndigenas\n      },\n      estadoSP: {\n        ...prev.estadoSP,\n        visible: showEstadoSP\n      }\n    }));\n  }, [showTerrasIndigenas, showEstadoSP]);\n\n  // Se não há dados válidos, não renderizar nada\n  if (!hasValidData.terrasIndigenas && !hasValidData.estadoSP) {\n    return (\n      <div className={className}>\n        <div className=\"text-center text-gray-500 p-4\">\n          Nenhuma camada GeoJSON disponível\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {/* Camada Terras Indígenas */}\n      {hasValidData.terrasIndigenas && (\n        <OpenLayersTerrasIndigenas\n          ref={terrasIndigenasRef}\n          data={terrasIndigenasData}\n          onPainelOpen={onPainelOpen}\n          showTerrasIndigenas={showTerrasIndigenas}\n          map={map}\n          onLoad={() => handleLayerSuccess('terrasIndigenas')}\n          onError={(error) => handleLayerError('terrasIndigenas', error)}\n        />\n      )}\n\n      {/* Camada Estado SP */}\n      {hasValidData.estadoSP && (\n        <OpenLayersEstadoSP\n          ref={estadoSPRef}\n          data={estadoSPData}\n          showEstadoSP={showEstadoSP}\n          map={map}\n          onLoad={() => handleLayerSuccess('estadoSP')}\n          onError={(error) => handleLayerError('estadoSP', error)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default OpenLayersLayers;\n","import React from 'react';\n\nconst MapWrapper = React.forwardRef((props, ref) => {\n  return <div id=\"map\" className=\"w-full h-full\" ref={ref} {...props} />;\n});\n\nexport default MapWrapper; ","import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { defaults as defaultControls } from 'ol/control';\n// Remover import das interações padrão para evitar conflitos\n// import { defaults as defaultInteractions } from 'ol/interaction';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\n\n// Componentes OpenLayers\nimport OpenLayersMarkers from './OpenLayers/OpenLayersMarkers';\nimport OpenLayersLayers from './OpenLayers/OpenLayersLayers';\n\n// Configurações e utilitários\nimport { MAP_CONFIG, BASE_LAYER_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\nimport MapWrapper from './map/MapWrapper';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center,\n  zoom = MAP_CONFIG.zoom,\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Verificar se é mobile e ajustar configurações\n  const isMobileDevice = useMemo(() => isMobile(), []);\n  const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n  const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n  /**\n   * Cria camadas base do mapa\n   */\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: BASE_LAYER_CONFIG.satellite.url,\n        attributions: BASE_LAYER_CONFIG.satellite.attributions,\n        maxZoom: BASE_LAYER_CONFIG.satellite.maxZoom,\n        wrapX: BASE_LAYER_CONFIG.satellite.wrapX,\n        tilePixelRatio: BASE_LAYER_CONFIG.satellite.tilePixelRatio,\n        tileSize: BASE_LAYER_CONFIG.satellite.tileSize\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  /**\n   * Inicializa o mapa OpenLayers\n   */\n  const initializeMap = useCallback(() => {\n    if (map.current) return;\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [baseLayer.current],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: MAP_CONFIG.maxZoom,\n        minZoom: MAP_CONFIG.minZoom,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      // Remover interações padrão para evitar conflitos\n      // interactions: defaultInteractions({\n      //   dragRotate: false, // Desabilitar rotação com arraste\n      //   pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      // })\n    });\n\n    // Event listeners para mudanças de view\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    console.log('[OpenLayersMap] Mapa inicializado com sucesso');\n\n  }, [initialCenter, initialZoom, createBaseLayers]);\n\n  /**\n   * Atualiza configurações do mapa quando props mudarem\n   */\n  const updateMapConfig = useCallback(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom]);\n\n  // Inicializar mapa quando componente montar\n  useEffect(() => {\n    initializeMap();\n\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [initializeMap]);\n\n  // Atualizar configurações quando props mudarem\n  useEffect(() => {\n    updateMapConfig();\n  }, [updateMapConfig]);\n\n  return (\n    <MapWrapper ref={mapContainer}>\n      {/* Mapa base OpenLayers */}\n      {map.current && (\n        <>\n          {/* Componente de marcadores */}\n          <OpenLayersMarkers\n            dataPoints={dataPoints}\n            onPainelOpen={onPainelOpen}\n            showMarcadores={showMarcadores}\n            showNomesEscolas={showNomesEscolas}\n            map={map.current}\n          />\n\n          {/* Componente de camadas GeoJSON */}\n          <OpenLayersLayers\n            terrasIndigenasData={terrasIndigenasData}\n            estadoSPData={estadoSPData}\n            showTerrasIndigenas={showTerrasIndigenas}\n            showEstadoSP={showEstadoSP}\n            onPainelOpen={onPainelOpen}\n            map={map.current}\n          />\n        </>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  painelAberto = false,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  useEffect(() => {\n    console.log('MapSelector: useEffect painelAberto mudou:', {\n      painelAberto,\n      isMobile,\n      showMarcadores,\n      shouldReactivate: !painelAberto && isMobile\n    });\n    \n    if (!painelAberto && isMobile) {\n      console.log('MapSelector: Painel fechado em mobile, reativando marcadores');\n      setShowMarcadores(true);\n    }\n  }, [painelAberto, isMobile]);\n\n  // Log para monitorar mudanças no showMarcadores\n  useEffect(() => {\n    console.log('MapSelector: showMarcadores mudou para:', showMarcadores);\n  }, [showMarcadores]);\n\n    // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-4 py-3 bg-gradient-to-r from-green-700 to-green-800 text-white\">\n      <div className=\"flex items-center gap-2\">\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m-6 3l6-3\" />\n        </svg>\n        <h3 className=\"text-sm font-semibold tracking-wide\">Camadas do Mapa</h3>\n      </div>\n      <button\n        onClick={onMinimize}\n        className=\"text-green-100 hover:text-white hover:bg-green-600 transition-all duration-200 p-1.5 rounded-md\"\n        aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n        type=\"button\"\n      >\n        {isMinimized ? (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        ) : (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n          </svg>\n        )}\n      </button>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`group w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 ${\n        checked \n          ? 'bg-green-50 shadow-sm' \n          : 'bg-white hover:bg-green-50/50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n    >\n      {/* Indicador de cor principal */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Para Terras Indígenas com subcategorias\n          <div className=\"flex flex-col gap-1.5\">\n            {subItems.map((item, index) => (\n              <div key={index} className=\"flex items-center gap-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full shadow-sm\" \n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-xs font-medium text-gray-700\">{item.label}</span>\n              </div>\n            ))}\n          </div>\n        ) : (\n          // Para outras camadas\n          <div \n            className={`w-4 h-4 rounded-full shadow-sm ${\n              checked ? 'ring-2 ring-green-200' : ''\n            }`}\n            style={{ backgroundColor: color }}\n          />\n        )}\n      </div>\n      \n      {/* Conteúdo principal */}\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex items-center gap-2\">\n          <span className={`text-sm font-medium ${\n            checked ? 'text-green-900' : 'text-gray-800'\n          }`}>\n            {label}\n          </span>\n          \n          {total !== undefined && (\n            <span className={`text-xs px-2 py-0.5 rounded-full ${\n              checked \n                ? 'bg-green-100 text-green-700' \n                : 'bg-gray-100 text-gray-600'\n            }`}>\n              {total}\n            </span>\n          )}\n        </div>\n        \n        {/* Status indicators */}\n        <div className=\"flex items-center gap-2 mt-1\">\n          {loading && (\n            <div className=\"flex items-center gap-1 text-blue-600\">\n              <svg className=\"w-3 h-3 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n              </svg>\n              <span className=\"text-xs\">Carregando...</span>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"flex items-center gap-1 text-red-600\">\n              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span className=\"text-xs\">Erro</span>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Indicador de estado */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Indicador para Terras Indígenas\n                  <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n      ) : (\n        // Indicador para outras camadas\n        <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n        )}\n      </div>\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white shadow-2xl rounded-t-2xl\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-4 flex flex-col gap-3 max-h-80 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-72 bg-white rounded-2xl shadow-2xl z-20 overflow-hidden\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-4 flex flex-col gap-3 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","// Central slug utility for the project\nexport const criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-') // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '') // Remove hífens do início e fim\n    .trim();\n}; ","import { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\n\nconst useDocumentosEscola = (escolaId) => {\n  const [documentos, setDocumentos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDocumentos = async () => {\n      console.log('🔄 Iniciando busca de documentos para escola:', escolaId, 'tipo:', typeof escolaId);\n      \n      if (!escolaId) {\n        console.log('⚠️ Nenhum ID de escola fornecido, retornando array vazio');\n        setDocumentos([]);\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        console.log('📡 Consultando tabela documentos_escola...');\n        \n        // Verificar conexão com Supabase\n        const { data: authData, error: authError } = await supabase.auth.getSession();\n        console.log('🔐 Estado da autenticação:', {\n          temSessao: !!authData?.session,\n          error: authError\n        });\n\n        // Verificar permissões da tabela\n        const { data: rlsData, error: rlsError } = await supabase\n          .from('documentos_escola')\n          .select('count')\n          .limit(1);\n\n        console.log('🔑 Verificação de permissões:', {\n          podeAcessar: !rlsError,\n          error: rlsError ? {\n            code: rlsError.code,\n            message: rlsError.message,\n            details: rlsError.details,\n            hint: rlsError.hint\n          } : null\n        });\n\n        // Primeiro, vamos verificar todos os documentos para debug\n        const { data: allDocs, error: allDocsError } = await supabase\n          .from('documentos_escola')\n          .select('*');\n\n        if (allDocsError) {\n          console.error('❌ Erro ao buscar todos os documentos:', {\n            code: allDocsError.code,\n            message: allDocsError.message,\n            details: allDocsError.details,\n            hint: allDocsError.hint\n          });\n        } else {\n          console.log('📊 Todos os documentos na tabela:', allDocs);\n          if (allDocs && allDocs.length > 0) {\n            console.log('📊 Exemplo de documento:', allDocs[0]);\n            console.log('📊 Tipos de escola_id encontrados:', allDocs.map(doc => ({\n              id: doc.id,\n              escola_id: doc.escola_id,\n              tipo_escola_id: typeof doc.escola_id,\n              valor_escola_id: doc.escola_id\n            })));\n          } else {\n            console.log('⚠️ Tabela está vazia ou não temos permissão para ver os dados');\n          }\n        }\n        \n        // Agora vamos buscar os documentos específicos\n        console.log('🔍 Buscando documentos para escola_id:', escolaId);\n        const { data, error } = await supabase\n          .from('documentos_escola')\n          .select('*')\n          .eq('escola_id', escolaId.toString()) // Convertendo para string para garantir\n          .order('created_at', { ascending: false });\n\n        if (error) {\n          console.error('❌ Erro na consulta Supabase:', {\n            code: error.code,\n            message: error.message,\n            details: error.details,\n            hint: error.hint\n          });\n          throw error;\n        }\n\n        console.log('✅ Documentos encontrados:', data?.length || 0);\n        if (data?.length === 0) {\n          console.log('ℹ️ Nenhum documento encontrado para a escola ID:', escolaId);\n          console.log('ℹ️ Tentando buscar com diferentes formatos de escola_id...');\n          \n          // Tentando diferentes formatos do ID\n          const { data: dataAsNumber, error: errorAsNumber } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', Number(escolaId));\n            \n          const { data: dataAsString, error: errorAsString } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', String(escolaId));\n            \n          console.log('Resultados com escola_id como número:', {\n            count: dataAsNumber?.length || 0,\n            error: errorAsNumber\n          });\n          console.log('Resultados com escola_id como string:', {\n            count: dataAsString?.length || 0,\n            error: errorAsString\n          });\n        } else {\n          console.log('📄 Dados dos documentos:', data);\n        }\n        \n        setDocumentos(data || []);\n      } catch (err) {\n        console.error('❌ Erro ao buscar documentos:', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n        console.log('🏁 Estado final:', { \n          documentos: documentos.length, \n          isLoading, \n          error: error || 'nenhum' \n        });\n      }\n    };\n\n    fetchDocumentos();\n  }, [escolaId]);\n\n  return { documentos, isLoading, error };\n};\n\nexport default useDocumentosEscola; ","import React, { memo, useState } from 'react';\n\n// Componente InfoCard para informações individuais\nconst InfoCard = memo(({ label, value, icon: Icon, type = 'text', className = '' }) => {\n  if (!value && value !== 0) return null;\n\n  const renderValue = () => {\n    switch (type) {\n      case 'number':\n        return (\n          <div className=\"text-2xl font-bold text-green-800\">\n            {value.toLocaleString('pt-BR')}\n          </div>\n        );\n      case 'boolean':\n        return (\n          <div className={`px-3 py-1 rounded-full text-xs font-medium ${\n            value ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'\n          }`}>\n            {value ? 'Sim' : 'Não'}\n          </div>\n        );\n      case 'badge':\n        return (\n          <div className=\"flex flex-wrap gap-1\">\n            {Array.isArray(value) ? value.map((item, index) => (\n              <span key={index} className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {item}\n              </span>\n            )) : (\n              <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {value}\n              </span>\n            )}\n          </div>\n        );\n      case 'link':\n        return (\n          <a \n            href={value} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"text-green-700 hover:text-green-800 underline text-sm\"\n          >\n            {value}\n          </a>\n        );\n      default:\n        return (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`rounded-lg p-4 transition-all duration-200 ${className}`}>\n      <div className=\"flex items-center gap-2 mb-2\">\n        {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n        <span className=\"text-xs font-medium text-gray-600 uppercase tracking-wide\">\n          {label}\n        </span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n});\n\n// Componente InfoGrid para layout em grid\nconst InfoGrid = memo(({ children, columns = 'auto-fit', gap = 4, className = '' }) => {\n  const gridClasses = {\n    'auto-fit': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '2': 'grid-cols-1 sm:grid-cols-2',\n    '3': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '4': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'\n  };\n\n  return (\n    <div className={`grid ${gridClasses[columns]} gap-${gap} ${className} [&>*]:bg-green-100`}>\n      {children}\n    </div>\n  );\n});\n\n// Componente InfoTable para dados tabulares\nconst InfoTable = memo(({ data, className = '' }) => {\n  if (!data || data.length === 0) return null;\n\n  return (\n    <div className={`bg-green-100 rounded-lg overflow-hidden ${className}`}>\n      <table className=\"w-full\">\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-green-50'}>\n              <td className=\"px-4 py-3 text-sm font-medium text-gray-700 border-r border-green-200\">\n                {row.label}\n              </td>\n              <td className=\"px-4 py-3 text-sm text-gray-600\">\n                {row.value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\n// Componente InfoStats para estatísticas com ícones\nconst InfoStats = memo(({ stats, className = '' }) => {\n  if (!stats || stats.length === 0) return null;\n\n  return (\n    <div className={`grid grid-cols-2 sm:grid-cols-4 gap-4 ${className} [&>*]:border-b [&>*]:border-gray-200 [&>*]:pb-2 [&>*]:mb-2`}>\n      {stats.map((stat, index) => (\n        <div key={index} className=\"text-center rounded-lg p-4\">\n          <div className=\"flex justify-center mb-2\">\n            {stat.icon && <stat.icon className=\"w-6 h-6 text-green-600\" />}\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {stat.value}\n          </div>\n          <div className=\"text-xs text-gray-600 mt-1\">\n            {stat.label}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n\n// Componente InfoSection refatorado\nconst InfoSection = memo(({ \n  title, \n  icon: Icon, \n  children, \n  description,\n  defaultCollapsed = false,\n  className = '',\n  layout = 'default', // 'default', 'grid', 'table', 'stats'\n  layoutProps = {}\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n\n  const renderContent = () => {\n    if (!children) return null;\n\n    switch (layout) {\n      case 'grid':\n        return (\n          <InfoGrid {...layoutProps}>\n            {children}\n          </InfoGrid>\n        );\n      case 'table':\n        return (\n          <InfoTable data={layoutProps.data} className={layoutProps.className} />\n        );\n      case 'stats':\n        return (\n          <InfoStats stats={layoutProps.stats} className={layoutProps.className} />\n        );\n      default:\n        return (\n          <div className=\"space-y-4\">\n            {children}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <section \n      className={`\n        bg-white rounded-2xl p-5 \n        shadow-sm transition-all duration-200\n        ${className}\n      `}\n    >\n      <button\n        onClick={() => setIsCollapsed(!isCollapsed)}\n        className=\"\n          w-full flex items-center justify-between \n          text-base font-semibold\n          mb-4 text-gray-900 hover:text-gray-800 \n          transition-colors focus:outline-none\n        \"\n        aria-expanded={!isCollapsed}\n        aria-controls={`${title}-content`}\n      >\n        <div className=\"flex items-center gap-2\">\n          {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n          <span className=\"tracking-wide\">{title}</span>\n        </div>\n      </button>\n      \n      {!isCollapsed && (\n        <div \n          id={`${title}-content`}\n          className=\"space-y-4\"\n          role=\"region\"\n          aria-labelledby={`${title}-button`}\n        >\n          {description && (\n            <div className=\"bg-green-100 rounded-lg p-4\">\n              <p className=\"text-gray-700 text-sm leading-relaxed\">\n                {description}\n              </p>\n            </div>\n          )}\n          {renderContent()}\n        </div>\n      )}\n    </section>\n  );\n});\n\n// Exportar todos os componentes\nexport { InfoCard, InfoGrid, InfoTable, InfoStats };\nexport default InfoSection; ","import React, { memo, useState } from 'react';\nimport {\n  MapPin,\n  Users,\n  Globe,\n  Calendar,\n  Building,\n  Link as LinkIcon,\n  ExternalLink,\n  ChevronRight,\n  Check,\n  X,\n  Navigation,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst capitalize = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst CompactCard = ({ icon: Icon, label, value, type = 'text' }) => {\n  const renderValue = () => {\n    switch (type) {\n      case 'boolean':\n        return value ? (\n          <span className=\"flex items-center gap-1 text-green-600 text-sm\">\n            <Check className=\"w-5 h-5\" />\n            Sim\n          </span>\n        ) : (\n          <span className=\"flex items-center gap-1 text-red-500 text-sm\">\n            <X className=\"w-5 h-5\" />\n            Não\n          </span>\n        );\n      default:\n        return <span className=\"text-sm text-gray-800 truncate\">{value}</span>;\n    }\n  };\n\n  return (\n    <div className=\"p-1 rounded-md transition-all\">\n      <div className=\"flex items-center gap-1.5 mb-1\">\n        <Icon className=\"w-5 h-5 text-gray-600\" />\n        <span className=\"text-xs text-gray-500 font-medium\">{label}</span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n};\n\nconst InfoBlock = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-center gap-2 bg-green-100 p-1.5 rounded-md text-xs\">\n    <Icon className=\"w-5 h-5 text-green-600\" />\n    <span className=\"text-gray-700 font-medium\">{label}:</span>\n    <span className=\"font-semibold text-green-800\">{capitalize(value)}</span>\n  </div>\n);\n\nconst AddressDetails = ({ escola }) => {\n  const hasDetailedAddress = escola.logradouro || escola.numero || escola.bairro || escola.cep;\n  \n  if (!hasDetailedAddress) {\n    return (\n      <div className=\"mt-2 p-2 bg-green-100 rounded-md\">\n        <p className=\"text-xs text-gray-700 leading-snug\">\n          {capitalize(escola.endereco)}\n        </p>\n      </div>\n    );\n  }\n\n  const addressFields = [\n    { field: 'logradouro', label: 'Logradouro' },\n    { field: 'numero', label: 'Número' },\n    { field: 'complemento', label: 'Complemento' },\n    { field: 'bairro', label: 'Bairro' },\n  ];\n\n  return (\n    <div className=\"mt-2 space-y-1\">\n      {addressFields.map(({ field, label }) => \n        escola[field] && (\n          <div key={field} className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n            <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700 mb-0.5\">{label}</div>\n              <div className=\"text-xs text-gray-800 leading-snug\">{escola[field]}</div>\n            </div>\n          </div>\n        )\n      )}\n      \n      {(escola.cep || escola.estado) && (\n        <div className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n          <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n          <div className=\"flex-1\">\n            <div className=\"text-xs font-medium text-gray-700 mb-0.5\">Localização</div>\n            <div className=\"text-xs text-gray-800 leading-snug\">\n              {[escola.municipio, escola.estado, escola.cep].filter(Boolean).join(', ')}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MapButton = ({ escola }) => {\n  const hasCoordinates = escola.Latitude && escola.Longitude;\n  \n  if (!hasCoordinates) return null;\n\n  const openMap = () => {\n    window.open(`https://www.google.com/maps?q=${escola.Latitude},${escola.Longitude}`, '_blank');\n  };\n\n  return (\n    <button\n      onClick={openMap}\n      className=\"mt-2 w-full flex items-center justify-center gap-2 p-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors text-xs font-medium\"\n    >\n      <Navigation className=\"w-5 h-5\" />\n      Ver no Google Maps\n    </button>\n  );\n};\n\nconst SocialLinks = ({ links, expanded, onToggle }) => {\n  const socialLinks = (links || '').split(',').map(url => url.trim()).filter(Boolean);\n  \n  if (socialLinks.length === 0) return null;\n\n  return (\n    <div className=\"bg-green-100 rounded-md\">\n      <button\n        onClick={() => onToggle('social')}\n        className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n        aria-expanded={expanded.social}\n      >\n        <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n          <Globe className=\"w-5 h-5 text-blue-600\" />\n          Redes sociais ({socialLinks.length})\n        </span>\n        <ChevronRight\n          className={`w-5 h-5 text-gray-400 transition-transform ${\n            expanded.social ? 'rotate-90' : ''\n          }`}\n        />\n      </button>\n      \n      {expanded.social && (\n        <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n          <div className=\"mt-1 space-y-1\">\n            {socialLinks.map((link, index) => (\n              <a\n                key={index}\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center gap-1.5 p-1.5 bg-green-100 rounded-md hover:bg-green-200 group text-xs\"\n              >\n                <LinkIcon className=\"w-5 h-5 text-blue-600\" />\n                <span className=\"truncate flex-1 text-gray-700\">{link}</span>\n                <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BasicInfo = memo(({ escola }) => {\n  const [expanded, setExpanded] = useState({});\n\n  if (!escola) return null;\n\n  const toggle = (key) => {\n    setExpanded(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const basicInfoCards = [\n    {\n      icon: Building,\n      label: 'Município',\n      value: capitalize(escola.municipio),\n    },\n    {\n      icon: Calendar,\n      label: 'Fundação',\n      value: escola.ano_criacao,\n    },\n    {\n      icon: Globe,\n      label: 'Redes sociais',\n      value: escola.usa_redes_sociais,\n      type: 'boolean',\n    },\n  ].filter(item => item.value);\n\n  return (\n    <>\n      {/* Povos Indígenas em destaque antes de tudo */}\n      {escola.povos_indigenas && (\n        <div className=\"mb-4\">\n          <div className=\"text-lg sm:text-xl font-bold text-green-800\">\n            Povos Indígenas: <span className=\"font-semibold text-black\">{escola.povos_indigenas}</span>\n          </div>\n        </div>\n      )}\n      <InfoSection title=\"Localização\" icon={MapPin}>\n        {/* Cards informativos básicos */}\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mb-3 [&>*]:bg-green-100\">\n          {basicInfoCards.map((item, index) => (\n            <CompactCard key={index} {...item} />\n          ))}\n        </div>\n\n        <div className=\"space-y-1.5\">\n          {/* Diretoria de ensino */}\n          {escola.diretoria_ensino && (\n            <InfoBlock \n              icon={Building} \n              label=\"Diretoria de ensino\" \n              value={escola.diretoria_ensino} \n            />\n          )}\n\n          {/* Gaveta do endereço */}\n          {escola.endereco && (\n            <div className=\"bg-green-100 rounded-md\">\n              <button\n                onClick={() => toggle('endereco')}\n                className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n                aria-expanded={expanded.endereco}\n              >\n                <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                  <Building className=\"w-5 h-5\" />\n                  Endereço\n                </span>\n                <ChevronRight\n                  className={`w-5 h-5 text-gray-400 transition-transform ${\n                    expanded.endereco ? 'rotate-90' : ''\n                  }`}\n                />\n              </button>\n              {expanded.endereco && (\n                <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n                  <AddressDetails escola={escola} />\n                  <MapButton escola={escola} />\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Redes sociais */}\n          <SocialLinks \n            links={escola.links_redes_sociais}\n            expanded={expanded}\n            onToggle={toggle}\n          />\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default BasicInfo;","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { X, RefreshCw } from 'lucide-react';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { supabase } from '../../../supabaseClient';\n\nconst ImagensdasEscolas = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [error, setError] = useState('');\n  const cacheRef = useRef({});\n  const [cacheVersion, setCacheVersion] = useState(0); // Para forçar recarga\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagensdasEscolas: refreshKey mudou, forçando recarga');\n      limparCacheERecarregar();\n    }\n  }, [refreshKey]);\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    document.body.style.overflow = 'auto';\n  }, []);\n\n  // ESC para fechar\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Função para limpar cache e recarregar\n  const limparCacheERecarregar = useCallback(() => {\n    console.log('Limpando cache e recarregando imagens...');\n    cacheRef.current = {};\n    setCacheVersion(prev => prev + 1);\n    setImagens([]);\n    setLoading(true);\n    setError('');\n  }, []);\n\n  useEffect(() => {\n    if (!escola_id) {\n      setLoading(false);\n      return;\n    }\n\n    // Verificar se há cache válido (com versão)\n    const cacheKey = `${escola_id}_v${cacheVersion}`;\n    if (cacheRef.current[cacheKey]) {\n      console.log('Usando cache para escola', escola_id);\n      setImagens(cacheRef.current[cacheKey]);\n      setLoading(false);\n      return;\n    }\n\n    const buscarImagens = async () => {\n      console.log('Buscando imagens para escola', escola_id);\n      \n      try {\n        // Usar a mesma abordagem do painel de edição: listar arquivos do bucket\n        const { data: files, error } = await supabase.storage\n          .from('imagens-das-escolas')\n          .list(`${escola_id}/`);\n\n        if (error) {\n          throw error;\n        }\n\n        if (!files || files.length === 0) {\n          console.log('Nenhum arquivo encontrado para escola', escola_id);\n          setImagens([]);\n          setLoading(false);\n          return;\n        }\n\n        console.log('Arquivos encontrados:', files.length);\n\n        // Processar cada arquivo encontrado\n        const imagensEncontradas = await Promise.all(\n          files.map(async (file, index) => {\n            const filePath = `${escola_id}/${file.name}`;\n            const { data: { publicUrl } } = supabase.storage\n              .from('imagens-das-escolas')\n              .getPublicUrl(filePath);\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              console.log('Buscando legenda para:', filePath);\n              legenda = await getLegendaByImageUrl(filePath, escola_id, 'escola');\n              console.log('Legenda encontrada:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda para', filePath, ':', error);\n            }\n\n            return {\n              id: `${escola_id}-${file.name}`,\n              publicURL: publicUrl,\n              descricao: legenda?.legenda || `Imagem ${index + 1}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n              urlError: null,\n            };\n          })\n        );\n\n        console.log('Imagens processadas:', imagensEncontradas.length);\n        \n        // Salvar no cache com versão\n        cacheRef.current[cacheKey] = imagensEncontradas;\n        setImagens(imagensEncontradas);\n        \n        if (imagensEncontradas.length === 0) {\n          setError('Nenhuma imagem encontrada para esta escola.');\n        }\n      } catch (error) {\n        console.error('Erro ao processar imagens:', error);\n        setError('Erro ao carregar imagens da escola.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarImagens();\n  }, [escola_id, cacheVersion]);\n\n  if (loading) {\n    return (\n      <div className=\"text-gray-500 flex items-center gap-2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n        Carregando imagens da escola...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-red-600 flex items-center gap-2\">\n        <span>{error}</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (!imagens.length) {\n    return (\n      <div className=\"text-yellow-700 flex items-center gap-2\">\n        <span>Nenhuma imagem encontrada para esta escola.</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.descricao}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.descricao && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.descricao}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n            alt={imagemZoom.descricao}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.descricao && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.descricao}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagensdasEscolas.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagensdasEscolas);\n","import React, { memo } from 'react';\nimport ImagensdasEscolas from '../ImagensdasEscolas';\nimport './HistoriaEscola.css';\n\nconst HistoriaEscola = memo(({ escola, refreshKey = 0 }) => {\n  if (!escola?.historia_da_escola) return null;\n\n  // Usar o HTML diretamente, igual à história dos professores\n  const htmlContent = escola.historia_da_escola;\n\n  return (\n    <article\n      className={`\n        mt-8 mb-12\n        max-w-4xl mx-auto\n        prose\n        prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900\n        prose-p:text-green-800\n        prose-p:leading-relaxed\n        prose-p:text-justify\n        prose-img:rounded-xl\n        prose-img:shadow-lg\n        prose-a:text-green-700\n        prose-a:no-underline\n        prose-a:border-b-2\n        prose-a:border-green-100\n        prose-a:transition-colors\n        hover:prose-a:border-green-600\n        bg-white\n        rounded-2xl\n        px-4 sm:px-6 md:px-8 py-6\n        shadow-lg\n      `}\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center gap-3 mb-3 sm:mb-4\">\n          <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n            <img \n              src={`${process.env.PUBLIC_URL}/onca.svg`} \n              alt=\"Ícone de onça\" \n              className=\"w-32 h-32 sm:w-36 sm:h-36\" \n              style={{ filter: 'none', borderRadius: '0', boxShadow: 'none', marginTop: '80px' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n          <h2 className=\"text-xl sm:text-2xl font-bold text-green-900 m-0\">\n            História da Escola\n          </h2>\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      <div className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        <div \n          className=\"historia-escola-content prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\n            prose-headings:text-green-900 prose-p:text-green-800 prose-p:leading-relaxed prose-p:text-justify\n            prose-img:rounded-xl prose-img:shadow-lg\n            prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n            prose-strong:text-green-800 prose-em:text-green-700\n            prose-blockquote:border-l-green-300 prose-blockquote:bg-green-50 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r-lg\n            prose-ul:text-green-800 prose-ol:text-green-800 prose-li:text-green-800\n            prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n      </div>\n\n      {/* Imagens da escola, responsivas e modulares */}\n      <ImagensdasEscolas escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriaEscola; ","import React, { memo } from 'react';\n\nconst BooleanValue = memo(({ value }) => {\n  if (value === undefined || value === null) return null;\n\n  return (\n    <span className={`font-medium ${value ? 'text-green-600' : 'text-neutral-400'}`}>\n      {value ? 'Sim' : 'Não'}\n    </span>\n  );\n});\n\nexport default BooleanValue; ","import React, { memo, useState } from 'react';\nimport { Sparkles, BookOpen, Users, MessageCircle, Clock } from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../../components/BooleanValue';\n\n// Função utilitária para transformar o texto em lista\nfunction parseModalidadeEnsino(text) {\n  if (!text || typeof text !== 'string') return [];\n  // Divide pelo traço longo (–, U+2013) e remove espaços extras\n  return text\n    .split('–')\n    .map(item => item.trim())\n    .filter(Boolean);\n}\n\n// Componente de lista expansível\nconst ExpandableList = ({ items, maxVisible = 3 }) => {\n  if (!items || items.length === 0) return null;\n\n  return (\n    <div className=\"-mt-1\">\n      <ul className=\"list-none text-gray-800 text-xs pl-0 ml-0\">\n        {items.map((item, idx) => (\n          <li key={idx} className=\"leading-tight m-0 p-0 pl-0 ml-0 flex items-start\">\n            <span className=\"mr-1 text-green-700 select-none\" style={{minWidth: '1em', display: 'inline-block'}}>•</span>\n            <span>{item}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// MiniCard padronizado\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium p-0 m-0\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Modalidades = memo(({ escola }) => {\n  if (!escola) return null;\n\n  // Cards principais de Modalidades\n  const turnosValue = escola.turnos_funcionamento || escola['turnos_funcionamento'] || '';\n  const modalidadeList = parseModalidadeEnsino(escola.modalidade_ensino);\n  \n  // Card de Modalidade de Ensino (separado para ocupar linha inteira)\n  const modalidadeEnsinoCard = {\n    icon: Sparkles,\n    label: 'Modalidade de Ensino',\n    value: <ExpandableList items={modalidadeList} maxVisible={3} />,\n  };\n\n  // Outros cards para o grid\n  const gridItems = [\n    turnosValue && {\n      icon: Clock,\n      label: 'Turnos de Funcionamento',\n      value: turnosValue,\n    },\n    {\n      icon: Users,\n      label: 'Número de Alunos',\n      value: escola.numero_alunos,\n    },\n    {\n      icon: MessageCircle,\n      label: 'Línguas Faladas',\n      value: escola.linguas_faladas,\n    },\n  ].filter(Boolean);\n\n  // Cards de Materiais Pedagógicos\n  const materiaisItems = [\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Não Indígena',\n      value: <BooleanValue value={escola.material_nao_indigena} />,\n    },\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Indígena',\n      value: <BooleanValue value={escola.material_indigena} />,\n    },\n  ];\n\n  return (\n    <>\n      <InfoSection title=\"Modalidades\" icon={Sparkles}>\n        {/* Modalidade de Ensino em linha inteira */}\n        <div className=\"mb-4 bg-green-100 rounded-lg p-2\">\n          <ExpandableList items={modalidadeList} maxVisible={3} />\n        </div>\n        \n        {/* Grid com os outros cards */}\n        <div\n          className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\"\n        >\n          {gridItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n      \n      <InfoSection \n        title=\"Materiais Pedagógicos\" \n        icon={BookOpen}\n        description=\"Diferenciados e não diferenciados, produzidos dentro e fora da comunidade.\"\n      >\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\">\n          {materiaisItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default Modalidades; ","import React, { memo } from 'react';\nimport {\n  Home,\n  Droplet,\n  Trash2,\n  Wifi,\n  Monitor,\n  MapPin,\n  Utensils,\n  Apple,\n  ChefHat,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../BooleanValue';\n\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Infraestrutura = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const items = [\n    {\n      icon: Droplet,\n      label: 'Acesso à Água',\n      value: escola.acesso_agua,\n    },\n    {\n      icon: Trash2,\n      label: 'Coleta de Lixo',\n      value: escola.coleta_lixo,\n    },\n    {\n      icon: Wifi,\n      label: 'Acesso à Internet',\n      value: <BooleanValue value={escola.acesso_internet} />,\n    },\n    {\n      icon: Monitor,\n      label: 'Equipamentos Tecnológicos',\n      value: escola.equipamentos,\n    },\n    {\n      icon: MapPin,\n      label: 'Modo de Acesso à Escola',\n      value: escola.modo_acesso,\n    },\n    {\n      icon: Utensils,\n      label: 'Cozinha',\n      value: <BooleanValue value={escola.cozinha} />,\n    },\n    {\n      icon: Apple,\n      label: 'Merenda Escolar',\n      value: <BooleanValue value={escola.merenda_escolar} />,\n    },\n    {\n      icon: ChefHat,\n      label: 'Merenda Diferenciada',\n      value: <BooleanValue value={escola.diferenciada} />,\n    },\n  ];\n\n  return (\n    <InfoSection title=\"Infraestrutura\" icon={Home}>\n      {escola.espaco_escolar && (\n        <div className=\"p-2 text-sm text-gray-800 border-b border-gray-200 whitespace-pre-wrap\">\n          {escola.espaco_escolar}\n        </div>\n      )}\n      <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-3 [&>*]:bg-green-100\">\n        {items.map((item, idx) => (\n          <MiniCard\n            key={idx}\n            icon={item.icon}\n            label={item.label}\n            value={item.value}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default Infraestrutura;\n","import React, { memo } from 'react';\nimport {\n  UsersRound,\n  Star,\n  User,\n  UserCheck,\n  UserMinus,\n  MessageCircle,\n  NotebookPen,\n  Check,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst MiniCard = ({ icon: Icon, label, value, description }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium mt-0.5\">{value}</div>\n      {description && (\n        <div className=\"text-xs text-gray-600 mt-1 whitespace-pre-line\">\n          {description}\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nconst formatarNomeProfessor = (nome) => {\n  if (!nome) return nome;\n\n  const padroesIndigenas = [\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+\\(([^)]+)\\)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+-\\s+([^)]+)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+ou\\s+([^)]+)/,\n  ];\n\n  for (const padrao of padroesIndigenas) {\n    const match = nome.match(padrao);\n    if (match) {\n      const nomeIndigena = `${match[1]} ${match[2]}`;\n      const nomePortugues = match[3];\n      return `${nomeIndigena} (${nomePortugues})`;\n    }\n  }\n\n  return nome.includes('(') && nome.includes(')') ? nome : nome;\n};\n\nconst formatarFormacaoProfessores = (formacao) => {\n  if (!formacao) return null;\n\n  const [status, ...resto] = formacao.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst formatarFormacaoContinuada = (valor) => {\n  if (!valor) return null;\n\n  const [status, ...resto] = valor.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst renderBooleanStatus = (valor) => {\n  const normalizado = String(valor).trim().toLowerCase();\n  if (normalizado === 'sim') {\n    return (\n      <div className=\"flex items-center gap-1 text-green-700\">\n        <Check className=\"w-5 h-5\" />\n        Sim\n      </div>\n    );\n  } else if (normalizado === 'não' || normalizado === 'nao') {\n    return (\n      <div className=\"flex items-center gap-1 text-gray-500\">\n        <X className=\"w-5 h-5\" />\n        Não\n      </div>\n    );\n  }\n  return valor;\n};\n\nconst GestaoProfessores = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const formacao = formatarFormacaoProfessores(escola.formacao_professores);\n  const continuada = formatarFormacaoContinuada(escola.formacao_continuada);\n\n  return (\n    <InfoSection title=\"Gestores\" icon={UsersRound}>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 mt-1 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={UserCheck}\n          label=\"Professores Indígenas\"\n          value={escola.professores_indigenas}\n        />\n        <MiniCard\n          icon={UserMinus}\n          label=\"Professores Não Indígenas\"\n          value={escola.professores_nao_indigenas}\n        />\n        <MiniCard\n          icon={MessageCircle}\n          label=\"Professores que falam língua indígena\"\n          value={renderBooleanStatus(escola.professores_falam_lingua)}\n        />\n        {formacao?.status && (\n          <MiniCard\n            icon={Star}\n            label=\"Formação dos Professores\"\n            value={renderBooleanStatus(formacao.status)}\n            description={formacao.descricao}\n          />\n        )}\n      </div>\n\n      <div className=\"space-y-2 mt-4 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={User}\n          label=\"Gestão/Nome\"\n          value={escola.gestao}\n        />\n        <MiniCard\n          icon={UsersRound}\n          label=\"Outros Funcionários\"\n          value={escola.outros_funcionarios}\n        />\n        {continuada?.status && (\n          <MiniCard\n            icon={NotebookPen}\n            label=\"Visitas de Supervisores e Formação Continuada\"\n            value={renderBooleanStatus(continuada.status)}\n            description={continuada.descricao}\n          />\n        )}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default GestaoProfessores;\n","import React, { memo } from 'react';\nimport {\n  Target,\n  BookOpen,\n  GraduationCap,\n  Users,\n  Heart,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst ProjectCard = ({ icon: Icon, label, value }) => {\n  const isNegative = value?.trim().toLowerCase() === 'não';\n\n  return (\n    <div className=\"flex items-start gap-4 rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow duration-200\">\n      <div className=\"mt-1\">\n        <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      </div>\n      <div className=\"flex-1 space-y-1\">\n        <div className=\"text-sm font-semibold text-gray-800\">{label}</div>\n        {isNegative ? (\n          <div className=\"text-sm text-gray-400 flex items-center gap-1\">\n            <X className=\"w-5 h-5 text-gray-400\" />\n            Não\n          </div>\n        ) : (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProjetosParcerias = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const projectsData = [\n    {\n      field: 'projetos_andamento',\n      icon: BookOpen,\n      label: 'Projetos em andamento',\n    },\n    {\n      field: 'parcerias_universidades',\n      icon: GraduationCap,\n      label: 'Parcerias com universidades',\n    },\n    {\n      field: 'acoes_ongs',\n      icon: Users,\n      label: 'Ações com ONGs ou coletivos',\n    },\n    {\n      field: 'desejos_comunidade',\n      icon: Heart,\n      label: 'Desejos da comunidade para a escola',\n    },\n    {\n      field: 'parcerias_municipio',\n      icon: Target,\n      label: 'Parcerias com o município',\n    },\n  ];\n\n  const availableProjects = projectsData.filter(\n    project => escola[project.field] && escola[project.field].trim()\n  );\n\n  if (availableProjects.length === 0) return null;\n\n  return (\n    <InfoSection title=\"Projetos e Parcerias\" icon={Target}>\n      <div className=\"grid grid-cols-1 gap-3 [&>*]:bg-green-100\">\n        {availableProjects.map((project) => (\n          <ProjectCard\n            key={project.field}\n            icon={project.icon}\n            label={project.label}\n            value={escola[project.field]}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default ProjetosParcerias;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { supabase } from '../../../supabaseClient';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { X, ChevronLeft, ChevronRight, ZoomIn, ZoomOut, RotateCw } from 'lucide-react';\n\nconst ImagemHistoriadoProfessor = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [rotation, setRotation] = useState(0);\n  const [imageOrientations, setImageOrientations] = useState({});\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    setCurrentImageIndex(0);\n    setZoomLevel(1);\n    setRotation(0);\n  }, []);\n\n  // Função para detectar orientação da imagem\n  const detectImageOrientation = useCallback((url) => {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => {\n        const isVertical = img.height > img.width;\n        resolve(isVertical ? 'vertical' : 'horizontal');\n      };\n      img.onerror = () => {\n        resolve('horizontal'); // fallback\n      };\n      img.src = url;\n    });\n  }, []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (!imagemZoom) return;\n      \n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          prevImage();\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          nextImage();\n          break;\n        case 'Escape':\n          fecharZoom();\n          break;\n        case '+':\n        case '=':\n          e.preventDefault();\n          setZoomLevel(prev => Math.min(prev + 0.25, 3));\n          break;\n        case '-':\n          e.preventDefault();\n          setZoomLevel(prev => Math.max(prev - 0.25, 0.5));\n          break;\n        case 'r':\n        case 'R':\n          e.preventDefault();\n          setRotation(prev => (prev + 90) % 360);\n          break;\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [imagemZoom]);\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagemHistoriadoProfessor: refreshKey mudou, forçando recarga');\n      setImagens([]);\n      setLoading(true);\n      setError(null);\n      setImageOrientations({});\n    }\n  }, [refreshKey]);\n\n  useEffect(() => {\n    if (!escola_id) return;\n\n    setLoading(true);\n    setError(null);\n\n    // Busca arquivos do bucket diretamente\n    supabase\n      .storage\n      .from('imagens-professores')\n      .list(`${escola_id}/`)\n      .then(async ({ data, error }) => {\n        if (error) {\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n\n        if (data && data.length > 0) {\n          console.log('Arquivos de professores encontrados:', data.length);\n          const imagensComUrl = await Promise.all(data.map(async (file, idx) => {\n            const { data: { publicUrl } } = supabase\n              .storage\n              .from('imagens-professores')\n              .getPublicUrl(`${escola_id}/${file.name}`);\n            \n            // Extrair gênero do nome do arquivo\n            let genero = 'professor';\n            if (file.name.startsWith('professora_')) {\n              genero = 'professora';\n            } else if (file.name.startsWith('professor_')) {\n              genero = 'professor';\n            }\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              const caminhoRelativo = `${escola_id}/${file.name}`;\n              console.log('Buscando legenda para professor:', caminhoRelativo);\n              legenda = await getLegendaByImageUrl(caminhoRelativo, escola_id, 'professor');\n              console.log('Legenda encontrada para professor:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda:', error);\n            }\n\n            return {\n              id: idx + 1,\n              publicURL: publicUrl,\n              genero,\n              nome: file.name,\n              created_at: file.created_at || '',\n              legenda: legenda?.legenda || `Imagem do ${genero}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n            };\n          }));\n\n          // Detectar orientações das imagens\n          const orientations = {};\n          for (const img of imagensComUrl) {\n            orientations[img.id] = await detectImageOrientation(img.publicURL);\n          }\n          setImageOrientations(orientations);\n          setImagens(imagensComUrl);\n        } else {\n          setImagens([]);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(`Erro inesperado: ${err.message}`);\n        setLoading(false);\n      });\n  }, [escola_id, detectImageOrientation]);\n\n  const openImage = useCallback((image, index) => {\n    setImagemZoom(image);\n    setCurrentImageIndex(index);\n    setZoomLevel(1);\n    setRotation(0);\n  }, []);\n\n  const nextImage = useCallback(() => {\n    if (imagens.length > 1) {\n      const nextIndex = (currentImageIndex + 1) % imagens.length;\n      setCurrentImageIndex(nextIndex);\n      setImagemZoom(imagens[nextIndex]);\n      setZoomLevel(1);\n      setRotation(0);\n    }\n  }, [imagens, currentImageIndex]);\n\n  const prevImage = useCallback(() => {\n    if (imagens.length > 1) {\n      const prevIndex = currentImageIndex === 0 ? imagens.length - 1 : currentImageIndex - 1;\n      setCurrentImageIndex(prevIndex);\n      setImagemZoom(imagens[prevIndex]);\n      setZoomLevel(1);\n      setRotation(0);\n    }\n  }, [imagens, currentImageIndex]);\n\n  const resetImage = useCallback(() => {\n    setZoomLevel(1);\n    setRotation(0);\n  }, []);\n\n  if (loading) {\n    return <div className=\"text-gray-500\">Carregando imagens do professor...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-600\">Erro ao carregar imagens: {error}</div>;\n  }\n\n  if (!imagens.length) {\n    return null;\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img, index) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && openImage(img, index)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.legenda}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.legenda && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.legenda}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom Melhorado */}\n      {imagemZoom && (\n        <div\n          className=\"image-zoom-modal\"\n          onClick={fecharZoom}\n        >\n          {/* Botão Fechar */}\n          <button\n            onClick={fecharZoom}\n            className=\"image-zoom-close\"\n            aria-label=\"Fechar\"\n          >\n            <X size={24} />\n          </button>\n\n          {/* Controles de Zoom */}\n          <div className=\"image-zoom-controls\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                setZoomLevel(prev => Math.min(prev + 0.25, 3));\n              }}\n              className=\"image-zoom-control-button\"\n              aria-label=\"Aumentar zoom\"\n            >\n              <ZoomIn size={20} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                setZoomLevel(prev => Math.max(prev - 0.25, 0.5));\n              }}\n              className=\"image-zoom-control-button\"\n              aria-label=\"Diminuir zoom\"\n            >\n              <ZoomOut size={20} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                setRotation(prev => (prev + 90) % 360);\n              }}\n              className=\"image-zoom-control-button\"\n              aria-label=\"Rotacionar\"\n            >\n              <RotateCw size={20} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                resetImage();\n              }}\n              className=\"image-zoom-control-button text-xs px-3\"\n              aria-label=\"Resetar\"\n            >\n              Reset\n            </button>\n          </div>\n\n          {/* Navegação entre imagens */}\n          {imagens.length > 1 && (\n            <>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  prevImage();\n                }}\n                className=\"image-zoom-navigation prev\"\n                aria-label=\"Imagem anterior\"\n              >\n                <ChevronLeft size={24} />\n              </button>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  nextImage();\n                }}\n                className=\"image-zoom-navigation next\"\n                aria-label=\"Próxima imagem\"\n              >\n                <ChevronRight size={24} />\n              </button>\n              \n              {/* Indicador de posição */}\n              <div className=\"image-zoom-counter\">\n                {currentImageIndex + 1} de {imagens.length}\n              </div>\n            </>\n          )}\n          \n          {/* Container da imagem */}\n          <div \n            className=\"image-zoom-container\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <img\n              src={imagemZoom.publicURL}\n              alt={imagemZoom.legenda}\n              className={`image-zoom-image ${imageOrientations[imagemZoom.id] || 'horizontal'}`}\n              style={{\n                transform: `scale(${zoomLevel}) rotate(${rotation}deg)`,\n                transition: 'transform 0.2s ease-in-out'\n              }}\n            />\n          </div>\n            \n          {/* Legenda no modal */}\n          {imagemZoom.legenda && (\n            <div className=\"image-zoom-caption\">\n              <h3 className=\"font-semibold text-gray-900 mb-1 text-sm\">\n                {imagemZoom.legenda}\n              </h3>\n              \n              {/* Informações adicionais */}\n              <div className=\"flex items-center gap-3 text-xs text-gray-600 mb-1 flex-wrap\">\n                {imagemZoom.categoria && (\n                  <span className=\"capitalize bg-gray-100 px-1.5 py-0.5 rounded text-xs\">\n                    {imagemZoom.categoria}\n                  </span>\n                )}\n                {imagemZoom.autor && (\n                  <span>Fotógrafo: {imagemZoom.autor}</span>\n                )}\n                {imagemZoom.dataFoto && (\n                  <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                )}\n              </div>\n              \n              {/* Descrição detalhada */}\n              {imagemZoom.descricaoDetalhada && (\n                <p className=\"text-gray-700 leading-tight text-xs\">\n                  {imagemZoom.descricaoDetalhada}\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagemHistoriadoProfessor.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagemHistoriadoProfessor);\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { User, AlertCircle, Loader2 } from 'lucide-react';\n\n/**\n * Componente Avatar modular e expansível\n * Suporta diferentes tamanhos, formas, temas e funcionalidades avançadas\n */\nconst Avatar = ({\n  // Props básicas\n  src,\n  alt,\n  name,\n  \n  // Tamanhos\n  size = 'medium',\n  customSize,\n  \n  // Forma e estilo\n  shape = 'circle',\n  variant = 'default',\n  \n  // Estados e interações\n  loading = false,\n  error = false,\n  clickable = false,\n  \n  // Customização visual\n  className = '',\n  borderColor = 'border-green-200',\n  backgroundColor = 'bg-gray-100',\n  textColor = 'text-gray-600',\n  \n  // Funcionalidades avançadas\n  badge,\n  badgePosition = 'bottom-right',\n  badgeColor = 'bg-green-500',\n  badgeSize = 'small',\n  \n  // Callbacks\n  onClick,\n  onError,\n  onLoad,\n  \n  // Configurações de fallback\n  fallbackIcon = 'user',\n  showInitials = true,\n  maxInitials = 2,\n  \n  // Configurações de imagem\n  lazy = true,\n  priority = false,\n  \n  // Props adicionais\n  ...props\n}) => {\n  const [imageError, setImageError] = useState(false);\n  const [imageLoading, setImageLoading] = useState(!!src);\n\n  // Configurações de tamanho\n  const sizeConfig = useMemo(() => {\n    if (customSize) {\n      return {\n        container: `w-[${customSize}] h-[${customSize}]`,\n        text: 'text-sm',\n        icon: 'w-6 h-6',\n        badge: 'w-3 h-3'\n      };\n    }\n\n    const sizes = {\n      xs: {\n        container: 'w-6 h-6',\n        text: 'text-xs',\n        icon: 'w-3 h-3',\n        badge: 'w-2 h-2'\n      },\n      small: {\n        container: 'w-8 h-8',\n        text: 'text-xs',\n        icon: 'w-4 h-4',\n        badge: 'w-2 h-2'\n      },\n      medium: {\n        container: 'w-12 h-12 sm:w-16 sm:h-16',\n        text: 'text-sm sm:text-base',\n        icon: 'w-6 h-6 sm:w-8 sm:h-8',\n        badge: 'w-3 h-3'\n      },\n      large: {\n        container: 'w-16 h-16 sm:w-20 sm:h-20',\n        text: 'text-base sm:text-lg',\n        icon: 'w-8 h-8 sm:w-10 sm:h-10',\n        badge: 'w-4 h-4'\n      },\n      xlarge: {\n        container: 'w-20 h-20 sm:w-24 sm:h-24',\n        text: 'text-lg sm:text-xl',\n        icon: 'w-10 h-10 sm:w-12 sm:h-12',\n        badge: 'w-5 h-5'\n      },\n      xxlarge: {\n        container: 'w-24 h-24 sm:w-32 sm:h-32',\n        text: 'text-xl sm:text-2xl',\n        icon: 'w-12 h-12 sm:w-16 sm:h-16',\n        badge: 'w-6 h-6'\n      }\n    };\n\n    return sizes[size] || sizes.medium;\n  }, [size, customSize]);\n\n  // Configurações de forma\n  const shapeConfig = useMemo(() => {\n    const shapes = {\n      circle: 'rounded-full',\n      square: 'rounded-lg',\n      rounded: 'rounded-xl',\n      none: 'rounded-none'\n    };\n    return shapes[shape] || shapes.circle;\n  }, [shape]);\n\n  // Configurações de variante\n  const variantConfig = useMemo(() => {\n    const variants = {\n      default: {\n        border: 'border-2',\n        shadow: 'shadow-md',\n        hover: 'hover:shadow-lg'\n      },\n      minimal: {\n        border: 'border',\n        shadow: 'shadow-sm',\n        hover: 'hover:shadow-md'\n      },\n      flat: {\n        border: 'border-2',\n        shadow: 'shadow-none',\n        hover: 'hover:shadow-sm'\n      },\n      elevated: {\n        border: 'border-2',\n        shadow: 'shadow-lg',\n        hover: 'hover:shadow-xl'\n      }\n    };\n    return variants[variant] || variants.default;\n  }, [variant]);\n\n  // Configurações de badge\n  const badgeConfig = useMemo(() => {\n    const positions = {\n      'top-left': 'top-0 left-0',\n      'top-right': 'top-0 right-0',\n      'bottom-left': 'bottom-0 left-0',\n      'bottom-right': 'bottom-0 right-0',\n      'center': 'top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2'\n    };\n\n    const badgeSizes = {\n      small: 'w-3 h-3',\n      medium: 'w-4 h-4',\n      large: 'w-5 h-5'\n    };\n\n    return {\n      position: positions[badgePosition] || positions['bottom-right'],\n      size: badgeSizes[badgeSize] || badgeSizes.small\n    };\n  }, [badgePosition, badgeSize]);\n\n  // Gerar iniciais do nome\n  const initials = useMemo(() => {\n    if (!name || !showInitials) return '';\n    \n    const words = name.trim().split(' ');\n    const initialsArray = words\n      .slice(0, maxInitials)\n      .map(word => word.charAt(0).toUpperCase())\n      .filter(char => char.match(/[A-Z]/));\n    \n    return initialsArray.join('');\n  }, [name, showInitials, maxInitials]);\n\n  // Determinar ícone de fallback\n  const FallbackIcon = useMemo(() => {\n    const icons = {\n      user: User,\n      alert: AlertCircle,\n      loading: Loader2\n    };\n    return icons[fallbackIcon] || icons.user;\n  }, [fallbackIcon]);\n\n  // Handlers\n  const handleImageLoad = () => {\n    setImageLoading(false);\n    setImageError(false);\n    onLoad?.();\n  };\n\n  const handleImageError = () => {\n    setImageLoading(false);\n    setImageError(true);\n    onError?.();\n  };\n\n  const handleClick = (e) => {\n    if (clickable || onClick) {\n      onClick?.(e);\n    }\n  };\n\n  // Determinar conteúdo a ser exibido\n  const shouldShowImage = src && !imageError && !loading;\n  const shouldShowInitials = !shouldShowImage && initials && !error;\n  const shouldShowIcon = !shouldShowImage && !shouldShowInitials && !error;\n\n  // Classes base\n  const baseClasses = `\n    ${sizeConfig.container}\n    ${shapeConfig}\n    ${variantConfig.border}\n    ${borderColor}\n    ${variantConfig.shadow}\n    ${clickable || onClick ? 'cursor-pointer' : ''}\n    ${variantConfig.hover}\n    transition-all duration-200\n    relative overflow-hidden\n    flex items-center justify-center\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div \n      className={baseClasses}\n      onClick={handleClick}\n      role={clickable || onClick ? 'button' : undefined}\n      tabIndex={clickable || onClick ? 0 : undefined}\n      {...props}\n    >\n      {/* Estado de loading */}\n      {loading && (\n        <div className={`absolute inset-0 ${backgroundColor} flex items-center justify-center`}>\n          <Loader2 className={`${sizeConfig.icon} animate-spin text-green-600`} />\n        </div>\n      )}\n\n      {/* Imagem */}\n      {shouldShowImage && (\n        <img\n          src={src}\n          alt={alt || `Avatar de ${name}` || 'Avatar'}\n          className={`w-full h-full object-cover ${imageLoading ? 'opacity-0' : 'opacity-100'} transition-opacity duration-200`}\n          onLoad={handleImageLoad}\n          onError={handleImageError}\n          loading={lazy ? 'lazy' : 'eager'}\n          {...(priority && { fetchPriority: 'high' })}\n        />\n      )}\n\n      {/* Estado de loading da imagem */}\n      {imageLoading && shouldShowImage && (\n        <div className={`absolute inset-0 ${backgroundColor} flex items-center justify-center`}>\n          <Loader2 className={`${sizeConfig.icon} animate-spin text-green-600`} />\n        </div>\n      )}\n\n      {/* Iniciais */}\n      {shouldShowInitials && (\n        <span className={`${sizeConfig.text} font-semibold ${textColor}`}>\n          {initials}\n        </span>\n      )}\n\n      {/* Ícone de fallback */}\n      {shouldShowIcon && (\n        <FallbackIcon className={`${sizeConfig.icon} ${textColor}`} />\n      )}\n\n      {/* Estado de erro */}\n      {error && (\n        <div className={`absolute inset-0 ${backgroundColor} flex items-center justify-center`}>\n          <AlertCircle className={`${sizeConfig.icon} text-red-500`} />\n        </div>\n      )}\n\n      {/* Badge */}\n      {badge && (\n        <div className={`absolute ${badgeConfig.position} ${badgeConfig.size} ${badgeColor} rounded-full border-2 border-white`}>\n          {typeof badge === 'string' ? (\n            <span className=\"text-xs text-white font-bold flex items-center justify-center h-full\">\n              {badge}\n            </span>\n          ) : (\n            badge\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nAvatar.propTypes = {\n  // Props básicas\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  name: PropTypes.string,\n  \n  // Tamanhos\n  size: PropTypes.oneOf(['xs', 'small', 'medium', 'large', 'xlarge', 'xxlarge']),\n  customSize: PropTypes.string,\n  \n  // Forma e estilo\n  shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'none']),\n  variant: PropTypes.oneOf(['default', 'minimal', 'flat', 'elevated']),\n  \n  // Estados e interações\n  loading: PropTypes.bool,\n  error: PropTypes.bool,\n  clickable: PropTypes.bool,\n  \n  // Customização visual\n  className: PropTypes.string,\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  textColor: PropTypes.string,\n  \n  // Funcionalidades avançadas\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  badgePosition: PropTypes.oneOf(['top-left', 'top-right', 'bottom-left', 'bottom-right', 'center']),\n  badgeColor: PropTypes.string,\n  badgeSize: PropTypes.oneOf(['small', 'medium', 'large']),\n  \n  // Callbacks\n  onClick: PropTypes.func,\n  onError: PropTypes.func,\n  onLoad: PropTypes.func,\n  \n  // Configurações de fallback\n  fallbackIcon: PropTypes.oneOf(['user', 'alert', 'loading']),\n  showInitials: PropTypes.bool,\n  maxInitials: PropTypes.number,\n  \n  // Configurações de imagem\n  lazy: PropTypes.bool,\n  priority: PropTypes.bool\n};\n\nexport default Avatar;\n","/**\n * Configurações de temas para o componente Avatar\n * Facilita a customização visual e mantém consistência\n */\n\nexport const avatarThemes = {\n  // Tema padrão (verde)\n  default: {\n    borderColor: 'border-green-200',\n    backgroundColor: 'bg-green-50',\n    textColor: 'text-green-700',\n    badgeColor: 'bg-green-500',\n    hoverBorderColor: 'hover:border-green-300'\n  },\n\n  // Tema professor (azul)\n  professor: {\n    borderColor: 'border-blue-200',\n    backgroundColor: 'bg-blue-50',\n    textColor: 'text-blue-700',\n    badgeColor: 'bg-blue-500',\n    hoverBorderColor: 'hover:border-blue-300'\n  },\n\n  // Tema escola (laranja)\n  escola: {\n    borderColor: 'border-orange-200',\n    backgroundColor: 'bg-orange-50',\n    textColor: 'text-orange-700',\n    badgeColor: 'bg-orange-500',\n    hoverBorderColor: 'hover:border-orange-300'\n  },\n\n  // Tema neutro (cinza)\n  neutral: {\n    borderColor: 'border-gray-200',\n    backgroundColor: 'bg-gray-50',\n    textColor: 'text-gray-700',\n    badgeColor: 'bg-gray-500',\n    hoverBorderColor: 'hover:border-gray-300'\n  },\n\n  // Tema indígena (marrom/terra)\n  indigena: {\n    borderColor: 'border-amber-200',\n    backgroundColor: 'bg-amber-50',\n    textColor: 'text-amber-800',\n    badgeColor: 'bg-amber-600',\n    hoverBorderColor: 'hover:border-amber-300'\n  },\n\n  // Tema sucesso (verde escuro)\n  success: {\n    borderColor: 'border-emerald-200',\n    backgroundColor: 'bg-emerald-50',\n    textColor: 'text-emerald-700',\n    badgeColor: 'bg-emerald-500',\n    hoverBorderColor: 'hover:border-emerald-300'\n  },\n\n  // Tema aviso (amarelo)\n  warning: {\n    borderColor: 'border-yellow-200',\n    backgroundColor: 'bg-yellow-50',\n    textColor: 'text-yellow-800',\n    badgeColor: 'bg-yellow-500',\n    hoverBorderColor: 'hover:border-yellow-300'\n  },\n\n  // Tema erro (vermelho)\n  error: {\n    borderColor: 'border-red-200',\n    backgroundColor: 'bg-red-50',\n    textColor: 'text-red-700',\n    badgeColor: 'bg-red-500',\n    hoverBorderColor: 'hover:border-red-300'\n  }\n};\n\n/**\n * Configurações de tamanhos predefinidos\n */\nexport const avatarSizes = {\n  xs: 'w-6 h-6',\n  small: 'w-8 h-8',\n  medium: 'w-12 h-12 sm:w-16 sm:h-16',\n  large: 'w-16 h-16 sm:w-20 sm:h-20',\n  xlarge: 'w-20 h-20 sm:w-24 sm:h-24',\n  xxlarge: 'w-24 h-24 sm:w-32 sm:h-32'\n};\n\n/**\n * Configurações de formas\n */\nexport const avatarShapes = {\n  circle: 'rounded-full',\n  square: 'rounded-lg',\n  rounded: 'rounded-xl',\n  none: 'rounded-none'\n};\n\n/**\n * Configurações de variantes de estilo\n */\nexport const avatarVariants = {\n  default: {\n    border: 'border-2',\n    shadow: 'shadow-md',\n    hover: 'hover:shadow-lg'\n  },\n  minimal: {\n    border: 'border',\n    shadow: 'shadow-sm',\n    hover: 'hover:shadow-md'\n  },\n  flat: {\n    border: 'border-2',\n    shadow: 'shadow-none',\n    hover: 'hover:shadow-sm'\n  },\n  elevated: {\n    border: 'border-2',\n    shadow: 'shadow-lg',\n    hover: 'hover:shadow-xl'\n  }\n};\n\n/**\n * Configurações de badges\n */\nexport const badgePositions = {\n  'top-left': 'top-0 left-0',\n  'top-right': 'top-0 right-0',\n  'bottom-left': 'bottom-0 left-0',\n  'bottom-right': 'bottom-0 right-0',\n  'center': 'top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2'\n};\n\nexport const badgeSizes = {\n  small: 'w-3 h-3',\n  medium: 'w-4 h-4',\n  large: 'w-5 h-5'\n};\n\n/**\n * Função helper para aplicar tema\n */\nexport const applyTheme = (themeName, customTheme = {}) => {\n  const baseTheme = avatarThemes[themeName] || avatarThemes.default;\n  return { ...baseTheme, ...customTheme };\n};\n\n/**\n * Função helper para gerar classes CSS do tema\n */\nexport const getThemeClasses = (theme) => {\n  return {\n    container: `${theme.borderColor} ${theme.backgroundColor} ${theme.hoverBorderColor}`,\n    text: theme.textColor,\n    badge: theme.badgeColor\n  };\n};\n\nexport default {\n  themes: avatarThemes,\n  sizes: avatarSizes,\n  shapes: avatarShapes,\n  variants: avatarVariants,\n  badgePositions,\n  badgeSizes,\n  applyTheme,\n  getThemeClasses\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../shared/Avatar';\nimport { avatarThemes } from '../../shared/AvatarThemes';\n\nconst FotoProfessor = ({ \n  fotoUrl, \n  nomeProfessor, \n  tamanho = 'medium',\n  className = '',\n  showFallback = true,\n  // Novas props para customização avançada\n  theme = 'professor',\n  variant = 'default',\n  shape = 'circle',\n  clickable = false,\n  badge,\n  badgePosition = 'bottom-right',\n  onClick,\n  onError,\n  onLoad,\n  // Props para compatibilidade com tamanhos antigos\n  size\n}) => {\n  // Mapear tamanhos antigos para novos\n  const sizeMapping = {\n    small: 'medium',\n    medium: 'large', \n    large: 'xlarge',\n    xlarge: 'xxlarge'\n  };\n\n  const mappedSize = size || sizeMapping[tamanho] || 'large';\n  \n  // Aplicar tema\n  const themeConfig = avatarThemes[theme] || avatarThemes.professor;\n  \n  // Se não há URL da foto e não deve mostrar fallback, não renderiza nada\n  if (!fotoUrl && !showFallback) {\n    return null;\n  }\n\n  return (\n    <Avatar\n      src={fotoUrl}\n      name={nomeProfessor}\n      alt={nomeProfessor ? `Foto de ${nomeProfessor}` : 'Foto do professor'}\n      size={mappedSize}\n      shape={shape}\n      variant={variant}\n      theme={theme}\n      clickable={clickable}\n      badge={badge}\n      badgePosition={badgePosition}\n      className={className}\n      onClick={onClick}\n      onError={onError}\n      onLoad={onLoad}\n      showInitials={true}\n      maxInitials={2}\n      fallbackIcon=\"user\"\n      lazy={true}\n      // Aplicar tema customizado\n      borderColor={themeConfig.borderColor}\n      backgroundColor={themeConfig.backgroundColor}\n      textColor={themeConfig.textColor}\n      badgeColor={themeConfig.badgeColor}\n    />\n  );\n};\n\nFotoProfessor.propTypes = {\n  // Props básicas (compatibilidade)\n  fotoUrl: PropTypes.string,\n  nomeProfessor: PropTypes.string,\n  tamanho: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n  className: PropTypes.string,\n  showFallback: PropTypes.bool,\n  \n  // Novas props para customização avançada\n  theme: PropTypes.oneOf(['default', 'professor', 'escola', 'neutral', 'indigena', 'success', 'warning', 'error']),\n  variant: PropTypes.oneOf(['default', 'minimal', 'flat', 'elevated']),\n  shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'none']),\n  clickable: PropTypes.bool,\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  badgePosition: PropTypes.oneOf(['top-left', 'top-right', 'bottom-left', 'bottom-right', 'center']),\n  onClick: PropTypes.func,\n  onError: PropTypes.func,\n  onLoad: PropTypes.func,\n  size: PropTypes.oneOf(['xs', 'small', 'medium', 'large', 'xlarge', 'xxlarge'])\n};\n\nexport default FotoProfessor;\n","import React, { memo, useEffect, useState, useCallback } from 'react';\nimport { ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { getHistoriasProfessor } from '../../../../services/historiaProfessorService';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport FotoProfessor from '../FotoProfessor';\nimport './HistoriadoProfessor.css';\n\nconst HistoriadoProfessor = memo(({ escola, refreshKey = 0 }) => {\n  const [historias, setHistorias] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentHistoriaIndex, setCurrentHistoriaIndex] = useState(0);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        fecharZoom();\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Carregar histórias do professor\n  useEffect(() => {\n    if (!escola?.id) {\n      setLoading(false);\n      return;\n    }\n    const carregarHistorias = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await getHistoriasProfessor(escola.id);\n        setHistorias(data || []);\n        setCurrentHistoriaIndex(0);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    carregarHistorias();\n  }, [escola?.id, refreshKey]);\n\n  // Navegação entre histórias\n  const nextHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev < historias.length - 1 ? prev + 1 : 0\n    );\n  }, [historias.length]);\n\n  const prevHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev > 0 ? prev - 1 : historias.length - 1\n    );\n  }, [historias.length]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (historias.length <= 1) return;\n      if (e.key === 'ArrowRight') {\n        nextHistoria();\n      } else if (e.key === 'ArrowLeft') {\n        prevHistoria();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [historias.length, nextHistoria, prevHistoria]);\n\n  if (loading) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-green-100/50\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando histórias do professor...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-red-100/50\">\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600\">Erro ao carregar histórias do professor: {error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!historias.length) {\n    return null;\n  }\n\n  const currentHistoria = historias[currentHistoriaIndex];\n  const hasMultipleHistorias = historias.length > 1;\n\n  return (\n    <article\n      className=\"\n        mt-8 mb-12 max-w-4xl mx-auto\n        px-4 sm:px-6 md:px-8 py-6\n        bg-white rounded-2xl shadow-lg\n        prose prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n        prose-img:rounded-xl prose-img:shadow-lg\n        prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n      \"\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n              <img \n                src={`${process.env.PUBLIC_URL}/passaro.svg`} \n                alt=\"Ícone de pássaro\" \n                className=\"w-12 h-12 sm:w-24 sm:h-24\" \n                style={{ \n                  filter: 'none', \n                  borderRadius: '0', \n                  boxShadow: 'none', \n                  margin: '0',\n                  padding: '0',\n                  border: 'none',\n                  outline: 'none'\n                }}\n                aria-hidden=\"true\"\n              />\n            </span>\n            <h2 className=\"text-xl sm:text-2xl font-bold text-black m-0\">\n              Depoimento dos Professores\n            </h2>\n          </div>\n          {hasMultipleHistorias && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span>{currentHistoriaIndex + 1} de {historias.length}</span>\n            </div>\n          )}\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      {/* Conteúdo da história atual */}\n      <section className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {currentHistoria.nome_professor && (\n          <div className=\"flex items-center gap-4 mb-6\">\n            <FotoProfessor \n              fotoUrl={currentHistoria.foto_rosto}\n              nomeProfessor={currentHistoria.nome_professor}\n              tamanho=\"medium\"\n              className=\"flex-shrink-0\"\n            />\n            <h3 className=\"text-lg sm:text-xl font-semibold text-green-800 m-0\">\n              {currentHistoria.nome_professor}\n            </h3>\n          </div>\n        )}\n        <div \n          className=\"historia-professor-content prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\n            prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n            prose-img:rounded-xl prose-img:shadow-lg\n            prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n            prose-strong:text-green-800 prose-em:text-green-700\n            prose-blockquote:border-l-green-300 prose-blockquote:bg-green-50 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r-lg\n            prose-ul:text-black prose-ol:text-black prose-li:text-black\n            prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm\"\n          dangerouslySetInnerHTML={{ __html: currentHistoria.historia }}\n        />\n        {currentHistoria.imagem_public_url && (\n          <figure className=\"my-6\">\n            <div className=\"relative\">\n              <img\n                src={currentHistoria.imagem_public_url}\n                alt={currentHistoria.descricao_imagem || 'Imagem da história do professor'}\n                className=\"w-full max-w-2xl mx-auto rounded-xl shadow-lg cursor-pointer transition-transform duration-200 hover:scale-105\"\n                onClick={() => setImagemZoom(currentHistoria)}\n                loading=\"lazy\"\n              />\n              {currentHistoria.descricao_imagem && (\n                <figcaption className=\"text-center text-sm text-gray-600 mt-2\">\n                  {currentHistoria.descricao_imagem}\n                </figcaption>\n              )}\n            </div>\n          </figure>\n        )}\n      </section>\n\n      {/* Navegação entre histórias */}\n      {hasMultipleHistorias && (\n        <div className=\"flex items-center justify-between mt-8 pt-6 border-t border-gray-200\">\n          <button\n            onClick={prevHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"História anterior\"\n          >\n            <ChevronLeft className=\"w-5 h-5\" />\n            <span className=\"hidden sm:inline\">Anterior</span>\n          </button>\n          <div className=\"flex gap-2\">\n            {historias.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentHistoriaIndex(index)}\n                className={`w-3 h-3 rounded-full border-2 ${index === currentHistoriaIndex ? 'bg-green-600 border-green-600' : 'bg-white border-gray-300'} transition-colors`}\n                aria-label={`Ir para história ${index + 1}`}\n              />\n            ))}\n          </div>\n          <button\n            onClick={nextHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"Próxima história\"\n          >\n            <span className=\"hidden sm:inline\">Próxima</span>\n            <ChevronRight className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Modal de zoom da imagem */}\n      {imagemZoom && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-90\" onClick={fecharZoom}>\n          <div className=\"relative max-w-[90vw] max-h-[90vh] flex items-center justify-center p-4\" onClick={e => e.stopPropagation()}>\n            <button\n              className=\"absolute top-4 right-4 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-80 z-10\"\n              onClick={fecharZoom}\n              aria-label=\"Fechar zoom\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <img\n              src={imagemZoom.imagem_public_url}\n              alt={imagemZoom.descricao_imagem || 'Imagem da história do professor'}\n              className=\"max-w-full max-h-full object-contain rounded-xl shadow-2xl border-4 border-white\"\n            />\n            {imagemZoom.descricao_imagem && (\n              <figcaption className=\"absolute bottom-4 left-1/2 -translate-x-1/2 text-center text-sm text-white bg-black bg-opacity-50 rounded-lg px-3 py-1.5 max-w-2xl\">\n                {imagemZoom.descricao_imagem}\n              </figcaption>\n            )}\n          </div>\n        </div>\n      )}\n\n      <ImagemHistoriadoProfessor escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriadoProfessor;\n","import React, { memo } from 'react';\n\n// Import all section components\nimport BasicInfo from './BasicInfo';\nimport HistoriaEscola from './HistoriaEscola';\n// import PovosLinguas from './PovosLinguas';\nimport Modalidades from './Modalidades';\nimport Infraestrutura from './Infraestrutura';\nimport GestaoProfessores from './GestaoProfessores';\nimport ProjetosParcerias from './ProjetosParcerias';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport HistoriadoProfessor from './HistoriadoProfessor';\n\n// CSS para layout Masonry real usando CSS columns\nconst masonryStyles = `\n  .masonry-grid {\n    column-count: 1;\n    column-gap: 1.5rem;\n    column-fill: balance;\n  }\n  \n  .masonry-grid > * {\n    display: block;\n    break-inside: avoid;\n    page-break-inside: avoid;\n    margin-bottom: 1.5rem;\n  }\n  \n  /* Mobile: 1 coluna */\n  @media (max-width: 767px) {\n    .masonry-grid {\n      column-count: 1;\n    }\n  }\n  \n  /* Tablet e Desktop: 2 colunas */\n  @media (min-width: 768px) {\n    .masonry-grid {\n      column-count: 2;\n    }\n  }\n`;\n\n// Componente wrapper para o grid\nconst GridLayoutWrapper = memo(({ children, shouldUseGrid }) => {\n  const containerClasses = shouldUseGrid\n    ? 'masonry-grid'\n    : 'space-y-4';\n\n  return (\n    <>\n      <style>{masonryStyles}</style>\n      <div className={`${containerClasses} transition-all duration-300 ease-in-out`}>\n        {children}\n      </div>\n    </>\n  );\n});\n\nconst EscolaInfo = memo(({ escola, shouldUseGrid = false, refreshKey = 0 }) => {\n  console.log(\"EscolaInfo recebeu:\", escola);\n  \n  if (!escola) {\n    console.log(\"EscolaInfo: escola é null ou undefined\");\n    return null;\n  }\n\n  // Componentes que serão renderizados no grid\n  const gridSections = [\n    { Component: BasicInfo, props: { escola } },\n    // { Component: PovosLinguas, props: { escola } },\n    { Component: Modalidades, props: { escola } },\n    { Component: Infraestrutura, props: { escola } },\n    { Component: GestaoProfessores, props: { escola } },\n    { Component: ProjetosParcerias, props: { escola } }\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Grid de cards */}\n      <GridLayoutWrapper shouldUseGrid={shouldUseGrid}>\n        {gridSections.map(({ Component, props }, index) => (\n          <Component key={index} {...props} />\n        ))}\n      </GridLayoutWrapper>\n\n      {/* História da Escola em destaque */}\n      <HistoriaEscola escola={escola} refreshKey={refreshKey} />\n      <HistoriadoProfessor escola={escola} refreshKey={refreshKey} />\n    </div>\n  );\n});\n\nexport default EscolaInfo; ","import React from 'react';\n\nconst HandFistIcon = ({ className = 'w-5 h-5', ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 256 256\"\n    fill=\"currentColor\"\n    className={className}\n    {...props}\n  >\n    <path d=\"M200,80H184V64a32,32,0,0,0-56-21.13A32,32,0,0,0,72.21,60.42,32,32,0,0,0,24,88v40a104,104,0,0,0,208,0V112A32,32,0,0,0,200,80ZM152,48a16,16,0,0,1,16,16V80H136V64A16,16,0,0,1,152,48ZM88,64a16,16,0,0,1,32,0v40a16,16,0,0,1-32,0ZM40,88a16,16,0,0,1,32,0v16a16,16,0,0,1-32,0Zm176,40a88,88,0,0,1-175.92,3.75A31.93,31.93,0,0,0,80,125.13a31.93,31.93,0,0,0,44.58,3.35,32.21,32.21,0,0,0,11.8,11.44A47.88,47.88,0,0,0,120,176a8,8,0,0,0,16,0,32,32,0,0,1,32-32,8,8,0,0,0,0-16H152a16,16,0,0,1-16-16V96h64a16,16,0,0,1,16,16Z\" />\n  </svg>\n);\n\nexport default HandFistIcon; ","import React, { memo } from 'react';\n\nconst InfoItem = memo(({ label, value, className = '', isTextArea = false }) => {\n  if (!value) return null;\n\n  const isFlexLayout = className.includes('flex flex-col');\n  const baseClasses = isFlexLayout \n    ? 'flex flex-col gap-1 text-sm py-0.5'\n    : 'grid grid-cols-[auto,1fr] gap-x-2 text-sm py-0.5';\n\n  return (\n    <div className={`${baseClasses} ${className}`}>\n      <span className=\"font-medium text-neutral-800\">{label}:</span>\n      {isTextArea ? (\n        <div className=\"text-neutral-600\">\n          <div className=\"whitespace-pre-wrap break-words text-sm leading-relaxed\">\n            {value}\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-neutral-600 break-words\">{value}</span>\n      )}\n    </div>\n  );\n});\n\nexport default InfoItem; ","import React, { memo } from 'react';\nimport HandFistIcon from './icons/HandFistIcon';\nimport InfoSection from './components/InfoSection';\nimport InfoItem from './components/InfoItem';\n\n// Wrapper para passar className maior ao ícone\nconst LargeHandFistIcon = (props) => <HandFistIcon className=\"w-8 h-8\" {...props} />;\n\nconst TerraIndigenaInfo = memo(({ terraIndigena }) => {\n  if (!terraIndigena) {\n    console.log(\"TerraIndigenaInfo: terraIndigena é null ou undefined\");\n    return null;\n  }\n\n  const formatarSuperficie = () => {\n    return terraIndigena.superficie ? \n      `Superfície: ${parseFloat(terraIndigena.superficie).toFixed(2)} ha` : null;\n  };\n\n  const formatarLocalizacao = () => {\n    return `${terraIndigena.municipio || ''}, ${terraIndigena.uf || ''}`.trim();\n  };\n\n  return (\n    <InfoSection title=\"Informações da Terra Indígena\" icon={LargeHandFistIcon}>\n      <InfoItem label=\"Povos Indígenas\" value={terraIndigena.etnia} />\n      <InfoItem label=\"Localização\" value={formatarLocalizacao()} />\n      <InfoItem label=\"Superfície\" value={formatarSuperficie()} />\n      <InfoItem label=\"Fase\" value={terraIndigena.fase} />\n      <InfoItem label=\"Modalidade\" value={terraIndigena.modalidade} />\n      <InfoItem label=\"Reestudo\" value={terraIndigena.reestudo} />\n      <InfoItem label=\"Coordenação Regional\" value={terraIndigena.cr} />\n      <InfoItem label=\"Faixa de Fronteira\" value={terraIndigena.faixa_fron} />\n      <InfoItem label=\"Unidade Administrativa\" value={terraIndigena.undadm_nom} />\n      <InfoItem label=\"Sigla Unidade\" value={terraIndigena.undadm_sig} />\n      <InfoItem label=\"Domínio\" value={terraIndigena.dominio_un} />\n      <InfoItem label=\"Data de Atualização\" value={terraIndigena.data_atual} />\n      <InfoItem label=\"Código Terra Indígena\" value={terraIndigena.terrai_cod} />\n      <InfoItem label=\"Código Unidade Administrativa\" value={terraIndigena.undadm_cod} />\n    </InfoSection>\n  );\n});\n\nexport default TerraIndigenaInfo; ","import React, { useState } from \"react\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n  LinkedinIcon,\n} from \"react-share\";\nimport { Share2, Link, Check, MessageCircle, Facebook, Twitter, Linkedin } from \"lucide-react\";\n\n// Componente Tooltip melhorado\nconst Tooltip = ({ children, text, position = \"top\" }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-3\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-3\",\n  };\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      onFocus={() => setIsVisible(true)}\n      onBlur={() => setIsVisible(false)}\n    >\n      {children}\n      {isVisible && (\n        <div className={`\n          absolute z-50 px-3 py-2 text-sm text-white bg-gray-900 rounded-lg shadow-xl whitespace-nowrap\n          ${positionClasses[position]}\n          animate-in fade-in-0 zoom-in-95 duration-200\n        `}>\n          {text}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShareButton = ({ onClick, url, title, description = \"\" }) => {\n  const [copied, setCopied] = useState(false);\n  const [showShareOptions, setShowShareOptions] = useState(false);\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 3000);\n    } catch (err) {\n      // Fallback para navegadores mais antigos\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 3000);\n    }\n  };\n\n  // Frases de compartilhamento mais atrativas\n  const shareTextOptions = [\n    `Conheça a escola indígena: ${title}`,\n    `Descubra esta escola indígena: ${title}`,\n    `Escola indígena incrível: ${title}`,\n    `Educação indígena em destaque: ${title}`,\n    `Conheça esta escola: ${title}`,\n    `Escola indígena que inspira: ${title}`,\n    `Educação que transforma: ${title}`,\n    `Escola indígena de referência: ${title}`\n  ];\n\n  // Seleciona uma frase aleatória para variar o conteúdo\n  const randomIndex = Math.floor(Math.random() * shareTextOptions.length);\n  const shareText = shareTextOptions[randomIndex];\n  const shareUrl = url || window.location.href;\n\n  const shareButtons = [\n    {\n      name: \"WhatsApp\",\n      icon: <MessageCircle className=\"w-5 h-5\" />,\n      color: \"bg-green-500 hover:bg-green-600\",\n      component: WhatsappShareButton,\n      props: { url: shareUrl, title: shareText }\n    },\n    {\n      name: \"Facebook\",\n      icon: <Facebook className=\"w-5 h-5\" />,\n      color: \"bg-blue-600 hover:bg-blue-700\",\n      component: FacebookShareButton,\n      props: { url: shareUrl, quote: shareText }\n    },\n    {\n      name: \"Twitter\",\n      icon: <Twitter className=\"w-5 h-5\" />,\n      color: \"bg-sky-500 hover:bg-sky-600\",\n      component: TwitterShareButton,\n      props: { url: shareUrl, title: shareText }\n    },\n    {\n      name: \"LinkedIn\",\n      icon: <Linkedin className=\"w-5 h-5\" />,\n      color: \"bg-blue-700 hover:bg-blue-800\",\n      component: LinkedinShareButton,\n      props: { url: shareUrl, title: title, summary: description }\n    }\n  ];\n\n  return (\n    <div className=\"px-4 py-6 border-t border-green-200 bg-gradient-to-b from-white to-green-50\">\n      <div className=\"max-w-md mx-auto\">\n        {/* Título da seção */}\n        <div className=\"text-center mb-4\">\n          <h3 className=\"text-lg font-semibold text-green-800 mb-2\">\n            Compartilhe esta escola\n          </h3>\n        </div>\n\n        {/* Botão Copiar Link - Destaque */}\n        <div className=\"mb-4\">\n          <Tooltip text={copied ? \"Link copiado com sucesso!\" : \"Copiar link para clipboard\"}>\n            <button\n              onClick={handleCopyLink}\n              className={`\n                w-full flex items-center justify-center gap-3 p-4 rounded-xl transition-all duration-300\n                focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\n                transform hover:scale-105 active:scale-95\n                ${copied\n                  ? 'bg-green-100 border-2 border-green-300 text-green-800'\n                  : 'bg-gradient-to-r from-green-500 to-green-600 text-white shadow-lg hover:shadow-xl'\n                }\n              `}\n              aria-label=\"Copiar link para clipboard\"\n            >\n              {copied ? (\n                <Check className=\"w-6 h-6\" />\n              ) : (\n                <Link className=\"w-6 h-6\" />\n              )}\n              <span className=\"font-semibold\">\n                {copied ? 'Link Copiado!' : 'Copiar Link'}\n              </span>\n            </button>\n          </Tooltip>\n        </div>\n\n        {/* Botões de Redes Sociais */}\n        <div className=\"grid grid-cols-2 gap-3 mb-4\">\n          {shareButtons.map((button, index) => {\n            const ShareComponent = button.component;\n            return (\n              <Tooltip key={index} text={`Compartilhar no ${button.name}`}>\n                <ShareComponent\n                  {...button.props}\n                  className=\"w-full transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transform hover:scale-105 active:scale-95\"\n                  aria-label={`Compartilhar no ${button.name}`}\n                >\n                  <div className={`\n                    w-full flex items-center justify-center gap-2 p-3 rounded-lg text-white font-medium\n                    ${button.color} shadow-md hover:shadow-lg\n                  `}>\n                    {button.icon}\n                    <span className=\"text-sm\">{button.name}</span>\n                  </div>\n                </ShareComponent>\n              </Tooltip>\n            );\n          })}\n        </div>\n\n        {/* Botão Compartilhar Nativo (fallback) */}\n        {navigator.share && (\n          <div className=\"text-center\">\n            <Tooltip text=\"Compartilhar usando opções do sistema\">\n              <button\n                onClick={onClick}\n                className=\"w-full flex items-center justify-center gap-2 p-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transform hover:scale-105 active:scale-95\"\n                aria-label=\"Compartilhar usando opções do sistema\"\n              >\n                <Share2 className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Mais opções</span>\n              </button>\n            </Tooltip>\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ShareButton);","import React, { memo, useMemo } from 'react';\nimport ShareButton from '../ShareButton';\n\nconst ShareSection = memo(({ copiarLink, compartilhar, painelInfo }) => {\n  // Gerar URL customizada para compartilhamento\n  const gerarLinkCustomizado = useMemo(() => {\n    if (!painelInfo?.titulo) return window.location.href;\n    \n    const criarSlug = (texto) => {\n      return texto\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim();\n    };\n\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  }, [painelInfo?.titulo]);\n\n  // Gerar descrição otimizada para compartilhamento\n  const gerarDescricao = useMemo(() => {\n    if (!painelInfo) return 'Confira informações sobre esta escola indígena no Observatório de Professores Indígenas.';\n    \n    let descricao = `Escola Indígena: ${painelInfo.titulo}`;\n    \n    if (painelInfo['Município']) {\n      descricao += ` - ${painelInfo['Município']}`;\n    }\n    \n    if (painelInfo['Povos indigenas']) {\n      descricao += ` | Povos: ${painelInfo['Povos indigenas']}`;\n    }\n    \n    if (painelInfo['Linguas faladas']) {\n      descricao += ` | Línguas: ${painelInfo['Linguas faladas']}`;\n    }\n    \n    descricao += ' | Observatório de Professores Indígenas';\n    \n    return descricao;\n  }, [painelInfo]);\n\n  // Gerar título otimizado para compartilhamento\n  const gerarTitulo = useMemo(() => {\n    if (!painelInfo?.titulo) return 'Escola Indígena - Observatório de Professores Indígenas';\n    \n    return `${painelInfo.titulo} - Escola Indígena`;\n  }, [painelInfo?.titulo]);\n\n  return (\n    <ShareButton \n      onClick={compartilhar}\n      url={gerarLinkCustomizado}\n      title={gerarTitulo}\n      description={gerarDescricao}\n    />\n  );\n});\n\nexport default ShareSection; ","import React, { useMemo } from \"react\";\nimport DOMPurify from \"dompurify\";\n\n/**\n * Componente PainelDescricao - Exibe conteúdo formatado com sanitização HTML\n * \n * @param {Object} props - Propriedades do componente\n * @param {string} props.descricao - Texto HTML ou texto puro a ser exibido\n * @param {string} props.className - Classes CSS adicionais (opcional)\n * @returns {React.ReactElement|null} - Componente renderizado ou null\n */\nconst PainelDescricao = ({ descricao, className = \"\" }) => {\n  // Função para formatar o texto com quebras de linha\n  const formatText = (text) => {\n    if (!text) return \"\";\n    \n    // Preserva parágrafos convertendo linhas duplas em tags <p>\n    let formattedText = text.replace(/\\n\\n+/g, \"</p><p>\");\n    \n    // Substitui quebras de linha simples por <br>\n    formattedText = formattedText.replace(/\\n/g, \"<br>\");\n    \n    // Adiciona tags <p> no início e fim se não existirem\n    if (!formattedText.startsWith(\"<p>\")) {\n      formattedText = \"<p>\" + formattedText;\n    }\n    if (!formattedText.endsWith(\"</p>\")) {\n      formattedText = formattedText + \"</p>\";\n    }\n    \n    // Remove espaços extras entre tags HTML\n    formattedText = formattedText.replace(/>\\s+</g, \"><\");\n    \n    return formattedText;\n  };\n\n  // Usa useMemo para evitar sanitização redundante em re-renders\n  const sanitizedHTML = useMemo(() => {\n    if (!descricao) return \"\";\n    \n    return DOMPurify.sanitize(formatText(descricao), {\n      ALLOWED_TAGS: [\n        'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li',\n        'div', 'span', 'img', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n        'center', 'blockquote', 'code', 'pre', 'hr', 'table', 'thead', \n        'tbody', 'tr', 'th', 'td'\n      ],\n      ALLOWED_ATTR: [\n        'href', 'target', 'rel', 'class', 'style', 'src', 'alt',\n        'width', 'height', 'id', 'title', 'aria-label', 'aria-describedby'\n      ],\n      ADD_TAGS: ['center', 'blockquote'],\n      ADD_ATTR: ['target', 'className', 'title'],\n      KEEP_CONTENT: true,\n      ALLOW_DATA_ATTR: false\n    });\n  }, [descricao]);\n\n  if (!descricao) return null;\n\n  return (\n    <div className={`mb-6 ${className}`}>\n      <div\n        className=\"prose prose-lg lg:prose-xl max-w-none px-1\"\n        style={{\n          '--tw-prose-body': '#1f2937',\n          '--tw-prose-headings': '#111827',\n          '--tw-prose-links': '#059669',\n          '--tw-prose-bold': '#111827',\n          '--tw-prose-counters': '#1f2937',\n          '--tw-prose-bullets': '#4b5563',\n          '--tw-prose-hr': '#e5e7eb',\n          '--tw-prose-quotes': '#111827',\n          '--tw-prose-quote-borders': '#10b981',\n          '--tw-prose-captions': '#6b7280',\n          '--tw-prose-code': '#111827',\n          '--tw-prose-pre-code': '#e5e7eb',\n          '--tw-prose-pre-bg': '#1f2937',\n          '--tw-prose-th-borders': '#d1d5db',\n          '--tw-prose-td-borders': '#e5e7eb',\n          lineHeight: '1.8',\n          fontSize: '1.125rem',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n          letterSpacing: '0.015em',\n        }}\n        dangerouslySetInnerHTML={{ __html: sanitizedHTML }}\n        aria-live=\"polite\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PainelDescricao);","import React, { memo } from 'react';\nimport PainelDescricao from '../PainelDescricao';\n\nconst IntroPanel = memo(({ painelInfo }) => (\n  <div className=\"space-y-6\">\n    <div className=\"prose prose-lg lg:prose-xl max-w-none\">\n      <div className=\"bg-green-100 rounded-lg p-6\">\n        <PainelDescricao descricao={painelInfo.descricao_detalhada} />\n      </div>\n    </div>\n    {painelInfo.audioUrl && (\n      <div className=\"mt-6\">\n        <audio controls className=\"w-full\">\n          <source src={painelInfo.audioUrl} type=\"audio/mpeg\" />\n          Seu navegador não suporta o elemento de áudio.\n        </audio>\n      </div>\n    )}\n  </div>\n));\n\nexport default IntroPanel; ","/**\n * Utility functions for text formatting\n */\n\n/**\n * Lista de siglas que devem permanecer em maiúsculas\n */\nconst SIGLAS_MAIUSCULAS = ['EE', 'EEI'];\n\n/**\n * Capitalizes the first letter of each word in a string, keeping specific acronyms in uppercase\n * @param {string} str - The string to capitalize\n * @returns {string} The capitalized string\n */\nexport const capitalizeWords = (str) => {\n  if (!str || typeof str !== 'string') return '';\n  \n  // Primeiro, divide a string em palavras\n  const words = str.split(/\\s+/);\n  \n  // Processa cada palavra\n  const processedWords = words.map(word => {\n    // Verifica se a palavra é uma sigla que deve permanecer em maiúsculas\n    if (SIGLAS_MAIUSCULAS.includes(word.toUpperCase())) {\n      return word.toUpperCase();\n    }\n    \n    // Para outras palavras, aplica a capitalização normal\n    return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n  });\n  \n  // Junta as palavras de volta em uma string\n  return processedWords.join(' ');\n}; \n\n/**\n * Normalizes an address string by capitalizing words and handling common address abbreviations\n * @param {string} address - The address string to normalize\n * @returns {string} The normalized address string\n */\nexport const normalizeAddress = (address) => {\n  if (!address || typeof address !== 'string') return '';\n\n  // Lista de abreviações comuns em endereços\n  const abbreviations = {\n    'r.': 'Rua',\n    'av.': 'Avenida',\n    'al.': 'Alameda',\n    'pr.': 'Praça',\n    'tr.': 'Travessa',\n    'rod.': 'Rodovia',\n    'est.': 'Estrada',\n    'n.': 'Número',\n    'nº': 'Número',\n    'apt.': 'Apartamento',\n    'bl.': 'Bloco',\n    'qd.': 'Quadra',\n    'lt.': 'Lote',\n    'km': 'KM',\n    's/n': 'S/N'\n  };\n\n  // Primeiro, substitui as abreviações\n  let normalized = address.toLowerCase();\n  Object.entries(abbreviations).forEach(([abbr, full]) => {\n    normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'g'), full);\n  });\n\n  // Depois aplica a capitalização de palavras\n  return capitalizeWords(normalized);\n}; ","import React from \"react\";\nimport { X, Maximize2, Minimize2 } from \"lucide-react\";\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\nconst PainelHeader = ({ titulo, closePainel, toggleMaximize, isMaximized }) => {\n  const isMobile = window.innerWidth <= 768;\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const isVerySmallLandscape = isMobileLandscape && window.innerWidth <= 850;\n\n  return (\n    <header className={`relative px-3 sm:px-4 md:px-6 lg:px-8 py-3 sm:py-4 md:py-6 border-b border-green-100 ${isMobileLandscape ? 'min-h-[60px]' : ''}`}>\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between pr-12\">\n        <h2 \n          id=\"painel-titulo\"\n          className={`font-semibold text-gray-900 leading-tight tracking-normal break-words ${\n            isVerySmallLandscape\n              ? 'text-base' // Força fonte menor em paisagem muito estreita\n              : isMobileLandscape \n                ? 'text-lg sm:text-xl' \n                : 'text-xl sm:text-2xl md:text-3xl'\n          }`}\n          style={isVerySmallLandscape ? { fontSize: 'clamp(1rem, 4vw, 1.25rem)' } : {}}\n        >\n          {capitalizeWords(titulo)}\n        </h2>\n      </div>\n\n      <div className=\"absolute top-2 sm:top-4 right-2 sm:right-4 flex items-center gap-2\">\n        {!isMobile && (\n          <button\n            onClick={toggleMaximize}\n            className=\"p-2 text-green-700 hover:text-green-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            aria-label={isMaximized ? \"Restaurar painel\" : \"Maximizar painel\"}\n            title={isMaximized ? \"Restaurar\" : \"Maximizar\"}\n          >\n            {isMaximized ? (\n              <Minimize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            ) : (\n              <Maximize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            )}\n          </button>\n        )}\n\n        <button\n          onClick={closePainel}\n          className={`text-gray-700 hover:text-gray-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 ${\n            isMobileLandscape ? 'p-1.5' : 'p-2'\n          }`}\n          aria-label=\"Fechar painel\"\n        >\n          <X \n            size={isMobileLandscape ? 18 : 20} \n            aria-hidden=\"true\"\n            className=\"stroke-2\"\n          />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default PainelHeader;\n","import { useState, useEffect } from \"react\";\n\nconst usePainelVisibility = (painelInfo) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  console.log(\"usePainelVisibility - painelInfo:\", painelInfo);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileWidth = window.innerWidth <= 768;\n      const isMobileLandscape = window.innerWidth > window.innerHeight && window.innerWidth <= 1024;\n      setIsMobile(isMobileWidth || isMobileLandscape);\n    };\n    \n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    window.addEventListener(\"orientationchange\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n      window.removeEventListener(\"orientationchange\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.group(\"usePainelVisibility - Effect\");\n    console.log(\"painelInfo recebido:\", painelInfo);\n    \n    if (painelInfo && typeof painelInfo === 'object') {\n      console.log(\"painelInfo válido, definindo visibilidade como true\");\n      setIsVisible(true);\n      document.body.style.overflow = \"hidden\";\n    } else {\n      console.log(\"painelInfo inválido ou undefined, definindo visibilidade como false\");\n      setIsVisible(false);\n      document.body.style.overflow = \"\";\n    }\n\n    console.log(\"Estado atual:\", { isVisible, isMobile });\n    console.groupEnd();\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [painelInfo]);\n\n  console.log(\"usePainelVisibility - returning state:\", { isVisible, isMobile });\n\n  return { isVisible, isMobile };\n};\n\nexport default usePainelVisibility;","import React from 'react';\nimport PainelHeader from '../../PainelHeader';\nimport usePainelVisibility from '../../hooks/usePainelVisibility';\nimport { usePainelDimensions } from '../../hooks/usePainelDimensions';\n\nconst PainelContainer = ({ \n  painelInfo, \n  closePainel, \n  children,\n  isMaximized,\n  onToggleMaximize\n}) => {\n  const { isVisible, isMobile } = usePainelVisibility(painelInfo);\n  const painelDimensions = usePainelDimensions(isMobile, isMaximized);\n\n  if (!painelInfo) return null;\n\n  // Determinar altura da navbar baseada no tamanho da tela\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n\n  const baseClasses = `\n    fixed\n    ${isMobile \n      ? `inset-x-0 top-0 w-full h-full` \n      : 'top-30 bottom-0 right-0 w-full sm:w-3/4 lg:w-[49%] h-auto'\n    }\n    rounded-t-xl shadow-xl z-[9999] transform transition-all duration-500 ease-in-out\n    bg-white border-t-4 border-white\n  `;\n  \n  const visibilityClasses = isVisible \n    ? isMobile \n      ? \"translate-y-0 opacity-100\" \n      : \"translate-y-0 opacity-100\"\n    : isMobile \n      ? \"translate-y-full opacity-0\" \n      : \"translate-y-full opacity-0\";\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-labelledby=\"painel-titulo\"\n      aria-describedby=\"painel-descricao\"\n      aria-modal=\"true\"\n      className={`${baseClasses} ${visibilityClasses}${isMobile ? ' painel-informacoes-mobile' : ''}`}\n      style={{\n        height: painelDimensions.height,\n        maxHeight: painelDimensions.maxHeight,\n        width: isMobile ? '100%' : painelDimensions.width,\n        top: isMobile ? `${navbarHeight}px` : 72,\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...(isMobile && {\n          borderRadius: painelDimensions.isMobileLandscape ? '0' : '1rem 1rem 0 0',\n          boxShadow: painelDimensions.isMobileLandscape \n            ? '0 0 0 0' \n            : '0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06)'\n        })\n      }}\n    >\n      <PainelHeader \n        titulo={painelInfo.titulo} \n        closePainel={closePainel}\n        toggleMaximize={onToggleMaximize}\n        isMaximized={isMaximized}\n      />\n      \n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-green-600/40 scrollbar-track-green-50/20\">\n        <div className={`${isMobile ? 'p-3 sm:p-4' : 'p-6'} space-y-6 sm:space-y-8`}>\n          <div className=\"prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PainelContainer); ","import { useState, useEffect, useMemo } from 'react';\n\nexport const usePainelDimensions = (isMobile, isMaximized) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  \n  // Breakpoints para responsividade\n  const breakpoints = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    '2xl': 1536\n  };\n\n  // Detectar mudanças no tamanho da janela\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular dimensões base\n  const dimensions = useMemo(() => {\n    // Determinar altura da navbar baseada na orientação\n    const isMobileLandscape = isMobile && windowWidth > windowHeight;\n    const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n    const baseHeight = `calc(100vh - ${navbarHeight}px)`;\n    const baseMaxHeight = isMobile ? \"96vh\" : \"92vh\";\n\n    // Determinar se está em modo desktop\n    const isDesktop = windowWidth >= breakpoints.md;\n    \n    // Determinar se deve usar grid\n    const shouldUseGrid = isDesktop && isMaximized;\n\n    // Calcular largura do painel\n    let panelWidth;\n    if (isMobile) {\n      if (isMobileLandscape) {\n        // Mobile na horizontal: preencher toda a tela\n        panelWidth = '100%';\n      } else {\n        // Mobile na vertical: preencher toda a largura\n        panelWidth = '100%';\n      }\n    } else {\n      // Desktop\n      panelWidth = isMaximized \n      ? '100%' \n      : windowWidth >= breakpoints.lg \n        ? '49%' \n        : '75%';\n    }\n\n    return {\n      height: baseHeight,\n      maxHeight: baseMaxHeight,\n      width: panelWidth,\n      isDesktop,\n      isMobileLandscape,\n      shouldUseGrid,\n      breakpoints,\n      zIndex: 1000\n    };\n  }, [isMobile, isMaximized, windowWidth, windowHeight]);\n\n  return dimensions;\n};","import React, { useRef, useState, useEffect } from 'react';\n\n/**\n * DocumentViewer\n * Componente para exibir uma lista de documentos (PDFs) associados a uma escola.\n * Permite visualização via iframe (Google Drive/Docs) ou download externo, com tratamento de erros e fallback amigável.\n * Props:\n *   - documentos: Array de objetos { id, titulo, autoria, tipo, link_pdf }\n *   - title: string (opcional)\n */\n\n// Utility function to transform Google Drive links\nconst transformarLinkGoogleDrive = (link) => {\n  if (!link || typeof link !== 'string') return null;\n  \n  const match = link.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\n  if (!match) return null;\n  \n  const fileId = match[1];\n  return `https://docs.google.com/gview?url=https://drive.google.com/uc?id=${fileId}&embedded=true`;\n};\n\n/**\n * Componente de troca de visualização (lista/grade) acessível e reutilizável\n */\nconst ViewModeToggle = ({ viewMode, setViewMode }) => (\n  <div className=\"flex items-center gap-2\" role=\"tablist\" aria-label=\"Modos de visualização dos documentos\">\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'list'}\n      aria-label=\"Visualizar em lista\"\n      aria-pressed={viewMode === 'list'}\n      onClick={() => setViewMode('list')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'list'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de lista */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Lista</span>\n    </button>\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'grid'}\n      aria-label=\"Visualizar em grade\"\n      aria-pressed={viewMode === 'grid'}\n      onClick={() => setViewMode('grid')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'grid'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de grade */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Grade</span>\n    </button>\n  </div>\n);\n\nconst DocumentViewer = ({ documentos, title = \"Documentos\" }) => {\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [viewMode, setViewMode] = useState('list'); // 'list' ou 'grid'\n  const iframeRef = useRef(null);\n  const [iframeError, setIframeError] = useState(false);\n  const [useGoogleDocsViewer, setUseGoogleDocsViewer] = useState(false);\n\n  // Reset states when selected document changes\n  useEffect(() => {\n    if (selectedDoc) {\n      setIframeError(false);\n      setUseGoogleDocsViewer(false);\n    }\n  }, [selectedDoc]);\n\n  // Set first document as selected if none is selected\n  useEffect(() => {\n    if (!selectedDoc && documentos?.length > 0) {\n      setSelectedDoc(documentos[0]);\n    }\n  }, [documentos, selectedDoc]);\n\n  // Handle iframe events\n  useEffect(() => {\n    const iframe = iframeRef.current;\n    if (!iframe || !selectedDoc) return;\n\n    const handleLoad = () => {\n      setIframeError(false);\n    };\n\n    const handleError = () => {\n      setIframeError(true);\n      setUseGoogleDocsViewer(true);\n    };\n\n    iframe.addEventListener('load', handleLoad);\n    iframe.addEventListener('error', handleError);\n\n    return () => {\n      iframe.removeEventListener('load', handleLoad);\n      iframe.removeEventListener('error', handleError);\n    };\n  }, [selectedDoc]);\n\n  // Early return after all hooks\n  if (!documentos || documentos.length === 0) {\n    return null;\n  }\n\n  const renderDocumentGrid = () => {\n    return (\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n        {documentos.map((doc) => (\n          <div\n            key={doc.id}\n            className={`\n              flex flex-col justify-between h-full max-w-xs mx-auto\n              rounded-2xl transition-all duration-200 cursor-pointer\n              shadow-sm hover:shadow-lg\n              ${selectedDoc?.id === doc.id\n                ? 'bg-green-100 scale-[1.03]'\n                : 'bg-white hover:bg-green-50'\n              }\n            `}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            tabIndex={0}\n            aria-label={`Selecionar documento: ${doc.titulo}`}\n          >\n            <div className=\"p-5 flex-1 flex flex-col justify-between\">\n              <h4 className=\"font-semibold text-green-800 mb-2 line-clamp-2 text-lg\">{doc.titulo}</h4>\n              {doc.autoria && (\n                <p className=\"text-sm text-gray-600 mb-2 line-clamp-1\">Por: {doc.autoria}</p>\n              )}\n              {doc.tipo && (\n                <span className=\"inline-block px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                  {doc.tipo}\n                </span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentList = () => {\n    return (\n      <div className=\"space-y-2\">\n        {documentos.map((doc) => (\n          <button\n            key={doc.id}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            className={`w-full text-left p-3 rounded-lg transition-colors duration-200 ${\n              selectedDoc?.id === doc.id\n                ? 'bg-green-100'\n                : 'hover:bg-green-50'\n            }`}\n          >\n            <h4 className=\"font-medium text-green-800\">{doc.titulo}</h4>\n            {doc.autoria && (\n              <p className=\"text-sm text-gray-600\">Por: {doc.autoria}</p>\n            )}\n            {doc.tipo && (\n              <span className=\"inline-block mt-1 px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                {doc.tipo}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentViewer = () => {\n    if (!selectedDoc) return null;\n\n    const isGoogleDriveLink = selectedDoc.link_pdf.includes('drive.google.com/file/d/');\n\n    return (\n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        {isGoogleDriveLink ? (\n          <>\n            {!useGoogleDocsViewer ? (\n              <iframe \n                ref={iframeRef}\n                src={selectedDoc.link_pdf.replace('/view?usp=sharing', '/preview')}\n                width=\"100%\" \n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={selectedDoc.titulo}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            ) : (\n              <iframe\n                ref={iframeRef}\n                src={transformarLinkGoogleDrive(selectedDoc.link_pdf)}\n                width=\"100%\"\n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={`${selectedDoc.titulo} (Google Docs Viewer)`}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            )}\n            {iframeError && (\n              <div className=\"p-6 text-center text-gray-600 bg-green-100\">\n                <p className=\"mb-3 text-lg\">Não foi possível carregar o documento diretamente.</p>\n                <a\n                  href={selectedDoc.link_pdf}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n                >\n                  <svg \n                    className=\"w-5 h-5 mr-2\" \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path \n                      strokeLinecap=\"round\" \n                      strokeLinejoin=\"round\" \n                      strokeWidth={2} \n                      d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n                    />\n                  </svg>\n                  Abrir em nova aba\n                </a>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"flex justify-center p-6\">\n            <a\n              href={selectedDoc.link_pdf}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center px-6 py-3 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n            >\n              <svg \n                className=\"w-5 h-5 mr-2\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" \n                />\n              </svg>\n              Ver documento PDF\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold text-green-800\">{title}:</h3>\n        {documentos.length > 1 && (\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        )}\n      </div>\n      \n      {documentos.length > 1 && (\n        <div className=\"mb-6\">\n          {viewMode === 'grid' ? renderDocumentGrid() : renderDocumentList()}\n        </div>\n      )}\n      \n      {renderDocumentViewer()}\n    </div>\n  );\n};\n\nexport default React.memo(DocumentViewer); ","import React, { useState, useEffect } from 'react';\nimport { getTituloByVideoUrl } from '../../../services/legendasService';\n\n/**\n * VideoPlayer\n * Componente para exibir vídeos do YouTube de forma responsiva e acessível.\n * Faz extração do ID do vídeo a partir de diferentes formatos de URL e exibe fallback amigável em caso de erro.\n * Props:\n *   - videoUrl: string (URL do vídeo)\n *   - title: string (opcional)\n *   - escolaId: number (ID da escola para buscar título personalizado)\n */\n\n// Utility function to extract YouTube video ID\nconst extrairIdYoutube = (url) => {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  // Remove query parameters to simplify\n  const baseUrl = url.split('?')[0];\n\n  // Patterns to extract video ID\n  const patterns = [\n    /youtube\\.com\\/embed\\/([^/?&]+)/,                 // embed/ID\n    /youtube\\.com\\/watch\\?v=([^&]+)/,                 // watch?v=ID\n    /youtu\\.be\\/([^?&]+)/,                            // youtu.be/ID\n    /youtube\\.com\\/v\\/([^?&]+)/                       // youtube.com/v/ID\n  ];\n\n  for (const pattern of patterns) {\n    const match = baseUrl.match(pattern);\n    if (match && match[1]) {\n      return match[1];\n    }\n  }\n\n  return null;\n};\n\nconst VideoPlayer = ({ videoUrl, title = \"Vídeo\", escolaId }) => {\n  const [tituloPersonalizado, setTituloPersonalizado] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Buscar título personalizado da nova tabela\n  useEffect(() => {\n    const buscarTitulo = async () => {\n      if (!videoUrl || !escolaId) return;\n\n      try {\n        setLoading(true);\n        const titulo = await getTituloByVideoUrl(videoUrl, escolaId);\n        setTituloPersonalizado(titulo);\n      } catch (error) {\n        console.warn('Erro ao buscar título personalizado:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarTitulo();\n  }, [videoUrl, escolaId]);\n\n  if (!videoUrl) return null;\n\n  const videoId = extrairIdYoutube(videoUrl);\n  \n  if (!videoId) {\n    return (\n      <div className=\"mt-8 max-w-4xl mx-auto\">\n        <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n          {tituloPersonalizado?.titulo || title}:\n        </h3>\n        <div className=\"p-6 text-center text-gray-600 bg-gray-50 rounded-lg\">\n          <p className=\"mb-3 text-lg\">Link do vídeo inválido ou não suportado.</p>\n          <a\n            href={videoUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n          >\n            <svg \n              className=\"w-5 h-5 mr-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" \n              />\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \n              />\n            </svg>\n            Tentar abrir no YouTube\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n        {tituloPersonalizado?.titulo || title}:\n      </h3>\n      \n      {/* Informações adicionais do título personalizado */}\n      {tituloPersonalizado && (\n        <div className=\"mb-4 p-4 bg-green-100 rounded-lg\">\n          {tituloPersonalizado.descricao && (\n            <p className=\"text-gray-700 mb-2\">{tituloPersonalizado.descricao}</p>\n          )}\n          \n          <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n            {tituloPersonalizado.categoria && (\n              <span className=\"capitalize bg-green-200 text-green-800 px-2 py-1 rounded\">\n                {tituloPersonalizado.categoria}\n              </span>\n            )}\n            {tituloPersonalizado.plataforma && (\n              <span className=\"capitalize\">\n                {tituloPersonalizado.plataforma}\n              </span>\n            )}\n            {tituloPersonalizado.duracao && (\n              <span>Duração: {tituloPersonalizado.duracao}</span>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        <div className=\"relative pb-[56.25%] h-0\">\n          <iframe\n            className=\"absolute top-0 left-0 w-full h-full\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            title={tituloPersonalizado?.titulo || title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            loading=\"lazy\"\n            referrerPolicy=\"origin\"\n          />\n        </div>\n      </div>\n      \n\n    </div>\n  );\n};\n\nexport default React.memo(VideoPlayer); ","import React, { useRef, useState, useEffect } from \"react\";\nimport { useShare } from \"../hooks/useShare\";\nimport { useDynamicURL } from \"../hooks/useDynamicURL\";\nimport { useClickOutside } from \"../hooks/useClickOutside\";\nimport useAudio from \"../hooks/useAudio\";\nimport useDocumentosEscola from \"../hooks/useDocumentosEscola\";\n\n// Import modular components\nimport EscolaInfo from \"./components/EscolaInfo\";\nimport TerraIndigenaInfo from \"./TerraIndigenaInfo\";\nimport ShareSection from \"./ShareSection\";\nimport IntroPanel from \"./IntroPanel\";\nimport PainelContainer from \"./components/PainelContainer\";\nimport DocumentViewer from \"./components/DocumentViewer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst PainelInformacoes = ({ painelInfo, closePainel, escola_id, refreshKey = 0 }) => {\n  const painelRef = useRef(null);\n  const [isMaximized, setIsMaximized] = useState(false);\n  \n  const { gerarLinkCustomizado, copiarLink, compartilhar } = useShare(painelInfo);\n  const { documentos } = useDocumentosEscola(painelInfo?.id);\n  \n  const toggleMaximize = () => setIsMaximized(prev => !prev);\n  \n  useDynamicURL(painelInfo, gerarLinkCustomizado);\n  useClickOutside(painelRef, closePainel);\n\n  // Forçar re-renderização quando refreshKey mudar\n  useEffect(() => {\n    console.log('PainelInformacoes: refreshKey mudou para', refreshKey);\n  }, [refreshKey]);\n\n  if (!painelInfo) {\n    return null;\n  }\n\n  // Determine panel type\n  const isTerraIndigena = painelInfo.tipo === 'terra_indigena';\n  const isIntro = painelInfo.titulo === 'Sobre o site';\n\n  const renderContent = () => {\n    if (isIntro) {\n      return <IntroPanel painelInfo={painelInfo} />;\n    }\n    \n    if (isTerraIndigena) {\n      return <TerraIndigenaInfo terraIndigena={painelInfo} />;\n    }\n\n    return (\n      <>\n        <EscolaInfo \n          escola={painelInfo} \n          shouldUseGrid={true}\n          refreshKey={refreshKey}\n        />\n        {documentos && documentos.length > 0 && (\n          <DocumentViewer \n            documentos={documentos}\n            title=\"Produções e materiais da escola\"\n          />\n        )}\n        {painelInfo.link_para_videos && (\n          <VideoPlayer \n            videoUrl={painelInfo.link_para_videos}\n            title=\"Vídeo da escola\"\n            escolaId={painelInfo.id}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div ref={painelRef}>\n      <PainelContainer\n        painelInfo={painelInfo}\n        closePainel={closePainel}\n        isMaximized={isMaximized}\n        onToggleMaximize={toggleMaximize}\n      >\n        {renderContent()}\n        <ShareSection \n          copiarLink={copiarLink} \n          compartilhar={compartilhar} \n          painelInfo={painelInfo}\n        />\n      </PainelContainer>\n    </div>\n  );\n};\n\nexport default React.memo(PainelInformacoes); ","import { criarSlug } from '../../utils/slug';\n\nexport const useShare = (painelInfo) => {\n  const gerarLinkCustomizado = () => {\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  const copiarLink = async () => {\n    const url = gerarLinkCustomizado();\n    try {\n      await navigator.clipboard.writeText(url);\n      alert(\"Link copiado!\");\n    } catch (err) {\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      alert(\"Link copiado!\");\n    }\n  };\n\n  const compartilhar = () => {\n    const url = gerarLinkCustomizado();\n    const texto = `Confira este painel: ${painelInfo.titulo}`;\n    \n    if (navigator.share) {\n      navigator.share({\n        title: painelInfo.titulo,\n        text: texto,\n        url: url,\n      });\n    } else {\n      window.open(\n        `https://twitter.com/intent/tweet?text=${encodeURIComponent(texto)}&url=${encodeURIComponent(url)}`,\n        \"_blank\"\n      );\n    }\n  };\n\n  return { gerarLinkCustomizado, copiarLink, compartilhar };\n};","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Só fecha se o clique for no mapa (openlayers-container)\n      const el = event.target;\n      if (el.classList && el.classList.contains('openlayers-container')) {\n        return;\n      }\n      \n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};","import { useEffect, useRef } from \"react\";\n\nexport const useDynamicURL = (painelInfo, gerarLinkCustomizado) => {\n  const lastUrlRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!painelInfo) return;\n\n    // Limpa o timeout anterior se existir\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Cria um novo timeout para debounce\n    timeoutRef.current = setTimeout(() => {\n      const newUrl = gerarLinkCustomizado();\n      \n      // Só atualiza se a URL realmente mudou\n      if (newUrl !== lastUrlRef.current) {\n        try {\n          window.history.replaceState({}, \"\", newUrl);\n          lastUrlRef.current = newUrl;\n        } catch (error) {\n          console.warn('Erro ao atualizar URL:', error);\n        }\n      }\n    }, 300); // 300ms de debounce\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [painelInfo, gerarLinkCustomizado]);\n};","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].Latitude,\n      longitude: dataPoints[0].Longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  const [initialPanelOpened, setInitialPanelOpened] = useState(!!initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Abrir painel automaticamente quando initialPanel for encontrado (apenas uma vez)\n  useEffect(() => {\n    if (initialPanel && !painelInfo && !initialPanelOpened) {\n      console.log('MapaEscolasIndigenas: Abrindo painel automaticamente para:', initialPanel.titulo);\n      setPainelInfo(initialPanel);\n      setInitialPanelOpened(true);\n    }\n  }, [initialPanel, painelInfo, initialPanelOpened]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        painelAberto={!!painelInfo}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","import { supabase } from '../supabaseClient';\n\n// Configurações para imagens das histórias do professor\nconst HISTORIA_PROFESSOR_CONFIG = {\n  BUCKET_NAME: 'historia-professor-imagens',\n  MAX_FILE_SIZE: 5 * 1024 * 1024, // 5MB\n  ALLOWED_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'],\n  MAX_IMAGES_PER_HISTORIA: 1,\n  MIN_DIMENSIONS: { width: 200, height: 200 }\n};\n\n/**\n * Valida um arquivo de imagem\n * @param {File} file - Arquivo a ser validado\n * @returns {Object} Resultado da validação\n */\nconst validateImageFile = (file) => {\n  // Verificar tipo MIME\n  if (!HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.includes(file.type)) {\n    return {\n      isValid: false,\n      error: `Tipo de arquivo não suportado. Use apenas: ${HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1].toUpperCase()).join(', ')}`\n    };\n  }\n\n  // Verificar tamanho\n  if (file.size > HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE) {\n    return {\n      isValid: false,\n      error: `Arquivo muito grande. Tamanho máximo: ${HISTORIA_PROFESSOR_CONFIG.MAX_FILE_SIZE / (1024 * 1024)}MB`\n    };\n  }\n\n  // Verificar extensão\n  const extension = file.name.split('.').pop().toLowerCase();\n  const allowedExtensions = HISTORIA_PROFESSOR_CONFIG.ALLOWED_TYPES.map(t => t.split('/')[1]);\n  if (!allowedExtensions.includes(extension)) {\n    return {\n      isValid: false,\n      error: `Extensão não permitida. Use apenas: ${allowedExtensions.join(', ')}`\n    };\n  }\n\n  return { isValid: true };\n};\n\n/**\n * Valida dimensões da imagem (opcional)\n * @param {File} file - Arquivo de imagem\n * @returns {Promise<boolean>} Se as dimensões são válidas\n */\nconst validateImageDimensions = (file) => {\n  return new Promise((resolve) => {\n    const img = new Image();\n    img.onload = () => {\n      const isValid = img.width >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.width &&\n                     img.height >= HISTORIA_PROFESSOR_CONFIG.MIN_DIMENSIONS.height;\n      resolve(isValid);\n    };\n    img.onerror = () => resolve(false);\n    img.src = URL.createObjectURL(file);\n  });\n};\n\n/**\n * Gera nome único para o arquivo\n * @param {File} file - Arquivo\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @returns {string} Nome único do arquivo\n */\nconst generateUniqueFileName = (file, escolaId, historiaId) => {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substring(2, 8);\n  const extension = file.name.split('.').pop().toLowerCase();\n  return `historia_${historiaId}_${timestamp}_${random}.${extension}`;\n};\n\n/**\n * Buscar todas as histórias do professor de uma escola\n * @param {number} escolaId - ID da escola\n * @returns {Promise<Array>} Lista de histórias\n */\nexport const getHistoriasProfessor = async (escolaId) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .select('*')\n      .eq('escola_id', escolaId)\n      .eq('ativo', true)\n      .order('ordem', { ascending: true })\n      .order('created_at', { ascending: true });\n\n    if (error) {\n      throw error;\n    }\n\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Adicionar URLs públicas das imagens\n    const historiasComImagens = data.map((historia) => {\n      if (historia.imagem_url) {\n        try {\n          const { data: { publicUrl } } = supabase.storage\n            .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n            .getPublicUrl(historia.imagem_url);\n\n          return { ...historia, imagem_public_url: publicUrl };\n        } catch (err) {\n          return { ...historia, imagem_public_url: null, urlError: err.message };\n        }\n      }\n      return historia;\n    });\n\n    return historiasComImagens;\n\n  } catch (error) {\n    console.error('Erro ao buscar histórias do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Criar nova história do professor\n * @param {Object} historiaData - Dados da história\n * @returns {Promise<Object>} História criada\n */\nexport const createHistoriaProfessor = async (historiaData) => {\n  try {\n    const { data, error } = await supabase\n      .from('historias_professor')\n      .insert([{\n        escola_id: historiaData.escola_id,\n        nome_professor: historiaData.nome_professor || null,\n        historia: historiaData.historia,\n        ordem: historiaData.ordem || 1,\n        ativo: historiaData.ativo !== false,\n        foto_rosto: historiaData.foto_rosto || null\n      }])\n      .select()\n      .single();\n\n    if (error) {\n      throw error;\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao criar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Atualizar história do professor\n * @param {number} historiaId - ID da história\n * @param {Object} historiaData - Dados atualizados\n * @returns {Promise<Object>} História atualizada\n */\nexport const updateHistoriaProfessor = async (historiaId, historiaData) => {\n  try {\n    console.log('=== updateHistoriaProfessor SERVICE ===');\n    console.log('ID da história:', historiaId);\n    console.log('Dados recebidos no serviço:', historiaData);\n    console.log('foto_rosto no serviço:', historiaData.foto_rosto);\n    console.log('Tipo da foto_rosto:', typeof historiaData.foto_rosto);\n    \n    const updateData = {\n      nome_professor: historiaData.nome_professor,\n      historia: historiaData.historia,\n      ordem: historiaData.ordem,\n      ativo: historiaData.ativo,\n      foto_rosto: historiaData.foto_rosto || null,\n      updated_at: new Date().toISOString()\n    };\n    \n    console.log('Dados que serão atualizados:', updateData);\n    \n    const { data, error } = await supabase\n      .from('historias_professor')\n      .update(updateData)\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (error) {\n      console.error('Erro do Supabase na atualização:', error);\n      throw error;\n    }\n\n    console.log('História atualizada com sucesso no Supabase:', data);\n    return data;\n\n  } catch (error) {\n    console.error('Erro ao atualizar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessor = async (historiaId) => {\n  try {\n    // Deletar a história\n    const { error: deleteError } = await supabase\n      .from('historias_professor')\n      .delete()\n      .eq('id', historiaId);\n\n    if (deleteError) {\n      throw deleteError;\n    }\n  } catch (error) {\n    console.error('Erro ao deletar história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Upload de imagem para uma história do professor\n * @param {File} file - Arquivo de imagem\n * @param {number} escolaId - ID da escola\n * @param {number} historiaId - ID da história\n * @param {string} descricao - Descrição da imagem\n * @returns {Promise<Object>} Dados da imagem salva\n */\nexport const uploadHistoriaProfessorImage = async (file, escolaId, historiaId, descricao = '') => {\n  try {\n    // Validar arquivo\n    const validation = validateImageFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.error);\n    }\n\n    // Validar dimensões (opcional)\n    const hasValidDimensions = await validateImageDimensions(file);\n    if (!hasValidDimensions) {\n      console.warn('Imagem com dimensões menores que o recomendado');\n    }\n\n    // Gerar nome único\n    const fileName = generateUniqueFileName(file, escolaId, historiaId);\n    const filePath = `${escolaId}/${fileName}`;\n\n    // Upload ao bucket\n    const { error: uploadError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .upload(filePath, file, {\n        cacheControl: '3600',\n        upsert: false\n      });\n\n    if (uploadError) {\n      throw new Error(`Erro no upload: ${uploadError.message}`);\n    }\n\n    // Obter URL pública\n    const { data: { publicUrl } } = supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .getPublicUrl(filePath);\n\n    // Atualizar a história com a URL da imagem\n    const { data: historia, error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: descricao.trim() || null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId)\n      .select()\n      .single();\n\n    if (updateError) {\n      // Se falhar ao atualizar, deletar o arquivo\n      await supabase.storage\n        .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n        .remove([filePath]);\n      throw new Error(`Erro ao salvar metadados: ${updateError.message}`);\n    }\n\n    return {\n      id: historia.id,\n      descricao_imagem: historia.descricao_imagem\n    };\n\n  } catch (error) {\n    console.error('Erro no upload da imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Deletar imagem de uma história do professor\n * @param {number} historiaId - ID da história\n * @returns {Promise<void>}\n */\nexport const deleteHistoriaProfessorImage = async (historiaId) => {\n  try {\n    // Buscar a história para obter a URL da imagem\n    const { data: historia, error: fetchError } = await supabase\n      .from('historias_professor')\n      .select('imagem_url')\n      .eq('id', historiaId)\n      .single();\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!historia.imagem_url) {\n      return; // Não há imagem para deletar\n    }\n\n    // Atualizar a história removendo a referência da imagem\n    const { error: updateError } = await supabase\n      .from('historias_professor')\n      .update({\n        descricao_imagem: null,\n        updated_at: new Date().toISOString()\n      })\n      .eq('id', historiaId);\n\n    if (updateError) {\n      throw updateError;\n    }\n\n    // Deletar arquivo do storage\n    const { error: storageError } = await supabase.storage\n      .from(HISTORIA_PROFESSOR_CONFIG.BUCKET_NAME)\n      .remove([historia.imagem_url]);\n\n    if (storageError) {\n      console.warn('Erro ao deletar imagem do storage:', storageError);\n    }\n\n  } catch (error) {\n    console.error('Erro ao deletar imagem da história do professor:', error);\n    throw error;\n  }\n};\n\n/**\n * Migrar dados existentes da tabela escolas_completa\n * @returns {Promise<Object>} Resultado da migração\n */\nexport const migrarDadosExistentes = async () => {\n  try {\n    // Buscar escolas com história do professor\n    const { data: escolas, error: fetchError } = await supabase\n      .from('escolas_completa')\n      .select('id, historia_do_prof')\n      .not('historia_do_prof', 'is', null)\n      .neq('historia_do_prof', '');\n\n    if (fetchError) {\n      throw fetchError;\n    }\n\n    if (!escolas || escolas.length === 0) {\n      return { migradas: 0, mensagem: 'Nenhuma história para migrar' };\n    }\n\n    // Inserir histórias na nova tabela\n    const historiasParaInserir = escolas.map(escola => ({\n      escola_id: escola.id,\n      historia: escola.historia_do_prof,\n      ordem: 1,\n      ativo: true,\n      created_at: new Date().toISOString()\n    }));\n\n    const { data: historiasInseridas, error: insertError } = await supabase\n      .from('historias_professor')\n      .insert(historiasParaInserir)\n      .select();\n\n    if (insertError) {\n      throw insertError;\n    }\n\n    return {\n      migradas: historiasInseridas.length,\n      mensagem: `${historiasInseridas.length} histórias migradas com sucesso`\n    };\n\n  } catch (error) {\n    console.error('Erro na migração de dados:', error);\n    throw error;\n  }\n};\n\n/**\n * Verificar se uma escola tem histórias do professor\n * @param {number} escolaId - ID da escola\n * @returns {Promise<boolean>} Se tem histórias\n */\nexport const escolaTemHistoriasProfessor = async (escolaId) => {\n  try {\n    const { count, error } = await supabase\n      .from('historias_professor')\n      .select('*', { count: 'exact', head: true })\n      .eq('escola_id', escolaId)\n      .eq('ativo', true);\n\n    if (error) {\n      throw error;\n    }\n\n    return (count || 0) > 0;\n\n  } catch (error) {\n    console.error('Erro ao verificar histórias do professor:', error);\n    return false;\n  }\n}; "],"names":["testLegendasTable","async","data","error","supabase","from","select","limit","console","warn","message","log","getLegendaByImageUrl","imageUrl","escolaId","categoria","arguments","length","undefined","eq","single","code","addLegendaFoto","insert","legendaData","updateLegendaFoto","legendaId","updateData","update","getTituloByVideoUrl","videoUrl","MARKER_SVG_PATH","concat","process","createMarkerStyle","feature","showNames","markerData","get","isNearbyPair","markerStyle","Style","image","Icon","src","scale","anchor","anchorXUnits","anchorYUnits","geometry","getGeometry","titulo","text","Text","font","fill","Fill","color","stroke","Stroke","width","offsetY","textAlign","isMobile","isMobileWidth","window","innerWidth","hasTouch","navigator","maxTouchPoints","isMobileUserAgent","test","userAgent","isMobileOrientation","orientation","mobileCriteria","filter","Boolean","OpenLayersInteractions","constructor","map","options","this","_objectSpread","enableHover","enableClick","enableDoubleClick","enableTouch","hoverDelay","clickDelay","eventHandlers","Map","hoveredFeature","clickedFeature","clickTimeout","hoverTimeout","tooltipElement","initializeInteractions","mobile","windowWidth","setupHoverInteraction","setupClickInteraction","setupDoubleClickInteraction","setupTouchInteraction","on","event","handlePointerMove","handlePointerLeave","handleClick","handleDoubleClick","forEachFeatureAtPixel","pixel","type","schoolData","terraIndigenaInfo","clearHover","applyHover","handleMobileClick","clearTimeout","setTimeout","executeClickHandler","executeDoubleClickHandler","handleTouchEnd","forceHideTooltip","showTooltip","executeHoverHandler","applyHoverStyle","clearHoverStyle","hideTooltip","executeHoverOutHandler","hoverStyleFunction","tooltipContent","getTooltipContent","createTooltipElement","getTargetElement","appendChild","remove","content","element","document","createElement","className","isTerraIndigena","includes","clickableContent","innerHTML","tooltipStyles","backgroundColor","borderColor","Object","assign","style","position","padding","borderRadius","fontSize","fontFamily","fontWeight","pointerEvents","zIndex","maxWidth","whiteSpace","overflow","textOverflow","boxShadow","border","cursor","clickableSpan","querySelector","textDecoration","textDecorationColor","textDecorationThickness","transition","display","addEventListener","transform","coordinate","getPixelFromCoordinate","left","top","tooltipContentFunction","handler","eventType","set","off","delete","clearHandlers","clear","updateOptions","newOptions","destroy","createDefaultInteractions","MAP_CONFIG","center","zoom","maxZoom","minZoom","clusterDistance","clusterMinDistance","clusterAnimationDuration","proximityThreshold","disableClusteringAtZoom","tooltipOffset","tooltipDelay","interaction","performance","enableLazyLoading","maxFeaturesPerTile","enableFeatureCulling","enableTileCaching","ANIMATION_CONFIG","duration","marker","cluster","pan","easing","MARKER_COLORS","small","medium","large","xlarge","CLUSTER_SIZES","min","max","size","PROJECTION_CONFIG","BASE_LAYER_CONFIG","url","attributions","wrapX","tilePixelRatio","tileSize","_ref","dataPoints","onPainelOpen","showMarcadores","showNomesEscolas","vectorSourceRef","useRef","vectorLayerRef","hoveredMarker","setHoveredMarker","React","selectedMarker","setSelectedMarker","initializeMarkers","useMemo","useCallback","current","VectorSource","VectorLayer","source","addLayer","setupInteractions","interactions","onMarkerClick","onMarkerHover","createMarkerInteractions","handleMarkerClick","handleMarkerHover","handleMarkerHoverOut","setStyle","f","baseStyle","hoverStyle","Array","isArray","changed","updateMarkers","pontosValidos","point","latitude","longitude","lat","parseFloat","lng","isNaN","forEach","index","Feature","Point","fromLonLat","municipio","Municipio","uf","UF","addFeature","updateMarkerStyles","useEffect","removeLayer","_jsx","LAYER_COLORS","terrasIndigenas","regularizada","hover","declarada","estadoSP","createTerrasIndigenasStyle","isHovered","properties","colorConfig","fase_ti","colors","lineDash","showTerrasIndigenas","interactionsRef","setHoveredFeature","selectedFeature","setSelectedFeature","features","setFeatures","isMobileDevice","initializeLayer","geoJSONFeatures","GeoJSON","dataProjection","featureProjection","readFeatures","getProperties","terrai_nom","tipo","etnia","etnia_nome","municipio_","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","onFeatureClick","onFeatureHover","createGeoJSONInteractions","handleFeatureClick","handleFeatureHover","handleFeatureHoverOut","extent","getExtent","getView","fit","applySelectionStyleToFeature","selectionOptions","fillColor","strokeColor","strokeWidth","selectionStyle","applySelectionStyle","removeSelectionStyleFromFeature","timeout","showEstadoSP","createEstadoSPStyle","interactive","terrasIndigenasData","estadoSPData","terrasIndigenasRef","estadoSPRef","layersStatus","setLayersStatus","visible","loaded","hasValidData","updateLayerStatus","layerName","updates","prev","handleLayerError","handleLayerSuccess","getLayersStats","stats","total","errors","values","layer","getLayersInfo","hasData","featureCount","info","_jsxs","children","OpenLayersTerrasIndigenas","ref","onLoad","onError","OpenLayersEstadoSP","props","id","proj4","defs","register","mapContainer","baseLayer","mapInfo","setMapInfo","useState","initialCenter","initialZoom","createBaseLayers","satelliteLayer","TileLayer","XYZ","preload","useInterimTilesOnError","initializeMap","target","layers","view","View","enableRotation","controls","defaultControls","toLonLat","getCenter","newView","toFixed","getZoom","updateMapConfig","newCenter","newZoom","currentCenter","currentZoom","setCenter","setZoom","setTarget","MapWrapper","_Fragment","OpenLayersMarkers","OpenLayersLayers","cache","useGeoJSONCache","key","setData","loading","setLoading","setError","_geoJSON$features","_geoJSON$features2","response","fetch","ok","Error","status","geoJSON","json","crs","firstFeature","keys","coordinates","err","fetchGeoJSON","painelAberto","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","removeEventListener","handleMinimize","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","shouldReactivate","CabecalhoMenu","_ref2","onMinimize","viewBox","strokeLinecap","strokeLinejoin","d","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","subItems","item","cx","cy","r","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","criarSlug","texto","toLowerCase","normalize","replace","trim","documentos","setDocumentos","isLoading","setIsLoading","authData","authError","auth","getSession","temSessao","session","rlsData","rlsError","podeAcessar","details","hint","allDocs","allDocsError","doc","escola_id","tipo_escola_id","valor_escola_id","toString","order","ascending","dataAsNumber","errorAsNumber","Number","dataAsString","errorAsString","String","count","fetchDocumentos","InfoGrid","memo","columns","gap","InfoTable","row","value","InfoStats","_ref4","stat","icon","_ref5","title","description","defaultCollapsed","layout","layoutProps","isCollapsed","setIsCollapsed","role","renderContent","capitalize","str","charAt","toUpperCase","slice","CompactCard","Check","X","InfoBlock","AddressDetails","escola","logradouro","numero","bairro","cep","endereco","field","MapPin","estado","join","MapButton","Latitude","Longitude","openMap","open","Navigation","SocialLinks","_ref6","links","expanded","onToggle","socialLinks","split","social","Globe","ChevronRight","link","href","rel","LinkIcon","ExternalLink","_ref7","setExpanded","toggle","basicInfoCards","Building","Calendar","ano_criacao","usa_redes_sociais","povos_indigenas","InfoSection","diretoria_ensino","links_redes_sociais","ImagensdasEscolas","refreshKey","imagens","setImagens","imagemZoom","setImagemZoom","cacheRef","cacheVersion","setCacheVersion","limparCacheERecarregar","fecharZoom","body","handleEsc","e","cacheKey","files","storage","list","imagensEncontradas","Promise","all","file","_legenda","_legenda2","_legenda3","_legenda4","_legenda5","filePath","name","publicUrl","getPublicUrl","legenda","publicURL","descricao","descricaoDetalhada","descricao_detalhada","autor","autor_foto","dataFoto","data_foto","urlError","buscarImagens","RefreshCw","img","alt","maxHeight","Date","toLocaleDateString","stopPropagation","historia_da_escola","htmlContent","marginTop","dangerouslySetInnerHTML","__html","ExpandableList","items","maxVisible","idx","minWidth","MiniCard","turnosValue","turnos_funcionamento","modalidadeList","modalidade_ensino","Sparkles","gridItems","Clock","Users","numero_alunos","MessageCircle","linguas_faladas","materiaisItems","BookOpen","BooleanValue","material_nao_indigena","material_indigena","Droplet","acesso_agua","Trash2","coleta_lixo","Wifi","acesso_internet","Monitor","equipamentos","modo_acesso","Utensils","cozinha","Apple","merenda_escolar","ChefHat","diferenciada","Home","espaco_escolar","renderBooleanStatus","valor","normalizado","formacao","resto","formatarFormacaoProfessores","formacao_professores","continuada","formatarFormacaoContinuada","formacao_continuada","UsersRound","UserCheck","professores_indigenas","UserMinus","professores_nao_indigenas","professores_falam_lingua","Star","User","gestao","outros_funcionarios","NotebookPen","ProjectCard","isNegative","availableProjects","GraduationCap","Heart","Target","project","ImagemHistoriadoProfessor","currentImageIndex","setCurrentImageIndex","zoomLevel","setZoomLevel","rotation","setRotation","imageOrientations","setImageOrientations","detectImageOrientation","resolve","Image","onload","isVertical","height","onerror","handleKeyDown","preventDefault","prevImage","nextImage","Math","then","imagensComUrl","genero","startsWith","caminhoRelativo","nome","created_at","orientations","catch","openImage","nextIndex","prevIndex","resetImage","ZoomIn","ZoomOut","RotateCw","ChevronLeft","customSize","shape","variant","clickable","textColor","badge","badgePosition","badgeColor","badgeSize","fallbackIcon","showInitials","maxInitials","lazy","priority","_objectWithoutProperties","_excluded","imageError","setImageError","imageLoading","setImageLoading","sizeConfig","container","sizes","xs","xxlarge","shapeConfig","shapes","circle","square","rounded","none","variantConfig","variants","default","shadow","minimal","flat","elevated","badgeConfig","positions","badgeSizes","initials","word","char","match","FallbackIcon","icons","user","alert","AlertCircle","Loader2","shouldShowImage","shouldShowInitials","shouldShowIcon","baseClasses","tabIndex","handleImageLoad","handleImageError","fetchPriority","avatarThemes","hoverBorderColor","professor","neutral","indigena","success","warning","fotoUrl","nomeProfessor","tamanho","showFallback","theme","mappedSize","themeConfig","Avatar","historias","setHistorias","currentHistoriaIndex","setCurrentHistoriaIndex","getHistoriasProfessor","carregarHistorias","nextHistoria","prevHistoria","currentHistoria","hasMultipleHistorias","margin","outline","nome_professor","FotoProfessor","foto_rosto","historia","imagem_public_url","descricao_imagem","_","GridLayoutWrapper","shouldUseGrid","containerClasses","gridSections","Component","BasicInfo","Modalidades","Infraestrutura","GestaoProfessores","ProjetosParcerias","HistoriaEscola","HistoriadoProfessor","xmlns","isTextArea","LargeHandFistIcon","HandFistIcon","terraIndigena","InfoItem","Tooltip","isVisible","setIsVisible","onMouseEnter","onMouseLeave","onFocus","onBlur","bottom","ShareButton","copied","setCopied","showShareOptions","setShowShareOptions","shareTextOptions","shareText","floor","random","shareUrl","location","shareButtons","component","WhatsappShareButton","Facebook","FacebookShareButton","quote","Twitter","TwitterShareButton","Linkedin","LinkedinShareButton","summary","clipboard","writeText","input","execCommand","removeChild","Link","button","ShareComponent","share","Share2","copiarLink","compartilhar","painelInfo","gerarLinkCustomizado","origin","pathname","gerarDescricao","gerarTitulo","PainelDescricao","sanitizedHTML","DOMPurify","sanitize","formattedText","endsWith","formatText","ALLOWED_TAGS","ALLOWED_ATTR","ADD_TAGS","ADD_ATTR","KEEP_CONTENT","ALLOW_DATA_ATTR","lineHeight","letterSpacing","audioUrl","SIGLAS_MAIUSCULAS","capitalizeWords","substr","closePainel","toggleMaximize","isMaximized","isMobileLandscape","innerHeight","isVerySmallLandscape","Minimize2","Maximize2","group","groupEnd","PainelContainer","onToggleMaximize","usePainelVisibility","painelDimensions","usePainelDimensions","setWindowWidth","windowHeight","setWindowHeight","breakpoints","sm","md","lg","xl","handleResize","dimensions","baseHeight","isDesktop","panelWidth","navbarHeight","visibilityClasses","flexDirection","PainelHeader","transformarLinkGoogleDrive","fileId","ViewModeToggle","viewMode","setViewMode","DocumentViewer","selectedDoc","setSelectedDoc","iframeRef","iframeError","setIframeError","useGoogleDocsViewer","setUseGoogleDocsViewer","iframe","handleLoad","handleError","autoria","renderDocumentViewer","isGoogleDriveLink","link_pdf","allow","sandbox","VideoPlayer","tituloPersonalizado","setTituloPersonalizado","buscarTitulo","videoId","baseUrl","patterns","pattern","extrairIdYoutube","plataforma","duracao","frameBorder","allowFullScreen","referrerPolicy","PainelInformacoes","painelRef","setIsMaximized","encodeURIComponent","useShare","useDocumentosEscola","useClickOutside","useDynamicURL","lastUrlRef","timeoutRef","newUrl","history","replaceState","listener","el","classList","contains","isIntro","IntroPanel","TerraIndigenaInfo","EscolaInfo","link_para_videos","ShareSection","quantidade","exemplo","useRefresh","panel","URLSearchParams","search","initialPanel","find","setPainelInfo","initialPanelOpened","setInitialPanelOpened","escolasVisiveis","pontuacao","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","abrirPainel","refreshPainel","fecharPainel","MapSelector","HISTORIA_PROFESSOR_CONFIG","BUCKET_NAME","MAX_FILE_SIZE","ALLOWED_TYPES","MAX_IMAGES_PER_HISTORIA","MIN_DIMENSIONS","imagem_url","createHistoriaProfessor","historiaData","ordem","ativo","updateHistoriaProfessor","historiaId","updated_at","toISOString","deleteHistoriaProfessor","deleteError"],"sourceRoot":""}
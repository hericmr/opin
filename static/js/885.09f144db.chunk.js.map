{"version":3,"file":"static/js/885.09f144db.chunk.js","mappings":"mNAUA,MAAMA,UAAiBC,EAAAA,GAMrBC,WAAAA,CAAYC,EAAMC,EAAKC,GACrBC,MAAMH,GAONI,KAAKH,IAAMA,EAOXG,KAAKF,gBAA4BG,IAAfH,EAA2BA,EAAa,IAC5D,EAGF,UCmFA,QA3GA,cAA8BL,EAS5BE,WAAAA,CAAYC,EAAMC,EAAKK,EAAeC,EAAUL,EAAYM,GAC1DL,MAAMH,EAAMC,EAAKC,GAQjBE,KAAKE,cAAgBA,EAOrBF,KAAKK,OAAS,KAOdL,KAAKM,YAAc,KASnBN,KAAKG,cAAwBF,IAAbE,GAAyBA,EAKzCH,KAAKI,eAAiBA,CACxB,CAOA,SAAIG,GAIF,OAHKP,KAAKK,SACRL,KAAKK,OAASL,KAAKH,IAAIW,cAAcR,KAAKE,gBAErCF,KAAKK,MACd,CACA,SAAIE,CAAMA,GACRP,KAAKK,OAASE,CAChB,CAQA,cAAIE,GAIF,OAHKT,KAAKM,cACRN,KAAKM,YAAcN,KAAKH,IAAIa,uBAAuBV,KAAKO,QAEnDP,KAAKM,WACd,CACA,cAAIG,CAAWA,GACbT,KAAKM,YAAcG,CACrB,CAQAE,cAAAA,GACEZ,MAAMY,iBACF,mBAAoBX,KAAKE,eACHF,KAAKE,cAAeS,gBAEhD,CAQAC,eAAAA,GACEb,MAAMa,kBACF,oBAAqBZ,KAAKE,eACJF,KAAKE,cAAeU,iBAEhD,G,sDC3GF,QACe,cADf,EAEe,cCEf,MAAMC,UAA+BC,EAAAA,EAKnCnB,WAAAA,CAAYE,EAAKkB,GACfhB,MAAMF,GAONG,KAAKgB,KAAOnB,EAMZG,KAAKiB,gBAMLjB,KAAKkB,gBAAiB,EAMtBlB,KAAKmB,WAAY,EAMjBnB,KAAKoB,kBAAoB,GAMzBpB,KAAKqB,oBAAmCpB,IAAlBc,EAA8B,EAAIA,EAQxDf,KAAKsB,MAAQ,KAEb,MAAMC,EAAUvB,KAAKgB,KAAKQ,cAM1BxB,KAAKyB,gBAAkB,GAMvBzB,KAAK0B,gBAAkB,CAAC,EAKxB1B,KAAK2B,SAAWJ,EAMhBvB,KAAK4B,yBAA0BC,EAAAA,EAAAA,IAC7BN,EACAO,EACA9B,KAAK+B,mBACL/B,MAOFA,KAAKgC,0BAMLhC,KAAKiC,qBAAsBJ,EAAAA,EAAAA,IACzBN,EACAO,EACA9B,KAAKkC,gBACLlC,MAMFA,KAAKmC,sBAAwBnC,KAAKoC,iBAAiBC,KAAKrC,MAExDA,KAAK2B,SAASW,iBACZC,EAAAA,EAAUC,UACVxC,KAAKmC,wBACLM,EAAAA,IAA0B,CAACC,SAAS,GAExC,CAOAC,aAAAA,CAAcC,GACZ,IAAIC,EAAW,IAAIC,EACjBC,EAAAA,EAAoBC,MACpBhD,KAAKgB,KACL4B,GAEF5C,KAAKiD,cAAcJ,QACU5C,IAAzBD,KAAKiB,iBAEPiC,aAAalD,KAAKiB,iBAClBjB,KAAKiB,qBAAkBhB,EACvB4C,EAAW,IAAIC,EACbC,EAAAA,EAAoBI,SACpBnD,KAAKgB,KACL4B,GAEF5C,KAAKiD,cAAcJ,IAGnB7C,KAAKiB,gBAAkBmC,YAAW,KAChCpD,KAAKiB,qBAAkBhB,EACvB,MAAM4C,EAAW,IAAIC,EACnBC,EAAAA,EAAoBM,YACpBrD,KAAKgB,KACL4B,GAEF5C,KAAKiD,cAAcJ,KAClB,IAEP,CASAS,qBAAAA,CAAsBV,GACpB,MAAMW,EAAQX,EACRY,EAAKD,EAAME,UAEjB,GACEF,EAAM3D,MAAQmD,EAAAA,EAAoBW,WAClCH,EAAM3D,MAAQmD,EAAAA,EAAoBY,cAClC,QACO3D,KAAK0B,gBAAgB8B,GAC5B,IAAK,MAAMC,KAAazD,KAAK0B,gBAC3B,GAAI1B,KAAK0B,gBAAgB+B,GAAWG,SAAWL,EAAMK,OAAQ,QAKpD5D,KAAK0B,gBAAgB+B,GAC5B,KACF,CAEJ,MACEF,EAAM3D,MAAQmD,EAAAA,EAAoBc,aAClCN,EAAM3D,MAAQmD,EAAAA,EAAoBe,cAElC9D,KAAK0B,gBAAgB8B,GAAMD,GAE7BvD,KAAKyB,gBAAkBsC,OAAOC,OAAOhE,KAAK0B,gBAC5C,CAOAuC,gBAAAA,CAAiBrB,GACf5C,KAAKsD,sBAAsBV,GAC3B,MAAMC,EAAW,IAAIC,EACnBC,EAAAA,EAAoBW,UACpB1D,KAAKgB,KACL4B,OACA3C,OACAA,EACAD,KAAKyB,iBAEPzB,KAAKiD,cAAcJ,GASjB7C,KAAKkB,iBACJ2B,EAASqB,mBACTlE,KAAKmB,WACNnB,KAAKmE,qBAAqBvB,IAE1B5C,KAAK2C,cAAc3C,KAAKsB,OAGU,IAAhCtB,KAAKyB,gBAAgB2C,SACvBpE,KAAKoB,kBAAkBiD,QAAQC,EAAAA,IAC/BtE,KAAKoB,kBAAkBgD,OAAS,EAChCpE,KAAKmB,WAAY,EACjBnB,KAAKsB,MAAQ,KAEjB,CAQA6C,oBAAAA,CAAqBvB,GACnB,OAA+B,IAAxBA,EAAa2B,MACtB,CAOAxC,kBAAAA,CAAmBa,GACjB5C,KAAKkB,eAAiD,IAAhClB,KAAKyB,gBAAgB2C,OAC3CpE,KAAKsD,sBAAsBV,GAC3B,MAAMC,EAAW,IAAIC,EACnBC,EAAAA,EAAoBc,YACpB7D,KAAKgB,KACL4B,OACA3C,OACAA,EACAD,KAAKyB,iBAUP,GARAzB,KAAKiD,cAAcJ,GAEnB7C,KAAKsB,MAAQ,IAAIkD,aAAa5B,EAAahD,KAAMgD,GACjDmB,OAAOU,eAAezE,KAAKsB,MAAO,SAAU,CAC1CoD,UAAU,EACVC,MAAO/B,EAAagB,SAGgB,IAAlC5D,KAAKoB,kBAAkBgD,OAAc,CACvC,MAAMQ,EAAM5E,KAAKgB,KAAK6D,mBACtB7E,KAAKoB,kBAAkB0D,MACrBjD,EAAAA,EAAAA,IACE+C,EACA7B,EAAAA,EAAoBe,YACpB9D,KAAK+E,mBACL/E,OAEF6B,EAAAA,EAAAA,IAAO+C,EAAK7B,EAAAA,EAAoBW,UAAW1D,KAAKiE,iBAAkBjE,OAclE6B,EAAAA,EAAAA,IACE7B,KAAK2B,SACLoB,EAAAA,EAAoBY,cACpB3D,KAAKiE,iBACLjE,OAGAA,KAAK2B,SAASqD,aAAehF,KAAK2B,SAASqD,gBAAkBJ,GAC/D5E,KAAKoB,kBAAkB0D,MACrBjD,EAAAA,EAAAA,IACE7B,KAAK2B,SAASqD,cACdjC,EAAAA,EAAoBW,UACpB1D,KAAKiE,iBACLjE,MAIR,CACF,CAOA+E,kBAAAA,CAAmBnC,GAIjB,GAAI5C,KAAKiF,UAAUrC,GAAe,CAChC5C,KAAKsD,sBAAsBV,GAC3B5C,KAAKmB,WAAY,EACjB,MAAM0B,EAAW,IAAIC,EACnBC,EAAAA,EAAoBmC,YACpBlF,KAAKgB,KACL4B,EACA5C,KAAKmB,eACLlB,EACAD,KAAKyB,iBAEPzB,KAAKiD,cAAcJ,EACrB,CACF,CAQAX,eAAAA,CAAgBU,GACd5C,KAAKgC,0BAA4BY,EACjC,MAAMzC,KAAcH,KAAKsB,QAAStB,KAAKiF,UAAUrC,IACjD5C,KAAKiD,cACH,IAAIH,EACFC,EAAAA,EAAoBe,YACpB9D,KAAKgB,KACL4B,EACAzC,GAGN,CAUAiC,gBAAAA,CAAiBmB,GAIf,MAAMrD,EAAgBF,KAAKgC,0BAEvB9B,IAAiBA,EAAcgE,kBACJ,mBAArBX,EAAM4B,aAAiD,IAArB5B,EAAM4B,YAEhD5B,EAAM5C,gBAEV,CAQAsE,SAAAA,CAAUrC,GACR,OACE5C,KAAKmB,WACLiE,KAAKC,IAAIzC,EAAa0C,QAAUtF,KAAKsB,MAAMgE,SACzCtF,KAAKqB,gBACP+D,KAAKC,IAAIzC,EAAa2C,QAAUvF,KAAKsB,MAAMiE,SAAWvF,KAAKqB,cAE/D,CAMAmE,eAAAA,GACMxF,KAAKiC,uBACPqC,EAAAA,EAAAA,IAActE,KAAKiC,qBACnBjC,KAAKiC,oBAAsB,MAE7BjC,KAAK2B,SAAS8D,oBACZlD,EAAAA,EAAUC,UACVxC,KAAKmC,uBAGHnC,KAAK4B,2BACP0C,EAAAA,EAAAA,IAActE,KAAK4B,yBACnB5B,KAAK4B,wBAA0B,MAGjC5B,KAAKoB,kBAAkBiD,QAAQC,EAAAA,IAC/BtE,KAAKoB,kBAAkBgD,OAAS,EAEhCpE,KAAK2B,SAAW,KAChB5B,MAAMyF,iBACR,EAGF,U,cC3ZA,QACc,aADd,EAEQ,OAFR,EAGU,SAHV,EAIQ,O,sDCFD,MAAME,EAAOC,IA+PpB,QAjPA,MAKEhG,WAAAA,CAAYiG,EAAkBC,GAK5B7F,KAAK8F,kBAAoBF,EAMzB5F,KAAK+F,aAAeF,EAMpB7F,KAAKgG,UAAY,GAMjBhG,KAAKiG,YAAc,GAMnBjG,KAAKkG,gBAAkB,CAAC,CAC1B,CAKAC,KAAAA,GACEnG,KAAKgG,UAAU5B,OAAS,EACxBpE,KAAKiG,YAAY7B,OAAS,GAC1B+B,EAAAA,EAAAA,GAAMnG,KAAKkG,gBACb,CAMAE,OAAAA,GACE,MAAMC,EAAWrG,KAAKgG,UAChBM,EAAatG,KAAKiG,YAClB1E,EAAU8E,EAAS,GACF,GAAnBA,EAASjC,QACXiC,EAASjC,OAAS,EAClBkC,EAAWlC,OAAS,IAEpBiC,EAAS,GAAuBA,EAASE,MACzCD,EAAW,GAA4BA,EAAWC,MAClDvG,KAAKwG,QAAQ,IAEf,MAAMC,EAAazG,KAAK+F,aAAaxE,GAErC,cADOvB,KAAKkG,gBAAgBO,GACrBlF,CACT,CAOAmF,OAAAA,CAAQnF,IACNoF,EAAAA,EAAAA,KACI3G,KAAK+F,aAAaxE,KAAYvB,KAAKkG,iBACrC,qEAEF,MAAMU,EAAW5G,KAAK8F,kBAAkBvE,GACxC,OAAIqF,GAAYlB,IACd1F,KAAKgG,UAAUlB,KAAKvD,GACpBvB,KAAKiG,YAAYnB,KAAK8B,GACtB5G,KAAKkG,gBAAgBlG,KAAK+F,aAAaxE,KAAY,EACnDvB,KAAK6G,UAAU,EAAG7G,KAAKgG,UAAU5B,OAAS,IACnC,EAGX,CAKA0C,QAAAA,GACE,OAAO9G,KAAKgG,UAAU5B,MACxB,CAQA2C,kBAAAA,CAAmBC,GACjB,OAAe,EAARA,EAAY,CACrB,CAQAC,mBAAAA,CAAoBD,GAClB,OAAe,EAARA,EAAY,CACrB,CAQAE,eAAAA,CAAgBF,GACd,OAAQA,EAAQ,GAAM,CACxB,CAMAG,QAAAA,GACE,IAAIC,EACJ,IAAKA,GAAKpH,KAAKgG,UAAU5B,QAAU,GAAK,EAAGgD,GAAK,EAAGA,IACjDpH,KAAKwG,QAAQY,EAEjB,CAKAC,OAAAA,GACE,OAAiC,IAA1BrH,KAAKgG,UAAU5B,MACxB,CAMAkD,WAAAA,CAAYC,GACV,OAAOA,KAAOvH,KAAKkG,eACrB,CAMAsB,QAAAA,CAASjG,GACP,OAAOvB,KAAKsH,YAAYtH,KAAK+F,aAAaxE,GAC5C,CAMAiF,OAAAA,CAAQQ,GACN,MAAMX,EAAWrG,KAAKgG,UAChBM,EAAatG,KAAKiG,YAClBwB,EAAQpB,EAASjC,OACjB7C,EAAU8E,EAASW,GACnBJ,EAAWN,EAAWU,GACtBU,EAAaV,EAEnB,KAAOA,EAAQS,GAAS,GAAG,CACzB,MAAME,EAAS3H,KAAK+G,mBAAmBC,GACjCY,EAAS5H,KAAKiH,oBAAoBD,GAElCa,EACJD,EAASH,GAASnB,EAAWsB,GAAUtB,EAAWqB,GAC9CC,EACAD,EAENtB,EAASW,GAASX,EAASwB,GAC3BvB,EAAWU,GAASV,EAAWuB,GAC/Bb,EAAQa,CACV,CAEAxB,EAASW,GAASzF,EAClB+E,EAAWU,GAASJ,EACpB5G,KAAK6G,UAAUa,EAAYV,EAC7B,CAOAH,SAAAA,CAAUa,EAAYV,GACpB,MAAMX,EAAWrG,KAAKgG,UAChBM,EAAatG,KAAKiG,YAClB1E,EAAU8E,EAASW,GACnBJ,EAAWN,EAAWU,GAE5B,KAAOA,EAAQU,GAAY,CACzB,MAAMI,EAAc9H,KAAKkH,gBAAgBF,GACzC,KAAIV,EAAWwB,GAAelB,GAK5B,MAJAP,EAASW,GAASX,EAASyB,GAC3BxB,EAAWU,GAASV,EAAWwB,GAC/Bd,EAAQc,CAIZ,CACAzB,EAASW,GAASzF,EAClB+E,EAAWU,GAASJ,CACtB,CAKAmB,YAAAA,GACE,MAAMnC,EAAmB5F,KAAK8F,kBACxBO,EAAWrG,KAAKgG,UAChBM,EAAatG,KAAKiG,YACxB,IAAIe,EAAQ,EACZ,MAAMgB,EAAI3B,EAASjC,OACnB,IAAI7C,EAAS6F,EAAGR,EAChB,IAAKQ,EAAI,EAAGA,EAAIY,IAAKZ,EACnB7F,EAAU8E,EAASe,GACnBR,EAAWhB,EAAiBrE,GACxBqF,GAAYlB,SACP1F,KAAKkG,gBAAgBlG,KAAK+F,aAAaxE,KAE9C+E,EAAWU,GAASJ,EACpBP,EAASW,KAAWzF,GAGxB8E,EAASjC,OAAS4C,EAClBV,EAAWlC,OAAS4C,EACpBhH,KAAKmH,UACP,GC7IF,QAtGA,cAAwBc,EAKtBtI,WAAAA,CAAYuI,EAAsBC,GAChCpI,OACGwB,GAAY2G,EAAqBE,MAAM,KAAM7G,KAC7CA,GAAYA,EAAQ,GAAG8G,WAI1BrI,KAAKsI,uBAAyBtI,KAAKuI,iBAAiBlG,KAAKrC,MAMzDA,KAAKwI,oBAAsBL,EAM3BnI,KAAKyI,cAAgB,EAMrBzI,KAAK0I,kBAAoB,CAAC,CAC5B,CAOAhC,OAAAA,CAAQnF,GACN,MAAMoH,EAAQ5I,MAAM2G,QAAQnF,GAC5B,GAAIoH,EAAO,CACIpH,EAAQ,GAChBe,iBAAiBC,EAAAA,EAAUqG,OAAQ5I,KAAKsI,uBAC/C,CACA,OAAOK,CACT,CAKAE,eAAAA,GACE,OAAO7I,KAAKyI,aACd,CAMAF,gBAAAA,CAAiBhF,GACf,MAAMuF,EAAmDvF,EAAMK,OACzDmF,EAAQD,EAAKE,WACnB,GACED,IAAUE,EAAAA,EAAUC,QACpBH,IAAUE,EAAAA,EAAUE,OACpBJ,IAAUE,EAAAA,EAAUG,MACpB,CACIL,IAAUE,EAAAA,EAAUE,OACtBL,EAAKrD,oBAAoBlD,EAAAA,EAAUqG,OAAQ5I,KAAKsI,wBAElD,MAAMe,EAAUP,EAAKT,SACjBgB,KAAWrJ,KAAK0I,2BACX1I,KAAK0I,kBAAkBW,KAC5BrJ,KAAKyI,eAETzI,KAAKwI,qBACP,CACF,CAMAc,aAAAA,CAAcC,EAAiBC,GAC7B,IAAIC,EAAW,EACf,KACEzJ,KAAKyI,cAAgBc,GACrBE,EAAWD,GACXxJ,KAAK8G,WAAa,GAClB,CACA,MAAMgC,EAAO9I,KAAKoG,UAAU,GACtBiD,EAAUP,EAAKT,SACPS,EAAKE,aACLC,EAAAA,EAAUS,MAAUL,KAAWrJ,KAAK0I,oBAChD1I,KAAK0I,kBAAkBW,IAAW,IAChCrJ,KAAKyI,gBACLgB,EACFX,EAAKa,OAET,CACF,G,uGC5FK,MAAMC,UAAmBlK,EAAAA,GAK9BC,WAAAA,CAAYC,EAAMiK,GAChB9J,MAAMH,GAONI,KAAK6J,MAAQA,CACf,EAqCF,MAAMC,EACI,SAWV,MAAMC,UAAmBC,EAAAA,EAIvBrK,WAAAA,CAAYsK,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMC,EAAsCnG,OAAOoG,OAAO,CAAC,EAAGF,UACvDC,EAAYE,OAEnB,IAAIA,EAASH,EAAQG,OAErBrK,MAAMmK,GAKNlK,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAMLvK,KAAKwK,oBAAsB,GAM3BxK,KAAKyK,cAAgB,CAAC,EAEtBzK,KAAK0K,kBAAkBZ,EAAiB9J,KAAK2K,sBAEzCP,EACEQ,MAAMC,QAAQT,GAChBA,EAAS,IAAIU,EAAAA,EAAWV,EAAOW,QAAS,CAACC,QAAQ,KAEjDrE,EAAAA,EAAAA,GACkD,oBAAtByD,EAAgB,SAC1C,sDAIJA,EAAS,IAAIU,EAAAA,OAAW7K,EAAW,CAAC+K,QAAQ,IAG9ChL,KAAKiL,UAAUb,EACjB,CAKAc,kBAAAA,GACElL,KAAKmL,SACP,CAKAR,oBAAAA,GACE3K,KAAKwK,oBAAoBnG,QAAQC,EAAAA,IACjCtE,KAAKwK,oBAAoBpG,OAAS,EAElC,MAAMgG,EAASpK,KAAKoL,YACpBpL,KAAKwK,oBAAoB1F,MACvBjD,EAAAA,EAAAA,IAAOuI,EAAQiB,EAAAA,EAAoBC,IAAKtL,KAAKuL,iBAAkBvL,OAC/D6B,EAAAA,EAAAA,IACEuI,EACAiB,EAAAA,EAAoBG,OACpBxL,KAAKyL,oBACLzL,OAIJ,IAAK,MAAMwD,KAAMxD,KAAKyK,cACpBzK,KAAKyK,cAAcjH,GAAIa,QAAQC,EAAAA,KAEjC6B,EAAAA,EAAAA,GAAMnG,KAAKyK,eAEX,MAAMiB,EAActB,EAAOuB,WAC3B,IAAK,IAAIvE,EAAI,EAAGwE,EAAKF,EAAYtH,OAAQgD,EAAIwE,EAAIxE,IAAK,CACpD,MAAMyC,EAAQ6B,EAAYtE,GAC1BpH,KAAK6L,wBAAwBhC,GAC7B7J,KAAKiD,cAAc,IAAI2G,EAAW,WAAYC,GAChD,CACA7J,KAAKmL,SACP,CAKAU,uBAAAA,CAAwBhC,GACtB,MAAMiC,EAAe,EACnBjK,EAAAA,EAAAA,IACEgI,EACAkC,EAAAA,EAAgBC,eAChBhM,KAAKkL,mBACLlL,OAEF6B,EAAAA,EAAAA,IAAOgI,EAAOtH,EAAAA,EAAUqG,OAAQ5I,KAAKkL,mBAAoBlL,OAGvD6J,aAAiBE,GACnB+B,EAAahH,MACXjD,EAAAA,EAAAA,IAAOgI,EAAO,WAAY7J,KAAKiM,qBAAsBjM,OACrD6B,EAAAA,EAAAA,IAAOgI,EAAO,cAAe7J,KAAKkM,wBAAyBlM,OAI/DA,KAAKyK,eAAc0B,EAAAA,EAAAA,IAAOtC,IAAUiC,CACtC,CAKAG,oBAAAA,CAAqB1I,GACnBvD,KAAKiD,cAAc,IAAI2G,EAAW,WAAYrG,EAAMsG,OACtD,CAKAqC,uBAAAA,CAAwB3I,GACtBvD,KAAKiD,cAAc,IAAI2G,EAAW,cAAerG,EAAMsG,OACzD,CAMA0B,gBAAAA,CAAiBa,GACf,MAAMvC,EAAQuC,EAAgB7K,QAC9BvB,KAAK6L,wBAAwBhC,GAC7B7J,KAAKiD,cAAc,IAAI2G,EAAW,WAAYC,IAC9C7J,KAAKmL,SACP,CAMAM,mBAAAA,CAAoBW,GAClB,MAAMvC,EAAQuC,EAAgB7K,QACxBgG,GAAM4E,EAAAA,EAAAA,IAAOtC,GACnB7J,KAAKyK,cAAclD,GAAKlD,QAAQC,EAAAA,WACzBtE,KAAKyK,cAAclD,GAC1BvH,KAAKiD,cAAc,IAAI2G,EAAW,cAAeC,IACjD7J,KAAKmL,SACP,CAUAC,SAAAA,GACE,OACEpL,KAAKqM,IAAIvC,EAEb,CAUAmB,SAAAA,CAAUb,GACR,MAAMkC,EAAatM,KAAKoL,YACxB,GAAIkB,EAAY,CACd,MAAMC,EAAgBD,EAAWX,WACjC,IAAK,IAAIvE,EAAI,EAAGwE,EAAKW,EAAcnI,OAAQgD,EAAIwE,IAAMxE,EACnDpH,KAAKiD,cAAc,IAAI2G,EAAW,cAAe2C,EAAcnF,IAEnE,CAEApH,KAAKwM,IAAI1C,EAAiBM,EAC5B,CAOAqC,cAAAA,CAAeC,GAKb,OAJAA,OAAkBzM,IAAVyM,EAAsBA,EAAQ,GACtC1M,KAAKoL,YAAY/G,SAAQ,SAAUwF,GACjCA,EAAM4C,eAAeC,EACvB,IACOA,CACT,CAYAC,mBAAAA,CAAoBC,GAClB,MAAMC,OAAkB5M,IAAT2M,EAAqBA,EAAO,GACrCE,EAAMD,EAAOzI,OAEnBpE,KAAKoL,YAAY/G,SAAQ,SAAUwF,GACjCA,EAAM8C,oBAAoBE,EAC5B,IAEA,MAAME,EAAgB/M,KAAKgN,gBAC3B,IAAIC,EAAgBF,EAAcG,OAC7BN,QAAiC3M,IAAzB8M,EAAcG,SACzBD,EAAgB,GAElB,IAAK,IAAI7F,EAAI0F,EAAKlB,EAAKiB,EAAOzI,OAAQgD,EAAIwE,EAAIxE,IAAK,CACjD,MAAM+F,EAAaN,EAAOzF,GAC1B+F,EAAWC,SAAWL,EAAcK,QACpCD,EAAWE,QAAUF,EAAWE,SAAWN,EAAcM,QACzDF,EAAWG,cAAgBlI,KAAKmI,IAC9BJ,EAAWG,cACXP,EAAcO,eAEhBH,EAAWK,cAAgBpI,KAAKqI,IAC9BN,EAAWK,cACXT,EAAcS,eAEhBL,EAAWO,QAAUtI,KAAKqI,IAAIN,EAAWO,QAASX,EAAcW,SAChEP,EAAWQ,QAAUvI,KAAKmI,IAAIJ,EAAWQ,QAASZ,EAAcY,cACnC1N,IAAzB8M,EAAca,cACU3N,IAAtBkN,EAAWS,OACbT,EAAWS,QAASC,EAAAA,EAAAA,IAClBV,EAAWS,OACXb,EAAca,QAGhBT,EAAWS,OAASb,EAAca,aAGZ3N,IAAtBkN,EAAWD,SACbC,EAAWD,OAASD,EAExB,CAEA,OAAOJ,CACT,CAMAiB,cAAAA,GACE,MAAO,OACT,EAGF,U,8HC7UA,MAAMC,WAAoBC,EAAAA,EAIxBrO,WAAAA,CAAYE,GACVE,QAMAC,KAAKgB,KAAOnB,CACd,CAOAoO,mBAAAA,CAAoBrO,EAAME,IACxBoO,EAAAA,EAAAA,KACF,CAMAC,mBAAAA,CAAoBrO,GAClB,MAAMsO,EAAYtO,EAAWsO,UACvBC,EAA6BvO,EAAWuO,2BACxCC,EAA6BxO,EAAWwO,4BAE9CC,EAAAA,GAAAA,IACEF,EACAvO,EAAW0O,KAAK,GAAK,EACrB1O,EAAW0O,KAAK,GAAK,EACrB,EAAIJ,EAAUK,YACb,EAAIL,EAAUK,YACdL,EAAUM,UACVN,EAAUO,OAAO,IACjBP,EAAUO,OAAO,KAGpBC,EAAAA,GAAAA,IAAYN,EAA4BD,EAC1C,CAiBAQ,0BAAAA,CACEpO,EACAX,EACAgP,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EACJ,MAAMhB,EAAYtO,EAAWsO,UAS7B,SAASS,EAA2BQ,EAASC,EAASzF,EAAO0F,GAC3D,OAAOP,EAASQ,KAAKP,EAASK,EAASD,EAAUxF,EAAQ,KAAM0F,EACjE,CAEA,MAAME,EAAarB,EAAUqB,WAEvBC,GAAuBC,EAAAA,GAAAA,IAAMlP,EAAWsK,QAAS0E,GACjDG,EAAU,CAAC,CAAC,EAAG,IACrB,GAAIH,EAAWI,YAAcd,EAAc,CACzC,MAAMe,EAAmBL,EAAWM,YAC9BC,GAAaC,EAAAA,EAAAA,IAASH,GAC5BF,EAAQ9K,KAAK,EAAEkL,EAAY,GAAI,CAACA,EAAY,GAC9C,CAEA,MAAME,EAAcpQ,EAAWqQ,iBACzBC,EAAYF,EAAY9L,OAExBiM,EAA6C,GAC7CC,EAAW,GACjB,IAAK,IAAIlJ,EAAI,EAAGA,EAAIwI,EAAQxL,OAAQgD,IAClC,IAAK,IAAImJ,EAAIH,EAAY,EAAGG,GAAK,IAAKA,EAAG,CACvC,MAAMpD,EAAa+C,EAAYK,GACzB1G,EAAQsD,EAAWtD,MACzB,GACEA,EAAM2G,gBACNC,EAAAA,EAAAA,GAAOtD,EAAYiB,IACnBc,EAAYM,KAAKL,EAAUtF,GAC3B,CACA,MAAM6G,EAAgB7G,EAAM8G,cACtBC,EAAS/G,EAAMgH,YACrB,GAAIH,GAAiBE,EAAQ,CAC3B,MAAME,EAAcF,EAAOG,WACvBrB,EACAjP,EACEuO,EAAWH,EAA2BxM,KAC1C,KACA8K,EAAWkC,SAEbiB,EAAS,GAAKQ,EAAY,GAAKlB,EAAQxI,GAAG,GAC1CkJ,EAAS,GAAKQ,EAAY,GAAKlB,EAAQxI,GAAG,GAC1CgI,EAASsB,EAAc7B,2BACrByB,EACAxQ,EACAgP,EACAE,EACAqB,EAEJ,CACA,GAAIjB,EACF,OAAOA,CAEX,CACF,CAEF,GAAuB,IAAnBiB,EAAQjM,OACV,OAEF,MAAM4M,EAAQ,EAAIX,EAAQjM,OAM1B,OALAiM,EAAQhM,SAAQ,CAAC4M,EAAG7J,IAAO6J,EAAEC,YAAc9J,EAAI4J,IAC/CX,EAAQc,MAAK,CAACC,EAAGC,IAAMD,EAAEF,WAAaG,EAAEH,aACxCb,EAAQiB,MAAML,GACJ7B,EAAS6B,EAAEjC,SAASiC,EAAE3B,QAAS2B,EAAEpH,MAAOoH,EAAE1B,YAE7CH,CACT,CAeAmC,sBAAAA,CACE9Q,EACAX,EACAgP,EACAC,EACAG,EACAD,GAaA,YAAsBhP,IAXHD,KAAK6O,2BACtBpO,EACAX,EACAgP,EACAC,EACAyC,EAAAA,GACAxR,KACAkP,EACAD,EAIJ,CAKAwC,MAAAA,GACE,OAAOzR,KAAKgB,IACd,CAOA0Q,WAAAA,CAAY5R,IACVoO,EAAAA,EAAAA,KACF,CAMAyD,uBAAAA,CAAwB7R,GAClB8R,GAAAA,GAAeC,kBACjB/R,EAAWgS,oBAAoBhN,KAAKiN,GAExC,EAOF,SAASA,GAAgBlS,EAAKC,GAC5B8R,GAAAA,GAAeI,QACjB,CAEA,YC1DA,SArKA,cAAmCjE,GAIjCpO,WAAAA,CAAYE,GACVE,MAAMF,GAMNG,KAAKiS,wBAAyBpQ,EAAAA,EAAAA,IAC5BqQ,EAAAA,GACAnG,EAAAA,EAAgBC,eAChBnM,EAAIsS,WACJtS,GAOFG,KAAK2B,SAAWyQ,SAASC,cAAc,OACvC,MAAMC,EAAQtS,KAAK2B,SAAS2Q,MAC5BA,EAAMC,SAAW,WACjBD,EAAME,MAAQ,OACdF,EAAMG,OAAS,OACfH,EAAMpF,OAAS,IAEflN,KAAK2B,SAAS+Q,UAAYC,EAAAA,GAAqB,aAE/C,MAAMC,EAAY/S,EAAI2B,cACtBoR,EAAUC,aAAa7S,KAAK2B,SAAUiR,EAAUE,YAAc,MAM9D9S,KAAK+S,UAAY,GAMjB/S,KAAKgT,kBAAmB,CAC1B,CAOA/E,mBAAAA,CAAoBrO,EAAME,GACxB,MAAMD,EAAMG,KAAKyR,SACjB,GAAI5R,EAAIoT,YAAYrT,GAAO,CACzB,MAAM2D,EAAQ,IAAI2P,EAAAA,EAAYtT,OAAMK,EAAWH,GAC/CD,EAAIoD,cAAcM,EACpB,CACF,CAKAiC,eAAAA,IACElB,EAAAA,EAAAA,IAActE,KAAKiS,wBACnBjS,KAAK2B,SAASwR,SACdpT,MAAMyF,iBACR,CAOAkM,WAAAA,CAAY5R,GACV,IAAKA,EAKH,YAJIE,KAAKgT,mBACPhT,KAAK2B,SAAS2Q,MAAMc,QAAU,OAC9BpT,KAAKgT,kBAAmB,IAK5BhT,KAAKmO,oBAAoBrO,GACzBE,KAAKiO,oBAAoBoF,EAAAA,EAAgBC,WAAYxT,GAErD,MAAMqQ,EAAmBrQ,EAAWqQ,iBAAiBgB,MACnD,CAACC,EAAGC,IAAMD,EAAElE,OAASmE,EAAEnE,SAEPiD,EAAiBmB,MAChCnE,GACCA,EAAWtD,iBAAiB0J,EAAAA,GAC5BpG,EAAWtD,MAAM2J,mBAInB1T,EAAW2T,UAAY,CAAC,GAE1B,MAAMrF,EAAYtO,EAAWsO,UAE7BpO,KAAK+S,UAAU3O,OAAS,EAExB,MAAMsP,EAAsB,GAC5B,IAAIC,EAAkB,KACtB,IAAK,IAAIvM,EAAI,EAAGwE,EAAKuE,EAAiB/L,OAAQgD,EAAIwE,IAAMxE,EAAG,CACzD,MAAM+F,EAAagD,EAAiB/I,GACpCtH,EAAW8T,WAAaxM,EAExB,MAAMyC,EAAQsD,EAAWtD,MACnBgK,EAAchK,EAAMiE,iBAC1B,KACG2C,EAAAA,EAAAA,GAAOtD,EAAYiB,IACJ,SAAfyF,GAAyC,aAAfA,EAC3B,CACAhK,EAAMiK,WACN,QACF,CAEA,MAAMvS,EAAUsI,EAAMkK,OAAOjU,EAAY6T,GACpCpS,IAGDA,IAAYoS,IACd3T,KAAK+S,UAAUjO,KAAKvD,GACpBoS,EAAkBpS,GAGpBmS,EAAoB5O,KAAKqI,GAC3B,CAEAnN,KAAKyT,UAAU3T,EAAY4T,IAE3BM,EAAAA,EAAAA,IAAgBhU,KAAK2B,SAAU3B,KAAK+S,WAEpC/S,KAAKiO,oBAAoBoF,EAAAA,EAAgBY,YAAanU,GAEjDE,KAAKgT,mBACRhT,KAAK2B,SAAS2Q,MAAMc,QAAU,GAC9BpT,KAAKgT,kBAAmB,GAG1BhT,KAAK2R,wBAAwB7R,EAC/B,CAMA2T,SAAAA,CAAU3T,EAAYoQ,GACpB,GAAKpQ,EAAW2T,UAAhB,CAGA,IAAK,IAAIrM,EAAI8I,EAAY9L,OAAS,EAAGgD,GAAK,IAAKA,EAAG,CAChD,MAAM+F,EAAa+C,EAAY9I,GACzByC,EAAQsD,EAAWtD,MACrBA,EAAM2J,gBACR3J,EAAMqK,gBAAgBpU,EAAYqN,EAEtC,CACA+C,EAAY7L,SAAS8I,GACnBA,EAAWtD,MAAMsK,eAAerU,IATlC,CAWF,G,eCnBF,SAASsU,GAAuBvK,GAC1BA,aAAiBwK,EAAAA,EACnBxK,EAAMyK,eAAe,MAGnBzK,aAAiBE,GACnBF,EAAMuB,YAAY/G,QAAQ+P,GAE9B,CAMA,SAASG,GAAoB1K,EAAOhK,GAClC,GAAIgK,aAAiBwK,EAAAA,EACnBxK,EAAMyK,eAAezU,QAGvB,GAAIgK,aAAiBE,EAAY,CAC/B,MAAMK,EAASP,EAAMuB,YAAYO,WACjC,IAAK,IAAIvE,EAAI,EAAGwE,EAAKxB,EAAOhG,OAAQgD,EAAIwE,IAAMxE,EAC5CmN,GAAoBnK,EAAOhD,GAAIvH,EAEnC,CACF,CAsDA,MAAM2U,WAAYC,EAAAA,EAIhB9U,WAAAA,CAAYsK,GACVlK,QAEAkK,EAAUA,GAAW,CAAC,EAKtBjK,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAEL,MAAMmK,EA8+CV,SAA+BzK,GAI7B,IAAI0K,EAAsB,UACU1U,IAAhCgK,EAAQ0K,sBACVA,EACyC,kBAAhC1K,EAAQ0K,oBACXvC,SAASwC,eAAe3K,EAAQ0K,qBAChC1K,EAAQ0K,qBAMhB,MAAM3Q,EAAS,CAAC,EAEV6Q,EACJ5K,EAAQG,QACiD,oBAA/BH,EAAQG,OAAiB,UACpBH,EAAc,OACzC,IAAIF,EAAW,CACbK,OAEIH,EAAc,SAW1B,IAAI6K,EAcAC,EAeAC,EArCJhR,EAAOiR,GAA0BJ,EAEjC7Q,EAAOiR,GAAsBhL,EAAQrG,OAErCI,EAAOiR,GACLhL,EAAQiL,gBAAgBC,EAAAA,GAAOlL,EAAQiL,KAAO,IAAIC,EAAAA,QAI3BlV,IAArBgK,EAAQ6K,WACNlK,MAAMC,QAAQZ,EAAQ6K,UACxBA,EAAW,IAAIhK,EAAAA,EAAWb,EAAQ6K,SAAS/J,WAE3CpE,EAAAA,EAAAA,GAC4D,oBAAhCsD,EAAQ6K,SAAkB,SACpD,+DAEFA,EAAW7K,EAAQ6K,gBAMM7U,IAAzBgK,EAAQ8K,eACNnK,MAAMC,QAAQZ,EAAQ8K,cACxBA,EAAe,IAAIjK,EAAAA,EAAWb,EAAQ8K,aAAahK,WAEnDpE,EAAAA,EAAAA,GAEI,oBADwBsD,EAAQ8K,aAAsB,SAExD,mEAEFA,EAAe9K,EAAQ8K,oBAMF9U,IAArBgK,EAAQ+K,SACNpK,MAAMC,QAAQZ,EAAQ+K,UACxBA,EAAW,IAAIlK,EAAAA,EAAWb,EAAQ+K,SAASjK,WAE3CpE,EAAAA,EAAAA,GAC4D,oBAAhCsD,EAAQ+K,SAAkB,SACpD,+DAEFA,EAAW/K,EAAQ+K,UAGrBA,EAAW,IAAIlK,EAAAA,EAGjB,MAAO,CACLgK,SAAUA,EACVC,aAAcA,EACdJ,oBAAqBA,EACrBK,SAAUA,EACVhR,OAAQA,EAEZ,CApkD4BoR,CAAsBnL,GAM9CjK,KAAKqV,iBAAkB,EAMvBrV,KAAKsV,SAAU,EAGftV,KAAKuV,yBAA2BvV,KAAKwV,mBAAmBnT,KAAKrC,MAM7DA,KAAKyV,sBACyBxV,IAA5BgK,EAAQyL,gBAAgCzL,EAAQyL,gBAAkB,GAMpE1V,KAAK2V,iBACoB1V,IAAvBgK,EAAQ2L,WACJ3L,EAAQ2L,WACRC,EAAAA,GAMN7V,KAAK8V,yBAML9V,KAAK+V,mBAKL/V,KAAKgW,gBAAkBhW,KAAKgW,gBAAgB3T,KAAKrC,MAMjDA,KAAKiW,6BAA8BC,EAAAA,GAAAA,MAMnClW,KAAKmW,6BAA8BD,EAAAA,GAAAA,MAMnClW,KAAKoW,YAAc,EAMnBpW,KAAKqW,YAAc,KAOnBrW,KAAKsW,gBAAkB,KAMvBtW,KAAKuW,yBAA2B,KAMhCvW,KAAKwW,uBAAyB,KAM9BxW,KAAKyW,gCAAkC,KAMvCzW,KAAK0W,UAAYtE,SAASC,cAAc,OACxCrS,KAAK0W,UAAUhE,UACb,eAAiB,iBAAkBiE,OAAS,YAAc,IAC5D3W,KAAK0W,UAAUpE,MAAMC,SAAW,WAChCvS,KAAK0W,UAAUpE,MAAMsE,SAAW,SAChC5W,KAAK0W,UAAUpE,MAAME,MAAQ,OAC7BxS,KAAK0W,UAAUpE,MAAMG,OAAS,OAM9BzS,KAAK6W,kBAAoBzE,SAASC,cAAc,OAChDrS,KAAK6W,kBAAkBvE,MAAMC,SAAW,WACxCvS,KAAK6W,kBAAkBvE,MAAMpF,OAAS,IACtClN,KAAK6W,kBAAkBvE,MAAME,MAAQ,OACrCxS,KAAK6W,kBAAkBvE,MAAMG,OAAS,OACtCzS,KAAK6W,kBAAkBvE,MAAMwE,cAAgB,OAC7C9W,KAAK6W,kBAAkBnE,UAAY,sBACnC1S,KAAK0W,UAAUK,YAAY/W,KAAK6W,mBAMhC7W,KAAKgX,2BAA6B5E,SAASC,cAAc,OACzDrS,KAAKgX,2BAA2B1E,MAAMC,SAAW,WACjDvS,KAAKgX,2BAA2B1E,MAAMpF,OAAS,IAC/ClN,KAAKgX,2BAA2B1E,MAAME,MAAQ,OAC9CxS,KAAKgX,2BAA2B1E,MAAMG,OAAS,OAC/CzS,KAAKgX,2BAA2B1E,MAAMwE,cAAgB,OACtD9W,KAAKgX,2BAA2BtE,UAAY,gCAC5C1S,KAAK0W,UAAUK,YAAY/W,KAAKgX,4BAMhChX,KAAKiX,wBAA0B,KAM/BjX,KAAKqB,eAAiB4I,EAAQlJ,cAM9Bf,KAAKkX,qBAAuBxC,EAAgBC,oBAM5C3U,KAAKmX,yBAA2B,KAMhCnX,KAAKoX,eAAiB,KAMtBpX,KAAKqX,gBAAkB,IAAIC,gBAAe,IAAMtX,KAAKuX,eAMrDvX,KAAK8U,SAAWJ,EAAgBI,WAAY0C,EAAAA,EAAAA,KAM5CxX,KAAK+U,aACHL,EAAgBK,eAChB0C,EAAAA,EAAAA,GAAoB,CAClBC,aAAa,IAOjB1X,KAAK2X,UAAYjD,EAAgBM,SAOjChV,KAAK4X,gBAAkB,CAAC,EAMxB5X,KAAK6X,UAAY,KAMjB7X,KAAK8X,qBAAuB,GAM5B9X,KAAK+X,WAAa,IAAIC,EACpBhY,KAAKiY,gBAAgB5V,KAAKrC,MAC1BA,KAAKkY,kBAAkB7V,KAAKrC,OAG9BA,KAAK0K,kBACHuK,EACAjV,KAAKmY,0BAEPnY,KAAK0K,kBAAkBuK,EAAkBjV,KAAKoY,oBAC9CpY,KAAK0K,kBAAkBuK,EAAkBjV,KAAKqY,oBAC9CrY,KAAK0K,kBAAkBuK,EAAoBjV,KAAKsY,sBAIhDtY,KAAKuY,cAAc7D,EAAgB1Q,QAEnC,MAAMnE,EAAMG,MACRiK,EAAQiL,MAAUjL,EAAQiL,gBAAgBC,EAAAA,IAC5ClL,EAAQiL,KAAKsD,MAAK,SAAUC,GAC1B5Y,EAAI6Y,QAAQ,IAAIvD,EAAAA,GAAKsD,GACvB,IAGFzY,KAAK8U,SAASxS,iBACZ+I,EAAAA,EAAoBC,KAInB/H,IACCA,EAAMhC,QAAQoX,OAAO3Y,SAIzBA,KAAK8U,SAASxS,iBACZ+I,EAAAA,EAAoBG,QAInBjI,IACCA,EAAMhC,QAAQoX,OAAO,SAIzB3Y,KAAK+U,aAAazS,iBAChB+I,EAAAA,EAAoBC,KAInB/H,IACCA,EAAMhC,QAAQoX,OAAO3Y,SAIzBA,KAAK+U,aAAazS,iBAChB+I,EAAAA,EAAoBG,QAInBjI,IACCA,EAAMhC,QAAQoX,OAAO,SAIzB3Y,KAAK2X,UAAUrV,iBACb+I,EAAAA,EAAoBC,KAInB/H,IACCvD,KAAK4Y,oBAAoBrV,EAAMhC,YAInCvB,KAAK2X,UAAUrV,iBACb+I,EAAAA,EAAoBG,QAInBjI,IACC,MAAMC,EAAKD,EAAMhC,QAAQsX,aACd5Y,IAAPuD,UACKxD,KAAK4X,gBAAgBpU,EAAGsV,YAEjCvV,EAAMhC,QAAQoX,OAAO,SAIzB3Y,KAAK8U,SAASzQ,SAIX0U,IACCA,EAAQJ,OAAO3Y,SAInBA,KAAK+U,aAAa1Q,SAIf2U,IACCA,EAAYL,OAAO3Y,SAIvBA,KAAK2X,UAAUtT,QAAQrE,KAAK4Y,oBAAoBvW,KAAKrC,MACvD,CAOAiZ,UAAAA,CAAWF,GACT/Y,KAAKkZ,cAAcpU,KAAKiU,EAC1B,CAWAI,cAAAA,CAAeH,GACbhZ,KAAKoZ,kBAAkBtU,KAAKkU,EAC9B,CASAK,QAAAA,CAASxP,GACQ7J,KAAKsZ,gBAAgBlO,YAC7BtG,KAAK+E,EACd,CAMA0P,eAAAA,CAAgBhW,GACdgR,GAAoBhR,EAAMsG,MAAO7J,KACnC,CAOAwZ,UAAAA,CAAWC,GACTzZ,KAAK0Z,cAAc5U,KAAK2U,EAC1B,CAOAb,mBAAAA,CAAoBa,GAClB,MAAMjW,EAAKiW,EAAQZ,aACR5Y,IAAPuD,IACFxD,KAAK4X,gBAAgBpU,EAAGsV,YAAcW,GAExCA,EAAQd,OAAO3Y,KACjB,CAOAwF,eAAAA,GACExF,KAAK8U,SAAS3O,QACdnG,KAAK+U,aAAa5O,QAClBnG,KAAK2X,UAAUxR,QACfnG,KAAKqX,gBAAgBsC,aACrB3Z,KAAK4Z,UAAU,MACf7Z,MAAMyF,iBACR,CAuBAqU,qBAAAA,CAAsBtZ,EAAOyO,EAAU/E,GACrC,IAAKjK,KAAKqW,cAAgBrW,KAAK6X,UAC7B,OAEF,MAAMpX,EAAaT,KAAK8Z,+BAA+BvZ,GAEjDuO,OACqB7O,KAF3BgK,OAAsBhK,IAAZgK,EAAwBA,EAAU,CAAC,GAEnC6E,aAA6B7E,EAAQ6E,aAAe,EACxDI,OACoBjP,IAAxBgK,EAAQiF,YAA4BjF,EAAQiF,YAAcsC,EAAAA,GACtDzC,GAAwC,IAAzB9E,EAAQ8E,aAC7B,OAAO/O,KAAK6X,UAAUhJ,2BACpBpO,EACAT,KAAKqW,YACLvH,EACAC,EACAC,EACA,KACAE,EACA,KAEJ,CAaA6K,kBAAAA,CAAmBxZ,EAAO0J,GACxB,MAAM+P,EAAW,GAQjB,OAPAha,KAAK6Z,sBACHtZ,GACA,SAAU+O,GACR0K,EAASlV,KAAKwK,EAChB,GACArF,GAEK+P,CACT,CAOAC,YAAAA,GACE,MAAM7P,EAAS,GAWf,OAVA,SAAS8P,EAAcrF,GACrBA,EAAWxQ,SAAQ,SAAUwF,GACvBA,aAAiBE,EACnBmQ,EAAcrQ,EAAMuB,aAEpBhB,EAAOtF,KAAK+E,EAEhB,GACF,CACAqQ,CAAcla,KAAKoL,aACZhB,CACT,CAaA+P,iBAAAA,CAAkB5Z,EAAO0J,GACvB,IAAKjK,KAAKqW,cAAgBrW,KAAK6X,UAC7B,OAAO,EAET,MAAMpX,EAAaT,KAAK8Z,+BAA+BvZ,GAEjD2O,OACoBjP,KAF1BgK,OAAsBhK,IAAZgK,EAAwBA,EAAU,CAAC,GAEnCiF,YAA4BjF,EAAQiF,YAAcsC,EAAAA,GACtD1C,OACqB7O,IAAzBgK,EAAQ6E,aAA6B7E,EAAQ6E,aAAe,EACxDC,GAAwC,IAAzB9E,EAAQ8E,aAC7B,OAAO/O,KAAK6X,UAAUtG,uBACpB9Q,EACAT,KAAKqW,YACLvH,EACAC,EACAG,EACA,KAEJ,CAQAkL,kBAAAA,CAAmB7W,GACjB,OAAOvD,KAAKU,uBAAuBV,KAAKQ,cAAc+C,GACxD,CAOA8W,0BAAAA,CAA2B9W,GACzB,OAAOvD,KAAK8Z,+BAA+B9Z,KAAKQ,cAAc+C,GAChE,CAQA/C,aAAAA,CAAc+C,GACZ,MACM+W,EADWta,KAAK0W,UACY6D,wBAC5BC,EAAexa,KAAKya,UACpBC,EAASJ,EAAiB9H,MAAQgI,EAAa,GAC/CG,EAASL,EAAiB7H,OAAS+H,EAAa,GAChDI,EAEJ,mBAAoBrX,EACWA,EAAOsX,eAAe,GAAE,EAGzD,MAAO,EACJD,EAActV,QAAUgV,EAAiBQ,MAAQJ,GACjDE,EAAcrV,QAAU+U,EAAiBS,KAAOJ,EAErD,CAWAK,SAAAA,GACE,OACEhb,KAAKqM,IAAI4I,EAEb,CASAgG,gBAAAA,GACE,OAAOjb,KAAKoX,cACd,CASA1W,sBAAAA,CAAuBH,GACrB,OAAO2a,EAAAA,EAAAA,IACLlb,KAAK8Z,+BAA+BvZ,GACpCP,KAAKmb,UAAUC,gBAEnB,CAQAtB,8BAAAA,CAA+BvZ,GAC7B,MAAMT,EAAaE,KAAKqW,YACxB,OAAKvW,GAGEub,EAAAA,GAAAA,IAAevb,EAAWwO,2BAA4B/N,EAAMwK,SAF1D,IAGX,CAQAmO,WAAAA,GACE,OAAOlZ,KAAK8U,QACd,CAQA4E,WAAAA,GACE,OAAO1Z,KAAK2X,SACd,CAUA2D,cAAAA,CAAe9X,GACb,MAAMiW,EAAUzZ,KAAK4X,gBAAgBpU,EAAGsV,YACxC,YAAmB7Y,IAAZwZ,EAAwBA,EAAU,IAC3C,CAUAL,eAAAA,GACE,OAAOpZ,KAAK+U,YACd,CAQAuE,aAAAA,GACE,OAAkCtZ,KAAKqM,IAAI4I,EAC7C,CAOAhK,SAAAA,CAAUb,GACR,MAAMmR,EAAQvb,KAAKsZ,gBACnB,GAAIlP,aAAkBU,EAAAA,EAEpB,YADAyQ,EAAMtQ,UAAUb,GAIlB,MAAMkC,EAAaiP,EAAMnQ,YACzBkB,EAAWnG,QACXmG,EAAWkP,OAAOpR,EACpB,CAOAgB,SAAAA,GAEE,OADepL,KAAKsZ,gBAAgBlO,WAEtC,CAKAqQ,oBAAAA,GACE,MAAMtL,EAAmBnQ,KAAKsZ,gBAAgB3M,sBAC9C,IAAK,IAAIvF,EAAI,EAAGwE,EAAKuE,EAAiB/L,OAAQgD,EAAIwE,IAAMxE,EAAG,CACzD,MAAM2B,EAAQoH,EAAiB/I,GAC/B,IAAK2B,EAAMsE,QACT,SAEF,MAAMqO,EAAW3S,EAAMc,MAAM8G,cAC7B,GAAI+K,IAAaA,EAASC,MACxB,OAAO,EAET,MAAM/K,EAAS7H,EAAMc,MAAMgH,YAC3B,GAAID,GAAUA,EAAOgL,QACnB,OAAO,CAEX,CACA,OAAO,CACT,CASAC,sBAAAA,CAAuBpb,GACrB,MAAMqb,GAAiBC,EAAAA,EAAAA,IACrBtb,EACAT,KAAKmb,UAAUC,iBAEjB,OAAOpb,KAAKgc,+BAA+BF,EAC7C,CAQAE,8BAAAA,CAA+Bvb,GAC7B,MAAMX,EAAaE,KAAKqW,YACxB,OAAKvW,GAGEub,EAAAA,GAAAA,IACLvb,EAAWuO,2BACX5N,EAAWsK,MAAM,EAAG,IAJb,IAMX,CAMA4F,WAAAA,GACE,OAAO3Q,KAAK6X,SACd,CAQA4C,OAAAA,GACE,OACEza,KAAKqM,IAAI4I,EAEb,CASAkG,OAAAA,GACE,OAA4Bnb,KAAKqM,IAAI4I,EACvC,CAOAzT,WAAAA,GACE,OAAOxB,KAAK0W,SACd,CASAuF,mBAAAA,GACE,OAAOjc,KAAK6W,iBACd,CASAqF,4BAAAA,GACE,OAAOlc,KAAKgX,0BACd,CAKAnS,gBAAAA,GACE,MAAMsX,EAAgBnc,KAAKib,mBAC3B,OAAOkB,EAAgBA,EAAcC,cAAgBhK,QACvD,CASA6F,eAAAA,CAAgBnP,EAAMuT,EAAeC,EAAYC,GAC/C,OJ18BG,SACLzc,EACAgJ,EACAuT,EACAC,EACAC,GAIA,IAAKzc,KAAgBuc,KAAiBvc,EAAW0c,aAC/C,OAAO9W,EAET,IAAK5F,EAAW0c,YAAYH,GAAevT,EAAKT,UAC9C,OAAO3C,EAQT,MAAMiJ,EAAS7O,EAAWsO,UAAUO,OAC9B8N,EAASH,EAAW,GAAK3N,EAAO,GAChC+N,EAASJ,EAAW,GAAK3N,EAAO,GACtC,OACE,MAAQvJ,KAAKuX,IAAIJ,GACjBnX,KAAKwX,KAAKH,EAASA,EAASC,EAASA,GAAUH,CAEnD,CI86BWtE,CACLjY,KAAKqW,YACLvN,EACAuT,EACAC,EACAC,EAEJ,CAMA/G,kBAAAA,CAAmBqH,EAAcjd,GAC/BA,EAAOA,GAAQid,EAAajd,KAC5B,MAAMkd,EAAkB,IAAIha,EAAgBlD,EAAMI,KAAM6c,GACxD7c,KAAK+c,sBAAsBD,EAC7B,CAKAC,qBAAAA,CAAsBD,GACpB,IAAK9c,KAAKqW,YAGR,OAEF,MAAMnW,EAAgB4c,EAAgB5c,cAChC8c,EAAY9c,EAAcN,KAChC,GACEod,IAAclb,GACdkb,IAAcza,EAAAA,EAAU0a,OACxBD,IAAcza,EAAAA,EAAU2a,QACxB,CACA,MAAMtY,EAAM5E,KAAK6E,mBACXsY,EAAWnd,KAAK0W,UAAU1R,YAC5BhF,KAAK0W,UAAU1R,cACfJ,EACEhB,EAA8B1D,EAAc0D,OAE5CwZ,EACJD,aAAoBE,WAChBF,EAASG,OAAS1Z,EAChBuZ,EAASG,KAAKlB,cACde,EACFA,IAAavY,EACXA,EAAI2Y,gBACJJ,EACR,GAGEnd,KAAKgX,2BAA2BwG,SAAS5Z,KAKxCwZ,EAAWI,SAAS5Z,GAErB,MAEJ,CAEA,GADAkZ,EAAgBhd,WAAaE,KAAKqW,aACU,IAAxCrW,KAAKiD,cAAc6Z,GAA4B,CACjD,MAAMW,EAAoBzd,KAAKoZ,kBAAkBzN,WAAWZ,QAC5D,IAAK,IAAI3D,EAAIqW,EAAkBrZ,OAAS,EAAGgD,GAAK,EAAGA,IAAK,CACtD,MAAM4R,EAAcyE,EAAkBrW,GACtC,GACE4R,EAAYvH,WAAazR,OACxBgZ,EAAY0E,cACZ1d,KAAKib,mBAEN,SAGF,IADajC,EAAY2E,YAAYb,IACxBA,EAAgBc,mBAC3B,KAEJ,CACF,CACF,CAKAC,gBAAAA,GACE,MAAM/d,EAAaE,KAAKqW,YAWlByH,EAAY9d,KAAK+X,WACvB,IAAK+F,EAAUzW,UAAW,CACxB,IAAIkC,EAAkBvJ,KAAKyV,iBACvBjM,EAAcD,EAClB,GAAIzJ,EAAY,CACd,MAAMie,EAAQje,EAAWke,UACzB,GAAID,EAAME,EAAAA,EAASC,YAAcH,EAAME,EAAAA,EAASE,aAAc,CAC5D,MAAMC,EAAmBC,KAAKC,MAAQxe,EAAWye,KAAO,EACxDhV,EAAkB6U,EAAmB,EAAI,EACzC5U,EAAc4U,EAAmB,EAAI,CACvC,CACF,CACIN,EAAUjV,kBAAoBU,IAChCuU,EAAU/V,eACV+V,EAAUxU,cAAcC,EAAiBC,GAE7C,CAEI1J,GAAcE,KAAK6X,YAAc/X,EAAW0e,UAC1Cxe,KAAKqV,iBACHrV,KAAKiT,YAAYI,EAAAA,EAAgBoL,iBACnCze,KAAK6X,UAAU5J,oBACboF,EAAAA,EAAgBoL,eAChB3e,IAGiB,IAAjBE,KAAKsV,UACPtV,KAAKsV,SAAU,EACftV,KAAKiD,cACH,IAAIxD,EAASif,EAAAA,EAAaC,QAAS3e,KAAMF,OAGnB,IAAjBE,KAAKsV,UACdtV,KAAKsV,SAAU,EACftV,KAAKiD,cACH,IAAIxD,EAASif,EAAAA,EAAaE,UAAW5e,KAAMF,MAKjD,MAAMgS,EAAsB9R,KAAK8X,qBACjC,GAAIhY,EACF,IAAK,IAAIsH,EAAI,EAAGwE,EAAKkG,EAAoB1N,OAAQgD,EAAIwE,IAAMxE,EACzD0K,EAAoB1K,GAAGpH,KAAMF,GAGjCgS,EAAoB1N,OAAS,CAC/B,CAKAiU,kBAAAA,GACMrY,KAAKmb,YAAcnb,KAAKmb,UAAU0D,gBACpC7e,KAAKmb,UAAU2D,mBAAmB,GAGpC9e,KAAK+T,QACP,CAKAuE,oBAAAA,GACE,GAAItY,KAAKiX,wBAAyB,CAChC,IAAK,IAAI7P,EAAI,EAAGwE,EAAK5L,KAAKmX,yBAAyB/S,OAAQgD,EAAIwE,IAAMxE,GACnE9C,EAAAA,EAAAA,IAActE,KAAKmX,yBAAyB/P,IAE9CpH,KAAKmX,yBAA2B,KAChCnX,KAAK0W,UAAUjR,oBACblD,EAAAA,EAAUwc,YACV/e,KAAKuV,0BAEPvV,KAAK0W,UAAUjR,oBACblD,EAAAA,EAAU0a,MACVjd,KAAKuV,0BAEPvV,KAAKiX,wBAAwB+H,UAC7Bhf,KAAKiX,wBAA0B,KAC/BjX,KAAK0W,UAAUvD,QACjB,CAEA,GAAInT,KAAKoX,eAAgB,CACvBpX,KAAKqX,gBAAgB4H,UAAUjf,KAAKoX,gBACpC,MAAM+F,EAAWnd,KAAKoX,eAAepS,cACjCmY,aAAoBE,YACtBrd,KAAKqX,gBAAgB4H,UAAU9B,EAASG,MAE1Ctd,KAAKkf,aAAQjf,EACf,CAOA,MAAM2D,EAAS5D,KAAKgb,YACdmB,EACc,kBAAXvY,EAAsBwO,SAASwC,eAAehR,GAAUA,EAEjE,GADA5D,KAAKoX,eAAiB+E,EACjBA,EAYE,CACLA,EAAcpF,YAAY/W,KAAK0W,WAC1B1W,KAAK6X,YACR7X,KAAK6X,UAAY,IAAIsH,GAAqBnf,OAG5CA,KAAKiX,wBAA0B,IAAIpW,EACjCb,KACAA,KAAKqB,gBAEP,IAAK,MAAMkG,KAAOxE,EAAAA,EAChB/C,KAAKiX,wBAAwB3U,iBAC3BS,EAAAA,EAAoBwE,GACpBvH,KAAK+c,sBAAsB1a,KAAKrC,OAcpC,IAAI2U,EACJ,GAZA3U,KAAK0W,UAAUpU,iBACbC,EAAAA,EAAUwc,YACV/e,KAAKuV,0BACL,GAEFvV,KAAK0W,UAAUpU,iBACbC,EAAAA,EAAU0a,MACVjd,KAAKuV,2BACL9S,EAAAA,IAA0B,CAACC,SAAS,IAIjC1C,KAAKkX,qBAORvC,EAAsB3U,KAAKkX,yBAPG,CAE9B,MAAMkI,EAAajD,EAAcnX,cAGjC2P,EADEyK,aAAsB/B,WAAa+B,EAAW9B,KAAOnB,CAEzD,CAIAnc,KAAKmX,yBAA2B,EAC9BtV,EAAAA,EAAAA,IACE8S,EACApS,EAAAA,EAAU2a,QACVld,KAAKwV,mBACLxV,OAEF6B,EAAAA,EAAAA,IACE8S,EACApS,EAAAA,EAAU8c,SACVrf,KAAKwV,mBACLxV,OAGJ,MAAMmd,EAAWhB,EAAcnX,cAC3BmY,aAAoBE,YACtBrd,KAAKqX,gBAAgBiI,QAAQnC,EAASG,MAExCtd,KAAKqX,gBAAgBiI,QAAQnD,EAC/B,MApEMnc,KAAK6X,YACP3U,aAAalD,KAAK8V,0BAClB9V,KAAK8V,8BAA2B7V,EAChCD,KAAK8X,qBAAqB1T,OAAS,EACnCpE,KAAK6X,UAAUmH,UACfhf,KAAK6X,UAAY,MAEf7X,KAAK+V,qBACPwJ,qBAAqBvf,KAAK+V,oBAC1B/V,KAAK+V,wBAAqB9V,GA6D9BD,KAAKuX,YAGP,CAKAW,iBAAAA,GACElY,KAAK+T,QACP,CAKAyL,0BAAAA,GACExf,KAAK+T,QACP,CAKAqE,kBAAAA,GACMpY,KAAKuW,4BACPjS,EAAAA,EAAAA,IAActE,KAAKuW,0BACnBvW,KAAKuW,yBAA2B,MAE9BvW,KAAKwW,0BACPlS,EAAAA,EAAAA,IAActE,KAAKwW,wBACnBxW,KAAKwW,uBAAyB,MAEhC,MAAMtB,EAAOlV,KAAKmb,UACdjG,IACFlV,KAAKyf,oBAAoBzf,KAAKya,WAE9Bza,KAAKuW,0BAA2B1U,EAAAA,EAAAA,IAC9BqT,EACAnJ,EAAAA,EAAgBC,eAChBhM,KAAKwf,2BACLxf,MAEFA,KAAKwW,wBAAyB3U,EAAAA,EAAAA,IAC5BqT,EACA3S,EAAAA,EAAUqG,OACV5I,KAAKwf,2BACLxf,MAGFkV,EAAK4J,mBAAmB,IAE1B9e,KAAK+T,QACP,CAKAoE,wBAAAA,GACMnY,KAAKyW,kCACPzW,KAAKyW,gCAAgCpS,QAAQC,EAAAA,IAC7CtE,KAAKyW,gCAAkC,MAEzC,MAAM5B,EAAa7U,KAAKsZ,gBACpBzE,IACF7U,KAAKuZ,gBAAgB,IAAI3P,EAAW,WAAYiL,IAChD7U,KAAKyW,gCAAkC,EACrC5U,EAAAA,EAAAA,IAAOgT,EAAY9I,EAAAA,EAAgBC,eAAgBhM,KAAK+T,OAAQ/T,OAChE6B,EAAAA,EAAAA,IAAOgT,EAAYtS,EAAAA,EAAUqG,OAAQ5I,KAAK+T,OAAQ/T,OAClD6B,EAAAA,EAAAA,IAAOgT,EAAY,WAAY7U,KAAKuZ,gBAAiBvZ,OACrD6B,EAAAA,EAAAA,IAAOgT,EAAY,cAAe7U,KAAK0f,mBAAoB1f,QAG/DA,KAAK+T,QACP,CAKA4L,UAAAA,GACE,QAAS3f,KAAKqW,WAChB,CAKAL,eAAAA,GACEhW,KAAK+V,wBAAqB9V,EAC1BD,KAAK4f,aAAavB,KAAKC,MACzB,CAMAuB,UAAAA,GACM7f,KAAK+V,oBACPwJ,qBAAqBvf,KAAK+V,oBAE5B/V,KAAKgW,iBACP,CAKA7D,UAAAA,GACE,IAAKnS,KAAKqW,YACR,OAEF,MAAMnG,EAAclQ,KAAKqW,YAAYlG,iBACrC,IAAK,IAAI/I,EAAI,EAAGwE,EAAKsE,EAAY9L,OAAQgD,EAAIwE,IAAMxE,EAAG,CACpD,MAAMyC,EAAQqG,EAAY9I,GAAGyC,MACzBA,EAAM2G,eACR3G,EAAM8G,cAAcmP,oBAExB,CACF,CAMA/L,MAAAA,GACM/T,KAAK6X,gBAAyC5X,IAA5BD,KAAK+V,qBACzB/V,KAAK+V,mBAAqBgK,sBAAsB/f,KAAKgW,iBAEzD,CASAgK,aAAAA,CAAcjH,GACZ,OAAO/Y,KAAKkZ,cAAc/F,OAAO4F,EACnC,CASAkH,iBAAAA,CAAkBjH,GAChB,OAAOhZ,KAAKoZ,kBAAkBjG,OAAO6F,EACvC,CASAkH,WAAAA,CAAYrW,GAEV,OADe7J,KAAKsZ,gBAAgBlO,YACtB+H,OAAOtJ,EACvB,CAMA6V,kBAAAA,CAAmBnc,GACjB6Q,GAAuB7Q,EAAMsG,MAC/B,CASAsW,aAAAA,CAAc1G,GACZ,OAAOzZ,KAAK0Z,cAAcvG,OAAOsG,EACnC,CAMAmG,YAAAA,CAAarB,GACX,MAAM/P,EAAOxO,KAAKya,UACZvF,EAAOlV,KAAKmb,UACZiF,EAAqBpgB,KAAKqW,YAEhC,IAAIvW,EAAa,KACjB,QAAaG,IAATuO,IAAsB6R,EAAAA,GAAAA,IAAQ7R,IAAS0G,GAAQA,EAAKoL,QAAS,CAC/D,MAAMtC,EAAY9I,EAAKqL,SACrBvgB,KAAKqW,YAAcrW,KAAKqW,YAAY2H,eAAY/d,GAE5CmO,EAAY8G,EAAKlM,WA2BvB,GA1BAlJ,EAAa,CACX0e,SAAS,EACTnQ,2BAA4BrO,KAAKiW,4BACjCxC,UAAW,KACX7F,QAAQ4S,EAAAA,EAAAA,IACNpS,EAAUO,OACVP,EAAUK,WACVL,EAAUM,SACVF,GAEFxH,MAAOhH,KAAKoW,cACZxC,WAAY,EACZzD,iBAAkBnQ,KAAKsZ,gBAAgB3M,sBACvCiJ,WAAY5V,KAAK2V,YACjBrH,2BAA4BtO,KAAKmW,4BACjCrE,oBAAqB,GACrBtD,KAAMA,EACNsP,UAAW9d,KAAK+X,WAChBwG,KAAMA,EACNkC,UAAW,CAAC,EACZrS,UAAWA,EACX4P,UAAWA,EACXxB,YAAa,CAAC,EACdkE,OAAOvU,EAAAA,EAAAA,IAAOnM,MACd2gB,cAAe,CAAC,GAEdvS,EAAUwS,YAAcxS,EAAUyS,eAAgB,CACpD,MAAMnS,EAAWoS,MAAM1S,EAAU2S,cAC7B3S,EAAUM,SACVN,EAAU2S,aAEdjhB,EAAWkhB,YAAaR,EAAAA,EAAAA,IACtBpS,EAAUwS,WACVxS,EAAUyS,eACVnS,EACAF,EAEJ,CACF,CAKA,GAHAxO,KAAKqW,YAAcvW,EACnBE,KAAK6X,UAAUnG,YAAY5R,GAEvBA,EAAY,CASd,GARIA,EAAW0e,SACbxe,KAAK+T,SAEPnJ,MAAMqW,UAAUnc,KAAKsD,MACnBpI,KAAK8X,qBACLhY,EAAWgS,qBAGTsO,EAAoB,GAEnBpgB,KAAKsW,mBACJjP,EAAAA,EAAAA,IAAQrH,KAAKsW,oBACZ4K,EAAAA,EAAAA,IAAaphB,EAAW8N,OAAQ5N,KAAKsW,oBAExCtW,KAAKiD,cACH,IAAIxD,EAASif,EAAAA,EAAayC,UAAWnhB,KAAMogB,IAE7CpgB,KAAKsW,iBAAkB8K,EAAAA,EAAAA,IAAoBphB,KAAKsW,iBAEpD,CAGEtW,KAAKsW,kBACJxW,EAAWke,UAAUC,EAAAA,EAASC,aAC9Bpe,EAAWke,UAAUC,EAAAA,EAASE,gBAC9B+C,EAAAA,EAAAA,IAAaphB,EAAW8N,OAAQ5N,KAAKsW,mBAGtCtW,KAAKiD,cACH,IAAIxD,EAASif,EAAAA,EAAa2C,QAASrhB,KAAMF,KAE3CwhB,EAAAA,EAAAA,IAAMxhB,EAAW8N,OAAQ5N,KAAKsW,iBAElC,CAEAtW,KAAKiD,cAAc,IAAIxD,EAASif,EAAAA,EAAa6C,WAAYvhB,KAAMF,IAE/DE,KAAKqV,iBACFrV,KAAKiT,YAAYyL,EAAAA,EAAaE,YAC7B5e,KAAKiT,YAAYyL,EAAAA,EAAaC,UAC9B3e,KAAKiT,YAAYI,EAAAA,EAAgBoL,mBAClCze,KAAK+X,WAAWlP,oBAChB7I,KAAK+X,WAAWjR,aAChB9G,KAAKyb,uBAEHzb,KAAK8V,2BACR9V,KAAK8V,yBAA2B1S,YAAW,KACzCpD,KAAK8V,8BAA2B7V,EAChCD,KAAK6d,qBACJ,GAEP,CAQA2D,aAAAA,CAAc3M,GACZ,MAAM4M,EAAgBzhB,KAAKsZ,gBACvBmI,GACFzhB,KAAK0f,mBAAmB,IAAI9V,EAAW,cAAe6X,IAExDzhB,KAAKwM,IAAIyI,EAAwBJ,EACnC,CAQAqK,OAAAA,CAAQ1Q,GACNxO,KAAKwM,IAAIyI,EAAkBzG,EAC7B,CAYAoL,SAAAA,CAAUhW,GACR5D,KAAKwM,IAAIyI,EAAoBrR,EAC/B,CAWA8U,OAAAA,CAAQxD,GACN,IAAKA,GAAQA,aAAgBC,EAAAA,GAE3B,YADAnV,KAAKwM,IAAIyI,EAAkBC,GAG7BlV,KAAKwM,IAAIyI,EAAkB,IAAIE,EAAAA,IAE/B,MAAMtV,EAAMG,KACZkV,EAAKsD,MAAK,SAAUC,GAClB5Y,EAAI6Y,QAAQ,IAAIvD,EAAAA,GAAKsD,GACvB,GACF,CAOAlB,UAAAA,GACE,MAAM4E,EAAgBnc,KAAKib,mBAE3B,IAAIzM,EACJ,GAAI2N,EAAe,CACjB,MAAMuF,EAAgBC,iBAAiBxF,GACjC3J,EACJ2J,EAAcyF,YACdC,WAAWH,EAA+B,iBAC1CG,WAAWH,EAA2B,aACtCG,WAAWH,EAA4B,cACvCG,WAAWH,EAAgC,kBACvCjP,EACJ0J,EAAc2F,aACdD,WAAWH,EAA8B,gBACzCG,WAAWH,EAA0B,YACrCG,WAAWH,EAA6B,eACxCG,WAAWH,EAAiC,mBACzCZ,MAAMtO,IAAWsO,MAAMrO,KAC1BjE,EAAO,CAACpJ,KAAKqI,IAAI,EAAG+E,GAAQpN,KAAKqI,IAAI,EAAGgF,MAErC4N,EAAAA,GAAAA,IAAQ7R,KAEP2N,EAAcyF,aACdzF,EAAc2F,cACd3F,EAAc4F,iBAAiB3d,UAGjC4d,EAAAA,EAAAA,IACE,qEAIR,CAEA,MAAMC,EAAUjiB,KAAKya,WACjBjM,GAAUyT,IAAYC,EAAAA,EAAAA,IAAO1T,EAAMyT,KACrCjiB,KAAKkf,QAAQ1Q,GACbxO,KAAKyf,oBAAoBjR,GAE7B,CAOAiR,mBAAAA,CAAoBjR,GAClB,MAAM0G,EAAOlV,KAAKmb,UACdjG,GACFA,EAAKiN,gBAAgB3T,EAEzB,EA8FF,W,yDCtzDA,MAAM4T,EAIJziB,WAAAA,CAAYsK,GAKVjK,KAAKqiB,SAAWpY,EAAQmD,QAMxBpN,KAAKsiB,gBAAkBrY,EAAQsY,eAM/BviB,KAAKwiB,UAAYvY,EAAQyE,SAMzB1O,KAAKyiB,OAASxY,EAAQyY,MAMtB1iB,KAAK2iB,aAAcC,EAAAA,EAAAA,IAAO3Y,EAAQyY,OAMlC1iB,KAAK6iB,cAAgB5Y,EAAQ6Y,aAM7B9iB,KAAK+iB,eAAiB9Y,EAAQ+Y,aAChC,CAOA1B,KAAAA,GACE,MAAMoB,EAAQ1iB,KAAKijB,WACnB,OAAO,IAAIb,EAAW,CACpBhV,QAASpN,KAAKkjB,aACdR,MAAO9X,MAAMC,QAAQ6X,GAASA,EAAM3X,QAAU2X,EAC9ChU,SAAU1O,KAAKmjB,cACfZ,eAAgBviB,KAAKojB,oBACrBN,aAAc9iB,KAAKqjB,kBAAkBtY,QACrCiY,cAAehjB,KAAKsjB,oBAExB,CAOAJ,UAAAA,GACE,OAAOljB,KAAKqiB,QACd,CAOAe,iBAAAA,GACE,OAAOpjB,KAAKsiB,eACd,CAOAa,WAAAA,GACE,OAAOnjB,KAAKwiB,SACd,CAOAS,QAAAA,GACE,OAAOjjB,KAAKyiB,MACd,CAMAc,aAAAA,GACE,OAAOvjB,KAAK2iB,WACd,CAOAU,eAAAA,GACE,OAAOrjB,KAAK6iB,aACd,CAOAS,gBAAAA,GACE,OAAOtjB,KAAK+iB,cACd,CAQAS,SAAAA,GACE,OAAOtV,EAAAA,EAAAA,KACT,CAQAuV,QAAAA,CAAS7N,GACP,OAAO1H,EAAAA,EAAAA,KACT,CAMAwV,oBAAAA,GACE,OAAOxV,EAAAA,EAAAA,KACT,CAOAyV,aAAAA,CAAc/N,GACZ,OAAO,CACT,CAMAgO,aAAAA,GACE,OAAO1V,EAAAA,EAAAA,KACT,CAMA2V,YAAAA,GACE,OAAO3V,EAAAA,EAAAA,KACT,CAOA4V,SAAAA,GACE,OAAO5V,EAAAA,EAAAA,KACT,CAOAuM,OAAAA,GACE,OAAOvM,EAAAA,EAAAA,KACT,CAQA6V,eAAAA,CAAgBjB,GACd9iB,KAAK6iB,cAAgBC,CACvB,CAQAkB,UAAAA,CAAW5W,GACTpN,KAAKqiB,SAAWjV,CAClB,CAQA6W,iBAAAA,CAAkB1B,GAChBviB,KAAKsiB,gBAAkBC,CACzB,CAQA2B,WAAAA,CAAYxV,GACV1O,KAAKwiB,UAAY9T,CACnB,CAQAyV,QAAAA,CAASzB,GACP1iB,KAAKyiB,OAASC,EACd1iB,KAAK2iB,aAAcC,EAAAA,EAAAA,IAAOF,EAC5B,CAMA0B,iBAAAA,CAAkBC,IAChBnW,EAAAA,EAAAA,KACF,CAMAvE,IAAAA,IACEuE,EAAAA,EAAAA,KACF,CAMAoW,mBAAAA,CAAoBD,IAClBnW,EAAAA,EAAAA,KACF,CAKAyN,KAAAA,GACE,OAAO4I,QAAQC,SACjB,EAGF,S,0GC9QA,MAAMC,GAAevO,EAAAA,EAAAA,MAGfwO,EAAW,CAACC,IAAKA,KAcvB,MAAMC,UAAiBnQ,EAAAA,EACrB9U,WAAAA,GACEI,QAMAC,KAAK6kB,SAAUC,EAAAA,EAAAA,MAMf9kB,KAAK+kB,iBAAmB,EAMxB/kB,KAAKglB,yCAA2C,EAMhDhlB,KAAKilB,2BAA6B,EAUlCjlB,KAAKklB,6BAA8BC,EAAAA,EAAAA,KACjC,CAACC,EAAUC,EAAkBC,KAC3B,IAAKA,EACH,OAAOtlB,KAAKulB,sBAAsBF,GAEpC,MAAM/D,EAAQthB,KAAKshB,QAEnB,OADAA,EAAMjG,eAAeiK,GACdhE,EAAMiE,sBAAsBF,KAGzC,CASAG,mBAAAA,CAAoBH,EAAkBC,GACpC,OAAOtlB,KAAKklB,4BACVllB,KAAKylB,cACLJ,EACAC,EAEJ,CAOAhE,KAAAA,GACE,OAAOpT,EAAAA,EAAAA,KACT,CAUAwX,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,OAAO5X,EAAAA,EAAAA,KACT,CAOA6X,UAAAA,CAAWJ,EAAGC,GACZ,OAAiE,IAA1D5lB,KAAK0lB,eAAeC,EAAGC,EAAGlB,EAAUsB,OAAOC,UACpD,CAUAC,eAAAA,CAAgBC,EAAON,GAGrB,OAFAA,EAAeA,GAA8B,CAAClB,IAAKA,KACnD3kB,KAAK0lB,eAAeS,EAAM,GAAIA,EAAM,GAAIN,EAAclgB,KAC/CkgB,CACT,CASAO,oBAAAA,CAAqB3lB,GACnB,OAAOT,KAAK+lB,WAAWtlB,EAAW,GAAIA,EAAW,GACnD,CAQA4lB,aAAAA,CAAczY,GACZ,OAAOM,EAAAA,EAAAA,KACT,CAQA6B,SAAAA,CAAUnC,GACR,GAAI5N,KAAK+kB,iBAAmB/kB,KAAKylB,cAAe,CAC9C,MAAM7X,EAAS5N,KAAKqmB,cAAcrmB,KAAK6kB,UACnC/D,MAAMlT,EAAO,KAAOkT,MAAMlT,EAAO,OACnCwT,EAAAA,EAAAA,IAAoBxT,GAEtB5N,KAAK+kB,gBAAkB/kB,KAAKylB,aAC9B,CACA,OAAOa,EAAAA,EAAAA,IAAetmB,KAAK6kB,QAASjX,EACtC,CAUA2Y,MAAAA,CAAOC,EAAOC,IACZvY,EAAAA,EAAAA,KACF,CAYAwU,KAAAA,CAAMgE,EAAIC,EAAIF,IACZvY,EAAAA,EAAAA,KACF,CAWA0Y,QAAAA,CAASC,GACP,OAAO7mB,KAAKulB,sBAAsBsB,EAAYA,EAChD,CAUAtB,qBAAAA,CAAsBF,GACpB,OAAOnX,EAAAA,EAAAA,KACT,CAOA4Y,OAAAA,GACE,OAAO5Y,EAAAA,EAAAA,KACT,CAWAmN,cAAAA,CAAe0L,IACb7Y,EAAAA,EAAAA,KACF,CAQA8Y,gBAAAA,CAAiBpZ,GACf,OAAOM,EAAAA,EAAAA,KACT,CAUA+Y,SAAAA,CAAUxK,EAAQC,IAChBxO,EAAAA,EAAAA,KACF,CAiBAoX,SAAAA,CAAU1U,EAAQsW,GAEhB,MAAMC,GAAa/L,EAAAA,EAAAA,IAAcxK,GAC3BmW,EACqB,eAAzBI,EAAWC,WACP,SAAUC,EAAeC,EAAgBC,GACvC,MAAMC,EAAcL,EAAWpX,YACzB0X,EAAkBN,EAAWO,iBAC7BhF,GAAQiF,EAAAA,EAAAA,IAAUF,IAAmBE,EAAAA,EAAAA,IAAUH,IACrDjZ,EAAAA,EAAAA,IACEkW,EACAgD,EAAgB,GAChBA,EAAgB,GAChB/E,GACCA,EACD,EACA,EACA,GAEF,MAAMkF,GAAcC,EAAAA,EAAAA,IAClBR,EACA,EACAA,EAAcjjB,OACdmjB,EACA9C,EACA6C,GAEIQ,GAAgBC,EAAAA,EAAAA,IAAaZ,EAAYD,GAC/C,OAAIY,EACKA,EAAcF,EAAaA,EAAaL,GAE1CK,CACT,GACAG,EAAAA,EAAAA,IAAaZ,EAAYD,GAE/B,OADAlnB,KAAKqb,eAAe0L,GACb/mB,IACT,EAGF,S,2CCnVA,IAAIgoB,EAAQ,CAAC,EAcN,SAAS3b,EAAI4b,GAClB,OACED,EAAMC,IACND,EAAMC,EAAKC,QAAQ,yCAA0C,aAC7D,IAEJ,CAOO,SAASC,EAAIF,EAAMxY,GACxBuY,EAAMC,GAAQxY,CAChB,C,iCC7BA,SAMEnE,IAAK,MAMLE,OAAQ,S,mECRV,MAAM4c,EACJzoB,WAAAA,GAKEK,KAAKqoB,OAAS,CAAC,EAMfroB,KAAKsoB,cAAgB,CAAC,EAMtBtoB,KAAKuoB,WAAa,EAMlBvoB,KAAKwoB,cAAgB,IACvB,CAKAriB,KAAAA,GACEnG,KAAKqoB,OAAS,CAAC,EACfroB,KAAKsoB,cAAgB,CAAC,EACtBtoB,KAAKuoB,WAAa,CACpB,CAKA1W,cAAAA,GACE,OAAO7R,KAAKuoB,WAAavoB,KAAKwoB,aAChC,CAKAxW,MAAAA,GACE,GAAIhS,KAAK6R,iBAAkB,CACzB,IAAIzK,EAAI,EACR,IAAK,MAAMG,KAAOvH,KAAKqoB,OAAQ,CAC7B,MAAMI,EAAYzoB,KAAKqoB,OAAO9gB,GACZ,KAAP,EAANH,MAAmBqhB,EAAUxV,uBACzBjT,KAAKqoB,OAAO9gB,UACZvH,KAAKsoB,cAAc/gB,KACxBvH,KAAKuoB,WAEX,CACF,CACF,CAQAlc,GAAAA,CAAIqc,EAAKC,EAAaC,GACpB,MAAMrhB,EAAMshB,EAAYH,EAAKC,EAAaC,GAC1C,OAAOrhB,KAAOvH,KAAKqoB,OAASroB,KAAKqoB,OAAO9gB,GAAO,IACjD,CAQAuhB,UAAAA,CAAWJ,EAAKC,EAAaC,GAC3B,MAAMrhB,EAAMshB,EAAYH,EAAKC,EAAaC,GAC1C,OAAOrhB,KAAOvH,KAAKsoB,cAAgBtoB,KAAKsoB,cAAc/gB,GAAO,IAC/D,CASAiF,GAAAA,CAAIkc,EAAKC,EAAaC,EAAOH,EAAWM,GACtC,MAAMxhB,EAAMshB,EAAYH,EAAKC,EAAaC,GACpCI,EAASzhB,KAAOvH,KAAKqoB,OAC3BroB,KAAKqoB,OAAO9gB,GAAOkhB,EACfM,IACEN,EAAU7E,kBAAoBqF,EAAAA,EAAWvf,MAC3C+e,EAAU9e,OAER8e,EAAU7E,kBAAoBqF,EAAAA,EAAWC,QAC3CT,EAAU9M,QAAQnD,MAAK,KACrBxY,KAAKsoB,cAAc/gB,IAAO4hB,EAAAA,EAAAA,MAA2BC,cACnDX,EAAUhF,SAAS,GACnB,aAIJzjB,KAAKsoB,cAAc/gB,IAAO4hB,EAAAA,EAAAA,MAA2BC,cACnDX,EAAUhF,SAAS,GACnB,WAIDuF,KACDhpB,KAAKuoB,UAEX,CASArJ,OAAAA,CAAQmK,GACNrpB,KAAKwoB,cAAgBa,EACrBrpB,KAAKgS,QACP,EASK,SAAS6W,EAAYH,EAAKC,EAAaC,GAE5C,OAAOD,EAAc,IAAMD,EAAM,KADbE,GAAQU,EAAAA,EAAAA,IAAQV,GAAS,OAE/C,CASO,MAAMW,EAAS,IAAInB,C,iCCvJ1B,SACE1e,KAAM,EACNwf,QAAS,EACThgB,OAAQ,EACRC,MAAO,EACPC,MAAO,E,6HCHT,IAAIogB,GAAkB,EA+Hf,SAASC,EAAIC,EAAKC,GAWvB,OAAO,SAAU/b,EAAQa,EAAYgB,EAAYma,EAASC,IAvFrD,SACLH,EACAC,EACA/b,EACAa,EACAgB,EACAma,EACAC,GAEA,MAAMJ,EAAM,IAAIK,eAChBL,EAAIM,KACF,MACe,oBAARL,EAAqBA,EAAI9b,EAAQa,EAAYgB,GAAcia,GAClE,GAEsB,eAApBC,EAAO7C,YACT2C,EAAIO,aAAe,eAErBP,EAAID,gBAAkBA,EAKtBC,EAAIQ,OAAS,SAAU1mB,GAErB,IAAKkmB,EAAIS,QAAWT,EAAIS,QAAU,KAAOT,EAAIS,OAAS,IAAM,CAC1D,MAAMtqB,EAAO+pB,EAAO7C,UACpB,IAEE,IAAIlW,EACQ,QAARhR,GAA0B,QAARA,EACpBgR,EAAS6Y,EAAIU,aACI,OAARvqB,EACTgR,EAAS6Y,EAAIW,aAAeX,EAAIU,aACf,eAARvqB,IACTgR,EAAqC6Y,EAAIY,UAEvCzZ,EACFgZ,EAGID,EAAOW,aAAa1Z,EAAQ,CAC1BhD,OAAQA,EACR2c,kBAAmB9a,IAGvBka,EAAOa,eAAe5Z,IAGxBiZ,GAEJ,CAAE,MAAAY,GACAZ,GACF,CACF,MACEA,GAEJ,EAIAJ,EAAIiB,QAAUb,EACdJ,EAAIkB,MACN,CAyBIC,CACElB,EACAC,EACA/b,EACAa,EACAgB,GAMA,CAACuK,EAAU6Q,KACT7qB,KAAK8qB,YAAY9Q,QACD/Z,IAAZ2pB,GACFA,EAAQ5P,MAGZ,KACEha,KAAKmL,eACWlL,IAAZ4pB,GACFA,MAIR,CACF,C,sBChKO,SAASkB,EAAInd,EAAQa,GAC1B,MAAO,CAAC,EAAE9I,KAAWA,IAAUA,IAAUA,KAC3C,C,4CC4MA,QAvMA,MAIEhG,WAAAA,CAAYqrB,GAKVhrB,KAAKirB,OAAS,IAAIC,EAAAA,EAAOF,GAQzBhrB,KAAKmrB,OAAS,CAAC,CACjB,CAOAC,MAAAA,CAAOxd,EAAQjJ,GAEb,MAAM0mB,EAAO,CACXC,KAAM1d,EAAO,GACb2d,KAAM3d,EAAO,GACb4d,KAAM5d,EAAO,GACb6d,KAAM7d,EAAO,GACbjJ,MAAOA,GAGT3E,KAAKirB,OAAOG,OAAOC,GACnBrrB,KAAKmrB,QAAOhf,EAAAA,EAAAA,IAAOxH,IAAU0mB,CAC/B,CAOA1hB,IAAAA,CAAK+hB,EAAS1nB,GACZ,MAAM2nB,EAAQ,IAAI/gB,MAAM5G,EAAOI,QAC/B,IAAK,IAAIgD,EAAI,EAAGwkB,EAAI5nB,EAAOI,OAAQgD,EAAIwkB,EAAGxkB,IAAK,CAC7C,MAAMwG,EAAS8d,EAAQtkB,GACjBzC,EAAQX,EAAOoD,GAGfikB,EAAO,CACXC,KAAM1d,EAAO,GACb2d,KAAM3d,EAAO,GACb4d,KAAM5d,EAAO,GACb6d,KAAM7d,EAAO,GACbjJ,MAAOA,GAETgnB,EAAMvkB,GAAKikB,EACXrrB,KAAKmrB,QAAOhf,EAAAA,EAAAA,IAAOxH,IAAU0mB,CAC/B,CACArrB,KAAKirB,OAAOthB,KAAKgiB,EACnB,CAOAxY,MAAAA,CAAOxO,GACL,MAAMknB,GAAM1f,EAAAA,EAAAA,IAAOxH,GAIb0mB,EAAOrrB,KAAKmrB,OAAOU,GAEzB,cADO7rB,KAAKmrB,OAAOU,GACiB,OAA7B7rB,KAAKirB,OAAO9X,OAAOkY,EAC5B,CAOArC,MAAAA,CAAOpb,EAAQjJ,GACb,MAAM0mB,EAAOrrB,KAAKmrB,QAAOhf,EAAAA,EAAAA,IAAOxH,IAC1BmnB,EAAO,CAACT,EAAKC,KAAMD,EAAKE,KAAMF,EAAKG,KAAMH,EAAKI,OAC/CvJ,EAAAA,EAAAA,IAAO4J,EAAMle,KAChB5N,KAAKmT,OAAOxO,GACZ3E,KAAKorB,OAAOxd,EAAQjJ,GAExB,CAMAonB,MAAAA,GAEE,OADc/rB,KAAKirB,OAAOF,MACblrB,KAAI,SAAUwrB,GACzB,OAAOA,EAAK1mB,KACd,GACF,CAOAqnB,WAAAA,CAAYpe,GAEV,MAAMke,EAAO,CACXR,KAAM1d,EAAO,GACb2d,KAAM3d,EAAO,GACb4d,KAAM5d,EAAO,GACb6d,KAAM7d,EAAO,IAGf,OADc5N,KAAKirB,OAAOgB,OAAOH,GACpBjsB,KAAI,SAAUwrB,GACzB,OAAOA,EAAK1mB,KACd,GACF,CAUAN,OAAAA,CAAQ2K,GACN,OAAOhP,KAAKksB,SAASlsB,KAAK+rB,SAAU/c,EACtC,CASAmd,eAAAA,CAAgBve,EAAQoB,GACtB,OAAOhP,KAAKksB,SAASlsB,KAAKgsB,YAAYpe,GAASoB,EACjD,CASAkd,QAAAA,CAASloB,EAAQgL,GACf,IAAII,EACJ,IAAK,IAAIhI,EAAI,EAAGwkB,EAAI5nB,EAAOI,OAAQgD,EAAIwkB,EAAGxkB,IAExC,GADAgI,EAASJ,EAAShL,EAAOoD,IACrBgI,EACF,OAAOA,EAGX,OAAOA,CACT,CAKA/H,OAAAA,GACE,OAAOA,EAAAA,EAAAA,GAAQrH,KAAKmrB,OACtB,CAKAhlB,KAAAA,GACEnG,KAAKirB,OAAO9kB,QACZnG,KAAKmrB,OAAS,CAAC,CACjB,CAMApb,SAAAA,CAAUnC,GACR,MAAMwe,EAAOpsB,KAAKirB,OAAOoB,SACzB,OAAOC,EAAAA,EAAAA,GAAeF,EAAKd,KAAMc,EAAKb,KAAMa,EAAKZ,KAAMY,EAAKX,KAAM7d,EACpE,CAKA2e,MAAAA,CAAOC,GACLxsB,KAAKirB,OAAOthB,KAAK6iB,EAAMvB,OAAOF,OAC9B,IAAK,MAAM3jB,KAAKolB,EAAMrB,OACpBnrB,KAAKmrB,OAAO/jB,GAAKolB,EAAMrB,OAAO/jB,EAElC,G,cCjNF,QAMc,aANd,EAaiB,gBAbjB,EAoBS,QApBT,EA4BiB,gBA5BjB,EAmCqB,oBAnCrB,EA0CmB,kBA1CnB,EAiDqB,oBClBd,MAAMqlB,UAA0B/sB,EAAAA,GAMrCC,WAAAA,CAAYC,EAAM0P,EAAS0K,GACzBja,MAAMH,GAONI,KAAKsP,QAAUA,EAOftP,KAAKga,SAAWA,CAClB,EAyHF,MAAM0S,UAAqBC,EAAAA,EAIzBhtB,WAAAA,CAAYsK,GAGVlK,MAAM,CACJ6sB,cAHF3iB,EAAUA,GAAW,CAAC,GAGE2iB,aACtBC,aAAa,EACbpd,gBAAYxP,EACZ8I,MAAO,QACP4G,WAAyB1P,IAAlBgK,EAAQ0F,OAAsB1F,EAAQ0F,QAM/C3P,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAMLvK,KAAK8sB,QAAUC,EAAAA,GAMf/sB,KAAKgtB,QAAU/iB,EAAQ0f,QAAU,KAMjC3pB,KAAKitB,eAAiChtB,IAArBgK,EAAQijB,UAAgCjjB,EAAQijB,SAMjEltB,KAAKmtB,KAAOljB,EAAQyf,SAEGzpB,IAAnBgK,EAAQmjB,OACVptB,KAAK8sB,QAAU7iB,EAAQmjB,YACAntB,IAAdD,KAAKmtB,QACdxmB,EAAAA,EAAAA,GAAO3G,KAAKgtB,QAAS,0CAErBhtB,KAAK8sB,QAAUrD,EAAIzpB,KAAKmtB,KAAMntB,KAAKgtB,UAOrChtB,KAAKqtB,eACkBptB,IAArBgK,EAAQqjB,SAAyBrjB,EAAQqjB,SAAWC,EAEtD,MAAMC,OACwBvtB,IAA5BgK,EAAQujB,iBAAgCvjB,EAAQujB,gBAqDlD,IAAIlhB,EAEA0N,EAjDJha,KAAKytB,eAAiBD,EAAkB,IAAIE,EAAU,KAMtD1tB,KAAK2tB,oBAAsB,IAAID,EAM/B1tB,KAAK4tB,qBAAuB,EAM5B5tB,KAAK6tB,sBAAwB,CAAC,EAO9B7tB,KAAK8tB,SAAW,CAAC,EAOjB9tB,KAAK+tB,UAAY,CAAC,EAMlB/tB,KAAKguB,mBAAqB,CAAC,EAM3BhuB,KAAKiuB,oBAAsB,KAMvBrjB,MAAMC,QAAQZ,EAAQ+P,UACxBA,EAAW/P,EAAQ+P,SACV/P,EAAQ+P,WACjB1N,EAAarC,EAAQ+P,SACrBA,EAAW1N,EAAWX,YAEnB6hB,QAAkCvtB,IAAfqM,IACtBA,EAAa,IAAIxB,EAAAA,EAAWkP,SAEb/Z,IAAb+Z,GACFha,KAAKkuB,oBAAoBlU,QAER/Z,IAAfqM,GACFtM,KAAKmuB,wBAAwB7hB,EAEjC,CAcA8hB,UAAAA,CAAW9e,GACTtP,KAAKquB,mBAAmB/e,GACxBtP,KAAKmL,SACP,CAOAkjB,kBAAAA,CAAmB/e,GACjB,MAAMgf,GAAaniB,EAAAA,EAAAA,IAAOmD,GAE1B,IAAKtP,KAAKuuB,YAAYD,EAAYhf,GAIhC,YAHItP,KAAKiuB,qBACPjuB,KAAKiuB,oBAAoB9a,OAAO7D,IAKpCtP,KAAKwuB,mBAAmBF,EAAYhf,GAEpC,MAAMC,EAAWD,EAAQmf,cACzB,GAAIlf,EAAU,CACZ,MAAM3B,EAAS2B,EAASQ,YACpB/P,KAAKytB,gBACPztB,KAAKytB,eAAerC,OAAOxd,EAAQ0B,EAEvC,MACEtP,KAAK6tB,sBAAsBS,GAAchf,EAG3CtP,KAAKiD,cACH,IAAIwpB,EAAkBiC,EAA4Bpf,GAEtD,CAOAkf,kBAAAA,CAAmBF,EAAYhf,GACzBA,aAAmBqf,EAAAA,KAGvB3uB,KAAKguB,mBAAmBM,GAAc,EACpCzsB,EAAAA,EAAAA,IAAOyN,EAAS/M,EAAAA,EAAUqG,OAAQ5I,KAAK4uB,qBAAsB5uB,OAC7D6B,EAAAA,EAAAA,IACEyN,EACAvD,EAAAA,EAAgBC,eAChBhM,KAAK4uB,qBACL5uB,OAGN,CASAuuB,WAAAA,CAAYD,EAAYhf,GACtB,IAAIuf,GAAQ,EACZ,QAAwB5uB,IAApBqP,EAAQuJ,QAAuB,CACjC,MAAMrV,EAAKsrB,OAAOxf,EAAQuJ,SAC1B,GAAMrV,KAAMxD,KAAK8tB,SAEV,GAAIxe,aAAmBqf,EAAAA,GAAe,CAC3C,MAAMI,EAAiB/uB,KAAK8tB,SAAStqB,GAC/BurB,aAA0BJ,EAAAA,GAEpB/jB,MAAMC,QAAQkkB,GAGxBA,EAAejqB,KAAKwK,GAFpBtP,KAAK8tB,SAAStqB,GAAM,CAACurB,EAAgBzf,GAFrCuf,GAAQ,CAMZ,MACEA,GAAQ,OAXR7uB,KAAK8tB,SAAStqB,GAAM8L,CAaxB,CAQA,OAPIuf,KACFloB,EAAAA,EAAAA,KACI2nB,KAActuB,KAAK+tB,WACrB,wDAEF/tB,KAAK+tB,UAAUO,GAAchf,GAExBuf,CACT,CAOA/D,WAAAA,CAAY9Q,GACVha,KAAKkuB,oBAAoBlU,GACzBha,KAAKmL,SACP,CAOA+iB,mBAAAA,CAAoBlU,GAClB,MAAM0R,EAAU,GAEVsD,EAAc,GAEdC,EAAmB,GAEzB,IAAK,IAAI7nB,EAAI,EAAGhD,EAAS4V,EAAS5V,OAAQgD,EAAIhD,EAAQgD,IAAK,CACzD,MAAMkI,EAAU0K,EAAS5S,GACnBknB,GAAaniB,EAAAA,EAAAA,IAAOmD,GACtBtP,KAAKuuB,YAAYD,EAAYhf,IAC/B0f,EAAYlqB,KAAKwK,EAErB,CAEA,IAAK,IAAIlI,EAAI,EAAGhD,EAAS4qB,EAAY5qB,OAAQgD,EAAIhD,EAAQgD,IAAK,CAC5D,MAAMkI,EAAU0f,EAAY5nB,GACtBknB,GAAaniB,EAAAA,EAAAA,IAAOmD,GAC1BtP,KAAKwuB,mBAAmBF,EAAYhf,GAEpC,MAAMC,EAAWD,EAAQmf,cACzB,GAAIlf,EAAU,CACZ,MAAM3B,EAAS2B,EAASQ,YACxB2b,EAAQ5mB,KAAK8I,GACbqhB,EAAiBnqB,KAAKwK,EACxB,MACEtP,KAAK6tB,sBAAsBS,GAAchf,CAE7C,CAKA,GAJItP,KAAKytB,gBACPztB,KAAKytB,eAAe9jB,KAAK+hB,EAASuD,GAGhCjvB,KAAKiT,YAAYyb,GACnB,IAAK,IAAItnB,EAAI,EAAGhD,EAAS4qB,EAAY5qB,OAAQgD,EAAIhD,EAAQgD,IACvDpH,KAAKiD,cACH,IAAIwpB,EAAkBiC,EAA4BM,EAAY5nB,IAItE,CAMA+mB,uBAAAA,CAAwB7hB,GACtB,IAAI4iB,GAAsB,EAC1BlvB,KAAKsC,iBACHosB,GAIA,SAAUS,GACHD,IACHA,GAAsB,EACtB5iB,EAAWxH,KAAKqqB,EAAI7f,SACpB4f,GAAsB,EAE1B,IAEFlvB,KAAKsC,iBACHosB,GAIA,SAAUS,GACHD,IACHA,GAAsB,EACtB5iB,EAAW6G,OAAOgc,EAAI7f,SACtB4f,GAAsB,EAE1B,IAEF5iB,EAAWhK,iBACT+I,EAAAA,EAAoBC,KAInB6jB,IACMD,IACHA,GAAsB,EACtBlvB,KAAKouB,WAAWe,EAAI5tB,SACpB2tB,GAAsB,MAI5B5iB,EAAWhK,iBACT+I,EAAAA,EAAoBG,QAInB2jB,IACMD,IACHA,GAAsB,EACtBlvB,KAAKovB,cAAcD,EAAI5tB,SACvB2tB,GAAsB,MAI5BlvB,KAAKiuB,oBAAsB3hB,CAC7B,CAOAnG,KAAAA,CAAMkpB,GACJ,GAAIA,EAAM,CACR,IAAK,MAAMC,KAAatvB,KAAKguB,mBAAoB,CAClChuB,KAAKguB,mBAAmBsB,GAChCjrB,QAAQC,EAAAA,GACf,CACKtE,KAAKiuB,sBACRjuB,KAAKguB,mBAAqB,CAAC,EAC3BhuB,KAAK8tB,SAAW,CAAC,EACjB9tB,KAAK+tB,UAAY,CAAC,EAEtB,MACE,GAAI/tB,KAAKytB,eAAgB,CACvBztB,KAAKytB,eAAeppB,SAASiL,IAC3BtP,KAAKuvB,sBAAsBjgB,MAE7B,IAAK,MAAM9L,KAAMxD,KAAK6tB,sBACpB7tB,KAAKuvB,sBAAsBvvB,KAAK6tB,sBAAsBrqB,GAE1D,CAEExD,KAAKiuB,qBACPjuB,KAAKiuB,oBAAoB9nB,QAGvBnG,KAAKytB,gBACPztB,KAAKytB,eAAetnB,QAEtBnG,KAAK6tB,sBAAwB,CAAC,EAE9B,MAAM2B,EAAa,IAAI/C,EAAkBiC,GACzC1uB,KAAKiD,cAAcusB,GACnBxvB,KAAKmL,SACP,CAcAskB,cAAAA,CAAezgB,GACb,GAAIhP,KAAKytB,eACP,OAAOztB,KAAKytB,eAAeppB,QAAQ2K,GAEjChP,KAAKiuB,qBACPjuB,KAAKiuB,oBAAoB5pB,QAAQ2K,EAErC,CAiBA0gB,gCAAAA,CAAiCjvB,EAAYuO,GAC3C,MAAMpB,EAAS,CAACnN,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACxE,OAAOT,KAAK2vB,uBAAuB/hB,GAAQ,SAAU0B,GACnD,MAAMC,EAAWD,EAAQmf,cACzB,GACElf,aAAoBof,EAAAA,IACpBpf,EAAS6W,qBAAqB3lB,GAE9B,OAAOuO,EAASM,EAGpB,GACF,CAqBAqgB,sBAAAA,CAAuB/hB,EAAQoB,GAC7B,GAAIhP,KAAKytB,eACP,OAAOztB,KAAKytB,eAAetB,gBAAgBve,EAAQoB,GAEjDhP,KAAKiuB,qBACPjuB,KAAKiuB,oBAAoB5pB,QAAQ2K,EAErC,CAiBA4gB,gCAAAA,CAAiChiB,EAAQoB,GACvC,OAAOhP,KAAK2vB,uBACV/hB,GAKA,SAAU0B,GACR,MAAMC,EAAWD,EAAQmf,cACzB,GACElf,aAAoBof,EAAAA,IACpBpf,EAASyX,iBAAiBpZ,GAC1B,CACA,MAAMwB,EAASJ,EAASM,GACxB,GAAIF,EACF,OAAOA,CAEX,CACF,GAEJ,CASAygB,qBAAAA,GACE,OAAO7vB,KAAKiuB,mBACd,CAQA6B,WAAAA,GACE,IAAI9V,EASJ,OARIha,KAAKiuB,oBACPjU,EAAWha,KAAKiuB,oBAAoBtiB,WAAWZ,MAAM,GAC5C/K,KAAKytB,iBACdzT,EAAWha,KAAKytB,eAAe1B,UAC1B1kB,EAAAA,EAAAA,GAAQrH,KAAK6tB,yBAChBrS,EAAAA,EAAAA,IAAOxB,EAAUjW,OAAOC,OAAOhE,KAAK6tB,yBAGjC7T,CACT,CAQA+V,uBAAAA,CAAwBtvB,GAEtB,MAAMuZ,EAAW,GAIjB,OAHAha,KAAK0vB,iCAAiCjvB,GAAY,SAAU6O,GAC1D0K,EAASlV,KAAKwK,EAChB,IACO0K,CACT,CAgBAgW,mBAAAA,CAAoBpiB,EAAQ6B,GAC1B,GAAIzP,KAAKytB,eAAgB,CAGvB,KAFmBhe,GAAcA,EAAWI,YAAc7P,KAAK+Q,YAG7D,OAAO/Q,KAAKytB,eAAezB,YAAYpe,GAGzC,MAAM8d,GAAUuE,EAAAA,EAAAA,IAAcriB,EAAQ6B,GAEtC,MAAO,GAAG8c,UACLb,EAAQ7rB,KAAKqwB,GAAalwB,KAAKytB,eAAezB,YAAYkE,KAEjE,CACA,OAAIlwB,KAAKiuB,oBACAjuB,KAAKiuB,oBAAoBtiB,WAAWZ,MAAM,GAE5C,EACT,CAeAolB,6BAAAA,CAA8B1vB,EAAY2vB,GAQxC,MAAMzK,EAAIllB,EAAW,GACfmlB,EAAInlB,EAAW,GACrB,IAAI4vB,EAAiB,KACrB,MAAMxK,EAAe,CAAClB,IAAKA,KAC3B,IAAImB,EAAqBngB,IACzB,MAAMiI,EAAS,EAAEjI,KAAWA,IAAUA,IAAUA,KA8BhD,OA7BAyqB,EAASA,GAAkB5e,EAAAA,GAC3BxR,KAAKytB,eAAetB,gBAClBve,GAIA,SAAU0B,GACR,GAAI8gB,EAAO9gB,GAAU,CACnB,MAAMC,EAAWD,EAAQmf,cACnB6B,EAA6BxK,EAKnC,GAJAA,EACEvW,aAAoBof,EAAAA,GAChB,EACApf,EAASmW,eAAeC,EAAGC,EAAGC,EAAcC,GAC9CA,EAAqBwK,EAA4B,CACnDD,EAAiB/gB,EAKjB,MAAMihB,EAAcnrB,KAAKwX,KAAKkJ,GAC9BlY,EAAO,GAAK+X,EAAI4K,EAChB3iB,EAAO,GAAKgY,EAAI2K,EAChB3iB,EAAO,GAAK+X,EAAI4K,EAChB3iB,EAAO,GAAKgY,EAAI2K,CAClB,CACF,CACF,IAEKF,CACT,CAYAtgB,SAAAA,CAAUnC,GACR,OAAO5N,KAAKytB,eAAe1d,UAAUnC,EACvC,CAcA4iB,cAAAA,CAAehtB,GACb,MAAM8L,EAAUtP,KAAK8tB,SAAStqB,EAAGsV,YACjC,YAAmB7Y,IAAZqP,EAAqB,EAIxB,IACN,CAQAmhB,eAAAA,CAAgB5E,GACd,MAAMvc,EAAUtP,KAAK+tB,UAAUlC,GAC/B,YAAmB5rB,IAAZqP,EAAwBA,EAAU,IAC3C,CAQAohB,SAAAA,GACE,OAAO1wB,KAAKgtB,OACd,CAKA2D,WAAAA,GACE,OAAO3wB,KAAKitB,SACd,CAQA2D,MAAAA,GACE,OAAO5wB,KAAKmtB,IACd,CAMAyB,oBAAAA,CAAqBrrB,GACnB,MAAM+L,EAAsC/L,EAAMK,OAC5C0qB,GAAaniB,EAAAA,EAAAA,IAAOmD,GACpBC,EAAWD,EAAQmf,cACzB,GAAKlf,EAOE,CACL,MAAM3B,EAAS2B,EAASQ,YACpBue,KAActuB,KAAK6tB,8BACd7tB,KAAK6tB,sBAAsBS,GAC9BtuB,KAAKytB,gBACPztB,KAAKytB,eAAerC,OAAOxd,EAAQ0B,IAGjCtP,KAAKytB,gBACPztB,KAAKytB,eAAezE,OAAOpb,EAAQ0B,EAGzC,MAlBQgf,KAActuB,KAAK6tB,wBACnB7tB,KAAKytB,gBACPztB,KAAKytB,eAAeta,OAAO7D,GAE7BtP,KAAK6tB,sBAAsBS,GAAchf,GAe7C,MAAM9L,EAAK8L,EAAQuJ,QACnB,QAAW5Y,IAAPuD,EAAkB,CACpB,MAAMqtB,EAAMrtB,EAAGsV,WACX9Y,KAAK8tB,SAAS+C,KAASvhB,IACzBtP,KAAK8wB,mBAAmBxhB,GACxBtP,KAAK8tB,SAAS+C,GAAOvhB,EAEzB,MACEtP,KAAK8wB,mBAAmBxhB,GACxBtP,KAAK+tB,UAAUO,GAAchf,EAE/BtP,KAAKmL,UACLnL,KAAKiD,cACH,IAAIwpB,EAAkBiC,EAA+Bpf,GAEzD,CAQAyhB,UAAAA,CAAWzhB,GACT,MAAM9L,EAAK8L,EAAQuJ,QACnB,YAAW5Y,IAAPuD,EACKA,KAAMxD,KAAK8tB,UAEb3hB,EAAAA,EAAAA,IAAOmD,KAAYtP,KAAK+tB,SACjC,CAKA1mB,OAAAA,GACE,OAAIrH,KAAKytB,eAELztB,KAAKytB,eAAepmB,YAAaA,EAAAA,EAAAA,GAAQrH,KAAK6tB,wBAG9C7tB,KAAKiuB,qBACyC,IAAzCjuB,KAAKiuB,oBAAoB+C,WAGpC,CAOAC,YAAAA,CAAarjB,EAAQa,EAAYgB,GAC/B,MAAMyhB,EAAqBlxB,KAAK2tB,oBAC1BwD,EAAgBnxB,KAAKqtB,UAAUzf,EAAQa,EAAYgB,GACzD,IAAK,IAAIrI,EAAI,EAAGwE,EAAKulB,EAAc/sB,OAAQgD,EAAIwE,IAAMxE,EAAG,CACtD,MAAMgqB,EAAeD,EAAc/pB,GACb8pB,EAAmB/E,gBACvCiF,GAKA,SAAUC,GACR,OAAOC,EAAAA,EAAAA,IAAeD,EAAOzjB,OAAQwjB,EACvC,QAGEpxB,KAAK4tB,qBACP5tB,KAAKiD,cACH,IAAIwpB,EAAkBiC,IAExB1uB,KAAK8sB,QAAQtd,KACXxP,KACAoxB,EACA3iB,EACAgB,GAICuK,MACGha,KAAK4tB,qBACP5tB,KAAKiD,cACH,IAAIwpB,EACFiC,OACAzuB,EACA+Z,OAIN,OACIha,KAAK4tB,qBACP5tB,KAAKiD,cACH,IAAIwpB,EAAkBiC,OAI5BwC,EAAmB9F,OAAOgG,EAAc,CAACxjB,OAAQwjB,EAAarmB,UAElE,CACA/K,KAAK4b,UACH5b,KAAK8sB,QAAQ1oB,OAAS,IAAYpE,KAAK4tB,qBAAuB,CAClE,CAKA2D,OAAAA,GACEvxB,KAAKmG,OAAM,GACXnG,KAAK2tB,oBAAoBxnB,QACzBpG,MAAMwxB,SACR,CAOAC,kBAAAA,CAAmB5jB,GACjB,MAAMsjB,EAAqBlxB,KAAK2tB,oBAC1B8D,EAAMP,EAAmB/E,gBAAgBve,GAAQ,SAAUyjB,GAC/D,IAAInP,EAAAA,EAAAA,IAAOmP,EAAOzjB,OAAQA,GACxB,OAAOyjB,CAEX,IACII,GACFP,EAAmB/d,OAAOse,EAE9B,CASAC,cAAAA,CAAe1X,GACb,IAAI2X,GAAU,EACd,IAAK,IAAIvqB,EAAI,EAAGwE,EAAKoO,EAAS5V,OAAQgD,EAAIwE,IAAMxE,EAC9CuqB,EAAU3xB,KAAKuvB,sBAAsBvV,EAAS5S,KAAOuqB,EAEnDA,GACF3xB,KAAKmL,SAET,CASAikB,aAAAA,CAAc9f,GACZ,IAAKA,EACH,OAEctP,KAAKuvB,sBAAsBjgB,IAEzCtP,KAAKmL,SAET,CAQAokB,qBAAAA,CAAsBjgB,GACpB,MAAMgf,GAAaniB,EAAAA,EAAAA,IAAOmD,GAC1B,KAAMgf,KAActuB,KAAK+tB,WACvB,OAAO,EAGLO,KAActuB,KAAK6tB,6BACd7tB,KAAK6tB,sBAAsBS,GAE9BtuB,KAAKytB,gBACPztB,KAAKytB,eAAeta,OAAO7D,GAI/B,MAAMsiB,EAAoB5xB,KAAKguB,mBAAmBM,GACjC,OAAjBsD,QAAiB,IAAjBA,GAAAA,EAAmBvtB,QAAQC,EAAAA,WACpBtE,KAAKguB,mBAAmBM,GAE/B,MAAM9qB,EAAK8L,EAAQuJ,QACnB,QAAW5Y,IAAPuD,EAAkB,CACpB,MAAMquB,EAAWruB,EAAGsV,WACdiW,EAAiB/uB,KAAK8tB,SAAS+D,GACjC9C,IAAmBzf,SACdtP,KAAK8tB,SAAS+D,GACZjnB,MAAMC,QAAQkkB,KACvBA,EAAe+C,OAAO/C,EAAegD,QAAQziB,GAAU,GACzB,IAA1Byf,EAAe3qB,SACjBpE,KAAK8tB,SAAS+D,GAAY9C,EAAe,IAG/C,CAOA,cANO/uB,KAAK+tB,UAAUO,GAClBtuB,KAAKiT,YAAYyb,IACnB1uB,KAAKiD,cACH,IAAIwpB,EAAkBiC,EAA+Bpf,KAGlD,CACT,CAQAwhB,kBAAAA,CAAmBxhB,GACjB,IAAK,MAAM9L,KAAMxD,KAAK8tB,SACpB,GAAI9tB,KAAK8tB,SAAStqB,KAAQ8L,EAAS,QAC1BtP,KAAK8tB,SAAStqB,GACrB,KACF,CAEJ,CAQAwuB,SAAAA,CAAU5E,GACRptB,KAAK8sB,QAAUM,CACjB,CAOA6E,MAAAA,CAAOvI,IACL/iB,EAAAA,EAAAA,GAAO3G,KAAKgtB,QAAS,0CACrBhtB,KAAKmtB,KAAOzD,EACZ1pB,KAAKgyB,UAAUvI,EAAIC,EAAK1pB,KAAKgtB,SAC/B,CAKAkF,WAAAA,CAAYhF,GACVltB,KAAKitB,UAAYC,EACjBltB,KAAKmL,SACP,EAGF,S,mECnoCA,MAAMgnB,UAAmBC,EAAAA,EACvBzyB,WAAAA,GACEI,QAEAC,KAAKqK,GAEDrK,KAAKqyB,WAGTryB,KAAKsK,KAEDtK,KAAKsyB,aAGTtyB,KAAKuK,GAAiDvK,KAAKuyB,WAM3DvyB,KAAKwyB,UAAY,CACnB,CAMArnB,OAAAA,KACInL,KAAKwyB,UACPxyB,KAAKiD,cAAcV,EAAAA,EAAUqG,OAC/B,CAQA6c,WAAAA,GACE,OAAOzlB,KAAKwyB,SACd,CAQAH,UAAAA,CAAWzyB,EAAMykB,GACf,GAAIzZ,MAAMC,QAAQjL,GAAO,CACvB,MAAM6yB,EAAM7yB,EAAKwE,OACXsuB,EAAO,IAAI9nB,MAAM6nB,GACvB,IAAK,IAAIrrB,EAAI,EAAGA,EAAIqrB,IAAOrrB,EACzBsrB,EAAKtrB,IAAKvF,EAAAA,EAAAA,IAAO7B,KAAMJ,EAAKwH,GAAIid,GAElC,OAAOqO,CACT,CACA,OAAO7wB,EAAAA,EAAAA,IAAO7B,KAA6BJ,EAAOykB,EACpD,CAQAiO,YAAAA,CAAa1yB,EAAMykB,GACjB,IAAI9c,EACJ,GAAIqD,MAAMC,QAAQjL,GAAO,CACvB,MAAM6yB,EAAM7yB,EAAKwE,OACjBmD,EAAM,IAAIqD,MAAM6nB,GAChB,IAAK,IAAIrrB,EAAI,EAAGA,EAAIqrB,IAAOrrB,EACzBG,EAAIH,IAAKurB,EAAAA,EAAAA,IAAW3yB,KAAMJ,EAAKwH,GAAIid,EAEvC,MACE9c,GAAMorB,EAAAA,EAAAA,IAAW3yB,KAA6BJ,EAAOykB,GAGvD,OADuBA,EAAUuO,OAASrrB,EACnCA,CACT,CAQAgrB,UAAAA,CAAW3yB,EAAMykB,GACf,MAAM9c,EAA6B8c,EAAUuO,OAC7C,GAAIrrB,GAmDD,SAAiBA,GACtB,GAAIqD,MAAMC,QAAQtD,GAChB,IAAK,IAAIH,EAAI,EAAGwE,EAAKrE,EAAInD,OAAQgD,EAAIwE,IAAMxE,GACzC9C,EAAAA,EAAAA,IAAciD,EAAIH,SAGpB9C,EAAAA,EAAAA,IAA8DiD,EAElE,CA1DMsrB,CAAQtrB,QACH,GAAIqD,MAAMC,QAAQjL,GACvB,IAAK,IAAIwH,EAAI,EAAGwE,EAAKhM,EAAKwE,OAAQgD,EAAIwE,IAAMxE,EAC1CpH,KAAKyF,oBAAoB7F,EAAKwH,GAAIid,QAGpCrkB,KAAKyF,oBAAoB7F,EAAMykB,EAEnC,EAaF8N,EAAWlR,UAAU5W,GAYrB8nB,EAAWlR,UAAU3W,KASrB6nB,EAAWlR,UAAU1W,GAkBrB,S,yCCtLA,MAAMuoB,EAOJnzB,WAAAA,CAAY2rB,EAAME,EAAMD,EAAME,GAI5BzrB,KAAKsrB,KAAOA,EAKZtrB,KAAKwrB,KAAOA,EAKZxrB,KAAKurB,KAAOA,EAKZvrB,KAAKyrB,KAAOA,CACd,CAMAjO,QAAAA,CAASuV,GACP,OAAO/yB,KAAK+lB,WAAWgN,EAAU,GAAIA,EAAU,GACjD,CAMAC,iBAAAA,CAAkBC,GAChB,OACEjzB,KAAKsrB,MAAQ2H,EAAU3H,MACvB2H,EAAUzH,MAAQxrB,KAAKwrB,MACvBxrB,KAAKurB,MAAQ0H,EAAU1H,MACvB0H,EAAUxH,MAAQzrB,KAAKyrB,IAE3B,CAOA1F,UAAAA,CAAWJ,EAAGC,GACZ,OAAO5lB,KAAKsrB,MAAQ3F,GAAKA,GAAK3lB,KAAKwrB,MAAQxrB,KAAKurB,MAAQ3F,GAAKA,GAAK5lB,KAAKyrB,IACzE,CAMAvJ,MAAAA,CAAO+Q,GACL,OACEjzB,KAAKsrB,MAAQ2H,EAAU3H,MACvBtrB,KAAKurB,MAAQ0H,EAAU1H,MACvBvrB,KAAKwrB,MAAQyH,EAAUzH,MACvBxrB,KAAKyrB,MAAQwH,EAAUxH,IAE3B,CAKAjQ,MAAAA,CAAOyX,GACDA,EAAU3H,KAAOtrB,KAAKsrB,OACxBtrB,KAAKsrB,KAAO2H,EAAU3H,MAEpB2H,EAAUzH,KAAOxrB,KAAKwrB,OACxBxrB,KAAKwrB,KAAOyH,EAAUzH,MAEpByH,EAAU1H,KAAOvrB,KAAKurB,OACxBvrB,KAAKurB,KAAO0H,EAAU1H,MAEpB0H,EAAUxH,KAAOzrB,KAAKyrB,OACxBzrB,KAAKyrB,KAAOwH,EAAUxH,KAE1B,CAKA9D,SAAAA,GACE,OAAO3nB,KAAKyrB,KAAOzrB,KAAKurB,KAAO,CACjC,CAKA9Q,OAAAA,GACE,MAAO,CAACza,KAAKiQ,WAAYjQ,KAAK2nB,YAChC,CAKA1X,QAAAA,GACE,OAAOjQ,KAAKwrB,KAAOxrB,KAAKsrB,KAAO,CACjC,CAMA4H,UAAAA,CAAWD,GACT,OACEjzB,KAAKsrB,MAAQ2H,EAAUzH,MACvBxrB,KAAKwrB,MAAQyH,EAAU3H,MACvBtrB,KAAKurB,MAAQ0H,EAAUxH,MACvBzrB,KAAKyrB,MAAQwH,EAAU1H,IAE3B,EAWK,SAASe,EAAehB,EAAME,EAAMD,EAAME,EAAMwH,GACrD,YAAkBhzB,IAAdgzB,GACFA,EAAU3H,KAAOA,EACjB2H,EAAUzH,KAAOA,EACjByH,EAAU1H,KAAOA,EACjB0H,EAAUxH,KAAOA,EACVwH,GAEF,IAAIH,EAAUxH,EAAME,EAAMD,EAAME,EACzC,CAEA,S,iXCjIO,SAAS0H,EAAeriB,GAC7B,MAAMlD,EAASkX,IACf,IAAK,IAAI1d,EAAI,EAAGwE,EAAKkF,EAAY1M,OAAQgD,EAAIwE,IAAMxE,EACjDgsB,EAAiBxlB,EAAQkD,EAAY1J,IAEvC,OAAOwG,CACT,CAyBO,SAASylB,EAAOzlB,EAAQjJ,EAAOiI,GACpC,OAAIA,GACFA,EAAK,GAAKgB,EAAO,GAAKjJ,EACtBiI,EAAK,GAAKgB,EAAO,GAAKjJ,EACtBiI,EAAK,GAAKgB,EAAO,GAAKjJ,EACtBiI,EAAK,GAAKgB,EAAO,GAAKjJ,EACfiI,GAEF,CACLgB,EAAO,GAAKjJ,EACZiJ,EAAO,GAAKjJ,EACZiJ,EAAO,GAAKjJ,EACZiJ,EAAO,GAAKjJ,EAEhB,CASO,SAAS2c,EAAM1T,EAAQhB,GAC5B,OAAIA,GACFA,EAAK,GAAKgB,EAAO,GACjBhB,EAAK,GAAKgB,EAAO,GACjBhB,EAAK,GAAKgB,EAAO,GACjBhB,EAAK,GAAKgB,EAAO,GACVhB,GAEFgB,EAAO7C,OAChB,CAQO,SAASuoB,EAAyB1lB,EAAQ+X,EAAGC,GAClD,IAAI2N,EAAIC,EAeR,OAbED,EADE5N,EAAI/X,EAAO,GACRA,EAAO,GAAK+X,EACR/X,EAAO,GAAK+X,EAChBA,EAAI/X,EAAO,GAEX,EAGL4lB,EADE5N,EAAIhY,EAAO,GACRA,EAAO,GAAKgY,EACRhY,EAAO,GAAKgY,EAChBA,EAAIhY,EAAO,GAEX,EAEA2lB,EAAKA,EAAKC,EAAKA,CACxB,CAUO,SAASC,EAAmB7lB,EAAQnN,GACzC,OAAOslB,EAAWnY,EAAQnN,EAAW,GAAIA,EAAW,GACtD,CAcO,SAAS6wB,EAAeoC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,EAE1B,CAWO,SAAS3N,EAAWnY,EAAQ+X,EAAGC,GACpC,OAAOhY,EAAO,IAAM+X,GAAKA,GAAK/X,EAAO,IAAMA,EAAO,IAAMgY,GAAKA,GAAKhY,EAAO,EAC3E,CASO,SAASgmB,EAAuBhmB,EAAQnN,GAC7C,MAAM6qB,EAAO1d,EAAO,GACd2d,EAAO3d,EAAO,GACd4d,EAAO5d,EAAO,GACd6d,EAAO7d,EAAO,GACd+X,EAAIllB,EAAW,GACfmlB,EAAInlB,EAAW,GACrB,IAAIozB,EAAeC,EAAAA,EAAaC,QAchC,OAbIpO,EAAI2F,EACNuI,GAA8BC,EAAAA,EAAaE,KAClCrO,EAAI6F,IACbqI,GAA8BC,EAAAA,EAAaG,OAEzCrO,EAAI2F,EACNsI,GAA8BC,EAAAA,EAAaI,MAClCtO,EAAI6F,IACboI,GAA8BC,EAAAA,EAAaK,OAEzCN,IAAiBC,EAAAA,EAAaC,UAChCF,EAAeC,EAAAA,EAAaM,cAEvBP,CACT,CAOO,SAAS/O,IACd,MAAO,CAACnf,IAAUA,KAAWA,KAAWA,IAC1C,CAWO,SAAS2mB,EAAehB,EAAMC,EAAMC,EAAMC,EAAM7e,GACrD,OAAIA,GACFA,EAAK,GAAK0e,EACV1e,EAAK,GAAK2e,EACV3e,EAAK,GAAK4e,EACV5e,EAAK,GAAK6e,EACH7e,GAEF,CAAC0e,EAAMC,EAAMC,EAAMC,EAC5B,CAOO,SAASrK,EAAoBxU,GAClC,OAAO0f,EAAe3mB,IAAUA,KAAWA,KAAWA,IAAUiH,EAClE,CAOO,SAASynB,EAA6B5zB,EAAYmM,GACvD,MAAM+Y,EAAIllB,EAAW,GACfmlB,EAAInlB,EAAW,GACrB,OAAO6rB,EAAe3G,EAAGC,EAAGD,EAAGC,EAAGhZ,EACpC,CAoBO,SAAS0nB,EACdC,EACAC,EACAC,EACAlN,EACA3a,GAGA,OAAO8nB,EADQtT,EAAoBxU,GACE2nB,EAAiBC,EAAQC,EAAKlN,EACrE,CAmBO,SAASrF,EAAOwR,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAyBO,SAASnY,EAAOkY,EAASC,GAa9B,OAZIA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,CACT,CAMO,SAASN,EAAiBxlB,EAAQnN,GACnCA,EAAW,GAAKmN,EAAO,KACzBA,EAAO,GAAKnN,EAAW,IAErBA,EAAW,GAAKmN,EAAO,KACzBA,EAAO,GAAKnN,EAAW,IAErBA,EAAW,GAAKmN,EAAO,KACzBA,EAAO,GAAKnN,EAAW,IAErBA,EAAW,GAAKmN,EAAO,KACzBA,EAAO,GAAKnN,EAAW,GAE3B,CAsBO,SAASi0B,EACd9mB,EACA2mB,EACAC,EACAC,EACAlN,GAEA,KAAOiN,EAASC,EAAKD,GAAUjN,EAC7BoN,EAAS/mB,EAAQ2mB,EAAgBC,GAASD,EAAgBC,EAAS,IAErE,OAAO5mB,CACT,CAmBO,SAAS+mB,EAAS/mB,EAAQ+X,EAAGC,GAClChY,EAAO,GAAKxI,KAAKmI,IAAIK,EAAO,GAAI+X,GAChC/X,EAAO,GAAKxI,KAAKmI,IAAIK,EAAO,GAAIgY,GAChChY,EAAO,GAAKxI,KAAKqI,IAAIG,EAAO,GAAI+X,GAChC/X,EAAO,GAAKxI,KAAKqI,IAAIG,EAAO,GAAIgY,EAClC,CAWO,SAASgP,EAAchnB,EAAQoB,GACpC,IAAI6lB,EAEJ,OADAA,EAAM7lB,EAAS8lB,EAAclnB,IACzBinB,IAGJA,EAAM7lB,EAAS+lB,EAAennB,IAC1BinB,IAGJA,EAAM7lB,EAASgmB,EAAYpnB,IACvBinB,IAGJA,EAAM7lB,EAASimB,EAAWrnB,IACtBinB,IAGG,IACT,CAQO,SAASK,EAAQtnB,GACtB,IAAIunB,EAAO,EAIX,OAHK9tB,EAAQuG,KACXunB,EAAOllB,EAASrC,GAAU+Z,EAAU/Z,IAE/BunB,CACT,CAQO,SAASL,EAAclnB,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASmnB,EAAennB,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASwnB,EAAUxnB,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,EACjE,CAQO,SAASynB,EAAUznB,EAAQ0nB,GAChC,IAAI70B,EACJ,GAAe,gBAAX60B,EACF70B,EAAaq0B,EAAclnB,QACtB,GAAe,iBAAX0nB,EACT70B,EAAas0B,EAAennB,QACvB,GAAe,aAAX0nB,EACT70B,EAAaw0B,EAAWrnB,OACnB,IAAe,cAAX0nB,EAGT,MAAM,IAAIC,MAAM,kBAFhB90B,EAAau0B,EAAYpnB,EAG3B,CACA,OAAOnN,CACT,CAuBO,SAAS+f,EAAkB7R,EAAQF,EAAYC,EAAUF,EAAM5B,GACpE,MAAO4oB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAMC,EACvCrnB,EACAF,EACAC,EACAF,GAEF,OAAO8d,EACLlnB,KAAKmI,IAAIioB,EAAIE,EAAIE,EAAIE,GACrB1wB,KAAKmI,IAAIkoB,EAAIE,EAAIE,EAAIE,GACrB3wB,KAAKqI,IAAI+nB,EAAIE,EAAIE,EAAIE,GACrB1wB,KAAKqI,IAAIgoB,EAAIE,EAAIE,EAAIE,GACrBnpB,EAEJ,CASO,SAASopB,EAAmBrnB,EAAQF,EAAYC,EAAUF,GAC/D,MAAM+kB,EAAM9kB,EAAaD,EAAK,GAAM,EAC9BglB,EAAM/kB,EAAaD,EAAK,GAAM,EAC9BynB,EAAc7wB,KAAK8wB,IAAIxnB,GACvBynB,EAAc/wB,KAAKgxB,IAAI1nB,GACvB2nB,EAAO9C,EAAK0C,EACZK,EAAO/C,EAAK4C,EACZI,EAAO/C,EAAKyC,EACZO,EAAOhD,EAAK2C,EACZxQ,EAAIhX,EAAO,GACXiX,EAAIjX,EAAO,GACjB,MAAO,CACLgX,EAAI0Q,EAAOG,EACX5Q,EAAI0Q,EAAOC,EACX5Q,EAAI0Q,EAAOG,EACX5Q,EAAI0Q,EAAOC,EACX5Q,EAAI0Q,EAAOG,EACX5Q,EAAI0Q,EAAOC,EACX5Q,EAAI0Q,EAAOG,EACX5Q,EAAI0Q,EAAOC,EACX5Q,EAAI0Q,EAAOG,EACX5Q,EAAI0Q,EAAOC,EAEf,CAQO,SAAS5O,EAAU/Z,GACxB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CAoBO,SAASC,EAAgB6lB,EAASC,EAAS/mB,GAChD,MAAM6pB,EAAe7pB,GAvZd,CAACjH,IAAUA,KAAU,KAAW,KAgbvC,OAxBIutB,EAAWQ,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvB8C,EAAa,GAAK/C,EAAQ,GAE1B+C,EAAa,GAAK9C,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB8C,EAAa,GAAK/C,EAAQ,GAE1B+C,EAAa,GAAK9C,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB8C,EAAa,GAAK/C,EAAQ,GAE1B+C,EAAa,GAAK9C,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvB8C,EAAa,GAAK/C,EAAQ,GAE1B+C,EAAa,GAAK9C,EAAQ,IAG5BvS,EAAoBqV,GAEfA,CACT,CA0BO,SAASxB,EAAWrnB,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASonB,EAAYpnB,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASqC,EAASrC,GACvB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CASO,SAASslB,EAAWQ,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAQO,SAAStsB,EAAQuG,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,EACrD,CAOO,SAAS0Y,EAAe1Y,EAAQhB,GACrC,OAAIA,GACFA,EAAK,GAAKgB,EAAO,GACjBhB,EAAK,GAAKgB,EAAO,GACjBhB,EAAK,GAAKgB,EAAO,GACjBhB,EAAK,GAAKgB,EAAO,GACVhB,GAEFgB,CACT,CAuBO,SAAS8oB,EAAkB9oB,EAAQ+oB,EAAOlC,GAC/C,IAAIvB,GAAa,EACjB,MAAM0D,EAAWhD,EAAuBhmB,EAAQ+oB,GAC1CE,EAASjD,EAAuBhmB,EAAQ6mB,GAC9C,GACEmC,IAAa9C,EAAAA,EAAaM,cAC1ByC,IAAW/C,EAAAA,EAAaM,aAExBlB,GAAa,MACR,CACL,MAAM5H,EAAO1d,EAAO,GACd2d,EAAO3d,EAAO,GACd4d,EAAO5d,EAAO,GACd6d,EAAO7d,EAAO,GACdkpB,EAASH,EAAM,GACfI,EAASJ,EAAM,GACfK,EAAOvC,EAAI,GACXwC,EAAOxC,EAAI,GACXyC,GAASD,EAAOF,IAAWC,EAAOF,GACxC,IAAInR,EAAGC,EACAiR,EAAS/C,EAAAA,EAAaK,SAAYyC,EAAW9C,EAAAA,EAAaK,SAE/DxO,EAAIqR,GAAQC,EAAOxL,GAAQyL,EAC3BhE,EAAavN,GAAK2F,GAAQ3F,GAAK6F,GAG9B0H,KACE2D,EAAS/C,EAAAA,EAAaG,QACvB2C,EAAW9C,EAAAA,EAAaG,QAG1BrO,EAAIqR,GAAQD,EAAOxL,GAAQ0L,EAC3BhE,EAAatN,GAAK2F,GAAQ3F,GAAK6F,GAG9ByH,KACE2D,EAAS/C,EAAAA,EAAaI,QACvB0C,EAAW9C,EAAAA,EAAaI,QAG1BvO,EAAIqR,GAAQC,EAAO1L,GAAQ2L,EAC3BhE,EAAavN,GAAK2F,GAAQ3F,GAAK6F,GAG9B0H,KACE2D,EAAS/C,EAAAA,EAAaE,OACvB4C,EAAW9C,EAAAA,EAAaE,OAG1BpO,EAAIqR,GAAQD,EAAO1L,GAAQ4L,EAC3BhE,EAAatN,GAAK2F,GAAQ3F,GAAK6F,EAEnC,CACA,OAAOyH,CACT,CAaO,SAAS7X,EAAezN,EAAQmZ,EAAana,EAAMuqB,GACxD,GAAI9vB,EAAQuG,GACV,OAAOwT,EAAoBxU,GAE7B,IAAIkE,EAAc,GAClB,GAAIqmB,EAAQ,EAAG,CACb,MAAM3kB,EAAQ5E,EAAO,GAAKA,EAAO,GAC3B6E,EAAS7E,EAAO,GAAKA,EAAO,GAClC,IAAK,IAAIxG,EAAI,EAAGA,EAAI+vB,IAAS/vB,EAC3B0J,EAAYhM,KACV8I,EAAO,GAAM4E,EAAQpL,EAAK+vB,EAC1BvpB,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM6E,EAASrL,EAAK+vB,EAC3BvpB,EAAO,GAAM4E,EAAQpL,EAAK+vB,EAC1BvpB,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM6E,EAASrL,EAAK+vB,EAGjC,MACErmB,EAAc,CACZlD,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXmZ,EAAYjW,EAAaA,EAAa,GACtC,MAAMsmB,EAAK,GACLC,EAAK,GACX,IAAK,IAAIjwB,EAAI,EAAGwkB,EAAI9a,EAAY1M,OAAQgD,EAAIwkB,EAAGxkB,GAAK,EAClDgwB,EAAGtyB,KAAKgM,EAAY1J,IACpBiwB,EAAGvyB,KAAKgM,EAAY1J,EAAI,IAE1B,OA1yBF,SAA4BgwB,EAAIC,EAAIzqB,GAKlC,OAAO0f,EAJMlnB,KAAKmI,IAAInF,MAAM,KAAMgvB,GACrBhyB,KAAKmI,IAAInF,MAAM,KAAMivB,GACrBjyB,KAAKqI,IAAIrF,MAAM,KAAMgvB,GACrBhyB,KAAKqI,IAAIrF,MAAM,KAAMivB,GACYzqB,EAChD,CAoyBS0qB,CAAmBF,EAAIC,EAAIzqB,EACpC,CAUO,SAAS+C,EAAM/B,EAAQ6B,GAC5B,MAAMK,EAAmBL,EAAWM,YAC9BpB,EAASymB,EAAUxnB,GACzB,GACE6B,EAAWI,aACVlB,EAAO,GAAKmB,EAAiB,IAAMnB,EAAO,IAAMmB,EAAiB,IAClE,CACA,MAAME,EAAaC,EAASH,GAItB0kB,EAHapvB,KAAKmyB,OACrB5oB,EAAO,GAAKmB,EAAiB,IAAME,GAEVA,EAC5BpC,EAAO,IAAM4mB,EACb5mB,EAAO,IAAM4mB,CACf,CACA,OAAO5mB,CACT,CAeO,SAASqiB,EAAcriB,EAAQ6B,EAAY+nB,GAChD,GAAI/nB,EAAWI,WAAY,CACzB,MAAMC,EAAmBL,EAAWM,YAEpC,IAAK0nB,SAAS7pB,EAAO,MAAQ6pB,SAAS7pB,EAAO,IAC3C,MAAO,CAAC,CAACkC,EAAiB,GAAIlC,EAAO,GAAIkC,EAAiB,GAAIlC,EAAO,KAGvE+B,EAAM/B,EAAQ6B,GACd,MAAMO,EAAaC,EAASH,GAE5B,GAAIG,EAASrC,GAAUoC,IAAewnB,EAEpC,MAAO,CAAC,CAAC1nB,EAAiB,GAAIlC,EAAO,GAAIkC,EAAiB,GAAIlC,EAAO,KAEvE,GAAIA,EAAO,GAAKkC,EAAiB,GAE/B,MAAO,CACL,CAAClC,EAAO,GAAKoC,EAAYpC,EAAO,GAAIkC,EAAiB,GAAIlC,EAAO,IAChE,CAACkC,EAAiB,GAAIlC,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAGvD,GAAIA,EAAO,GAAKkC,EAAiB,GAE/B,MAAO,CACL,CAAClC,EAAO,GAAIA,EAAO,GAAIkC,EAAiB,GAAIlC,EAAO,IACnD,CAACkC,EAAiB,GAAIlC,EAAO,GAAIA,EAAO,GAAKoC,EAAYpC,EAAO,IAGtE,CAEA,MAAO,CAACA,EACV,C,iCC92BO,MAAM8pB,EAAkB,CAE7B,QAAW,SAAW,EAAItyB,KAAKuyB,IAC/B,QAAY,EAAIvyB,KAAKuyB,GAAK,QAAW,IACrC,GAAM,MACN,EAAK,EACL,QAAS,KAAO,K,8HChClB,MAAMC,UAAmBC,EAAAA,GAMvBl4B,WAAAA,CAAYmR,EAAagnB,GACvB/3B,QAMAC,KAAK+3B,WAAa,EAMlB/3B,KAAKg4B,mBAAqB,OAEX/3B,IAAX63B,GAAyBltB,MAAMC,QAAQiG,EAAY,IAMrD9Q,KAAKi4B,eAEDnnB,EAEFgnB,GATF93B,KAAKk4B,mBACHJ,EAC8BhnB,EAUpC,CAQAwQ,KAAAA,GACE,OAAO,IAAIsW,EAAW53B,KAAKu0B,gBAAgBxpB,QAAS/K,KAAK83B,OAC3D,CAUApS,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,OAAIA,GAAqBwN,EAAAA,EAAAA,IAAyBtzB,KAAK+P,YAAa4V,EAAGC,GAC9DE,GAEL9lB,KAAKg4B,mBAAqBh4B,KAAKylB,gBACjCzlB,KAAK+3B,UAAY3yB,KAAKwX,MACpBub,EAAAA,EAAAA,IACEn4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACL,IAGJvnB,KAAKg4B,kBAAoBh4B,KAAKylB,gBAEzB2S,EAAAA,EAAAA,GACLp4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACLvnB,KAAK+3B,WACL,EACApS,EACAC,EACAC,EACAC,GAEJ,CAOAoP,OAAAA,GACE,OAAOmD,EAAAA,EAAAA,IACLr4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OAET,CAQA+Q,cAAAA,GACE,OAAOC,EAAAA,EAAAA,IACLv4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OAET,CAQAiR,6BAAAA,CAA8BnT,GAE5B,MAAMoT,EAA4B,GAUlC,OATAA,EAA0Br0B,QAASs0B,EAAAA,EAAAA,IACjC14B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACLlC,EACAoT,EACA,GAEK,IAAIb,EAAWa,EAA2B,KACnD,CAQA3R,OAAAA,GACE,MAAO,YACT,CASAE,gBAAAA,CAAiBpZ,GACf,OAAO,CACT,CASAqqB,cAAAA,CAAennB,EAAagnB,GAC1B93B,KAAK24B,UAAUb,EAAQhnB,EAAa,GAC/B9Q,KAAKu0B,kBACRv0B,KAAKu0B,gBAAkB,IAEzBv0B,KAAKu0B,gBAAgBnwB,QAASw0B,EAAAA,EAAAA,IAC5B54B,KAAKu0B,gBACL,EACAzjB,EACA9Q,KAAKunB,QAEPvnB,KAAKmL,SACP,EAGF,U,sDCzKA,MAAM0tB,UAAgBhB,EAAAA,GAYpBl4B,WAAAA,CAAYmR,EAAagnB,EAAQgB,GAC/B/4B,QAMAC,KAAK+4B,MAAQ,GAMb/4B,KAAKg5B,4BAA8B,EAMnCh5B,KAAKi5B,mBAAqB,KAM1Bj5B,KAAK+3B,WAAa,EAMlB/3B,KAAKg4B,mBAAqB,EAM1Bh4B,KAAKk5B,mBAAqB,EAM1Bl5B,KAAKm5B,yBAA2B,UAEjBl5B,IAAX63B,GAAwBgB,GAC1B94B,KAAKk4B,mBACHJ,EAC8BhnB,GAEhC9Q,KAAK+4B,MAAQD,GAEb94B,KAAKi4B,eAEDnnB,EAEFgnB,EAGN,CAOAsB,gBAAAA,CAAiBC,GACVr5B,KAAKu0B,iBAGR/Y,EAAAA,EAAAA,IAAOxb,KAAKu0B,gBAAiB8E,EAAWC,sBAFxCt5B,KAAKu0B,gBAAkB8E,EAAWC,qBAAqBvuB,QAIzD/K,KAAK+4B,MAAMj0B,KAAK9E,KAAKu0B,gBAAgBnwB,QACrCpE,KAAKmL,SACP,CAQAmW,KAAAA,GACE,MAAMiY,EAAU,IAAIV,EAClB74B,KAAKu0B,gBAAgBxpB,QACrB/K,KAAK83B,OACL93B,KAAK+4B,MAAMhuB,SAGb,OADAwuB,EAAQC,gBAAgBx5B,MACjBu5B,CACT,CAUA7T,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,OAAIA,GAAqBwN,EAAAA,EAAAA,IAAyBtzB,KAAK+P,YAAa4V,EAAGC,GAC9DE,GAEL9lB,KAAKg4B,mBAAqBh4B,KAAKylB,gBACjCzlB,KAAK+3B,UAAY3yB,KAAKwX,MACpB6c,EAAAA,EAAAA,IACEz5B,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACL,IAGJvnB,KAAKg4B,kBAAoBh4B,KAAKylB,gBAEzBiU,EAAAA,EAAAA,IACL15B,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACLvnB,KAAK+3B,WACL,EACApS,EACAC,EACAC,EACAC,GAEJ,CAQAC,UAAAA,CAAWJ,EAAGC,GACZ,OAAO+T,EAAAA,EAAAA,IACL35B,KAAK45B,6BACL,EACA55B,KAAK+4B,MACL/4B,KAAKunB,OACL5B,EACAC,EAEJ,CAOAsP,OAAAA,GACE,OAAO2E,EAAAA,EAAAA,IACL75B,KAAK45B,6BACL,EACA55B,KAAK+4B,MACL/4B,KAAKunB,OAET,CAgBA+Q,cAAAA,CAAewB,GACb,IAAIvF,EAQJ,YAPct0B,IAAV65B,GACFvF,EAAkBv0B,KAAK45B,6BAA6B7uB,SACpDgvB,EAAAA,EAAAA,IAAkBxF,EAAiB,EAAGv0B,KAAK+4B,MAAO/4B,KAAKunB,OAAQuS,IAE/DvF,EAAkBv0B,KAAKu0B,iBAGlByF,EAAAA,EAAAA,IAAwBzF,EAAiB,EAAGv0B,KAAK+4B,MAAO/4B,KAAKunB,OACtE,CAKA0S,OAAAA,GACE,OAAOj6B,KAAK+4B,KACd,CAKAmB,oBAAAA,GACE,GAAIl6B,KAAKg5B,4BAA8Bh5B,KAAKylB,cAAe,CACzD,MAAM0U,GAAa/E,EAAAA,EAAAA,IAAUp1B,KAAK+P,aAClC/P,KAAKi5B,oBAAqBmB,EAAAA,EAAAA,GACxBp6B,KAAK45B,6BACL,EACA55B,KAAK+4B,MACL/4B,KAAKunB,OACL4S,EACA,GAEFn6B,KAAKg5B,2BAA6Bh5B,KAAKylB,aACzC,CACA,OACEzlB,KAAKi5B,kBAET,CAQAoB,gBAAAA,GACE,OAAO,IAAIC,EAAAA,EAAMt6B,KAAKk6B,uBAAwB,MAChD,CASAK,kBAAAA,GACE,OAAOv6B,KAAK+4B,MAAM30B,MACpB,CAYAo2B,aAAAA,CAAcxzB,GACZ,OAAIA,EAAQ,GAAKhH,KAAK+4B,MAAM30B,QAAU4C,EAC7B,KAEF,IAAI4wB,EACT53B,KAAKu0B,gBAAgBxpB,MACT,IAAV/D,EAAc,EAAIhH,KAAK+4B,MAAM/xB,EAAQ,GACrChH,KAAK+4B,MAAM/xB,IAEbhH,KAAK83B,OAET,CAOA2C,cAAAA,GACE,MAAM3C,EAAS93B,KAAK83B,OACdvD,EAAkBv0B,KAAKu0B,gBACvBuE,EAAO94B,KAAK+4B,MACZ2B,EAAc,GACpB,IAAIlG,EAAS,EACb,IAAK,IAAIptB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACXiyB,EAAa,IAAIzB,EACrBrD,EAAgBxpB,MAAMypB,EAAQC,GAC9BqD,GAEF4C,EAAY51B,KAAKu0B,GACjB7E,EAASC,CACX,CACA,OAAOiG,CACT,CAKAd,0BAAAA,GACE,GAAI55B,KAAKk5B,mBAAqBl5B,KAAKylB,cAAe,CAChD,MAAM8O,EAAkBv0B,KAAKu0B,iBACzBoG,EAAAA,EAAAA,IAAuBpG,EAAiB,EAAGv0B,KAAK+4B,MAAO/4B,KAAKunB,QAC9DvnB,KAAKm5B,yBAA2B5E,GAEhCv0B,KAAKm5B,yBAA2B5E,EAAgBxpB,QAChD/K,KAAKm5B,yBAAyB/0B,QAAS21B,EAAAA,EAAAA,IACrC/5B,KAAKm5B,yBACL,EACAn5B,KAAK+4B,MACL/4B,KAAKunB,SAGTvnB,KAAKk5B,kBAAoBl5B,KAAKylB,aAChC,CACA,OAAqCzlB,KAAKm5B,wBAC5C,CAQAX,6BAAAA,CAA8BnT,GAE5B,MAAMoT,EAA4B,GAE5BmC,EAAiB,GAWvB,OAVAnC,EAA0Br0B,QAASy2B,EAAAA,EAAAA,IACjC76B,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACLniB,KAAKwX,KAAKyI,GACVoT,EACA,EACAmC,GAEK,IAAI/B,EAAQJ,EAA2B,KAAMmC,EACtD,CAQA9T,OAAAA,GACE,MAAO,SACT,CASAE,gBAAAA,CAAiBpZ,GACf,OAAOktB,EAAAA,EAAAA,IACL96B,KAAK45B,6BACL,EACA55B,KAAK+4B,MACL/4B,KAAKunB,OACL3Z,EAEJ,CASAqqB,cAAAA,CAAennB,EAAagnB,GAC1B93B,KAAK24B,UAAUb,EAAQhnB,EAAa,GAC/B9Q,KAAKu0B,kBACRv0B,KAAKu0B,gBAAkB,IAEzB,MAAMuE,GAAOiC,EAAAA,EAAAA,IACX/6B,KAAKu0B,gBACL,EACAzjB,EACA9Q,KAAKunB,OACLvnB,KAAK+4B,OAEP/4B,KAAKu0B,gBAAgBnwB,OAAyB,IAAhB00B,EAAK10B,OAAe,EAAI00B,EAAKA,EAAK10B,OAAS,GACzEpE,KAAKmL,SACP,EAGF,UAkCO,SAAS6vB,EAAWptB,GACzB,IAAIvG,EAAAA,EAAAA,IAAQuG,GACV,MAAM,IAAI2nB,MAAM,2CAElB,MAAMjK,EAAO1d,EAAO,GACd2d,EAAO3d,EAAO,GACd4d,EAAO5d,EAAO,GACd6d,EAAO7d,EAAO,GACd2mB,EAAkB,CACtBjJ,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,GAEF,OAAO,IAAIsN,EAAQtE,EAAiB,KAAM,CAACA,EAAgBnwB,QAC7D,C,gIC5aA,MAAM62B,UAAgBxmB,EAAAA,EAIpB9U,WAAAA,CAAYsK,GACVlK,QAEA,MAAMwB,EAAU0I,EAAQ1I,SACpBA,GAAY0I,EAAQrG,QAAWrC,EAAQ+Q,MAAMwE,gBAC/CvV,EAAQ+Q,MAAMwE,cAAgB,QAOhC9W,KAAKuB,QAAUA,GAAoB,KAMnCvB,KAAKk7B,QAAU,KAMfl7B,KAAKgB,KAAO,KAMZhB,KAAK8L,aAAe,GAEhB7B,EAAQ8J,SACV/T,KAAK+T,OAAS9J,EAAQ8J,QAGpB9J,EAAQrG,QACV5D,KAAK4Z,UAAU3P,EAAQrG,OAE3B,CAMA4B,eAAAA,GAAkB,IAAA21B,EACJ,QAAZA,EAAAn7B,KAAKuB,eAAO,IAAA45B,GAAZA,EAAchoB,SACdpT,MAAMyF,iBACR,CAOAiM,MAAAA,GACE,OAAOzR,KAAKgB,IACd,CAUA2X,MAAAA,CAAO9Y,GACU,IAAAu7B,EAAXp7B,KAAKgB,OACK,QAAZo6B,EAAAp7B,KAAKuB,eAAO,IAAA65B,GAAZA,EAAcjoB,UAEhB,IAAK,IAAI/L,EAAI,EAAGwE,EAAK5L,KAAK8L,aAAa1H,OAAQgD,EAAIwE,IAAMxE,GACvD9C,EAAAA,EAAAA,IAActE,KAAK8L,aAAa1E,IAIlC,GAFApH,KAAK8L,aAAa1H,OAAS,EAC3BpE,KAAKgB,KAAOnB,EACRA,EAAK,KAAAw7B,EACP,MAAMz3B,EAAqB,QAAfy3B,EAAGr7B,KAAKk7B,eAAO,IAAAG,EAAAA,EAAIx7B,EAAIqc,+BAC/Blc,KAAKuB,SACPqC,EAAOmT,YAAY/W,KAAKuB,SAEtBvB,KAAK+T,SAAWgZ,EAAAA,IAClB/sB,KAAK8L,aAAahH,MAChBjD,EAAAA,EAAAA,IAAOhC,EAAK6e,EAAAA,EAAa6C,WAAYvhB,KAAK+T,OAAQ/T,OAGtDH,EAAIkU,QACN,CACF,CAOAA,MAAAA,CAAOunB,GAAW,CAWlB1hB,SAAAA,CAAUhW,GACR5D,KAAKk7B,QACe,kBAAXt3B,EAAsBwO,SAASwC,eAAehR,GAAUA,CACnE,EAGF,UC6LA,QAzSA,cAA0Bq3B,EAIxBt7B,WAAAA,CAAYsK,GACVA,EAAUA,GAAoB,CAAC,EAE/BlK,MAAM,CACJwB,QAAS6Q,SAASC,cAAc,OAChC0B,OAAQ9J,EAAQ8J,OAChBnQ,OAAQqG,EAAQrG,SAOlB5D,KAAKu7B,WAAanpB,SAASC,cAAc,MAMzCrS,KAAKw7B,gBACmBv7B,IAAtBgK,EAAQwxB,WAA0BxxB,EAAQwxB,UAM5Cz7B,KAAK07B,eAAiB17B,KAAKw7B,WAM3Bx7B,KAAK27B,0BAA+C17B,IAAxBgK,EAAQ2xB,YAMpC57B,KAAK67B,kBACqB57B,IAAxBgK,EAAQ2xB,aAA4B3xB,EAAQ2xB,YAEzC57B,KAAK67B,eACR77B,KAAKw7B,YAAa,GAOpBx7B,KAAK87B,cAAgB7xB,EAAQ2iB,aAE7B,MAAMla,OACkBzS,IAAtBgK,EAAQyI,UAA0BzI,EAAQyI,UAAY,iBAElDqpB,OACiB97B,IAArBgK,EAAQ8xB,SAAyB9xB,EAAQ8xB,SAAW,eAEhDC,OACwB/7B,IAA5BgK,EAAQ+xB,gBACJ/xB,EAAQ+xB,gBACRtpB,EAAY,UAEZupB,OACsBh8B,IAA1BgK,EAAQgyB,cAA8BhyB,EAAQgyB,cAAgB,SAE1DC,OAC0Bj8B,IAA9BgK,EAAQiyB,kBACJjyB,EAAQiyB,kBACRxpB,EAAY,YAEW,kBAAlBupB,GAKTj8B,KAAKm8B,eAAiB/pB,SAASC,cAAc,QAC7CrS,KAAKm8B,eAAeC,YAAcH,EAClCj8B,KAAKm8B,eAAezpB,UAAYwpB,GAEhCl8B,KAAKm8B,eAAiBF,EAGxB,MAAMI,OAA0Bp8B,IAAlBgK,EAAQoyB,MAAsBpyB,EAAQoyB,MAAQ,IAEvC,kBAAVA,GAKTr8B,KAAKs8B,OAASlqB,SAASC,cAAc,QACrCrS,KAAKs8B,OAAOF,YAAcC,EAC1Br8B,KAAKs8B,OAAO5pB,UAAYspB,GAExBh8B,KAAKs8B,OAASD,EAGhB,MAAME,EACJv8B,KAAK67B,eAAiB77B,KAAKw7B,WAAax7B,KAAKm8B,eAAiBn8B,KAAKs8B,OAMrEt8B,KAAKw8B,cAAgBpqB,SAASC,cAAc,UAC5CrS,KAAKw8B,cAAcC,aAAa,OAAQ,UACxCz8B,KAAKw8B,cAAcC,aAAa,gBAAiB3N,QAAQ9uB,KAAKw7B,aAC9Dx7B,KAAKw8B,cAAcE,MAAQX,EAC3B/7B,KAAKw8B,cAAczlB,YAAYwlB,GAE/Bv8B,KAAKw8B,cAAcl6B,iBACjBC,EAAAA,EAAUS,MACVhD,KAAK28B,aAAat6B,KAAKrC,OACvB,GAGF,MAAM48B,EACJlqB,EACA,IACAC,EAAAA,GACA,IACAkqB,EAAAA,IACC78B,KAAKw7B,YAAcx7B,KAAK67B,aAAe,IAAMiB,EAAAA,GAAkB,KAC/D98B,KAAK67B,aAAe,GAAK,qBACtBt6B,EAAUvB,KAAKuB,QACrBA,EAAQmR,UAAYkqB,EACpBr7B,EAAQwV,YAAY/W,KAAKw8B,eACzBj7B,EAAQwV,YAAY/W,KAAKu7B,YAOzBv7B,KAAK+8B,sBAAwB,GAM7B/8B,KAAKgT,kBAAmB,CAC1B,CAQAgqB,0BAAAA,CAA2Bl9B,GACzB,MAAMsK,EAASpK,KAAKyR,SAASwI,eACvBgjB,EAAsB,IAAIC,IAC9B9yB,EAAO+yB,SAAStzB,GAAUA,EAAMuzB,gBAAgBt9B,MAQlD,QAN2BG,IAAvBD,KAAK87B,gBACPlxB,MAAMC,QAAQ7K,KAAK87B,eACf97B,KAAK87B,cAAcz3B,SAASgnB,GAAS4R,EAAoB9U,IAAIkD,KAC7D4R,EAAoB9U,IAAInoB,KAAK87B,iBAG9B97B,KAAK27B,qBAAsB,CAC9B,MAAMC,GAAexxB,EAAOkH,MACzBzH,IAAK,IAAAwzB,EAAA,OAAyD,KAAnC,QAAjBA,EAAAxzB,EAAMgH,mBAAW,IAAAwsB,OAAA,EAAjBA,EAAmBC,iCAEhCt9B,KAAKu9B,eAAe3B,EACtB,CACA,OAAOhxB,MAAM4yB,KAAKP,EACpB,CAMA,oBAAMQ,CAAe39B,GACnB,IAAKA,EAKH,YAJIE,KAAKgT,mBACPhT,KAAKuB,QAAQ+Q,MAAMc,QAAU,OAC7BpT,KAAKgT,kBAAmB,IAK5B,MAAM4Z,QAAqBrI,QAAQwG,IACjC/qB,KAAKg9B,2BAA2Bl9B,GAAYD,KAAK69B,IAC/CC,EAAAA,EAAAA,KAAU,IAAMD,OAIdrwB,EAAUuf,EAAaxoB,OAAS,EAMtC,GALIpE,KAAKgT,kBAAoB3F,IAC3BrN,KAAKuB,QAAQ+Q,MAAMc,QAAU/F,EAAU,GAAK,OAC5CrN,KAAKgT,iBAAmB3F,KAGtB6U,EAAAA,EAAAA,IAAO0K,EAAc5sB,KAAK+8B,uBAA9B,EAIAa,EAAAA,EAAAA,IAAe59B,KAAKu7B,YAGpB,IAAK,IAAIn0B,EAAI,EAAGwE,EAAKghB,EAAaxoB,OAAQgD,EAAIwE,IAAMxE,EAAG,CACrD,MAAM7F,EAAU6Q,SAASC,cAAc,MACvC9Q,EAAQs8B,UAAYjR,EAAaxlB,GACjCpH,KAAKu7B,WAAWxkB,YAAYxV,EAC9B,CAEAvB,KAAK+8B,sBAAwBnQ,CAX7B,CAYF,CAMA+P,YAAAA,CAAap5B,GACXA,EAAM5C,iBACNX,KAAK89B,gBACL99B,KAAK07B,eAAiB17B,KAAKw7B,UAC7B,CAKAsC,aAAAA,GACE99B,KAAKuB,QAAQw8B,UAAUC,OAAOlB,EAAAA,IAC1B98B,KAAKw7B,YACPyC,EAAAA,EAAAA,IAAYj+B,KAAKm8B,eAAgBn8B,KAAKs8B,SAEtC2B,EAAAA,EAAAA,IAAYj+B,KAAKs8B,OAAQt8B,KAAKm8B,gBAEhCn8B,KAAKw7B,YAAcx7B,KAAKw7B,WACxBx7B,KAAKw8B,cAAcC,aAAa,gBAAiB3N,QAAQ9uB,KAAKw7B,YAChE,CAOA0C,cAAAA,GACE,OAAOl+B,KAAK67B,YACd,CAOA0B,cAAAA,CAAe3B,GACT57B,KAAK67B,eAAiBD,IAG1B57B,KAAK67B,aAAeD,EACpB57B,KAAKuB,QAAQw8B,UAAUC,OAAO,oBAC1Bh+B,KAAK07B,gBACP17B,KAAK89B,gBAET,CASAK,YAAAA,CAAa1C,GACXz7B,KAAK07B,eAAiBD,EACjBz7B,KAAK67B,cAAgB77B,KAAKw7B,aAAeC,GAG9Cz7B,KAAK89B,eACP,CAQAM,YAAAA,GACE,OAAOp+B,KAAKw7B,UACd,CAOAznB,MAAAA,CAAOunB,GACLt7B,KAAKy9B,eAAenC,EAASx7B,WAC/B,G,cClKF,QAvJA,cAAqBm7B,EAInBt7B,WAAAA,CAAYsK,GACVA,EAAUA,GAAoB,CAAC,EAE/BlK,MAAM,CACJwB,QAAS6Q,SAASC,cAAc,OAChC0B,OAAQ9J,EAAQ8J,OAChBnQ,OAAQqG,EAAQrG,SAGlB,MAAM8O,OACkBzS,IAAtBgK,EAAQyI,UAA0BzI,EAAQyI,UAAY,YAElD2pB,OAA0Bp8B,IAAlBgK,EAAQoyB,MAAsBpyB,EAAQoyB,MAAQ,SAEtDgC,OACyBp+B,IAA7BgK,EAAQo0B,iBACJp0B,EAAQo0B,iBACR,aAMNr+B,KAAKs8B,OAAS,KAEO,kBAAVD,GACTr8B,KAAKs8B,OAASlqB,SAASC,cAAc,QACrCrS,KAAKs8B,OAAO5pB,UAAY2rB,EACxBr+B,KAAKs8B,OAAOF,YAAcC,IAE1Br8B,KAAKs8B,OAASD,EACdr8B,KAAKs8B,OAAOyB,UAAU5V,IAAIkW,IAG5B,MAAMtC,EAAW9xB,EAAQ8xB,SAAW9xB,EAAQ8xB,SAAW,iBAEjDx3B,EAAS6N,SAASC,cAAc,UACtC9N,EAAOmO,UAAYA,EAAY,SAC/BnO,EAAOk4B,aAAa,OAAQ,UAC5Bl4B,EAAOm4B,MAAQX,EACfx3B,EAAOwS,YAAY/W,KAAKs8B,QAExB/3B,EAAOjC,iBACLC,EAAAA,EAAUS,MACVhD,KAAK28B,aAAat6B,KAAKrC,OACvB,GAGF,MAAM48B,EACJlqB,EAAY,IAAMC,EAAAA,GAAqB,IAAMkqB,EAAAA,GACzCt7B,EAAUvB,KAAKuB,QACrBA,EAAQmR,UAAYkqB,EACpBr7B,EAAQwV,YAAYxS,GAKpBvE,KAAKs+B,gBAAkBr0B,EAAQs0B,WAAat0B,EAAQs0B,gBAAat+B,EAMjED,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,IAMrEz+B,KAAK0+B,eAAiCz+B,IAArBgK,EAAQ00B,UAAyB10B,EAAQ00B,SAM1D3+B,KAAKwiB,eAAYviB,EAEbD,KAAK0+B,WACP1+B,KAAKuB,QAAQw8B,UAAU5V,IAAIyW,EAAAA,GAE/B,CAMAjC,YAAAA,CAAap5B,GACXA,EAAM5C,sBACuBV,IAAzBD,KAAKs+B,gBACPt+B,KAAKs+B,kBAELt+B,KAAK6+B,aAET,CAKAA,WAAAA,GACE,MACM3pB,EADMlV,KAAKyR,SACA0J,UACjB,IAAKjG,EAGH,OAEF,MAAMxG,EAAWwG,EAAKiO,mBACLljB,IAAbyO,IACE1O,KAAKw+B,UAAY,GAAK9vB,GAAY,EAAItJ,KAAKuyB,MAAQ,EACrDziB,EAAKsJ,QAAQ,CACX9P,SAAU,EACV+vB,SAAUz+B,KAAKw+B,UACfM,OAAQC,EAAAA,KAGV7pB,EAAKgP,YAAY,GAGvB,CAOAnQ,MAAAA,CAAOunB,GACL,MAAMx7B,EAAaw7B,EAASx7B,WAC5B,IAAKA,EACH,OAEF,MAAM4O,EAAW5O,EAAWsO,UAAUM,SACtC,GAAIA,GAAY1O,KAAKwiB,UAAW,CAC9B,MAAM8C,EAAY,UAAY5W,EAAW,OACzC,GAAI1O,KAAK0+B,UAAW,CAClB,MAAMlhB,EAAWxd,KAAKuB,QAAQw8B,UAAUvgB,SAASohB,EAAAA,IAC5CphB,GAAyB,IAAb9O,EAEN8O,GAAyB,IAAb9O,GACrB1O,KAAKuB,QAAQw8B,UAAU5qB,OAAOyrB,EAAAA,IAF9B5+B,KAAKuB,QAAQw8B,UAAU5V,IAAIyW,EAAAA,GAI/B,CACA5+B,KAAKs8B,OAAOhqB,MAAMgT,UAAYA,CAChC,CACAtlB,KAAKwiB,UAAY9T,CACnB,GCtBF,QA9HA,cAAmBusB,EAIjBt7B,WAAAA,CAAYsK,GACVA,EAAUA,GAAoB,CAAC,EAE/BlK,MAAM,CACJwB,QAAS6Q,SAASC,cAAc,OAChCzO,OAAQqG,EAAQrG,SAGlB,MAAM8O,OACkBzS,IAAtBgK,EAAQyI,UAA0BzI,EAAQyI,UAAY,UAElDssB,OAA0B/+B,IAAlBgK,EAAQ+0B,MAAsB/0B,EAAQ+0B,MAAQ,EAEtDC,OACwBh/B,IAA5BgK,EAAQg1B,gBACJh1B,EAAQg1B,gBACRvsB,EAAY,MAEZwsB,OACyBj/B,IAA7BgK,EAAQi1B,iBACJj1B,EAAQi1B,iBACRxsB,EAAY,OAEZysB,OACoBl/B,IAAxBgK,EAAQk1B,YAA4Bl1B,EAAQk1B,YAAc,IACtDC,OACqBn/B,IAAzBgK,EAAQm1B,aAA6Bn1B,EAAQm1B,aAAe,SAExDC,OACuBp/B,IAA3BgK,EAAQo1B,eAA+Bp1B,EAAQo1B,eAAiB,UAC5DC,OACwBr/B,IAA5BgK,EAAQq1B,gBACJr1B,EAAQq1B,gBACR,WAEAC,EAAYntB,SAASC,cAAc,UACzCktB,EAAU7sB,UAAYusB,EACtBM,EAAU9C,aAAa,OAAQ,UAC/B8C,EAAU7C,MAAQ2C,EAClBE,EAAUxoB,YACe,kBAAhBooB,EACH/sB,SAASotB,eAAeL,GACxBA,GAGNI,EAAUj9B,iBACRC,EAAAA,EAAUS,MACVhD,KAAK28B,aAAat6B,KAAKrC,KAAMg/B,IAC7B,GAGF,MAAMS,EAAartB,SAASC,cAAc,UAC1CotB,EAAW/sB,UAAYwsB,EACvBO,EAAWhD,aAAa,OAAQ,UAChCgD,EAAW/C,MAAQ4C,EACnBG,EAAW1oB,YACe,kBAAjBqoB,EACHhtB,SAASotB,eAAeJ,GACxBA,GAGNK,EAAWn9B,iBACTC,EAAAA,EAAUS,MACVhD,KAAK28B,aAAat6B,KAAKrC,MAAOg/B,IAC9B,GAGF,MAAMpC,EACJlqB,EAAY,IAAMC,EAAAA,GAAqB,IAAMkqB,EAAAA,GACzCt7B,EAAUvB,KAAKuB,QACrBA,EAAQmR,UAAYkqB,EACpBr7B,EAAQwV,YAAYwoB,GACpBh+B,EAAQwV,YAAY0oB,GAMpBz/B,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,GACvE,CAOA9B,YAAAA,CAAaqC,EAAOz7B,GAClBA,EAAM5C,iBACNX,KAAK0/B,aAAaV,EACpB,CAMAU,YAAAA,CAAaV,GACX,MACM9pB,EADMlV,KAAKyR,SACA0J,UACjB,IAAKjG,EAGH,OAEF,MAAMyqB,EAAczqB,EAAK0qB,UACzB,QAAoB3/B,IAAhB0/B,EAA2B,CAC7B,MAAME,EAAU3qB,EAAK4qB,mBAAmBH,EAAcX,GAClDh/B,KAAKw+B,UAAY,GACftpB,EAAK2J,gBACP3J,EAAK6qB,mBAEP7qB,EAAKsJ,QAAQ,CACXwhB,KAAMH,EACNpB,SAAUz+B,KAAKw+B,UACfM,OAAQC,EAAAA,MAGV7pB,EAAK+qB,QAAQJ,EAEjB,CACF,GCxHK,SAASK,EAASj2B,GACvBA,EAAUA,GAAoB,CAAC,EAG/B,MAAM6K,EAAW,IAAIhK,EAAAA,QAEgB7K,IAAjBgK,EAAQ+1B,MAAqB/1B,EAAQ+1B,OAEvDlrB,EAAShQ,KAAK,IAAIq7B,EAAKl2B,EAAQm2B,oBAGQngC,IAAnBgK,EAAQsc,QAAuBtc,EAAQsc,SAE3DzR,EAAShQ,KAAK,IAAIu7B,EAAOp2B,EAAQq2B,gBASnC,YAL0BrgC,IAAxBgK,EAAQyzB,aAA4BzzB,EAAQyzB,cAE5C5oB,EAAShQ,KAAK,IAAIy7B,EAAYt2B,EAAQu2B,qBAGjC1rB,CACT,C,6ECpCA,MAAM2rB,EAIJ9gC,WAAAA,CAAYsK,GACVA,EAAUA,GAAW,CAAC,EAMtBjK,KAAK0gC,cAAgB,KAMrB1gC,KAAK2gC,OAAS,UACQ1gC,IAAlBgK,EAAQ2e,OACV5oB,KAAK4gC,SAAS32B,EAAQ2e,MAE1B,CAOAtH,KAAAA,GACE,MAAMsH,EAAQ5oB,KAAK6gC,WACnB,OAAO,IAAIJ,EAAK,CACd7X,MAAOhe,MAAMC,QAAQ+d,GAASA,EAAM7d,QAAU6d,QAAS3oB,GAE3D,CAOA4gC,QAAAA,GACE,OAAO7gC,KAAK2gC,MACd,CAQAC,QAAAA,CAAShY,GACP,GAAc,OAAVA,GAAmC,kBAAVA,GAAsB,QAASA,EAAO,CACjE,MAAMkY,GAAeC,EAAAA,EAAAA,GACnB,KACAnY,EAAMF,IACN,iBACAzoB,EACA2oB,EAAM4L,OAAS,KAAO5L,EAAMA,MAAQA,EAAMA,MAAQ,OAChDA,EAAM4L,QAAU5L,EAAMpa,OAE1BsyB,EAAanlB,QAAQnD,MAAK,KACxBxY,KAAK0gC,cAAgB,QAEnBI,EAAald,kBAAoBqF,EAAAA,EAAWvf,MAC9Co3B,EAAan3B,OAEXm3B,EAAald,kBAAoBqF,EAAAA,EAAWC,UAC9ClpB,KAAK0gC,cAAgBI,EAEzB,CACA9gC,KAAK2gC,OAAS/X,CAChB,CAKAvgB,MAAAA,GACE,MAAM24B,EAAOhhC,KAAK6gC,WAClB,OAAKG,EAGEA,aAAgBC,eAAiBD,aAAgBE,gBACpD/0B,EAAAA,EAAAA,IAAO60B,GACS,kBAATA,GAAqB,QAASA,EACnCA,EAAKtY,IAAM,IAAMsY,EAAKxM,QACtBlL,EAAAA,EAAAA,IAAQ0X,GAAMloB,WANX,EAOX,CAKA8C,OAAAA,GACE,QAAS5b,KAAK0gC,aAChB,CAKA/kB,KAAAA,GACE,OAAO3b,KAAK0gC,cAAgB1gC,KAAK0gC,cAAc/kB,QAAU4I,QAAQC,SACnE,EAGF,S,kCCvHA,SAMExY,eAAgB,iB,iBCHX,SAAS8E,EAAYyjB,EAAiBC,EAAQC,EAAKlN,GACxD,KAAOiN,EAASC,EAAMlN,GAAQ,CAC5B,IAAK,IAAIngB,EAAI,EAAGA,EAAImgB,IAAUngB,EAAG,CAC/B,MAAM+5B,EAAM5M,EAAgBC,EAASptB,GACrCmtB,EAAgBC,EAASptB,GAAKmtB,EAAgBE,EAAMlN,EAASngB,GAC7DmtB,EAAgBE,EAAMlN,EAASngB,GAAK+5B,CACtC,CACA3M,GAAUjN,EACVkN,GAAOlN,CACT,CACF,CCLO,SAAS6Z,EAAsB7M,EAAiBC,EAAQC,EAAKlN,GAGlE,IAAI8Z,EAAO,EACP3L,EAAKnB,EAAgBE,EAAMlN,GAC3BoO,EAAKpB,EAAgBE,EAAMlN,EAAS,GACxC,KAAOiN,EAASC,EAAKD,GAAUjN,EAAQ,CACrC,MAAMqO,EAAKrB,EAAgBC,GACrBqB,EAAKtB,EAAgBC,EAAS,GACpC6M,IAASzL,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,CACP,CACA,OAAgB,IAATwL,OAAaphC,EAAYohC,EAAO,CACzC,CAeO,SAAS1G,EACdpG,EACAC,EACAsE,EACAvR,EACAuS,GAEAA,OAAkB75B,IAAV65B,GAAsBA,EAC9B,IAAK,IAAI1yB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACXk6B,EAAcF,EAClB7M,EACAC,EACAC,EACAlN,GAEF,GAAU,IAANngB,GACF,GAAK0yB,GAASwH,IAAkBxH,IAAUwH,EACxC,OAAO,OAGT,GAAKxH,IAAUwH,IAAkBxH,GAASwH,EACxC,OAAO,EAGX9M,EAASC,CACX,CACA,OAAO,CACT,CAeO,SAAS8M,EACdhN,EACAC,EACAgN,EACAja,EACAuS,GAEA,IAAK,IAAI1yB,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnB,IAAKuzB,EAAuBpG,EAAiBC,EAAQsE,EAAMvR,EAAQuS,GACjE,OAAO,EAELhB,EAAK10B,SACPowB,EAASsE,EAAKA,EAAK10B,OAAS,GAEhC,CACA,OAAO,CACT,CAeO,SAAS21B,EACdxF,EACAC,EACAsE,EACAvR,EACAuS,GAEAA,OAAkB75B,IAAV65B,GAAsBA,EAC9B,IAAK,IAAI1yB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACXk6B,EAAcF,EAClB7M,EACAC,EACAC,EACAlN,IAGM,IAANngB,EACK0yB,GAASwH,IAAkBxH,IAAUwH,EACrCxH,IAAUwH,IAAkBxH,GAASwH,IAE1CG,EAAmBlN,EAAiBC,EAAQC,EAAKlN,GAEnDiN,EAASC,CACX,CACA,OAAOD,CACT,CAeO,SAASkN,EACdnN,EACAC,EACAgN,EACAja,EACAuS,GAEA,IAAK,IAAI1yB,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAC3CotB,EAASuF,EACPxF,EACAC,EACAgN,EAAMp6B,GACNmgB,EACAuS,GAGJ,OAAOtF,CACT,CASO,SAASmN,EAAYpN,EAAiBuE,GAC3C,MAAM0I,EAAQ,GACd,IAEII,EAFApN,EAAS,EACTqN,EAAe,EAEnB,IAAK,IAAIz6B,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GAEX06B,EAAcV,EAAsB7M,EAAiBC,EAAQC,EAAK,GAIxE,QAHyBx0B,IAArB2hC,IACFA,EAAmBE,GAEjBA,IAAgBF,EAClBJ,EAAM18B,KAAKg0B,EAAK/tB,MAAM82B,EAAcz6B,EAAI,QACnC,CACL,GAAqB,IAAjBo6B,EAAMp9B,OACR,SAEFo9B,EAAMA,EAAMp9B,OAAS,GAAGU,KAAKg0B,EAAK+I,GACpC,CACAA,EAAez6B,EAAI,EACnBotB,EAASC,CACX,CACA,OAAO+M,CACT,C,0ICxHO,SAAS9I,EACdnE,EACAC,EACAC,EACAlN,EACAlC,EACAoT,EACAsJ,GAEA,MAAM/5B,GAAKysB,EAAMD,GAAUjN,EAC3B,GAAIvf,EAAI,EAAG,CACT,KAAOwsB,EAASC,EAAKD,GAAUjN,EAC7BkR,EAA0BsJ,KAAsBxN,EAAgBC,GAChEiE,EAA0BsJ,KACxBxN,EAAgBC,EAAS,GAE7B,OAAOuN,CACT,CAEA,MAAMC,EAAU,IAAIp3B,MAAM5C,GAC1Bg6B,EAAQ,GAAK,EACbA,EAAQh6B,EAAI,GAAK,EAEjB,MAAMi6B,EAAQ,CAACzN,EAAQC,EAAMlN,GAC7B,IAAIvgB,EAAQ,EACZ,KAAOi7B,EAAM79B,OAAS,GAAG,CACvB,MAAM89B,EAAOD,EAAM17B,MACb47B,EAAQF,EAAM17B,MACpB,IAAI67B,EAAqB,EACzB,MAAM1M,EAAKnB,EAAgB4N,GACrBxM,EAAKpB,EAAgB4N,EAAQ,GAC7BvM,EAAKrB,EAAgB2N,GACrBrM,EAAKtB,EAAgB2N,EAAO,GAClC,IAAK,IAAI96B,EAAI+6B,EAAQ5a,EAAQngB,EAAI86B,EAAM96B,GAAKmgB,EAAQ,CAClD,MAAM5B,EAAI4O,EAAgBntB,GACpBwe,EAAI2O,EAAgBntB,EAAI,GACxBi7B,GAAkBC,EAAAA,EAAAA,IAAuB3c,EAAGC,EAAG8P,EAAIC,EAAIC,EAAIC,GAC7DwM,EAAkBD,IACpBp7B,EAAQI,EACRg7B,EAAqBC,EAEzB,CACID,EAAqB/c,IACvB2c,GAASh7B,EAAQwtB,GAAUjN,GAAU,EACjC4a,EAAQ5a,EAASvgB,GACnBi7B,EAAMn9B,KAAKq9B,EAAOn7B,GAEhBA,EAAQugB,EAAS2a,GACnBD,EAAMn9B,KAAKkC,EAAOk7B,GAGxB,CACA,IAAK,IAAI96B,EAAI,EAAGA,EAAIY,IAAKZ,EACnB46B,EAAQ56B,KACVqxB,EAA0BsJ,KACxBxN,EAAgBC,EAASptB,EAAImgB,GAC/BkR,EAA0BsJ,KACxBxN,EAAgBC,EAASptB,EAAImgB,EAAS,IAG5C,OAAOwa,CACT,CAcO,SAASQ,EACdhO,EACAC,EACAsE,EACAvR,EACAlC,EACAoT,EACAsJ,EACAnH,GAEA,IAAK,IAAIxzB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACjB26B,EAAmBrJ,EACjBnE,EACAC,EACAC,EACAlN,EACAlC,EACAoT,EACAsJ,GAEFnH,EAAe91B,KAAKi9B,GACpBvN,EAASC,CACX,CACA,OAAOsN,CACT,CAwGO,SAASS,EAAK79B,EAAOkiB,GAC1B,OAAOA,EAAYzhB,KAAKq9B,MAAM99B,EAAQkiB,EACxC,CAqBO,SAAS6b,EACdnO,EACAC,EACAC,EACAlN,EACAV,EACA4R,EACAsJ,GAGA,GAAIvN,GAAUC,EACZ,OAAOsN,EAGT,IAQInM,EAAIC,EARJH,EAAK8M,EAAKjO,EAAgBC,GAAS3N,GACnC8O,EAAK6M,EAAKjO,EAAgBC,EAAS,GAAI3N,GAC3C2N,GAAUjN,EAEVkR,EAA0BsJ,KAAsBrM,EAChD+C,EAA0BsJ,KAAsBpM,EAIhD,GAIE,GAHAC,EAAK4M,EAAKjO,EAAgBC,GAAS3N,GACnCgP,EAAK2M,EAAKjO,EAAgBC,EAAS,GAAI3N,IACvC2N,GAAUjN,IACIkN,EAOZ,OAFAgE,EAA0BsJ,KAAsBnM,EAChD6C,EAA0BsJ,KAAsBlM,EACzCkM,QAEFnM,GAAMF,GAAMG,GAAMF,GAC3B,KAAOnB,EAASC,GAAK,CAEnB,MAAMqB,EAAK0M,EAAKjO,EAAgBC,GAAS3N,GACnCkP,EAAKyM,EAAKjO,EAAgBC,EAAS,GAAI3N,GAG7C,GAFA2N,GAAUjN,EAENuO,GAAMF,GAAMG,GAAMF,EACpB,SAGF,MAAM8M,EAAM/M,EAAKF,EACXkN,EAAM/M,EAAKF,EAEXkN,EAAM/M,EAAKJ,EACXoN,EAAM/M,EAAKJ,EAKfgN,EAAMG,GAAOF,EAAMC,IACjBF,EAAM,GAAKE,EAAMF,GAAQA,GAAOE,GAAQF,EAAM,GAAKE,EAAMF,KACzDC,EAAM,GAAKE,EAAMF,GAAQA,GAAOE,GAAQF,EAAM,GAAKE,EAAMF,IAG3DhN,EAAKE,EACLD,EAAKE,IAMP0C,EAA0BsJ,KAAsBnM,EAChD6C,EAA0BsJ,KAAsBlM,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAKE,EACLD,EAAKE,EACP,CAIA,OAFA0C,EAA0BsJ,KAAsBnM,EAChD6C,EAA0BsJ,KAAsBlM,EACzCkM,CACT,CAcO,SAASlH,EACdtG,EACAC,EACAsE,EACAvR,EACAV,EACA4R,EACAsJ,EACAnH,GAEA,IAAK,IAAIxzB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACjB26B,EAAmBW,EACjBnO,EACAC,EACAC,EACAlN,EACAV,EACA4R,EACAsJ,GAEFnH,EAAe91B,KAAKi9B,GACpBvN,EAASC,CACX,CACA,OAAOsN,CACT,CAcO,SAASgB,EACdxO,EACAC,EACAgN,EACAja,EACAV,EACA4R,EACAsJ,EACAiB,GAEA,IAAK,IAAI57B,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GAEbwzB,EAAiB,GACvBmH,EAAmBlH,EACjBtG,EACAC,EACAsE,EACAvR,EACAV,EACA4R,EACAsJ,EACAnH,GAEFoI,EAAgBl+B,KAAK81B,GACrBpG,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAO29B,CACT,C,wFCzdA,MAAMkB,EACiB,qBAAdC,WAA4D,qBAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAqBOC,GAfSJ,EAAGK,SAAS,YAAcL,EAAGK,SAAS,WAQzDL,EAAGK,SAAS,iBACX,wCAAwCC,KAAKN,IAM3BA,EAAGK,SAAS,YAAcL,EAAGK,SAAS,SAM/CE,EAAMP,EAAGK,SAAS,aASlBztB,EACiB,qBAArB4tB,iBAAmCA,iBAAmB,EAOlDC,EACkB,qBAAtBC,mBACoB,qBAApBC,iBACPC,gBAAgBF,kBAMLG,EACM,qBAAVC,OAAyBA,MAAM9iB,UAAU+iB,OAMrCC,EAAmD,oBAAtBC,kBAK7BzhC,EAA2B,WACtC,IAAIC,GAAU,EACd,IACE,MAAMuH,EAAUlG,OAAOU,eAAe,CAAC,EAAG,UAAW,CACnD4H,IAAK,WACH3J,GAAU,CACZ,IAIFiU,OAAOrU,iBAAiB,IAAK,KAAM2H,GAEnC0M,OAAOlR,oBAAoB,IAAK,KAAMwE,EACxC,CAAE,MAAAwgB,GACA,CAEF,OAAO/nB,CACT,CAjBwC,E,iBC7DjC,SAASyhC,EAAiB5P,EAAiBC,EAAQC,EAAKlN,GAC7D,IAAImO,EAAKnB,EAAgBC,GACrBmB,EAAKpB,EAAgBC,EAAS,GAC9BpwB,EAAS,EACb,IAAK,IAAIgD,EAAIotB,EAASjN,EAAQngB,EAAIqtB,EAAKrtB,GAAKmgB,EAAQ,CAClD,MAAMqO,EAAKrB,EAAgBntB,GACrByuB,EAAKtB,EAAgBntB,EAAI,GAC/BhD,GAAUgB,KAAKwX,MAAMgZ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DD,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOzxB,CACT,C,gGCFO,MAAMw6B,EAAe,YAgBfjsB,EAAqB,kBAgBrBkqB,EAAgB,aAShBC,EAAkB,eAMzBsH,EAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,sCACAC,KAAK,IACP,KAGIC,EAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UAIWC,EAAc,CACzBC,OAAQ,IACRC,KAAM,KASKC,EAAoB,SAAUC,GACzC,MAAMC,EAAQD,EAASC,MAAMT,GAC7B,IAAKS,EACH,OAAO,KAET,MAAMvyB,EAAuC,CAC3CwyB,WAAY,SACZt2B,KAAM,QACN8D,MAAO,SACPyyB,OAAQ,MACRC,QAAS,UAEX,IAAK,IAAI59B,EAAI,EAAGwE,EAAK24B,EAAoBngC,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC5D,MAAMzC,EAAQkgC,EAAMz9B,EAAI,QACVnH,IAAV0E,IACF2N,EAAMiyB,EAAoBn9B,IACP,kBAAVzC,EAAqBA,EAAMsgC,OAAStgC,EAEjD,CAOA,OANImc,MAAMkF,OAAO1T,EAAMyyB,UAAYzyB,EAAMyyB,UAAUP,IACjDlyB,EAAMyyB,OAASP,EAAYlyB,EAAMyyB,SAEnCzyB,EAAM4yB,SAAW5yB,EAAM6yB,OACpBC,MAAM,QACNvlC,KAAKwlC,GAAMA,EAAEJ,OAAO/c,QAAQ,eAAgB,MACxC5V,CACT,C,kCCzHA,SAMEgzB,UAAW,YAOX/jB,WAAY,aASZjO,WAAY,aASZW,YAAa,cASbwK,eAAgB,iB,qFCrCX,SAASjN,IACd,OAAO,CACT,CAMO,SAAS+zB,IACd,OAAO,CACT,CAOO,SAASxY,IAAQ,CAWjB,SAAS5H,EAAWqgB,GAEzB,IAAIC,EAGAC,EAEAC,EAMJ,OAAO,WACL,MAAMC,EAAWh7B,MAAMqW,UAAUlW,MAAMyE,KAAKq2B,WAM5C,OALKH,GAAY1lC,OAAS2lC,IAAaG,EAAAA,EAAAA,IAAYF,EAAUF,KAC3DC,EAAW3lC,KACX0lC,EAAWE,EACXH,EAAaD,EAAGp9B,MAAMpI,KAAM6lC,YAEvBJ,CACT,CACF,CAOO,SAAS9H,EAAUoI,GAaxB,OAZA,WACE,IAAIphC,EACJ,IACEA,EAAQohC,GACV,CAAE,MAAOC,GACP,OAAOzhB,QAAQ0hB,OAAOD,EACxB,CACA,OAAIrhC,aAAiB4f,QACZ5f,EAEF4f,QAAQC,QAAQ7f,EACzB,CACOuhC,EACT,C,0HC7DO,MAAMC,EAAW,CAACxhB,IAAKA,IAAKA,IAAK,GAExC,IAAIyhB,EAcJ,MAAMC,EACJ,iFACIC,EACJ,kFACIC,EACJ,qFACIC,EAAW,2CAOjB,SAASC,EAAiBC,EAAGC,GAC3B,OAAOD,EAAEE,SAAS,KACd5gB,OAAO0gB,EAAEG,UAAU,EAAGH,EAAEtiC,OAAS,IAAMuiC,EACvC3gB,OAAO0gB,EACb,CAKA,SAASI,EAAkBle,GACzB,MAAM,IAAI2M,MAAM,oBAAsB3M,EAAQ,aAChD,CAMA,SAASme,EAAUne,GAEjB,GAAIA,EAAMwa,cAAc4D,WAAW,OAAQ,CACzC,MAAMC,EACJre,EAAMic,MAAMyB,IACZ1d,EAAMic,MAAMwB,IACZzd,EAAMic,MAAM0B,GACd,GAAIU,EAAK,CACP,MAAMC,EAAQD,EAAI,GACZE,EAAa,IAAM,IACzB,MAAO,EACLC,EAAAA,EAAAA,IAAOX,EAAiBQ,EAAI,GAAIE,GAAc,GAAO,EAAG,EAAG,MAC3DC,EAAAA,EAAAA,IAAOX,EAAiBQ,EAAI,GAAIE,GAAc,GAAO,EAAG,EAAG,MAC3DC,EAAAA,EAAAA,IAAOX,EAAiBQ,EAAI,GAAIE,GAAc,GAAO,EAAG,EAAG,UACjDlnC,IAAVinC,GAAsBE,EAAAA,EAAAA,IAAMX,EAAiBS,EAAO,KAAM,EAAG,GAAK,EAEtE,CACAJ,EAAkBle,EACpB,CAEA,GAAIA,EAAMoe,WAAW,KAAM,CACzB,GAAIR,EAASjD,KAAK3a,GAAQ,CACxB,MAAMye,EAAMze,EAAMie,UAAU,GACtBS,EAAOD,EAAIjjC,QAAU,EAAI,EAAI,EAC7BmjC,EAAe,CAAC,EAAG,EAAG,EAAG,KAC/B,IAAK,IAAIngC,EAAI,EAAGwE,EAAKy7B,EAAIjjC,OAAQgD,EAAIwE,EAAIxE,GAAKkgC,EAAM,CAClD,IAAIE,EAAiBC,SAASJ,EAAIR,UAAUz/B,EAAGA,EAAIkgC,GAAO,IAC7C,IAATA,IACFE,GAAkBA,GAAkB,GAEtCD,EAAangC,EAAIkgC,GAAQE,CAC3B,CAEA,OADAD,EAAa,GAAKA,EAAa,GAAK,IAC7BA,CACT,CACAT,EAAkBle,EACpB,CAGA,MAAM8e,GA9EDtB,IACHA,GAAoBuB,EAAAA,EAAAA,GAAsB,EAAG,OAAG1nC,EAAW,CACzD2nC,oBAAoB,EACpBC,gBAAgB,KAGbzB,GAyEPsB,EAAQI,UAAY,UACpB,IAAIC,EAAwBL,EAAQI,UACpCJ,EAAQI,UAAYlf,EAChB8e,EAAQI,YAAcC,IACxBL,EAAQI,UAAY,UACpBC,EAAwBL,EAAQI,UAChCJ,EAAQI,UAAYlf,EAChB8e,EAAQI,YAAcC,GACxBjB,EAAkBle,IAGtB,MAAMof,EAAcN,EAAQI,UAC5B,GAAIE,EAAYhB,WAAW,MAAQgB,EAAYhB,WAAW,QACxD,OAAOD,EAAUiB,GAEnBN,EAAQO,UAAU,EAAG,EAAG,EAAG,GAC3BP,EAAQQ,SAAS,EAAG,EAAG,EAAG,GAC1B,MAAMC,EAAiBv9B,MAAM4yB,KAAKkK,EAAQU,aAAa,EAAG,EAAG,EAAG,GAAGhc,MAEnE,OADA+b,EAAe,IAAKE,EAAAA,EAAAA,IAAQF,EAAe,GAAK,IAAK,GAC9CA,CACT,CAQO,SAASG,EAAS1f,GACvB,MAAqB,kBAAVA,EACFA,EAEF9P,EAAS8P,EAClB,CAKA,MAAM2f,EAAiB,KAQjBvgB,EAAQ,CAAC,EAKf,IAAIwgB,EAAY,EAQT,SAASC,EAAU7f,GACxB,GAAqB,IAAjBA,EAAMxkB,OACR,OAAOwkB,EAET,MAAM8f,EAAS9f,EAAM7d,QAErB,OADA29B,EAAO,GAAK,EACLA,CACT,CASA,SAASC,EAAGC,GACV,OAAOA,EAAI,SAAmC,QAAvBxjC,KAAKyjC,IAAID,EAAG,EAAI,KAAiB,OAAa,OAAJA,CACnE,CAMA,SAASE,EAAGF,GACV,OAAOA,EAAI,SAAYxjC,KAAKyjC,IAAID,EAAG,GAAqB,IAAM,KAArBA,EAAI,EAAI,GACnD,CAMA,SAASG,EAAGH,GACV,OAAOA,EAAI,UAAYxjC,KAAKyjC,KAAKD,EAAI,QAAU,QAAS,KAAOA,EAAI,MACrE,CAMA,SAASI,EAAGJ,GACV,OAAOA,EAAI,SAAYxjC,KAAKyjC,IAAID,EAAG,EAAI,GAAKA,GAAK,IAAM,KAAO,EAAI,EACpE,CAMO,SAASK,EAAWrgB,GACzB,MAAMsgB,EAAIH,EAAGngB,EAAM,IACbugB,EAAIJ,EAAGngB,EAAM,IACbvX,EAAI03B,EAAGngB,EAAM,IACbhD,EAAIojB,EAAO,WAAJE,EAAsB,WAAJC,EAAsB,UAAJ93B,GAC3Cua,EAAI,KAAOod,EAAO,WAAJE,EAAsB,WAAJC,EAAsB,WAAJ93B,GAAmBuU,GACrEwjB,EAAI,KAAOxjB,EAAIojB,EAAO,WAAJE,EAAsB,WAAJC,EAAsB,WAAJ93B,IACtDg4B,EAAIjkC,KAAKkkC,MAAMF,EAAGxd,IAAM,IAAMxmB,KAAKuyB,IACzC,MAAO,CACL,IAAM/R,EAAI,GACVxgB,KAAKwX,KAAKgP,EAAIA,EAAIwd,EAAIA,GACtBC,EAAI,EAAIA,EAAI,IAAMA,EAClBzgB,EAAM,GAEV,CAMO,SAAS2gB,EAAW3gB,GACzB,MAAMgD,GAAKhD,EAAM,GAAK,IAAM,IACtB4gB,EAAI5gB,EAAM,GACVygB,EAAKzgB,EAAM,GAAKxjB,KAAKuyB,GAAM,IAC3B/R,EAAIkjB,EAAGld,GACPjG,EAAImjB,EAAGld,EAAK4d,EAAI,IAAOpkC,KAAK8wB,IAAImT,IAChCI,EAAIX,EAAGld,EAAK4d,EAAI,IAAOpkC,KAAKgxB,IAAIiT,IAChCH,EAAIP,EAAO,YAAJhjB,EAAsB,YAAJC,EAAsB,WAAJ6jB,GAC3CN,EAAIR,GAAQ,WAALhjB,EAAuB,YAAJC,EAAsB,WAAJ6jB,GAC5Cp4B,EAAIs3B,EAAO,WAAJhjB,EAAsB,UAAJC,EAAqB,YAAJ6jB,GAChD,MAAO,EACLrC,EAAAA,EAAAA,IAAO8B,EAAI,GAAO,EAAG,EAAG,MACxB9B,EAAAA,EAAAA,IAAO+B,EAAI,GAAO,EAAG,EAAG,MACxB/B,EAAAA,EAAAA,IAAO/1B,EAAI,GAAO,EAAG,EAAG,KACxBuX,EAAM,GAEV,CAMO,SAAS8gB,EAAWhD,GACzB,GAAU,SAANA,EACF,OAAOP,EAET,GAAIne,EAAM2hB,eAAejD,GACvB,OAAO1e,EAAM0e,GAEf,GAAI8B,GAAaD,EAAgB,CAC/B,IAAInhC,EAAI,EACR,IAAK,MAAMG,KAAOygB,EACE,KAAP,EAAN5gB,cACI4gB,EAAMzgB,KACXihC,EAGR,CAEA,MAAM5f,EAAQme,EAAUL,GACH,IAAjB9d,EAAMxkB,QACR0iC,EAAkBJ,GAEpB,IAAK,MAAM8C,KAAK5gB,EACV9H,MAAM0oB,IACR1C,EAAkBJ,GAKtB,OAFA1e,EAAM0e,GAAK9d,IACT4f,EACK5f,CACT,CASO,SAASU,EAAQV,GACtB,OAAIhe,MAAMC,QAAQ+d,GACTA,EAEF8gB,EAAW9gB,EACpB,CAMO,SAAS9P,EAAS8P,GACvB,IAAIsgB,EAAItgB,EAAM,GACVsgB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIC,EAAIvgB,EAAM,GACVugB,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI93B,EAAIuX,EAAM,GACVvX,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGlB,MAAO,QAAU63B,EAAI,IAAMC,EAAI,IAAM93B,EAAI,UADlBpR,IAAb2oB,EAAM,GAAmB,EAAIxjB,KAAKq9B,MAAiB,IAAX7Z,EAAM,IAAa,KAClB,GACrD,C,qTCpTO,MAAMghB,EAAS,QAMTC,EAAYzkC,KAAKuyB,GAAKiS,EAMtBE,EAAS,EAAED,GAAYA,EAAWA,EAAWA,GAM7CE,EAAe,EAAE,KAAM,GAAI,IAAK,IAOhCC,EAAaJ,EAASxkC,KAAKuX,IAAIvX,KAAK6kC,IAAI7kC,KAAKuyB,GAAK,IAM/D,MAAMuS,UAA2BC,EAAAA,EAI/BxqC,WAAAA,CAAYsoB,GACVloB,MAAM,CACJkoB,KAAMA,EACNmiB,MAAO,IACPx8B,OAAQk8B,EACRO,QAAQ,EACRC,YAAaP,EACbQ,mBAAoB,SAAU97B,EAAY0X,GACxC,OAAO1X,EAAarJ,KAAKolC,KAAKrkB,EAAM,GAAKyjB,EAC3C,GAEJ,EASK,MAAMa,EAAc,CACzB,IAAIP,EAAmB,aACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,8CACvB,IAAIA,EAAmB,iDAYlB,SAASQ,EAAaC,EAAOjC,EAAQkC,EAAWrjB,GACrD,MAAMnjB,EAASumC,EAAMvmC,OACrBwmC,EAAYA,EAAY,EAAIA,EAAY,EACxCrjB,EAAe,OAANA,QAAM,IAANA,EAAAA,EAAUqjB,OACJ3qC,IAAXyoC,IAGAA,EAFEkC,EAAY,EAELD,EAAM5/B,QAEN,IAAIH,MAAMxG,IAGvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAQgD,GAAKmgB,EAAQ,CACvCmhB,EAAOthC,GAAMyiC,EAAYc,EAAMvjC,GAAM,IACrC,IAAIwe,EAAIgkB,EAASxkC,KAAKuX,IAAIvX,KAAK6kC,IAAK7kC,KAAKuyB,KAAOgT,EAAMvjC,EAAI,GAAK,IAAO,MAClEwe,EAAIokB,EACNpkB,EAAIokB,EACKpkB,GAAKokB,IACdpkB,GAAKokB,GAEPtB,EAAOthC,EAAI,GAAKwe,CAClB,CACA,OAAO8iB,CACT,CAWO,SAASmC,EAAWF,EAAOjC,EAAQkC,EAAWrjB,GACnD,MAAMnjB,EAASumC,EAAMvmC,OACrBwmC,EAAYA,EAAY,EAAIA,EAAY,EACxCrjB,EAAe,OAANA,QAAM,IAANA,EAAAA,EAAUqjB,OACJ3qC,IAAXyoC,IAGAA,EAFEkC,EAAY,EAELD,EAAM5/B,QAEN,IAAIH,MAAMxG,IAGvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAQgD,GAAKmgB,EAC/BmhB,EAAOthC,GAAM,IAAMujC,EAAMvjC,GAAMyiC,EAC/BnB,EAAOthC,EAAI,GACR,IAAMhC,KAAK0lC,KAAK1lC,KAAK2lC,IAAIJ,EAAMvjC,EAAI,GAAKwiC,IAAYxkC,KAAKuyB,GAAK,GAEnE,OAAO+Q,CACT,CC7HO,MAQMoB,EAAS,EAAE,KAAM,GAAI,IAAK,IAM1BpS,EAdS,QAcUtyB,KAAKuyB,GAAe,IAUpD,MAAMqT,UAA2Bb,EAAAA,EAK/BxqC,WAAAA,CAAYsoB,EAAMgjB,GAChBlrC,MAAM,CACJkoB,KAAMA,EACNmiB,MAAO,UACPx8B,OAAQk8B,EACRmB,gBAAiBA,EACjBZ,QAAQ,EACRa,cAAexT,EACf4S,YAAaR,GAEjB,EASK,MAAMW,EAAc,CACzB,IAAIO,EAAmB,UACvB,IAAIA,EAAmB,YAAa,OACpC,IAAIA,EAAmB,iCACvB,IAAIA,EAAmB,4BACvB,IAAIA,EAAmB,gDACvB,IAAIA,EAAmB,+CAAgD,OACvE,IAAIA,EAAmB,6CAA8C,Q,uBC3CvE,MAAMG,EAAK,MAELC,EAAI,UACJC,EAAKD,EAAIA,EACTE,EAAKD,EAAKD,EACVG,EAAOH,GAAK,EAAIA,GAEhBI,EAASpmC,KAAKwX,KAAK,EAAIwuB,GACvBK,GAAM,EAAID,IAAW,EAAIA,GACzBE,EAAMD,EAAKA,EACXE,EAAMD,EAAMD,EACZG,EAAMD,EAAMF,EACZI,EAAMD,EAAMH,EAEZK,EAAK,kBAELC,EAAM,GAAKV,EAAM,IAAO,GAAKC,EAAM,KACnCU,EAAM,GAAKV,EAAM,KAEjBW,EAAM,IAASR,EAAM,GAAK,GAAME,EAAO,IAAM,IAAOE,EACpDK,EAAM,GAAK,GAAMR,EAAO,GAAK,GAAME,EACnCO,EAAM,IAAM,GAAMR,EAAO,IAAM,IAAOE,EACtCO,EAAM,KAAO,IAAOR,EAEpBS,EAAI,QAQV,SAASC,EAASC,EAASC,EAAUC,GACnC,MAAM9mB,EAAI4mB,EAAU,IAIdG,GAHID,EAAKE,MAAQH,EAAWA,EAAW,KAE/BrB,GACEkB,EAAIP,GAEdc,EACJF,EACAT,EAAK7mC,KAAKgxB,IAAI,EAAIsW,GAClBR,EAAK9mC,KAAKgxB,IAAI,EAAIsW,GAClBP,EAAK/mC,KAAKgxB,IAAI,EAAIsW,GAClBN,EAAKhnC,KAAKgxB,IAAI,EAAIsW,GAEdG,EAAOznC,KAAKgxB,IAAIwW,GAChBE,EAAQD,EAAOA,EAEfE,EAAO3nC,KAAK8wB,IAAI0W,GAEhBI,EAAOH,EAAOE,EACdE,EAAQD,EAAOA,EACfE,EAAQD,EAAQA,EAEhBE,EAAQ,EAAI/B,EAAI0B,EAChBM,EAAYhoC,KAAKwX,KAAK,EAAIwuB,EAAI0B,GAK9BtD,EAAI+B,EAAOwB,GAAQ,EACnBM,EAAK7D,EAAIA,EAET8D,EAAI3nB,GANA0mB,EAAIe,EAMKjC,GACboC,EAAKD,EAAIA,EACTE,EAAKD,EAAKD,EACVG,EAAKD,EAAKF,EACVI,EAAKD,EAAKH,EAGVK,EACJf,EACCI,IAdQ,EAAI5B,GAAK+B,IAefI,EAAK,EAAKE,EAAK,IAAO,EAAI,EAAIR,EAAQ,GAAKzD,EAAI,EAAI6D,EAAK,EAAI9B,IALtDmC,EAAKJ,EAMR,KAAQ,GAAK,GAAKL,EAAQ,IAAMzD,EAAI,GAAK0D,EAAQ,IAAM3B,EAAO,EAAI8B,GAE1E,IAAIO,GACDN,EACEE,EAAK,GAAM,EAAI,EAAIP,EAAQzD,GAC3BkE,EAAK,KAAQ,EAAI,EAAIlE,EAAI,GAAKyD,EAAQ,EAAII,EAAK,EAAI9B,EAAO,GAAK2B,IAClEH,EAQF,OANAa,GAAYC,EAAAA,EAAAA,IACVD,GAAYE,EAAAA,EAAAA,IAAUC,EAAuBtB,EAAKuB,UACjD5oC,KAAKuyB,GACNvyB,KAAKuyB,IAGA,EAACsW,EAAAA,EAAAA,IAAUL,IAAYK,EAAAA,EAAAA,IAAUN,GAC1C,CAaA,SAASO,EAAWN,EAAWD,EAAUlB,GACvCmB,GAAYC,EAAAA,EAAAA,IAAKD,GAVG,IACA,KAWhBD,GAde,GAejBA,GAfiB,GAgBRA,EAfQ,KAgBjBA,EAhBiB,IAmBnB,MAAMQ,GAASL,EAAAA,EAAAA,IAAUH,GACnBS,EAAShpC,KAAKgxB,IAAI+X,GAClBE,EAASjpC,KAAK8wB,IAAIiY,GAElBG,EAASF,EAASC,EAClBE,EAAUD,EAASA,EACnBE,EAAUD,EAAUA,EAEpBE,GAASX,EAAAA,EAAAA,IAAUF,GACnBc,EAAaX,EAAuBtB,EAAKuB,QACzCW,GAAgBb,EAAAA,EAAAA,IAAUY,GAE1B1mC,EAAIqkC,EAAIjnC,KAAKwX,KAAK,EAAIwuB,EAAIgD,GAAU,GACpC5E,EAAI+B,EAAO8C,GAAU,EAErBj9B,EAAIi9B,GAASR,EAAAA,EAAAA,IAAKY,EAASE,GAAgBvpC,KAAKuyB,GAAIvyB,KAAKuyB,IACzDqR,EAAK53B,EAAIA,EACTw9B,EAAK5F,EAAK53B,EACVy9B,EAAKD,EAAKx9B,EACV09B,EAAKD,EAAKz9B,EACV29B,EAAKD,EAAK19B,EAEVH,EACJo7B,GACCP,EAAKqC,EAzHE,oBA0HD/oC,KAAKgxB,IAAI,EAAI+X,GAClBpC,EAAK3mC,KAAKgxB,IAAI,EAAI+X,GAClBnC,EAAK5mC,KAAKgxB,IAAI,EAAI+X,IAEhB5B,EACJpB,EACEnjC,GACCoJ,EACEw9B,EAAK,GAAM,EAAIL,EAAU/E,GACzBsF,EAAK,KAAQ,EAAI,GAAKP,EAAUC,EAAU,GAAKhF,EAAI,GAAK+B,IAC7D,IAEF,IAAIiB,EACFrB,GACCl6B,EACCjJ,EACEsmC,GACCtF,EAAK,EACH6F,EAAK,IAAO,EAAIN,EAAU,EAAI/E,EAAI,EAAIA,GAAK,GAC3CuF,EAAK,KAAQ,GAAK,GAAKR,EAAUC,EAAU,IAAMhF,EAAI,IAAM+B,KAMpE,OAJKkB,EAAKE,QACRH,GAAY,KAGP,CAACD,EAASC,EACnB,CAMA,SAASuB,EAAuBtB,GAC9B,OAAoB,GAAZA,EAAO,GAAS,IAAM,CAChC,CAKA,MAAMuC,EAAc,CAClB,eACA,gCACA,0DAOK,SAASC,EAAahnB,GAC3B,IAAIinB,EAAS,EACb,IAAK,MAAMC,KAAMH,EAAa,CAC5B,MAAMnK,EAAQ5c,EAAK4c,MAAMsK,GACzB,GAAItK,EAAO,CACTqK,EAASzH,SAAS5C,EAAM,IACxB,KACF,CACF,CACA,IAAKqK,EACH,OAAO,KAGT,IAAIlB,EAAS,EACTrB,GAAQ,EAOZ,OANIuC,EAAS,OAASA,EAAS,MAC7BlB,EAASkB,EAAS,MACTA,EAAS,OAASA,EAAS,QACpCvC,GAAQ,EACRqB,EAASkB,EAAS,OAEflB,EAIE,CAACA,SAAQrB,SAHP,IAIX,CAOA,SAASyC,EAAsBC,EAAa5C,GAC1C,OAAO,SAAU9B,EAAOjC,EAAQkC,EAAWrjB,GACzC,MAAMnjB,EAASumC,EAAMvmC,OACrBwmC,EAAYA,EAAY,EAAIA,EAAY,EACxCrjB,EAAe,OAANA,QAAM,IAANA,EAAAA,EAAUqjB,EACdlC,IAEDA,EADEkC,EAAY,EACLD,EAAM5/B,QAEN,IAAIH,MAAMxG,IAGvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAQgD,GAAKmgB,EAAQ,CACvC,MAAM5B,EAAIglB,EAAMvjC,GACVwe,EAAI+kB,EAAMvjC,EAAI,GACdkoC,EAAQD,EAAY1pB,EAAGC,EAAG6mB,GAChC/D,EAAOthC,GAAKkoC,EAAM,GAClB5G,EAAOthC,EAAI,GAAKkoC,EAAM,EACxB,CACA,OAAO5G,CACT,CACF,CCjPO,MAAM6G,EAAiB,UAWvB,SAASC,EAAYC,EAAIpC,EAAIqC,GAClCA,EAASA,GAAUH,EACnB,MAAMI,GAAO7B,EAAAA,EAAAA,IAAU2B,EAAG,IACpBG,GAAO9B,EAAAA,EAAAA,IAAUT,EAAG,IACpBwC,GAAeD,EAAOD,GAAQ,EAC9BG,GAAchC,EAAAA,EAAAA,IAAUT,EAAG,GAAKoC,EAAG,IAAM,EACzCr+B,EACJhM,KAAKgxB,IAAIyZ,GAAezqC,KAAKgxB,IAAIyZ,GACjCzqC,KAAKgxB,IAAI0Z,GACP1qC,KAAKgxB,IAAI0Z,GACT1qC,KAAK8wB,IAAIyZ,GACTvqC,KAAK8wB,IAAI0Z,GACb,OAAO,EAAIF,EAAStqC,KAAKkkC,MAAMlkC,KAAKwX,KAAKxL,GAAIhM,KAAKwX,KAAK,EAAIxL,GAC7D,CCqDA,MAAM2+B,EAAqB,CFsLpB,SAAwBtgC,GAC7B,MAAMg9B,EAAOwC,EAAax/B,EAAWugC,WACrC,OAAKvD,EAIE,CACLwD,QAASb,EAAsBlB,EAAYzB,GAC3CyD,QAASd,EAAsB9C,EAAUG,IALlC,IAOX,GE3LM0D,EAAsB,CFqKrB,SAAwBloB,GAE7B,OADagnB,EAAahnB,GAInB,IAAIkiB,EAAAA,EAAW,CAACliB,OAAMmiB,MAAO,MAF3B,IAGX,GErJA,IAAIgG,GAAwB,EAKrB,SAASC,GAAyBC,GAEvCF,SADyBnwC,IAAZqwC,GAA+BA,EAE9C,CAQO,SAASC,GAAe5F,EAAOjC,GACpC,QAAezoC,IAAXyoC,EACF,IAAK,IAAIthC,EAAI,EAAGwE,EAAK++B,EAAMvmC,OAAQgD,EAAIwE,IAAMxE,EAC3CshC,EAAOthC,GAAKujC,EAAMvjC,QAIpBshC,EAASiC,EAAM5/B,QAEjB,OAAO29B,CACT,CAwBO,SAAS8H,GAAc/gC,IAC5BghC,EAAAA,EAAAA,IAAQhhC,EAAWugC,UAAWvgC,IAC9BihC,EAAAA,EAAAA,IAAiBjhC,EAAYA,EAAY8gC,GAC3C,CAkBO,SAASlkC,GAAIskC,GAClB,GAAgC,kBAAnBA,EACX,OAAOA,EAET,MAAMlhC,GAAamhC,EAAAA,EAAAA,IAAQD,GAC3B,GAAIlhC,EACF,OAAOA,EAET,IAAK,MAAMohC,KAAkBV,EAAqB,CAChD,MAAM1gC,EAAaohC,EAAeF,GAClC,GAAIlhC,EACF,OAAOA,CAEX,CACA,OAAO,IACT,CAsBO,SAAS86B,GAAmB96B,EAAYhB,EAAY0X,EAAOikB,GAEhE,IAAI0G,EACJ,MAAM/K,GAFNt2B,EAAapD,GAAIoD,IAESshC,yBAC1B,GAAIhL,GAEF,GADA+K,EAAkB/K,EAAOt3B,EAAY0X,GACjCikB,GAASA,IAAU36B,EAAW2X,WAAY,CAC5C,MAAM8jB,EAAgBz7B,EAAWuhC,mBAC7B9F,IACF4F,EACGA,EAAkB5F,EAAiBxT,EAAAA,EAAgB0S,GAE1D,MACK,CACL,MAAM6G,EAAYxhC,EAAW2X,WAC7B,GAAkB,WAAb6pB,IAA2B7G,GAAmB,WAATA,EACxC0G,EAAkBriC,MACb,CAIL,MAAMo8B,EAAaqG,GACjBzhC,EACApD,GAAI,cAEN,GAAKw+B,GAA4B,YAAdoG,EAGZ,CACL,IAAIE,EAAW,CACbhrB,EAAM,GAAK1X,EAAa,EACxB0X,EAAM,GACNA,EAAM,GAAK1X,EAAa,EACxB0X,EAAM,GACNA,EAAM,GACNA,EAAM,GAAK1X,EAAa,EACxB0X,EAAM,GACNA,EAAM,GAAK1X,EAAa,GAE1B0iC,EAAWtG,EAAWsG,EAAUA,EAAU,GAG1CL,GAFctB,EAAY2B,EAASpmC,MAAM,EAAG,GAAIomC,EAASpmC,MAAM,EAAG,IACnDykC,EAAY2B,EAASpmC,MAAM,EAAG,GAAIomC,EAASpmC,MAAM,EAAG,KAC9B,CACvC,MAhBE+lC,EAAkBriC,EAAagB,EAAWuhC,mBAiB5C,MAAM9F,EAAgBd,EAClB1S,EAAAA,EAAgB0S,GAChB36B,EAAWuhC,wBACO/wC,IAAlBirC,IACF4F,GAAmB5F,EAEvB,CACF,CACA,OAAO4F,CACT,CASO,SAASM,GAAyBC,IAhHlC,SAAwBA,GAC7BA,EAAYhtC,QAAQmsC,GACtB,CA+GEc,CAAeD,GACfA,EAAYhtC,SAAQ,SAAUuM,GAC5BygC,EAAYhtC,SAAQ,SAAU6iB,GACxBtW,IAAWsW,IACbwpB,EAAAA,EAAAA,IAAiB9/B,EAAQsW,EAAaqpB,GAE1C,GACF,GACF,CA0CO,SAASgB,GAAiB9hC,EAAY+hC,GAC3C,OAAK/hC,EAGqB,kBAAfA,EACFpD,GAAIoD,GAEqBA,EALzBpD,GAAImlC,EAMf,CASO,SAASC,GAAuCC,GACrD,OAAO,SAQK/G,EAAOjC,EAAQkC,EAAWrjB,GAClC,MAAMnjB,EAASumC,EAAMvmC,OACrBwmC,OAA0B3qC,IAAd2qC,EAA0BA,EAAY,EAClDrjB,EAAe,OAANA,QAAM,IAANA,EAAAA,EAAUqjB,EACnBlC,OAAoBzoC,IAAXyoC,EAAuBA,EAAS,IAAI99B,MAAMxG,GACnD,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAQgD,GAAKmgB,EAAQ,CACvC,MAAMpB,EAAQurB,EAAe/G,EAAM5/B,MAAM3D,EAAGA,EAAIwjC,IAC1C+G,EAAcxrB,EAAM/hB,OAC1B,IAAK,IAAImM,EAAI,EAAGqhC,EAAKrqB,EAAQhX,EAAIqhC,IAAMrhC,EACrCm4B,EAAOthC,EAAImJ,GAAKA,GAAKohC,EAAchH,EAAMvjC,EAAImJ,GAAK4V,EAAM5V,EAE5D,CACA,OAAOm4B,CACR,CAEL,CAwBO,SAASmJ,GAAwBjhC,EAAQsW,EAAa+oB,EAASC,GACpE,MAAM/oB,EAAa9a,GAAIuE,GACjBkhC,EAAWzlC,GAAI6a,IACrBwpB,EAAAA,EAAAA,IACEvpB,EACA2qB,EACAL,GAAuCxB,KAEzCS,EAAAA,EAAAA,IACEoB,EACA3qB,EACAsqB,GAAuCvB,GAE3C,CAWO,SAAShC,GAAWztC,EAAYgP,GAErC,OADA4gC,KACO/qB,GACL7kB,EACA,iBACeR,IAAfwP,EAA2BA,EAAa,YAE5C,CAWO,SAAS68B,GAAS7rC,EAAYgP,GACnC,MAAMsiC,EAASzsB,GACb7kB,OACeR,IAAfwP,EAA2BA,EAAa,YACxC,aAEIuiC,EAAMD,EAAO,GAInB,OAHIC,GAAO,KAAOA,EAAM,OACtBD,EAAO,IAAKE,EAAAA,EAAAA,IAAOD,EAAM,IAAK,KAAO,KAEhCD,CACT,CAYO,SAASG,GAAWC,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,MAAMC,EAAaF,EAAY/qB,aAAegrB,EAAYhrB,WAC1D,GAAI+qB,EAAYnC,YAAcoC,EAAYpC,UACxC,OAAOqC,EAGT,OADsBnB,GAA4BiB,EAAaC,KACtC7B,IAAkB8B,CAC7C,CAWO,SAASnB,GAA4BtgC,EAAQsW,GAClD,MAAMorB,EAAa1hC,EAAOo/B,UACpBuC,EAAkBrrB,EAAY8oB,UACpC,IAAIwC,GAAgBC,EAAAA,EAAAA,IAAiBH,EAAYC,GACjD,GAAIC,EACF,OAAOA,EAMT,IAAIE,EAAmB,KAKnBC,EAAwB,KAG5B,IAAK,MAAMC,KAAkB7C,EACtB2C,IACHA,EAAmBE,EAAehiC,IAE/B+hC,IACHA,EAAwBC,EAAe1rB,IAI3C,IAAKwrB,IAAqBC,EACxB,OAAO,KAGT,MAAME,EAAmB,YACzB,GAAKF,EAQE,GAAKD,EASVF,EAAgBM,GACdJ,EAAiBxC,QACjByC,EAAsB1C,aAXI,CAC5B,MAAM8C,GAAaN,EAAAA,EAAAA,IAAiBH,EAAYO,GAC5CE,IACFP,EAAgBM,GACdC,EACAJ,EAAsB1C,SAG5B,KAhB4B,CAC1B,MAAM+C,GAAgBP,EAAAA,EAAAA,IAAiBI,EAAkBN,GACrDS,IACFR,EAAgBM,GACdJ,EAAiBxC,QACjB8C,GAGN,CAqBA,OANIR,IACFhC,GAAc5/B,GACd4/B,GAActpB,IACdwpB,EAAAA,EAAAA,IAAiB9/B,EAAQsW,EAAasrB,IAGjCA,CACT,CAOA,SAASM,GAAsBG,EAAIC,GACjC,OAAO,SAAUvI,EAAOjC,EAAQyK,EAAY5rB,GAE1C,OADAmhB,EAASuK,EAAGtI,EAAOjC,EAAQyK,EAAY5rB,GAChC2rB,EAAGxK,EAAQA,EAAQyK,EAAY5rB,EACxC,CACF,CAYO,SAASQ,GAAanX,EAAQsW,GAGnC,OAAOgqB,GAFkB7kC,GAAIuE,GACCvE,GAAI6a,GAEpC,CAkBO,SAAS5B,GAAU7kB,EAAYmQ,EAAQsW,GAC5C,MAAMsrB,EAAgBzqB,GAAanX,EAAQsW,GAC3C,IAAKsrB,EAAe,CAClB,MAAMF,EAAajmC,GAAIuE,GAAQo/B,UACzBuC,EAAkBlmC,GAAI6a,GAAa8oB,UACzC,MAAM,IAAIza,MAAM,kCAADhJ,OACqB+lB,EAAU,SAAA/lB,OAAQgmB,GAExD,CACA,OAAOC,EAAc/xC,OAAYR,EAAWQ,EAAW2D,OACzD,CAcO,SAASgvC,GAAgBxlC,EAAQgD,EAAQsW,EAAaiQ,GAC3D,MAAMqb,EAAgBzqB,GAAanX,EAAQsW,GAC3C,OAAO7L,EAAAA,EAAAA,IAAezN,EAAQ4kC,OAAevyC,EAAWk3B,EAC1D,CAyBA,IAAIkc,GAAiB,KA0Bd,SAASC,KACd,OAAOD,EACT,CAmBO,SAASn4B,GAAiBza,EAAY8yC,GAC3C,OAAKF,GAGE/tB,GAAU7kB,EAAY8yC,EAAkBF,IAFtC5yC,CAGX,CASO,SAASsb,GAAmBtb,EAAY+yC,GAC7C,OAAKH,GAgBE/tB,GAAU7kB,EAAY4yC,GAAgBG,IAdzCpD,KACCluB,EAAAA,EAAAA,IAAOzhB,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAO,KAClBA,EAAW,IAAM,KACjBA,EAAW,KAAO,IAClBA,EAAW,IAAM,KAEjB2vC,GAAwB,GACxBpuB,EAAAA,EAAAA,IACE,2FAGGvhB,EAGX,CASO,SAASgzC,GAAa7lC,EAAQ2lC,GACnC,OAAKF,GAGED,GAAgBxlC,EAAQ2lC,EAAkBF,IAFxCzlC,CAGX,CASO,SAAS8lC,GAAe9lC,EAAQ4lC,GACrC,OAAKH,GAGED,GAAgBxlC,EAAQylC,GAAgBG,GAFtC5lC,CAGX,CAUO,SAAS+lC,GAAiBllC,EAAY8kC,GAC3C,IAAKF,GACH,OAAO5kC,EAET,MAAMmlC,EAAsBvnC,GAAIknC,GAAkBvC,mBAC5C6C,EAAoBR,GAAerC,mBACzC,OAAO4C,GAAuBC,EACzBplC,EAAamlC,EAAuBC,EACrCplC,CACN,CA+BO,SAASqlC,GAA8B3sB,EAAY2qB,EAAUxsB,GAClE,OAAO,SAAUgqB,GACf,IAAI1nB,EAAamsB,EACjB,GAAI5sB,EAAWtX,WAAY,CACzB,MAAMmkC,EAAe7sB,EAAWpX,YAC1BkkC,GAAoBhkC,EAAAA,EAAAA,IAAS+jC,GACnC1E,EAAQA,EAAMvkC,MAAM,GACpBgpC,GAAaG,EAAAA,EAAAA,IAAc5E,EAAOnoB,EAAY8sB,GAC1CF,IAEFzE,EAAM,GAAKA,EAAM,GAAKyE,EAAaE,GAErC3E,EAAM,IAAKlI,EAAAA,EAAAA,IAAMkI,EAAM,GAAI0E,EAAa,GAAIA,EAAa,IACzD1E,EAAM,IAAKlI,EAAAA,EAAAA,IAAMkI,EAAM,GAAI0E,EAAa,GAAIA,EAAa,IACzDpsB,EAActC,EAAUgqB,EAC1B,MACE1nB,EAActC,EAAUgqB,GAM1B,OAJIyE,GAAcjC,EAASjiC,aAEzB+X,EAAY,IAAMmsB,GAAa9jC,EAAAA,EAAAA,IAAS6hC,EAAS/hC,cAE5C6X,CACT,CACF,EAOO,WA/gBA,IAELusB,EACAC,EACAC,EA8gBAjD,GAAyBkD,GACzBlD,GAAyBmD,GAjhBzBJ,EAshBEG,EArhBFF,EAshBE1J,EArhBF2J,EAshBExJ,EAHA0J,EAjhBWlwC,SAAQ,SAAU8tC,GAC7BgC,EAAa9vC,SAAQ,SAAU+tC,IAC7B1B,EAAAA,EAAAA,IAAiByB,EAAaC,EAAagC,IAC3C1D,EAAAA,EAAAA,IAAiB0B,EAAaD,EAAakC,EAC7C,GACF,GAihBF,CAEAG,E,mKCj1BA,MAAMC,UAAsBtiB,EAAAA,EAI1BxyB,WAAAA,CAAYkK,GACV9J,QAMAC,KAAK2b,OAAQ,EAGb3b,KAAK00C,wBAA0B10C,KAAK20C,mBAAmBtyC,KAAKrC,MAM5DA,KAAK40C,OAAS/qC,EAMd7J,KAAK60C,WAAa,IAAIjqC,MAMtB5K,KAAK80C,aArCY,CAsCnB,CAKAC,YAAAA,GACE,OAAO/0C,KAAK60C,UACd,CAKAG,eAAAA,CAAgBztC,GACdvH,KAAK60C,WAAWI,QAAQ1tC,GACpBvH,KAAK60C,WAAWzwC,OAASpE,KAAK80C,eAChC90C,KAAK60C,WAAWzwC,OAASpE,KAAK80C,aAElC,CAQAhlB,WAAAA,CAAYvvB,GACV,OAAO2N,EAAAA,EAAAA,KACT,CAMAgnC,OAAAA,CAAQ30C,GACN,OAAO,IACT,CAQA40C,YAAAA,CAAar1C,GACX,OAAOoO,EAAAA,EAAAA,KACT,CASAwD,WAAAA,CAAY5R,EAAY8D,GACtB,OAAOsK,EAAAA,EAAAA,KACT,CAYAW,0BAAAA,CACEpO,EACAX,EACAgP,EACAE,EACAqB,GAGF,CAKA+kC,QAAAA,GACE,OAAOp1C,KAAK40C,MACd,CAMA90B,kBAAAA,GAAsB,CAOtB60B,kBAAAA,CAAmBpxC,GACjB,MAAM8xC,EAAsD9xC,EAAMK,OAEhEyxC,EAAMrsC,aAAeigB,EAAAA,EAAW/f,QAChCmsC,EAAMrsC,aAAeigB,EAAAA,EAAW9f,OAEhCnJ,KAAKs1C,yBAET,CASAC,SAAAA,CAAUF,GACR,IAAIG,EAAaH,EAAMrsC,WAQvB,OAPIwsC,GAAcvsB,EAAAA,EAAW/f,QAAUssC,GAAcvsB,EAAAA,EAAW9f,OAC9DksC,EAAM/yC,iBAAiBC,EAAAA,EAAUqG,OAAQ5I,KAAK00C,yBAE5Cc,GAAcvsB,EAAAA,EAAWvf,OAC3B2rC,EAAM1rC,OACN6rC,EAAaH,EAAMrsC,YAEdwsC,GAAcvsB,EAAAA,EAAW/f,MAClC,CAKAosC,uBAAAA,GACE,MAAMzrC,EAAQ7J,KAAKo1C,WACfvrC,GAASA,EAAM4rC,cAA2C,UAA3B5rC,EAAMiE,kBACvCjE,EAAMsB,SAEV,CAKAgJ,cAAAA,CAAerU,GAAa,CAM5B0F,eAAAA,UACSxF,KAAK40C,OACZ70C,MAAMyF,iBACR,EAGF,UCtKakwC,EAAa,GAK1B,IAAIC,EAAe,KAqYnB,QAxXA,cAAkClB,EAIhC90C,WAAAA,CAAYkK,GACV9J,MAAM8J,GAMN7J,KAAK4S,UAAY,KAMjB5S,KAAK41C,mBAQL51C,KAAK61C,eAAgB3/B,EAAAA,EAAAA,MAQrBlW,KAAK81C,gBAAiB5/B,EAAAA,EAAAA,MAQtBlW,KAAK+1C,uBAAwB7/B,EAAAA,EAAAA,MAK7BlW,KAAK0nC,QAAU,KAMf1nC,KAAKg2C,iBAAmB,KAKxBh2C,KAAKi2C,iBAAkB,EAMvBj2C,KAAKF,WAAa,IACpB,CAQAsoC,YAAAA,CAAaiN,EAAOa,EAAKC,GAMvB,IAAI/pB,EALCupB,IAnFPA,GAAehO,EAAAA,EAAAA,GAAsB,EAAG,OAAG1nC,EAAW,CACpD2nC,oBAAoB,KAqFpB+N,EAAa1N,UAAU,EAAG,EAAG,EAAG,GAGhC,IACE0N,EAAaS,UAAUf,EAAOa,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD/pB,EAAOupB,EAAavN,aAAa,EAAG,EAAG,EAAG,GAAGhc,IAC/C,CAAE,MAAA3B,GAEA,OADAkrB,EAAe,KACR,IACT,CACA,OAAOvpB,CACT,CAMAiqB,aAAAA,CAAcv2C,GAEZ,IAAIw2C,EADUt2C,KAAKo1C,WACIiB,gBAIvB,MAH0B,oBAAfC,IACTA,EAAaA,EAAWx2C,EAAWsO,UAAUK,aAExC6nC,QAAcr2C,CACvB,CAQAs2C,YAAAA,CAAa3yC,EAAQ0hB,EAAWkxB,GAC9B,MAAMC,EAAiBz2C,KAAKo1C,WAAWsB,eACvC,IAAI9jC,EAAW80B,EACf,GACE9jC,GACAA,EAAO8O,YAAc+jC,KACnBD,GACC5yC,GACCA,EAAO0O,MAAMkkC,kBACbt0B,EAAAA,EAAAA,KACEoH,EAAAA,EAAAA,IAAQ1lB,EAAO0O,MAAMkkC,kBACrBltB,EAAAA,EAAAA,IAAQktB,KAEd,CACA,MAAMG,EAAS/yC,EAAOgzC,kBAClBD,aAAkBE,oBACpBnP,EAAUiP,EAAOG,WAAW,MAEhC,CAcA,GAbIpP,IAAWwK,EAAAA,EAAAA,IAAWxK,EAAQiP,OAAOrkC,MAAMgT,UAAWA,IAExDtlB,KAAK4S,UAAYhP,EACjB5D,KAAK0nC,QAAUA,EACf1nC,KAAKi2C,iBAAkB,GACdj2C,KAAKi2C,iBAEdj2C,KAAK4S,UAAY,KACjB5S,KAAK0nC,QAAU,KACf1nC,KAAKi2C,iBAAkB,GACdj2C,KAAK4S,YACd5S,KAAK4S,UAAUN,MAAMkkC,gBAAkB,OAEpCx2C,KAAK4S,UAAW,CACnBA,EAAYR,SAASC,cAAc,OACnCO,EAAUF,UAAY+jC,EACtB,IAAInkC,EAAQM,EAAUN,MACtBA,EAAMC,SAAW,WACjBD,EAAME,MAAQ,OACdF,EAAMG,OAAS,OACfi1B,GAAUC,EAAAA,EAAAA,KACV,MAAMgP,EAASjP,EAAQiP,OACvB/jC,EAAUmE,YAAY4/B,GACtBrkC,EAAQqkC,EAAOrkC,MACfA,EAAMC,SAAW,WACjBD,EAAMwI,KAAO,IACbxI,EAAMykC,gBAAkB,WACxB/2C,KAAK4S,UAAYA,EACjB5S,KAAK0nC,QAAUA,CACjB,CAEG1nC,KAAKi2C,kBACNO,GACCx2C,KAAK4S,UAAUN,MAAMkkC,kBAEtBx2C,KAAK4S,UAAUN,MAAMkkC,gBAAkBA,EAE3C,CAQAQ,aAAAA,CAActP,EAAS5nC,EAAY8N,GACjC,MAAMqpC,GAAUhiB,EAAAA,EAAAA,IAAWrnB,GACrBspC,GAAWliB,EAAAA,EAAAA,IAAYpnB,GACvBupC,GAAcpiB,EAAAA,EAAAA,IAAennB,GAC7BwpC,GAAatiB,EAAAA,EAAAA,GAAclnB,IAEjCyN,EAAAA,EAAAA,IAAevb,EAAWuO,2BAA4B4oC,IACtD57B,EAAAA,EAAAA,IAAevb,EAAWuO,2BAA4B6oC,IACtD77B,EAAAA,EAAAA,IAAevb,EAAWuO,2BAA4B8oC,IACtD97B,EAAAA,EAAAA,IAAevb,EAAWuO,2BAA4B+oC,GAEtD,MAAMC,EAAWr3C,KAAK+1C,uBACtB16B,EAAAA,EAAAA,IAAeg8B,EAAUJ,IACzB57B,EAAAA,EAAAA,IAAeg8B,EAAUH,IACzB77B,EAAAA,EAAAA,IAAeg8B,EAAUF,IACzB97B,EAAAA,EAAAA,IAAeg8B,EAAUD,GAEzB1P,EAAQ4P,OACR5P,EAAQ6P,YACR7P,EAAQ8P,OAAOpyC,KAAKq9B,MAAMwU,EAAQ,IAAK7xC,KAAKq9B,MAAMwU,EAAQ,KAC1DvP,EAAQ+P,OAAOryC,KAAKq9B,MAAMyU,EAAS,IAAK9xC,KAAKq9B,MAAMyU,EAAS,KAC5DxP,EAAQ+P,OAAOryC,KAAKq9B,MAAM0U,EAAY,IAAK/xC,KAAKq9B,MAAM0U,EAAY,KAClEzP,EAAQ+P,OAAOryC,KAAKq9B,MAAM2U,EAAW,IAAKhyC,KAAKq9B,MAAM2U,EAAW,KAChE1P,EAAQgQ,MACV,CAOAC,gBAAAA,CAAiB73C,EAAY8D,GAC3B,MAAMgK,EAAS9N,EAAW8N,OACpBa,EAAa3O,EAAWsO,UAAUK,WAClCC,EAAW5O,EAAWsO,UAAUM,SAChCkH,EAAa9V,EAAW8V,WACxBpD,EAAQpN,KAAKq9B,OAAOxyB,EAAAA,EAAAA,IAASrC,GAAUa,EAAcmH,GACrDnD,EAASrN,KAAKq9B,OAAO9a,EAAAA,EAAAA,IAAU/Z,GAAUa,EAAcmH,IAE7DrH,EAAAA,EAAAA,IACEvO,KAAK81C,eACLh2C,EAAW0O,KAAK,GAAK,EACrB1O,EAAW0O,KAAK,GAAK,EACrB,EAAIoH,EACJ,EAAIA,EACJlH,GACC8D,EAAQ,GACRC,EAAS,IAEZ7D,EAAAA,EAAAA,IAAY5O,KAAK+1C,sBAAuB/1C,KAAK81C,gBAE7C,MAAM8B,GAAkBC,EAAAA,EAAAA,IAAkB73C,KAAK81C,gBAG/C,GAFA91C,KAAKu2C,aAAa3yC,EAAQg0C,EAAiB53C,KAAKq2C,cAAcv2C,KAEzDE,KAAKi2C,gBAAiB,CACzB,MAAMU,EAAS32C,KAAK0nC,QAAQiP,OACxBA,EAAOnkC,OAASA,GAASmkC,EAAOlkC,QAAUA,GAC5CkkC,EAAOnkC,MAAQA,EACfmkC,EAAOlkC,OAASA,GAEhBzS,KAAK0nC,QAAQO,UAAU,EAAG,EAAGz1B,EAAOC,GAElCmlC,IAAoBjB,EAAOrkC,MAAMgT,YACnCqxB,EAAOrkC,MAAMgT,UAAYsyB,EAE7B,CACF,CAQAE,oBAAAA,CAAqBl4C,EAAM8nC,EAAS5nC,GAClC,MAAM+J,EAAQ7J,KAAKo1C,WACnB,GAAIvrC,EAAMoJ,YAAYrT,GAAO,CAC3B,MAAM2D,EAAQ,IAAI2P,EAAAA,EAChBtT,EACAI,KAAK+1C,sBACLj2C,EACA4nC,GAEF79B,EAAM5G,cAAcM,EACtB,CACF,CAOAw0C,SAAAA,CAAUrQ,EAAS5nC,GACjBE,KAAKF,WAAaA,EACdA,EAAW2T,WAGfzT,KAAK83C,qBAAqBzkC,EAAAA,EAAgBiyB,UAAWoC,EAAS5nC,EAChE,CAOAk4C,UAAAA,CAAWtQ,EAAS5nC,GACdA,EAAW2T,WAGfzT,KAAK83C,qBAAqBzkC,EAAAA,EAAgBkO,WAAYmmB,EAAS5nC,EACjE,CAKAm4C,sBAAAA,CAAuBn4C,GAAa,CAMpCo4C,gBAAAA,CAAiBp4C,GAIf,OAHIA,EAAW2T,YAAczT,KAAKg2C,mBAChCh2C,KAAKg2C,iBAAmB,IAAImC,EAAAA,GAEvBr4C,EAAW2T,UACdzT,KAAKg2C,iBAAiBc,aACtB92C,KAAK0nC,OACX,CAMAvzB,cAAAA,CAAerU,GACRA,EAAW2T,YAGhBzT,KAAK83C,qBACHzkC,EAAAA,EAAgBiyB,UAChBtlC,KAAK0nC,QACL5nC,GAEEA,EAAW2T,WAAazT,KAAKg2C,mBAC/Bh2C,KAAKg2C,iBAAiBoC,KAAKp4C,KAAK0nC,SAChC1nC,KAAKg2C,iBAAiB7vC,SAExBnG,KAAKi4C,uBAAuBn4C,GAC5BE,KAAK83C,qBACHzkC,EAAAA,EAAgBkO,WAChBvhB,KAAK0nC,QACL5nC,GAEJ,CAcAu4C,kBAAAA,CACE1pC,EACAF,EACAC,EACAkH,EACApD,EACAC,EACA6lC,GAEA,MAAM3V,EAAMnwB,EAAQ,EACdowB,EAAMnwB,EAAS,EACfiU,EAAK9Q,EAAanH,EAClBkY,GAAMD,EACNmc,GAAOl0B,EAAO,GAAK2pC,EACnBxV,GAAOn0B,EAAO,GACpB,OAAOJ,EAAAA,EAAAA,IACLvO,KAAK61C,cACLlT,EACAC,EACAlc,EACAC,GACCjY,EACDm0B,EACAC,EAEJ,CAMAt9B,eAAAA,UACSxF,KAAKF,WACZC,MAAMyF,iBACR,E,6HClUF,MAAM6O,UAAcrK,EAAAA,EAIlBrK,WAAAA,CAAYsK,GACV,MAAMC,EAAcnG,OAAOoG,OAAO,CAAC,EAAGF,UAC/BC,EAAY0G,OAEnB7Q,MAAMmK,GAKNlK,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAMLvK,KAAKu4C,kBAAoB,KAMzBv4C,KAAKw4C,cAAgB,KAMrBx4C,KAAKy4C,iBAAmB,KAMxBz4C,KAAK6X,UAAY,KAMjB7X,KAAK04C,cAAe,EAMpB14C,KAAK24C,UAAW,EAGZ1uC,EAAQ8J,SACV/T,KAAK+T,OAAS9J,EAAQ8J,QAGpB9J,EAAQpK,KACVG,KAAK2Y,OAAO1O,EAAQpK,KAGtBG,KAAK0K,kBACHkuC,EAAAA,EAAcC,OACd74C,KAAK84C,6BAGP,MAAMloC,EAAS3G,EAAQ2G,OACQ3G,EAAc,OACzC,KACJjK,KAAK+4C,UAAUnoC,EACjB,CAOAnE,cAAAA,CAAeC,GAGb,OAFAA,EAAQA,GAAgB,IAClB5H,KAAK9E,MACJ0M,CACT,CAOAC,mBAAAA,CAAoBE,GAGlB,OAFAA,EAASA,GAAkB,IACpB/H,KAAK9E,KAAKgN,iBACVH,CACT,CAQAgE,SAAAA,GACE,OAAkC7Q,KAAKqM,IAAIusC,EAAAA,EAAcC,SAAY,IACvE,CAKAG,eAAAA,GACE,OAAOh5C,KAAK6Q,WACd,CAMA/C,cAAAA,GACE,MAAM8C,EAAS5Q,KAAK6Q,YACpB,OAAQD,EAAuBA,EAAO5H,WAArB,WACnB,CAKAiwC,mBAAAA,GACEj5C,KAAKmL,UACDnL,KAAK04C,cAAgD,UAAhC14C,KAAK6Q,YAAY7H,aAG1ChJ,KAAK04C,cAAe,EACpB14C,KAAKiD,cAAc,eACrB,CAKA61C,2BAAAA,GACM94C,KAAKy4C,oBACPn0C,EAAAA,EAAAA,IAActE,KAAKy4C,kBACnBz4C,KAAKy4C,iBAAmB,MAE1Bz4C,KAAK04C,cAAe,EACpB,MAAM9nC,EAAS5Q,KAAK6Q,YAChBD,IACF5Q,KAAKy4C,kBAAmB52C,EAAAA,EAAAA,IACtB+O,EACArO,EAAAA,EAAUqG,OACV5I,KAAKi5C,oBACLj5C,MAEwB,UAAtB4Q,EAAO5H,aACThJ,KAAK04C,cAAe,EACpBt1C,YAAW,KACTpD,KAAKiD,cAAc,iBAClB,KAGPjD,KAAKmL,SACP,CAOA2kB,WAAAA,CAAYvvB,GACV,OAAKP,KAAK6X,UAGH7X,KAAK6X,UAAUiY,YAAYvvB,GAFzBgkB,QAAQC,QAAQ,GAG3B,CAMA0wB,OAAAA,CAAQ30C,GACN,OAAKP,KAAK6X,WAAc7X,KAAK24C,SAGtB34C,KAAK6X,UAAUq9B,QAAQ30C,GAFrB,IAGX,CAWA24C,SAAAA,CAAUhkC,GACR,IAAIpV,EACJ,MAAMD,EAAMG,KAAKm5C,iBAejB,IAAIhsC,EACJ,IAfK+H,GAAQrV,IACXqV,EAAOrV,EAAIsb,WAGXrb,EADEoV,aAAgBC,EAAAA,GACL,CACX/G,UAAW8G,EAAKlM,WAChB4E,OAAQsH,EAAKkkC,mBAGFlkC,GAEVpV,EAAWqQ,kBAAoBtQ,IAClCC,EAAWqQ,iBAAmBtQ,EAAIyZ,gBAAgB3M,uBAGhD7M,EAAWqQ,kBAIb,GAHAhD,EAAarN,EAAWqQ,iBAAiBkpC,MACtClsC,GAAeA,EAAWtD,QAAU7J,QAElCmN,EACH,OAAO,OAGTA,EAAanN,KAAKgN,gBAGpB,MAAMssC,EAAct5C,KAAK+P,YAEzB,OACEU,EAAOtD,EAAYrN,EAAWsO,cAC5BkrC,IAAepmB,EAAAA,EAAAA,IAAWomB,EAAax5C,EAAW8N,QAExD,CASAwvB,eAAAA,CAAgBloB,GAAM,IAAAqkC,EACpB,IAAKv5C,KAAKk5C,UAAUhkC,GAClB,MAAO,GAET,MAAMkoB,EAAkC,QAAnBmc,EAAGv5C,KAAK6Q,mBAAW,IAAA0oC,OAAA,EAAhBA,EAAkBnc,kBAC1C,IAAKA,EACH,MAAO,GAIT,IAAIxQ,EAAewQ,EADjBloB,aAAgBC,EAAAA,GAAOD,EAAKskC,wBAA0BtkC,GAKxD,OAHKtK,MAAMC,QAAQ+hB,KACjBA,EAAe,CAACA,IAEXA,CACT,CAUA7Y,MAAAA,CAAOjU,EAAY8D,GACjB,MAAM8M,EAAgB1Q,KAAK2Q,cAE3B,OAAID,EAAcykC,aAAar1C,IAC7BE,KAAK24C,UAAW,EACTjoC,EAAcgB,YAAY5R,EAAY8D,IAExC,IACT,CAKAkQ,QAAAA,GACE9T,KAAK24C,UAAW,CAClB,CAGAnlC,YAAAA,GAEA,CAMAU,eAAAA,CAAgBpU,EAAYqN,GAAa,CAMzCgH,cAAAA,CAAerU,GACb,MAAM4Q,EAAgB1Q,KAAK2Q,cACtBD,GAGLA,EAAcyD,eAAerU,EAC/B,CAMAwU,cAAAA,CAAezU,GACRA,GACHG,KAAK8T,WAEP9T,KAAKwM,IAAIosC,EAAAA,EAAca,IAAK55C,EAC9B,CAMAs5C,cAAAA,GACE,OAAOn5C,KAAKqM,IAAIusC,EAAAA,EAAca,IAChC,CAaA9gC,MAAAA,CAAO9Y,GACDG,KAAKu4C,qBACPj0C,EAAAA,EAAAA,IAActE,KAAKu4C,mBACnBv4C,KAAKu4C,kBAAoB,MAEtB14C,GACHG,KAAKmL,UAEHnL,KAAKw4C,iBACPl0C,EAAAA,EAAAA,IAActE,KAAKw4C,eACnBx4C,KAAKw4C,cAAgB,MAEnB34C,IACFG,KAAKu4C,mBAAoB12C,EAAAA,EAAAA,IACvBhC,EACAwT,EAAAA,EAAgBC,WAChBtT,KAAK05C,kBACL15C,MAEFA,KAAKw4C,eAAgB32C,EAAAA,EAAAA,IAAO7B,KAAMuC,EAAAA,EAAUqG,OAAQ/I,EAAIkU,OAAQlU,GAChEG,KAAKmL,UAET,CAMAuuC,iBAAAA,CAAkBC,GAChB,MAAMxpC,EACiDwpC,EAClD75C,WAAWqQ,iBACVhD,EAAanN,KAAKgN,eAAc,IACtCrG,EAAAA,EAAAA,IACGwJ,EAAiBmB,MACfsoC,GAAoBA,EAAgB/vC,QAAUsD,EAAWtD,QAE5D,yGAEFsG,EAAiBrL,KAAKqI,EACxB,CAQA4rC,SAAAA,CAAUnoC,GACR5Q,KAAKwM,IAAIosC,EAAAA,EAAcC,OAAQjoC,EACjC,CAMAD,WAAAA,GAIE,OAHK3Q,KAAK6X,YACR7X,KAAK6X,UAAY7X,KAAK65C,kBAEjB75C,KAAK6X,SACd,CAKArH,WAAAA,GACE,QAASxQ,KAAK6X,SAChB,CAOAgiC,cAAAA,GACE,OAAO,IACT,CAKAC,aAAAA,GACM95C,KAAK6X,YACP7X,KAAK6X,UAAUmH,iBACRhf,KAAK6X,UAEhB,CAMArS,eAAAA,GACExF,KAAK85C,gBACL95C,KAAK+4C,UAAU,MACfh5C,MAAMyF,iBACR,EAUK,SAASiL,EAAOtD,EAAYiB,GACjC,IAAKjB,EAAWE,QACd,OAAO,EAET,MAAMoB,EAAaL,EAAUK,WAC7B,GACEA,EAAatB,EAAWK,eACxBiB,GAActB,EAAWG,cAEzB,OAAO,EAET,MAAM0yB,EAAO5xB,EAAU4xB,KACvB,OAAOA,EAAO7yB,EAAWO,SAAWsyB,GAAQ7yB,EAAWQ,OACzD,CAEA,S,mECriBA,MAAM7D,EACI,SASH,MAAMiwC,UAAwBr6C,EAAAA,GAMnCC,WAAAA,CAAYC,EAAM2B,EAASyF,GACzBjH,MAAMH,GAONI,KAAKuB,QAAUA,EAOfvB,KAAKgH,MAAQA,CACf,EAgCF,MAAM8D,UAAmB2J,EAAAA,EAKvB9U,WAAAA,CAAY+M,EAAOzC,GAgCjB,GA/BAlK,QAKAC,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAELN,EAAUA,GAAW,CAAC,EAMtBjK,KAAKg6C,UAAY/vC,EAAQe,OAMzBhL,KAAKi6C,OAASvtC,GAAgB,GAE1B1M,KAAKg6C,QACP,IAAK,IAAI5yC,EAAI,EAAGwE,EAAK5L,KAAKi6C,OAAO71C,OAAQgD,EAAIwE,IAAMxE,EACjDpH,KAAKk6C,cAAcl6C,KAAKi6C,OAAO7yC,GAAIA,GAIvCpH,KAAKm6C,eACP,CAMAh0C,KAAAA,GACE,KAAOnG,KAAKgxB,YAAc,GACxBhxB,KAAKuG,KAET,CASAiV,MAAAA,CAAO4+B,GACL,IAAK,IAAIhzC,EAAI,EAAGwE,EAAKwuC,EAAIh2C,OAAQgD,EAAIwE,IAAMxE,EACzCpH,KAAK8E,KAAKs1C,EAAIhzC,IAEhB,OAAOpH,IACT,CASAqE,OAAAA,CAAQghC,GACN,MAAM34B,EAAQ1M,KAAKi6C,OACnB,IAAK,IAAI7yC,EAAI,EAAGwE,EAAKc,EAAMtI,OAAQgD,EAAIwE,IAAMxE,EAC3Ci+B,EAAE34B,EAAMtF,GAAIA,EAAGsF,EAEnB,CAUAf,QAAAA,GACE,OAAO3L,KAAKi6C,MACd,CAQA5uB,IAAAA,CAAKrkB,GACH,OAAOhH,KAAKi6C,OAAOjzC,EACrB,CAQAgqB,SAAAA,GACE,OAAOhxB,KAAKqM,IAAIvC,EAClB,CAQAuwC,QAAAA,CAASrzC,EAAOszC,GACd,GAAItzC,EAAQ,GAAKA,EAAQhH,KAAKgxB,YAC5B,MAAM,IAAIuE,MAAM,wBAA0BvuB,GAExChH,KAAKg6C,SACPh6C,KAAKk6C,cAAcI,GAErBt6C,KAAKi6C,OAAOnoB,OAAO9qB,EAAO,EAAGszC,GAC7Bt6C,KAAKm6C,gBACLn6C,KAAKiD,cACH,IAAI82C,EAAgB1uC,EAAAA,EAAoBC,IAAKgvC,EAAMtzC,GAEvD,CAQAT,GAAAA,GACE,OAAOvG,KAAKu6C,SAASv6C,KAAKgxB,YAAc,EAC1C,CAQAlsB,IAAAA,CAAKw1C,GACCt6C,KAAKg6C,SACPh6C,KAAKk6C,cAAcI,GAErB,MAAMtyC,EAAIhI,KAAKgxB,YAEf,OADAhxB,KAAKq6C,SAASryC,EAAGsyC,GACVt6C,KAAKgxB,WACd,CAQA7d,MAAAA,CAAOmnC,GACL,MAAMF,EAAMp6C,KAAKi6C,OACjB,IAAK,IAAI7yC,EAAI,EAAGwE,EAAKwuC,EAAIh2C,OAAQgD,EAAIwE,IAAMxE,EACzC,GAAIgzC,EAAIhzC,KAAOkzC,EACb,OAAOt6C,KAAKu6C,SAASnzC,EAI3B,CASAmzC,QAAAA,CAASvzC,GACP,GAAIA,EAAQ,GAAKA,GAAShH,KAAKgxB,YAC7B,OAEF,MAAMwpB,EAAOx6C,KAAKi6C,OAAOjzC,GAQzB,OAPAhH,KAAKi6C,OAAOnoB,OAAO9qB,EAAO,GAC1BhH,KAAKm6C,gBACLn6C,KAAKiD,cAED,IAAI82C,EAAgB1uC,EAAAA,EAAoBG,OAAQgvC,EAAMxzC,IAGnDwzC,CACT,CAQAC,KAAAA,CAAMzzC,EAAOszC,GAEX,GAAItzC,GADMhH,KAAKgxB,YAGb,YADAhxB,KAAKq6C,SAASrzC,EAAOszC,GAGvB,GAAItzC,EAAQ,EACV,MAAM,IAAIuuB,MAAM,wBAA0BvuB,GAExChH,KAAKg6C,SACPh6C,KAAKk6C,cAAcI,EAAMtzC,GAE3B,MAAMwzC,EAAOx6C,KAAKi6C,OAAOjzC,GACzBhH,KAAKi6C,OAAOjzC,GAASszC,EACrBt6C,KAAKiD,cAED,IAAI82C,EAAgB1uC,EAAAA,EAAoBG,OAAQgvC,EAAMxzC,IAG1DhH,KAAKiD,cAED,IAAI82C,EAAgB1uC,EAAAA,EAAoBC,IAAKgvC,EAAMtzC,GAGzD,CAKAmzC,aAAAA,GACEn6C,KAAKwM,IAAI1C,EAAiB9J,KAAKi6C,OAAO71C,OACxC,CAOA81C,aAAAA,CAAcI,EAAMI,GAClB,IAAK,IAAItzC,EAAI,EAAGwE,EAAK5L,KAAKi6C,OAAO71C,OAAQgD,EAAIwE,IAAMxE,EACjD,GAAIpH,KAAKi6C,OAAO7yC,KAAOkzC,GAAQlzC,IAAMszC,EACnC,MAAM,IAAInlB,MAAM,8CAGtB,EAGF,S,iDC1MA,QAnHA,MAOE51B,WAAAA,CAAYg7C,EAAOC,EAAaC,GAK9B76C,KAAK86C,OAASH,EAMd36C,KAAK+6C,aAAeH,EAMpB56C,KAAKg7C,OAASH,EAMd76C,KAAKi7C,QAAU,GAMfj7C,KAAKk7C,OAAS,EAMdl7C,KAAKm7C,iBAAmB,CAC1B,CAKAC,KAAAA,GACEp7C,KAAKi7C,QAAQ72C,OAAS,EACtBpE,KAAKk7C,OAAS,EACdl7C,KAAKm7C,iBAAmB,CAC1B,CAMAnyB,MAAAA,CAAOrD,EAAGC,GACR5lB,KAAKi7C,QAAQn2C,KAAK6gB,EAAGC,EAAGvH,KAAKC,MAC/B,CAKAmW,GAAAA,GACE,GAAIz0B,KAAKi7C,QAAQ72C,OAAS,EAGxB,OAAO,EAET,MAAMy2C,EAAQx8B,KAAKC,MAAQte,KAAKg7C,OAC1BK,EAAYr7C,KAAKi7C,QAAQ72C,OAAS,EACxC,GAAIpE,KAAKi7C,QAAQI,EAAY,GAAKR,EAGhC,OAAO,EAIT,IAAIS,EAAaD,EAAY,EAC7B,KAAOC,EAAa,GAAKt7C,KAAKi7C,QAAQK,EAAa,GAAKT,GACtDS,GAAc,EAGhB,MAAM7c,EAAWz+B,KAAKi7C,QAAQI,EAAY,GAAKr7C,KAAKi7C,QAAQK,EAAa,GAIzE,GAAI7c,EAAW,IAAO,GACpB,OAAO,EAGT,MAAMlL,EAAKvzB,KAAKi7C,QAAQI,GAAar7C,KAAKi7C,QAAQK,GAC5C9nB,EAAKxzB,KAAKi7C,QAAQI,EAAY,GAAKr7C,KAAKi7C,QAAQK,EAAa,GAGnE,OAFAt7C,KAAKk7C,OAAS91C,KAAKkkC,MAAM9V,EAAID,GAC7BvzB,KAAKm7C,iBAAmB/1C,KAAKwX,KAAK2W,EAAKA,EAAKC,EAAKA,GAAMiL,EAChDz+B,KAAKm7C,iBAAmBn7C,KAAK+6C,YACtC,CAKAvL,WAAAA,GACE,OAAQxvC,KAAK+6C,aAAe/6C,KAAKm7C,kBAAoBn7C,KAAK86C,MAC5D,CAKAS,QAAAA,GACE,OAAOv7C,KAAKk7C,MACd,G,kCCnHF,QACU,SCgCV,MAAMM,UAAoB/mC,EAAAA,EAIxB9U,WAAAA,CAAYsK,GACVlK,QAKAC,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAEDN,GAAWA,EAAQ0T,cACrB3d,KAAK2d,YAAc1T,EAAQ0T,aAO7B3d,KAAKgB,KAAO,KAEZhB,KAAKy7C,WAAU,EACjB,CAQA/9B,SAAAA,GACE,OAA+B1d,KAAKqM,IAAIqvC,EAC1C,CAOAjqC,MAAAA,GACE,OAAOzR,KAAKgB,IACd,CAQA2c,WAAAA,CAAYb,GACV,OAAO,CACT,CAQA2+B,SAAAA,CAAUE,GACR37C,KAAKwM,IAAIkvC,EAA4BC,EACvC,CAQAhjC,MAAAA,CAAO9Y,GACLG,KAAKgB,KAAOnB,CACd,EA0BK,SAAS+7C,EAAY1mC,EAAM8pB,EAAOvY,EAAQgY,GAC/C,MAAMkB,EAAczqB,EAAK0qB,UAEzB,QAAoB3/B,IAAhB0/B,EACF,OAGF,MAAME,EAAU3qB,EAAK4qB,mBAAmBH,EAAcX,GAChD6c,EAAgB3mC,EAAK4mC,qBAAqBjc,GAE5C3qB,EAAK2J,gBACP3J,EAAK6qB,mBAEP7qB,EAAKsJ,QAAQ,CACX/P,WAAYotC,EACZp1B,OAAQA,EACRgY,cAAuBx+B,IAAbw+B,EAAyBA,EAAW,IAC9CK,OAAQC,EAAAA,IAEZ,CAEA,UCzGA,QA/CA,cAA8Byc,EAI5B77C,WAAAA,CAAYsK,GACVlK,QAEAkK,EAAUA,GAAoB,CAAC,EAM/BjK,KAAK+7C,OAAS9xC,EAAQ+0B,MAAQ/0B,EAAQ+0B,MAAQ,EAM9Ch/B,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,GACvE,CASA9gB,WAAAA,CAAYb,GACV,IAAIk/B,GAAY,EAChB,GAAIl/B,EAAgBld,MAAQmD,EAAAA,EAAoBI,SAAU,CACxD,MAAM0Z,EACJC,EAAgB5c,cAEZL,EAAMid,EAAgBjd,IACtB4mB,EAAS3J,EAAgBrc,WACzBu+B,EAAQniB,EAAao/B,UAAYj8C,KAAK+7C,OAAS/7C,KAAK+7C,OAE1DH,EADa/7C,EAAIsb,UACC6jB,EAAOvY,EAAQzmB,KAAKw+B,WACtC3hB,EAAalc,iBACbq7C,GAAY,CACd,CACA,OAAQA,CACV,G,kCC1CK,SAASjxB,EAAImxB,GAClB,MAAMC,EAAatW,UAKnB,OAAO,SAAUtiC,GACf,IAAI64C,GAAO,EACX,IAAK,IAAIh1C,EAAI,EAAGwE,EAAKuwC,EAAW/3C,OAAQgD,EAAIwE,IAC1CwwC,EAAOA,GAAQD,EAAW/0C,GAAG7D,GACxB64C,KAF2Ch1C,GAMlD,OAAOg1C,CACT,CACF,CAUO,MAiBMC,EAAmB,SAAUv/B,GACxC,MAAM5c,EAAgB4c,EAAgB5c,cACtC,OACEA,EAAco8C,UACZp8C,EAAcq8C,SAAWr8C,EAAcs8C,UACzCt8C,EAAc+7C,QAElB,EA0BaQ,EAAoB,SAAUl5C,GACzC,MAAM4Y,EAAgB5Y,EAAM1D,IAAIob,mBAC1BkC,EAAWhB,EAAcnX,cAI/B,QAFEmY,aAAoBE,WAAaF,EAASG,KAAOnB,GAE1BugC,aAAa,aAtBnB,SAAUn5C,GAC7B,MAAM4Y,EAAgB5Y,EAAM1D,IAAIob,mBAC1BkC,EAAWhB,EAAcnX,cACzB23C,EAAgBp5C,EAAM1D,IAAIgF,mBAAmB83C,cAEnD,OAAOx/B,aAAoBE,WACvBF,EAASG,KAAKE,SAASm/B,GACvBxgC,EAAcqB,SAASm/B,EAC7B,CAcsDC,CAAMr5C,EAC5D,EASas5C,EAASrrC,EAAAA,GAsBTsrC,EAAoB,SAAUhgC,GACzC,MAAM5c,EAAgB4c,EAAgB5c,cACtC,MACE,cAAeA,GACS,GAAxBA,EAAcqE,UACZ8+B,EAAAA,GAAUG,EAAAA,IAAOtjC,EAAcs8C,QAErC,EAqDaO,EAAiB,SAAUjgC,GACtC,MAAM5c,EACJ4c,EAAgB5c,cAElB,OACGA,EAAco8C,UACbp8C,EAAcq8C,SAAWr8C,EAAcs8C,WACxCt8C,EAAc+7C,QAEnB,EAyCae,EAAe,SAAUlgC,GACpC,MAAM5c,EAAgB4c,EAAgB5c,cACtC,OACGA,EAAco8C,UACbp8C,EAAcq8C,SAAWr8C,EAAcs8C,UACzCt8C,EAAc+7C,QAElB,EAWagB,EAAoB,SAAUngC,GACzC,MAAM5c,EAAgB4c,EAAgB5c,cAChCg9C,EAAkCh9C,EAAc0D,OAAQs5C,QAC9D,MACc,UAAZA,GACY,WAAZA,GACY,aAAZA,IAICh9C,EAAc0D,OAAOu5C,iBAE1B,EASaC,EAAY,SAAUtgC,GACjC,MAAMla,EAAeka,EAAgB5c,cAErC,MAAO,cAAe0C,GAA4C,SAA5BA,EAAay6C,WACrD,EAqCaC,EAAgB,SAAUxgC,GACrC,MAAMla,EAAeka,EAAgB5c,cACrC,MACE,cAAe0C,GACfA,EAAa26C,WACW,IAAxB36C,EAAa2B,MAEjB,ECvIO,SAASi5C,EAAS1mC,GACvB,MAAM1S,EAAS0S,EAAc1S,OAC7B,IAAIkB,EAAU,EACVC,EAAU,EACd,IAAK,IAAI6B,EAAI,EAAGA,EAAIhD,EAAQgD,IAC1B9B,GAAWwR,EAAc1P,GAAG9B,QAC5BC,GAAWuR,EAAc1P,GAAG7B,QAE9B,MAAO,CAACD,QAASA,EAAUlB,EAAQmB,QAASA,EAAUnB,EACxD,CAEA,QAlKA,cAAiCo3C,EAI/B77C,WAAAA,CAAYsK,GAGVlK,MAFAkK,EAAUA,GAAoB,CAAC,GAM3BA,EAAQwzC,kBACVz9C,KAAKy9C,gBAAkBxzC,EAAQwzC,iBAG7BxzC,EAAQyzC,kBACV19C,KAAK09C,gBAAkBzzC,EAAQyzC,iBAG7BzzC,EAAQ0zC,kBACV39C,KAAK29C,gBAAkB1zC,EAAQ0zC,iBAG7B1zC,EAAQ2zC,gBACV59C,KAAK49C,cAAgB3zC,EAAQ2zC,eAG3B3zC,EAAQ4zC,WACV79C,KAAK69C,SAAW5zC,EAAQ4zC,UAO1B79C,KAAK89C,wBAAyB,EAM9B99C,KAAK+9C,eAAiB,EACxB,CAQAC,eAAAA,GACE,OAAOh+C,KAAK+9C,eAAe35C,MAC7B,CAQAq5C,eAAAA,CAAgB3gC,GACd,OAAO,CACT,CAOA4gC,eAAAA,CAAgB5gC,GAAkB,CAWlCa,WAAAA,CAAYb,GACV,IAAKA,EAAgB5c,cACnB,OAAO,EAGT,IAAI87C,GAAY,EAEhB,GADAh8C,KAAKi+C,uBAAuBnhC,GACxB9c,KAAK89C,wBACP,GAAIhhC,EAAgBld,MAAQmD,EAAAA,EAAoBmC,YAC9ClF,KAAK09C,gBAAgB5gC,GAErBA,EAAgB5c,cAAcS,sBACzB,GAAImc,EAAgBld,MAAQmD,EAAAA,EAAoBW,UAAW,CAChE,MAAMw6C,EAAYl+C,KAAK49C,cAAc9gC,GACrC9c,KAAK89C,uBACHI,GAAal+C,KAAK+9C,eAAe35C,OAAS,CAC9C,OAEA,GAAI0Y,EAAgBld,MAAQmD,EAAAA,EAAoBc,YAAa,CAC3D,MAAMs6C,EAAUn+C,KAAKy9C,gBAAgB3gC,GACrC9c,KAAK89C,uBAAyBK,EAC9BnC,EAAYh8C,KAAK69C,SAASM,EAC5B,MAAWrhC,EAAgBld,MAAQmD,EAAAA,EAAoBe,aACrD9D,KAAK29C,gBAAgB7gC,GAGzB,OAAQk/B,CACV,CAOA2B,eAAAA,CAAgB7gC,GAAkB,CAQlC8gC,aAAAA,CAAc9gC,GACZ,OAAO,CACT,CAQA+gC,QAAAA,CAASM,GACP,OAAOA,CACT,CAMAF,sBAAAA,CAAuBnhC,GACjBA,EAAgB1c,iBAClBJ,KAAK+9C,eAAiBjhC,EAAgB1c,eAE1C,GCIF,QA9JA,cAAsBg+C,EAIpBz+C,WAAAA,CAAYsK,GACVlK,MAAM,CACJ89C,SAAUtY,EAAAA,KAGZt7B,EAAUA,GAAoB,CAAC,EAM/BjK,KAAKq+C,SAAWp0C,EAAQq0C,QAKxBt+C,KAAKu+C,aAAe,KAMpBv+C,KAAKw+C,mBAMLx+C,KAAKy+C,UAAW,EAEhB,MAAMC,EAAYz0C,EAAQy0C,UACtBz0C,EAAQy0C,UACR3zB,EAAIgyB,EAAgBO,GAMxBt9C,KAAK2+C,WAAa10C,EAAQyN,YACtBqT,EAAI0xB,EAAmBiC,GACvBA,EAMJ1+C,KAAK4+C,YAAa,CACpB,CAOAlB,eAAAA,CAAgB5gC,GACd,MAAMjd,EAAMid,EAAgBjd,IACvBG,KAAKy+C,WACRz+C,KAAKy+C,UAAW,EAChB5+C,EAAIsb,UAAU0jC,oBAEhB,MAAMd,EAAiB/9C,KAAK+9C,eACtBP,EAAW39C,EAAIW,cAAcs+C,EAAqBf,IACxD,GAAIA,EAAe35C,QAAUpE,KAAKw+C,oBAIhC,GAHIx+C,KAAKq+C,UACPr+C,KAAKq+C,SAASr1B,OAAOw0B,EAAS,GAAIA,EAAS,IAEzCx9C,KAAKu+C,aAAc,CACrB,MAAMvf,EAAQ,CACZh/B,KAAKu+C,aAAa,GAAKf,EAAS,GAChCA,EAAS,GAAKx9C,KAAKu+C,aAAa,IAG5BrpC,EADM4H,EAAgBjd,IACXsb,WACjB4jC,EAAAA,EAAAA,IAAgB/f,EAAO9pB,EAAK8pC,kBAC5BC,EAAAA,EAAAA,IAAiBjgB,EAAO9pB,EAAKiO,eAC7BjO,EAAKgqC,qBAAqBlgB,EAC5B,OACSh/B,KAAKq+C,UAGdr+C,KAAKq+C,SAASjD,QAEhBp7C,KAAKu+C,aAAef,EACpBx9C,KAAKw+C,mBAAqBT,EAAe35C,OACzC0Y,EAAgB5c,cAAcS,gBAChC,CAQAi9C,aAAAA,CAAc9gC,GACZ,MAAMjd,EAAMid,EAAgBjd,IACtBqV,EAAOrV,EAAIsb,UACjB,GAAmC,IAA/Bnb,KAAK+9C,eAAe35C,OAAc,CACpC,IAAKpE,KAAK4+C,YAAc5+C,KAAKq+C,UAAYr+C,KAAKq+C,SAAS5pB,MAAO,CAC5D,MAAM0qB,EAAWn/C,KAAKq+C,SAAS7O,cACzBhpB,EAAQxmB,KAAKq+C,SAAS9C,WACtB5sC,EAASuG,EAAKkqC,oBACdC,EAAWx/C,EAAImc,+BAA+BrN,GAC9C/B,EAAO/M,EAAIia,+BAA+B,CAC9CulC,EAAS,GAAKF,EAAW/5C,KAAK8wB,IAAI1P,GAClC64B,EAAS,GAAKF,EAAW/5C,KAAKgxB,IAAI5P,KAEpCtR,EAAKoqC,gBAAgB,CACnB3wC,OAAQuG,EAAKqqC,qBAAqB3yC,GAClC6xB,SAAU,IACVK,OAAQC,EAAAA,IAEZ,CAKA,OAJI/+B,KAAKy+C,WACPz+C,KAAKy+C,UAAW,EAChBvpC,EAAKsqC,mBAEA,CACT,CAOA,OANIx/C,KAAKq+C,UAGPr+C,KAAKq+C,SAASjD,QAEhBp7C,KAAKu+C,aAAe,MACb,CACT,CAQAd,eAAAA,CAAgB3gC,GACd,GAAI9c,KAAK+9C,eAAe35C,OAAS,GAAKpE,KAAK2+C,WAAW7hC,GAAkB,CACtE,MACM5H,EADM4H,EAAgBjd,IACXsb,UAYjB,OAXAnb,KAAKu+C,aAAe,KAEhBrpC,EAAK2J,gBACP3J,EAAK6qB,mBAEH//B,KAAKq+C,UACPr+C,KAAKq+C,SAASjD,QAIhBp7C,KAAK4+C,WAAa5+C,KAAK+9C,eAAe35C,OAAS,GACxC,CACT,CACA,OAAO,CACT,G,cC/DF,QAhGA,cAAyBg6C,EAIvBz+C,WAAAA,CAAYsK,GACVA,EAAUA,GAAoB,CAAC,EAE/BlK,MAAM,CACJ89C,SAAUtY,EAAAA,KAOZvlC,KAAK2+C,WAAa10C,EAAQy0C,UAAYz0C,EAAQy0C,UAAYrC,EAM1Dr8C,KAAKy/C,gBAAax/C,EAMlBD,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,GACvE,CAOAif,eAAAA,CAAgB5gC,GACd,IAAKsgC,EAAUtgC,GACb,OAGF,MAAMjd,EAAMid,EAAgBjd,IACtBqV,EAAOrV,EAAIsb,UACjB,GAAIjG,EAAKwqC,iBAAiBhxC,WAAa4hC,EAAAA,GACrC,OAEF,MAAM9hC,EAAO3O,EAAI4a,UACX+Z,EAAS1X,EAAgBvc,MACzBo/C,EAAQv6C,KAAKkkC,MAAM96B,EAAK,GAAK,EAAIgmB,EAAO,GAAIA,EAAO,GAAKhmB,EAAK,GAAK,GACxE,QAAwBvO,IAApBD,KAAKy/C,WAA0B,CACjC,MAAMzgB,EAAQ2gB,EAAQ3/C,KAAKy/C,WAC3BvqC,EAAK0qC,wBAAwB5gB,EAC/B,CACAh/B,KAAKy/C,WAAaE,CACpB,CAQA/B,aAAAA,CAAc9gC,GACZ,IAAKsgC,EAAUtgC,GACb,OAAO,EAMT,OAHYA,EAAgBjd,IACXsb,UACZqkC,eAAex/C,KAAKw+B,YAClB,CACT,CAQAif,eAAAA,CAAgB3gC,GACd,IAAKsgC,EAAUtgC,GACb,OAAO,EAGT,GACEggC,EAAkBhgC,IAClB9c,KAAK2+C,WAAW7hC,GAChB,CAIA,OAHYA,EAAgBjd,IACxBsb,UAAU0jC,mBACd7+C,KAAKy/C,gBAAax/C,GACX,CACT,CACA,OAAO,CACT,G,iCCpHF,MAAM4/C,UAAkB7xC,EAAAA,EAItBrO,WAAAA,CAAY+S,GACV3S,QAMAC,KAAK8/C,UAAY,KAMjB9/C,KAAK2B,SAAWyQ,SAASC,cAAc,OACvCrS,KAAK2B,SAAS2Q,MAAMC,SAAW,WAC/BvS,KAAK2B,SAAS2Q,MAAMwE,cAAgB,OACpC9W,KAAK2B,SAAS+Q,UAAY,UAAYA,EAMtC1S,KAAKgB,KAAO,KAMZhB,KAAK+/C,YAAc,KAMnB//C,KAAKggD,UAAY,IACnB,CAMAx6C,eAAAA,GACExF,KAAK2Y,OAAO,KACd,CAKAsnC,OAAAA,GACE,MAAMC,EAAalgD,KAAK+/C,YAClBI,EAAWngD,KAAKggD,UAChBI,EAAK,KACL9tC,EAAQtS,KAAK2B,SAAS2Q,MAC5BA,EAAMwI,KAAO1V,KAAKmI,IAAI2yC,EAAW,GAAIC,EAAS,IAAMC,EACpD9tC,EAAMyI,IAAM3V,KAAKmI,IAAI2yC,EAAW,GAAIC,EAAS,IAAMC,EACnD9tC,EAAME,MAAQpN,KAAKC,IAAI86C,EAAS,GAAKD,EAAW,IAAME,EACtD9tC,EAAMG,OAASrN,KAAKC,IAAI86C,EAAS,GAAKD,EAAW,IAAME,CACzD,CAKAznC,MAAAA,CAAO9Y,GACL,GAAIG,KAAKgB,KAAM,CACbhB,KAAKgB,KAAKib,sBAAsBokC,YAAYrgD,KAAK2B,UACjD,MAAM2Q,EAAQtS,KAAK2B,SAAS2Q,MAC5BA,EAAMwI,KAAO,UACbxI,EAAMyI,IAAM,UACZzI,EAAME,MAAQ,UACdF,EAAMG,OAAS,SACjB,CACAzS,KAAKgB,KAAOnB,EACRG,KAAKgB,MACPhB,KAAKgB,KAAKib,sBAAsBlF,YAAY/W,KAAK2B,SAErD,CAMA2+C,SAAAA,CAAUJ,EAAYC,GACpBngD,KAAK+/C,YAAcG,EACnBlgD,KAAKggD,UAAYG,EACjBngD,KAAKugD,yBACLvgD,KAAKigD,SACP,CAKAM,sBAAAA,GACE,IAAKvgD,KAAKgB,KACR,OAGF,MAAMk/C,EAAalgD,KAAK+/C,YAClBI,EAAWngD,KAAKggD,UAOhBlvC,EANS,CACbovC,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEArgD,IACzBG,KAAKgB,KAAK8Y,+BACV9Z,KAAKgB,MAGP8P,EAAY,GAAKA,EAAY,GAAG/F,QAC3B/K,KAAK8/C,UAGR9/C,KAAK8/C,UAAU7nB,eAAe,CAACnnB,IAF/B9Q,KAAK8/C,UAAY,IAAIjnB,EAAAA,GAAQ,CAAC/nB,GAIlC,CAKA2d,WAAAA,GACE,OAAOzuB,KAAK8/C,SACd,EAGF,UCtGMU,EAMM,WANNA,EAaK,UAbLA,EAoBI,SApBJA,EA2BO,YAQN,MAAMC,UAAqB/gD,EAAAA,GAMhCC,WAAAA,CAAYC,EAAMa,EAAYqc,GAC5B/c,MAAMH,GAQNI,KAAKS,WAAaA,EAOlBT,KAAK8c,gBAAkBA,CACzB,EA2OF,QAlNA,cAAsBshC,EAIpBz+C,WAAAA,CAAYsK,GAAS,IAAAy2C,EAAAC,EAAAC,EACnB7gD,QAKAC,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAELN,EAAiB,OAAPA,QAAO,IAAPA,EAAAA,EAAW,CAAC,EAMtBjK,KAAK6gD,KAAO,IAAIhB,EAAU51C,EAAQyI,WAAa,cAM/C1S,KAAK8gD,SAA0B,QAAlBJ,EAAGz2C,EAAQ82C,eAAO,IAAAL,EAAAA,EAAI,GAE/Bz2C,EAAQ+2C,WACVhhD,KAAKghD,SAAW/2C,EAAQ+2C,UAO1BhhD,KAAK+/C,YAAc,KAMnB//C,KAAK2+C,WAA8B,QAApBgC,EAAG12C,EAAQy0C,iBAAS,IAAAiC,EAAAA,EAAI7D,EAMvC98C,KAAKihD,iBACoB,QADJL,EACnB32C,EAAQi3C,uBAAe,IAAAN,EAAAA,EAAI5gD,KAAKmhD,sBACpC,CAWAA,sBAAAA,CAAuBrkC,EAAiBojC,EAAYC,GAClD,MAAM3tC,EAAQ2tC,EAAS,GAAKD,EAAW,GACjCztC,EAAS0tC,EAAS,GAAKD,EAAW,GACxC,OAAO1tC,EAAQA,EAAQC,EAASA,GAAUzS,KAAK8gD,QACjD,CAOAryB,WAAAA,GACE,OAAOzuB,KAAK6gD,KAAKpyB,aACnB,CAOAivB,eAAAA,CAAgB5gC,GACT9c,KAAK+/C,cAIV//C,KAAK6gD,KAAKP,UAAUtgD,KAAK+/C,YAAajjC,EAAgBvc,OAEtDP,KAAKiD,cACH,IAAIw9C,EACFD,EACA1jC,EAAgBrc,WAChBqc,IAGN,CAQA8gC,aAAAA,CAAc9gC,GACZ,IAAK9c,KAAK+/C,YACR,OAAO,EAGT,MAAMqB,EAAcphD,KAAKihD,iBACvBnkC,EACA9c,KAAK+/C,YACLjjC,EAAgBvc,OAgBlB,OAdI6gD,GACFphD,KAAKghD,SAASlkC,GAEhB9c,KAAKiD,cACH,IAAIw9C,EACFW,EAAcZ,EAA0BA,EACxC1jC,EAAgBrc,WAChBqc,IAIJ9c,KAAK6gD,KAAKloC,OAAO,MACjB3Y,KAAK+/C,YAAc,MAEZ,CACT,CAQAtC,eAAAA,CAAgB3gC,GACd,QAAI9c,KAAK2+C,WAAW7hC,KAClB9c,KAAK+/C,YAAcjjC,EAAgBvc,MACnCP,KAAK6gD,KAAKloC,OAAOmE,EAAgBjd,KACjCG,KAAK6gD,KAAKP,UAAUtgD,KAAK+/C,YAAa//C,KAAK+/C,aAC3C//C,KAAKiD,cACH,IAAIw9C,EACFD,EACA1jC,EAAgBrc,WAChBqc,KAGG,EAGX,CAMAkkC,QAAAA,CAASz9C,GAAQ,CASjBk4C,SAAAA,CAAUE,GACHA,IACH37C,KAAK6gD,KAAKloC,OAAO,MACb3Y,KAAK+/C,cACP//C,KAAKiD,cACH,IAAIw9C,EAAaD,EAA4BxgD,KAAK+/C,YAAa,OAEjE//C,KAAK+/C,YAAc,OAIvBhgD,MAAM07C,UAAUE,EAClB,CAMAhjC,MAAAA,CAAO9Y,GACUG,KAAKyR,WAGlBzR,KAAK6gD,KAAKloC,OAAO,MAEb3Y,KAAK+/C,cACP//C,KAAKiD,cACH,IAAIw9C,EAAaD,EAA4BxgD,KAAK+/C,YAAa,OAEjE//C,KAAK+/C,YAAc,OAIvBhgD,MAAM4Y,OAAO9Y,EACf,GChPF,QArDA,cAAuBwhD,EAIrB1hD,WAAAA,CAAYsK,GAKVlK,MAAM,CACJ2+C,WALFz0C,EAAUA,GAAoB,CAAC,GAELy0C,UAAYz0C,EAAQy0C,UAAY1B,EAIxDtqC,UAAWzI,EAAQyI,WAAa,cAChCquC,QAAS92C,EAAQ82C,UAOnB/gD,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,IAMrEz+B,KAAKshD,UAAuBrhD,IAAhBgK,EAAQs3C,KAAoBt3C,EAAQs3C,GAClD,CAOAP,QAAAA,CAASz9C,GACP,MACM2R,EADMlV,KAAKyR,SAC8C0J,UAC/D,IAAI5L,EAAWvP,KAAKyuB,cAEpB,GAAIzuB,KAAKshD,KAAM,CACb,MAAME,EAAgBtsC,EAAKusC,yBAAyBlyC,GAC9Cd,EAAayG,EAAKwsC,+BAA+BF,GACjDG,EAASzsC,EAAK8pC,gBAAkBvwC,EACtCc,EAAWA,EAAS+R,QACpB/R,EAASmT,MAAMi/B,EAASA,EAC1B,CAEAzsC,EAAK0sC,YAAYryC,EAAU,CACzBkvB,SAAUz+B,KAAKw+B,UACfM,OAAQC,EAAAA,IAEZ,G,cCzEF,QACQ,YADR,EAEM,UAFN,EAGS,aAHT,EAIQ,YCgHR,QA1FA,cAA0Byc,EAIxB77C,WAAAA,CAAYsK,GACVlK,QAEAkK,EAAUA,GAAW,CAAC,EAOtBjK,KAAK6hD,kBAAoB,SAAU/kC,GACjC,OACEigC,EAAejgC,IAAoBmgC,EAAkBngC,EAEzD,EAMA9c,KAAK2+C,gBACmB1+C,IAAtBgK,EAAQy0C,UACJz0C,EAAQy0C,UACR1+C,KAAK6hD,kBAMX7hD,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,IAMrEz+B,KAAK8hD,iBACoB7hD,IAAvBgK,EAAQ83C,WAA2B93C,EAAQ83C,WAAa,GAC5D,CAUApkC,WAAAA,CAAYb,GACV,IAAIk/B,GAAY,EAChB,GAAIl/B,EAAgBld,MAAQ2C,EAAAA,EAAU2a,QAAS,CAC7C,MAAM8kC,EACJllC,EAAgB5c,cAEZqH,EAAMy6C,EAASz6C,IACrB,GACEvH,KAAK2+C,WAAW7hC,KACfvV,GAAO06C,GACN16C,GAAO06C,GACP16C,GAAO06C,GACP16C,GAAO06C,GACT,CACA,MACM/sC,EADM4H,EAAgBjd,IACXsb,UACX+mC,EAAgBhtC,EAAK8pC,gBAAkBh/C,KAAK8hD,YAClD,IAAIrlC,EAAS,EACXC,EAAS,EACPnV,GAAO06C,EACTvlC,GAAUwlC,EACD36C,GAAO06C,EAChBxlC,GAAUylC,EACD36C,GAAO06C,EAChBxlC,EAASylC,EAETxlC,EAASwlC,EAEX,MAAMljB,EAAQ,CAACviB,EAAQC,IACvBuiC,EAAAA,EAAAA,IAAiBjgB,EAAO9pB,EAAKiO,eVgB9B,SAAajO,EAAM8pB,EAAOP,GAC/B,MAAM0jB,EAAgBjtC,EAAKkqC,oBAC3B,GAAI+C,EAAe,CACjB,MAAMxzC,EAAS,CAACwzC,EAAc,GAAKnjB,EAAM,GAAImjB,EAAc,GAAKnjB,EAAM,IACtE9pB,EAAKoqC,gBAAgB,CACnB7gB,cAAuBx+B,IAAbw+B,EAAyBA,EAAW,IAC9CK,OAAQsjB,EAAAA,GACRzzC,OAAQuG,EAAKqqC,qBAAqB5wC,IAEtC,CACF,CUzBQ0zC,CAAIntC,EAAM8pB,EAAOh/B,KAAKw+B,WACtBwjB,EAASrhD,iBACTq7C,GAAY,CACd,CACF,CACA,OAAQA,CACV,GCvBF,QAlEA,cAA2BR,EAIzB77C,WAAAA,CAAYsK,GACVlK,QAEAkK,EAAUA,GAAoB,CAAC,EAM/BjK,KAAK2+C,WAAa10C,EAAQy0C,UACtBz0C,EAAQy0C,UACR,SAAU5hC,GACR,OTsLyB,SAAUA,GAC3C,MAAM5c,EAAgB4c,EAAgB5c,cACtC,OAAOsjC,EAAAA,GAAMtjC,EAAcq8C,QAAUr8C,EAAcs8C,OACrD,CSxLa8F,CAAoBxlC,IACrBmgC,EAAkBngC,EAEtB,EAMJ9c,KAAK+7C,OAAS9xC,EAAQ+0B,MAAQ/0B,EAAQ+0B,MAAQ,EAM9Ch/B,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,GACvE,CAUA9gB,WAAAA,CAAYb,GACV,IAAIk/B,GAAY,EAChB,GACEl/B,EAAgBld,MAAQ2C,EAAAA,EAAU2a,SAClCJ,EAAgBld,MAAQ2C,EAAAA,EAAU8c,SAClC,CACA,MAAM2iC,EACJllC,EAAgB5c,cAEZqH,EAAMy6C,EAASz6C,IACrB,GAAIvH,KAAK2+C,WAAW7hC,KAA6B,MAARvV,GAAuB,MAARA,GAAc,CACpE,MAAM1H,EAAMid,EAAgBjd,IACtBm/B,EAAgB,MAARz3B,EAAcvH,KAAK+7C,QAAU/7C,KAAK+7C,OAEhDH,EADa/7C,EAAIsb,UACC6jB,OAAO/+B,EAAWD,KAAKw+B,WACzCwjB,EAASrhD,iBACTq7C,GAAY,CACd,CACF,CACA,OAAQA,CACV,G,cCgOF,QA/QA,cAA6BR,EAI3B77C,WAAAA,CAAYsK,GAGVlK,MAFAkK,EAAUA,GAAoB,CAAC,GAU/BjK,KAAKuiD,YAAc,EAMnBviD,KAAKwiD,WAAa,EAMlBxiD,KAAK+3B,eAAiC93B,IAArBgK,EAAQw4C,SAAyBx4C,EAAQw4C,SAAW,EAMrEziD,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,IAMrEz+B,KAAK0iD,cAA+BziD,IAApBgK,EAAQ04C,QAAwB14C,EAAQ04C,QAAU,GAMlE3iD,KAAK4iD,gBACmB3iD,IAAtBgK,EAAQ44C,WAA0B54C,EAAQ44C,UAM5C7iD,KAAK8iD,0BAC6B7iD,IAAhCgK,EAAQ84C,qBACJ94C,EAAQ84C,oBAGd,MAAMrE,EAAYz0C,EAAQy0C,UAAYz0C,EAAQy0C,UAAY7B,EAM1D78C,KAAK2+C,WAAa10C,EAAQyN,YACtBqT,EAAI0xB,EAAmBiC,GACvBA,EAMJ1+C,KAAKgjD,YAAc,KAMnBhjD,KAAKijD,gBAAahjD,EAMlBD,KAAKkjD,WAMLljD,KAAKmjD,WAAQljD,EAQbD,KAAKojD,kBAAoB,IAMzBpjD,KAAKqjD,mBAOLrjD,KAAKsjD,cAAgB,GACvB,CAKAC,eAAAA,GACEvjD,KAAKqjD,wBAAqBpjD,EAC1B,MAAMJ,EAAMG,KAAKyR,SACjB,IAAK5R,EACH,OAEWA,EAAIsb,UACZqkC,oBACHv/C,EACAD,KAAKwiD,WAAcxiD,KAAKwiD,WAAa,EAAI,GAAK,EAAK,EACnDxiD,KAAKgjD,YAAcnjD,EAAIa,uBAAuBV,KAAKgjD,aAAe,KAEtE,CASArlC,WAAAA,CAAYb,GACV,IAAK9c,KAAK2+C,WAAW7hC,GACnB,OAAO,EAGT,GADaA,EAAgBld,OAChB2C,EAAAA,EAAU0a,MACrB,OAAO,EAGT,MAAMpd,EAAMid,EAAgBjd,IACtB2jD,EACJ1mC,EAAgB5c,cAElBsjD,EAAW7iD,iBAEPX,KAAK4iD,aACP5iD,KAAKgjD,YAAclmC,EAAgBvc,OAKrC,IAAIy+B,EAAQwkB,EAAW9mC,OAEvB,OAAQ8mC,EAAWC,WACjB,KAAKC,WAAWC,eACd3kB,GA/KsB,GAgLtB,MACF,KAAK0kB,WAAWE,eACd5kB,GA5KsB,IAkL1B,GAAc,IAAVA,EACF,OAAO,EAETh/B,KAAKwiD,WAAaxjB,EAElB,MAAM1gB,EAAMD,KAAKC,WAEOre,IAApBD,KAAKijD,aACPjjD,KAAKijD,WAAa3kC,KAGfte,KAAKmjD,OAAS7kC,EAAMte,KAAKijD,WAAajjD,KAAKojD,qBAC9CpjD,KAAKmjD,MAAQ/9C,KAAKC,IAAI25B,GAAS,EAAI,WAAa,SAGlD,MAAM9pB,EAAOrV,EAAIsb,UACjB,GACiB,aAAfnb,KAAKmjD,QACHjuC,EAAK2uC,2BAA4B7jD,KAAK8iD,qBAmBxC,OAjBI9iD,KAAKqjD,mBACPngD,aAAalD,KAAKqjD,qBAEdnuC,EAAK2J,gBACP3J,EAAK6qB,mBAEP7qB,EAAK2pC,oBAEP7+C,KAAKqjD,mBAAqBjgD,WACxBpD,KAAKujD,gBAAgBlhD,KAAKrC,MAC1BA,KAAK0iD,UAEPxtC,EAAK4uC,YACF9kB,EAAQh/B,KAAKsjD,cACdtjD,KAAKgjD,YAAcnjD,EAAIa,uBAAuBV,KAAKgjD,aAAe,MAEpEhjD,KAAKijD,WAAa3kC,GACX,EAGTte,KAAKuiD,aAAevjB,EAEpB,MAAM+kB,EAAW3+C,KAAKqI,IAAIzN,KAAK0iD,UAAYpkC,EAAMte,KAAKijD,YAAa,GAQnE,OANA//C,aAAalD,KAAKkjD,YAClBljD,KAAKkjD,WAAa9/C,WAChBpD,KAAKgkD,iBAAiB3hD,KAAKrC,KAAMH,GACjCkkD,IAGK,CACT,CAMAC,gBAAAA,CAAiBnkD,GACf,MAAMqV,EAAOrV,EAAIsb,UACbjG,EAAK2J,gBACP3J,EAAK6qB,mBAEP,IAAIf,IACDoI,EAAAA,EAAAA,IACCpnC,KAAKuiD,aACJviD,KAAK+3B,UAAY/3B,KAAKsjD,cACvBtjD,KAAK+3B,UAAY/3B,KAAKsjD,eACpBtjD,KAAKsjD,eACPpuC,EAAK2uC,0BAA4B7jD,KAAK8iD,wBAExC9jB,EAAQA,EAASA,EAAQ,EAAI,GAAK,EAAK,GAEzC4c,EACE1mC,EACA8pB,EACAh/B,KAAKgjD,YAAcnjD,EAAIa,uBAAuBV,KAAKgjD,aAAe,KAClEhjD,KAAKw+B,WAGPx+B,KAAKmjD,WAAQljD,EACbD,KAAKuiD,YAAc,EACnBviD,KAAKgjD,YAAc,KACnBhjD,KAAKijD,gBAAahjD,EAClBD,KAAKkjD,gBAAajjD,CACpB,CAQAgkD,cAAAA,CAAepB,GACb7iD,KAAK4iD,WAAaC,EACbA,IACH7iD,KAAKgjD,YAAc,KAEvB,GC3JF,QA3IA,cAA0B5E,EAIxBz+C,WAAAA,CAAYsK,GAGV,MAAMi6C,EAFNj6C,EAAUA,GAAoB,CAAC,EAM1Bi6C,EAAerG,WAClBqG,EAAerG,SAAWtY,EAAAA,IAG5BxlC,MAAMmkD,GAMNlkD,KAAKmkD,QAAU,KAMfnkD,KAAKy/C,gBAAax/C,EAMlBD,KAAKokD,WAAY,EAMjBpkD,KAAKqkD,eAAiB,EAMtBrkD,KAAKskD,gBAAmCrkD,IAAtBgK,EAAQs6C,UAA0Bt6C,EAAQs6C,UAAY,GAMxEvkD,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,GACvE,CAOAif,eAAAA,CAAgB5gC,GACd,IAAI0nC,EAAgB,EAEpB,MAAMC,EAASzkD,KAAK+9C,eAAe,GAC7B2G,EAAS1kD,KAAK+9C,eAAe,GAG7Bv3B,EAAQphB,KAAKkkC,MACjBob,EAAOn/C,QAAUk/C,EAAOl/C,QACxBm/C,EAAOp/C,QAAUm/C,EAAOn/C,SAG1B,QAAwBrF,IAApBD,KAAKy/C,WAA0B,CACjC,MAAMzgB,EAAQxY,EAAQxmB,KAAKy/C,WAC3Bz/C,KAAKqkD,gBAAkBrlB,GAClBh/B,KAAKokD,WAAah/C,KAAKC,IAAIrF,KAAKqkD,gBAAkBrkD,KAAKskD,aAC1DtkD,KAAKokD,WAAY,GAEnBI,EAAgBxlB,CAClB,CACAh/B,KAAKy/C,WAAaj5B,EAElB,MAAM3mB,EAAMid,EAAgBjd,IACtBqV,EAAOrV,EAAIsb,UACbjG,EAAKwqC,iBAAiBhxC,WAAa4hC,EAAAA,KAOvCtwC,KAAKmkD,QAAUtkD,EAAIia,+BACjBja,EAAIW,cAAcs+C,EAAqB9+C,KAAK+9C,kBAI1C/9C,KAAKokD,YACPvkD,EAAIkU,SACJmB,EAAK0qC,uBAAuB4E,EAAexkD,KAAKmkD,UAEpD,CAQAvG,aAAAA,CAAc9gC,GACZ,GAAI9c,KAAK+9C,eAAe35C,OAAS,EAAG,CAIlC,OAHY0Y,EAAgBjd,IACXsb,UACZqkC,eAAex/C,KAAKw+B,YAClB,CACT,CACA,OAAO,CACT,CAQAif,eAAAA,CAAgB3gC,GACd,GAAI9c,KAAK+9C,eAAe35C,QAAU,EAAG,CACnC,MAAMvE,EAAMid,EAAgBjd,IAQ5B,OAPAG,KAAKmkD,QAAU,KACfnkD,KAAKy/C,gBAAax/C,EAClBD,KAAKokD,WAAY,EACjBpkD,KAAKqkD,eAAiB,EACjBrkD,KAAK89C,wBACRj+C,EAAIsb,UAAU0jC,oBAET,CACT,CACA,OAAO,CACT,GCrBF,QAtHA,cAAwBT,EAItBz+C,WAAAA,CAAYsK,GAGV,MAAMi6C,EAFNj6C,EAAUA,GAAoB,CAAC,EAM1Bi6C,EAAerG,WAClBqG,EAAerG,SAAWtY,EAAAA,IAG5BxlC,MAAMmkD,GAMNlkD,KAAKmkD,QAAU,KAMfnkD,KAAKw+B,eAAiCv+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,IAMrEz+B,KAAK2kD,mBAAgB1kD,EAMrBD,KAAK4kD,gBAAkB,CACzB,CAOAlH,eAAAA,CAAgB5gC,GACd,IAAI+nC,EAAa,EAEjB,MAAMJ,EAASzkD,KAAK+9C,eAAe,GAC7B2G,EAAS1kD,KAAK+9C,eAAe,GAC7BxqB,EAAKkxB,EAAOn/C,QAAUo/C,EAAOp/C,QAC7BkuB,EAAKixB,EAAOl/C,QAAUm/C,EAAOn/C,QAG7B45C,EAAW/5C,KAAKwX,KAAK2W,EAAKA,EAAKC,EAAKA,QAEfvzB,IAAvBD,KAAK2kD,gBACPE,EAAa7kD,KAAK2kD,cAAgBxF,GAEpCn/C,KAAK2kD,cAAgBxF,EAErB,MAAMt/C,EAAMid,EAAgBjd,IACtBqV,EAAOrV,EAAIsb,UAEC,GAAd0pC,IACF7kD,KAAK4kD,gBAAkBC,GAIzB7kD,KAAKmkD,QAAUtkD,EAAIia,+BACjBja,EAAIW,cAAcs+C,EAAqB9+C,KAAK+9C,kBAI9Cl+C,EAAIkU,SACJmB,EAAK4vC,yBAAyBD,EAAY7kD,KAAKmkD,QACjD,CAQAvG,aAAAA,CAAc9gC,GACZ,GAAI9c,KAAK+9C,eAAe35C,OAAS,EAAG,CAClC,MACM8Q,EADM4H,EAAgBjd,IACXsb,UACX4pC,EAAY/kD,KAAK4kD,gBAAkB,EAAI,GAAK,EAElD,OADA1vC,EAAKsqC,eAAex/C,KAAKw+B,UAAWumB,IAC7B,CACT,CACA,OAAO,CACT,CAQAtH,eAAAA,CAAgB3gC,GACd,GAAI9c,KAAK+9C,eAAe35C,QAAU,EAAG,CACnC,MAAMvE,EAAMid,EAAgBjd,IAO5B,OANAG,KAAKmkD,QAAU,KACfnkD,KAAK2kD,mBAAgB1kD,EACrBD,KAAK4kD,gBAAkB,EAClB5kD,KAAK89C,wBACRj+C,EAAIsb,UAAU0jC,oBAET,CACT,CACA,OAAO,CACT,GCxEK,SAAS3e,GAASj2B,GACvBA,EAAUA,GAAoB,CAAC,EAG/B,MAAM8K,EAAe,IAAIjK,EAAAA,EAEnBwzC,EAAU,IAAI0G,GAAS,KAAO,IAAM,WAGT/kD,IAA/BgK,EAAQg7C,oBACJh7C,EAAQg7C,qBAGZlwC,EAAajQ,KAAK,IAAIogD,SAIMjlD,IAA5BgK,EAAQk7C,iBAAgCl7C,EAAQk7C,kBAEhDpwC,EAAajQ,KACX,IAAIsgD,EAAgB,CAClBpmB,MAAO/0B,EAAQo7C,UACf5mB,SAAUx0B,EAAQq7C,sBAKYrlD,IAApBgK,EAAQs7C,SAAwBt7C,EAAQs7C,UAEtDxwC,EAAajQ,KACX,IAAI0gD,EAAQ,CACV9tC,YAAazN,EAAQyN,YACrB4mC,QAASA,WAMWr+C,IAAxBgK,EAAQw7C,aAA4Bx7C,EAAQw7C,cAE5C1wC,EAAajQ,KAAK,IAAI4gD,SAGgBzlD,IAAtBgK,EAAQ07C,WAA0B17C,EAAQ07C,YAE1D5wC,EAAajQ,KACX,IAAI8gD,EAAU,CACZnnB,SAAUx0B,EAAQq7C,sBAKcrlD,IAArBgK,EAAQ47C,UAAyB57C,EAAQ47C,YAExD9wC,EAAajQ,KAAK,IAAIghD,GACtB/wC,EAAajQ,KACX,IAAIihD,EAAa,CACf/mB,MAAO/0B,EAAQo7C,UACf5mB,SAAUx0B,EAAQq7C,uBAMKrlD,IAA3BgK,EAAQ+7C,gBAA+B/7C,EAAQ+7C,iBAE/CjxC,EAAajQ,KACX,IAAImhD,EAAe,CACjBvuC,YAAazN,EAAQyN,YACrB+mB,SAAUx0B,EAAQq7C,gBAexB,YAT4BrlD,IAA1BgK,EAAQi8C,eAA8Bj8C,EAAQi8C,gBAE9CnxC,EAAajQ,KACX,IAAIqhD,EAAS,CACX1nB,SAAUx0B,EAAQq7C,gBAKjBvwC,CACT,C,gDC1IA,SAOE1R,YAAa,cAObL,MAAOT,EAAAA,EAAUS,MAOjBG,SAAUZ,EAAAA,EAAUY,SAOpB+B,YAAa,cAQbpB,YAAa,cAEbD,YAAa,cACbH,UAAW,YACX0iD,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACd5iD,cAAe,gB,8ECqBjB,MAAM6iD,UAAgB/xC,EAAAA,EAOpB9U,WAAAA,CAAY8mD,GAmDV,GAlDA1mD,QAKAC,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAMLvK,KAAK0mD,SAAMzmD,EAMXD,KAAK2mD,cAAgB,WAOrB3mD,KAAK4mD,OAAS,KAMd5mD,KAAK6mD,oBAAiB5mD,EAMtBD,KAAK8mD,mBAAqB,KAE1B9mD,KAAK0K,kBAAkB1K,KAAK2mD,cAAe3mD,KAAK+mD,wBAE5CN,EACF,GAGQ,oBADcA,EAA2C,sBAE/D,CACA,MAAMl3C,EAAoCk3C,EAC1CzmD,KAAKgnD,YAAYz3C,EACnB,KAAO,CAEL,MAAM03C,EAAaR,EACnBzmD,KAAKuY,cAAc0uC,EACrB,CAEJ,CAQA3lC,KAAAA,GACE,MAAMA,EACJ,IAAIklC,EAAQxmD,KAAKknD,gBAAkBlnD,KAAKmnD,gBAAkB,MAE5D7lC,EAAM8lC,gBAAgBpnD,KAAKqnD,mBAC3B,MAAM93C,EAAWvP,KAAKyuB,cAClBlf,GACF+R,EAAM0lC,YAAqCz3C,EAAS+R,SAEtD,MAAMhP,EAAQtS,KAAKsnD,WAInB,OAHIh1C,GACFgP,EAAMimC,SAASj1C,GAEVgP,CACT,CAUAmN,WAAAA,GACE,OAA0CzuB,KAAKqM,IAAIrM,KAAK2mD,cAC1D,CASA9tC,KAAAA,GACE,OAAO7Y,KAAK0mD,GACd,CASAW,eAAAA,GACE,OAAOrnD,KAAK2mD,aACd,CAQAW,QAAAA,GACE,OAAOtnD,KAAK4mD,MACd,CAQAY,gBAAAA,GACE,OAAOxnD,KAAK6mD,cACd,CAKAY,qBAAAA,GACEznD,KAAKmL,SACP,CAKA47C,sBAAAA,GACM/mD,KAAK8mD,sBACPxiD,EAAAA,EAAAA,IAActE,KAAK8mD,oBACnB9mD,KAAK8mD,mBAAqB,MAE5B,MAAMv3C,EAAWvP,KAAKyuB,cAClBlf,IACFvP,KAAK8mD,oBAAqBjlD,EAAAA,EAAAA,IACxB0N,EACAhN,EAAAA,EAAUqG,OACV5I,KAAKynD,sBACLznD,OAGJA,KAAKmL,SACP,CASA67C,WAAAA,CAAYz3C,GACVvP,KAAKwM,IAAIxM,KAAK2mD,cAAep3C,EAC/B,CAWAg4C,QAAAA,CAASj1C,GACPtS,KAAK4mD,OAASt0C,EACdtS,KAAK6mD,eAAkBv0C,EAyCpB,SAA6Bmf,GAClC,GAAmB,oBAARA,EACT,OAAOA,EAKT,IAAIi2B,EACJ,GAAI98C,MAAMC,QAAQ4mB,GAChBi2B,EAASj2B,MACJ,EACL9qB,EAAAA,EAAAA,GACgD,oBAApB8qB,EAAc,UACxC,mEAGFi2B,EAAS,CADwDj2B,EAEnE,CACA,OAAO,WACL,OAAOi2B,CACT,CACF,CA9D+CC,CAAoBr1C,QAAhCrS,EAC/BD,KAAKmL,SACP,CAWAy8C,KAAAA,CAAMpkD,GACJxD,KAAK0mD,IAAMljD,EACXxD,KAAKmL,SACP,CASAi8C,eAAAA,CAAgBS,GACd7nD,KAAK8nD,qBAAqB9nD,KAAK2mD,cAAe3mD,KAAK+mD,wBACnD/mD,KAAK2mD,cAAgBkB,EACrB7nD,KAAK0K,kBAAkB1K,KAAK2mD,cAAe3mD,KAAK+mD,wBAChD/mD,KAAK+mD,wBACP,EAiCF,S,6EClUA,MAAMzsB,UAAczC,EAAAA,GAKlBl4B,WAAAA,CAAYmR,EAAagnB,GACvB/3B,QACAC,KAAKi4B,eAAennB,EAAagnB,EACnC,CAQAxW,KAAAA,GACE,MAAM6E,EAAQ,IAAImU,EAAMt6B,KAAKu0B,gBAAgBxpB,QAAS/K,KAAK83B,QAE3D,OADA3R,EAAMqT,gBAAgBx5B,MACfmmB,CACT,CAUAT,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,MAAMyO,EAAkBv0B,KAAKu0B,gBACvB8N,GAAkB0lB,EAAAA,EAAAA,IACtBpiC,EACAC,EACA2O,EAAgB,GAChBA,EAAgB,IAElB,GAAI8N,EAAkBvc,EAAoB,CACxC,MAAMyB,EAASvnB,KAAKunB,OACpB,IAAK,IAAIngB,EAAI,EAAGA,EAAImgB,IAAUngB,EAC5Bye,EAAaze,GAAKmtB,EAAgBntB,GAGpC,OADAye,EAAazhB,OAASmjB,EACf8a,CACT,CACA,OAAOvc,CACT,CAQAwS,cAAAA,GACE,OAAOt4B,KAAKu0B,gBAAgBxpB,OAC9B,CAQAsb,aAAAA,CAAczY,GACZ,OAAOymB,EAAAA,EAAAA,IAA6Br0B,KAAKu0B,gBAAiB3mB,EAC5D,CAQAkZ,OAAAA,GACE,MAAO,OACT,CASAE,gBAAAA,CAAiBpZ,GACf,OAAOmY,EAAAA,EAAAA,IAAWnY,EAAQ5N,KAAKu0B,gBAAgB,GAAIv0B,KAAKu0B,gBAAgB,GAC1E,CAQA0D,cAAAA,CAAennB,EAAagnB,GAC1B93B,KAAK24B,UAAUb,EAAQhnB,EAAa,GAC/B9Q,KAAKu0B,kBACRv0B,KAAKu0B,gBAAkB,IAEzBv0B,KAAKu0B,gBAAgBnwB,QAAS4jD,EAAAA,EAAAA,IAC5BhoD,KAAKu0B,gBACL,EACAzjB,EACA9Q,KAAKunB,QAEPvnB,KAAKmL,SACP,EAGF,S,2EChHO,SAAS88C,EACd1zB,EACAC,EACAC,EACAlN,EACA3Z,GAmBA,QAjBgBgnB,EAAAA,EAAAA,IACdhnB,GAKA,SAAUnN,GACR,OAAQynD,EACN3zB,EACAC,EACAC,EACAlN,EACA9mB,EAAW,GACXA,EAAW,GAEf,GAGJ,CAWO,SAASynD,EACd3zB,EACAC,EACAC,EACAlN,EACA5B,EACAC,GASA,IAAIuiC,EAAK,EACLzyB,EAAKnB,EAAgBE,EAAMlN,GAC3BoO,EAAKpB,EAAgBE,EAAMlN,EAAS,GACxC,KAAOiN,EAASC,EAAKD,GAAUjN,EAAQ,CACrC,MAAMqO,EAAKrB,EAAgBC,GACrBqB,EAAKtB,EAAgBC,EAAS,GAChCmB,GAAM/P,EACJiQ,EAAKjQ,IAAMgQ,EAAKF,IAAO9P,EAAI+P,IAAOhQ,EAAI+P,IAAOG,EAAKF,GAAM,GAC1DwyB,IAEOtyB,GAAMjQ,IAAMgQ,EAAKF,IAAO9P,EAAI+P,IAAOhQ,EAAI+P,IAAOG,EAAKF,GAAM,GAClEwyB,IAEFzyB,EAAKE,EACLD,EAAKE,CACP,CACA,OAAc,IAAPsyB,CACT,CAWO,SAASxuB,EACdpF,EACAC,EACAsE,EACAvR,EACA5B,EACAC,GAEA,GAAoB,IAAhBkT,EAAK10B,OACP,OAAO,EAET,IAAK8jD,EAAqB3zB,EAAiBC,EAAQsE,EAAK,GAAIvR,EAAQ5B,EAAGC,GACrE,OAAO,EAET,IAAK,IAAIxe,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1C,GACE8gD,EAAqB3zB,EAAiBuE,EAAK1xB,EAAI,GAAI0xB,EAAK1xB,GAAImgB,EAAQ5B,EAAGC,GAEvE,OAAO,EAGX,OAAO,CACT,CAWO,SAASwiC,EACd7zB,EACAC,EACAgN,EACAja,EACA5B,EACAC,GAEA,GAAqB,IAAjB4b,EAAMp9B,OACR,OAAO,EAET,IAAK,IAAIgD,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnB,GAAIuyB,EAAsBpF,EAAiBC,EAAQsE,EAAMvR,EAAQ5B,EAAGC,GAClE,OAAO,EAET4O,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAO,CACT,C,0DCvEA,MAAMikD,EAIJ1oD,WAAAA,CAAYsK,GACVA,EAAUA,GAAW,CAAC,EAMtBjK,KAAKsoD,MAAQr+C,EAAQs+C,KAMrBvoD,KAAKwiB,UAAYvY,EAAQyE,SAMzB1O,KAAKsiB,gBAAkBrY,EAAQsY,eAM/BviB,KAAKwoD,aAAev+C,EAAQw+C,YAM5BzoD,KAAKyiB,OAASxY,EAAQyY,MAMtB1iB,KAAK2iB,aAAcC,EAAAA,EAAAA,SAAyB3iB,IAAlBgK,EAAQyY,MAAsBzY,EAAQyY,MAAQ,GAMxE1iB,KAAK0oD,MAAQz+C,EAAQ0+C,KAMrB3oD,KAAK4oD,WAAa3+C,EAAQ4+C,UAM1B7oD,KAAK8oD,SAAW7+C,EAAQ8+C,QAMxB/oD,KAAKgpD,QAAU/+C,EAAQg/C,OAMvBjpD,KAAKkpD,cAAgBj/C,EAAQk/C,aAM7BnpD,KAAKopD,WACcnpD,IAAjBgK,EAAQ+2B,KACJ/2B,EAAQ+2B,KACR,IAAIP,EAAAA,EAAK,CAAC7X,MAjIO,SAuIvB5oB,KAAKqpD,eACkBppD,IAArBgK,EAAQq/C,SAAyBr/C,EAAQq/C,SAAWlkD,KAAKuyB,GAAK,EAMhE33B,KAAKupD,gBACmBtpD,IAAtBgK,EAAQu/C,UAA0Bv/C,EAAQu/C,UAAY,QAMxDxpD,KAAKypD,YAAcx/C,EAAQ2M,SAM3B5W,KAAK0pD,aAA6BzpD,IAAnBgK,EAAQ0/C,OAAuB1/C,EAAQ0/C,OAAS,KAM/D3pD,KAAK4pD,cAA+B3pD,IAApBgK,EAAQquC,QAAwBruC,EAAQquC,QAAU,EAMlEt4C,KAAK6pD,cAA+B5pD,IAApBgK,EAAQ6/C,QAAwB7/C,EAAQ6/C,QAAU,EAMlE9pD,KAAK+pD,gBAAkB9/C,EAAQ+/C,eAC3B//C,EAAQ+/C,eACR,KAMJhqD,KAAKiqD,kBAAoBhgD,EAAQigD,iBAC7BjgD,EAAQigD,iBACR,KAMJlqD,KAAKmqD,cAA+BlqD,IAApBgK,EAAQmgD,QAAwB,KAAOngD,EAAQmgD,QAM/DpqD,KAAK+iB,eAAiB9Y,EAAQ+Y,aAChC,CAOA1B,KAAAA,GACE,MAAMoB,EAAQ1iB,KAAKijB,WACnB,OAAO,IAAIolC,EAAK,CACdE,KAAMvoD,KAAKqqD,UACXb,UAAWxpD,KAAKsqD,eAChBrB,OAAQjpD,KAAKuqD,YACbjB,SAAUtpD,KAAKwqD,cACf5zC,SAAU5W,KAAKyqD,cACf/7C,SAAU1O,KAAKmjB,cACfZ,eAAgBviB,KAAKojB,oBACrBqlC,YAAazoD,KAAK0qD,iBAClBhoC,MAAO9X,MAAMC,QAAQ6X,GAASA,EAAM3X,QAAU2X,EAC9CimC,KAAM3oD,KAAK2qD,UACX9B,UAAW7oD,KAAK4qD,eAChB7B,QAAS/oD,KAAK6qD,aACd1B,aAAcnpD,KAAK8qD,kBACnB9pB,KAAMhhC,KAAK+qD,UAAY/qD,KAAK+qD,UAAUzpC,aAAUrhB,EAChD0pD,OAAQ3pD,KAAKgrD,YAAchrD,KAAKgrD,YAAY1pC,aAAUrhB,EACtDq4C,QAASt4C,KAAKirD,aACdnB,QAAS9pD,KAAKkrD,aACdlB,eAAgBhqD,KAAKmrD,oBACjBnrD,KAAKmrD,oBAAoB7pC,aACzBrhB,EACJiqD,iBAAkBlqD,KAAKorD,sBACnBprD,KAAKorD,sBAAsB9pC,aAC3BrhB,EACJmqD,QAASpqD,KAAKqrD,mBAAgBprD,EAC9B+iB,cAAehjB,KAAKsjB,oBAExB,CAOAmnC,WAAAA,GACE,OAAOzqD,KAAKypD,SACd,CAOAY,OAAAA,GACE,OAAOrqD,KAAKsoD,KACd,CAOAkC,WAAAA,GACE,OAAOxqD,KAAKqpD,SACd,CAOAiB,YAAAA,GACE,OAAOtqD,KAAKupD,UACd,CAOAgB,SAAAA,GACE,OAAOvqD,KAAKgpD,OACd,CAOAiC,UAAAA,GACE,OAAOjrD,KAAK4pD,QACd,CAOAsB,UAAAA,GACE,OAAOlrD,KAAK6pD,QACd,CAOAkB,OAAAA,GACE,OAAO/qD,KAAKopD,KACd,CAOAhmC,iBAAAA,GACE,OAAOpjB,KAAKsiB,eACd,CAOAooC,cAAAA,GACE,OAAO1qD,KAAKwoD,YACd,CAOArlC,WAAAA,GACE,OAAOnjB,KAAKwiB,SACd,CAOAS,QAAAA,GACE,OAAOjjB,KAAKyiB,MACd,CAMAc,aAAAA,GACE,OAAOvjB,KAAK2iB,WACd,CAOAqoC,SAAAA,GACE,OAAOhrD,KAAK0pD,OACd,CAOAiB,OAAAA,GACE,OAAO3qD,KAAK0oD,KACd,CAOAkC,YAAAA,GACE,OAAO5qD,KAAK4oD,UACd,CAOAiC,UAAAA,GACE,OAAO7qD,KAAK8oD,QACd,CAOAgC,eAAAA,GACE,OAAO9qD,KAAKkpD,aACd,CAOAiC,iBAAAA,GACE,OAAOnrD,KAAK+pD,eACd,CAOAqB,mBAAAA,GACE,OAAOprD,KAAKiqD,iBACd,CAOAoB,UAAAA,GACE,OAAOrrD,KAAKmqD,QACd,CAOA7mC,gBAAAA,GACE,OAAOtjB,KAAK+iB,cACd,CAQAuoC,WAAAA,CAAY10C,GACV5W,KAAKypD,UAAY7yC,CACnB,CAQA20C,OAAAA,CAAQhD,GACNvoD,KAAKsoD,MAAQC,CACf,CAQAiD,WAAAA,CAAYlC,GACVtpD,KAAKqpD,UAAYC,CACnB,CAQAmC,UAAAA,CAAWnT,GACTt4C,KAAK4pD,SAAWtR,CAClB,CAQAoT,UAAAA,CAAW5B,GACT9pD,KAAK6pD,SAAWC,CAClB,CAQA6B,YAAAA,CAAanC,GACXxpD,KAAKupD,WAAaC,CACpB,CAOAoC,SAAAA,CAAU3C,GACRjpD,KAAKgpD,QAAUC,CACjB,CAQAhlC,iBAAAA,CAAkB1B,GAChBviB,KAAKsiB,gBAAkBC,CACzB,CAQAspC,cAAAA,CAAepD,GACbzoD,KAAKwoD,aAAeC,CACtB,CAQAqD,OAAAA,CAAQ9qB,GACNhhC,KAAKopD,MAAQpoB,CACf,CAQA9c,WAAAA,CAAYxV,GACV1O,KAAKwiB,UAAY9T,CACnB,CAQAyV,QAAAA,CAASzB,GACP1iB,KAAKyiB,OAASC,EACd1iB,KAAK2iB,aAAcC,EAAAA,EAAAA,SAAiB3iB,IAAVyiB,EAAsBA,EAAQ,EAC1D,CAQAqpC,SAAAA,CAAUpC,GACR3pD,KAAK0pD,QAAUC,CACjB,CAQAqC,OAAAA,CAAQrD,GACN3oD,KAAK0oD,MAAQC,CACf,CAQAsD,YAAAA,CAAapD,GACX7oD,KAAK4oD,WAAaC,CACpB,CAQAqD,UAAAA,CAAWnD,GACT/oD,KAAK8oD,SAAWC,CAClB,CAQAoD,eAAAA,CAAgBhD,GACdnpD,KAAKkpD,cAAgBC,CACvB,CAQAiD,iBAAAA,CAAkBprB,GAChBhhC,KAAK+pD,gBAAkB/oB,CACzB,CAQAqrB,mBAAAA,CAAoB1C,GAClB3pD,KAAKiqD,kBAAoBN,CAC3B,CAQA2C,UAAAA,CAAWlC,GACTpqD,KAAKmqD,SAAWC,CAClB,EAGF,S,iBCxoBO,SAASzjD,EAAO4lD,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAIh3B,MAAMi3B,EAEpB,C,uGCCO,MAAMC,UAAoB/sD,EAAAA,GAM/BC,WAAAA,CAAYC,EAAM2H,EAAKmlD,GACrB3sD,MAAMH,GAONI,KAAKuH,IAAMA,EAQXvH,KAAK0sD,SAAWA,CAClB,EAqDF,MAAMj4C,UAAmB0d,EAAAA,EAIvBxyB,WAAAA,CAAYqE,GACVjE,QAKAC,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,IAML4B,EAAAA,EAAAA,IAAOnM,MAMPA,KAAK2sD,QAAU,UAEA1sD,IAAX+D,GACFhE,KAAKuY,cAAcvU,EAEvB,CAQAqI,GAAAA,CAAI9E,GACF,IAAI5C,EAIJ,OAHI3E,KAAK2sD,SAAW3sD,KAAK2sD,QAAQhjB,eAAepiC,KAC9C5C,EAAQ3E,KAAK2sD,QAAQplD,IAEhB5C,CACT,CAOAioD,OAAAA,GACE,OAAQ5sD,KAAK2sD,SAAW5oD,OAAO2uB,KAAK1yB,KAAK2sD,UAAa,EACxD,CAOAxF,aAAAA,GACE,OAAQnnD,KAAK2sD,SAAW5oD,OAAOoG,OAAO,CAAC,EAAGnK,KAAK2sD,UAAa,CAAC,CAC/D,CAMAE,qBAAAA,GACE,OAAO7sD,KAAK2sD,OACd,CAKAzF,aAAAA,GACE,QAASlnD,KAAK2sD,OAChB,CAMAG,MAAAA,CAAOvlD,EAAKmlD,GACV,IAAI1vC,EACJA,EAAY,UAAHuP,OAAahlB,GAClBvH,KAAKiT,YAAY+J,IACnBhd,KAAKiD,cAAc,IAAIwpD,EAAYzvC,EAAWzV,EAAKmlD,IAErD1vC,EAAYjR,EAAAA,EAAgBC,eACxBhM,KAAKiT,YAAY+J,IACnBhd,KAAKiD,cAAc,IAAIwpD,EAAYzvC,EAAWzV,EAAKmlD,GAEvD,CAMAhiD,iBAAAA,CAAkBnD,EAAK8c,GACrBrkB,KAAKsC,iBAAiB,UAADiqB,OAAWhlB,GAAO8c,EACzC,CAMAyjC,oBAAAA,CAAqBvgD,EAAK8c,GACxBrkB,KAAKyF,oBAAoB,UAAD8mB,OAAWhlB,GAAO8c,EAC5C,CASA7X,GAAAA,CAAIjF,EAAK5C,EAAOooD,GACd,MAAM/oD,EAAShE,KAAK2sD,UAAY3sD,KAAK2sD,QAAU,CAAC,GAChD,GAAII,EACF/oD,EAAOuD,GAAO5C,MACT,CACL,MAAM+nD,EAAW1oD,EAAOuD,GACxBvD,EAAOuD,GAAO5C,EACV+nD,IAAa/nD,GACf3E,KAAK8sD,OAAOvlD,EAAKmlD,EAErB,CACF,CASAn0C,aAAAA,CAAcvU,EAAQ+oD,GACpB,IAAK,MAAMxlD,KAAOvD,EAChBhE,KAAKwM,IAAIjF,EAAKvD,EAAOuD,GAAMwlD,EAE/B,CAOAvzB,eAAAA,CAAgB5oB,GACTA,EAAO+7C,SAGZ5oD,OAAOoG,OAAOnK,KAAK2sD,UAAY3sD,KAAK2sD,QAAU,CAAC,GAAI/7C,EAAO+7C,QAC5D,CAQAK,KAAAA,CAAMzlD,EAAKwlD,GACT,GAAI/sD,KAAK2sD,SAAWplD,KAAOvH,KAAK2sD,QAAS,CACvC,MAAMD,EAAW1sD,KAAK2sD,QAAQplD,UACvBvH,KAAK2sD,QAAQplD,IAChBF,EAAAA,EAAAA,GAAQrH,KAAK2sD,WACf3sD,KAAK2sD,QAAU,MAEZI,GACH/sD,KAAK8sD,OAAOvlD,EAAKmlD,EAErB,CACF,EAGF,S,gDC1QA,MAAMx5C,UAAoBxT,EAAAA,GAQxBC,WAAAA,CAAYC,EAAMm2C,EAAuBj2C,EAAY4nC,GACnD3nC,MAAMH,GAQNI,KAAK+1C,sBAAwBA,EAO7B/1C,KAAKF,WAAaA,EASlBE,KAAK0nC,QAAUA,CACjB,EAGF,S,iBC1BO,SAASrjC,EAAQkwB,EAAiBC,EAAQC,EAAKlN,EAAQvY,GAC5D,IAAIi+C,EAEJ,IADAz4B,GAAUjN,EACHiN,EAASC,EAAKD,GAAUjN,EAK7B,GAJA0lC,EAAMj+C,EACJulB,EAAgBxpB,MAAMypB,EAASjN,EAAQiN,GACvCD,EAAgBxpB,MAAMypB,EAAQA,EAASjN,IAErC0lC,EACF,OAAOA,EAGX,OAAO,CACT,C,mIC4BA,MAAMC,UAAqB9qC,EAAAA,EAIzBziB,WAAAA,CAAYsK,GACVlK,MAAM,CACJqN,QAAS,EACTmV,oBAC6BtiB,IAA3BgK,EAAQsY,gBAA+BtY,EAAQsY,eACjD7T,cAA+BzO,IAArBgK,EAAQyE,SAAyBzE,EAAQyE,SAAW,EAC9DgU,WAAyBziB,IAAlBgK,EAAQyY,MAAsBzY,EAAQyY,MAAQ,EACrDI,kBAC2B7iB,IAAzBgK,EAAQ6Y,aAA6B7Y,EAAQ6Y,aAAe,CAAC,EAAG,GAClEE,cAAe/Y,EAAQ+Y,gBAOzBhjB,KAAKmtD,oBAAsB,KAM3BntD,KAAKopD,WAAyBnpD,IAAjBgK,EAAQ+2B,KAAqB/2B,EAAQ+2B,KAAO,KAMzDhhC,KAAKotD,QAAU,CAAC,EAAG,GAMnBptD,KAAKi7C,QAAUhxC,EAAQojD,OAMvBrtD,KAAK0vC,OAASzlC,EAAQylC,OAMtB1vC,KAAKstD,SAAWrjD,EAAQsjD,QAMxBvtD,KAAKk7C,YAA2Bj7C,IAAlBgK,EAAQuc,MAAsBvc,EAAQuc,MAAQ,EAM5DxmB,KAAK0pD,aAA6BzpD,IAAnBgK,EAAQ0/C,OAAuB1/C,EAAQ0/C,OAAS,KAM/D3pD,KAAKwtD,MAMLxtD,KAAKytD,eAKLztD,KAAK0tD,YACH1tD,KAAKopD,OAASppD,KAAKopD,MAAMxtC,UACrBqN,EAAAA,EAAWC,QACXD,EAAAA,EAAW/f,OACblJ,KAAK0tD,cAAgBzkC,EAAAA,EAAWC,SAClClpB,KAAK2b,QAAQnD,MAAK,IAAOxY,KAAK0tD,YAAczkC,EAAAA,EAAW/f,SAEzDlJ,KAAK+T,QACP,CAQAuN,KAAAA,GACE,MAAMoB,EAAQ1iB,KAAKijB,WACb3Q,EAAQ,IAAI46C,EAAa,CAC7BlsB,KAAMhhC,KAAK+qD,UAAY/qD,KAAK+qD,UAAUzpC,aAAUrhB,EAChDotD,OAAQrtD,KAAK2tD,YACbje,OAAQ1vC,KAAK4tD,YACbL,QAASvtD,KAAK6tD,aACdrnC,MAAOxmB,KAAKu7C,WACZoO,OAAQ3pD,KAAKgrD,YAAchrD,KAAKgrD,YAAY1pC,aAAUrhB,EACtDyO,SAAU1O,KAAKmjB,cACfZ,eAAgBviB,KAAKojB,oBACrBV,MAAO9X,MAAMC,QAAQ6X,GAASA,EAAM3X,QAAU2X,EAC9CI,aAAc9iB,KAAKqjB,kBAAkBtY,QACrCiY,cAAehjB,KAAKsjB,qBAGtB,OADAhR,EAAM0R,WAAWhkB,KAAKkjB,cACf5Q,CACT,CASAkR,SAAAA,GACE,MAAMhV,EAAOxO,KAAKwtD,MACZ1qC,EAAe9iB,KAAKqjB,kBACpBX,EAAQ1iB,KAAKujB,gBAGnB,MAAO,CACL/U,EAAK,GAAK,EAAIsU,EAAa,GAAKJ,EAAM,GACtClU,EAAK,GAAK,EAAIsU,EAAa,GAAKJ,EAAM,GAE1C,CAOA64B,QAAAA,GACE,OAAOv7C,KAAKk7C,MACd,CAOA6P,OAAAA,GACE,OAAO/qD,KAAKopD,KACd,CAOA0C,OAAAA,CAAQ9qB,GACNhhC,KAAKopD,MAAQpoB,EACbhhC,KAAK+T,QACP,CAMA2P,oBAAAA,GAME,OALK1jB,KAAKmtD,sBACRntD,KAAKmtD,oBAAsBntD,KAAK8tD,0BAC9B9tD,KAAKytD,iBAGFztD,KAAKmtD,mBACd,CASA1pC,QAAAA,CAAS7N,GAAY,IAAAm4C,EAAAC,EACnB,MAAMC,EAAoB,QAAbF,EAAG/tD,KAAKopD,aAAK,IAAA2E,OAAA,EAAVA,EAAY1lD,SACtB6lD,EACJ,GAAA3hC,OAAG3W,EAAU,KAAA2W,OAAIvsB,KAAKk7C,OAAM,KAAA3uB,OAAIvsB,KAAK0vC,OAAM,KAAAnjB,OAAIvsB,KAAKstD,SAAQ,KAAA/gC,OAAIvsB,KAAKi7C,QAAO,KAAA1uB,OAAI0hC,GAChFlqD,OAAOC,OAAOhE,KAAKytD,gBAAgBnpB,KAAK,KAC1C,IAAI+Q,EACsC,QAD9B2Y,EACVp8C,EAAAA,GAAevF,IAAI6hD,EAAU,KAAM,aAAK,IAAAF,OAAA,EAAxCA,EAA0CvqC,SAAS,GAErD,IAAK4xB,EAAO,CACV,MAAM8Y,EAAgBnuD,KAAKytD,eACrBj/C,EAAOpJ,KAAKgpD,KAAKD,EAAc3/C,KAAOoH,GACtC8xB,GAAUC,EAAAA,EAAAA,GAAsBn5B,EAAMA,GAC5CxO,KAAKquD,MAAMF,EAAezmB,EAAS9xB,GAEnCy/B,EAAQ3N,EAAQiP,OAChB/kC,EAAAA,GAAepF,IACb0hD,EACA,KACA,KACA,IAAII,EAAAA,EAAUjZ,OAAOp1C,EAAW,KAAMgpB,EAAAA,EAAW/f,OAAQ,MAE7D,CACA,OAAOmsC,CACT,CAQA1xB,aAAAA,CAAc/N,GACZ,OAAOA,CACT,CAMAiO,YAAAA,GACE,OAAO7jB,KAAKwtD,KACd,CAMA5pC,aAAAA,GACE,OAAO5jB,KAAK0tD,WACd,CAQA5pC,SAAAA,GACE,OAAO9jB,KAAKotD,OACd,CAOAO,SAAAA,GACE,OAAO3tD,KAAKi7C,OACd,CAOA2S,SAAAA,GACE,OAAO5tD,KAAK0vC,MACd,CAOAme,UAAAA,GACE,OAAO7tD,KAAKstD,QACd,CAQA7yC,OAAAA,GACE,OAAOza,KAAKwtD,KACd,CAOAxC,SAAAA,GACE,OAAOhrD,KAAK0pD,OACd,CAOAqC,SAAAA,CAAUpC,GACR3pD,KAAK0pD,QAAUC,EACf3pD,KAAK+T,QACP,CAMAqQ,iBAAAA,CAAkBC,GAAW,CAM7B1a,IAAAA,GAAQ,CAMR2a,mBAAAA,CAAoBD,GAAW,CAU/BkqC,sBAAAA,CAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACAzuD,KAAKi7C,UAAYt1C,KACH,UAAb6oD,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAIE,EAAK3uD,KAAK0vC,OACVkf,OAAuB3uD,IAAlBD,KAAKstD,SAAyBqB,EAAK3uD,KAAKstD,SACjD,GAAIqB,EAAKC,EAAI,CACX,MAAMztB,EAAMwtB,EACZA,EAAKC,EACLA,EAAKztB,CACP,CACA,MAAMksB,OACcptD,IAAlBD,KAAKstD,SAAyBttD,KAAKi7C,QAAyB,EAAfj7C,KAAKi7C,QAC9C/T,EAAS,EAAI9hC,KAAKuyB,GAAM01B,EACxBj8C,EAAIw9C,EAAKxpD,KAAKgxB,IAAI8Q,GAElBoG,EAAIqhB,EADAvpD,KAAKwX,KAAKgyC,EAAKA,EAAKx9C,EAAIA,GAE5By9C,EAAIzpD,KAAKwX,KAAKxL,EAAIA,EAAIk8B,EAAIA,GAC1BwhB,EAAaD,EAAIz9C,EACvB,GAAiB,UAAbo9C,GAAwBM,GAAcJ,EACxC,OAAOI,EAAaL,EAetB,MAAMM,EAAIN,EAAc,EAAIK,EACtBljC,EAAK6iC,EAAc,GAAMnhB,EAAIuhB,GAE7BG,EADO5pD,KAAKwX,MAAM+xC,EAAKI,IAAMJ,EAAKI,GAAKnjC,EAAIA,GACzB+iC,EACxB,QAAsB1uD,IAAlBD,KAAKstD,UAAuC,UAAbkB,EACjC,OAAkB,EAAXQ,EAIT,MAAMC,EAAKN,EAAKvpD,KAAKgxB,IAAI8Q,GAEnBgoB,EAAKN,EADAxpD,KAAKwX,KAAK+xC,EAAKA,EAAKM,EAAKA,GAG9BE,EADK/pD,KAAKwX,KAAKqyC,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmBT,EAAY,CACjC,MAAMU,EAAeD,EAAkBV,EAAe,EAAIG,EAAKD,EAC/D,OAAO,EAAIvpD,KAAKqI,IAAIuhD,EAAUI,EAChC,CACA,OAAkB,EAAXJ,CACT,CAMAK,mBAAAA,GACE,IAKIC,EALAC,EAAUC,EAAAA,GACVhB,EAAWiB,EAAAA,GACXf,EAAa,EACbgB,EAAW,KACXC,EAAiB,EAEjBlB,EAAc,EAEA,IAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAdjwD,KAAK0pD,UACP4F,GAAcY,EAAAA,EAAAA,GAAmC,QAAxBN,EAAC5vD,KAAK0pD,QAAQ7oB,kBAAU,IAAA+uB,EAAAA,EAAIO,EAAAA,IACrD1B,EAAqC,QAA1BoB,EAAG7vD,KAAK0pD,QAAQz5C,kBAAU,IAAA4/C,EAAAA,EAAIO,EAAAA,GACzCV,EAAW1vD,KAAK0pD,QAAQ2G,cACxBV,EAAiD,QAAnCG,EAAG9vD,KAAK0pD,QAAQ4G,2BAAmB,IAAAR,EAAAA,EAAI,EACrDtB,EAAqC,QAA7BuB,EAAG/vD,KAAK0pD,QAAQ6G,qBAAa,IAAAR,EAAAA,EAAIN,EAAAA,GACzCF,EAAmC,QAA5BS,EAAGhwD,KAAK0pD,QAAQ8G,oBAAY,IAAAR,EAAAA,EAAIR,EAAAA,GACvCd,EAAyC,QAA/BuB,EAAGjwD,KAAK0pD,QAAQ+G,uBAAe,IAAAR,EAAAA,EAAIS,EAAAA,IAG/C,MAAMvoC,EAAMnoB,KAAKuuD,uBAAuBC,EAAUC,EAAaC,GACzDiC,EAAYvrD,KAAKqI,IAAIzN,KAAK0vC,OAAQ1vC,KAAKstD,UAAY,GAGzD,MAAO,CACLgC,YAAaA,EACbb,YAAaA,EACbjgD,KALWpJ,KAAKgpD,KAAK,EAAIuC,EAAYxoC,GAMrConC,QAASA,EACTG,SAAUA,EACVC,eAAgBA,EAChBnB,SAAUA,EACVE,WAAYA,EAEhB,CAKA36C,MAAAA,GACE/T,KAAKytD,eAAiBztD,KAAKqvD,sBAC3B,MAAM7gD,EAAOxO,KAAKytD,eAAej/C,KACjCxO,KAAKmtD,oBAAsB,KAC3BntD,KAAKwtD,MAAQ,CAACh/C,EAAMA,EACtB,CAQA6/C,KAAAA,CAAMF,EAAezmB,EAAS9xB,GAO5B,GANA8xB,EAAQhlB,MAAM9M,EAAYA,GAE1B8xB,EAAQzgB,UAAUknC,EAAc3/C,KAAO,EAAG2/C,EAAc3/C,KAAO,GAE/DxO,KAAK4wD,YAAYlpB,GAEb1nC,KAAKopD,MAAO,CACd,IAAIxgC,EAAQ5oB,KAAKopD,MAAMvoB,WACT,OAAVjY,IACFA,EAAQioC,EAAAA,IAEVnpB,EAAQI,WAAYooB,EAAAA,EAAAA,GAAYtnC,GAChC8e,EAAQ1G,MACV,CACImtB,EAAcmB,cAChB5nB,EAAQ4nB,YAAcnB,EAAcmB,YACpC5nB,EAAQopB,UAAY3C,EAAcM,YAC9BN,EAAcuB,WAChBhoB,EAAQqpB,YAAY5C,EAAcuB,UAClChoB,EAAQioB,eAAiBxB,EAAcwB,gBAEzCjoB,EAAQ6nB,QAAUpB,EAAcoB,QAChC7nB,EAAQ8mB,SAAWL,EAAcK,SACjC9mB,EAAQgnB,WAAaP,EAAcO,WACnChnB,EAAQiiB,SAEZ,CAOAmE,yBAAAA,CAA0BK,GACxB,IAAIzmB,EACJ,GAAI1nC,KAAKopD,MAAO,CACd,IAAIxgC,EAAQ5oB,KAAKopD,MAAMvoB,WAGnBzzB,EAAU,EACO,kBAAVwb,IACTA,GAAQU,EAAAA,EAAAA,IAAQV,IAEJ,OAAVA,EACFxb,EAAU,EACDxC,MAAMC,QAAQ+d,KACvBxb,EAA2B,IAAjBwb,EAAMxkB,OAAewkB,EAAM,GAAK,GAE5B,IAAZxb,IAGFs6B,GAAUC,EAAAA,EAAAA,GAAsBwmB,EAAc3/C,KAAM2/C,EAAc3/C,MAClExO,KAAKgxD,wBAAwB7C,EAAezmB,GAEhD,CACA,OAAOA,EAAUA,EAAQiP,OAAS32C,KAAKyjB,SAAS,EAClD,CAMAmtC,WAAAA,CAAYlpB,GACV,IAAI2lB,EAASrtD,KAAKi7C,QAClB,MAAMvL,EAAS1vC,KAAK0vC,OACpB,GAAI2d,IAAW1nD,IACb+hC,EAAQupB,IAAI,EAAG,EAAGvhB,EAAQ,EAAG,EAAItqC,KAAKuyB,QACjC,CACL,MAAM41B,OAA4BttD,IAAlBD,KAAKstD,SAAyB5d,EAAS1vC,KAAKstD,cACtCrtD,IAAlBD,KAAKstD,WACPD,GAAU,GAEZ,MAAM6D,EAAalxD,KAAKk7C,OAAS91C,KAAKuyB,GAAK,EACrC2P,EAAQ,EAAIliC,KAAKuyB,GAAM01B,EAC7B,IAAK,IAAIjmD,EAAI,EAAGA,EAAIimD,EAAQjmD,IAAK,CAC/B,MAAM+pD,EAASD,EAAa9pD,EAAIkgC,EAC1B8pB,EAAUhqD,EAAI,IAAM,EAAIsoC,EAAS6d,EACvC7lB,EAAQ+P,OAAO2Z,EAAUhsD,KAAK8wB,IAAIi7B,GAASC,EAAUhsD,KAAKgxB,IAAI+6B,GAChE,CACAzpB,EAAQ2pB,WACV,CACF,CAOAL,uBAAAA,CAAwB7C,EAAezmB,GAErCA,EAAQzgB,UAAUknC,EAAc3/C,KAAO,EAAG2/C,EAAc3/C,KAAO,GAE/DxO,KAAK4wD,YAAYlpB,GAEjBA,EAAQI,UAAY+oB,EAAAA,GACpBnpB,EAAQ1G,OACJmtB,EAAcmB,cAChB5nB,EAAQ4nB,YAAcnB,EAAcmB,YACpC5nB,EAAQopB,UAAY3C,EAAcM,YAC9BN,EAAcuB,WAChBhoB,EAAQqpB,YAAY5C,EAAcuB,UAClChoB,EAAQioB,eAAiBxB,EAAcwB,gBAEzCjoB,EAAQ8mB,SAAWL,EAAcK,SACjC9mB,EAAQgnB,WAAaP,EAAcO,WACnChnB,EAAQiiB,SAEZ,CAKAhuC,KAAAA,GACE,OAAO3b,KAAKopD,MAAQppD,KAAKopD,MAAMztC,QAAU4I,QAAQC,SACnD,EAGF,S,yNCxmBA,MAAM8sC,UAAmBz5B,EAAAA,GAMvBl4B,WAAAA,CAAYmR,EAAagnB,GACvB/3B,QAMAC,KAAKuxD,cAAgB,KAMrBvxD,KAAKwxD,uBAAyB,EAM9BxxD,KAAK+3B,WAAa,EAMlB/3B,KAAKg4B,mBAAqB,OAEX/3B,IAAX63B,GAAyBltB,MAAMC,QAAQiG,EAAY,IAMrD9Q,KAAKi4B,eAEDnnB,EAEFgnB,GATF93B,KAAKk4B,mBACHJ,EAC8BhnB,EAUpC,CAOA2gD,gBAAAA,CAAiBhxD,IACf+a,EAAAA,EAAAA,IAAOxb,KAAKu0B,gBAAiB9zB,GAC7BT,KAAKmL,SACP,CAQAmW,KAAAA,GACE,MAAMowC,EAAa,IAAIJ,EACrBtxD,KAAKu0B,gBAAgBxpB,QACrB/K,KAAK83B,QAGP,OADA45B,EAAWl4B,gBAAgBx5B,MACpB0xD,CACT,CAUAhsC,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,OAAIA,GAAqBwN,EAAAA,EAAAA,IAAyBtzB,KAAK+P,YAAa4V,EAAGC,GAC9DE,GAEL9lB,KAAKg4B,mBAAqBh4B,KAAKylB,gBACjCzlB,KAAK+3B,UAAY3yB,KAAKwX,MACpBub,EAAAA,EAAAA,IACEn4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACL,IAGJvnB,KAAKg4B,kBAAoBh4B,KAAKylB,gBAEzB2S,EAAAA,EAAAA,GACLp4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACLvnB,KAAK+3B,WACL,EACApS,EACAC,EACAC,EACAC,GAEJ,CAaA6rC,cAAAA,CAAe3iD,GACb,OAAO2iD,EAAAA,EAAAA,GACL3xD,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACLvY,EAEJ,CAgBA4iD,gBAAAA,CAAiB3gD,EAAG4gD,GAClB,MAAmB,OAAf7xD,KAAK83B,QAAkC,QAAf93B,KAAK83B,OACxB,MAET+5B,OAA8B5xD,IAAhB4xD,GAA4BA,GACnCC,EAAAA,EAAAA,IACL9xD,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACLtW,EACA4gD,GAEJ,CAQAv5B,cAAAA,GACE,OAAOC,EAAAA,EAAAA,IACLv4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OAET,CAYAwqC,eAAAA,CAAgBC,EAAUplD,GACxB,OAAOqlD,EAAAA,EAAAA,IACLjyD,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACLyqC,EACAplD,EACA5M,KAAKunB,OAET,CAOAyJ,SAAAA,GACE,OAAOmT,EAAAA,EAAAA,GACLnkC,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OAET,CAKA2qC,eAAAA,GACwD,IAAAC,EAAlDnyD,KAAKwxD,uBAAyBxxD,KAAKylB,gBACrCzlB,KAAKuxD,cAAgBvxD,KAAK+xD,gBACxB,GACkB,QADfI,EACHnyD,KAAKuxD,qBAAa,IAAAY,EAAAA,OAAIlyD,GAExBD,KAAKwxD,sBAAwBxxD,KAAKylB,eAEpC,OAAqCzlB,KAAKuxD,aAC5C,CAQA/4B,6BAAAA,CAA8BnT,GAE5B,MAAMoT,EAA4B,GAUlC,OATAA,EAA0Br0B,QAASs0B,EAAAA,EAAAA,IACjC14B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACLlC,EACAoT,EACA,GAEK,IAAI64B,EAAW74B,EAA2B,KACnD,CAQA3R,OAAAA,GACE,MAAO,YACT,CASAE,gBAAAA,CAAiBpZ,GACf,OAAOwkD,EAAAA,EAAAA,IACLpyD,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACL3Z,EACA5N,KAAK+P,YAET,CASAkoB,cAAAA,CAAennB,EAAagnB,GAC1B93B,KAAK24B,UAAUb,EAAQhnB,EAAa,GAC/B9Q,KAAKu0B,kBACRv0B,KAAKu0B,gBAAkB,IAEzBv0B,KAAKu0B,gBAAgBnwB,QAASw0B,EAAAA,EAAAA,IAC5B54B,KAAKu0B,gBACL,EACAzjB,EACA9Q,KAAKunB,QAEPvnB,KAAKmL,SACP,EAGF,U,uBC7SA,MAAMknD,UAAmBx6B,EAAAA,GAMvBl4B,WAAAA,CAAYmR,EAAagnB,GACvB/3B,QACI+3B,IAAWltB,MAAMC,QAAQiG,EAAY,IACvC9Q,KAAKk4B,mBACHJ,EAC8BhnB,GAGhC9Q,KAAKi4B,eAEDnnB,EAEFgnB,EAGN,CAOAw6B,WAAAA,CAAYnsC,IACV3K,EAAAA,EAAAA,IAAOxb,KAAKu0B,gBAAiBpO,EAAMmT,sBACnCt5B,KAAKmL,SACP,CAQAmW,KAAAA,GACE,MAAMixC,EAAa,IAAIF,EACrBryD,KAAKu0B,gBAAgBxpB,QACrB/K,KAAK83B,QAGP,OADAy6B,EAAW/4B,gBAAgBx5B,MACpBuyD,CACT,CAUA7sC,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,GAAIA,GAAqBwN,EAAAA,EAAAA,IAAyBtzB,KAAK+P,YAAa4V,EAAGC,GACrE,OAAOE,EAET,MAAMyO,EAAkBv0B,KAAKu0B,gBACvBhN,EAASvnB,KAAKunB,OACpB,IAAK,IAAIngB,EAAI,EAAGwE,EAAK2oB,EAAgBnwB,OAAQgD,EAAIwE,EAAIxE,GAAKmgB,EAAQ,CAChE,MAAM8a,GAAkB0lB,EAAAA,EAAAA,IACtBpiC,EACAC,EACA2O,EAAgBntB,GAChBmtB,EAAgBntB,EAAI,IAEtB,GAAIi7B,EAAkBvc,EAAoB,CACxCA,EAAqBuc,EACrB,IAAK,IAAI9xB,EAAI,EAAGA,EAAIgX,IAAUhX,EAC5BsV,EAAatV,GAAKgkB,EAAgBntB,EAAImJ,GAExCsV,EAAazhB,OAASmjB,CACxB,CACF,CACA,OAAOzB,CACT,CAQAwS,cAAAA,GACE,OAAOC,EAAAA,EAAAA,IACLv4B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OAET,CAQAirC,QAAAA,CAASxrD,GACP,MAAMgB,EAAIhI,KAAKu0B,gBAAgBnwB,OAASpE,KAAKunB,OAC7C,OAAIvgB,EAAQ,GAAKgB,GAAKhB,EACb,KAEF,IAAIszB,EAAAA,EACTt6B,KAAKu0B,gBAAgBxpB,MACnB/D,EAAQhH,KAAKunB,QACZvgB,EAAQ,GAAKhH,KAAKunB,QAErBvnB,KAAK83B,OAET,CAOA61B,SAAAA,GACE,MAAMp5B,EAAkBv0B,KAAKu0B,gBACvBuD,EAAS93B,KAAK83B,OACdvQ,EAASvnB,KAAKunB,OAEd8lC,EAAS,GACf,IAAK,IAAIjmD,EAAI,EAAGwE,EAAK2oB,EAAgBnwB,OAAQgD,EAAIwE,EAAIxE,GAAKmgB,EAAQ,CAChE,MAAMpB,EAAQ,IAAImU,EAAAA,EAAM/F,EAAgBxpB,MAAM3D,EAAGA,EAAImgB,GAASuQ,GAC9Du1B,EAAOvoD,KAAKqhB,EACd,CACA,OAAOknC,CACT,CAQAvmC,OAAAA,GACE,MAAO,YACT,CASAE,gBAAAA,CAAiBpZ,GACf,MAAM2mB,EAAkBv0B,KAAKu0B,gBACvBhN,EAASvnB,KAAKunB,OACpB,IAAK,IAAIngB,EAAI,EAAGwE,EAAK2oB,EAAgBnwB,OAAQgD,EAAIwE,EAAIxE,GAAKmgB,EAAQ,CAChE,MAAM5B,EAAI4O,EAAgBntB,GACpBwe,EAAI2O,EAAgBntB,EAAI,GAC9B,IAAI2e,EAAAA,EAAAA,IAAWnY,EAAQ+X,EAAGC,GACxB,OAAO,CAEX,CACA,OAAO,CACT,CASAqS,cAAAA,CAAennB,EAAagnB,GAC1B93B,KAAK24B,UAAUb,EAAQhnB,EAAa,GAC/B9Q,KAAKu0B,kBACRv0B,KAAKu0B,gBAAkB,IAEzBv0B,KAAKu0B,gBAAgBnwB,QAASw0B,EAAAA,EAAAA,IAC5B54B,KAAKu0B,gBACL,EACAzjB,EACA9Q,KAAKunB,QAEPvnB,KAAKmL,SACP,EAGF,UClLA,MAAMsnD,UAAwB56B,EAAAA,GAQ5Bl4B,WAAAA,CAAYmR,EAAagnB,EAAQgB,GAqB/B,GApBA/4B,QAMAC,KAAK+4B,MAAQ,GAMb/4B,KAAK+3B,WAAa,EAMlB/3B,KAAKg4B,mBAAqB,EAEtBptB,MAAMC,QAAQiG,EAAY,IAC5B9Q,KAAKi4B,eAEDnnB,EAEFgnB,QAEG,QAAe73B,IAAX63B,GAAwBgB,EACjC94B,KAAKk4B,mBACHJ,EAC8BhnB,GAEhC9Q,KAAK+4B,MAAQD,MACR,CACL,MAAM45B,EAAgD5hD,EAEhDyjB,EAAkB,GAClBuE,EAAO,GACb,IAAK,IAAI1xB,EAAI,EAAGwE,EAAK8mD,EAAYtuD,OAAQgD,EAAIwE,IAAMxE,EAAG,CACpD,MAAMsqD,EAAagB,EAAYtrD,IAC/BoU,EAAAA,EAAAA,IAAO+Y,EAAiBm9B,EAAWp4B,sBACnCR,EAAKh0B,KAAKyvB,EAAgBnwB,OAC5B,CACA,MAAM0zB,EACmB,IAAvB46B,EAAYtuD,OACRpE,KAAK2yD,YACLD,EAAY,GAAGC,YACrB3yD,KAAKk4B,mBAAmBJ,EAAQvD,GAChCv0B,KAAK+4B,MAAQD,CACf,CACF,CAOA85B,gBAAAA,CAAiBlB,IACfl2C,EAAAA,EAAAA,IAAOxb,KAAKu0B,gBAAiBm9B,EAAWp4B,qBAAqBvuB,SAC7D/K,KAAK+4B,MAAMj0B,KAAK9E,KAAKu0B,gBAAgBnwB,QACrCpE,KAAKmL,SACP,CAQAmW,KAAAA,GACE,MAAMuxC,EAAkB,IAAIJ,EAC1BzyD,KAAKu0B,gBAAgBxpB,QACrB/K,KAAK83B,OACL93B,KAAK+4B,MAAMhuB,SAGb,OADA8nD,EAAgBr5B,gBAAgBx5B,MACzB6yD,CACT,CAUAntC,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,OAAIA,GAAqBwN,EAAAA,EAAAA,IAAyBtzB,KAAK+P,YAAa4V,EAAGC,GAC9DE,GAEL9lB,KAAKg4B,mBAAqBh4B,KAAKylB,gBACjCzlB,KAAK+3B,UAAY3yB,KAAKwX,MACpB6c,EAAAA,EAAAA,IACEz5B,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACL,IAGJvnB,KAAKg4B,kBAAoBh4B,KAAKylB,gBAEzBiU,EAAAA,EAAAA,IACL15B,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACLvnB,KAAK+3B,WACL,EACApS,EACAC,EACAC,EACAC,GAEJ,CAwBA8rC,gBAAAA,CAAiB3gD,EAAG4gD,EAAahlC,GAC/B,MACkB,OAAf7sB,KAAK83B,QAAkC,QAAf93B,KAAK83B,QACE,IAAhC93B,KAAKu0B,gBAAgBnwB,OAEd,MAETytD,OAA8B5xD,IAAhB4xD,GAA4BA,EAC1ChlC,OAA8B5sB,IAAhB4sB,GAA4BA,GACnCimC,EAAAA,EAAAA,IACL9yD,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACLtW,EACA4gD,EACAhlC,GAEJ,CAQAyL,cAAAA,GACE,OAAO0B,EAAAA,EAAAA,IACLh6B,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OAET,CAKA0S,OAAAA,GACE,OAAOj6B,KAAK+4B,KACd,CAQAg6B,aAAAA,CAAc/rD,GACZ,OAAIA,EAAQ,GAAKhH,KAAK+4B,MAAM30B,QAAU4C,EAC7B,KAEF,IAAIsqD,EACTtxD,KAAKu0B,gBAAgBxpB,MACT,IAAV/D,EAAc,EAAIhH,KAAK+4B,MAAM/xB,EAAQ,GACrChH,KAAK+4B,MAAM/xB,IAEbhH,KAAK83B,OAET,CAOAk7B,cAAAA,GACE,MAAMz+B,EAAkBv0B,KAAKu0B,gBACvBuE,EAAO94B,KAAK+4B,MACZjB,EAAS93B,KAAK83B,OAEd46B,EAAc,GACpB,IAAIl+B,EAAS,EACb,IAAK,IAAIptB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACXsqD,EAAa,IAAIJ,EACrB/8B,EAAgBxpB,MAAMypB,EAAQC,GAC9BqD,GAEF46B,EAAY5tD,KAAK4sD,GACjBl9B,EAASC,CACX,CACA,OAAOi+B,CACT,CAOA1hC,SAAAA,GACE,MAAM8H,EAAO94B,KAAK+4B,MAClB,IAAIpC,EAAQ,EACRvyB,EAAS,EACb,IAAK,IAAIgD,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1ChD,IAAU+/B,EAAAA,EAAAA,GACRnkC,KAAKu0B,gBACLoC,EACAmC,EAAK1xB,GACLpH,KAAKunB,QAEPoP,EAAQmC,EAAK1xB,GAEf,OAAOhD,CACT,CAKA6uD,gBAAAA,GAEE,MAAMC,EAAY,GACZ3+B,EAAkBv0B,KAAKu0B,gBAC7B,IAAIC,EAAS,EACb,MAAMsE,EAAO94B,KAAK+4B,MACZxR,EAASvnB,KAAKunB,OACpB,IAAK,IAAIngB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACX+rD,GAAWlB,EAAAA,EAAAA,IACf19B,EACAC,EACAC,EACAlN,EACA,KAEF/L,EAAAA,EAAAA,IAAO03C,EAAWC,GAClB3+B,EAASC,CACX,CACA,OAAOy+B,CACT,CAQA16B,6BAAAA,CAA8BnT,GAE5B,MAAMoT,EAA4B,GAE5BmC,EAAiB,GAWvB,OAVAnC,EAA0Br0B,QAASm+B,EAAAA,EAAAA,IACjCviC,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACLlC,EACAoT,EACA,EACAmC,GAEK,IAAI63B,EAAgBh6B,EAA2B,KAAMmC,EAC9D,CAQA9T,OAAAA,GACE,MAAO,iBACT,CASAE,gBAAAA,CAAiBpZ,GACf,OAAOwlD,EAAAA,EAAAA,IACLpzD,KAAKu0B,gBACL,EACAv0B,KAAK+4B,MACL/4B,KAAKunB,OACL3Z,EAEJ,CASAqqB,cAAAA,CAAennB,EAAagnB,GAC1B93B,KAAK24B,UAAUb,EAAQhnB,EAAa,GAC/B9Q,KAAKu0B,kBACRv0B,KAAKu0B,gBAAkB,IAEzB,MAAMuE,GAAOiC,EAAAA,EAAAA,IACX/6B,KAAKu0B,gBACL,EACAzjB,EACA9Q,KAAKunB,OACLvnB,KAAK+4B,OAEP/4B,KAAKu0B,gBAAgBnwB,OAAyB,IAAhB00B,EAAK10B,OAAe,EAAI00B,EAAKA,EAAK10B,OAAS,GACzEpE,KAAKmL,SACP,EAGF,U,4CC3VA,MAAMkoD,UAAqBx7B,EAAAA,GAOzBl4B,WAAAA,CAAYmR,EAAagnB,EAAQ0J,GA6C/B,GA5CAzhC,QAMAC,KAAKszD,OAAS,GAMdtzD,KAAKuzD,6BAA+B,EAMpCvzD,KAAKwzD,oBAAsB,KAM3BxzD,KAAK+3B,WAAa,EAMlB/3B,KAAKg4B,mBAAqB,EAM1Bh4B,KAAKk5B,mBAAqB,EAM1Bl5B,KAAKm5B,yBAA2B,MAE3BqI,IAAU52B,MAAMC,QAAQiG,EAAY,IAAK,CAC5C,MAAM2iD,EAA0C3iD,EAE1CyjB,EAAkB,GAClBm/B,EAAY,GAClB,IAAK,IAAItsD,EAAI,EAAGwE,EAAK6nD,EAASrvD,OAAQgD,EAAIwE,IAAMxE,EAAG,CACjD,MAAMmyB,EAAUk6B,EAASrsD,GACnBotB,EAASD,EAAgBnwB,OACzB00B,EAAOS,EAAQU,UACrB,IAAK,IAAI1pB,EAAI,EAAGqhC,EAAK9Y,EAAK10B,OAAQmM,EAAIqhC,IAAMrhC,EAC1CuoB,EAAKvoB,IAAMikB,GAEbhZ,EAAAA,EAAAA,IAAO+Y,EAAiBgF,EAAQD,sBAChCo6B,EAAU5uD,KAAKg0B,EACjB,CACAhB,EACsB,IAApB27B,EAASrvD,OAAepE,KAAK2yD,YAAcc,EAAS,GAAGd,YACzD7hD,EAAcyjB,EACdiN,EAAQkyB,CACV,MACezzD,IAAX63B,GAAwB0J,GAC1BxhC,KAAKk4B,mBACHJ,EAC8BhnB,GAEhC9Q,KAAKszD,OAAS9xB,GAEdxhC,KAAKi4B,eAEDnnB,EAEFgnB,EAGN,CAOA67B,aAAAA,CAAcp6B,GAEZ,IAAIT,EACJ,GAAK94B,KAAKu0B,gBAIH,CACL,MAAMC,EAASx0B,KAAKu0B,gBAAgBnwB,QACpCoX,EAAAA,EAAAA,IAAOxb,KAAKu0B,gBAAiBgF,EAAQD,sBACrCR,EAAOS,EAAQU,UAAUlvB,QACzB,IAAK,IAAI3D,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1C0xB,EAAK1xB,IAAMotB,CAEf,MAVEx0B,KAAKu0B,gBAAkBgF,EAAQD,qBAAqBvuB,QACpD+tB,EAAOS,EAAQU,UAAUlvB,QACzB/K,KAAKszD,OAAOxuD,OASd9E,KAAKszD,OAAOxuD,KAAKg0B,GACjB94B,KAAKmL,SACP,CAQAmW,KAAAA,GACE,MAAMmR,EAAMzyB,KAAKszD,OAAOlvD,OAClBwvD,EAAW,IAAIhpD,MAAM6nB,GAC3B,IAAK,IAAIrrB,EAAI,EAAGA,EAAIqrB,IAAOrrB,EACzBwsD,EAASxsD,GAAKpH,KAAKszD,OAAOlsD,GAAG2D,QAG/B,MAAM8oD,EAAe,IAAIR,EACvBrzD,KAAKu0B,gBAAgBxpB,QACrB/K,KAAK83B,OACL87B,GAIF,OAFAC,EAAar6B,gBAAgBx5B,MAEtB6zD,CACT,CAUAnuC,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,OAAIA,GAAqBwN,EAAAA,EAAAA,IAAyBtzB,KAAK+P,YAAa4V,EAAGC,GAC9DE,GAEL9lB,KAAKg4B,mBAAqBh4B,KAAKylB,gBACjCzlB,KAAK+3B,UAAY3yB,KAAKwX,MACpBk3C,EAAAA,EAAAA,GACE9zD,KAAKu0B,gBACL,EACAv0B,KAAKszD,OACLtzD,KAAKunB,OACL,IAGJvnB,KAAKg4B,kBAAoBh4B,KAAKylB,gBAEzBsuC,EAAAA,EAAAA,IACL/zD,KAAK45B,6BACL,EACA55B,KAAKszD,OACLtzD,KAAKunB,OACLvnB,KAAK+3B,WACL,EACApS,EACAC,EACAC,EACAC,GAEJ,CAQAC,UAAAA,CAAWJ,EAAGC,GACZ,OAAOwiC,EAAAA,EAAAA,IACLpoD,KAAK45B,6BACL,EACA55B,KAAKszD,OACLtzD,KAAKunB,OACL5B,EACAC,EAEJ,CAOAsP,OAAAA,GACE,OAAO8+B,EAAAA,EAAAA,IACLh0D,KAAK45B,6BACL,EACA55B,KAAKszD,OACLtzD,KAAKunB,OAET,CAgBA+Q,cAAAA,CAAewB,GACb,IAAIvF,EAcJ,YAbct0B,IAAV65B,GACFvF,EAAkBv0B,KAAK45B,6BAA6B7uB,SACpD22B,EAAAA,EAAAA,IACEnN,EACA,EACAv0B,KAAKszD,OACLtzD,KAAKunB,OACLuS,IAGFvF,EAAkBv0B,KAAKu0B,iBAGlB0/B,EAAAA,EAAAA,IACL1/B,EACA,EACAv0B,KAAKszD,OACLtzD,KAAKunB,OAET,CAKA2sC,QAAAA,GACE,OAAOl0D,KAAKszD,MACd,CAKAa,qBAAAA,GACE,GAAIn0D,KAAKuzD,6BAA+BvzD,KAAKylB,cAAe,CAC1D,MAAM2uC,GAAcC,EAAAA,EAAAA,GAClBr0D,KAAKu0B,gBACL,EACAv0B,KAAKszD,OACLtzD,KAAKunB,QAEPvnB,KAAKwzD,qBAAsBc,EAAAA,EAAAA,GACzBt0D,KAAK45B,6BACL,EACA55B,KAAKszD,OACLtzD,KAAKunB,OACL6sC,GAEFp0D,KAAKuzD,4BAA8BvzD,KAAKylB,aAC1C,CACA,OAAqCzlB,KAAKwzD,mBAC5C,CAQAe,iBAAAA,GACE,OAAO,IAAIlC,EAAWryD,KAAKm0D,wBAAwBppD,QAAS,MAC9D,CAKA6uB,0BAAAA,GACE,GAAI55B,KAAKk5B,mBAAqBl5B,KAAKylB,cAAe,CAChD,MAAM8O,EAAkBv0B,KAAKu0B,iBAE3BgN,EAAAA,EAAAA,IAAwBhN,EAAiB,EAAGv0B,KAAKszD,OAAQtzD,KAAKunB,QAE9DvnB,KAAKm5B,yBAA2B5E,GAEhCv0B,KAAKm5B,yBAA2B5E,EAAgBxpB,QAChD/K,KAAKm5B,yBAAyB/0B,QAASs9B,EAAAA,EAAAA,IACrC1hC,KAAKm5B,yBACL,EACAn5B,KAAKszD,OACLtzD,KAAKunB,SAGTvnB,KAAKk5B,kBAAoBl5B,KAAKylB,aAChC,CACA,OAAqCzlB,KAAKm5B,wBAC5C,CAQAX,6BAAAA,CAA8BnT,GAE5B,MAAMoT,EAA4B,GAE5BuK,EAAkB,GAWxB,OAVAvK,EAA0Br0B,QAAS2+B,EAAAA,EAAAA,IACjC/iC,KAAKu0B,gBACL,EACAv0B,KAAKszD,OACLtzD,KAAKunB,OACLniB,KAAKwX,KAAKyI,GACVoT,EACA,EACAuK,GAEK,IAAIqwB,EAAa56B,EAA2B,KAAMuK,EAC3D,CAQAwxB,UAAAA,CAAWxtD,GACT,GAAIA,EAAQ,GAAKhH,KAAKszD,OAAOlvD,QAAU4C,EACrC,OAAO,KAET,IAAIwtB,EACJ,GAAc,IAAVxtB,EACFwtB,EAAS,MACJ,CACL,MAAMigC,EAAWz0D,KAAKszD,OAAOtsD,EAAQ,GACrCwtB,EAASigC,EAASA,EAASrwD,OAAS,EACtC,CACA,MAAM00B,EAAO94B,KAAKszD,OAAOtsD,GAAO+D,QAC1B0pB,EAAMqE,EAAKA,EAAK10B,OAAS,GAC/B,GAAe,IAAXowB,EACF,IAAK,IAAIptB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1C0xB,EAAK1xB,IAAMotB,EAGf,OAAO,IAAIqE,EAAAA,GACT74B,KAAKu0B,gBAAgBxpB,MAAMypB,EAAQC,GACnCz0B,KAAK83B,OACLgB,EAEJ,CAOA47B,WAAAA,GACE,MAAM58B,EAAS93B,KAAK83B,OACdvD,EAAkBv0B,KAAKu0B,gBACvBiN,EAAQxhC,KAAKszD,OACbG,EAAW,GACjB,IAAIj/B,EAAS,EACb,IAAK,IAAIptB,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GAAG2D,QAChB0pB,EAAMqE,EAAKA,EAAK10B,OAAS,GAC/B,GAAe,IAAXowB,EACF,IAAK,IAAIjkB,EAAI,EAAGqhC,EAAK9Y,EAAK10B,OAAQmM,EAAIqhC,IAAMrhC,EAC1CuoB,EAAKvoB,IAAMikB,EAGf,MAAM+E,EAAU,IAAIV,EAAAA,GAClBtE,EAAgBxpB,MAAMypB,EAAQC,GAC9BqD,EACAgB,GAEF26B,EAAS3uD,KAAKy0B,GACd/E,EAASC,CACX,CACA,OAAOg/B,CACT,CAQA3sC,OAAAA,GACE,MAAO,cACT,CASAE,gBAAAA,CAAiBpZ,GACf,OAAO+mD,EAAAA,EAAAA,IACL30D,KAAK45B,6BACL,EACA55B,KAAKszD,OACLtzD,KAAKunB,OACL3Z,EAEJ,CASAqqB,cAAAA,CAAennB,EAAagnB,GAC1B93B,KAAK24B,UAAUb,EAAQhnB,EAAa,GAC/B9Q,KAAKu0B,kBACRv0B,KAAKu0B,gBAAkB,IAEzB,MAAMiN,GAAQozB,EAAAA,EAAAA,IACZ50D,KAAKu0B,gBACL,EACAzjB,EACA9Q,KAAKunB,OACLvnB,KAAKszD,QAEP,GAAqB,IAAjB9xB,EAAMp9B,OACRpE,KAAKu0B,gBAAgBnwB,OAAS,MACzB,CACL,MAAMywD,EAAWrzB,EAAMA,EAAMp9B,OAAS,GACtCpE,KAAKu0B,gBAAgBnwB,OACC,IAApBywD,EAASzwD,OAAe,EAAIywD,EAASA,EAASzwD,OAAS,EAC3D,CACApE,KAAKmL,SACP,EAGF,U,iCC3cA,MAAM2pD,UAA2BlwC,EAAAA,EAI/BjlB,WAAAA,CAAYo1D,GACVh1D,QAMAC,KAAKg1D,YAAcD,EAMnB/0D,KAAKi1D,kBAAoB,GAEzBj1D,KAAKk1D,yBACP,CAKAC,yBAAAA,GACEn1D,KAAKi1D,kBAAkB5wD,QAAQC,EAAAA,IAC/BtE,KAAKi1D,kBAAkB7wD,OAAS,CAClC,CAKA8wD,uBAAAA,GACE,MAAMH,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChDpH,KAAKi1D,kBAAkBnwD,MACrBjD,EAAAA,EAAAA,IAAOkzD,EAAW3tD,GAAI7E,EAAAA,EAAUqG,OAAQ5I,KAAKmL,QAASnL,MAG5D,CAQAshB,KAAAA,GACE,MAAM8zC,EAAqB,IAAIN,EAC7BO,EAAgBr1D,KAAKg1D,cAGvB,OADAI,EAAmB57B,gBAAgBx5B,MAC5Bo1D,CACT,CAUA1vC,cAAAA,CAAeC,EAAGC,EAAGC,EAAcC,GACjC,GAAIA,GAAqBwN,EAAAA,EAAAA,IAAyBtzB,KAAK+P,YAAa4V,EAAGC,GACrE,OAAOE,EAET,MAAMivC,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChD0e,EAAqBivC,EAAW3tD,GAAGse,eACjCC,EACAC,EACAC,EACAC,GAGJ,OAAOA,CACT,CAQAC,UAAAA,CAAWJ,EAAGC,GACZ,MAAMmvC,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChD,GAAI2tD,EAAW3tD,GAAG2e,WAAWJ,EAAGC,GAC9B,OAAO,EAGX,OAAO,CACT,CAQAS,aAAAA,CAAczY,IACZwT,EAAAA,EAAAA,IAAoBxT,GACpB,MAAMmnD,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,GAChDoU,EAAAA,EAAAA,IAAO5N,EAAQmnD,EAAW3tD,GAAG2I,aAE/B,OAAOnC,CACT,CAOA0nD,aAAAA,GACE,OAAOD,EAAgBr1D,KAAKg1D,YAC9B,CAKAO,kBAAAA,GACE,OAAOv1D,KAAKg1D,WACd,CAKAQ,2BAAAA,GAEE,IAAIC,EAAkB,GACtB,MAAMV,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAC5C2tD,EAAW3tD,GAAG0f,YAAc9mB,KAAK8mB,UACnC2uC,EAAkBA,EAAgBlpC,OAE9BwoC,EAAW3tD,GACXouD,+BAGJC,EAAgB3wD,KAAKiwD,EAAW3tD,IAGpC,OAAOquD,CACT,CAQAlwC,qBAAAA,CAAsBF,GAKpB,GAJIrlB,KAAKilB,6BAA+BjlB,KAAKylB,gBAC3CzlB,KAAKglB,yCAA2C,EAChDhlB,KAAKilB,2BAA6BjlB,KAAKylB,eAGvCJ,EAAmB,GACgC,IAAlDrlB,KAAKglB,0CACJK,EAAmBrlB,KAAKglB,yCAE1B,OAAOhlB,KAGT,MAAM01D,EAAuB,GACvBX,EAAa/0D,KAAKg1D,YACxB,IAAIW,GAAa,EACjB,IAAK,IAAIvuD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAAG,CACnD,MAAMmI,EAAWwlD,EAAW3tD,GACtBwuD,EACJrmD,EAASgW,sBAAsBF,GACjCqwC,EAAqB5wD,KAAK8wD,GACtBA,IAAuBrmD,IACzBomD,GAAa,EAEjB,CACA,GAAIA,EAAY,CAId,OAHqC,IAAIb,EACvCY,EAGJ,CAEA,OADA11D,KAAKglB,yCAA2CK,EACzCrlB,IACT,CAQA8mB,OAAAA,GACE,MAAO,oBACT,CASAE,gBAAAA,CAAiBpZ,GACf,MAAMmnD,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChD,GAAI2tD,EAAW3tD,GAAG4f,iBAAiBpZ,GACjC,OAAO,EAGX,OAAO,CACT,CAKAvG,OAAAA,GACE,OAAmC,IAA5BrH,KAAKg1D,YAAY5wD,MAC1B,CAUAmiB,MAAAA,CAAOC,EAAOC,GACZ,MAAMsuC,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChD2tD,EAAW3tD,GAAGmf,OAAOC,EAAOC,GAE9BzmB,KAAKmL,SACP,CAaAuX,KAAAA,CAAMgE,EAAIC,EAAIF,GACPA,IACHA,GAAS2O,EAAAA,EAAAA,IAAUp1B,KAAK+P,cAE1B,MAAMglD,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChD2tD,EAAW3tD,GAAGsb,MAAMgE,EAAIC,EAAIF,GAE9BzmB,KAAKmL,SACP,CAOA0qD,aAAAA,CAAcd,GACZ/0D,KAAK81D,mBAAmBT,EAAgBN,GAC1C,CAKAe,kBAAAA,CAAmBf,GACjB/0D,KAAKm1D,4BACLn1D,KAAKg1D,YAAcD,EACnB/0D,KAAKk1D,0BACLl1D,KAAKmL,SACP,CAYAkQ,cAAAA,CAAe0L,GACb,MAAMguC,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChD2tD,EAAW3tD,GAAGiU,eAAe0L,GAE/B/mB,KAAKmL,SACP,CAUA8b,SAAAA,CAAUxK,EAAQC,GAChB,MAAMq4C,EAAa/0D,KAAKg1D,YACxB,IAAK,IAAI5tD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChD2tD,EAAW3tD,GAAG6f,UAAUxK,EAAQC,GAElC1c,KAAKmL,SACP,CAMA3F,eAAAA,GACExF,KAAKm1D,4BACLp1D,MAAMyF,iBACR,EAOF,SAAS6vD,EAAgBN,GACvB,OAAOA,EAAWl1D,KAAK0P,GAAaA,EAAS+R,SAC/C,CAEA,U,cC/DA,QAzKA,MACE3hB,WAAAA,GAKEK,KAAK6qB,oBAAiB5qB,EAMtBD,KAAK+1D,8BAA2B91D,EAMhCD,KAAKg2D,aACHxP,EAAAA,EAOFxmD,KAAKi2D,oBAAsB,IAC7B,CASAC,cAAAA,CAAetlD,EAAQ3G,GACrB,GAAIA,EAAS,CACX,IAAI4gB,EAAiB5gB,EAAQ4gB,gBACzBzP,EAAAA,EAAAA,IAAcnR,EAAQ4gB,gBACtB7qB,KAAKwqB,eAAe5Z,GAEtB3G,EAAQ2D,QACRid,GAC8B,gBAA9BA,EAAezD,aAEfyD,GAAiBzP,EAAAA,EAAAA,IAAcyP,GAC/BA,EAAesrC,eAAelsD,EAAQ2D,SAExC3D,EAAU,CACR4gB,eAAgBA,EAChBN,kBAAmBtgB,EAAQsgB,kBAE/B,CACA,OAAOvqB,KAAKo2D,aAAansD,EAC3B,CAWAmsD,YAAAA,CAAansD,GACX,OAAOlG,OAAOoG,OACZ,CACE0gB,eAAgB7qB,KAAK6qB,eACrBN,kBAAmBvqB,KAAK+1D,yBACxBC,aAAch2D,KAAKg2D,cAErB/rD,EAEJ,CAMA6c,OAAAA,GACE,OAAO5Y,EAAAA,EAAAA,KACT,CAUAmoD,WAAAA,CAAYzlD,EAAQ3G,GAClB,OAAOiE,EAAAA,EAAAA,KACT,CAUAoc,YAAAA,CAAa1Z,EAAQ3G,GACnB,OAAOiE,EAAAA,EAAAA,KACT,CAUAooD,YAAAA,CAAa1lD,EAAQ3G,GACnB,OAAOiE,EAAAA,EAAAA,KACT,CASAsc,cAAAA,CAAe5Z,GACb,OAAO1C,EAAAA,EAAAA,KACT,CAUAqoD,YAAAA,CAAajnD,EAASrF,GACpB,OAAOiE,EAAAA,EAAAA,KACT,CAUAsoD,aAAAA,CAAcx8C,EAAU/P,GACtB,OAAOiE,EAAAA,EAAAA,KACT,CAUAuoD,aAAAA,CAAclnD,EAAUtF,GACtB,OAAOiE,EAAAA,EAAAA,KACT,GAYK,SAASwoD,EAA6BnnD,EAAUonD,EAAO1sD,GAC5D,MAAMsgB,EAAoBtgB,GACtBmR,EAAAA,EAAAA,IAAcnR,EAAQsgB,mBACtB,KACEM,EAAiB5gB,GAAUmR,EAAAA,EAAAA,IAAcnR,EAAQ4gB,gBAAkB,KAEzE,IAAIjD,EAAcrY,EAClB,GACEgb,GACAM,KACC+rC,EAAAA,EAAAA,IAAqBrsC,EAAmBM,GACzC,CACI8rC,IACF/uC,EAAgCrY,EAAS+R,SAE3C,MAAMu1C,EAAiBF,EAAQpsC,EAAoBM,EAC7CisC,EAAeH,EAAQ9rC,EAAiBN,EACZ,gBAA9BssC,EAAezvC,WACjBQ,EAAYtC,UAAUuxC,EAAgBC,GAEtClvC,EAAYvM,gBAAe0M,EAAAA,EAAAA,IAAa8uC,EAAgBC,GAE5D,CACA,GACEH,GACA1sD,QACmDhK,IAAtBgK,EAAS8sD,SACtC,CACA,MAAMC,EAAQ5xD,KAAKyjC,IAAI,GAAiC5+B,EAAS8sD,UAM3DzxC,EAAY,SAAUxU,GAC1B,IAAK,IAAI1J,EAAI,EAAGwE,EAAKkF,EAAY1M,OAAQgD,EAAIwE,IAAMxE,EACjD0J,EAAY1J,GAAKhC,KAAKq9B,MAAM3xB,EAAY1J,GAAK4vD,GAASA,EAExD,OAAOlmD,CACT,EACI8W,IAAgBrY,IAClBqY,EAAgCrY,EAAS+R,SAE3CsG,EAAYvM,eAAeiK,EAC7B,CACA,OAAOsC,CACT,CAuBA,MAAMqvC,EAAsB,CAC1B38B,MAAOA,EAAAA,EACPg3B,WAAYA,EACZz4B,QAASA,EAAAA,GACTw5B,WAAYA,EACZI,gBAAiBA,EACjBY,aAAcA,GAwBT,SAAS6D,EAAoB7lC,EAAQpnB,GAAS,IAAAktD,EACnD,MAAM5nD,EAAW8hB,EAAO9hB,SACxB,IAAKA,EACH,MAAO,GAET,GAAI3E,MAAMC,QAAQ0E,GAChB,OAAOA,EACJ1P,KAAK0P,GAAa2nD,GAAmBE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG/lC,GAAM,IAAE9hB,gBAClD8nD,OAGL,MAAMC,EACc,iBAAlB/nD,EAAS3P,KAA0B,UAAY2P,EAAS3P,KAC1D,GAAqB,uBAAjB03D,GAA0D,WAAjBA,EAC3C,MAAM,IAAI/hC,MAAM,8BAAgC+hC,GAGlD,MAAM/vC,EAAShY,EAASuoB,OAAO1zB,OAC/B,OAAOsyD,EACL,IAAI/nC,EAAAA,GACF2oC,EACiB,YAAjBA,EA1CN,SAA+B/iC,EAAiBuE,EAAMvR,GACpD,OAAI3c,MAAMC,QAAQiuB,EAAK,MAEhByI,EAAAA,EAAAA,IAAwBhN,EAAiB,EAAGuE,EAAMvR,KACrDgN,EAAkBA,EAAgBxpB,SAClC22B,EAAAA,EAAAA,IAAuBnN,EAAiB,EAAGuE,EAAMvR,IAE5CgN,KAEJoG,EAAAA,EAAAA,IAAuBpG,EAAiB,EAAGuE,EAAMvR,KACpDgN,EAAkBA,EAAgBxpB,SAClCgvB,EAAAA,EAAAA,IAAkBxF,EAAiB,EAAGuE,EAAMvR,IAEvCgN,EACT,CA6BUgjC,CAAsBhoD,EAASglB,gBAAiBhlB,EAASupB,KAAMvR,GAC/DhY,EAASglB,gBACA,QADe4iC,EAC5B5nD,EAASupB,YAAI,IAAAq+B,OAAA,EAAbA,EAAeE,OACf9vC,EACA8J,EAAO41B,YAAc,CAAC,EACtB51B,EAAO7tB,IACPg0D,6BACF,EACAvtD,EAEJ,CAOO,SAASwtD,EAAepmC,EAAQpnB,GACrC,IAAKonB,EACH,OAAO,KAET,GAAIzmB,MAAMC,QAAQwmB,GAAS,CACzB,MAAM0jC,EAAa1jC,EAAOxxB,KAAK0P,GAC7BkoD,EAAeloD,EAAUtF,KAE3B,OAAO,IAAI6qD,EAAmBC,EAChC,CAEA,OAAO2B,EACL,IAAI9xC,EAFWqyC,EAAoB5lC,EAAOzxB,OAE7ByxB,EAAOkD,gBAAiBlD,EAAOyG,QAAU,KAAMzG,EAAOyH,OACnE,EACA7uB,EAEJ,CCnPA,SAASytD,EAAU9mD,GACjB,GAAsB,kBAAXA,EAAqB,CAC9B,MAAMygB,EAASsmC,KAAKC,MAAMhnD,GAC1B,OAAOygB,GAA0C,IACnD,CACA,OAAe,OAAXzgB,EACKA,EAEF,IACT,CAEA,QA3MA,cAA0BinD,EACxBl4D,WAAAA,GACEI,OACF,CAMA+mB,OAAAA,GACE,MAAO,MACT,CAYAuvC,WAAAA,CAAYzlD,EAAQ3G,GAClB,OAAOjK,KAAK83D,sBACVJ,EAAU9mD,GACV5Q,KAAKk2D,eAAetlD,EAAQ3G,GAEhC,CAYAqgB,YAAAA,CAAa1Z,EAAQ3G,GACnB,OAAOjK,KAAK+3D,uBACVL,EAAU9mD,GACV5Q,KAAKk2D,eAAetlD,EAAQ3G,GAEhC,CASA6tD,qBAAAA,CAAsBzmC,EAAQpnB,GAC5B,OAAOiE,EAAAA,EAAAA,KACT,CASA6pD,sBAAAA,CAAuB1mC,EAAQpnB,GAC7B,OAAOiE,EAAAA,EAAAA,KACT,CAWAooD,YAAAA,CAAa1lD,EAAQ3G,GACnB,OAAOjK,KAAKg4D,uBACVN,EAAU9mD,GACV5Q,KAAKk2D,eAAetlD,EAAQ3G,GAEhC,CASA+tD,sBAAAA,CAAuB3mC,EAAQpnB,GAC7B,OAAOiE,EAAAA,EAAAA,KACT,CAUAsc,cAAAA,CAAe5Z,GACb,OAAO5Q,KAAKi4D,yBAAyBP,EAAU9mD,GACjD,CAQAqnD,wBAAAA,CAAyB5mC,GACvB,OAAOnjB,EAAAA,EAAAA,KACT,CAWAqoD,YAAAA,CAAajnD,EAASrF,GACpB,OAAO0tD,KAAKO,UAAUl4D,KAAKm4D,mBAAmB7oD,EAASrF,GACzD,CAQAkuD,kBAAAA,CAAmB7oD,EAASrF,GAC1B,OAAOiE,EAAAA,EAAAA,KACT,CAWAsoD,aAAAA,CAAcx8C,EAAU/P,GACtB,OAAO0tD,KAAKO,UAAUl4D,KAAKo4D,oBAAoBp+C,EAAU/P,GAC3D,CAQAmuD,mBAAAA,CAAoBp+C,EAAU/P,GAC5B,OAAOiE,EAAAA,EAAAA,KACT,CAWAuoD,aAAAA,CAAclnD,EAAUtF,GACtB,OAAO0tD,KAAKO,UAAUl4D,KAAKq4D,oBAAoB9oD,EAAUtF,GAC3D,CAQAouD,mBAAAA,CAAoB9oD,EAAUtF,GAC5B,OAAOiE,EAAAA,EAAAA,KACT,GC6GF,SAASoqD,EAAqBjnC,EAAQpnB,GACpC,IAAKonB,EACH,OAAO,KAIT,IAAI9hB,EACJ,OAAQ8hB,EAAa,MACnB,IAAK,QACH9hB,EA4EN,SAA2B8hB,GACzB,MAAMkD,EAAkBlD,EAAoB,YAC5C,MAAO,CACLzxB,KAAM,QACN20B,kBACAuD,QAAQygC,EAAAA,EAAAA,IAAmBhkC,EAAgBnwB,QAE/C,CAnFiBo0D,CAA+CnnC,GAC1D,MAEF,IAAK,aACH9hB,EAqFN,SAAgC8hB,GAAQ,IAAAonC,EACtC,MAAM3nD,EAAcugB,EAAoB,YAClCkD,EAAkBzjB,EAAYumD,OACpC,MAAO,CACLz3D,KAAM,aACN20B,kBACAuE,KAAM,CAACvE,EAAgBnwB,QACvB0zB,QAAQygC,EAAAA,EAAAA,KAAiC,QAAdE,EAAA3nD,EAAY,UAAE,IAAA2nD,OAAA,EAAdA,EAAgBr0D,SAAU,GAEzD,CA9FiBs0D,CACyBrnC,GAEpC,MAEF,IAAK,UACH9hB,EAkJN,SAA6B8hB,GAAQ,IAAAsnC,EACnC,MAAM7nD,EAAcugB,EAAoB,YAClCkD,EAAkB,GAClBhN,EAAuB,QAAjBoxC,EAAG7nD,EAAY,UAAE,IAAA6nD,GAAK,QAALA,EAAdA,EAAiB,UAAE,IAAAA,OAAA,EAAnBA,EAAqBv0D,OAC9B00B,GAAOiC,EAAAA,EAAAA,IAAwBxG,EAAiB,EAAGzjB,EAAayW,GACtE,MAAO,CACL3nB,KAAM,UACN20B,kBACAuE,OACAhB,QAAQygC,EAAAA,EAAAA,IAAmBhxC,GAE/B,CA7JiBqxC,CAAmDvnC,GAC9D,MAEF,IAAK,aACH9hB,EA2GN,SAAgC8hB,GAAQ,IAAAwnC,EACtC,MAAM/nD,EAAcugB,EAAoB,YACxC,MAAO,CACLzxB,KAAM,aACN20B,gBAAiBzjB,EAAYumD,OAC7Bv/B,QAAQygC,EAAAA,EAAAA,KAAiC,QAAdM,EAAA/nD,EAAY,UAAE,IAAA+nD,OAAA,EAAdA,EAAgBz0D,SAAU,GAEzD,CAlHiB00D,CACyBznC,GAEpC,MAEF,IAAK,kBACH9hB,EAoFN,SAAqC8hB,GAAQ,IAAA0nC,EAC3C,MAAMjoD,EAAcugB,EAAoB,YAClC9J,GAAuB,QAAdwxC,EAAAjoD,EAAY,UAAE,IAAAioD,GAAK,QAALA,EAAdA,EAAiB,UAAE,IAAAA,OAAA,EAAnBA,EAAqB30D,SAAU,EACxCmwB,EAAkB,GAClBuE,GAAOiC,EAAAA,EAAAA,IAAwBxG,EAAiB,EAAGzjB,EAAayW,GACtE,MAAO,CACL3nB,KAAM,kBACN20B,kBACAuE,OACAhB,QAAQygC,EAAAA,EAAAA,IAAmBhxC,GAE/B,CA/FiByxC,CAC8B3nC,GAEzC,MAEF,IAAK,eACH9hB,EA4GN,SAAkC8hB,GAAQ,IAAA4nC,EACxC,MAAMnoD,EAAcugB,EAAoB,YAClCkD,EAAkB,GAClBhN,GAAuB,QAAd0xC,EAAAnoD,EAAY,UAAE,IAAAmoD,GAAK,QAALA,EAAdA,EAAiB,UAAE,IAAAA,OAAA,EAAnBA,EAAsB,GAAG70D,SAAU,EAC5Co9B,GAAQozB,EAAAA,EAAAA,IACZrgC,EACA,EACAzjB,EACAyW,GAEF,MAAO,CACL3nB,KAAM,eACN20B,kBACAuE,KAAM0I,EACN1J,QAAQygC,EAAAA,EAAAA,IAAmBhxC,GAE/B,CA5HiB2xC,CAC2B7nC,GAEtC,MAEF,IAAK,qBACH9hB,EA2BN,SAAwC8hB,EAAQpnB,GAC9C,MAAM8qD,EAAa1jC,EAAmB,WAAExxB,KAKtC,SAAU0P,GACR,OAAO+oD,EAAqB/oD,EAAUtF,EACxC,IAEF,OAAO8qD,CACT,CAtCiBoE,CACiC9nC,GAE5C,MAEF,QACE,MAAM,IAAIkE,MAAM,6BAA+BlE,EAAa,MAGhE,OAAO9hB,CACT,CAoIA,SAASknD,EAAclnD,EAAUtF,GAG/B,MAAMrK,GAFN2P,EAAWmnD,EAA6BnnD,GAAU,EAAMtF,IAElC6c,UAGtB,IAAIsyC,EACJ,OAAQx5D,GACN,IAAK,QACHw5D,EA0IN,SAA4B7pD,GAC1B,MAAO,CACL3P,KAAM,QACNkR,YAAavB,EAAS+oB,iBAE1B,CA/IgB+gC,CAC2C9pD,GAGrD,MAEF,IAAK,aACH6pD,EA+EN,SAAiC7pD,GAC/B,MAAO,CACL3P,KAAM,aACNkR,YAAavB,EAAS+oB,iBAE1B,CApFgBghC,CACgD/pD,GAG1D,MAEF,IAAK,UACH6pD,EAwIN,SAA8B7pD,EAAUtF,GACtC,IAAI6vB,EACA7vB,IACF6vB,EAAQ7vB,EAAQsvD,aAElB,MAAO,CACL35D,KAAM,UACNkR,YAAavB,EAAS+oB,eAAewB,GAEzC,CAjJgB0/B,CAC6CjqD,EACrDtF,GAEF,MAEF,IAAK,aACHmvD,EAyFN,SAAiC7pD,GAC/B,MAAO,CACL3P,KAAM,aACNkR,YAAavB,EAAS+oB,iBAE1B,CA9FgBmhC,CACgDlqD,GAG1D,MAEF,IAAK,kBACH6pD,EAsEN,SAAsC7pD,GACpC,MAAO,CACL3P,KAAM,kBACNkR,YAAavB,EAAS+oB,iBAE1B,CA3EgBohC,CACqDnqD,GAG/D,MAEF,IAAK,eACH6pD,EAuFN,SAAmC7pD,EAAUtF,GAC3C,IAAI6vB,EACA7vB,IACF6vB,EAAQ7vB,EAAQsvD,aAElB,MAAO,CACL35D,KAAM,eACNkR,YAAavB,EAAS+oB,eAAewB,GAEzC,CAhGgB6/B,CACkDpqD,EAC1DtF,GAEF,MAEF,IAAK,qBACHmvD,EA2BN,SAAyC7pD,EAAUtF,GACjDA,EAAUlG,OAAOoG,OAAO,CAAC,EAAGF,UACrBA,EAAQsgB,kBACf,MAAMwqC,EAAaxlD,EAASgmD,qBAAqB11D,KAAI,SAAU0P,GAC7D,OAAOknD,EAAclnD,EAAUtF,EACjC,IACA,MAAO,CACLrK,KAAM,qBACNm1D,WAAYA,EAEhB,CArCgB6E,CAENrqD,EAEFtF,GAEF,MAEF,IAAK,SACHmvD,EAAU,CACRx5D,KAAM,qBACNm1D,WAAY,IAEd,MAEF,QACE,MAAM,IAAIx/B,MAAM,8BAAgC31B,GAGpD,OAAOw5D,CACT,CAmGA,QA3lBA,cAAsBS,EAIpBl6D,WAAAA,CAAYsK,GACVA,EAAUA,GAAoB,CAAC,EAE/BlK,QAKAC,KAAK6qB,gBAAiBzP,EAAAA,EAAAA,IACpBnR,EAAQ4gB,eAAiB5gB,EAAQ4gB,eAAiB,aAGhD5gB,EAAQsgB,oBAIVvqB,KAAK+1D,0BAA2B36C,EAAAA,EAAAA,IAAcnR,EAAQsgB,oBAGpDtgB,EAAQ+rD,eACVh2D,KAAKg2D,aAAe/rD,EAAQ+rD,cAQ9Bh2D,KAAK2mD,cAAgB18C,EAAQ6vD,aAO7B95D,KAAK+5D,qBAAuB9vD,EAAQ+vD,oBAEpCh6D,KAAKi2D,oBAAsB,CACzB,uBACA,2BAEJ,CASA6B,qBAAAA,CAAsBzmC,EAAQpnB,GAI5B,IAAIgwD,EAAiB,KAEnBA,EADqB,YAAnB5oC,EAAa,KACiCA,EAE/B,CACf,KAAQ,UACR,SAAY,EACZ,WAAc,MAIlB,MAAM9hB,EAAW+oD,EAAqB2B,EAAyB,SAAGhwD,GAClE,GAAIjK,KAAKg2D,eAAiBrnC,EAAAA,GACxB,OACEuoC,EACE,CACE3nD,WACA/L,GAAIy2D,EAAmB,GACvBhT,WAAYgT,EAA2B,YAEzChwD,GAKN,MAAMqF,EAAU,IAAIk3C,EAAAA,EAepB,OAdIxmD,KAAK2mD,cACPr3C,EAAQ83C,gBAAgBpnD,KAAK2mD,eACpB3mD,KAAK+5D,sBAAwBE,EAA8B,eACpE3qD,EAAQ83C,gBAAgB6S,EAA8B,eAExD3qD,EAAQ03C,YAAYyQ,EAAeloD,EAAUtF,IAEzC,OAAQgwD,GACV3qD,EAAQs4C,MAAMqS,EAAmB,IAG/BA,EAA2B,YAC7B3qD,EAAQiJ,cAAc0hD,EAA2B,YAAG,GAEA3qD,CACxD,CASAyoD,sBAAAA,CAAuB1mC,EAAQpnB,GAE7B,IAAI+P,EAAW,KACf,GAA8B,sBAFsBqX,EAE5B,KAA2B,CAIjDrX,EAAW,GACX,MAAMkgD,EAHJ7oC,EAGyD,SAC3D,IAAK,IAAIjqB,EAAI,EAAGwE,EAAKsuD,EAAgB91D,OAAQgD,EAAIwE,IAAMxE,EAAG,CACxD,MAAM+yD,EAAgBn6D,KAAK83D,sBACzBoC,EAAgB9yD,GAChB6C,GAEGkwD,GAGLngD,EAASlV,KAAKq1D,EAChB,CACF,MACEngD,EAAW,CAACha,KAAK83D,sBAAsBzmC,EAAQpnB,IAEjD,OAA0C+P,EAASq9C,MACrD,CASAW,sBAAAA,CAAuB3mC,EAAQpnB,GAC7B,OAuKJ,SAAsBonB,EAAQpnB,GAC5B,MAAMmwD,EAAiB9B,EAAqBjnC,EAAQpnB,GACpD,OAAOwtD,EAAe2C,EAAgBnwD,EACxC,CA1KWqsD,CAAajlC,EAAQpnB,EAC9B,CAQAguD,wBAAAA,CAAyB5mC,GACvB,MAAMgpC,EAAMhpC,EAAY,IACxB,IAAI5hB,EACJ,GAAI4qD,EACF,GAAmB,QAAfA,EAAU,KACZ5qD,GAAa2L,EAAAA,EAAAA,IAAci/C,EAAgB,WAAQ,UAC9C,IAAoB,SAAhBA,EAAU,KAGnB,MAAM,IAAI9kC,MAAM,oBAFhB9lB,GAAa2L,EAAAA,EAAAA,IAAc,QAAUi/C,EAAgB,WAAQ,KAG/D,MAEA5qD,EAAazP,KAAK6qB,eAEpB,OAA+Dpb,CACjE,CAWA0oD,kBAAAA,CAAmB7oD,EAASrF,GAC1BA,EAAUjK,KAAKo2D,aAAansD,GAG5B,MAAMonB,EAAS,CACb,KAAQ,UACR9hB,SAAU,KACV03C,WAAY,MAGRzjD,EAAK8L,EAAQuJ,QAKnB,QAJW5Y,IAAPuD,IACF6tB,EAAO7tB,GAAKA,IAGT8L,EAAQ43C,gBACX,OAAO71B,EAGT,MAAM41B,EAAa33C,EAAQ63C,gBACrB53C,EAAWD,EAAQmf,cAWzB,OAVIlf,IACF8hB,EAAO9hB,SAAWknD,EAAclnD,EAAUtF,UAEnCg9C,EAAW33C,EAAQ+3C,qBAGvBhgD,EAAAA,EAAAA,GAAQ4/C,KACX51B,EAAO41B,WAAaA,GAGf51B,CACT,CAWA+mC,mBAAAA,CAAoBp+C,EAAU/P,GAC5BA,EAAUjK,KAAKo2D,aAAansD,GAC5B,MAAMqwD,EAAU,GAChB,IAAK,IAAIlzD,EAAI,EAAGwE,EAAKoO,EAAS5V,OAAQgD,EAAIwE,IAAMxE,EAC9CkzD,EAAQx1D,KAAK9E,KAAKm4D,mBAAmBn+C,EAAS5S,GAAI6C,IAEpD,MAAO,CACLrK,KAAM,oBACNoa,SAAUsgD,EAEd,CAWAjC,mBAAAA,CAAoB9oD,EAAUtF,GAC5B,OAAOwsD,EAAclnD,EAAUvP,KAAKo2D,aAAansD,GACnD,E,4ECjSK,SAASqmC,EAAQ5hC,GACtB,QAAiBzO,IAAbyO,EACF,OAAO,CAGX,CAMO,SAAS6rD,EAAK7rD,GACnB,QAAiBzO,IAAbyO,EACF,OAAOA,CAGX,CAMO,SAAS8rD,EAAcxyD,GAC5B,MAAM23C,EAAS,EAAIv6C,KAAKuyB,GAAM3vB,EAC9B,OAAO,SAMK0G,EAAU+rD,GAClB,OAAIA,EACK/rD,OAGQzO,IAAbyO,EACFA,EAAWtJ,KAAKmyB,MAAM7oB,EAAWixC,EAAQ,IAAOA,OADlD,CAKD,CAEL,CAMO,SAAS+a,EAAiB7zC,GAC/B,MAAM8zC,OAAkB16D,IAAd4mB,GAA0BinB,EAAAA,EAAAA,IAAU,GAAKjnB,EACnD,OAAO,SAMKnY,EAAU+rD,GAClB,OAAIA,QAAyBx6D,IAAbyO,EACPA,EAGLtJ,KAAKC,IAAIqJ,IAAaisD,EACjB,EAEFjsD,CACR,CAEL,C,mEClCO,SAAS7M,EAAO+B,EAAQhE,EAAMykB,EAAUpV,EAAS3E,GACtD,GAAIA,EAAM,CACR,MAAMswD,EAAmBv2C,EAMzBA,EAAW,SAAU9gB,GAEnB,OADAK,EAAO6B,oBAAoB7F,EAAMykB,GAC1Bu2C,EAAiBprD,KAAY,OAAPP,QAAO,IAAPA,EAAAA,EAAWjP,KAAMuD,EAChD,CACF,MAAW0L,GAAWA,IAAYrL,IAChCygB,EAAWA,EAAShiB,KAAK4M,IAE3B,MAAM4rD,EAAY,CAChBj3D,OAAQA,EACRhE,KAAMA,EACNykB,SAAUA,GAGZ,OADAzgB,EAAOtB,iBAAiB1C,EAAMykB,GACvBw2C,CACT,CAsBO,SAASloC,EAAW/uB,EAAQhE,EAAMykB,EAAUpV,GACjD,OAAOpN,EAAO+B,EAAQhE,EAAMykB,EAAUpV,GAAS,EACjD,CAWO,SAAS3K,EAAciD,GACxBA,GAAOA,EAAI3D,SACb2D,EAAI3D,OAAO6B,oBAAoB8B,EAAI3H,KAAM2H,EAAI8c,WAC7Cle,EAAAA,EAAAA,GAAMoB,GAEV,C,iBCjGO,SAASygD,EAAkBzzB,EAAiBC,EAAQ/zB,EAAY8mB,GACrE,IAAK,IAAIngB,EAAI,EAAGwE,EAAKnL,EAAW2D,OAAQgD,EAAIwE,IAAMxE,EAChDmtB,EAAgBC,KAAY/zB,EAAW2G,GAEzC,OAAOotB,CACT,CASO,SAASoE,EACdrE,EACAC,EACA1jB,EACAyW,GAEA,IAAK,IAAIngB,EAAI,EAAGwE,EAAKkF,EAAY1M,OAAQgD,EAAIwE,IAAMxE,EAAG,CACpD,MAAM3G,EAAaqQ,EAAY1J,GAC/B,IAAK,IAAImJ,EAAI,EAAGA,EAAIgX,IAAUhX,EAC5BgkB,EAAgBC,KAAY/zB,EAAW8P,EAE3C,CACA,OAAOikB,CACT,CAUO,SAASuG,EACdxG,EACAC,EACAsmC,EACAvzC,EACAuR,GAEAA,EAAOA,GAAc,GACrB,IAAI1xB,EAAI,EACR,IAAK,IAAImJ,EAAI,EAAGqhC,EAAKkpB,EAAa12D,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CACrD,MAAMkkB,EAAMmE,EACVrE,EACAC,EACAsmC,EAAavqD,GACbgX,GAEFuR,EAAK1xB,KAAOqtB,EACZD,EAASC,CACX,CAEA,OADAqE,EAAK10B,OAASgD,EACP0xB,CACT,CAUO,SAAS87B,EACdrgC,EACAC,EACAumC,EACAxzC,EACAia,GAEAA,EAAQA,GAAgB,GACxB,IAAIp6B,EAAI,EACR,IAAK,IAAImJ,EAAI,EAAGqhC,EAAKmpB,EAAc32D,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CACtD,MAAMuoB,EAAOiC,EACXxG,EACAC,EACAumC,EAAcxqD,GACdgX,EACAia,EAAMp6B,IAEY,IAAhB0xB,EAAK10B,SACP00B,EAAK,GAAKtE,GAEZgN,EAAMp6B,KAAO0xB,EACbtE,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CAEA,OADAo9B,EAAMp9B,OAASgD,EACRo6B,CACT,C,0FCjGA,SACEw5B,QAAS,UACTC,QAAS,UACTnxB,OAAQ,SACRoxB,QAAS,SACTC,eAAgB,gBAChBC,eAAgB,gBAChBC,SAAU,UACVC,SAAU,UACVziB,OAAQ,SACRY,IAAK,M,kCCTP,SAME7wC,OAAQ,SAORO,MAAO,QAEPoyD,KAAM,OACNC,MAAO,QACPz8C,YAAa,cACb/b,MAAO,QACPG,SAAU,WACVs4D,UAAW,YACXC,SAAU,WACVh2D,KAAM,OACNi2D,MAAO,QACPz+C,QAAS,UACTmC,SAAU,WACVu8C,KAAM,OACNC,OAAQ,SACRr5D,UAAW,YACXya,MAAO,Q,kHCtBT,IAAI6+C,EAAqB,KAEzB,MAAMxN,UAAkBl8B,EAAAA,EAQtBzyB,WAAAA,CAAY01C,EAAO3sB,EAAKC,EAAa6sB,EAAY5sB,GAC/C7oB,QAMAC,KAAK+7D,mBAAqB,KAM1B/7D,KAAKg8D,OAAS3mB,EAMdr1C,KAAKi8D,aAAetzC,EAMpB3oB,KAAKk8D,QAAU,CAAC,EAMhBl8D,KAAK2gC,OAAS/X,EAMd5oB,KAAK0tD,iBAA6BztD,IAAfu1C,EAA2BvsB,EAAAA,EAAWvf,KAAO8rC,EAMhEx1C,KAAKwtD,MACHnY,GAASA,EAAM7iC,OAAS6iC,EAAM5iC,OAAS,CAAC4iC,EAAM7iC,MAAO6iC,EAAM5iC,QAAU,KAMvEzS,KAAKm8D,KAAOzzC,EAKZ1oB,KAAKo8D,SAMLp8D,KAAKq8D,OAAS,IAChB,CAKAC,gBAAAA,GACEt8D,KAAKg8D,OAAS,IAAIj4B,MACQ,OAAtB/jC,KAAKi8D,eACPj8D,KAAKg8D,OAAOrzC,YAAc3oB,KAAKi8D,aAEnC,CAMAM,UAAAA,GACE,QAAsBt8D,IAAlBD,KAAKo8D,UAA0Bp8D,KAAK0tD,cAAgBzkC,EAAAA,EAAW/f,OAAQ,CACpE4yD,IACHA,GAAqBn0B,EAAAA,EAAAA,GAAsB,EAAG,OAAG1nC,EAAW,CAC1D2nC,oBAAoB,KAGxBk0B,EAAmB1lB,UAAUp2C,KAAKg8D,OAAQ,EAAG,GAC7C,IACEF,EAAmB1zB,aAAa,EAAG,EAAG,EAAG,GACzCpoC,KAAKo8D,UAAW,CAClB,CAAE,MAAA3xC,GACAqxC,EAAqB,KACrB97D,KAAKo8D,UAAW,CAClB,CACF,CACA,OAAyB,IAAlBp8D,KAAKo8D,QACd,CAKAI,oBAAAA,GACEx8D,KAAKiD,cAAcV,EAAAA,EAAUqG,OAC/B,CAKA6zD,iBAAAA,GACEz8D,KAAK0tD,YAAczkC,EAAAA,EAAW9f,MAC9BnJ,KAAKw8D,sBACP,CAKAE,gBAAAA,GACE18D,KAAK0tD,YAAczkC,EAAAA,EAAW/f,OAC9BlJ,KAAKwtD,MAAQ,CAACxtD,KAAKg8D,OAAOxpD,MAAOxS,KAAKg8D,OAAOvpD,QAC7CzS,KAAKw8D,sBACP,CAMA/4C,QAAAA,CAAS7N,GAKP,OAJK5V,KAAKg8D,QACRh8D,KAAKs8D,mBAEPt8D,KAAK28D,cAAc/mD,GACZ5V,KAAKk8D,QAAQtmD,GAAc5V,KAAKk8D,QAAQtmD,GAAc5V,KAAKg8D,MACpE,CAMAr4C,aAAAA,CAAc/N,GAEZ,OADA5V,KAAK28D,cAAc/mD,GACZ5V,KAAKk8D,QAAQtmD,GAAcA,EAAa,CACjD,CAKAgO,aAAAA,GACE,OAAO5jB,KAAK0tD,WACd,CAKAhqC,oBAAAA,GAIE,GAHK1jB,KAAKg8D,QACRh8D,KAAKs8D,oBAEFt8D,KAAK+7D,mBACR,GAAI/7D,KAAKu8D,aAAc,CACrB,MAAM/pD,EAAQxS,KAAKwtD,MAAM,GACnB/6C,EAASzS,KAAKwtD,MAAM,GACpB9lB,GAAUC,EAAAA,EAAAA,GAAsBn1B,EAAOC,GAC7Ci1B,EAAQQ,SAAS,EAAG,EAAG11B,EAAOC,GAC9BzS,KAAK+7D,mBAAqBr0B,EAAQiP,MACpC,MACE32C,KAAK+7D,mBAAqB/7D,KAAKg8D,OAGnC,OAAOh8D,KAAK+7D,kBACd,CAMAthD,OAAAA,GACE,OAAOza,KAAKwtD,KACd,CAKAoP,MAAAA,GACE,OAAO58D,KAAKm8D,IACd,CAKAxyD,IAAAA,GACE,GAAI3J,KAAK0tD,cAAgBzkC,EAAAA,EAAWvf,KAApC,CAGK1J,KAAKg8D,QACRh8D,KAAKs8D,mBAGPt8D,KAAK0tD,YAAczkC,EAAAA,EAAWC,QAC9B,SACoBjpB,IAAdD,KAAKm8D,OAC0Bn8D,KAAKg8D,OAAQtzC,IAAM1oB,KAAKm8D,KAE7D,CAAE,MAAAU,GACA78D,KAAKy8D,mBACP,CACIz8D,KAAKg8D,kBAAkBc,mBACzBC,EAAAA,EAAAA,IAAe/8D,KAAKg8D,OAAQh8D,KAAKm8D,MAC9B3jD,MAAM68B,IACLr1C,KAAKg8D,OAAS3mB,EACdr1C,KAAK08D,sBAENM,MAAMh9D,KAAKy8D,kBAAkBp6D,KAAKrC,MAnBvC,CAqBF,CAMA28D,aAAAA,CAAc/mD,GACZ,IACG5V,KAAK2gC,QACN3gC,KAAKk8D,QAAQtmD,IACb5V,KAAK0tD,cAAgBzkC,EAAAA,EAAW/f,OAEhC,OAGF,MAAMmsC,EAAQr1C,KAAKg8D,OACbiB,GAAMt1B,EAAAA,EAAAA,GACVviC,KAAKgpD,KAAK/Y,EAAM7iC,MAAQoD,GACxBxQ,KAAKgpD,KAAK/Y,EAAM5iC,OAASmD,IAErB+gC,EAASsmB,EAAItmB,OAEnBsmB,EAAIv6C,MAAM9M,EAAYA,GACtBqnD,EAAI7mB,UAAUf,EAAO,EAAG,GAExB4nB,EAAIC,yBAA2B,WAC/BD,EAAIn1B,WAAYQ,EAAAA,EAAAA,IAAStoC,KAAK2gC,QAC9Bs8B,EAAI/0B,SAAS,EAAG,EAAGyO,EAAOnkC,MAAQoD,EAAY+gC,EAAOlkC,OAASmD,GAE9DqnD,EAAIC,yBAA2B,iBAC/BD,EAAI7mB,UAAUf,EAAO,EAAG,GAExBr1C,KAAKk8D,QAAQtmD,GAAc+gC,CAC7B,CAKAh7B,KAAAA,GAsBE,OArBK3b,KAAKq8D,SACRr8D,KAAKq8D,OAAS,IAAI93C,SAASC,IACzB,GACExkB,KAAK0tD,cAAgBzkC,EAAAA,EAAW/f,QAChClJ,KAAK0tD,cAAgBzkC,EAAAA,EAAW9f,MAEhCqb,QACK,CACL,MAAM24C,EAAWA,KAEbn9D,KAAK0tD,cAAgBzkC,EAAAA,EAAW/f,QAChClJ,KAAK0tD,cAAgBzkC,EAAAA,EAAW9f,QAEhCnJ,KAAKyF,oBAAoBlD,EAAAA,EAAUqG,OAAQu0D,GAC3C34C,MAGJxkB,KAAKsC,iBAAiBC,EAAAA,EAAUqG,OAAQu0D,EAC1C,MAGGn9D,KAAKq8D,MACd,EAYK,SAAShwD,EAAIgpC,EAAO6Y,EAAUvlC,EAAa6sB,EAAY5sB,EAAOG,GACnE,IAAIN,OACWxoB,IAAbiuD,OACIjuD,EACA2R,EAAAA,GAAevF,IAAI6hD,EAAUvlC,EAAaC,GAkBhD,OAjBKH,IACHA,EAAY,IAAI6lC,EACdjZ,EACAA,GAAS,QAASA,EAAQA,EAAM3sB,UAAOzoB,EAAYiuD,EACnDvlC,EACA6sB,EACA5sB,GAEFhX,EAAAA,GAAepF,IAAI0hD,EAAUvlC,EAAaC,EAAOH,EAAWM,IAG5DA,GACAN,IACC7W,EAAAA,GAAekX,WAAWolC,EAAUvlC,EAAaC,IAElDhX,EAAAA,GAAepF,IAAI0hD,EAAUvlC,EAAaC,EAAOH,EAAWM,GAEvDN,CACT,CAEA,S,6EC/TO,SAASwpC,EACd19B,EACAC,EACAC,EACAlN,EACAyqC,EACAplD,EACAg+B,GAEA,IAAIwyB,EAAGzC,EACP,MAAM3yD,GAAKysB,EAAMD,GAAUjN,EAC3B,GAAU,IAANvf,EACFo1D,EAAI5oC,OACC,GAAU,IAANxsB,EACTo1D,EAAI5oC,EACJmmC,EAAI3I,OACC,GAAU,IAANhqD,EAAS,CAClB,IAAI0tB,EAAKnB,EAAgBC,GACrBmB,EAAKpB,EAAgBC,EAAS,GAC9BpwB,EAAS,EACb,MAAMi5D,EAAoB,CAAC,GAC3B,IAAK,IAAIj2D,EAAIotB,EAASjN,EAAQngB,EAAIqtB,EAAKrtB,GAAKmgB,EAAQ,CAClD,MAAMqO,EAAKrB,EAAgBntB,GACrByuB,EAAKtB,EAAgBntB,EAAI,GAC/BhD,GAAUgB,KAAKwX,MAAMgZ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9D0nC,EAAkBv4D,KAAKV,GACvBsxB,EAAKE,EACLD,EAAKE,CACP,CACA,MAAMjyB,EAASouD,EAAW5tD,EACpB4C,GAAQs2D,EAAAA,EAAAA,IAAaD,EAAmBz5D,GAC1CoD,EAAQ,GACV2zD,GACG/2D,EAASy5D,GAAmBr2D,EAAQ,KACpCq2D,GAAmBr2D,EAAQ,GAAKq2D,GAAmBr2D,EAAQ,IAC9Do2D,EAAI5oC,IAAWxtB,EAAQ,GAAKugB,GAE5B61C,EAAI5oC,EAASxtB,EAAQugB,CAEzB,CACAqjB,EAAYA,EAAY,EAAIA,EAAY,EACxCh+B,EAAOA,GAAc,IAAIhC,MAAMggC,GAC/B,IAAK,IAAIxjC,EAAI,EAAGA,EAAIwjC,IAAaxjC,EAC/BwF,EAAKxF,QACGnH,IAANm9D,EACIz4C,SACM1kB,IAAN06D,EACEpmC,EAAgB6oC,EAAIh2D,IACpBm2D,EAAAA,EAAAA,IAAKhpC,EAAgB6oC,EAAIh2D,GAAImtB,EAAgB6oC,EAAI71C,EAASngB,GAAIuzD,GAExE,OAAO/tD,CACT,CAWO,SAASklD,EACdv9B,EACAC,EACAC,EACAlN,EACAtW,EACA4gD,GAEA,GAAIp9B,GAAOD,EACT,OAAO,KAET,IAAI/zB,EACJ,GAAIwQ,EAAIsjB,EAAgBC,EAASjN,EAAS,GACxC,OAAIsqC,GACFpxD,EAAa8zB,EAAgBxpB,MAAMypB,EAAQA,EAASjN,GACpD9mB,EAAW8mB,EAAS,GAAKtW,EAClBxQ,GAEF,KAET,GAAI8zB,EAAgBE,EAAM,GAAKxjB,EAC7B,OAAI4gD,GACFpxD,EAAa8zB,EAAgBxpB,MAAM0pB,EAAMlN,EAAQkN,GACjDh0B,EAAW8mB,EAAS,GAAKtW,EAClBxQ,GAEF,KAGT,GAAIwQ,GAAKsjB,EAAgBC,EAASjN,EAAS,GACzC,OAAOgN,EAAgBxpB,MAAMypB,EAAQA,EAASjN,GAEhD,IAAIi2C,EAAKhpC,EAASjN,EACdk2C,EAAKhpC,EAAMlN,EACf,KAAOi2C,EAAKC,GAAI,CACd,MAAMC,EAAOF,EAAKC,GAAO,EACrBxsD,EAAIsjB,GAAiBmpC,EAAM,GAAKn2C,EAAS,GAC3Ck2C,EAAKC,EAELF,EAAKE,EAAM,CAEf,CACA,MAAMC,EAAKppC,EAAgBipC,EAAKj2C,EAAS,GACzC,GAAItW,GAAK0sD,EACP,OAAOppC,EAAgBxpB,OAAOyyD,EAAK,GAAKj2C,GAASi2C,EAAK,GAAKj2C,EAASA,GAEtE,MACMozC,GAAK1pD,EAAI0sD,IADJppC,GAAiBipC,EAAK,GAAKj2C,EAAS,GACpBo2C,GAC3Bl9D,EAAa,GACb,IAAK,IAAI2G,EAAI,EAAGA,EAAImgB,EAAS,IAAKngB,EAChC3G,EAAWqE,MACTy4D,EAAAA,EAAAA,IACEhpC,GAAiBipC,EAAK,GAAKj2C,EAASngB,GACpCmtB,EAAgBipC,EAAKj2C,EAASngB,GAC9BuzD,IAKN,OADAl6D,EAAWqE,KAAKmM,GACTxQ,CACT,CAYO,SAASqyD,EACdv+B,EACAC,EACAsE,EACAvR,EACAtW,EACA4gD,EACAhlC,GAEA,GAAIA,EACF,OAAOilC,EACLv9B,EACAC,EACAsE,EAAKA,EAAK10B,OAAS,GACnBmjB,EACAtW,EACA4gD,GAGJ,IAAIpxD,EACJ,GAAIwQ,EAAIsjB,EAAgBhN,EAAS,GAC/B,OAAIsqC,GACFpxD,EAAa8zB,EAAgBxpB,MAAM,EAAGwc,GACtC9mB,EAAW8mB,EAAS,GAAKtW,EAClBxQ,GAEF,KAET,GAAI8zB,EAAgBA,EAAgBnwB,OAAS,GAAK6M,EAChD,OAAI4gD,GACFpxD,EAAa8zB,EAAgBxpB,MAAMwpB,EAAgBnwB,OAASmjB,GAC5D9mB,EAAW8mB,EAAS,GAAKtW,EAClBxQ,GAEF,KAET,IAAK,IAAI2G,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACjB,GAAIotB,GAAUC,EAAd,CAGA,GAAIxjB,EAAIsjB,EAAgBC,EAASjN,EAAS,GACxC,OAAO,KAET,GAAItW,GAAKsjB,EAAgBE,EAAM,GAC7B,OAAOq9B,EACLv9B,EACAC,EACAC,EACAlN,EACAtW,GACA,GAGJujB,EAASC,CAdT,CAeF,CACA,OAAO,IACT,C,wFCnIA,MAAMmpC,UAAaxrC,EAAAA,EAMjBzyB,WAAAA,CAAYozB,EAAWhqB,EAAOkB,GAC5BlK,QAEAkK,EAAUA,GAAoB,CAAC,EAK/BjK,KAAK+yB,UAAYA,EAMjB/yB,KAAK+I,MAAQA,EAOb/I,KAAKuH,IAAM,GAOXvH,KAAK69D,iBACoB59D,IAAvBgK,EAAQ6zD,WAA2B,IAAM7zD,EAAQ6zD,WAQnD99D,KAAK+9D,kBAAoB,CAAC,EAK1B/9D,KAAK6sB,cAAgB5iB,EAAQ4iB,WAC/B,CAKA1hB,OAAAA,GACEnL,KAAKiD,cAAcV,EAAAA,EAAUqG,OAC/B,CAKAo1D,OAAAA,GAEEh+D,KAAKi+D,SAASh1D,EAAAA,EAAUG,MAC1B,CAKAf,MAAAA,GACE,OAAOrI,KAAKuH,IAAM,IAAMvH,KAAK+yB,SAC/B,CAOAmrC,YAAAA,GACE,OAAOl+D,KAAK+yB,SACd,CAKA/pB,QAAAA,GACE,OAAOhJ,KAAK+I,KACd,CAUAk1D,QAAAA,CAASl1D,GACP,GAAI/I,KAAK+I,QAAUE,EAAAA,EAAUG,MAA7B,CAIA,GAAIpJ,KAAK+I,QAAUE,EAAAA,EAAUE,OAASnJ,KAAK+I,MAAQA,EACjD,MAAM,IAAIwsB,MAAM,gCAElBv1B,KAAK+I,MAAQA,EACb/I,KAAKmL,SALL,CAMF,CASAxB,IAAAA,IACEuE,EAAAA,EAAAA,KACF,CAQAiwD,QAAAA,CAAS36D,EAAI+a,GACX,IAAKve,KAAK69D,YACR,OAAO,EAGT,IAAIlnC,EAAQ32B,KAAK+9D,kBAAkBv6D,GACnC,GAAKmzB,GAGE,IAAe,IAAXA,EACT,OAAO,OAHPA,EAAQpY,EACRve,KAAK+9D,kBAAkBv6D,GAAMmzB,EAK/B,MAAMqI,EAAQzgB,EAAOoY,EAAQ,IAAO,GACpC,OAAIqI,GAASh/B,KAAK69D,YACT,GAEFO,EAAAA,EAAAA,IAAOp/B,EAAQh/B,KAAK69D,YAC7B,CASAQ,YAAAA,CAAa76D,GACX,QAAKxD,KAAK69D,cAG6B,IAAhC79D,KAAK+9D,kBAAkBv6D,EAChC,CAMA86D,aAAAA,CAAc96D,GACRxD,KAAK69D,cACP79D,KAAK+9D,kBAAkBv6D,IAAO,EAElC,CAKAgC,eAAAA,GACExF,KAAKg+D,UACLj+D,MAAMyF,iBACR,EAGF,S,0GChMA,SAAS+4D,EAAe/rD,EAAOC,EAAQ+rD,EAAaC,GAClD,YAAoBx+D,IAAhBu+D,QAA8Cv+D,IAAjBw+D,EACxB,CAACD,EAAchsD,EAAOisD,EAAehsD,QAE1BxS,IAAhBu+D,EACKA,EAAchsD,OAEFvS,IAAjBw+D,EACKA,EAAehsD,EAEjB,CACT,CAOA,MAAMisD,UAAat8C,EAAAA,EAIjBziB,WAAAA,CAAYsK,GAMV,MAAMmD,OAA8BnN,KALpCgK,EAAUA,GAAW,CAAC,GAKEmD,QAAwBnD,EAAQmD,QAAU,EAK5DsB,OAAgCzO,IAArBgK,EAAQyE,SAAyBzE,EAAQyE,SAAW,EAK/DgU,OAA0BziB,IAAlBgK,EAAQyY,MAAsBzY,EAAQyY,MAAQ,EAKtDH,OACuBtiB,IAA3BgK,EAAQsY,gBAA+BtY,EAAQsY,eAEjDxiB,MAAM,CACJqN,QAASA,EACTsB,SAAUA,EACVgU,MAAOA,EACPI,kBAC2B7iB,IAAzBgK,EAAQ6Y,aAA6B7Y,EAAQ6Y,aAAe,CAAC,EAAG,GAClEP,eAAgBA,EAChBS,cAAe/Y,EAAQ+Y,gBAOzBhjB,KAAKmkD,aAA6BlkD,IAAnBgK,EAAQwc,OAAuBxc,EAAQwc,OAAS,CAAC,GAAK,IAMrEzmB,KAAK2+D,kBAAoB,KAMzB3+D,KAAK4+D,mBACsB3+D,IAAzBgK,EAAQ40D,aAA6B50D,EAAQ40D,aAAe,WAM9D7+D,KAAK8+D,mBACsB7+D,IAAzBgK,EAAQ80D,aAA6B90D,EAAQ80D,aAAe,WAM9D/+D,KAAKg/D,mBACsB/+D,IAAzBgK,EAAQg1D,aAA6Bh1D,EAAQg1D,aAAe,WAM9Dj/D,KAAKi8D,kBACqBh8D,IAAxBgK,EAAQ0e,YAA4B1e,EAAQ0e,YAAc,KAE5D,MAAM0sB,OAAwBp1C,IAAhBgK,EAAQi1D,IAAoBj1D,EAAQi1D,IAAM,KAExD,IAuBI1pB,EAvBA0Y,EAAWjkD,EAAQye,IAwFvB,IAtFA/hB,EAAAA,EAAAA,UACiB1G,IAAbiuD,GAA0B7Y,GAC5B,8DAGgBp1C,IAAbiuD,GAA8C,IAApBA,EAAS9pD,SAAiBixC,IACvD6Y,EAA4C7Y,EAAO3sB,MAAOvc,EAAAA,EAAAA,IAAOkpC,KAEnE1uC,EAAAA,EAAAA,QACe1G,IAAbiuD,GAA0BA,EAAS9pD,OAAS,EAC5C,8DAGFuC,EAAAA,EAAAA,WAEuB1G,IAAlBgK,EAAQuI,YAA0CvS,IAAnBgK,EAAQwI,cACtBxS,IAAlBgK,EAAQyY,OAEV,qEAIkBziB,IAAhBgK,EAAQye,IACV8sB,EAAavsB,EAAAA,EAAWvf,UACLzJ,IAAVo1C,IAGLG,EAFA,aAAcH,EACZA,EAAM8pB,SACK9pB,EAAM3sB,IAAMO,EAAAA,EAAW/f,OAAS+f,EAAAA,EAAWvf,KAE3Cuf,EAAAA,EAAWC,QAGbD,EAAAA,EAAW/f,QAQ5BlJ,KAAK2gC,YAA2B1gC,IAAlBgK,EAAQ2e,OAAsBU,EAAAA,EAAAA,IAAQrf,EAAQ2e,OAAS,KAMrE5oB,KAAKo/D,YAAar+B,EAAAA,EAAAA,GAChBsU,EACuB6Y,EACvBluD,KAAKi8D,aACLzmB,EACAx1C,KAAK2gC,QAOP3gC,KAAKq/D,aAA6Bp/D,IAAnBgK,EAAQuqB,OAAuBvqB,EAAQuqB,OAAS,CAAC,EAAG,GAKnEx0B,KAAKs/D,mBACsBr/D,IAAzBgK,EAAQs1D,aAA6Bt1D,EAAQs1D,aAAe,WAM9Dv/D,KAAKotD,QAAU,KAMfptD,KAAKwtD,WAAyBvtD,IAAjBgK,EAAQuE,KAAqBvE,EAAQuE,KAAO,KAKzDxO,KAAKw/D,qBAKiBv/D,IAAlBgK,EAAQuI,YAA0CvS,IAAnBgK,EAAQwI,OAAsB,CAC/D,IAAID,EAAOC,EACX,GAAIxI,EAAQuE,MACTgE,EAAOC,GAAUxI,EAAQuE,SACrB,CACL,MAAM6mC,EAAQr1C,KAAKyjB,SAAS,GAC5B,GAAI4xB,EAAM7iC,OAAS6iC,EAAM5iC,OACvBD,EAAQ6iC,EAAM7iC,MACdC,EAAS4iC,EAAM5iC,YACV,GAAI4iC,aAAiBynB,iBAAkB,CAC5C98D,KAAKw/D,gBAAkBv1D,EACvB,MAAMggB,EAASA,KAEb,GADAjqB,KAAKskB,oBAAoB2F,IACpBjqB,KAAKw/D,gBACR,OAEF,MAAMC,EAAYz/D,KAAKo/D,WAAW3kD,UAClCza,KAAKmkB,SACHo6C,EACEkB,EAAU,GACVA,EAAU,GACVx1D,EAAQuI,MACRvI,EAAQwI,UAKd,YADAzS,KAAKokB,kBAAkB6F,EAEzB,CACF,MACchqB,IAAVuS,GACFxS,KAAKmkB,SACHo6C,EAAe/rD,EAAOC,EAAQxI,EAAQuI,MAAOvI,EAAQwI,QAG3D,CACF,CAQA6O,KAAAA,GACE,IAAIoB,EAAOlQ,EAAOC,EAQlB,OAPIzS,KAAKw/D,iBACPhtD,EAAQxS,KAAKw/D,gBAAgBhtD,MAC7BC,EAASzS,KAAKw/D,gBAAgB/sD,SAE9BiQ,EAAQ1iB,KAAKijB,WACbP,EAAQ9X,MAAMC,QAAQ6X,GAASA,EAAM3X,QAAU2X,GAE1C,IAAIg8C,EAAK,CACdj4C,OAAQzmB,KAAKmkD,QAAQp5C,QACrB8zD,aAAc7+D,KAAK4+D,cACnBG,aAAc/+D,KAAK8+D,cACnBG,aAAcj/D,KAAKg/D,cACnBp2C,MACE5oB,KAAK2gC,QAAU3gC,KAAK2gC,OAAO51B,MACvB/K,KAAK2gC,OAAO51B,QACZ/K,KAAK2gC,aAAU1gC,EACrB0oB,YAAa3oB,KAAKi8D,aAClBznC,OAAQx0B,KAAKq/D,QAAQt0D,QACrBw0D,aAAcv/D,KAAKs/D,cACnBlyD,QAASpN,KAAKkjB,aACdX,eAAgBviB,KAAKojB,oBACrB1U,SAAU1O,KAAKmjB,cACfT,QACAlQ,QACAC,SACAjE,KAAqB,OAAfxO,KAAKwtD,MAAiBxtD,KAAKwtD,MAAMziD,aAAU9K,EACjDyoB,IAAK1oB,KAAK48D,SACV95C,aAAc9iB,KAAKqjB,kBAAkBtY,QACrCiY,cAAehjB,KAAKsjB,oBAExB,CASAE,SAAAA,GACE,IAAIiD,EAASzmB,KAAK2+D,kBAClB,IAAKl4C,EAAQ,CACXA,EAASzmB,KAAKmkD,QACd,MAAM31C,EAAOxO,KAAKya,UAClB,GACwB,YAAtBza,KAAK8+D,eACiB,YAAtB9+D,KAAKg/D,cACL,CACA,IAAKxwD,EACH,OAAO,KAETiY,EAASzmB,KAAKmkD,QAAQp5C,QACI,YAAtB/K,KAAK8+D,gBACPr4C,EAAO,IAAMjY,EAAK,IAEM,YAAtBxO,KAAKg/D,gBACPv4C,EAAO,IAAMjY,EAAK,GAEtB,CAEA,GAA0B,YAAtBxO,KAAK4+D,cAA6B,CACpC,IAAKpwD,EACH,OAAO,KAELiY,IAAWzmB,KAAKmkD,UAClB19B,EAASzmB,KAAKmkD,QAAQp5C,SAGA,aAAtB/K,KAAK4+D,eACiB,gBAAtB5+D,KAAK4+D,gBAELn4C,EAAO,IAAMA,EAAO,GAAKjY,EAAK,IAGR,eAAtBxO,KAAK4+D,eACiB,gBAAtB5+D,KAAK4+D,gBAELn4C,EAAO,IAAMA,EAAO,GAAKjY,EAAK,GAElC,CACAxO,KAAK2+D,kBAAoBl4C,CAC3B,CACA,MAAM3D,EAAe9iB,KAAKqjB,kBACpBX,EAAQ1iB,KAAKujB,gBAGnB,MAAO,CACLkD,EAAO,GAAK3D,EAAa,GAAKJ,EAAM,GACpC+D,EAAO,GAAK3D,EAAa,GAAKJ,EAAM,GAExC,CASAg9C,SAAAA,CAAUj5C,GACRzmB,KAAKmkD,QAAU19B,EACfzmB,KAAK2+D,kBAAoB,IAC3B,CAOA99B,QAAAA,GACE,OAAO7gC,KAAK2gC,MACd,CAUAld,QAAAA,CAAS7N,GACP,OAAO5V,KAAKo/D,WAAW37C,SAAS7N,EAClC,CASA+N,aAAAA,CAAc/N,GACZ,OAAO5V,KAAKo/D,WAAWz7C,cAAc/N,EACvC,CAMAiO,YAAAA,GACE,OAAO7jB,KAAKo/D,WAAW3kD,SACzB,CAMAmJ,aAAAA,GACE,OAAO5jB,KAAKo/D,WAAWx7C,eACzB,CAMAF,oBAAAA,GACE,OAAO1jB,KAAKo/D,WAAW17C,sBACzB,CAQAI,SAAAA,GACE,GAAI9jB,KAAKotD,QACP,OAAOptD,KAAKotD,QAEd,IAAI54B,EAASx0B,KAAKq/D,QAElB,GAA0B,YAAtBr/D,KAAKs/D,cAA6B,CACpC,MAAM9wD,EAAOxO,KAAKya,UACZklD,EAAgB3/D,KAAKo/D,WAAW3kD,UACtC,IAAKjM,IAASmxD,EACZ,OAAO,KAETnrC,EAASA,EAAOzpB,QAEQ,aAAtB/K,KAAKs/D,eACiB,gBAAtBt/D,KAAKs/D,gBAEL9qC,EAAO,GAAKmrC,EAAc,GAAKnxD,EAAK,GAAKgmB,EAAO,IAG1B,eAAtBx0B,KAAKs/D,eACiB,gBAAtBt/D,KAAKs/D,gBAEL9qC,EAAO,GAAKmrC,EAAc,GAAKnxD,EAAK,GAAKgmB,EAAO,GAEpD,CAEA,OADAx0B,KAAKotD,QAAU54B,EACRx0B,KAAKotD,OACd,CAOAwP,MAAAA,GACE,OAAO58D,KAAKo/D,WAAWxC,QACzB,CAQAniD,OAAAA,GACE,OAAQza,KAAKwtD,MAAoCxtD,KAAKwtD,MAAjCxtD,KAAKo/D,WAAW3kD,SACvC,CAOAxK,QAAAA,GACE,MAAMyS,EAAQ1iB,KAAKujB,gBACnB,OAAIvjB,KAAKwtD,MACAxtD,KAAKwtD,MAAM,GAAK9qC,EAAM,GAE3B1iB,KAAKo/D,WAAWx7C,iBAAmBqF,EAAAA,EAAW/f,OACzClJ,KAAKo/D,WAAW3kD,UAAU,GAAKiI,EAAM,QAD9C,CAIF,CAOAiF,SAAAA,GACE,MAAMjF,EAAQ1iB,KAAKujB,gBACnB,OAAIvjB,KAAKwtD,MACAxtD,KAAKwtD,MAAM,GAAK9qC,EAAM,GAE3B1iB,KAAKo/D,WAAWx7C,iBAAmBqF,EAAAA,EAAW/f,OACzClJ,KAAKo/D,WAAW3kD,UAAU,GAAKiI,EAAM,QAD9C,CAIF,CASAyB,QAAAA,CAASzB,UACA1iB,KAAKw/D,gBACZz/D,MAAMokB,SAASzB,EACjB,CAMA0B,iBAAAA,CAAkBC,GAChBrkB,KAAKo/D,WAAW98D,iBAAiBC,EAAAA,EAAUqG,OAAQyb,EACrD,CAUA1a,IAAAA,GACE3J,KAAKo/D,WAAWz1D,MAClB,CAMA2a,mBAAAA,CAAoBD,GAClBrkB,KAAKo/D,WAAW35D,oBAAoBlD,EAAAA,EAAUqG,OAAQyb,EACxD,CAKA1I,KAAAA,GACE,OAAO3b,KAAKo/D,WAAWzjD,OACzB,EAGF,S,2DCvkBA,SACEikD,OAAQ,SACRC,WAAY,aACZC,SAAU,Y,kCCML,SAASC,EAAanyD,EAAQoyD,EAAYC,GAC/C,OAAO,SASKtxD,EAAQF,EAAYD,EAAMisD,EAAUyF,GAC5C,IAAKvxD,EACH,OAEF,IAAKF,IAAeuxD,EAClB,OAAOrxD,EAET,MAAMwxD,EAAYH,EAAa,EAAIxxD,EAAK,GAAKC,EACvC2xD,EAAaJ,EAAa,EAAIxxD,EAAK,GAAKC,EACxC4xD,EAASH,EAAcA,EAAY,GAAK,EACxCI,EAASJ,EAAcA,EAAY,GAAK,EAC9C,IAAI50C,EAAO1d,EAAO,GAAKuyD,EAAY,EAAIE,EACnC70C,EAAO5d,EAAO,GAAKuyD,EAAY,EAAIE,EACnC90C,EAAO3d,EAAO,GAAKwyD,EAAa,EAAIE,EACpC70C,EAAO7d,EAAO,GAAKwyD,EAAa,EAAIE,EAIpCh1C,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAELC,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAGT,IAAI5F,GAAIyhB,EAAAA,EAAAA,IAAMz4B,EAAO,GAAI2c,EAAME,GAC3B5F,GAAIwhB,EAAAA,EAAAA,IAAMz4B,EAAO,GAAI4c,EAAME,GAG/B,GAAIgvC,GAAYwF,GAAUxxD,EAAY,CACpC,MAAM8xD,EAAQ,GAAK9xD,EACnBkX,IACG46C,EAAQn7D,KAAKuX,IAAI,EAAIvX,KAAKqI,IAAI,EAAG6d,EAAO3c,EAAO,IAAM4xD,GACtDA,EAAQn7D,KAAKuX,IAAI,EAAIvX,KAAKqI,IAAI,EAAGkB,EAAO,GAAK6c,GAAQ+0C,GACvD36C,IACG26C,EAAQn7D,KAAKuX,IAAI,EAAIvX,KAAKqI,IAAI,EAAG8d,EAAO5c,EAAO,IAAM4xD,GACtDA,EAAQn7D,KAAKuX,IAAI,EAAIvX,KAAKqI,IAAI,EAAGkB,EAAO,GAAK8c,GAAQ80C,EACzD,CAEA,MAAO,CAAC56C,EAAGC,EACZ,CAEL,CAMO,SAAS20C,EAAK5rD,GACnB,OAAOA,CACT,C,8DC1DA,SAAS6xD,EACP/xD,EACAgyD,EACAjmD,EACAkmD,GAEA,MAAMC,GAAc1wD,EAAAA,EAAAA,IAASwwD,GAAajmD,EAAa,GACjDomD,GAAcj5C,EAAAA,EAAAA,IAAU84C,GAAajmD,EAAa,GAExD,OAAIkmD,EACKt7D,KAAKmI,IAAIkB,EAAYrJ,KAAKqI,IAAIkzD,EAAaC,IAE7Cx7D,KAAKmI,IAAIkB,EAAYrJ,KAAKmI,IAAIozD,EAAaC,GACpD,CAcA,SAASC,EAA2BpyD,EAAYnB,EAAeE,GAC7D,IAAI4B,EAAShK,KAAKmI,IAAIkB,EAAYnB,GAalC,OAVA8B,GACEhK,KAAKuX,IAAI,EAHG,GAGSvX,KAAKqI,IAAI,EAAGgB,EAAanB,EAAgB,IAHlD,GAIZ,EACEE,IACF4B,EAAShK,KAAKqI,IAAI2B,EAAQ5B,GAC1B4B,GACEhK,KAAKuX,IAAI,EARC,GAQWvX,KAAKqI,IAAI,EAAGD,EAAgBiB,EAAa,IARpD,GAUV,IAEG24B,EAAAA,EAAAA,IAAMh4B,EAAQ5B,EAAgB,EAAmB,EAAhBF,EAC1C,CA0IO,SAASwzD,EACdxzD,EACAE,EACAyyD,EACAQ,EACAC,GAIA,OAFAT,OAAoBhgE,IAAXggE,GAAuBA,EAEzB,SAQKxxD,EAAYs2C,EAAWv2C,EAAMisD,GACrC,QAAmBx6D,IAAfwO,EAA0B,CAC5B,MAAMsyD,EAAeN,EACjBD,EACElzD,EACAmzD,EACAjyD,EACAkyD,GAEFpzD,EAEJ,OAAK2yD,GAAWxF,EAGToG,EACLpyD,EACAsyD,EACAvzD,IALO45B,EAAAA,EAAAA,IAAM34B,EAAYjB,EAAeuzD,EAO5C,CAED,CAEL,C,wBCwEA,MAAM5rD,UAAaV,EAAAA,EAIjB9U,WAAAA,CAAYsK,GACVlK,QAKAC,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAELN,EAAUlG,OAAOoG,OAAO,CAAC,EAAGF,GAM5BjK,KAAKghE,OAAS,CAAC,EAAG,GAMlBhhE,KAAKihE,YAAc,GAMnBjhE,KAAKkhE,oBAOLlhE,KAAKmhE,aAAc5vB,EAAAA,EAAAA,IAAiBtnC,EAAQwF,WAAY,aAMxDzP,KAAKohE,cAAgB,CAAC,IAAK,KAM3BphE,KAAKqhE,cAAgB,KAMrBrhE,KAAKshE,kBAMLthE,KAAKuhE,gBAMLvhE,KAAKwhE,YAAc,KAMnBxhE,KAAKyhE,gBAMLzhE,KAAK0hE,cAML1hE,KAAK2hE,mBAAgB1hE,EAEjBgK,EAAQwF,aACV4gC,EAAAA,EAAAA,MAEEpmC,EAAQ0E,SACV1E,EAAQ0E,QAASoN,EAAAA,EAAAA,IAAmB9R,EAAQ0E,OAAQ3O,KAAKmhE,cAEvDl3D,EAAQ2D,SACV3D,EAAQ2D,QAAS8lC,EAAAA,EAAAA,IAAezpC,EAAQ2D,OAAQ5N,KAAKmhE,cAGvDnhE,KAAK4hE,cAAc33D,EACrB,CAMA23D,aAAAA,CAAc33D,GACZ,MAAMg9C,EAAaljD,OAAOoG,OAAO,CAAC,EAAGF,GACrC,IAAK,MAAM1C,KAAOs6D,SACT5a,EAAW1/C,GAEpBvH,KAAKuY,cAAc0uC,GAAY,GAE/B,MAAM6a,EAm/CH,SAAoC73D,GACzC,IAAI83D,EACAz0D,EACAE,EAIJ,MAAMw0D,EAAiB,GACjBC,EAAoB,EAE1B,IAAIv0D,OACkBzN,IAApBgK,EAAQyD,QAAwBzD,EAAQyD,QA5sDnB,EA8sDnBC,OACkB1N,IAApBgK,EAAQ0D,QAAwB1D,EAAQ0D,QAAUq0D,EAEpD,MAAME,OACmBjiE,IAAvBgK,EAAQi4D,WAA2Bj4D,EAAQi4D,WAAaD,EAEpDzqC,OACmBv3B,IAAvBgK,EAAQutB,YAA2BvtB,EAAQutB,WAEvCyoC,OACmChgE,IAAvCgK,EAAQk4D,4BACJl4D,EAAQk4D,2BAGRzB,OACuBzgE,IAA3BgK,EAAQy2D,gBAA+Bz2D,EAAQy2D,eAE3CjxD,GAAa8hC,EAAAA,EAAAA,IAAiBtnC,EAAQwF,WAAY,aAClD2yD,EAAa3yD,EAAWM,YAC9B,IAAIsyD,EAAsBp4D,EAAQo4D,oBAC9Bz0D,EAAS3D,EAAQ2D,OAChB4pB,GAAe5pB,IAAU6B,EAAW6yD,aACvCD,GAAsB,EACtBz0D,EAASw0D,GAGX,QAA4BniE,IAAxBgK,EAAQs4D,YAA2B,CACrC,MAAMA,EAAct4D,EAAQs4D,YAC5Bj1D,EAAgBi1D,EAAY70D,GAC5BF,OAC2BvN,IAAzBsiE,EAAY50D,GACR40D,EAAY50D,GACZ40D,EAAYA,EAAYn+D,OAAS,GAGrC29D,EADE93D,EAAQ84C,oBD54DT,SACLwf,EACAtC,EACAQ,EACAC,GAGA,OADAT,OAAoBhgE,IAAXggE,GAAuBA,EACzB,SAQKxxD,EAAYs2C,EAAWv2C,EAAMisD,GACrC,QAAmBx6D,IAAfwO,EAA0B,CAC5B,MAAMnB,EAAgBi1D,EAAY,GAC5B/0D,EAAgB+0D,EAAYA,EAAYn+D,OAAS,GACjD28D,EAAeN,EACjBD,EACElzD,EACAmzD,EACAjyD,EACAkyD,GAEFpzD,EAGJ,GAAImtD,EACF,OAAKwF,EAGEY,EACLpyD,EACAsyD,EACAvzD,IALO45B,EAAAA,EAAAA,IAAM34B,EAAYjB,EAAeuzD,GAS5C,MAAMyB,EAASp9D,KAAKmI,IAAIwzD,EAActyD,GAChCg7B,EAAIrkC,KAAKmyB,OAAMkrC,EAAAA,EAAAA,IAAkBF,EAAaC,EAAQzd,IAC5D,OAAIwd,EAAY94B,GAAKs3B,GAAgBt3B,EAAI84B,EAAYn+D,OAAS,EACrDm+D,EAAY94B,EAAI,GAElB84B,EAAY94B,EACrB,CAED,CAEL,CC21D6Bi5B,CACrBH,EACAtC,GACCoC,GAAuBz0D,EACxB8yD,GAGqBI,EACrBxzD,EACAE,EACAyyD,GACCoC,GAAuBz0D,EACxB8yD,EAGN,KAAO,CAEL,MAKMiC,GALQP,EAGVh9D,KAAKqI,KAAIwC,EAAAA,EAAAA,IAASmyD,IAAaz6C,EAAAA,EAAAA,IAAUy6C,IADxC,IAAM1qC,EAAAA,GAAgBkrC,QAAWnzD,EAAWuhC,oBAIxC6xB,EAAAA,EAAoBz9D,KAAKyjC,IAAIo5B,EAxwDjB,GA0wDfa,EACJH,EACAv9D,KAAKyjC,IAAIo5B,EAAmBD,EA5wDT,GA+wDrB10D,EAAgBrD,EAAQqD,mBACFrN,IAAlBqN,EACFI,EAAU,EAEVJ,EAAgBq1D,EAAuBv9D,KAAKyjC,IAAIq5B,EAAYx0D,GAI9DF,EAAgBvD,EAAQuD,mBACFvN,IAAlBuN,IAGEA,OAFoBvN,IAApBgK,EAAQ0D,aACoB1N,IAA1BgK,EAAQqD,cACMA,EAAgBlI,KAAKyjC,IAAIq5B,EAAYv0D,GAErCg1D,EAAuBv9D,KAAKyjC,IAAIq5B,EAAYv0D,GAG9Cm1D,GAKpBn1D,EACED,EACAtI,KAAKmyB,MACHnyB,KAAKuX,IAAIrP,EAAgBE,GAAiBpI,KAAKuX,IAAIulD,IAEvD10D,EAAgBF,EAAgBlI,KAAKyjC,IAAIq5B,EAAYv0D,EAAUD,GAG7Dq0D,EADE93D,EAAQ84C,oBD34DT,SACLiU,EACA1pD,EACAE,EACAyyD,EACAQ,EACAC,GAKA,OAHAT,OAAoBhgE,IAAXggE,GAAuBA,EAChCzyD,OAAkCvN,IAAlBuN,EAA8BA,EAAgB,EAEvD,SAQKiB,EAAYs2C,EAAWv2C,EAAMisD,GACrC,QAAmBx6D,IAAfwO,EAA0B,CAC5B,MAAMsyD,EAAeN,EACjBD,EACElzD,EACAmzD,EACAjyD,EACAkyD,GAEFpzD,EAGJ,GAAImtD,EACF,OAAKwF,EAGEY,EACLpyD,EACAsyD,EACAvzD,IALO45B,EAAAA,EAAAA,IAAM34B,EAAYjB,EAAeuzD,GAS5C,MAAMl6C,EAAY,KACZk8C,EAAe39D,KAAKgpD,KACxBhpD,KAAKuX,IAAIrP,EAAgByzD,GAAgB37D,KAAKuX,IAAIq6C,GAASnwC,GAEvD2N,GAAUuwB,GAAa,GAAMl+B,GAAa,GAC1C27C,EAASp9D,KAAKmI,IAAIwzD,EAActyD,GAChCu0D,EAAkB59D,KAAKmyB,MAC3BnyB,KAAKuX,IAAIrP,EAAgBk1D,GAAUp9D,KAAKuX,IAAIq6C,GAASxiC,GAEjDyuC,EAAY79D,KAAKqI,IAAIs1D,EAAcC,GACnCnnB,EAAgBvuC,EAAgBlI,KAAKyjC,IAAImuB,EAAOiM,GACtD,OAAO77B,EAAAA,EAAAA,IAAMyU,EAAeruC,EAAeuzD,EAC7C,CAED,CAEL,CCk1D6BmC,CACrBhB,EACA50D,EACAE,EACAyyD,GACCoC,GAAuBz0D,EACxB8yD,GAGqBI,EACrBxzD,EACAE,EACAyyD,GACCoC,GAAuBz0D,EACxB8yD,EAGN,CACA,MAAO,CACLyC,WAAYpB,EACZz0D,cAAeA,EACfE,cAAeA,EACfE,QAASA,EACTw0D,WAAYA,EAEhB,CAxnDqCkB,CAA2Bn5D,GAM5DjK,KAAKqjE,eAAiBvB,EAAyBx0D,cAM/CtN,KAAKsjE,eAAiBxB,EAAyBt0D,cAM/CxN,KAAKujE,YAAczB,EAAyBI,WAM5CliE,KAAKwjE,aAAev5D,EAAQs4D,YAM5BviE,KAAKmqD,SAAWlgD,EAAQmgD,QAMxBpqD,KAAKyjE,SAAW3B,EAAyBp0D,QAEzC,MAAMg2D,EAo7CH,SAAgCz5D,GACrC,QAAuBhK,IAAnBgK,EAAQ2D,OAAsB,CAChC,MAAMqyD,OAC+BhgE,IAAnCgK,EAAQ05D,wBACJ15D,EAAQ05D,uBAEd,OAAO5D,EAAa91D,EAAQ2D,OAAQ3D,EAAQo4D,oBAAqBpC,EACnE,CAEA,MAAMxwD,GAAa8hC,EAAAA,EAAAA,IAAiBtnC,EAAQwF,WAAY,aACxD,IAA2B,IAAvBxF,EAAQutB,YAAuB/nB,EAAW6yD,WAAY,CACxD,MAAM10D,EAAS6B,EAAWM,YAAYhF,QAGtC,OAFA6C,EAAO,IAAMjI,IACbiI,EAAO,GAAKjI,IACLo6D,EAAanyD,GAAQ,GAAO,EACrC,CAEA,OAAOg2D,CACT,CAt8C6BC,CAAuB55D,GAC1C83D,EAAuBD,EAAyBqB,WAChDW,EAslDH,SAAkC75D,GACvC,MAAM85D,OACuB9jE,IAA3BgK,EAAQ85D,gBAA+B95D,EAAQ85D,eACjD,GAAIA,EAAgB,CAClB,MAAMC,EAAoB/5D,EAAQ+5D,kBAClC,YAA0B/jE,IAAtB+jE,IAAyD,IAAtBA,GAC9BtJ,EAAAA,EAAAA,OAEiB,IAAtBsJ,EACKC,EAAAA,GAEwB,kBAAtBD,GACFxJ,EAAAA,EAAAA,IAAcwJ,GAEhBC,EAAAA,EACT,CACA,OAAO3zB,EAAAA,EACT,CAvmD+B4zB,CAAyBj6D,GAMpDjK,KAAKmkE,aAAe,CAClBx1D,OAAQ+0D,EACRj1D,WAAYszD,EACZrzD,SAAUo1D,GAGZ9jE,KAAKkkB,iBAAiCjkB,IAArBgK,EAAQyE,SAAyBzE,EAAQyE,SAAW,GACrE1O,KAAKokE,uBACgBnkE,IAAnBgK,EAAQ0E,OAAuB1E,EAAQ0E,OAAS,WAEvB1O,IAAvBgK,EAAQwE,WACVzO,KAAKqkE,cAAcp6D,EAAQwE,iBACDxO,IAAjBgK,EAAQ+1B,MACjBhgC,KAAKigC,QAAQh2B,EAAQ+1B,KAEzB,CAWA,WAAIoqB,GACF,OAAOpqD,KAAKmqD,QACd,CACA,WAAIC,CAAQA,GACV,IAAIka,EAAatkE,KAAKmqD,SACtBnqD,KAAKmqD,SAAWC,EAChB,MAAMz7C,EAAS3O,KAAKo/C,oBACpB,GAAIzwC,EAAQ,CACV,MAAM41D,EAAana,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCka,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,MAAM71D,EAAazO,KAAKg/C,gBAClB1G,EACH7pC,EAAa,GACb81D,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,IACxDza,EACHr7C,EAAa,GACb81D,EAAW,GAAKD,EAAW,GAAKA,EAAW,GAAKC,EAAW,IAC9DvkE,KAAKokE,kBAAkB,CAACz1D,EAAO,GAAK2pC,EAAS3pC,EAAO,GAAKm7C,GAC3D,CACF,CAUA0a,kBAAAA,CAAmBC,GACjB,MAAMx6D,EAAUjK,KAAKmnD,gBAerB,YAZ2BlnD,IAAvBgK,EAAQwE,WACVxE,EAAQwE,WAAazO,KAAKg/C,gBAE1B/0C,EAAQ+1B,KAAOhgC,KAAK4/B,UAItB31B,EAAQ0E,OAAS3O,KAAKo/C,oBAGtBn1C,EAAQyE,SAAW1O,KAAKmjB,cAEjBpf,OAAOoG,OAAO,CAAC,EAAGF,EAASw6D,EACpC,CAmCAjmD,OAAAA,CAAQ09B,GACFl8C,KAAKsgB,UAAYtgB,KAAK6e,gBACxB7e,KAAK8e,mBAAmB,GAE1B,MAAM4lD,EAAO,IAAI95D,MAAMi7B,UAAUzhC,QACjC,IAAK,IAAIgD,EAAI,EAAGA,EAAIs9D,EAAKtgE,SAAUgD,EAAG,CACpC,IAAI6C,EAAU47B,UAAUz+B,GACpB6C,EAAQ0E,SACV1E,EAAUlG,OAAOoG,OAAO,CAAC,EAAGF,GAC5BA,EAAQ0E,QAASoN,EAAAA,EAAAA,IACf9R,EAAQ0E,OACR3O,KAAKob,kBAGLnR,EAAQwc,SACVxc,EAAUlG,OAAOoG,OAAO,CAAC,EAAGF,GAC5BA,EAAQwc,QAAS1K,EAAAA,EAAAA,IACf9R,EAAQwc,OACRzmB,KAAKob,kBAGTspD,EAAKt9D,GAAK6C,CACZ,CACAjK,KAAKs/C,gBAAgBl3C,MAAMpI,KAAM0kE,EACnC,CAKAplB,eAAAA,CAAgBpD,GACd,IACIltC,EADA21D,EAAiB9+B,UAAUzhC,OAG7BugE,EAAiB,GACwB,oBAAlC9+B,UAAU8+B,EAAiB,KAElC31D,EAAW62B,UAAU8+B,EAAiB,KACpCA,GAGJ,IAAIv9D,EAAI,EACR,KAAOA,EAAIu9D,IAAmB3kE,KAAKsgB,UAAWlZ,EAAG,CAE/C,MAAM2B,EAAQ88B,UAAUz+B,GACpB2B,EAAM4F,QACR3O,KAAKokE,kBAAkBr7D,EAAM4F,aAEZ1O,IAAf8I,EAAMi3B,KACRhgC,KAAKigC,QAAQl3B,EAAMi3B,MACVj3B,EAAM0F,YACfzO,KAAKqkE,cAAct7D,EAAM0F,iBAEJxO,IAAnB8I,EAAM2F,UACR1O,KAAKkkB,YAAYnb,EAAM2F,SAE3B,CACA,GAAItH,IAAMu9D,EAIR,YAHI31D,GACF41D,EAAkB51D,GAAU,IAKhC,IAAI2nB,EAAQtY,KAAKC,MACb3P,EAAS3O,KAAKqhE,cAAct2D,QAC5B0D,EAAazO,KAAKshE,kBAClB5yD,EAAW1O,KAAKuhE,gBACpB,MAAMsD,EAAS,GACf,KAAOz9D,EAAIu9D,IAAkBv9D,EAAG,CAC9B,MAAM6C,EAA2C47B,UAAUz+B,GAErD09D,EAAY,CAChBnuC,MAAOA,EACPwoC,UAAU,EACV14C,OAAQxc,EAAQwc,OAChBgY,cAA+Bx+B,IAArBgK,EAAQw0B,SAAyBx0B,EAAQw0B,SAAW,IAC9DK,OAAQ70B,EAAQ60B,QAAUimC,EAAAA,GAC1B/1D,SAAUA,GAmBZ,GAhBI/E,EAAQ0E,SACVm2D,EAAUE,aAAer2D,EACzBm2D,EAAUG,aAAeh7D,EAAQ0E,OAAO5D,QACxC4D,EAASm2D,EAAUG,mBAGAhlE,IAAjBgK,EAAQ+1B,MACV8kC,EAAUI,iBAAmBz2D,EAC7Bq2D,EAAUK,iBAAmBnlE,KAAK87C,qBAAqB7xC,EAAQ+1B,MAC/DvxB,EAAaq2D,EAAUK,kBACdl7D,EAAQwE,aACjBq2D,EAAUI,iBAAmBz2D,EAC7Bq2D,EAAUK,iBAAmBl7D,EAAQwE,WACrCA,EAAaq2D,EAAUK,uBAGAllE,IAArBgK,EAAQyE,SAAwB,CAClCo2D,EAAUM,eAAiB12D,EAC3B,MAAMswB,GACJiT,EAAAA,EAAAA,IAAOhoC,EAAQyE,SAAWA,EAAWtJ,KAAKuyB,GAAI,EAAIvyB,KAAKuyB,IAAMvyB,KAAKuyB,GACpEmtC,EAAUO,eAAiB32D,EAAWswB,EACtCtwB,EAAWo2D,EAAUO,cACvB,CAGIC,EAAgBR,GAClBA,EAAU3F,UAAW,EAGrBxoC,GAASmuC,EAAUrmC,SAErBomC,EAAO//D,KAAKggE,EACd,CACA9kE,KAAKihE,YAAYn8D,KAAK+/D,GACtB7kE,KAAKulE,QAAQtnD,EAAAA,EAASC,UAAW,GACjCle,KAAKwlE,mBACP,CAOA3mD,YAAAA,GACE,OAAO7e,KAAKghE,OAAO/iD,EAAAA,EAASC,WAAa,CAC3C,CAOAunD,cAAAA,GACE,OAAOzlE,KAAKghE,OAAO/iD,EAAAA,EAASE,aAAe,CAC7C,CAMA4hB,gBAAAA,GAEE,IAAItZ,EADJzmB,KAAKulE,QAAQtnD,EAAAA,EAASC,WAAYle,KAAKghE,OAAO/iD,EAAAA,EAASC,YAEvD,IAAK,IAAI9W,EAAI,EAAGwE,EAAK5L,KAAKihE,YAAY78D,OAAQgD,EAAIwE,IAAMxE,EAAG,CACzD,MAAMy9D,EAAS7kE,KAAKihE,YAAY75D,GAIhC,GAHIy9D,EAAO,GAAG71D,UACZ41D,EAAkBC,EAAO,GAAG71D,UAAU,IAEnCyX,EACH,IAAK,IAAIlW,EAAI,EAAGqhC,EAAKizB,EAAOzgE,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CAC/C,MAAMu0D,EAAYD,EAAOt0D,GACzB,IAAKu0D,EAAU3F,SAAU,CACvB14C,EAASq+C,EAAUr+C,OACnB,KACF,CACF,CAEJ,CACAzmB,KAAKihE,YAAY78D,OAAS,EAC1BpE,KAAK2hE,cAAgBl7C,EACrBzmB,KAAKwhE,YAAc,KACnBxhE,KAAKyhE,gBAAkB98C,IACvB3kB,KAAK0hE,cAAgB/8C,GACvB,CAKA6gD,iBAAAA,GAKE,QAJiCvlE,IAA7BD,KAAKkhE,sBACP3hD,qBAAqBvf,KAAKkhE,qBAC1BlhE,KAAKkhE,yBAAsBjhE,IAExBD,KAAK6e,eACR,OAEF,MAAMP,EAAMD,KAAKC,MACjB,IAAIonD,GAAO,EACX,IAAK,IAAIt+D,EAAIpH,KAAKihE,YAAY78D,OAAS,EAAGgD,GAAK,IAAKA,EAAG,CACrD,MAAMy9D,EAAS7kE,KAAKihE,YAAY75D,GAChC,IAAIu+D,GAAiB,EACrB,IAAK,IAAIp1D,EAAI,EAAGqhC,EAAKizB,EAAOzgE,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CAC/C,MAAMu0D,EAAYD,EAAOt0D,GACzB,GAAIu0D,EAAU3F,SACZ,SAEF,MAAMyG,EAAUtnD,EAAMwmD,EAAUnuC,MAChC,IAAIq7B,EACF8S,EAAUrmC,SAAW,EAAImnC,EAAUd,EAAUrmC,SAAW,EACtDuzB,GAAY,GACd8S,EAAU3F,UAAW,EACrBnN,EAAW,GAEX2T,GAAiB,EAEnB,MAAME,EAAWf,EAAUhmC,OAAOkzB,GAClC,GAAI8S,EAAUE,aAAc,CAC1B,MAAMxvC,EAAKsvC,EAAUE,aAAa,GAC5BvvC,EAAKqvC,EAAUE,aAAa,GAC5BtvC,EAAKovC,EAAUG,aAAa,GAC5BtvC,EAAKmvC,EAAUG,aAAa,GAClCjlE,KAAKwhE,YAAcsD,EAAUG,aAC7B,MAAMt/C,EAAI6P,EAAKqwC,GAAYnwC,EAAKF,GAC1B5P,EAAI6P,EAAKowC,GAAYlwC,EAAKF,GAChCz1B,KAAKqhE,cAAgB,CAAC17C,EAAGC,EAC3B,CACA,GAAIk/C,EAAUI,kBAAoBJ,EAAUK,iBAAkB,CAC5D,MAAM12D,EACS,IAAbo3D,EACIf,EAAUK,iBACVL,EAAUI,iBACVW,GACGf,EAAUK,iBAAmBL,EAAUI,kBAChD,GAAIJ,EAAUr+C,OAAQ,CACpB,MAAMjY,EAAOxO,KAAK8lE,iBAAiB9lE,KAAKmjB,eAClC4iD,EAAwB/lE,KAAKmkE,aAAa11D,WAC9CA,EACA,EACAD,GACA,GAEFxO,KAAKqhE,cAAgBrhE,KAAKgmE,oBACxBD,EACAjB,EAAUr+C,OAEd,CACAzmB,KAAKyhE,gBAAkBqD,EAAUK,iBACjCnlE,KAAKshE,kBAAoB7yD,EACzBzO,KAAKimE,mBAAkB,EACzB,CACA,QAC+BhmE,IAA7B6kE,EAAUM,qBACmBnlE,IAA7B6kE,EAAUO,eACV,CACA,MAAM32D,EACS,IAAbm3D,GACI5zB,EAAAA,EAAAA,IAAO6yB,EAAUO,eAAiBjgE,KAAKuyB,GAAI,EAAIvyB,KAAKuyB,IACpDvyB,KAAKuyB,GACLmtC,EAAUM,eACVS,GACGf,EAAUO,eAAiBP,EAAUM,gBAC9C,GAAIN,EAAUr+C,OAAQ,CACpB,MAAMy/C,EAAsBlmE,KAAKmkE,aAAaz1D,SAC5CA,GACA,GAEF1O,KAAKqhE,cAAgBrhE,KAAKmmE,sBACxBD,EACApB,EAAUr+C,OAEd,CACAzmB,KAAK0hE,cAAgBoD,EAAUO,eAC/BrlE,KAAKuhE,gBAAkB7yD,CACzB,CAGA,GAFA1O,KAAKimE,mBAAkB,GACvBP,GAAO,GACFZ,EAAU3F,SACb,KAEJ,CACA,GAAIwG,EAAgB,CAClB3lE,KAAKihE,YAAY75D,GAAK,KACtBpH,KAAKulE,QAAQtnD,EAAAA,EAASC,WAAY,GAClCle,KAAKwhE,YAAc,KACnBxhE,KAAKyhE,gBAAkB98C,IACvB3kB,KAAK0hE,cAAgB/8C,IACrB,MAAM3V,EAAW61D,EAAO,GAAG71D,SACvBA,GACF41D,EAAkB51D,GAAU,EAEhC,CACF,CAEAhP,KAAKihE,YAAcjhE,KAAKihE,YAAY7wC,OAAOg2C,SACvCV,QAAqCzlE,IAA7BD,KAAKkhE,sBACflhE,KAAKkhE,oBAAsBnhD,sBACzB/f,KAAKwlE,kBAAkBnjE,KAAKrC,OAGlC,CAOAmmE,qBAAAA,CAAsBz3D,EAAU+X,GAC9B,IAAI9X,EACJ,MAAMwzC,EAAgBniD,KAAKo/C,oBAM3B,YALsBn/C,IAAlBkiD,IACFxzC,EAAS,CAACwzC,EAAc,GAAK17B,EAAO,GAAI07B,EAAc,GAAK17B,EAAO,KAClEw4B,EAAAA,EAAAA,IAAiBtwC,EAAQD,EAAW1O,KAAKmjB,gBACzCkjD,EAAAA,EAAAA,IAAc13D,EAAQ8X,IAEjB9X,CACT,CAOAq3D,mBAAAA,CAAoBv3D,EAAYgY,GAC9B,IAAI9X,EACJ,MAAMwzC,EAAgBniD,KAAKo/C,oBACrBknB,EAAoBtmE,KAAKg/C,gBAC/B,QAAsB/+C,IAAlBkiD,QAAqDliD,IAAtBqmE,EAAiC,CAOlE33D,EAAS,CALP8X,EAAO,GACNhY,GAAcgY,EAAO,GAAK07B,EAAc,IAAOmkB,EAEhD7/C,EAAO,GACNhY,GAAcgY,EAAO,GAAK07B,EAAc,IAAOmkB,EAEpD,CACA,OAAO33D,CACT,CAQAm3D,gBAAAA,CAAiBp3D,GACf,MAAMF,EAAOxO,KAAKohE,cAClB,GAAI1yD,EAAU,CACZ,MAAM63D,EAAI/3D,EAAK,GACT66B,EAAI76B,EAAK,GACf,MAAO,CACLpJ,KAAKC,IAAIkhE,EAAInhE,KAAK8wB,IAAIxnB,IAAatJ,KAAKC,IAAIgkC,EAAIjkC,KAAKgxB,IAAI1nB,IACzDtJ,KAAKC,IAAIkhE,EAAInhE,KAAKgxB,IAAI1nB,IAAatJ,KAAKC,IAAIgkC,EAAIjkC,KAAK8wB,IAAIxnB,IAE7D,CACA,OAAOF,CACT,CASA2T,eAAAA,CAAgB3T,GACdxO,KAAKohE,cAAgBx2D,MAAMC,QAAQ2D,GAAQA,EAAKzD,QAAU,CAAC,IAAK,KAC3D/K,KAAK6e,gBACR7e,KAAK8e,mBAAmB,EAE5B,CAQAsW,SAAAA,GACE,MAAMzmB,EAAS3O,KAAKo/C,oBACpB,OAAKzwC,GAGEuM,EAAAA,EAAAA,IAAiBvM,EAAQ3O,KAAKob,iBAF5BzM,CAGX,CAMAywC,iBAAAA,GACE,OACEp/C,KAAKqM,IAAIw1D,EAAajC,OAE1B,CAKAlgB,cAAAA,GACE,OAAO1/C,KAAKmkE,YACd,CAKAtgB,sBAAAA,GACE,OAAO7jD,KAAKqM,IAAI,sBAClB,CAMAkU,QAAAA,CAASxC,GACP,YAAc9d,IAAV8d,GACFA,EAAM,GAAK/d,KAAKghE,OAAO,GACvBjjD,EAAM,GAAK/d,KAAKghE,OAAO,GAChBjjD,GAEF/d,KAAKghE,OAAOj2D,OACrB,CAYAquC,eAAAA,CAAgB5qC,GACd,MAAMZ,EAAS5N,KAAKwmE,wBAAwBh4D,GAC5C,OAAOilC,EAAAA,EAAAA,IAAa7lC,EAAQ5N,KAAKob,gBACnC,CAOAorD,uBAAAA,CAAwBh4D,GACtBA,EAAOA,GAAQxO,KAAKymE,+BACpB,MAAM93D,EACJ3O,KAAKo/C,qBAEPz4C,EAAAA,EAAAA,GAAOgI,EAAQ,kCACf,MAAMF,EAAqCzO,KAAKg/C,iBAChDr4C,EAAAA,EAAAA,QAAsB1G,IAAfwO,EAA0B,sCACjC,MAAMC,EAAmC1O,KAAKmjB,cAG9C,OAFAxc,EAAAA,EAAAA,QAAoB1G,IAAbyO,EAAwB,qCAExB8R,EAAAA,EAAAA,IAAkB7R,EAAQF,EAAYC,EAAUF,EACzD,CAOAk4D,gBAAAA,GACE,OAAO1mE,KAAKqjE,cACd,CAOAsD,gBAAAA,GACE,OAAO3mE,KAAKsjE,cACd,CAOAsD,UAAAA,GACE,OACE5mE,KAAK6mE,qBAAqB7mE,KAAKsjE,eAEnC,CAOAwD,UAAAA,CAAW9mC,GACThgC,KAAK4hE,cAAc5hE,KAAKwkE,mBAAmB,CAAC72D,QAASqyB,IACvD,CAOA+mC,UAAAA,GACE,OACE/mE,KAAK6mE,qBAAqB7mE,KAAKqjE,eAEnC,CAOA2D,UAAAA,CAAWhnC,GACThgC,KAAK4hE,cAAc5hE,KAAKwkE,mBAAmB,CAAC92D,QAASsyB,IACvD,CAOAinC,sBAAAA,CAAuBC,GACrBlnE,KAAK4hE,cAAc5hE,KAAKwkE,mBAAmB,CAACzhB,oBAAqBmkB,IACnE,CAOA9rD,aAAAA,GACE,OAAOpb,KAAKmhE,WACd,CAQAniB,aAAAA,GACE,OAAwCh/C,KAAKqM,IAAIw1D,EAAahC,WAChE,CAQAsH,cAAAA,GACE,OAAOnnE,KAAKwjE,YACd,CAUA4D,sBAAAA,CAAuBx5D,EAAQY,GAC7B,OAAOxO,KAAK0hD,gCACVhO,EAAAA,EAAAA,IAAe9lC,EAAQ5N,KAAKob,iBAC5B5M,EAEJ,CASAkzC,8BAAAA,CAA+B9zC,EAAQY,GACrCA,EAAOA,GAAQxO,KAAKymE,+BACpB,MAAM9F,GAAc1wD,EAAAA,EAAAA,IAASrC,GAAUY,EAAK,GACtCoyD,GAAcj5C,EAAAA,EAAAA,IAAU/Z,GAAUY,EAAK,GAC7C,OAAOpJ,KAAKqI,IAAIkzD,EAAaC,EAC/B,CAQAyG,6BAAAA,CAA8BrQ,GAC5BA,EAAQA,GAAS,EACjB,MAAM1pD,EAAgBtN,KAAKsnE,yBAAyBtnE,KAAKqjE,gBACnD71D,EAAgBxN,KAAKsjE,eACrB71D,EAAMrI,KAAKuX,IAAIrP,EAAgBE,GAAiBpI,KAAKuX,IAAIq6C,GAC/D,OAAO,SAKKryD,GAER,OADmB2I,EAAgBlI,KAAKyjC,IAAImuB,EAAOryD,EAAQ8I,EAE5D,CAEL,CAQA0V,WAAAA,GACE,OAA8BnjB,KAAKqM,IAAIw1D,EAAa/B,SACtD,CAQAyH,6BAAAA,CAA8BvQ,GAC5B,MAAMwQ,EAAWpiE,KAAKuX,IAAIq6C,GAAS,GAC7B1pD,EAAgBtN,KAAKsnE,yBAAyBtnE,KAAKqjE,gBACnD71D,EAAgBxN,KAAKsjE,eACrB71D,EAAMrI,KAAKuX,IAAIrP,EAAgBE,GAAiBg6D,EACtD,OAAO,SAKK/4D,GAER,OADcrJ,KAAKuX,IAAIrP,EAAgBmB,GAAc+4D,EAAW/5D,CAEjE,CAEL,CAQAg5D,4BAAAA,CAA6B/3D,GAC3B,IAAIF,EAAOxO,KAAK8lE,iBAAiBp3D,GACjC,MAAM07C,EAAUpqD,KAAKmqD,SAOrB,OANIC,IACF57C,EAAO,CACLA,EAAK,GAAK47C,EAAQ,GAAKA,EAAQ,GAC/B57C,EAAK,GAAK47C,EAAQ,GAAKA,EAAQ,KAG5B57C,CACT,CAKAxF,QAAAA,GACE,MAAMyG,EAAazP,KAAKob,gBAClB3M,EAAazO,KAAKg/C,gBAClBtwC,EAAW1O,KAAKmjB,cACtB,IAAIxU,EACF3O,KAAKo/C,oBAEP,MAAMgL,EAAUpqD,KAAKmqD,SACrB,GAAIC,EAAS,CACX,MAAMqd,EAAcznE,KAAKymE,+BACzB93D,EAAS+4D,EACP/4D,EACA3O,KAAK8lE,mBACL,CAAC2B,EAAY,GAAK,EAAIrd,EAAQ,GAAIqd,EAAY,GAAK,EAAIrd,EAAQ,IAC/D37C,EACAC,EAEJ,CACA,MAAO,CACLC,OAAQA,EAAO5D,MAAM,GACrB0E,gBAA2BxP,IAAfwP,EAA2BA,EAAa,KACpDhB,WAAYA,EACZmS,WAAY5gB,KAAKwhE,YACjB3gD,eAAgB7gB,KAAKyhE,gBACrB1gD,aAAc/gB,KAAK0hE,cACnBhzD,SAAUA,EACVsxB,KAAMhgC,KAAK4/B,UAEf,CAKA4Z,qBAAAA,GACE,MAAO,CACLprC,UAAWpO,KAAKgJ,WAChB4E,OAAQ5N,KAAKo5C,kBAEjB,CASAxZ,OAAAA,GACE,IAAII,EACJ,MAAMvxB,EAAazO,KAAKg/C,gBAIxB,YAHmB/+C,IAAfwO,IACFuxB,EAAOhgC,KAAK6mE,qBAAqBp4D,IAE5BuxB,CACT,CAQA6mC,oBAAAA,CAAqBp4D,GACnB,IACIhB,EAAKy0D,EADL1tC,EAASx0B,KAAKyjE,UAAY,EAE9B,GAAIzjE,KAAKwjE,aAAc,CACrB,MAAMmE,GAAUlF,EAAAA,EAAAA,IAAkBziE,KAAKwjE,aAAc/0D,EAAY,GACjE+lB,EAASmzC,EACTl6D,EAAMzN,KAAKwjE,aAAamE,GAEtBzF,EADEyF,GAAW3nE,KAAKwjE,aAAap/D,OAAS,EAC3B,EAEAqJ,EAAMzN,KAAKwjE,aAAamE,EAAU,EAEnD,MACEl6D,EAAMzN,KAAKqjE,eACXnB,EAAaliE,KAAKujE,YAEpB,OAAO/uC,EAASpvB,KAAKuX,IAAIlP,EAAMgB,GAAcrJ,KAAKuX,IAAIulD,EACxD,CAQApmB,oBAAAA,CAAqB9b,GAAM,IAAA4nC,EACzB,GAAqB,QAArBA,EAAI5nE,KAAKwjE,oBAAY,IAAAoE,GAAjBA,EAAmBxjE,OAAQ,CAC7B,GAAiC,IAA7BpE,KAAKwjE,aAAap/D,OACpB,OAAOpE,KAAKwjE,aAAa,GAE3B,MAAMqE,GAAYzgC,EAAAA,EAAAA,IAChBhiC,KAAKmyB,MAAMyI,GACX,EACAhgC,KAAKwjE,aAAap/D,OAAS,GAEvB89D,EACJliE,KAAKwjE,aAAaqE,GAAa7nE,KAAKwjE,aAAaqE,EAAY,GAC/D,OACE7nE,KAAKwjE,aAAaqE,GAClBziE,KAAKyjC,IAAIq5B,GAAY96B,EAAAA,EAAAA,IAAMpH,EAAO6nC,EAAW,EAAG,GAEpD,CACA,OACE7nE,KAAKqjE,eAAiBj+D,KAAKyjC,IAAI7oC,KAAKujE,YAAavjC,EAAOhgC,KAAKyjE,SAEjE,CAYAqE,GAAAA,CAAIC,EAAkB99D,GAEpB,IAAIsF,EAOJ,IANA5I,EAAAA,EAAAA,GACEiE,MAAMC,QAAQk9D,IAEV,oBADwBA,EAAuC,sBAEnE,qDAEEn9D,MAAMC,QAAQk9D,GAAmB,EACnCphE,EAAAA,EAAAA,KACGU,EAAAA,EAAAA,IAAQ0gE,GACT,kDAEF,MAAMn6D,GAAS8lC,EAAAA,EAAAA,IAAeq0B,EAAkB/nE,KAAKob,iBACrD7L,GAAWy4D,EAAAA,EAAAA,IAAkBp6D,EAC/B,MAAO,GAAmC,WAA/Bm6D,EAAiBjhD,UAAwB,CAClD,MAAMlZ,GAAS8lC,EAAAA,EAAAA,IACbq0B,EAAiBh4D,YACjB/P,KAAKob,iBAEP7L,GAAWy4D,EAAAA,EAAAA,IAAkBp6D,GAC7B2B,EAASgX,OAAOvmB,KAAKmjB,eAAeiS,EAAAA,EAAAA,IAAUxnB,GAChD,KAAO,CACL,MAAMylC,GAAiBC,EAAAA,EAAAA,MAErB/jC,EADE8jC,EAEA00B,EACGzmD,QACAgE,UAAU+tB,EAAgBrzC,KAAKob,iBAGzB2sD,CAEf,CAEA/nE,KAAK4hD,YAAYryC,EAAUtF,EAC7B,CAOAw3C,wBAAAA,CAAyBlyC,GACvB,MAAMb,EAAW1O,KAAKmjB,cAChB8kD,EAAW7iE,KAAK8wB,IAAIxnB,GACpBw5D,EAAW9iE,KAAKgxB,KAAK1nB,GACrBy5D,EAAS54D,EAAS+pB,qBAClB/R,EAAShY,EAAS64D,YACxB,IAAIC,EAAW1iE,IACX2iE,EAAW3iE,IACX4iE,GAAW5iE,IACX6iE,GAAW7iE,IACf,IAAK,IAAIyB,EAAI,EAAGwE,EAAKu8D,EAAO/jE,OAAQgD,EAAIwE,EAAIxE,GAAKmgB,EAAQ,CACvD,MAAMkhD,EAAON,EAAO/gE,GAAK6gE,EAAWE,EAAO/gE,EAAI,GAAK8gE,EAC9CQ,EAAOP,EAAO/gE,GAAK8gE,EAAWC,EAAO/gE,EAAI,GAAK6gE,EACpDI,EAAUjjE,KAAKmI,IAAI86D,EAASI,GAC5BH,EAAUljE,KAAKmI,IAAI+6D,EAASI,GAC5BH,EAAUnjE,KAAKqI,IAAI86D,EAASE,GAC5BD,EAAUpjE,KAAKqI,IAAI+6D,EAASE,EAC9B,CACA,MAAO,CAACL,EAASC,EAASC,EAASC,EACrC,CAMA5mB,WAAAA,CAAYryC,EAAUtF,GAEpB,IAAIuE,GADJvE,EAAUA,GAAW,CAAC,GACHuE,KACdA,IACHA,EAAOxO,KAAKymE,gCAEd,MAAMrc,OACgBnqD,IAApBgK,EAAQmgD,QAAwBngD,EAAQmgD,QAAU,CAAC,EAAG,EAAG,EAAG,GACxDud,OAA8B1nE,IAApBgK,EAAQ09D,SAAwB19D,EAAQ09D,QACxD,IAAIn6D,EAEFA,OAD4BvN,IAA1BgK,EAAQuD,cACMvD,EAAQuD,mBACKvN,IAApBgK,EAAQ0D,QACD3N,KAAK87C,qBAAqB7xC,EAAQ0D,SAElC,EAGlB,MAAM6zC,EAAgBxhD,KAAKyhD,yBAAyBlyC,GAGpD,IAAId,EAAazO,KAAK0hD,+BAA+BF,EAAe,CAClEhzC,EAAK,GAAK47C,EAAQ,GAAKA,EAAQ,GAC/B57C,EAAK,GAAK47C,EAAQ,GAAKA,EAAQ,KAEjC37C,EAAaqS,MAAMrS,GACfjB,EACApI,KAAKqI,IAAIgB,EAAYjB,GACzBiB,EAAazO,KAAKsnE,yBAAyB74D,EAAYk5D,EAAU,EAAI,GAGrE,MAAMj5D,EAAW1O,KAAKmjB,cAChB+kD,EAAW9iE,KAAKgxB,IAAI1nB,GACpBu5D,EAAW7iE,KAAK8wB,IAAIxnB,GACpBi6D,GAAYvzC,EAAAA,EAAAA,IAAUosB,GAC5BmnB,EAAU,KAAQve,EAAQ,GAAKA,EAAQ,IAAM,EAAK37C,EAClDk6D,EAAU,KAAQve,EAAQ,GAAKA,EAAQ,IAAM,EAAK37C,EAClD,MAAMm6D,EAAUD,EAAU,GAAKV,EAAWU,EAAU,GAAKT,EACnDW,EAAUF,EAAU,GAAKV,EAAWU,EAAU,GAAKT,EACnDv5D,EAAS3O,KAAKu/C,qBAAqB,CAACqpB,EAASC,GAAUp6D,GACvDO,EAAW/E,EAAQ+E,SAAW/E,EAAQ+E,SAAW+d,EAAAA,QAE9B9sB,IAArBgK,EAAQw0B,SACVz+B,KAAKs/C,gBACH,CACE7wC,WAAYA,EACZE,OAAQA,EACR8vB,SAAUx0B,EAAQw0B,SAClBK,OAAQ70B,EAAQ60B,QAElB9vB,IAGFhP,KAAKshE,kBAAoB7yD,EACzBzO,KAAKqhE,cAAgB1yD,EACrB3O,KAAKimE,mBAAkB,GAAO,GAC9BrB,EAAkB51D,GAAU,GAEhC,CASA85D,QAAAA,CAASroE,EAAY+N,EAAM+D,GACzBvS,KAAK+oE,kBACHhtD,EAAAA,EAAAA,IAAmBtb,EAAYT,KAAKob,iBACpC5M,EACA+D,EAEJ,CAOAw2D,gBAAAA,CAAiBtoE,EAAY+N,EAAM+D,GACjCvS,KAAKokE,kBACHsD,EACEjnE,EACA+N,EACA+D,EACAvS,KAAKg/C,gBACLh/C,KAAKmjB,eAGX,CAUA6lD,oBAAAA,CAAqBr6D,EAAQF,EAAYC,EAAUF,GACjD,IAAI0xD,EACJ,MAAM9V,EAAUpqD,KAAKmqD,SACrB,GAAIC,GAAWz7C,EAAQ,CACrB,MAAM84D,EAAcznE,KAAKymE,8BAA8B/3D,GACjDu6D,EAAgBvB,EACpB/4D,EACAH,EACA,CAACi5D,EAAY,GAAK,EAAIrd,EAAQ,GAAIqd,EAAY,GAAK,EAAIrd,EAAQ,IAC/D37C,EACAC,GAEFwxD,EAAc,CACZvxD,EAAO,GAAKs6D,EAAc,GAC1Bt6D,EAAO,GAAKs6D,EAAc,GAE9B,CACA,OAAO/I,CACT,CAKA5/C,KAAAA,GACE,QAAStgB,KAAKo/C,0BAAgDn/C,IAAzBD,KAAKg/C,eAC5C,CAOAkqB,YAAAA,CAAaC,GACX,MAAMx6D,GAASuM,EAAAA,EAAAA,IAAiBlb,KAAKqhE,cAAerhE,KAAKob,iBACzDpb,KAAKopE,UAAU,CACbz6D,EAAO,GAAKw6D,EAAiB,GAC7Bx6D,EAAO,GAAKw6D,EAAiB,IAEjC,CAMAjqB,oBAAAA,CAAqBiqB,GACnB,MAAMx6D,EAAS3O,KAAKqhE,cACpBrhE,KAAKokE,kBAAkB,CACrBz1D,EAAO,GAAKw6D,EAAiB,GAC7Bx6D,EAAO,GAAKw6D,EAAiB,IAEjC,CASAE,gBAAAA,CAAiB9I,EAAO95C,GACtBA,EAASA,IAAU1K,EAAAA,EAAAA,IAAmB0K,EAAQzmB,KAAKob,iBACnDpb,KAAK8kD,yBAAyByb,EAAO95C,EACvC,CAQAq+B,wBAAAA,CAAyByb,EAAO95C,GAC9B,MAAMg0C,EAAWz6D,KAAK6e,gBAAkB7e,KAAKylE,iBACvCj3D,EAAOxO,KAAK8lE,iBAAiB9lE,KAAKmjB,eAClC04B,EAAgB77C,KAAKmkE,aAAa11D,WACtCzO,KAAKshE,kBAAoBf,EACzB,EACA/xD,EACAisD,GAGEh0C,IACFzmB,KAAKqhE,cAAgBrhE,KAAKgmE,oBAAoBnqB,EAAep1B,IAG/DzmB,KAAKshE,mBAAqBf,EAC1BvgE,KAAKimE,mBACP,CASAniB,UAAAA,CAAW9kB,EAAOvY,GAChBzmB,KAAKqpE,iBAAiBjkE,KAAKyjC,IAAI7oC,KAAKujE,aAAcvkC,GAAQvY,EAC5D,CASA6iD,cAAAA,CAAetqC,EAAOvY,GAChBA,IACFA,GAAS1K,EAAAA,EAAAA,IAAmB0K,EAAQzmB,KAAKob,kBAE3Cpb,KAAK4/C,uBAAuB5gB,EAAOvY,EACrC,CAMAm5B,sBAAAA,CAAuB5gB,EAAOvY,GAC5B,MAAMg0C,EAAWz6D,KAAK6e,gBAAkB7e,KAAKylE,iBACvC8D,EAAcvpE,KAAKmkE,aAAaz1D,SACpC1O,KAAKuhE,gBAAkBviC,EACvBy7B,GAEEh0C,IACFzmB,KAAKqhE,cAAgBrhE,KAAKmmE,sBAAsBoD,EAAa9iD,IAE/DzmB,KAAKuhE,iBAAmBviC,EACxBh/B,KAAKimE,mBACP,CAQAmD,SAAAA,CAAUz6D,GACR3O,KAAKokE,kBACHz1D,GAASoN,EAAAA,EAAAA,IAAmBpN,EAAQ3O,KAAKob,iBAAmBzM,EAEhE,CAMAy1D,iBAAAA,CAAkBz1D,GAChB3O,KAAKqhE,cAAgB1yD,EACrB3O,KAAKimE,mBACP,CAOAV,OAAAA,CAAQiE,EAAMxqC,GAGZ,OAFAh/B,KAAKghE,OAAOwI,IAASxqC,EACrBh/B,KAAKmL,UACEnL,KAAKghE,OAAOwI,EACrB,CAQAnF,aAAAA,CAAc51D,GACZzO,KAAKshE,kBAAoB7yD,EACzBzO,KAAKimE,mBACP,CAQA/hD,WAAAA,CAAYxV,GACV1O,KAAKuhE,gBAAkB7yD,EACvB1O,KAAKimE,mBACP,CAOAhmC,OAAAA,CAAQD,GACNhgC,KAAKqkE,cAAcrkE,KAAK87C,qBAAqB9b,GAC/C,CAUAimC,iBAAAA,CAAkBwD,EAAkBC,GAClC,MAAMjP,EACJz6D,KAAK6e,gBAAkB7e,KAAKylE,kBAAoBiE,EAG5CH,EAAcvpE,KAAKmkE,aAAaz1D,SACpC1O,KAAKuhE,gBACL9G,GAEIjsD,EAAOxO,KAAK8lE,iBAAiByD,GAC7B1tB,EAAgB77C,KAAKmkE,aAAa11D,WACtCzO,KAAKshE,kBACL,EACA9yD,EACAisD,GAEIkP,EAAY3pE,KAAKmkE,aAAax1D,OAClC3O,KAAKqhE,cACLxlB,EACArtC,EACAisD,EACAz6D,KAAKgpE,qBACHhpE,KAAKqhE,cACLxlB,EACA0tB,EACA/6D,IAIAxO,KAAKqM,IAAIw1D,EAAa/B,YAAcyJ,GACtCvpE,KAAKwM,IAAIq1D,EAAa/B,SAAUyJ,GAE9BvpE,KAAKqM,IAAIw1D,EAAahC,cAAgBhkB,IACxC77C,KAAKwM,IAAIq1D,EAAahC,WAAYhkB,GAClC77C,KAAKwM,IAAI,OAAQxM,KAAK4/B,WAAW,IAGhC+pC,GACA3pE,KAAKqM,IAAIw1D,EAAajC,UACtB19C,EAAAA,EAAAA,IAAOliB,KAAKqM,IAAIw1D,EAAajC,QAAS+J,IAEvC3pE,KAAKwM,IAAIq1D,EAAajC,OAAQ+J,GAG5B3pE,KAAK6e,iBAAmB4qD,GAC1BzpE,KAAK+/B,mBAEP//B,KAAK2hE,mBAAgB1hE,CACvB,CAWA6e,kBAAAA,CAAmB2f,EAAUmrC,EAAqBnjD,GAChDgY,OAAwBx+B,IAAbw+B,EAAyBA,EAAW,IAC/C,MAAMsmB,EAAY6kB,GAAuB,EAEnCL,EAAcvpE,KAAKmkE,aAAaz1D,SAAS1O,KAAKuhE,iBAC9C/yD,EAAOxO,KAAK8lE,iBAAiByD,GAC7B1tB,EAAgB77C,KAAKmkE,aAAa11D,WACtCzO,KAAKshE,kBACLvc,EACAv2C,GAEIm7D,EAAY3pE,KAAKmkE,aAAax1D,OAClC3O,KAAKqhE,cACLxlB,EACArtC,GACA,EACAxO,KAAKgpE,qBACHhpE,KAAKqhE,cACLxlB,EACA0tB,EACA/6D,IAIJ,GAAiB,IAAbiwB,IAAmBz+B,KAAK2hE,cAK1B,OAJA3hE,KAAKshE,kBAAoBzlB,EACzB77C,KAAKuhE,gBAAkBgI,EACvBvpE,KAAKqhE,cAAgBsI,OACrB3pE,KAAKimE,oBAIPx/C,EAASA,IAAwB,IAAbgY,EAAiBz+B,KAAK2hE,mBAAgB1hE,GAC1DD,KAAK2hE,mBAAgB1hE,EAGnBD,KAAKg/C,kBAAoBnD,GACzB77C,KAAKmjB,gBAAkBomD,GACtBvpE,KAAKo/C,sBACLl9B,EAAAA,EAAAA,IAAOliB,KAAKo/C,oBAAqBuqB,KAE9B3pE,KAAK6e,gBACP7e,KAAK+/B,mBAGP//B,KAAKs/C,gBAAgB,CACnB5wC,SAAU66D,EACV56D,OAAQg7D,EACRl7D,WAAYotC,EACZpd,SAAUA,EACVK,OAAQC,EAAAA,GACRtY,OAAQA,IAGd,CAQAo4B,gBAAAA,GACE7+C,KAAK8e,mBAAmB,GAExB9e,KAAKulE,QAAQtnD,EAAAA,EAASE,YAAa,EACrC,CAUAqhC,cAAAA,CAAe/gB,EAAUmrC,EAAqBnjD,GAC5CA,EAASA,IAAU1K,EAAAA,EAAAA,IAAmB0K,EAAQzmB,KAAKob,iBACnDpb,KAAK6pE,uBAAuBprC,EAAUmrC,EAAqBnjD,EAC7D,CASAojD,sBAAAA,CAAuBprC,EAAUmrC,EAAqBnjD,GAC/CzmB,KAAKylE,mBAGVzlE,KAAKulE,QAAQtnD,EAAAA,EAASE,aAAc,GACpCne,KAAK8e,mBAAmB2f,EAAUmrC,EAAqBnjD,GACzD,CASA84B,oBAAAA,CAAqB0lB,EAAcE,GACjC,MAAM32D,EAAOxO,KAAK8lE,iBAAiB9lE,KAAKmjB,eACxC,OAAOnjB,KAAKmkE,aAAax1D,OACvBs2D,EACAE,GAAoBnlE,KAAKg/C,gBACzBxwC,EAEJ,CAWAsxB,kBAAAA,CAAmBgqC,EAAY/kB,GAC7B,MAAMglB,EAAY/pE,KAAK87C,qBAAqBguB,GAC5C,OAAO9pE,KAAK6mE,qBACV7mE,KAAKsnE,yBAAyByC,EAAWhlB,GAE7C,CAWAuiB,wBAAAA,CAAyBnC,EAAkBpgB,GACzCA,EAAYA,GAAa,EACzB,MAAMv2C,EAAOxO,KAAK8lE,iBAAiB9lE,KAAKmjB,eAExC,OAAOnjB,KAAKmkE,aAAa11D,WAAW02D,EAAkBpgB,EAAWv2C,EACnE,EAOF,SAASo2D,EAAkB51D,EAAUg7D,GACnC5mE,YAAW,WACT4L,EAASg7D,EACX,GAAG,EACL,CAkMO,SAAS1E,EAAgBR,GAC9B,QAAIA,EAAUE,cAAgBF,EAAUG,gBACjCgF,EAAAA,EAAAA,IAAiBnF,EAAUE,aAAcF,EAAUG,iBAItDH,EAAUI,mBAAqBJ,EAAUK,kBAGzCL,EAAUM,iBAAmBN,EAAUO,eAI7C,CAUA,SAASqC,EAAkBjnE,EAAY+N,EAAM+D,EAAU9D,EAAYC,GAEjE,MAAMu5D,EAAW7iE,KAAK8wB,KAAKxnB,GAC3B,IAAIw5D,EAAW9iE,KAAKgxB,KAAK1nB,GACrB+5D,EAAOhoE,EAAW,GAAKwnE,EAAWxnE,EAAW,GAAKynE,EAClDQ,EAAOjoE,EAAW,GAAKwnE,EAAWxnE,EAAW,GAAKynE,EACtDO,IAASj6D,EAAK,GAAK,EAAI+D,EAAS,IAAM9D,EACtCi6D,IAASn2D,EAAS,GAAK/D,EAAK,GAAK,GAAKC,EAGtCy5D,GAAYA,EAIZ,MAAO,CAHSO,EAAOR,EAAWS,EAAOR,EACzBQ,EAAOT,EAAWQ,EAAOP,EAG3C,CAEA,S,0ICl/DA,QAnHA,MAUEgC,UAAAA,CAAW36D,EAAUD,EAASoM,EAAUyuD,EAAsBnjE,GAAQ,CAOtEojE,YAAAA,CAAa76D,GAAW,CAOxBg4C,QAAAA,CAASj1C,GAAQ,CAOjB+3D,UAAAA,CAAWC,EAAgBh7D,EAAStI,GAAQ,CAO5CujE,WAAAA,CAAYj7D,EAASgD,EAAOtL,GAAQ,CAOpCwjE,sBAAAA,CAAuBC,EAA4Bn7D,EAAStI,GAAQ,CAOpE0jE,cAAAA,CAAeC,EAAoBr7D,EAAStI,GAAQ,CAOpD4jE,mBAAAA,CAAoBC,EAAyBv7D,EAAStI,GAAQ,CAO9D8jE,cAAAA,CAAeC,EAAoBz7D,EAAStI,GAAQ,CAOpDgkE,gBAAAA,CAAiBC,EAAsB37D,EAAStI,GAAQ,CAOxDkkE,SAAAA,CAAUC,EAAe77D,EAAStI,GAAQ,CAO1CokE,WAAAA,CAAYC,EAAiB/7D,EAAStI,GAAQ,CAO9CskE,QAAAA,CAAS/7D,EAAUD,EAAStI,GAAQ,CAMpCukE,kBAAAA,CAAmBzjC,EAAWwnB,GAAc,CAM5Ckc,aAAAA,CAAcC,EAAYC,GAAyB,CAMnDC,YAAAA,CAAaC,EAAWF,GAAyB,G,cCnHnD,MAAMG,EAAc,CAClBC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAMGC,EAAkB,CAACd,EAAYS,MAK/BM,EAAoB,CAACf,EAAYa,QAKjCG,EAAuB,CAAChB,EAAYE,YAKpCe,EAAuB,CAACjB,EAAYI,YAEjD,IC6oBA,QA1pBA,cAA4Bc,EAO1BptE,WAAAA,CAAYknB,EAAW45C,EAAWhyD,EAAYmH,GAC5C7V,QAMAC,KAAK6mB,UAAYA,EAOjB7mB,KAAKygE,UAAYA,EAMjBzgE,KAAK4V,WAAaA,EAMlB5V,KAAKgtE,aAAe,EAOpBhtE,KAAKyO,WAAaA,EAMlBzO,KAAKitE,2BAA6B,KAMlCjtE,KAAKktE,2BAA6B,KAMlCltE,KAAKmtE,mBAAqB,KAM1BntE,KAAKotE,aAAe,GAMpBptE,KAAK8Q,YAAc,GAMnB9Q,KAAKqtE,eAAiB,GAMtBrtE,KAAKstE,yBAA2B,GAMhCttE,KAAK+I,MAA+D,CAAC,CACvE,CAOAwkE,eAAAA,CAAgBC,GACd,MAAM53D,EAAa5V,KAAK4V,WACxB,OAAqB,GAAdA,EACH43D,EACAA,EAAU3tE,KAAI,SAAU4tE,GACtB,OAAOA,EAAO73D,CAChB,GACN,CAQA83D,0BAAAA,CAA2Bn5C,EAAiBhN,GAC1C,MAAM3Z,EAAS5N,KAAK2tE,uBACdr9D,EAAWtQ,KAAKqtE,eAChBv8D,EAAc9Q,KAAK8Q,YACzB,IAAI88D,EAAQ98D,EAAY1M,OACxB,IAAK,IAAIgD,EAAI,EAAGwE,EAAK2oB,EAAgBnwB,OAAQgD,EAAIwE,EAAIxE,GAAKmgB,EACxDjX,EAAS,GAAKikB,EAAgBntB,GAC9BkJ,EAAS,GAAKikB,EAAgBntB,EAAI,IAC9BqsB,EAAAA,EAAAA,IAAmB7lB,EAAQ0C,KAC7BQ,EAAY88D,KAAWt9D,EAAS,GAChCQ,EAAY88D,KAAWt9D,EAAS,IAGpC,OAAOs9D,CACT,CAYAC,yBAAAA,CACEt5C,EACAC,EACAC,EACAlN,EACAumD,EACAC,GAEA,MAAMj9D,EAAc9Q,KAAK8Q,YACzB,IAAI88D,EAAQ98D,EAAY1M,OACxB,MAAMwJ,EAAS5N,KAAK2tE,uBAChBI,IACFv5C,GAAUjN,GAEZ,IAAIymD,EAAaz5C,EAAgBC,GAC7By5C,EAAa15C,EAAgBC,EAAS,GAC1C,MAAM05C,EAAYluE,KAAKqtE,eACvB,IAEIjmE,EAAG+mE,EAASC,EAFZC,GAAU,EAGd,IAAKjnE,EAAIotB,EAASjN,EAAQngB,EAAIqtB,EAAKrtB,GAAKmgB,EACtC2mD,EAAU,GAAK35C,EAAgBntB,GAC/B8mE,EAAU,GAAK35C,EAAgBntB,EAAI,GACnCgnE,GAAUx6C,EAAAA,EAAAA,IAAuBhmB,EAAQsgE,GACrCE,IAAYD,GACVE,IACFv9D,EAAY88D,KAAWI,EACvBl9D,EAAY88D,KAAWK,EACvBI,GAAU,GAEZv9D,EAAY88D,KAAWM,EAAU,GACjCp9D,EAAY88D,KAAWM,EAAU,IACxBE,IAAYt6C,EAAAA,EAAaM,cAClCtjB,EAAY88D,KAAWM,EAAU,GACjCp9D,EAAY88D,KAAWM,EAAU,GACjCG,GAAU,GAEVA,GAAU,EAEZL,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBC,EAAUC,EAQZ,OAJKN,GAAUO,GAAYjnE,IAAMotB,EAASjN,KACxCzW,EAAY88D,KAAWI,EACvBl9D,EAAY88D,KAAWK,GAElBL,CACT,CAUAU,sBAAAA,CAAuB/5C,EAAiBC,EAAQsE,EAAMvR,EAAQgnD,GAC5D,IAAK,IAAInnE,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACXonE,EAAaxuE,KAAK6tE,0BACtBt5C,EACAC,EACAC,EACAlN,GACA,GACA,GAEFgnD,EAAYzpE,KAAK0pE,GACjBh6C,EAASC,CACX,CACA,OAAOD,CACT,CAUA01C,UAAAA,CAAW36D,EAAUD,EAASoM,EAAUyuD,EAAsBnjE,GAC5DhH,KAAKyuE,cAAcl/D,EAAUD,EAAStI,GAEtC,MAAMpH,EAAO2P,EAASuX,UAChBS,EAAShY,EAAS64D,YAClBsG,EAAe1uE,KAAK8Q,YAAY1M,OAEtC,IAAImwB,EAAiBi6C,EAAYD,EAAaI,EAC1Cn6C,EAEJ,OAAQ50B,GACN,IAAK,eACH20B,EAEIhlB,EACAqqB,6BACJ+0C,EAAe,GACf,MAAMntC,EAEFjyB,EACA2kD,WACJ1/B,EAAS,EACT,IAAK,IAAIptB,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAMwnE,EAAS,GACfp6C,EAASx0B,KAAKsuE,uBACZ/5C,EACAC,EACAgN,EAAMp6B,GACNmgB,EACAqnD,GAEFD,EAAa7pE,KAAK8pE,EACpB,CACA5uE,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkB3C,OAClBwC,EACAC,EACAp/D,EACAmM,EACAu4C,EAAAA,GACAjtD,IAEFhH,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkB3C,OAClBwC,EACAC,EACAp/D,EACA46D,GAAwBzuD,EACxBu4C,EAAAA,GACAjtD,IAEF,MACF,IAAK,UACL,IAAK,kBACHunE,EAAc,GACdh6C,EACU,WAAR30B,EAEM2P,EACAqqB,6BACFrqB,EAAS+pB,qBACf9E,EAASx0B,KAAKsuE,uBACZ/5C,EACA,EAEEhlB,EACA0qB,UACF1S,EACAgnD,GAEFvuE,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkB3C,OAClBwC,EACAH,EACAh/D,EACAmM,EACAse,EAAAA,GACAhzB,IAEFhH,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkB3C,OAClBwC,EACAH,EACAh/D,EACA46D,GAAwBzuD,EACxBse,EAAAA,GACAhzB,IAEF,MACF,IAAK,aACL,IAAK,SACHutB,EAAkBhlB,EAAS+pB,qBAC3Bk1C,EAAaxuE,KAAK6tE,0BAChBt5C,EACA,EACAA,EAAgBnwB,OAChBmjB,GACA,GACA,GAEFvnB,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkB3C,OAClBwC,EACAF,EACAj/D,EACAmM,EACA6c,EAAAA,GACAvxB,IAEFhH,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkB3C,OAClBwC,EACAF,EACAj/D,EACA46D,GAAwBzuD,EACxB6c,EAAAA,GACAvxB,IAEF,MACF,IAAK,aACHutB,EAAkBhlB,EAAS+pB,qBAC3Bk1C,EAAaxuE,KAAK0tE,2BAA2Bn5C,EAAiBhN,GAE1DinD,EAAaE,IACf1uE,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkB3C,OAClBwC,EACAF,EACAj/D,EACAmM,EACA6c,EAAAA,GACAvxB,IAEFhH,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkB3C,OAClBwC,EACAF,EACAj/D,EACA46D,GAAwBzuD,EACxB6c,EAAAA,GACAvxB,KAGJ,MACF,IAAK,QACHutB,EAAkBhlB,EAAS+pB,qBAC3Bt5B,KAAK8Q,YAAYhM,KAAKyvB,EAAgB,GAAIA,EAAgB,IAC1Di6C,EAAaxuE,KAAK8Q,YAAY1M,OAE9BpE,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkB3C,OAClBwC,EACAF,EACAj/D,EACAmM,OACAzb,EACA+G,IAEFhH,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkB3C,OAClBwC,EACAF,EACAj/D,EACA46D,GAAwBzuD,OACxBzb,EACA+G,IAKNhH,KAAK8uE,YAAYx/D,EACnB,CAQAm/D,aAAAA,CAAcl/D,EAAUD,EAAStI,GAC/BhH,KAAKitE,2BAA6B,CAChC4B,EAAkB/C,eAClBx8D,EACA,EACAC,EACAvI,GAEFhH,KAAKotE,aAAatoE,KAAK9E,KAAKitE,4BAC5BjtE,KAAKktE,2BAA6B,CAChC2B,EAAkB/C,eAClBx8D,EACA,EACAC,EACAvI,GAEFhH,KAAKstE,yBAAyBxoE,KAAK9E,KAAKktE,2BAC1C,CAKA6B,MAAAA,GACE,MAAO,CACL3B,aAAcptE,KAAKotE,aACnBE,yBAA0BttE,KAAKstE,yBAC/Bx8D,YAAa9Q,KAAK8Q,YAEtB,CAKAk+D,+BAAAA,GACE,MAAM1B,EAA2BttE,KAAKstE,yBAItC,IAAIlmE,EAFJkmE,EAAyB2B,UAGzB,MAAMjnE,EAAIslE,EAAyBlpE,OACnC,IAAI8qE,EACAtvE,EACAw7C,GAAS,EACb,IAAKh0C,EAAI,EAAGA,EAAIY,IAAKZ,EACnB8nE,EAAc5B,EAAyBlmE,GACvCxH,EAA0DsvE,EAAY,GAClEtvE,GAAQivE,EAAkBxC,aAC5BjxB,EAAQh0C,EACCxH,GAAQivE,EAAkB/C,iBACnCoD,EAAY,GAAK9nE,GACjB+nE,EAAAA,EAAAA,IAAgBnvE,KAAKstE,yBAA0BlyB,EAAOh0C,GACtDg0C,GAAS,EAGf,CAOAg0B,gBAAAA,CACEtnC,GAEA,IADA/+B,EAAK88B,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,IAA4D,EAEjE,GAAIiC,EAAW,CACb,MAAMunC,EAAiBvnC,EAAUjH,WACjC93B,EAAMumE,iBACJD,GAC0B,kBAAnBA,GACP,QAASA,EACLrvE,KAAK4V,WACL,EACN7M,EAAM++B,WAAYooB,EAAAA,EAAAA,GAChBmf,GAAkCxe,EAAAA,GAEtC,MACE9nD,EAAM++B,eAAY7nC,EAEpB,OAAO8I,CACT,CAOAwmE,kBAAAA,CACEjgB,GAEA,IADAvmD,EAAK88B,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,IAA4D,EAEjE,GAAIypB,EAAa,CACf,MAAMkgB,EAAmBlgB,EAAYzuB,WACrC93B,EAAMumD,aAAcY,EAAAA,EAAAA,GAClBsf,GAAsCrf,EAAAA,IAExC,MAAMsf,EAAqBngB,EAAYkB,aACvCznD,EAAMwmD,aACmBtvD,IAAvBwvE,EAAmCA,EAAqBjgB,EAAAA,GAC1D,MAAMkgB,EAAsBpgB,EAAYe,cACxCtnD,EAAM2mD,SAAWggB,EACbA,EAAoB3kE,QACpB4kE,EAAAA,GACJ,MAAMC,EAA4BtgB,EAAYgB,oBAC9CvnD,EAAM4mD,eAAiBigB,GAEnBC,EAAAA,GACJ,MAAMC,EAAsBxgB,EAAYiB,cACxCxnD,EAAMylD,cACoBvuD,IAAxB6vE,EACIA,EACArgB,EAAAA,GACN,MAAMsgB,EAAmBzgB,EAAYr/C,WACrClH,EAAM+nD,eACiB7wD,IAArB8vE,EAAiCA,EAAmB3f,EAAAA,GACtD,MAAM4f,EAAwB1gB,EAAYmB,gBAC1C1nD,EAAM2lD,gBACsBzuD,IAA1B+vE,EACIA,EACAtf,EAAAA,GAEF3nD,EAAM+nD,UAAY9wD,KAAKgtE,eACzBhtE,KAAKgtE,aAAejkE,EAAM+nD,UAE1B9wD,KAAKmtE,mBAAqB,KAE9B,MACEpkE,EAAMumD,iBAAcrvD,EACpB8I,EAAMwmD,aAAUtvD,EAChB8I,EAAM2mD,SAAW,KACjB3mD,EAAM4mD,oBAAiB1vD,EACvB8I,EAAMylD,cAAWvuD,EACjB8I,EAAM+nD,eAAY7wD,EAClB8I,EAAM2lD,gBAAazuD,EAErB,OAAO8I,CACT,CAOAwiE,kBAAAA,CAAmBzjC,EAAWwnB,GAC5B,MAAMvmD,EAAQ/I,KAAK+I,MACnB/I,KAAKovE,iBAAiBtnC,EAAW/+B,GACjC/I,KAAKuvE,mBAAmBjgB,EAAavmD,EACvC,CAMAknE,UAAAA,CAAWlnE,GACT,MAAM++B,EAAY/+B,EAAM++B,UAElB6kC,EAAkB,CAACkC,EAAkBrC,eAAgB1kC,GAK3D,MAJyB,kBAAdA,GAET6kC,EAAgB7nE,KAAKiE,EAAMumE,kBAEtB3C,CACT,CAKAuD,WAAAA,CAAYnnE,GACV/I,KAAKotE,aAAatoE,KAAK9E,KAAKmwE,aAAapnE,GAC3C,CAMAonE,YAAAA,CAAapnE,GACX,MAAO,CACL8lE,EAAkBpC,iBAClB1jE,EAAMumD,YACNvmD,EAAM+nD,UAAY9wD,KAAK4V,WACvB7M,EAAMwmD,QACNxmD,EAAMylD,SACNzlD,EAAM2lD,WACN3lD,EAAM2mD,SAAW1vD,KAAKutE,gBAAgBxkE,EAAM2mD,UAAY,KACxD3mD,EAAM4mD,eAAiB3vD,KAAK4V,WAEhC,CAMAw6D,eAAAA,CAAgBrnE,EAAOknE,GACrB,MAAMnoC,EAAY/+B,EAAM++B,UACC,kBAAdA,GAA0B/+B,EAAMsnE,kBAAoBvoC,IAC7D9nC,KAAKotE,aAAatoE,KAAKmrE,EAAWzgE,KAAKxP,KAAM+I,IAC7CA,EAAMsnE,iBAAmBvoC,EAE7B,CAMAwoC,iBAAAA,CAAkBvnE,EAAOmnE,GACvB,MAAM5gB,EAAcvmD,EAAMumD,YACpBC,EAAUxmD,EAAMwmD,QAChBG,EAAW3mD,EAAM2mD,SACjBC,EAAiB5mD,EAAM4mD,eACvBnB,EAAWzlD,EAAMylD,SACjBsC,EAAY/nD,EAAM+nD,UAClBpC,EAAa3lD,EAAM2lD,YAEvB3lD,EAAMwnE,oBAAsBjhB,GAC5BvmD,EAAMynE,gBAAkBjhB,GACvBG,GAAY3mD,EAAM0nE,mBAChBvuD,EAAAA,EAAAA,IAAOnZ,EAAM0nE,gBAAiB/gB,IACjC3mD,EAAM2nE,uBAAyB/gB,GAC/B5mD,EAAM4nE,iBAAmBniB,GACzBzlD,EAAM6nE,kBAAoB9f,GAC1B/nD,EAAM8nE,mBAAqBniB,KAE3BwhB,EAAY1gE,KAAKxP,KAAM+I,GACvBA,EAAMwnE,mBAAqBjhB,EAC3BvmD,EAAMynE,eAAiBjhB,EACvBxmD,EAAM0nE,gBAAkB/gB,EACxB3mD,EAAM2nE,sBAAwB/gB,EAC9B5mD,EAAM4nE,gBAAkBniB,EACxBzlD,EAAM6nE,iBAAmB9f,EACzB/nD,EAAM8nE,kBAAoBniB,EAE9B,CAKAogB,WAAAA,CAAYx/D,GACVtP,KAAKitE,2BAA2B,GAAKjtE,KAAKotE,aAAahpE,OACvDpE,KAAKitE,2BAA6B,KAClCjtE,KAAKktE,2BAA2B,GAAKltE,KAAKstE,yBAAyBlpE,OACnEpE,KAAKktE,2BAA6B,KAClC,MAAM4D,EAAyB,CAACjC,EAAkBxC,aAAc/8D,GAChEtP,KAAKotE,aAAatoE,KAAKgsE,GACvB9wE,KAAKstE,yBAAyBxoE,KAAKgsE,EACrC,CASAnD,oBAAAA,GACE,IAAK3tE,KAAKmtE,qBACRntE,KAAKmtE,oBAAqB7rD,EAAAA,EAAAA,IAAMthB,KAAKygE,WACjCzgE,KAAKgtE,aAAe,GAAG,CACzB,MAAMx6D,EAASxS,KAAKyO,YAAczO,KAAKgtE,aAAe,GAAM,GAC5D35C,EAAAA,EAAAA,GAAOrzB,KAAKmtE,mBAAoB36D,EAAOxS,KAAKmtE,mBAC9C,CAEF,OAAOntE,KAAKmtE,kBACd,GC7YF,QAjSA,cAAiC4D,EAO/BpxE,WAAAA,CAAYknB,EAAW45C,EAAWhyD,EAAYmH,GAC5C7V,MAAM8mB,EAAW45C,EAAWhyD,EAAYmH,GAMxC5V,KAAK+7D,mBAAqB,KAM1B/7D,KAAKg8D,OAAS,KAMdh8D,KAAKgxE,sBAAmB/wE,EAMxBD,KAAKixE,cAAWhxE,EAMhBD,KAAKkxE,cAAWjxE,EAMhBD,KAAKmxE,aAAUlxE,EAMfD,KAAKqiB,cAAWpiB,EAMhBD,KAAKoxE,cAAWnxE,EAMhBD,KAAKqxE,cAAWpxE,EAMhBD,KAAKsiB,qBAAkBriB,EAMvBD,KAAKwiB,eAAYviB,EAMjBD,KAAKyiB,YAASxiB,EAMdD,KAAKsxE,YAASrxE,EAMdD,KAAK+iB,oBAAiB9iB,EAOtBD,KAAKuxE,6BAA0BtxE,CACjC,CAQAirE,SAAAA,CAAUC,EAAe77D,EAAStI,GAChC,IACGhH,KAAKg8D,QACLh8D,KAAKygE,aACHhtC,EAAAA,EAAAA,IAAmBzzB,KAAKygE,UAAW0K,EAAc7xC,sBAEpD,OAEFt5B,KAAKyuE,cAActD,EAAe77D,EAAStI,GAC3C,MAAMutB,EAAkB42C,EAAc7xC,qBAChC/R,EAAS4jD,EAAc/C,YACvBoJ,EAAUxxE,KAAK8Q,YAAY1M,OAC3BwpE,EAAQ5tE,KAAK0tE,2BAA2Bn5C,EAAiBhN,GAC/DvnB,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkBzC,WAClBoF,EACA5D,EACA5tE,KAAKg8D,OAELh8D,KAAKixE,SAAWjxE,KAAKgxE,iBACrBhxE,KAAKkxE,SAAWlxE,KAAKgxE,iBACrB5rE,KAAKgpD,KAAKpuD,KAAKmxE,QAAUnxE,KAAKgxE,kBAC9BhxE,KAAKqiB,SACLriB,KAAKoxE,SAAWpxE,KAAKgxE,iBACrBhxE,KAAKqxE,SAAWrxE,KAAKgxE,iBACrBhxE,KAAKsiB,gBACLtiB,KAAKwiB,UACL,CACGxiB,KAAKyiB,OAAO,GAAKziB,KAAK4V,WAAc5V,KAAKgxE,iBACzChxE,KAAKyiB,OAAO,GAAKziB,KAAK4V,WAAc5V,KAAKgxE,kBAE5C5rE,KAAKgpD,KAAKpuD,KAAKsxE,OAAStxE,KAAKgxE,kBAC7BhxE,KAAK+iB,eACL/iB,KAAKuxE,0BAEPvxE,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBzC,WAClBoF,EACA5D,EACA5tE,KAAK+7D,mBAEL/7D,KAAKixE,SACLjxE,KAAKkxE,SACLlxE,KAAKmxE,QACL,EACAnxE,KAAKoxE,SACLpxE,KAAKqxE,SACLrxE,KAAKsiB,gBACLtiB,KAAKwiB,UACLxiB,KAAKyiB,OACLziB,KAAKsxE,OACLtxE,KAAK+iB,eACL/iB,KAAKuxE,0BAEPvxE,KAAK8uE,YAAYx/D,EACnB,CAQAw7D,cAAAA,CAAeC,EAAoBz7D,EAAStI,GAC1C,IAAKhH,KAAKg8D,OACR,OAEFh8D,KAAKyuE,cAAc1D,EAAoBz7D,EAAStI,GAChD,MAAMutB,EAAkBw2C,EAAmBzxC,qBACrCm4C,EAA0B,GAChC,IACE,IAAIrqE,EAAI,EAAGwE,EAAK2oB,EAAgBnwB,OAChCgD,EAAIwE,EACJxE,GAAK2jE,EAAmB3C,YAGrBpoE,KAAKygE,aACNhtC,EAAAA,EAAAA,IAAmBzzB,KAAKygE,UAAWlsC,EAAgBxpB,MAAM3D,EAAGA,EAAI,KAEhEqqE,EAAwB3sE,KACtByvB,EAAgBntB,GAChBmtB,EAAgBntB,EAAI,IAI1B,MAAMoqE,EAAUxxE,KAAK8Q,YAAY1M,OAC3BwpE,EAAQ5tE,KAAK0tE,2BAA2B+D,EAAyB,GACvEzxE,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkBzC,WAClBoF,EACA5D,EACA5tE,KAAKg8D,OAELh8D,KAAKixE,SAAWjxE,KAAKgxE,iBACrBhxE,KAAKkxE,SAAWlxE,KAAKgxE,iBACrB5rE,KAAKgpD,KAAKpuD,KAAKmxE,QAAUnxE,KAAKgxE,kBAC9BhxE,KAAKqiB,SACLriB,KAAKoxE,SAAWpxE,KAAKgxE,iBACrBhxE,KAAKqxE,SAAWrxE,KAAKgxE,iBACrBhxE,KAAKsiB,gBACLtiB,KAAKwiB,UACL,CACGxiB,KAAKyiB,OAAO,GAAKziB,KAAK4V,WAAc5V,KAAKgxE,iBACzChxE,KAAKyiB,OAAO,GAAKziB,KAAK4V,WAAc5V,KAAKgxE,kBAE5C5rE,KAAKgpD,KAAKpuD,KAAKsxE,OAAStxE,KAAKgxE,kBAC7BhxE,KAAK+iB,eACL/iB,KAAKuxE,0BAEPvxE,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBzC,WAClBoF,EACA5D,EACA5tE,KAAK+7D,mBAEL/7D,KAAKixE,SACLjxE,KAAKkxE,SACLlxE,KAAKmxE,QACL,EACAnxE,KAAKoxE,SACLpxE,KAAKqxE,SACLrxE,KAAKsiB,gBACLtiB,KAAKwiB,UACLxiB,KAAKyiB,OACLziB,KAAKsxE,OACLtxE,KAAK+iB,eACL/iB,KAAKuxE,0BAEPvxE,KAAK8uE,YAAYx/D,EACnB,CAMAy/D,MAAAA,GAgBE,OAfA/uE,KAAKgvE,kCAELhvE,KAAKixE,cAAWhxE,EAChBD,KAAKkxE,cAAWjxE,EAChBD,KAAK+7D,mBAAqB,KAC1B/7D,KAAKg8D,OAAS,KACdh8D,KAAKgxE,sBAAmB/wE,EACxBD,KAAKmxE,aAAUlxE,EACfD,KAAKyiB,YAASxiB,EACdD,KAAKqiB,cAAWpiB,EAChBD,KAAKoxE,cAAWnxE,EAChBD,KAAKqxE,cAAWpxE,EAChBD,KAAKsiB,qBAAkBriB,EACvBD,KAAKwiB,eAAYviB,EACjBD,KAAKsxE,YAASrxE,EACPF,MAAMgvE,QACf,CAOAvD,aAAAA,CAAcC,EAAYiG,GACxB,MAAMjrD,EAASglD,EAAWjoD,YACpBhV,EAAOi9D,EAAWhxD,UAClBk3D,EAASlG,EAAW3nD,YAC1B9jB,KAAKgxE,iBAAmBvF,EAAW9nD,cAAc3jB,KAAK4V,YACtD5V,KAAKixE,SAAWxqD,EAAO,GACvBzmB,KAAKkxE,SAAWzqD,EAAO,GACvBzmB,KAAK+7D,mBAAqB0P,EAAW/nD,uBACrC1jB,KAAKg8D,OAASyP,EAAWhoD,SAASzjB,KAAK4V,YACvC5V,KAAKmxE,QAAU3iE,EAAK,GACpBxO,KAAKqiB,SAAWopD,EAAWvoD,aAC3BljB,KAAKoxE,SAAWO,EAAO,GACvB3xE,KAAKqxE,SAAWM,EAAO,GACvB3xE,KAAKsiB,gBAAkBmpD,EAAWroD,oBAClCpjB,KAAKwiB,UAAYipD,EAAWtoD,cAC5BnjB,KAAKyiB,OAASgpD,EAAWloD,gBACzBvjB,KAAKsxE,OAAS9iE,EAAK,GACnBxO,KAAK+iB,eAAiB0oD,EAAWnoD,mBACjCtjB,KAAKuxE,wBAA0BG,CACjC,GC7HF,QA9JA,cAAsCX,EAOpCpxE,WAAAA,CAAYknB,EAAW45C,EAAWhyD,EAAYmH,GAC5C7V,MAAM8mB,EAAW45C,EAAWhyD,EAAYmH,EAC1C,CAUAg8D,oBAAAA,CAAqBr9C,EAAiBC,EAAQC,EAAKlN,GACjD,MAAMiqD,EAAUxxE,KAAK8Q,YAAY1M,OAC3BwpE,EAAQ5tE,KAAK6tE,0BACjBt5C,EACAC,EACAC,EACAlN,GACA,GACA,GAEIsqD,EAA0B,CAC9BhD,EAAkBtC,gBAClBiF,EACA5D,GAIF,OAFA5tE,KAAKotE,aAAatoE,KAAK+sE,GACvB7xE,KAAKstE,yBAAyBxoE,KAAK+sE,GAC5Bp9C,CACT,CAQAi2C,cAAAA,CAAeC,EAAoBr7D,EAAStI,GAC1C,MAAM+B,EAAQ/I,KAAK+I,MACbumD,EAAcvmD,EAAMumD,YACpBwB,EAAY/nD,EAAM+nD,UACxB,QAAoB7wD,IAAhBqvD,QAA2CrvD,IAAd6wD,EAC/B,OAEF9wD,KAAKswE,kBAAkBvnE,EAAO/I,KAAKkwE,aACnClwE,KAAKyuE,cAAc9D,EAAoBr7D,EAAStI,GAChDhH,KAAKstE,yBAAyBxoE,KAC5B,CACE+pE,EAAkBpC,iBAClB1jE,EAAMumD,YACNvmD,EAAM+nD,UACN/nD,EAAMwmD,QACNxmD,EAAMylD,SACNzlD,EAAM2lD,WACNihB,EAAAA,GACAE,EAAAA,IAEFhD,GAEF,MAAMt4C,EAAkBo2C,EAAmBrxC,qBACrC/R,EAASojD,EAAmBvC,YAClCpoE,KAAK4xE,qBACHr9C,EACA,EACAA,EAAgBnwB,OAChBmjB,GAEFvnB,KAAKstE,yBAAyBxoE,KAAK8nE,GACnC5sE,KAAK8uE,YAAYx/D,EACnB,CAQAs7D,mBAAAA,CAAoBC,EAAyBv7D,EAAStI,GACpD,MAAM+B,EAAQ/I,KAAK+I,MACbumD,EAAcvmD,EAAMumD,YACpBwB,EAAY/nD,EAAM+nD,UACxB,QAAoB7wD,IAAhBqvD,QAA2CrvD,IAAd6wD,EAC/B,OAEF9wD,KAAKswE,kBAAkBvnE,EAAO/I,KAAKkwE,aACnClwE,KAAKyuE,cAAc5D,EAAyBv7D,EAAStI,GACrDhH,KAAKstE,yBAAyBxoE,KAC5B,CACE+pE,EAAkBpC,iBAClB1jE,EAAMumD,YACNvmD,EAAM+nD,UACN/nD,EAAMwmD,QACNxmD,EAAMylD,SACNzlD,EAAM2lD,WACNihB,EAAAA,GACAE,EAAAA,IAEFhD,GAEF,MAAM/zC,EAAO+xC,EAAwB5wC,UAC/B1F,EAAkBs2C,EAAwBvxC,qBAC1C/R,EAASsjD,EAAwBzC,YACvC,IAAI5zC,EAAS,EACb,IAAK,IAAIptB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1CotB,EAASx0B,KAAK4xE,qBACZr9C,EACAC,EACuBsE,EAAK1xB,GAC5BmgB,GAGJvnB,KAAKstE,yBAAyBxoE,KAAK8nE,GACnC5sE,KAAK8uE,YAAYx/D,EACnB,CAMAy/D,MAAAA,GACE,MAAMhmE,EAAQ/I,KAAK+I,MASnB,YAPsB9I,GAApB8I,EAAM+oE,YACN/oE,EAAM+oE,YAAc9xE,KAAK8Q,YAAY1M,QAErCpE,KAAKotE,aAAatoE,KAAK8nE,GAEzB5sE,KAAKgvE,kCACLhvE,KAAK+I,MAAQ,KACNhJ,MAAMgvE,QACf,CAMAmB,WAAAA,CAAYnnE,QAEY9I,GAApB8I,EAAM+oE,YACN/oE,EAAM+oE,YAAc9xE,KAAK8Q,YAAY1M,SAErCpE,KAAKotE,aAAatoE,KAAK8nE,GACvB7jE,EAAM+oE,WAAa9xE,KAAK8Q,YAAY1M,QAEtC2E,EAAM+oE,WAAa,EACnB/xE,MAAMmwE,YAAYnnE,GAClB/I,KAAKotE,aAAatoE,KAAK+nE,EACzB,G,cCiGF,QArPA,cAAmCkE,EAOjCpxE,WAAAA,CAAYknB,EAAW45C,EAAWhyD,EAAYmH,GAC5C7V,MAAM8mB,EAAW45C,EAAWhyD,EAAYmH,EAC1C,CAUAm8D,qBAAAA,CAAsBx9C,EAAiBC,EAAQsE,EAAMvR,GACnD,MAAMxe,EAAQ/I,KAAK+I,MACbi4B,OAA2B/gC,IAApB8I,EAAM++B,UACb6hB,OAA+B1pD,IAAtB8I,EAAMumD,YACf0iB,EAAUl5C,EAAK10B,OACrBpE,KAAKotE,aAAatoE,KAAK+nE,GACvB7sE,KAAKstE,yBAAyBxoE,KAAK+nE,GACnC,IAAK,IAAIzlE,EAAI,EAAGA,EAAI4qE,IAAW5qE,EAAG,CAChC,MAAMqtB,EAAMqE,EAAK1xB,GACXoqE,EAAUxxE,KAAK8Q,YAAY1M,OAC3BwpE,EAAQ5tE,KAAK6tE,0BACjBt5C,EACAC,EACAC,EACAlN,GACA,GACCoiC,GAEGkoB,EAA0B,CAC9BhD,EAAkBtC,gBAClBiF,EACA5D,GAEF5tE,KAAKotE,aAAatoE,KAAK+sE,GACvB7xE,KAAKstE,yBAAyBxoE,KAAK+sE,GAC/BloB,IAGF3pD,KAAKotE,aAAatoE,KAAKgoE,GACvB9sE,KAAKstE,yBAAyBxoE,KAAKgoE,IAErCt4C,EAASC,CACX,CASA,OARIuM,IACFhhC,KAAKotE,aAAatoE,KAAK6nE,GACvB3sE,KAAKstE,yBAAyBxoE,KAAK6nE,IAEjChjB,IACF3pD,KAAKotE,aAAatoE,KAAK8nE,GACvB5sE,KAAKstE,yBAAyBxoE,KAAK8nE,IAE9Bp4C,CACT,CAQA61C,UAAAA,CAAWC,EAAgBh7D,EAAStI,GAClC,MAAM+B,EAAQ/I,KAAK+I,MACb++B,EAAY/+B,EAAM++B,UAClBwnB,EAAcvmD,EAAMumD,YAC1B,QAAkBrvD,IAAd6nC,QAA2C7nC,IAAhBqvD,EAC7B,OAEFtvD,KAAKiyE,uBACLjyE,KAAKyuE,cAAcnE,EAAgBh7D,EAAStI,QACpB/G,IAApB8I,EAAM++B,WACR9nC,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBrC,eAClB3b,EAAAA,UAGsB5wD,IAAtB8I,EAAMumD,aACRtvD,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBpC,iBAClB1jE,EAAMumD,YACNvmD,EAAM+nD,UACN/nD,EAAMwmD,QACNxmD,EAAMylD,SACNzlD,EAAM2lD,WACNihB,EAAAA,GACAE,EAAAA,KAGJ,MAAMt7C,EAAkB+1C,EAAehxC,qBACjC/R,EAAS+iD,EAAelC,YACxBoJ,EAAUxxE,KAAK8Q,YAAY1M,OACjCpE,KAAK6tE,0BACHt5C,EACA,EACAA,EAAgBnwB,OAChBmjB,GACA,GACA,GAEF,MAAM2qD,EAAoB,CAACrD,EAAkB7C,OAAQwF,GACrDxxE,KAAKotE,aAAatoE,KAAK+nE,EAAsBqF,GAC7ClyE,KAAKstE,yBAAyBxoE,KAAK+nE,EAAsBqF,QACjCjyE,IAApB8I,EAAM++B,YACR9nC,KAAKotE,aAAatoE,KAAK6nE,GACvB3sE,KAAKstE,yBAAyBxoE,KAAK6nE,SAEX1sE,IAAtB8I,EAAMumD,cACRtvD,KAAKotE,aAAatoE,KAAK8nE,GACvB5sE,KAAKstE,yBAAyBxoE,KAAK8nE,IAErC5sE,KAAK8uE,YAAYx/D,EACnB,CAQA87D,WAAAA,CAAYC,EAAiB/7D,EAAStI,GACpC,MAAM+B,EAAQ/I,KAAK+I,MACb++B,EAAY/+B,EAAM++B,UAClBwnB,EAAcvmD,EAAMumD,YAC1B,QAAkBrvD,IAAd6nC,QAA2C7nC,IAAhBqvD,EAC7B,OAEFtvD,KAAKiyE,uBACLjyE,KAAKyuE,cAAcpD,EAAiB/7D,EAAStI,QACrB/G,IAApB8I,EAAM++B,WACR9nC,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBrC,eAClB3b,EAAAA,UAGsB5wD,IAAtB8I,EAAMumD,aACRtvD,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBpC,iBAClB1jE,EAAMumD,YACNvmD,EAAM+nD,UACN/nD,EAAMwmD,QACNxmD,EAAMylD,SACNzlD,EAAM2lD,WACNihB,EAAAA,GACAE,EAAAA,KAGJ,MAAM/2C,EAAOuyC,EAAgBpxC,UACvB1F,EAAkB82C,EAAgBzxC,6BAClCrS,EAAS8jD,EAAgBjD,YAC/BpoE,KAAK+xE,sBACHx9C,EACA,EAC8BuE,EAC9BvR,GAEFvnB,KAAK8uE,YAAYx/D,EACnB,CAQA07D,gBAAAA,CAAiBC,EAAsB37D,EAAStI,GAC9C,MAAM+B,EAAQ/I,KAAK+I,MACb++B,EAAY/+B,EAAM++B,UAClBwnB,EAAcvmD,EAAMumD,YAC1B,QAAkBrvD,IAAd6nC,QAA2C7nC,IAAhBqvD,EAC7B,OAEFtvD,KAAKiyE,uBACLjyE,KAAKyuE,cAAcxD,EAAsB37D,EAAStI,QAC1B/G,IAApB8I,EAAM++B,WACR9nC,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBrC,eAClB3b,EAAAA,UAGsB5wD,IAAtB8I,EAAMumD,aACRtvD,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBpC,iBAClB1jE,EAAMumD,YACNvmD,EAAM+nD,UACN/nD,EAAMwmD,QACNxmD,EAAMylD,SACNzlD,EAAM2lD,WACNihB,EAAAA,GACAE,EAAAA,KAGJ,MAAMruC,EAAQypC,EAAqB/W,WAC7B3/B,EAAkB02C,EAAqBrxC,6BACvCrS,EAAS0jD,EAAqB7C,YACpC,IAAI5zC,EAAS,EACb,IAAK,IAAIptB,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAC3CotB,EAASx0B,KAAK+xE,sBACZx9C,EACAC,EACAgN,EAAMp6B,GACNmgB,GAGJvnB,KAAK8uE,YAAYx/D,EACnB,CAMAy/D,MAAAA,GACE/uE,KAAKgvE,kCACLhvE,KAAK+I,MAAQ,KAKb,MAAM8d,EAAY7mB,KAAK6mB,UACvB,GAAkB,IAAdA,EAAiB,CACnB,MAAM/V,EAAc9Q,KAAK8Q,YACzB,IAAK,IAAI1J,EAAI,EAAGwE,EAAKkF,EAAY1M,OAAQgD,EAAIwE,IAAMxE,EACjD0J,EAAY1J,IAAKo7B,EAAAA,EAAAA,IAAK1xB,EAAY1J,GAAIyf,EAE1C,CACA,OAAO9mB,MAAMgvE,QACf,CAKAkD,oBAAAA,GACE,MAAMlpE,EAAQ/I,KAAK+I,MACnB/I,KAAKowE,gBAAgBrnE,EAAO/I,KAAKiwE,YACjCjwE,KAAKswE,kBAAkBvnE,EAAO/I,KAAKkwE,YACrC,G,cCxPK,SAASiC,EAAUC,EAAa79C,EAAiBC,EAAQC,EAAKlN,GACnE,MAAM8qD,EAAS,GACf,IAAIC,EAAS99C,EACT+9C,EAAS,EACTC,EAAej+C,EAAgBxpB,MAAMypB,EAAQ,GACjD,KAAO+9C,EAASH,GAAeE,EAAS/qD,EAASkN,GAAK,CACpD,MAAOiB,EAAIC,GAAM68C,EAAaznE,OAAO,GAC/B6qB,EAAKrB,EAAgB+9C,EAAS/qD,GAC9BsO,EAAKtB,EAAgB+9C,EAAS/qD,EAAS,GACvCkrD,EAAgBrtE,KAAKwX,MACxBgZ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAG5C,GADA48C,GAAUE,EACNF,GAAUH,EAAa,CACzB,MAAMnhE,GAAKmhE,EAAcG,EAASE,GAAiBA,EAC7C9sD,GAAI43C,EAAAA,EAAAA,IAAK7nC,EAAIE,EAAI3kB,GACjB2U,GAAI23C,EAAAA,EAAAA,IAAK5nC,EAAIE,EAAI5kB,GACvBuhE,EAAa1tE,KAAK6gB,EAAGC,GACrBysD,EAAOvtE,KAAK0tE,GACZA,EAAe,CAAC7sD,EAAGC,GACf2sD,GAAUH,IACZE,GAAU/qD,GAEZgrD,EAAS,CACX,MAAO,GAAIA,EAASH,EAClBI,EAAa1tE,KACXyvB,EAAgB+9C,EAAS/qD,GACzBgN,EAAgB+9C,EAAS/qD,EAAS,IAEpC+qD,GAAU/qD,MACL,CACL,MAAMmrD,EAAUD,EAAgBF,EAC1B5sD,GAAI43C,EAAAA,EAAAA,IAAK7nC,EAAIE,EAAI88C,EAAUD,GAC3B7sD,GAAI23C,EAAAA,EAAAA,IAAK5nC,EAAIE,EAAI68C,EAAUD,GACjCD,EAAa1tE,KAAK6gB,EAAGC,GACrBysD,EAAOvtE,KAAK0tE,GACZA,EAAe,CAAC7sD,EAAGC,GACnB2sD,EAAS,EACTD,GAAU/qD,CACZ,CACF,CAIA,OAHIgrD,EAAS,GACXF,EAAOvtE,KAAK0tE,GAEPH,CACT,CC3CO,SAASM,EAAcrpB,EAAU/0B,EAAiBC,EAAQC,EAAKlN,GACpE,IAKIqrD,EAAMxrE,EAAGyrE,EAAKC,EAAKp9C,EAAIC,EAAIo9C,EAAKC,EAAKC,EAAKC,EAL1CC,EAAa3+C,EACb4+C,EAAW5+C,EACX+9C,EAAS,EACTthE,EAAI,EACJ0lB,EAAQnC,EAEZ,IAAKptB,EAAIotB,EAAQptB,EAAIqtB,EAAKrtB,GAAKmgB,EAAQ,CACrC,MAAMqO,EAAKrB,EAAgBntB,GACrByuB,EAAKtB,EAAgBntB,EAAI,QACpBnH,IAAPy1B,IACFu9C,EAAMr9C,EAAKF,EACXw9C,EAAMr9C,EAAKF,EACXm9C,EAAM1tE,KAAKwX,KAAKq2D,EAAMA,EAAMC,EAAMA,QACtBjzE,IAAR8yE,IACF9hE,GAAK4hE,EACLD,EAAOxtE,KAAKwtE,MAAMG,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IAC9CF,EAAOtpB,IACLr4C,EAAIshE,IACNA,EAASthE,EACTkiE,EAAax8C,EACby8C,EAAWhsE,GAEb6J,EAAI,EACJ0lB,EAAQvvB,EAAImgB,IAGhBsrD,EAAMC,EACNC,EAAME,EACND,EAAME,GAERx9C,EAAKE,EACLD,EAAKE,CACP,CAEA,OADA5kB,GAAK6hE,EACE7hE,EAAIshE,EAAS,CAAC57C,EAAOvvB,GAAK,CAAC+rE,EAAYC,EAChD,C,cCpBO,MAAMC,EAAa,CACxB,KAAQ,EACR,OAAU,GACV,MAAS,EACT,IAAO,EACP,OAAU,GACV,QAAW,GACX,WAAc,GACd,YAAe,GACf,OAAU,GA6nBZ,QA1nBA,cAAgCtC,EAO9BpxE,WAAAA,CAAYknB,EAAW45C,EAAWhyD,EAAYmH,GAC5C7V,MAAM8mB,EAAW45C,EAAWhyD,EAAYmH,GAMxC5V,KAAKszE,QAAU,KAMftzE,KAAK0oD,MAAQ,GAMb1oD,KAAKuzE,aAAe,EAMpBvzE,KAAKwzE,aAAe,EAMpBxzE,KAAKyzE,yBAAsBxzE,EAM3BD,KAAK0zE,sBAAmBzzE,EAMxBD,KAAK2zE,cAAgB,EAMrB3zE,KAAK4zE,eAAiB,KAKtB5zE,KAAK6zE,WAAa,CAAC,EACnB7zE,KAAK6zE,WAAWhjB,EAAAA,IAAoB,CAAC/oB,UAAW+oB,EAAAA,IAMhD7wD,KAAK8zE,iBAAmB,KAKxB9zE,KAAK+zE,aAAe,CAAC,EAMrB/zE,KAAKg0E,WAA8D,CAAC,EAKpEh0E,KAAKi0E,WAAa,CAAC,EAMnBj0E,KAAKk0E,SAAW,GAMhBl0E,KAAKm0E,SAAW,GAMhBn0E,KAAKo0E,WAAa,GAMlBp0E,KAAK+iB,oBAAiB9iB,EAOtBD,KAAKuxE,6BAA0BtxE,CACjC,CAMA8uE,MAAAA,GACE,MAAM3B,EAAertE,MAAMgvE,SAI3B,OAHA3B,EAAa6G,WAAaj0E,KAAKi0E,WAC/B7G,EAAayG,WAAa7zE,KAAK6zE,WAC/BzG,EAAa2G,aAAe/zE,KAAK+zE,aAC1B3G,CACT,CAQA9B,QAAAA,CAAS/7D,EAAUD,EAAStI,GAC1B,MAAMqtE,EAAYr0E,KAAK4zE,eACjBU,EAAct0E,KAAK8zE,iBACnBS,EAAYv0E,KAAKg0E,WACvB,GAAmB,KAAfh0E,KAAK0oD,QAAiB6rB,IAAeF,IAAcC,EACrD,OAGF,MAAMxjE,EAAc9Q,KAAK8Q,YACzB,IAAIsqC,EAAQtqC,EAAY1M,OAExB,MAAMkzD,EAAe/nD,EAASuX,UAC9B,IAAIyN,EAAkB,KAClBhN,EAAShY,EAAS64D,YAEtB,GAC0B,SAAxBmM,EAAU/qB,WACO,cAAhB8N,GACiB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAsEG,CACL,IAAIkd,EAAiBD,EAAU39D,SAAW,KAAO,GACjD,OAAQ0gD,GACN,IAAK,QACL,IAAK,aACH/iC,EAEIhlB,EACA+pB,qBACJ,MACF,IAAK,aACH/E,EAEIhlB,EACA2iD,kBACJ,MACF,IAAK,SACH39B,EAEIhlB,EACA6lB,YACJ,MACF,IAAK,kBACHb,EAEIhlB,EACA0jD,mBACJ1rC,EAAS,EACT,MACF,IAAK,UACHgN,EAEIhlB,EACA2qB,uBACCq6C,EAAU39D,UACb49D,EAAe1vE,KAAKyvB,EAAgB,GAAKv0B,KAAKyO,YAEhD8Y,EAAS,EACT,MACF,IAAK,eACH,MAAMktD,EAEFllE,EACA4kD,wBACJ5/B,EAAkB,GAClB,IAAK,IAAIntB,EAAI,EAAGwE,EAAK6oE,EAAerwE,OAAQgD,EAAIwE,EAAIxE,GAAK,EAClDmtE,EAAU39D,UACb49D,EAAe1vE,KAAK2vE,EAAertE,EAAI,GAAKpH,KAAKyO,YAEnD8lB,EAAgBzvB,KAAK2vE,EAAertE,GAAIqtE,EAAertE,EAAI,IAE7D,GAA+B,IAA3BmtB,EAAgBnwB,OAClB,OAEFmjB,EAAS,EAIb,MAAMkN,EAAMz0B,KAAK0tE,2BAA2Bn5C,EAAiBhN,GAC7D,GAAIkN,IAAQ2mB,EACV,OAEF,GACEo5B,IACC//C,EAAM2mB,GAAS,IAAM7mB,EAAgBnwB,OAASmjB,EAC/C,CACA,IAAImtD,EAAMt5B,EAAQ,EAClBo5B,EAAiBA,EAAepkD,QAAO,CAACm2C,EAAGn/D,KACzC,MAAMutE,EACJ7jE,EAAwB,GAAX4jE,EAAMttE,MAAYmtB,EAAgBntB,EAAImgB,IACnDzW,EAAwB,GAAX4jE,EAAMttE,GAAS,KAAOmtB,EAAgBntB,EAAImgB,EAAS,GAIlE,OAHKotD,KACDD,EAEGC,IAEX,CAEA30E,KAAK40E,kBAEL,MAAM5qB,EAAiBuqB,EAAUvqB,eAC7BhqD,KAAKiwE,WAAWjwE,KAAKovE,iBAAiBmF,EAAUvqB,iBAChD,KACEE,EAAmBqqB,EAAUrqB,iBAC/BlqD,KAAKmwE,aAAanwE,KAAKuvE,mBAAmBgF,EAAUrqB,mBACpD,KAEJlqD,KAAKyuE,cAAcl/D,EAAUD,EAAStI,GAGtC,IAAIojD,EAAUmqB,EAAUnqB,QACxB,GACEA,GAAWyqB,EAAAA,KACVN,EAAU7xD,MAAM,GAAK,GAAK6xD,EAAU7xD,MAAM,GAAK,GAChD,CACA,IAAIoyD,EAAKP,EAAUnqB,QAAQ,GACvB2qB,EAAKR,EAAUnqB,QAAQ,GACvB4qB,EAAKT,EAAUnqB,QAAQ,GACvB6qB,EAAKV,EAAUnqB,QAAQ,GACvBmqB,EAAU7xD,MAAM,GAAK,IACvBqyD,GAAMA,EACNE,GAAMA,GAEJV,EAAU7xD,MAAM,GAAK,IACvBoyD,GAAMA,EACNE,GAAMA,GAER5qB,EAAU,CAAC0qB,EAAIC,EAAIC,EAAIC,EACzB,CAKA,MAAMr/D,EAAa5V,KAAK4V,WACxB5V,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkBzC,WAClBhxB,EACA3mB,EACA,KACA9P,IACAA,IACAA,IACA,EACA,EACA,EACA3kB,KAAKyzE,oBACLzzE,KAAK2zE,cACL,CAAC,EAAG,GACJhvD,IACA3kB,KAAK+iB,eACL/iB,KAAKuxE,wBACLnnB,GAAWyqB,EAAAA,GACPA,EAAAA,GACAzqB,EAAQvqD,KAAI,SAAUq1E,GACpB,OAAOA,EAAIt/D,CACb,IACJo0C,EACAE,EACAlqD,KAAK0oD,MACL1oD,KAAKk0E,SACLl0E,KAAKo0E,WACLp0E,KAAKm0E,SACLn0E,KAAKuzE,aACLvzE,KAAKwzE,aACLgB,IAEF,MAAM9xD,EAAQ,EAAI9M,EAEZu/D,EAA6BnrB,EAC/BA,EAAej/C,MAAM,GACrB,KACAoqE,IACFA,EAA2B,GAAKtkB,EAAAA,IAElC7wD,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkBzC,WAClBhxB,EACA3mB,EACA,KACA9P,IACAA,IACAA,IACA,EACA,EACA,EACA3kB,KAAKyzE,oBACLzzE,KAAK2zE,cACL,CAACjxD,EAAOA,GACRiC,IACA3kB,KAAK+iB,eACL/iB,KAAKuxE,wBACLnnB,EACA+qB,EACAjrB,EACAlqD,KAAK0oD,MACL1oD,KAAKk0E,SACLl0E,KAAKo0E,WACLp0E,KAAKm0E,SAAWtjB,EAAAA,GAAmB7wD,KAAKm0E,SACxCn0E,KAAKuzE,aACLvzE,KAAKwzE,aACLgB,IAGFx0E,KAAK8uE,YAAYx/D,EACnB,KA7PE,CACA,KAAK4jB,EAAAA,EAAAA,IAAWlzB,KAAKygE,UAAWlxD,EAASQ,aACvC,OAEF,IAAI+oB,EAEJ,GADAvE,EAAkBhlB,EAAS+pB,qBACP,cAAhBg+B,EACFx+B,EAAO,CAACvE,EAAgBnwB,aACnB,GAAoB,mBAAhBkzD,EACTx+B,EACEvpB,EACA0qB,eACG,GAAoB,WAAhBq9B,EACTx+B,EAA+DvpB,EAC5D0qB,UACAlvB,MAAM,EAAG,QACP,GAAoB,gBAAhBusD,EAAgC,CACzC,MAAM91B,EAEFjyB,EACA2kD,WACJp7B,EAAO,GACP,IAAK,IAAI1xB,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAC3C0xB,EAAKh0B,KAAK08B,EAAMp6B,GAAG,GAEvB,CACApH,KAAKyuE,cAAcl/D,EAAUD,EAAStI,GACtC,MAAMiiD,EAASsrB,EAAUtrB,OACnBJ,EAAYI,OAAShpD,EAAYs0E,EAAU1rB,UAEjD,IAAIusB,EAAa,EACjB,IAAK,IAAIhY,EAAI,EAAGiY,EAAKv8C,EAAK10B,OAAQg5D,EAAIiY,IAAMjY,EAAG,CAC7C,IAAIiV,EAEFA,EADEppB,EACOkpB,EACPlpB,EAASjpD,KAAKyO,WACd8lB,EACA6gD,EACAt8C,EAAKskC,GACL71C,GAGO,CAACgN,EAAgBxpB,MAAMqqE,EAAYt8C,EAAKskC,KAEnD,IAAK,IAAI5zB,EAAI,EAAG8rC,EAAKjD,EAAOjuE,OAAQolC,EAAI8rC,IAAM9rC,EAAG,CAC/C,MAAM+rC,EAAQlD,EAAO7oC,GACrB,IAAIgsC,EAAa,EACbpC,EAAWmC,EAAMnxE,OACrB,QAAiBnE,GAAb4oD,EAAwB,CAC1B,MAAM4sB,EAAQ9C,EACZ4B,EAAUjrB,SACVisB,EACA,EACAA,EAAMnxE,OACN,GAEFoxE,EAAaC,EAAM,GACnBrC,EAAWqC,EAAM,EACnB,CACA,IAAK,IAAIruE,EAAIouE,EAAYpuE,EAAIgsE,EAAUhsE,GAAKmgB,EAC1CzW,EAAYhM,KAAKywE,EAAMnuE,GAAImuE,EAAMnuE,EAAI,IAEvC,MAAMqtB,EAAM3jB,EAAY1M,OACxBgxE,EAAat8C,EAAKskC,GAClBp9D,KAAK01E,WAAWt6B,EAAO3mB,GACvB2mB,EAAQ3mB,CACV,CACF,CACAz0B,KAAK8uE,YAAYx/D,EACnB,CAyLF,CAKAslE,eAAAA,GACE,MAAMN,EAAct0E,KAAK8zE,iBACnBS,EAAYv0E,KAAKg0E,WACjBK,EAAYr0E,KAAK4zE,eAEjB+B,EAAY31E,KAAKo0E,WACnBE,IACIqB,KAAa31E,KAAK+zE,eACtB/zE,KAAK+zE,aAAa4B,GAAa,CAC7BrmB,YAAaglB,EAAYhlB,YACzBC,QAAS+kB,EAAY/kB,QACrBI,eAAgB2kB,EAAY3kB,eAC5BmB,UAAWwjB,EAAYxjB,UACvBtC,SAAU8lB,EAAY9lB,SACtBE,WAAY4lB,EAAY5lB,WACxBgB,SAAU4kB,EAAY5kB,YAI5B,MAAMkmB,EAAU51E,KAAKk0E,SACf0B,KAAW51E,KAAKi0E,aACpBj0E,KAAKi0E,WAAW2B,GAAW,CACzBrtB,KAAMgsB,EAAUhsB,KAChBM,UAAW0rB,EAAU1rB,WAAagtB,EAAAA,GAClC9sB,QAASwrB,EAAUxrB,QACnBI,aAAcorB,EAAUprB,cAAgB2sB,EAAAA,GACxCpzD,MAAO6xD,EAAU7xD,QAGrB,MAAMurC,EAAUjuD,KAAKm0E,SACjBE,IACIpmB,KAAWjuD,KAAK6zE,aACpB7zE,KAAK6zE,WAAW5lB,GAAW,CACzBnmB,UAAWusC,EAAUvsC,YAI7B,CAOA4tC,UAAAA,CAAWt6B,EAAO3mB,GAChB,MAAM6/C,EAAct0E,KAAK8zE,iBACnBS,EAAYv0E,KAAKg0E,WAEjB2B,EAAY31E,KAAKo0E,WACjBwB,EAAU51E,KAAKk0E,SACfjmB,EAAUjuD,KAAKm0E,SACrBn0E,KAAK40E,kBAEL,MAAMh/D,EAAa5V,KAAK4V,WAClBmgE,EAAW1C,EAAWkB,EAAUprB,cAEhCW,EAAU9pD,KAAKwzE,aAAe59D,EAC9B+yC,EAAO3oD,KAAK0oD,MACZ+F,EAAc6lB,EACfA,EAAYxjB,UAAY1rD,KAAKC,IAAIkvE,EAAU7xD,MAAM,IAAO,EACzD,EAEJ1iB,KAAKotE,aAAatoE,KAAK,CACrB+pE,EAAkB1C,WAClB/wB,EACA3mB,EACAshD,EACAxB,EAAU39D,SACVq3C,EACAsmB,EAAUjrB,SACV1zC,EACAk0C,EACA6rB,EACAlnB,EAAc74C,EACd+yC,EACAitB,EACA,EACA51E,KAAK+iB,eACL/iB,KAAK0zE,mBAEP1zE,KAAKstE,yBAAyBxoE,KAAK,CACjC+pE,EAAkB1C,WAClB/wB,EACA3mB,EACAshD,EACAxB,EAAU39D,SACVq3C,EAAU4C,EAAAA,GAAmB5C,EAC7BsmB,EAAUjrB,SACV1zC,EACAk0C,EACA6rB,EACAlnB,EAAc74C,EACd+yC,EACAitB,EACA,EAAIhgE,EACJ5V,KAAK+iB,eACL/iB,KAAK0zE,kBAET,CAOA/H,YAAAA,CAAaC,EAAW8F,GACtB,IAAI6C,EAAWF,EAAWC,EAC1B,GAAK1I,EAEE,CACL,MAAMoK,EAAgBpK,EAAU7gB,UAC3BirB,GAIH3B,EAAYr0E,KAAK4zE,eACZS,IACHA,EAA6D,CAAC,EAC9Dr0E,KAAK4zE,eAAiBS,GAExBA,EAAUvsC,WAAYooB,EAAAA,EAAAA,GACpB8lB,EAAcn1C,YAAcgwB,EAAAA,MAT9BwjB,EAAY,KACZr0E,KAAK4zE,eAAiBS,GAYxB,MAAM4B,EAAkBrK,EAAU5gB,YAClC,GAAKirB,EAGE,CACL3B,EAAct0E,KAAK8zE,iBACdQ,IACHA,EAAiE,CAAC,EAClEt0E,KAAK8zE,iBAAmBQ,GAE1B,MAAM5kB,EAAWumB,EAAgB5lB,cAC3BV,EAAiBsmB,EAAgB3lB,oBACjCQ,EAAYmlB,EAAgBhmE,WAC5By+C,EAAaunB,EAAgBxlB,gBACnC6jB,EAAY/kB,QAAU0mB,EAAgBzlB,cAAgBhB,EAAAA,GACtD8kB,EAAY5kB,SAAWA,EAAWA,EAAS3kD,QAAU4kE,EAAAA,GACrD2E,EAAY3kB,oBACS1vD,IAAnB0vD,EAA+BkgB,EAAAA,GAAwBlgB,EACzD2kB,EAAY9lB,SAAWynB,EAAgB1lB,eAAiBd,EAAAA,GACxD6kB,EAAYxjB,eACI7wD,IAAd6wD,EAA0BV,EAAAA,GAAmBU,EAC/CwjB,EAAY5lB,gBACKzuD,IAAfyuD,EAA2BgC,EAAAA,GAAoBhC,EACjD4lB,EAAYhlB,aAAcY,EAAAA,EAAAA,GACxB+lB,EAAgBp1C,YAAcsvB,EAAAA,GAElC,MAxBEmkB,EAAc,KACdt0E,KAAK8zE,iBAAmBQ,EAyB1BC,EAAYv0E,KAAKg0E,WACjB,MAAMzrB,EAAOqjB,EAAUvhB,WAAa6rB,EAAAA,IACpCC,EAAAA,EAAAA,IAAa5tB,GACb,MAAM6tB,EAAYxK,EAAUroD,gBAC5BgxD,EAAU39D,SAAWg1D,EAAUnhB,cAC/B8pB,EAAUhsB,KAAOA,EACjBgsB,EAAUjrB,SAAWsiB,EAAUphB,cAC/B+pB,EAAU/qB,UAAYoiB,EAAUthB,eAChCiqB,EAAU1rB,UAAY+iB,EAAUhhB,eAChC2pB,EAAUtrB,OAAS2iB,EAAUrhB,YAC7BgqB,EAAUxrB,QAAU6iB,EAAU/gB,aAC9B0pB,EAAUprB,aACRyiB,EAAU9gB,mBAAqBgrB,EAAAA,GACjCvB,EAAUvqB,eAAiB4hB,EAAUzgB,oBACrCopB,EAAUrqB,iBAAmB0hB,EAAUxgB,sBACvCmpB,EAAUnqB,QAAUwhB,EAAUvgB,cAAgBwpB,EAAAA,GAC9CN,EAAU7xD,WAAsBziB,IAAdm2E,EAA0B,CAAC,EAAG,GAAKA,EAErD,MAAMC,EAAczK,EAAU3gB,aACxBqrB,EAAc1K,EAAU1gB,aACxBqrB,EAAqB3K,EAAUxoD,oBAC/BozD,EAAkB5K,EAAUlhB,iBAC5B+rB,EAAe7K,EAAUzoD,cAC/BnjB,KAAK0oD,MAAQkjB,EAAUjhB,WAAa,GACpC3qD,KAAKuzE,kBAA+BtzE,IAAhBo2E,EAA4B,EAAIA,EACpDr2E,KAAKwzE,kBAA+BvzE,IAAhBq2E,EAA4B,EAAIA,EACpDt2E,KAAKyzE,yBACoBxzE,IAAvBs2E,GAA2CA,EAC7Cv2E,KAAK0zE,sBACiBzzE,IAApBu2E,GAAuCA,EACzCx2E,KAAK2zE,mBAAiC1zE,IAAjBw2E,EAA6B,EAAIA,EAEtDz2E,KAAKo0E,WAAaE,GACqB,iBAA3BA,EAAYhlB,YAChBglB,EAAYhlB,aACZnjD,EAAAA,EAAAA,IAAOmoE,EAAYhlB,cACvBglB,EAAY/kB,QACZ+kB,EAAY3kB,eACZ,IACA2kB,EAAYxjB,UACZwjB,EAAY9lB,SACZ8lB,EAAY5lB,WACZ,IACA4lB,EAAY5kB,SAASprB,OACrB,IACA,GACJtkC,KAAKk0E,SACHK,EAAUhsB,KACVgsB,EAAU7xD,OACT6xD,EAAU1rB,WAAa,MACvB0rB,EAAUtrB,QAAU,MACpBsrB,EAAUxrB,SAAW,MACrBwrB,EAAUprB,cAAgB,KAC7BnpD,KAAKm0E,SACHE,GAAaA,EAAUvsC,UACW,iBAAvBusC,EAAUvsC,UACfusC,EAAUvsC,UACV,KAAM37B,EAAAA,EAAAA,IAAOkoE,EAAUvsC,WACzB,EACR,MAxGE9nC,KAAK0oD,MAAQ,GAyGf1oD,KAAK+iB,eAAiB6oD,EAAUtoD,mBAChCtjB,KAAKuxE,wBAA0BG,CACjC,GCnpBIgF,EAAqB,CACzB,OAAUC,EACV,QAAWC,EACX,MAASC,EACT,WAAcC,EACd,QAAWH,EACX,KAAQI,GAqFV,QAlFA,MAOEp3E,WAAAA,CAAYknB,EAAW45C,EAAWhyD,EAAYmH,GAK5C5V,KAAKg3E,WAAanwD,EAMlB7mB,KAAKi3E,WAAaxW,EAMlBzgE,KAAK2V,YAAcC,EAMnB5V,KAAKk3E,YAAczoE,EAMnBzO,KAAKm3E,kBAAoB,CAAC,CAC5B,CAKApI,MAAAA,GACE,MAAMqI,EAAsB,CAAC,EAC7B,IAAK,MAAMC,KAAQr3E,KAAKm3E,kBAAmB,CACzCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAC,EAC1D,MAAMC,EAAWt3E,KAAKm3E,kBAAkBE,GACxC,IAAK,MAAME,KAAcD,EAAU,CACjC,MAAME,EAAqBF,EAASC,GAAYxI,SAChDqI,EAAoBC,GAAME,GAAcC,CAC1C,CACF,CACA,OAAOJ,CACT,CAOAK,UAAAA,CAAWvqE,EAAQwqE,GACjB,MAAMC,OAAuB13E,IAAXiN,EAAuBA,EAAO4L,WAAa,IAC7D,IAAI8+D,EAAU53E,KAAKm3E,kBAAkBQ,QACrB13E,IAAZ23E,IACFA,EAAU,CAAC,EACX53E,KAAKm3E,kBAAkBQ,GAAaC,GAEtC,IAAIC,EAASD,EAAQF,GACrB,QAAez3E,IAAX43E,EAAsB,CAExBA,EAAS,IAAIC,EADOpB,EAAmBgB,IAErC13E,KAAKg3E,WACLh3E,KAAKi3E,WACLj3E,KAAKk3E,YACLl3E,KAAK2V,aAEPiiE,EAAQF,GAAeG,CACzB,CACA,OAAOA,CACT,G,4CC9EK,SAASE,EACdxjD,EACAC,EACAC,EACAlN,EACAohC,EACAqvB,EACA1uB,EACA5mC,EACAu1D,EACA1vB,EACAvgC,EACAtZ,GAEA,IADA+5C,IAAW5iB,UAAAzhC,OAAA,SAAAnE,IAAA4lC,UAAA,MAAAA,UAAA,IAEPjQ,EAAKrB,EAAgBC,GACrBqB,EAAKtB,EAAgBC,EAAS,GAC9BkB,EAAK,EACLC,EAAK,EACL88C,EAAgB,EAChByF,EAAW,EAEf,SAASC,IACPziD,EAAKE,EACLD,EAAKE,EAELD,EAAKrB,EADLC,GAAUjN,GAEVsO,EAAKtB,EAAgBC,EAAS,GAC9B0jD,GAAYzF,EACZA,EAAgBrtE,KAAKwX,MAAMgZ,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,GACtE,CACA,GACEwiD,UACO3jD,EAASC,EAAMlN,GAAU2wD,EAAWzF,EAAgBuF,GAE7D,IAAInrD,EACgB,IAAlB4lD,EAAsB,GAAKuF,EAASE,GAAYzF,EAClD,MAAM2F,GAAS7a,EAAAA,EAAAA,IAAK7nC,EAAIE,EAAI/I,GACtBwrD,GAAS9a,EAAAA,EAAAA,IAAK5nC,EAAIE,EAAIhJ,GAEtByrD,EAAc9jD,EAASjN,EACvBgxD,EAAcL,EACdM,EAAOR,EAASt1D,EAAQu1D,EAAyB1vB,EAAMI,EAAM3gC,GACnE,KAAOwM,EAASC,EAAMlN,GAAU2wD,EAAWzF,EAAgB+F,GACzDL,IAEFtrD,EAAgC,IAAlB4lD,EAAsB,GAAK+F,EAAON,GAAYzF,EAC5D,MAAMz7C,GAAOumC,EAAAA,EAAAA,IAAK7nC,EAAIE,EAAI/I,GACpBoK,GAAOsmC,EAAAA,EAAAA,IAAK5nC,EAAIE,EAAIhJ,GAG1B,IAAIoiD,GAAU,EACd,GAAIxmB,EACF,GAAI/5C,EAAU,CACZ,MAAM2oD,EAAO,CAAC+gB,EAAQC,EAAQrhD,EAAMC,IACpC1Q,EAAAA,EAAAA,IAAO8wC,EAAM,EAAG,EAAG,EAAG3oD,EAAU2oD,EAAMA,GACtC4X,EAAU5X,EAAK,GAAKA,EAAK,EAC3B,MACE4X,EAAUmJ,EAASphD,EAIvB,MAAMW,EAAKvyB,KAAKuyB,GACVvoB,EAAS,GACTqpE,EAAgBH,EAAc/wD,IAAWiN,EAQ/C,IAAIkkD,EAEJ,GAPAjG,EAAgB,EAChByF,EAAWK,EACX3iD,EAAKrB,EAHLC,EAAS8jD,GAITziD,EAAKtB,EAAgBC,EAAS,GAI1BikD,EAAe,CACjBN,IAEAO,EAAgBtzE,KAAKkkC,MAAMzT,EAAKF,EAAIC,EAAKF,GACrCu5C,IACFyJ,GAAiBA,EAAgB,GAAK/gD,EAAKA,GAE7C,MAAMhS,GAAKqR,EAAOohD,GAAU,EACtBxyD,GAAKqR,EAAOohD,GAAU,EAE5B,OADAjpE,EAAO,GAAK,CAACuW,EAAGC,GAAI4yD,EAAOR,GAAU,EAAGU,EAAe/vB,GAChDv5C,CACT,CAKA,IAAK,IAAIhI,EAAI,EAAGwE,GAFhB+8C,EAAOA,EAAKzgC,QAAQ,MAAO,MAED9jB,OAAQgD,EAAIwE,GAAM,CAC1CusE,IACA,IAAI3xD,EAAQphB,KAAKkkC,MAAMzT,EAAKF,EAAIC,EAAKF,GAIrC,GAHIu5C,IACFzoD,GAASA,EAAQ,GAAKmR,EAAKA,QAEP13B,IAAlBy4E,EAA6B,CAC/B,IAAI15C,EAAQxY,EAAQkyD,EAEpB,GADA15C,GAASA,EAAQrH,GAAM,EAAIA,EAAKqH,GAASrH,EAAK,EAAIA,EAAK,EACnDvyB,KAAKC,IAAI25B,GAASsqB,EACpB,OAAO,IAEX,CACAovB,EAAgBlyD,EAEhB,MAAMmyD,EAASvxE,EACf,IAAIwxE,EAAa,EACjB,KAAOxxE,EAAIwE,IAAMxE,EAAG,CAClB,MACMqrB,EAAM/P,EAAQu1D,EAAyB1vB,EAAMI,EADrCsmB,EAAUrjE,EAAKxE,EAAI,EAAIA,GAC2B4gB,GAChE,GACEwM,EAASjN,EAASkN,GAClByjD,EAAWzF,EAAgBuF,EAASY,EAAanmD,EAAM,EAEvD,MAEFmmD,GAAcnmD,CAChB,CACA,GAAIrrB,IAAMuxE,EACR,SAEF,MAAME,EAAQ5J,EACVtmB,EAAK9hB,UAAUj7B,EAAK+sE,EAAQ/sE,EAAKxE,GACjCuhD,EAAK9hB,UAAU8xC,EAAQvxE,GAC3BylB,EACoB,IAAlB4lD,EACI,GACCuF,EAASY,EAAa,EAAIV,GAAYzF,EAC7C,MAAM9sD,GAAI43C,EAAAA,EAAAA,IAAK7nC,EAAIE,EAAI/I,GACjBjH,GAAI23C,EAAAA,EAAAA,IAAK5nC,EAAIE,EAAIhJ,GACvBzd,EAAOtK,KAAK,CAAC6gB,EAAGC,EAAGgzD,EAAa,EAAGpyD,EAAOqyD,IAC1Cb,GAAUY,CACZ,CACA,OAAOxpE,CACT,C,cCtGA,MAAM0pE,GAAYh0D,EAAAA,EAAAA,MAGZiwD,EAAK,GAELC,EAAK,GAELC,EAAK,GAEL8D,EAAK,GAMX,SAASC,EAAgBC,GACvB,OAAOA,EAAuB,GAAGC,YACnC,CAEA,MAAMC,EAAW,IAAI90C,OAEnB,IACEvV,OAAOsqD,aAAa,MAAW,IAAMtqD,OAAOsqD,aAAa,MACzDtqD,OAAOsqD,aAAa,OAAW,IAAMtqD,OAAOsqD,aAAa,OACzDtqD,OAAOsqD,aAAa,OAAW,IAAMtqD,OAAOsqD,aAAa,OACzDtqD,OAAOsqD,aAAa,OAAW,IAAMtqD,OAAOsqD,aAAa,OACzDtqD,OAAOsqD,aAAa,QAAW,IAAMtqD,OAAOsqD,aAAa,QAC3D,KASF,SAASC,EAAoB1wB,EAAM2wB,GAMjC,MALc,UAAVA,EACFA,EAAQH,EAAS51C,KAAKolB,GAAQ,QAAU,OACrB,QAAV2wB,IACTA,EAAQH,EAAS51C,KAAKolB,GAAQ,OAAS,SAElC0qB,EAAWiG,EACpB,CAQA,SAASC,EAAiBC,EAAKC,EAAMryE,GAKnC,OAJIA,EAAI,GACNoyE,EAAI10E,KAAK,KAAM,IAEjB00E,EAAI10E,KAAK20E,EAAM,IACRD,CACT,CASA,SAASE,EAAoBtqE,EAAQuqE,EAAM3yE,GAIzC,OAHIA,EAAQ,IAAM,IAChBoI,GAAUuqE,GAELvqE,CACT,CAwqCA,QAtqCA,MAQEzP,WAAAA,CACE8O,EACAmH,EACAsX,EACAkgD,EACAwM,GAMA55E,KAAKktB,SAAWA,EAMhBltB,KAAK4V,WAAaA,EAOlB5V,KAAKyO,WAAaA,EAMlBzO,KAAK65E,mBAML75E,KAAKotE,aAAeA,EAAaA,aAMjCptE,KAAK8Q,YAAcs8D,EAAat8D,YAMhC9Q,KAAK85E,iBAAmB,CAAC,EAMzB95E,KAAK+5E,oBAAqB7jE,EAAAA,EAAAA,MAM1BlW,KAAKstE,yBAA2BF,EAAaE,yBAM7CttE,KAAKg6E,kBAAoB,KAMzBh6E,KAAKi6E,cAAgB,EAKrBj6E,KAAK6zE,WAAazG,EAAayG,YAAc,CAAC,EAK9C7zE,KAAK+zE,aAAe3G,EAAa2G,cAAgB,CAAC,EAKlD/zE,KAAKi0E,WAAa7G,EAAa6G,YAAc,CAAC,EAM9Cj0E,KAAKk6E,QAAU,CAAC,EAMhBl6E,KAAKszE,QAAU,CAAC,EAMhBtzE,KAAKm6E,eAAiBP,EAAoB,IAAIzhC,EAAAA,EAAkB,IAClE,CAKAiiC,gBAAAA,GACE,OAAOp6E,KAAKm6E,cACd,CASAE,WAAAA,CAAY1xB,EAAMitB,EAAS3nB,EAAS0nB,GAClC,MAAMpuE,EAAMohD,EAAOitB,EAAU3nB,EAAU0nB,EACvC,GAAI31E,KAAKszE,QAAQ/rE,GACf,OAAOvH,KAAKszE,QAAQ/rE,GAEtB,MAAM+sE,EAAcqB,EAAY31E,KAAK+zE,aAAa4B,GAAa,KACzDtB,EAAYpmB,EAAUjuD,KAAK6zE,WAAW5lB,GAAW,KACjDsmB,EAAYv0E,KAAKi0E,WAAW2B,GAC5BhgE,EAAa5V,KAAK4V,WAClB8M,EAAQ,CACZ6xD,EAAU7xD,MAAM,GAAK9M,EACrB2+D,EAAU7xD,MAAM,GAAK9M,GAEjB0jE,EAAQ/E,EAAUxrB,QACpBsqB,EAAWkB,EAAUxrB,SACrBswB,EACEzuE,MAAMC,QAAQ89C,GAAQA,EAAK,GAAKA,EAChC4rB,EAAU1rB,WAAagtB,EAAAA,IAEvBpnB,EACJknB,GAAarB,EAAYxjB,UAAYwjB,EAAYxjB,UAAY,EAEzDuhB,EAASznE,MAAMC,QAAQ89C,GACzBA,EACA75B,OAAO65B,GAAMvjB,MAAM,MAAMk1C,OAAOf,EAAkB,KAEhD,MAAC/mE,EAAK,OAAEC,EAAM,OAAE8nE,EAAM,QAAEC,EAAO,WAAEC,IAAcC,EAAAA,EAAAA,IACnDnG,EACAlC,GAEIsI,EAAcnoE,EAAQi8C,EACtBmsB,EAAsB,GAEtBrU,GAAKoU,EAAc,GAAKj4D,EAAM,GAC9B2mB,GAAK52B,EAASg8C,GAAe/rC,EAAM,GAEnC2Z,EAAQ,CACZ7pB,MAAO+zD,EAAI,EAAInhE,KAAKmyB,MAAMgvC,GAAKnhE,KAAKgpD,KAAKmY,GACzC9zD,OAAQ42B,EAAI,EAAIjkC,KAAKmyB,MAAM8R,GAAKjkC,KAAKgpD,KAAK/kB,GAC1CuxC,oBAAqBA,GAEP,GAAZl4D,EAAM,IAAuB,GAAZA,EAAM,IACzBk4D,EAAoB91E,KAAK,QAAS4d,GAEhCizD,IACFiF,EAAoB91E,KAAK,cAAewvE,EAAYhlB,aACpDsrB,EAAoB91E,KAAK,YAAa2pD,GACtCmsB,EAAoB91E,KAAK,UAAWwvE,EAAY/kB,SAChDqrB,EAAoB91E,KAAK,WAAYwvE,EAAY9lB,UACjDosB,EAAoB91E,KAAK,aAAcwvE,EAAY5lB,YACnDksB,EAAoB91E,KAAK,cAAe,CAACwvE,EAAY5kB,WACrDkrB,EAAoB91E,KAAK,iBAAkBwvE,EAAY3kB,iBAErD1B,GACF2sB,EAAoB91E,KAAK,YAAauvE,EAAUvsC,WAElD8yC,EAAoB91E,KAAK,eAAgB,UACzC81E,EAAoB91E,KAAK,YAAa,UACtC,MAAM+1E,EAAY,GAAMvB,EACxB,IAAI3zD,EAAI2zD,EAAQqB,EAAcE,EAAYpsB,EAC1C,MAAMqsB,EAAqB,GACrBC,EAAmB,GACzB,IAIIC,EAJAl2C,EAAa,EACbm2C,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAErB,IAAK,IAAI/zE,EAAI,EAAGwE,EAAKymE,EAAOjuE,OAAQgD,EAAIwE,EAAIxE,GAAK,EAAG,CAClD,MAAMuhD,EAAO0pB,EAAOjrE,GACpB,GAAa,OAATuhD,EAAe,CACjBsyB,GAAcn2C,EACdA,EAAa,EACbnf,EAAI2zD,EAAQqB,EAAcE,EAAYpsB,IACpC0sB,EACF,QACF,CACA,MAAM5yB,EAAO8pB,EAAOjrE,EAAI,IAAMmtE,EAAUhsB,KACpCA,IAASyyB,IACPrF,GACFmF,EAAmBh2E,KAAK,OAAQyjD,GAE9B0F,GACF8sB,EAAiBj2E,KAAK,OAAQyjD,GAEhCyyB,EAAezyB,GAEjBzjB,EAAa1/B,KAAKqI,IAAIq3B,EAAY01C,EAAQU,IAC1C,MAAME,EAAiB,CACrBzyB,EACAhjC,EACEk1D,EAAYN,EAAOW,GACnB5B,GAASiB,EAAOW,GAAoBT,EAAWU,IACjD,IAAO1sB,EAAc3pB,GAAcm2C,GAErCt1D,GAAK40D,EAAOW,GACRvF,GACFmF,EAAmBh2E,KAAK,aAAcs2E,GAEpCntB,GACF8sB,EAAiBj2E,KAAK,WAAYs2E,KAElCF,CACJ,CAIA,OAHAtwE,MAAMqW,UAAUnc,KAAKsD,MAAMwyE,EAAqBE,GAChDlwE,MAAMqW,UAAUnc,KAAKsD,MAAMwyE,EAAqBG,GAChD/6E,KAAKszE,QAAQ/rE,GAAO80B,EACbA,CACT,CAWAg/C,qBAAAA,CACE3zC,EACAqtC,EACAC,EACAC,EACA8D,EACApM,EACAC,GAEAllC,EAAQ6P,YACR7P,EAAQ8P,OAAOpvC,MAAMs/B,EAASqtC,GAC9BrtC,EAAQ+P,OAAOrvC,MAAMs/B,EAASstC,GAC9BttC,EAAQ+P,OAAOrvC,MAAMs/B,EAASutC,GAC9BvtC,EAAQ+P,OAAOrvC,MAAMs/B,EAASqxC,GAC9BrxC,EAAQ+P,OAAOrvC,MAAMs/B,EAASqtC,GAC1BpI,IACF3sE,KAAK65E,mBAA4ClN,EAAgB,GACjEjlC,EAAQI,UAAmC6kC,EAAgB,GAC3D3sE,KAAKopD,MAAM1hB,IAETklC,IACF5sE,KAAKs7E,gBACH5zC,EACyBklC,GAE3BllC,EAAQiiB,SAEZ,CAsBA4xB,gCAAAA,CACEC,EACAC,EACA7S,EACAC,EACAr2D,EACAC,EACAipE,EACAC,EACAC,EACAC,EACAntE,EACAgU,EACAo5D,EACA1xB,EACA2xB,EACAzsE,GAIA,IAAIqW,EAAIijD,GAFR8S,GAAWh5D,EAAM,IAGbkD,EAAIijD,GAFR8S,GAAWj5D,EAAM,IAIjB,MAAM6jD,EAAI/zD,EAAQopE,EAAUJ,EAAaA,EAAaI,EAAUppE,EAC1D62B,EAAI52B,EAASopE,EAAUJ,EAAcA,EAAcI,EAAUppE,EAC7DupE,EAAO5xB,EAAQ,GAAKmc,EAAI7jD,EAAM,GAAK0nC,EAAQ,GAC3C6xB,EAAO7xB,EAAQ,GAAK/gB,EAAI3mB,EAAM,GAAK0nC,EAAQ,GAC3C8xB,EAAOv2D,EAAIykC,EAAQ,GACnB+xB,EAAOv2D,EAAIwkC,EAAQ,GAazB,IAAI9kC,EAqCJ,OAhDIy2D,GAA2B,IAAbrtE,KAChBqmE,EAAG,GAAKmH,EACRnD,EAAG,GAAKmD,EACRnH,EAAG,GAAKoH,EACRnH,EAAG,GAAKmH,EACRnH,EAAG,GAAKkH,EAAOF,EACf/G,EAAG,GAAKD,EAAG,GACXC,EAAG,GAAKkH,EAAOF,EACflD,EAAG,GAAK9D,EAAG,IAII,IAAbvmE,GACF4W,GAAY/W,EAAAA,EAAAA,KACV2H,EAAAA,EAAAA,MACA0yD,EACAC,EACA,EACA,EACAn6D,GACCk6D,GACAC,IAGHxtD,EAAAA,EAAAA,IAAeiK,EAAWyvD,IAC1B15D,EAAAA,EAAAA,IAAeiK,EAAW0vD,IAC1B35D,EAAAA,EAAAA,IAAeiK,EAAW2vD,IAC1B55D,EAAAA,EAAAA,IAAeiK,EAAWyzD,IAC1BzsD,EAAAA,EAAAA,GACElnB,KAAKmI,IAAIwnE,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI8D,EAAG,IACjC3zE,KAAKmI,IAAIwnE,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI8D,EAAG,IACjC3zE,KAAKqI,IAAIsnE,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI8D,EAAG,IACjC3zE,KAAKqI,IAAIsnE,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI8D,EAAG,IACjCD,KAGFxsD,EAAAA,EAAAA,GACElnB,KAAKmI,IAAI2uE,EAAMA,EAAOF,GACtB52E,KAAKmI,IAAI4uE,EAAMA,EAAOF,GACtB72E,KAAKqI,IAAIyuE,EAAMA,EAAOF,GACtB52E,KAAKqI,IAAI0uE,EAAMA,EAAOF,GACtBnD,GAGAgD,IACFn2D,EAAIvgB,KAAKq9B,MAAM9c,GACfC,EAAIxgB,KAAKq9B,MAAM7c,IAEV,CACLw2D,WAAYz2D,EACZ02D,WAAYz2D,EACZ02D,WAAY/V,EACZgW,WAAYlzC,EACZuyC,QAASA,EACTC,QAASA,EACT3C,aAAc,CACZ5tD,KAAMwtD,EAAU,GAChBvtD,KAAMutD,EAAU,GAChBttD,KAAMstD,EAAU,GAChBrtD,KAAMqtD,EAAU,GAChBn0E,MAAO2K,GAETsoC,gBAAiBtyB,EACjB5C,MAAOA,EAEX,CAaA85D,mBAAAA,CACE90C,EACA+0C,EACAC,EACAvpC,EACA/lC,EACAu/D,EACAC,GAEA,MAAMmP,KAAgBpP,IAAmBC,GAEnC+P,EAAMxpC,EAAW+lC,aACjB0D,EAAgBhQ,EACjBA,EAAkB,GAAKz5B,EAAWzwB,MAAM,GAAM,EAC/C,EAiCJ,OA/BEi6D,EAAIrxD,KAAOsxD,GAAiBH,EAAiB,IAC7CE,EAAInxD,KAAOoxD,GAAiB,GAC5BD,EAAIpxD,KAAOqxD,GAAiBH,EAAiB,IAC7CE,EAAIlxD,KAAOmxD,GAAiB,IAGxBb,GACF/7E,KAAKq7E,sBACH3zC,EACAqtC,EACAC,EACAC,EACA8D,EACyBpM,EACAC,IAG7BiQ,EAAAA,EAAAA,IACEn1C,EACAyL,EAAWyE,gBACXxqC,EACAsvE,EACAvpC,EAAWyoC,QACXzoC,EAAW0oC,QACX1oC,EAAWmpC,WACXnpC,EAAWopC,WACXppC,EAAWipC,WACXjpC,EAAWkpC,WACXlpC,EAAWzwB,SAGR,CACT,CAMA0mC,KAAAA,CAAM1hB,GACJ,MAAMo1C,EAAgB98E,KAAK65E,mBAC3B,GAAIiD,EAAe,CACjB,MAAMnL,GAASt2D,EAAAA,EAAAA,IAAerb,KAAK+5E,mBAAoB,CAAC,EAAG,IACrDgD,EAAa,IAAM/8E,KAAK4V,WAC9B8xB,EAAQ4P,OACR5P,EAAQzgB,UAAU0qD,EAAO,GAAKoL,EAAYpL,EAAO,GAAKoL,GAChC,IAAlBD,GACFp1C,EAAQhlB,MAAMo6D,EAAeA,GAE/Bp1C,EAAQnhB,OAAOvmB,KAAKi6E,cACtB,CACAvyC,EAAQ1G,OACJ87C,GACFp1C,EAAQs1C,SAEZ,CAOA1B,eAAAA,CAAgB5zC,EAASwnC,GACvBxnC,EAAQ4nB,YACiD4f,EAAY,GAChEA,EAAY,KAGjBxnC,EAAQopB,UAAmCoe,EAAY,GACvDxnC,EAAQ6nB,QAAwC2f,EAAY,GAC5DxnC,EAAQ8mB,SAA0C0gB,EAAY,GAC9DxnC,EAAQgnB,WAAoCwgB,EAAY,GACxDxnC,EAAQioB,eAAwCuf,EAAY,GAC5DxnC,EAAQqpB,YAA0Cme,EAAY,IAChE,CAUA+N,4BAAAA,CAA6Bt0B,EAAMitB,EAASD,EAAW1nB,GACrD,MAAMsmB,EAAYv0E,KAAKi0E,WAAW2B,GAE5Bv5C,EAAQr8B,KAAKq6E,YAAY1xB,EAAMitB,EAAS3nB,EAAS0nB,GAEjDrB,EAAct0E,KAAK+zE,aAAa4B,GAChC//D,EAAa5V,KAAK4V,WAClB0jE,EAAQD,EACZzuE,MAAMC,QAAQ89C,GAAQA,EAAK,GAAKA,EAChC4rB,EAAU1rB,WAAagtB,EAAAA,IAEnBE,EAAW1C,EAAWkB,EAAUprB,cAAgB2sB,EAAAA,IAChDrnB,EACJ6lB,GAAeA,EAAYxjB,UAAYwjB,EAAYxjB,UAAY,EASjE,MAAO,CACLz0B,MAAOA,EACPq/C,QAPcpC,GADFj9C,EAAM7pB,MAAQoD,EAAa,EAAI2+D,EAAU7xD,MAAM,IAC7B,GAAK,GAAM42D,GAAS7qB,EAQlDktB,QANC5F,EAAW15C,EAAM5pB,OAAUmD,EAC5B,GAAK,GAAMmgE,GAAYtnB,EAO3B,CAgBAyuB,QAAAA,CACEx1C,EACA+0C,EACAn3D,EACA8nD,EACA0O,EACAqB,EACAC,EACAC,GAEA,MAAMC,EAAgBt9E,KAAKm6E,eAE3B,IAAIoD,EACAv9E,KAAKg6E,oBAAqB93D,EAAAA,EAAAA,IAAOoD,EAAWtlB,KAAK+5E,oBACnDwD,EAAmBv9E,KAAKg6E,mBAEnBh6E,KAAKg6E,oBACRh6E,KAAKg6E,kBAAoB,IAE3BuD,GAAmB11D,EAAAA,EAAAA,IACjB7nB,KAAK8Q,YACL,EACA9Q,KAAK8Q,YAAY1M,OACjB,EACAkhB,EACAtlB,KAAKg6E,oBAEPwD,EAAAA,EAAAA,IAAsBx9E,KAAK+5E,mBAAoBz0D,IAEjD,IAAIle,EAAI,EACR,MAAMwE,EAAKwhE,EAAahpE,OACxB,IACI8qD,EACAwsB,EACFC,EAEA34D,EACAy6D,EACAC,EACAC,EACAC,EACAvoC,EACAsT,EACAitB,EACAD,EACA1nB,EAdE3gB,EAAI,EAeJuwC,EAAc,EACdC,EAAgB,EACpB,MAAMC,EAAkB/9E,KAAK85E,iBACvBkE,EAAeh+E,KAAKi6E,cACpBgE,EACJ74E,KAAKq9B,MAAgD,KAA1Cr9B,KAAKkkC,OAAOhkB,EAAU,GAAIA,EAAU,KAAc,KAEzDvc,EAAwD,CAC5D2+B,QAASA,EACT9xB,WAAY5V,KAAK4V,WACjBnH,WAAYzO,KAAKyO,WACjBC,SAAUsvE,GAKNE,EACJl+E,KAAKotE,cAAgBA,GAAgBptE,KAAKktB,SAAW,EAAI,IAC3D,IAA0D5d,EACtDqW,EAAGC,EAAGu4D,EACV,KAAO/2E,EAAIwE,GAAI,CACb,MAAMsjE,EAAc9B,EAAahmE,GAIjC,OAFE8nE,EAAY,IAGZ,KAAKL,EAAkB/C,eACrBx8D,EACE4/D,EAAY,GAEdiP,EAAkBjP,EAAY,GACzB5/D,EAAQmf,mBAGGxuB,IAAdm9E,IACClqD,EAAAA,EAAAA,IAAWkqD,EAAWe,EAAgBpuE,eAIrC3I,EAFFA,EAA2B8nE,EAAY,GAAM,EAL7C9nE,EAA2B8nE,EAAY,GASrCoO,IACFA,EAAcpwE,OAASgiE,EAAY,IAErC,MACF,KAAKL,EAAkB9C,WACjB8R,EAAcK,IAChBl+E,KAAKopD,MAAM1hB,GACXm2C,EAAc,GAEZC,EAAgBI,IAClBx2C,EAAQiiB,SACRm0B,EAAgB,GAEbD,GAAgBC,IACnBp2C,EAAQ6P,YACRkmC,EAAQ94D,IACR+4D,EAAQ/4D,OAERvd,EACF,MACF,KAAKynE,EAAkB7C,OACrB1+B,EAA2B4hC,EAAY,GACvC,MAAMx5C,EAAK6nD,EAAiBjwC,GACtB3X,EAAK4nD,EAAiBjwC,EAAI,GAG1B/Z,EAFKgqD,EAAiBjwC,EAAI,GAEhB5X,EACVlC,EAFK+pD,EAAiBjwC,EAAI,GAEhB3X,EACVuT,EAAI9jC,KAAKwX,KAAK2W,EAAKA,EAAKC,EAAKA,GACnCkU,EAAQ8P,OAAO9hB,EAAKwT,EAAGvT,GACvB+R,EAAQupB,IAAIv7B,EAAIC,EAAIuT,EAAG,EAAG,EAAI9jC,KAAKuyB,IAAI,KACrCvwB,EACF,MACF,KAAKynE,EAAkB5C,WACrBvkC,EAAQ2pB,cACNjqD,EACF,MACF,KAAKynE,EAAkB3C,OACrB5+B,EAA2B4hC,EAAY,GACvChgB,EAAKggB,EAAY,GACjB,MAAM3/D,EAEF2/D,EAAY,GAEVxzD,EAAWwzD,EAAY,GACvB1pC,EAAK0pC,EAAY,GACvBnmE,EAAMwG,SAAWA,EACjBxG,EAAMuG,QAAUA,EACVlI,KAAK22E,IACTA,EAAgB32E,GAAK,IAEvB,MAAM+gE,EAAS4V,EAAgB32E,GAC3Bo+B,EACFA,EAAG+3C,EAAkBjwC,EAAG4hB,EAAI,EAAGiZ,IAE/BA,EAAO,GAAKoV,EAAiBjwC,GAC7B66B,EAAO,GAAKoV,EAAiBjwC,EAAI,GACjC66B,EAAO/jE,OAAS,GAEdk5E,IACFA,EAAcpwE,OAASgiE,EAAY,IAErCxzD,EAASysD,EAAQp/D,KACf3B,EACF,MACF,KAAKynE,EAAkBzC,WACrB9+B,EAA2B4hC,EAAY,GACvChgB,EAA4BggB,EAAY,GACxC75B,EAEI65B,EAAY,GAIhBwM,EAAiCxM,EAAY,GAC7CyM,EAAiCzM,EAAY,GAC7C,IAAIz8D,EAAgCy8D,EAAY,GAChD,MAAM9hE,EAAiC8hE,EAAY,GAC7C0M,GAAiC1M,EAAY,GAC7C2M,GAAiC3M,EAAY,GAC7C3sD,GAAyC2sD,EAAY,IAC3D,IAAIxgE,GAAkCwgE,EAAY,IAClD,MAAMxsD,GACJwsD,EAAY,IAEd,IAAI18D,GAA+B08D,EAAY,IAC/ClsD,EAAgBksD,EAAY,KAAO,YACnC,MAAMxD,GAEFwD,EAAY,IAGhB,IAAK75B,GAAS65B,EAAY9qE,QAAU,GAAI,CAEtCukD,EAA8BumB,EAAY,IAC1C0G,EAAiC1G,EAAY,IAC7CyG,EAAmCzG,EAAY,IAC/CjhB,EAAiCihB,EAAY,IAC7C,MAAMkP,EAAkBp+E,KAAKi9E,6BAC3Bt0B,EACAitB,EACAD,EACA1nB,GAEF5Y,EAAQ+oC,EAAgB/hD,MACxB6yC,EAAY,GAAK75B,EACjB,MAAMghC,EAAqCnH,EAAY,IACvDwM,GAAW0C,EAAgB1C,QAAUrF,GAAer2E,KAAK4V,WACzDs5D,EAAY,GAAKwM,EACjB,MAAMpF,EAAqCpH,EAAY,IACvDyM,GAAWyC,EAAgBzC,QAAUrF,GAAet2E,KAAK4V,WACzDs5D,EAAY,GAAKyM,EACjBlpE,EAAS4iC,EAAM5iC,OACfy8D,EAAY,GAAKz8D,EACjBD,GAAQ6iC,EAAM7iC,MACd08D,EAAY,IAAM18D,EACpB,CAEA,IAAIgiE,GAKApqB,GAASi0B,GAA2BC,GAJpCpP,EAAY9qE,OAAS,KACvBowE,GAAwCtF,EAAY,KAIlDA,EAAY9qE,OAAS,IACvBgmD,GAAwC8kB,EAAY,IACpDmP,GACEnP,EAAY,IAEdoP,GACEpP,EAAY,MAGd9kB,GAAUyqB,EAAAA,GACVwJ,GAA4B,KAC5BC,GAA8B,MAG5B/7D,IAAkB07D,EAEpBvvE,IAAYsvE,EACFz7D,IAAmB07D,IAE7BvvE,IAAYsvE,GAEd,IAAIO,GAAa,EACjB,KAAOjxC,EAAI4hB,EAAI5hB,GAAK,EAAG,CACrB,GACEknC,IACAA,GAAe+J,MAAgB/rE,GAAQxS,KAAK4V,WAE5C,SAEF,MAAMu9B,EAAanzC,KAAKu7E,iCACtBlmC,EAAM7iC,MACN6iC,EAAM5iC,OACN8qE,EAAiBjwC,GACjBiwC,EAAiBjwC,EAAI,GACrB96B,GACAC,EACAipE,EACAC,EACAC,GACAC,GACAntE,GACAgU,GACAo5D,EACA1xB,KACEi0B,MAA+BC,GACjChvE,GAGIo1D,EAAO,CACXh9B,EACA+0C,EACApnC,EACAlC,EACA/lC,EACAixE,GACAC,IAEF,GAAIjB,EAAe,CACjB,IAAImB,EAAWC,EAAoBC,EAgB/BC,EAAaC,EAfjB,GAAIlT,GAAwB,CAC1B,MAAM1kE,EAAQkoD,EAAK5hB,EACnB,IAAKo+B,GAAuB1kE,GAAQ,CAElC0kE,GAAuB1kE,GAAS,CAAC09D,OAAM1hD,iBAEvC,QACF,CACA,MAAM67D,EAAiBnT,GAAuB1kE,GAC9Cw3E,EAAYK,EAAena,KAC3B+Z,EAAqBI,EAAe77D,qBAC7B0oD,GAAuB1kE,GAC9B03E,EAAoB1F,EAAgBwF,EACtC,CAgBA,IAZEA,GACwB,cAAvBC,GACEpB,EAAcyB,SAASJ,KAE1BC,GAAc,GAGI,cAAlB37D,GACCq6D,EAAcyB,SAAS3rC,EAAW+lC,gBAEnC0F,GAAa,GAGU,cAAvBH,GACkB,cAAlBz7D,EACA,CACA,MAAMjP,EAAS4qE,GAAeC,EAC9BD,EAAc5qE,EACd6qE,EAAa7qE,CACf,CACI4qE,IACyB,SAAvBF,GACFpB,EAAcjyD,OAAOszD,GAEvB1+E,KAAKw8E,oBAAoBp0E,MAAMpI,KAAMw+E,IAEnCI,IACoB,SAAlB57D,GACFq6D,EAAcjyD,OAAO+nB,EAAW+lC,cAElCl5E,KAAKw8E,oBAAoBp0E,MAAMpI,KAAM0kE,GAEzC,MACE1kE,KAAKw8E,oBAAoBp0E,MAAMpI,KAAM0kE,EAEzC,GACEt9D,EACF,MACF,KAAKynE,EAAkB1C,WACrB,MAAM/wB,GAA+B8zB,EAAY,GAC3Cz6C,GAA6By6C,EAAY,GACzC6G,GAAkC7G,EAAY,GAC9Ct4D,GAAkCs4D,EAAY,GACpDjhB,EAAiCihB,EAAY,GAC7C,MAAM5lB,GAAkC4lB,EAAY,GAC9C6P,GAA2C7P,EAAY,GACvDplB,GAAiColB,EAAY,GACnDyG,EAAmCzG,EAAY,GAC/C,MAAMzgB,GAAqCygB,EAAY,IACvDvmB,EAA4CumB,EAAY,IACpDtkE,MAAMC,QAAQ89C,KAEhBA,EAAOA,EAAK2xB,OAAOZ,EAAqB,KAE1C9D,EAAiC1G,EAAY,IAC7C,MAAM8P,GAAkB,CACC9P,EAAY,IACZA,EAAY,KAErClsD,EAAgBksD,EAAY,KAAO,YAEnC,MAAMsH,GAA0CtH,EAAY,IACtDqF,GAAYv0E,KAAKi0E,WAAW2B,GAC5BrtB,GAAOgsB,GAAUhsB,KACjB6tB,GAAY,CAChB7B,GAAU7xD,MAAM,GAAKq8D,GACrBxK,GAAU7xD,MAAM,GAAKq8D,IAGvB,IAAIE,GACA12B,MAAQvoD,KAAKk6E,QACf+E,GAAej/E,KAAKk6E,QAAQ3xB,KAE5B02B,GAAe,CAAC,EAChBj/E,KAAKk6E,QAAQ3xB,IAAQ02B,IAGvB,MAAMC,IAAa/6C,EAAAA,EAAAA,GAAiBo5C,EAAkBniC,GAAO3mB,GAAK,GAC5D0qD,GACJ/5E,KAAKC,IAAI+wE,GAAU,KACnB6B,EAAAA,EAAAA,IAAyB1vB,GAAMI,EAAMs2B,IACvC,GAAIroE,IAAYuoE,IAAcD,GAAY,CACxC,MAGME,EAAQrH,EACZwF,EACAniC,GACA3mB,GACA,EACAk0B,GANCu2B,GAAaC,IAAc9F,EAAoB1wB,EAFhC3oD,KAAKi0E,WAAW2B,GAAS/sB,WAUzCS,GACAlkD,KAAKC,IAAI+wE,GAAU,IACnB6B,EAAAA,GACA1vB,GACA02B,GACAhB,EAA4B,EAAIj+E,KAAKi6E,cACrCzD,IAEF6I,EAAW,GAAID,EAAO,CAEpB,MAAMnG,EAAyB,GAC/B,IAAIzvC,EAAG8rC,EAAIuD,EAAOx8C,EAAOs9C,EACzB,GAAIhE,EACF,IAAKnsC,EAAI,EAAG8rC,EAAK8J,EAAMh7E,OAAQolC,EAAI8rC,IAAM9rC,EAAG,CAC1CmwC,EAAOyF,EAAM51C,GACbqvC,EAA+Bc,EAAK,GACpCt9C,EAAQr8B,KAAKq6E,YAAYxB,EAAOjD,EAAS,GAAID,GAC7C+F,EACyB/B,EAAK,IAC3BvD,GAAU,GAAK,GAAK3nB,GAAcA,IACrCktB,EACE5F,GAAW15C,EAAM5pB,OACG,GAAlB,GAAMsjE,IAAgBtnB,GAAc2nB,GAAU,GAC9CA,GAAU,GACZtsB,GACF,MAAM3W,EAAanzC,KAAKu7E,iCACtBl/C,EAAM7pB,MACN6pB,EAAM5pB,OACNknE,EAAK,GACLA,EAAK,GACLt9C,EAAM7pB,MACN6pB,EAAM5pB,OACNipE,EACAC,EACA,EACA,EACAhC,EAAK,GACLqF,IACA,EACAnK,EAAAA,IACA,EACAvlE,GAEF,GACE+tE,GACkB,cAAlBr6D,GACAq6D,EAAcyB,SAAS3rC,EAAW+lC,cAElC,MAAMmG,EAERpG,EAAuBn0E,KAAK,CAC1B4iC,EACA+0C,EACApgD,EACA8W,EACA,EACA,KACA,MAEJ,CAEF,GAAI8a,EACF,IAAKzkB,EAAI,EAAG8rC,EAAK8J,EAAMh7E,OAAQolC,EAAI8rC,IAAM9rC,EAAG,CAC1CmwC,EAAOyF,EAAM51C,GACbqvC,EAA+Bc,EAAK,GACpCt9C,EAAQr8B,KAAKq6E,YAAYxB,EAAOjD,EAAS3nB,EAAS,IAClDytB,EAAiC/B,EAAK,GACtCgC,EAAU5F,GAAW15C,EAAM5pB,OAASq3C,GACpC,MAAM3W,EAAanzC,KAAKu7E,iCACtBl/C,EAAM7pB,MACN6pB,EAAM5pB,OACNknE,EAAK,GACLA,EAAK,GACLt9C,EAAM7pB,MACN6pB,EAAM5pB,OACNipE,EACAC,EACA,EACA,EACAhC,EAAK,GACLqF,IACA,EACAnK,EAAAA,IACA,EACAvlE,GAEF,GACE+tE,GACkB,cAAlBr6D,GACAq6D,EAAcyB,SAAS3rC,EAAW+lC,cAElC,MAAMmG,EAERpG,EAAuBn0E,KAAK,CAC1B4iC,EACA+0C,EACApgD,EACA8W,EACA,EACA,KACA,MAEJ,CAEEkqC,GAAmC,SAAlBr6D,GACnBq6D,EAAc1zE,KAAKsvE,EAAuBp5E,IAAIm5E,IAEhD,IAAK,IAAI5xE,EAAI,EAAGwE,EAAKqtE,EAAuB70E,OAAQgD,EAAIwE,IAAMxE,EAC5DpH,KAAKw8E,oBAAoBp0E,MAAMpI,KAAMi5E,EAAuB7xE,GAEhE,CACF,GACEA,EACF,MACF,KAAKynE,EAAkBxC,aACrB,QAAwBpsE,IAApBk9E,EAA+B,CACjC7tE,EACE4/D,EAAY,GAEd,MAAM9/D,EAAS+tE,EACb7tE,EACA6uE,EACAn7D,GAEF,GAAI5T,EACF,OAAOA,CAEX,GACEhI,EACF,MACF,KAAKynE,EAAkBvC,KACjB4R,EACFL,IAEA79E,KAAKopD,MAAM1hB,KAEXtgC,EACF,MACF,KAAKynE,EAAkBtC,gBAQrB,IAPAj/B,EAA2B4hC,EAAY,GACvChgB,EAA4BggB,EAAY,GACxCvpD,EAAI43D,EAAiBjwC,GACrB1nB,EAAI23D,EAAiBjwC,EAAI,GACzB5F,EAAQ8P,OAAO7xB,EAAGC,GAClB63D,EAAS93D,EAAI,GAAO,EACpB+3D,EAAS93D,EAAI,GAAO,EACf0nB,GAAK,EAAGA,EAAI4hB,EAAI5hB,GAAK,EACxB3nB,EAAI43D,EAAiBjwC,GACrB1nB,EAAI23D,EAAiBjwC,EAAI,GACzBqwC,EAAUh4D,EAAI,GAAO,EACrBi4D,EAAUh4D,EAAI,GAAO,EACjB0nB,GAAK4hB,EAAK,GAAKyuB,IAAWF,GAASG,IAAWF,IAChDh2C,EAAQ+P,OAAO9xB,EAAGC,GAClB63D,EAAQE,EACRD,EAAQE,KAGVx2E,EACF,MACF,KAAKynE,EAAkBrC,eACrBxsE,KAAK65E,mBAAqB3K,EAAY,GAElC2O,IACF79E,KAAKopD,MAAM1hB,GACXm2C,EAAc,EACVC,IACFp2C,EAAQiiB,SACRm0B,EAAgB,IAKpBp2C,EAAQI,UAAYonC,EAAY,KAC9B9nE,EACF,MACF,KAAKynE,EAAkBpC,iBACjBqR,IACFp2C,EAAQiiB,SACRm0B,EAAgB,GAElB99E,KAAKs7E,gBAAgB5zC,EAAkCwnC,KACrD9nE,EACF,MACF,KAAKynE,EAAkBnC,OACjBwR,EACFJ,IAEAp2C,EAAQiiB,WAERviD,EACF,MACF,UACIA,EAGR,CACIy2E,GACF79E,KAAKopD,MAAM1hB,GAETo2C,GACFp2C,EAAQiiB,QAGZ,CAUA21B,OAAAA,CACE53C,EACA+0C,EACAn3D,EACA04D,EACAlC,EACAuB,GAEAr9E,KAAKi6E,cAAgB+D,EACrBh+E,KAAKk9E,SACHx1C,EACA+0C,EACAn3D,EACAtlB,KAAKotE,aACL0O,OACA77E,OACAA,EACAo9E,EAEJ,CAYAkC,mBAAAA,CACE73C,EACApiB,EACA04D,EACAb,EACAC,GAGA,OADAp9E,KAAKi6E,cAAgB+D,EACdh+E,KAAKk9E,SACVx1C,EACA,CAACA,EAAQiP,OAAOnkC,MAAOk1B,EAAQiP,OAAOlkC,QACtC6S,EACAtlB,KAAKstE,0BACL,EACA6P,EACAC,EAEJ,GChxCWoC,EAAM,CACjB,UACA,SACA,aACA,QACA,OACA,WAOWC,EAAY,CAAC,QAAS,QAMtBC,EAAgBF,EAAIpvD,QAC9BsnD,IAAiB+H,EAAUn8C,SAASo0C,KAwavC,MAAMiI,GAA6B,CAAC,EAoDpC,SAzdA,MAcEhgF,WAAAA,CACE8gE,EACAhyD,EACAmH,EACAsX,EACA0yD,EACAC,EACAjG,GAMA55E,KAAKi3E,WAAaxW,EAMlBzgE,KAAKitB,UAAYC,EAMjBltB,KAAK2V,YAAcC,EAMnB5V,KAAKk3E,YAAczoE,EAMnBzO,KAAK8/E,cAAgBD,EAMrB7/E,KAAK+/E,mBAAqB,CAAC,EAM3B//E,KAAKggF,qBAAuB,KAM5BhgF,KAAKigF,wBAAyB/pE,EAAAA,EAAAA,MAM9BlW,KAAKkgF,iBAAmB,KAMxBlgF,KAAKmgF,wBAA0B,CAAC,EAEhCngF,KAAKogF,iBAAiBR,EAAiBhG,EACzC,CAMAliC,IAAAA,CAAKhQ,EAASpiB,GACZ,MAAM+6D,EAAiBrgF,KAAKsgF,cAAch7D,GAC1CoiB,EAAQ6P,YACR7P,EAAQ8P,OAAO6oC,EAAe,GAAIA,EAAe,IACjD34C,EAAQ+P,OAAO4oC,EAAe,GAAIA,EAAe,IACjD34C,EAAQ+P,OAAO4oC,EAAe,GAAIA,EAAe,IACjD34C,EAAQ+P,OAAO4oC,EAAe,GAAIA,EAAe,IACjD34C,EAAQgQ,MACV,CAQA0oC,gBAAAA,CAAiBR,EAAiBhG,GAChC,IAAK,MAAM1sE,KAAU0yE,EAAiB,CACpC,IAAIW,EAAYvgF,KAAK+/E,mBAAmB7yE,QACtBjN,IAAdsgF,IACFA,EAAY,CAAC,EACbvgF,KAAK+/E,mBAAmB7yE,GAAUqzE,GAEpC,MAAMC,EAAsBZ,EAAgB1yE,GAC5C,IAAK,MAAMwqE,KAAe8I,EAAqB,CAC7C,MAAMpT,EAAeoT,EAAoB9I,GACzC6I,EAAU7I,GAAe,IAAI+I,EAC3BzgF,KAAKk3E,YACLl3E,KAAK2V,YACL3V,KAAKitB,UACLmgD,EACAwM,EAEJ,CACF,CACF,CAMA8G,YAAAA,CAAaH,GACX,IAAK,MAAMrzE,KAAUlN,KAAK+/E,mBAAoB,CAC5C,MAAMY,EAAa3gF,KAAK+/E,mBAAmB7yE,GAC3C,IAAK,IAAI9F,EAAI,EAAGwE,EAAK20E,EAAUn8E,OAAQgD,EAAIwE,IAAMxE,EAC/C,GAAIm5E,EAAUn5E,KAAMu5E,EAClB,OAAO,CAGb,CACA,OAAO,CACT,CAYA9xE,0BAAAA,CACEpO,EACAgO,EACAC,EACAI,EACAE,EACA4xE,GAGA,MAAMC,EAA6B,GADnC/xE,EAAe1J,KAAKq9B,MAAM3zB,IACa,EACjCwW,GAAY/W,EAAAA,EAAAA,IAChBvO,KAAKigF,uBACLnxE,EAAe,GACfA,EAAe,GACf,EAAIL,GACH,EAAIA,GACJC,GACAjO,EAAW,IACXA,EAAW,IAGRqgF,GAAc9gF,KAAKggF,qBACrBc,IAMF9gF,KAAKggF,sBAAuBr4C,EAAAA,EAAAA,GAC1Bk5C,EACAA,IAGJ,MAAMn5C,EAAU1nC,KAAKggF,qBAarB,IAAI5C,EAVF11C,EAAQiP,OAAOnkC,QAAUquE,GACzBn5C,EAAQiP,OAAOlkC,SAAWouE,GAE1Bn5C,EAAQiP,OAAOnkC,MAAQquE,EACvBn5C,EAAQiP,OAAOlkC,OAASouE,GACdC,GACVp5C,EAAQO,UAAU,EAAG,EAAG44C,EAAaA,QAKZ5gF,IAAvBD,KAAK8/E,gBACP1C,GAAYt4D,EAAAA,EAAAA,OACZsO,EAAAA,EAAAA,IAAiBgqD,EAAW38E,IAC5B4yB,EAAAA,EAAAA,GACE+pD,EACA3uE,GAAczO,KAAK8/E,cAAgBhxE,GACnCsuE,IAIJ,MAAM2D,EA4NH,SAA4BrxC,GACjC,QAA2CzvC,IAAvC0/E,GAA2BjwC,GAC7B,OAAOiwC,GAA2BjwC,GAGpC,MAAMlhC,EAAgB,EAATkhC,EAAa,EACpBsxC,EAAgBtxC,EAASA,EACzBuxC,EAAY,IAAIr2E,MAAMo2E,EAAgB,GAC5C,IAAK,IAAI55E,EAAI,EAAGA,GAAKsoC,IAAUtoC,EAC7B,IAAK,IAAImJ,EAAI,EAAGA,GAAKm/B,IAAUn/B,EAAG,CAChC,MAAMW,EAAa9J,EAAIA,EAAImJ,EAAIA,EAC/B,GAAIW,EAAa8vE,EACf,MAEF,IAAI7hC,EAAW8hC,EAAU/vE,GACpBiuC,IACHA,EAAW,GACX8hC,EAAU/vE,GAAciuC,GAE1BA,EAASr6C,KAA4C,IAArC4qC,EAAStoC,GAAKoH,GAAQkhC,EAASn/B,IAAU,GACrDnJ,EAAI,GACN+3C,EAASr6C,KAA4C,IAArC4qC,EAAStoC,GAAKoH,GAAQkhC,EAASn/B,IAAU,GAEvDA,EAAI,IACN4uC,EAASr6C,KAA4C,IAArC4qC,EAAStoC,GAAKoH,GAAQkhC,EAASn/B,IAAU,GACrDnJ,EAAI,GACN+3C,EAASr6C,KAA4C,IAArC4qC,EAAStoC,GAAKoH,GAAQkhC,EAASn/B,IAAU,GAG/D,CAGF,MAAM2wE,EAAa,GACnB,IAAK,IAAI95E,EAAI,EAAGwE,EAAKq1E,EAAU78E,OAAQgD,EAAIwE,IAAMxE,EAC3C65E,EAAU75E,IACZ85E,EAAWp8E,QAAQm8E,EAAU75E,IAKjC,OADAu4E,GAA2BjwC,GAAUwxC,EAC9BA,CACT,CArQoBC,CAAmBryE,GAGnC,IAAI4oE,EAQJ,SAASyF,EAAgB7tE,EAASC,EAAUyT,GAC1C,MAAMo+D,EAAY15C,EAAQU,aACxB,EACA,EACAy4C,EACAA,GACAz0D,KACF,IAAK,IAAIhlB,EAAI,EAAGwE,EAAKm1E,EAAQ38E,OAAQgD,EAAIwE,EAAIxE,IAC3C,GAAIg6E,EAAUL,EAAQ35E,IAAM,EAAG,CAC7B,IACGw5E,GACiB,SAAlB59D,GACiB,UAAhB00D,GAA2C,SAAhBA,GAC5BkJ,EAAoBt9C,SAASh0B,GAC7B,CACA,MAAM+xE,GAAON,EAAQ35E,GAAK,GAAK,EACzBue,EAAI7W,EAAgBuyE,EAAMR,EAC1Bj7D,EAAI9W,GAAiBuyE,EAAMR,EAAe,GAC1CzxE,EAASJ,EAASM,EAASC,EAAUoW,EAAIA,EAAIC,EAAIA,GACvD,GAAIxW,EACF,OAAOA,CAEX,CACAs4B,EAAQO,UAAU,EAAG,EAAG44C,EAAaA,GACrC,KACF,CAGJ,CAGA,MAAMS,EAAKv9E,OAAO2uB,KAAK1yB,KAAK+/E,oBAAoBlgF,IAAImmB,QAGpD,IAAI5e,EAAGmJ,EAAGgwE,EAAWgB,EAAUnyE,EAC/B,IAHAkyE,EAAGnwE,KAAKqwE,EAAAA,IAGHp6E,EAAIk6E,EAAGl9E,OAAS,EAAGgD,GAAK,IAAKA,EAAG,CACnC,MAAMuwE,EAAY2J,EAAGl6E,GAAG0R,WAExB,IADAynE,EAAYvgF,KAAK+/E,mBAAmBpI,GAC/BpnE,EAAIivE,EAAIp7E,OAAS,EAAGmM,GAAK,IAAKA,EAGjC,GAFAmnE,EAAc8H,EAAIjvE,GAClBgxE,EAAWhB,EAAU7I,QACJz3E,IAAbshF,IACFnyE,EAASmyE,EAAShC,oBAChB73C,EACApiB,EACA5W,EACAyuE,EACAC,GAEEhuE,GACF,OAAOA,CAIf,CAEF,CAMAkxE,aAAAA,CAAch7D,GACZ,MAAMm7C,EAAYzgE,KAAKi3E,WACvB,IAAKxW,EACH,OAAO,KAET,MAAMn1C,EAAOm1C,EAAU,GACjBl1C,EAAOk1C,EAAU,GACjBj1C,EAAOi1C,EAAU,GACjBh1C,EAAOg1C,EAAU,GACjB4f,EAAiB,CAAC/0D,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAElE,OADA1D,EAAAA,EAAAA,IAAYw4D,EAAgB,EAAG,EAAG,EAAG/6D,EAAW+6D,GACzCA,CACT,CAKAh5E,OAAAA,GACE,OAAOA,EAAAA,EAAAA,GAAQrH,KAAK+/E,mBACtB,CAaAT,OAAAA,CACEmC,EACAhF,EACAn3D,EACA04D,EACAlC,EACA4F,EACArE,GAEA,MAAMiE,EAAKv9E,OAAO2uB,KAAK1yB,KAAK+/E,oBAAoBlgF,IAAImmB,QACpDs7D,EAAGnwE,KAAKksE,EAAgBsE,EAAAA,GAAaH,EAAAA,IAErCE,EAAeA,GAA8BlC,EAC7C,MAAMoC,EAAkBpC,EAAIp7E,OAC5B,IAAK,IAAIgD,EAAI,EAAGwE,EAAK01E,EAAGl9E,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC3C,MAAMuwE,EAAY2J,EAAGl6E,GAAG0R,WAClB8+D,EAAU53E,KAAK+/E,mBAAmBpI,GACxC,IAAK,IAAIpnE,EAAI,EAAGqhC,EAAK8vC,EAAat9E,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CACrD,MAAMmnE,EAAcgK,EAAanxE,GAC3BsnE,EAASD,EAAQF,GACvB,QAAez3E,IAAX43E,EAAsB,CACxB,MAAMyF,EACc,OAAlBD,OAAyBp9E,EAAY43E,EAAOuC,mBACxC1yC,EAAU41C,EACZA,EAAcxmC,aACd2qC,EACEI,EACJ7hF,KAAKi3E,YACW,UAAhBS,GACgB,SAAhBA,EAmCF,GAlCImK,IACFn6C,EAAQ4P,OAGRt3C,KAAK03C,KAAKhQ,EAASpiB,IAGlBg4D,GACe,SAAhB5F,GACgB,UAAhBA,EAWA4F,EAAcwE,cAAcp6C,GAC1BmwC,EAAOyH,QACL53C,EACA+0C,EACAn3D,EACA04D,EACAlC,EACAuB,KAhBJxF,EAAOyH,QACL53C,EACA+0C,EACAn3D,EACA04D,EACAlC,EACAuB,GAcAwE,GACFn6C,EAAQs1C,UAENM,EAAe,CACjBA,EAAc9oD,SACd,MAAMxtB,EAAQs6E,EAAGl6E,GAAKw6E,EAAkBpC,EAAIztD,QAAQ2lD,GAC/C13E,KAAKmgF,wBAAwBn5E,KAChChH,KAAKmgF,wBAAwBn5E,GAAS,IAExChH,KAAKmgF,wBAAwBn5E,GAAOlC,KAAKw4E,EAC3C,CACF,CACF,CACF,CAEAt9E,KAAKkgF,iBAAmBuB,CAC1B,CAEAM,yBAAAA,GACE,OAAO/hF,KAAKmgF,uBACd,CAEA6B,kBAAAA,GACE,OAAOhiF,KAAKkgF,gBACd,CAEA/rE,cAAAA,GACE,MAAM8tE,EAAyBjiF,KAAKmgF,wBAC9BmB,EAAKv9E,OAAO2uB,KAAKuvD,GAAwBpiF,IAAImmB,QAAQ7U,KAAKqwE,EAAAA,IAChE,IAAK,IAAIp6E,EAAI,EAAGwE,EAAK01E,EAAGl9E,OAAQgD,EAAIwE,IAAMxE,EACxC66E,EAAuBX,EAAGl6E,IAAI/C,SAASi5E,IACrCA,EAAcllC,KAAKp4C,KAAKkgF,kBACxB5C,EAAcn3E,WAEhB87E,EAAuBX,EAAGl6E,IAAIhD,OAAS,CAE3C,G,0BCquBF,SAloCA,cAAsC2oE,EAUpCptE,WAAAA,CACE+nC,EACA9xB,EACAhI,EACA0X,EACA04D,EACA34D,EACA68D,GAEAniF,QAMAC,KAAKmiF,SAAWz6C,EAMhB1nC,KAAK2V,YAAcC,EAMnB5V,KAAK6kB,QAAUjX,EAMf5N,KAAKoiF,WAAa98D,EAMlBtlB,KAAKqiF,mBAAqB/8D,GACtB+iB,EAAAA,EAAAA,IAAQjjC,KAAKkkC,MAAMhkB,EAAU,GAAIA,EAAU,IAAK,IAChD,EAMJtlB,KAAKi6E,cAAgB+D,EAMrBh+E,KAAKsiF,kBAAoBj9D,EAMzBrlB,KAAKuiF,eAAiBL,EAMtBliF,KAAKwiF,kBAAoB,KAMzBxiF,KAAKyiF,oBAAsB,KAM3BziF,KAAK0iF,kBAAoB,KAMzB1iF,KAAK2iF,WAAa,KAMlB3iF,KAAK4iF,aAAe,KAMpB5iF,KAAKg8D,OAAS,KAMdh8D,KAAK6iF,cAAgB,EAMrB7iF,KAAK8iF,cAAgB,EAMrB9iF,KAAK+iF,aAAe,EAMpB/iF,KAAKgjF,cAAgB,EAMrBhjF,KAAKijF,cAAgB,EAMrBjjF,KAAKkjF,cAAgB,EAMrBljF,KAAKmjF,sBAAuB,EAM5BnjF,KAAKojF,eAAiB,EAMtBpjF,KAAKqjF,YAAc,CAAC,EAAG,GAMvBrjF,KAAKsjF,YAAc,EAMnBtjF,KAAK0oD,MAAQ,GAMb1oD,KAAKuzE,aAAe,EAMpBvzE,KAAKwzE,aAAe,EAMpBxzE,KAAKyzE,qBAAsB,EAM3BzzE,KAAK2zE,cAAgB,EAMrB3zE,KAAKujF,WAAa,CAAC,EAAG,GAMtBvjF,KAAK4zE,eAAiB,KAMtB5zE,KAAK8zE,iBAAmB,KAMxB9zE,KAAKg0E,WAAa,KAMlBh0E,KAAKg6E,kBAAoB,GAMzBh6E,KAAKwjF,oBAAqBttE,EAAAA,EAAAA,KAC5B,CASAutE,WAAAA,CAAYlvD,EAAiBC,EAAQC,EAAKlN,GACxC,IAAKvnB,KAAKg8D,OACR,OAEF,MAAMuhB,GAAmB11D,EAAAA,EAAAA,IACvB0M,EACAC,EACAC,EACAlN,EACAvnB,KAAKoiF,WACLpiF,KAAKg6E,mBAEDtyC,EAAU1nC,KAAKmiF,SACfuB,EAAiB1jF,KAAKwjF,mBACtBt8C,EAAQQ,EAAQi8C,YACI,GAAtB3jF,KAAKgjF,gBACPt7C,EAAQi8C,YAAcz8C,EAAQlnC,KAAKgjF,eAErC,IAAIt0E,EAAW1O,KAAKojF,eACY,IAA5BpjF,KAAKqiF,qBACP3zE,GAAY1O,KAAKi6E,eAEfj6E,KAAKmjF,uBACPz0E,GAAY1O,KAAKi6E,eAEnB,IAAK,IAAI7yE,EAAI,EAAGwE,EAAK2xE,EAAiBn5E,OAAQgD,EAAIwE,EAAIxE,GAAK,EAAG,CAC5D,MAAMue,EAAI43D,EAAiBn2E,GAAKpH,KAAK6iF,cAC/Bj9D,EAAI23D,EAAiBn2E,EAAI,GAAKpH,KAAK8iF,cACzC,GACe,IAAbp0E,GACuB,GAAvB1O,KAAKqjF,YAAY,IACM,GAAvBrjF,KAAKqjF,YAAY,GACjB,CACA,MAAMza,EAAUjjD,EAAI3lB,KAAK6iF,cACnBha,EAAUjjD,EAAI5lB,KAAK8iF,eACzBv0E,EAAAA,EAAAA,IACEm1E,EACA9a,EACAC,EACA,EACA,EACAn6D,GACCk6D,GACAC,GAEHnhC,EAAQ4P,OACR5P,EAAQpiB,UAAUld,MAAMs/B,EAASg8C,GACjCh8C,EAAQzgB,UAAU2hD,EAASC,GAC3BnhC,EAAQhlB,MAAM1iB,KAAKqjF,YAAY,GAAIrjF,KAAKqjF,YAAY,IACpD37C,EAAQ0O,UACNp2C,KAAKg8D,OACLh8D,KAAKijF,cACLjjF,KAAKkjF,cACLljF,KAAKsjF,YACLtjF,KAAK+iF,cACJ/iF,KAAK6iF,eACL7iF,KAAK8iF,cACN9iF,KAAKsjF,YACLtjF,KAAK+iF,cAEPr7C,EAAQs1C,SACV,MACEt1C,EAAQ0O,UACNp2C,KAAKg8D,OACLh8D,KAAKijF,cACLjjF,KAAKkjF,cACLljF,KAAKsjF,YACLtjF,KAAK+iF,aACLp9D,EACAC,EACA5lB,KAAKsjF,YACLtjF,KAAK+iF,aAGX,CAC0B,GAAtB/iF,KAAKgjF,gBACPt7C,EAAQi8C,YAAcz8C,EAE1B,CASA08C,SAAAA,CAAUrvD,EAAiBC,EAAQC,EAAKlN,GACtC,IAAKvnB,KAAKg0E,YAA6B,KAAfh0E,KAAK0oD,MAC3B,OAEE1oD,KAAK4zE,gBACP5zE,KAAK6jF,qBAAqB7jF,KAAK4zE,gBAE7B5zE,KAAK8zE,kBACP9zE,KAAK8jF,uBAAuB9jF,KAAK8zE,kBAEnC9zE,KAAK+jF,qBAAqB/jF,KAAKg0E,YAC/B,MAAMuJ,GAAmB11D,EAAAA,EAAAA,IACvB0M,EACAC,EACAC,EACAlN,EACAvnB,KAAKoiF,WACLpiF,KAAKg6E,mBAEDtyC,EAAU1nC,KAAKmiF,SACrB,IAAIzzE,EAAW1O,KAAK2zE,cAOpB,IANgC,IAA5B3zE,KAAKqiF,qBACP3zE,GAAY1O,KAAKi6E,eAEfj6E,KAAKyzE,sBACP/kE,GAAY1O,KAAKi6E,eAEZzlD,EAASC,EAAKD,GAAUjN,EAAQ,CACrC,MAAM5B,EAAI43D,EAAiB/oD,GAAUx0B,KAAKuzE,aACpC3tD,EAAI23D,EAAiB/oD,EAAS,GAAKx0B,KAAKwzE,aAE/B,IAAb9kE,GACsB,GAAtB1O,KAAKujF,WAAW,IACM,GAAtBvjF,KAAKujF,WAAW,IAEhB77C,EAAQ4P,OACR5P,EAAQzgB,UAAUtB,EAAI3lB,KAAKuzE,aAAc3tD,EAAI5lB,KAAKwzE,cAClD9rC,EAAQnhB,OAAO7X,GACfg5B,EAAQzgB,UAAUjnB,KAAKuzE,aAAcvzE,KAAKwzE,cAC1C9rC,EAAQhlB,MAAM1iB,KAAKujF,WAAW,GAAIvjF,KAAKujF,WAAW,IAC9CvjF,KAAK8zE,kBACPpsC,EAAQs8C,WAAWhkF,KAAK0oD,MAAO,EAAG,GAEhC1oD,KAAK4zE,gBACPlsC,EAAQu8C,SAASjkF,KAAK0oD,MAAO,EAAG,GAElChhB,EAAQs1C,YAEJh9E,KAAK8zE,kBACPpsC,EAAQs8C,WAAWhkF,KAAK0oD,MAAO/iC,EAAGC,GAEhC5lB,KAAK4zE,gBACPlsC,EAAQu8C,SAASjkF,KAAK0oD,MAAO/iC,EAAGC,GAGtC,CACF,CAWAs+D,aAAAA,CAAc3vD,EAAiBC,EAAQC,EAAKlN,EAAQ48D,GAClD,MAAMz8C,EAAU1nC,KAAKmiF,SACf5E,GAAmB11D,EAAAA,EAAAA,IACvB0M,EACAC,EACAC,EACAlN,EACAvnB,KAAKoiF,WACLpiF,KAAKg6E,mBAEPtyC,EAAQ8P,OAAO+lC,EAAiB,GAAIA,EAAiB,IACrD,IAAIn5E,EAASm5E,EAAiBn5E,OAC1B+/E,IACF//E,GAAU,GAEZ,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAQgD,GAAK,EAC/BsgC,EAAQ+P,OAAO8lC,EAAiBn2E,GAAIm2E,EAAiBn2E,EAAI,IAK3D,OAHI+8E,GACFz8C,EAAQ2pB,YAEH58B,CACT,CAUA2vD,UAAAA,CAAW7vD,EAAiBC,EAAQsE,EAAMvR,GACxC,IAAK,IAAIngB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1CotB,EAASx0B,KAAKkkF,cACZ3vD,EACAC,EACAsE,EAAK1xB,GACLmgB,GACA,GAGJ,OAAOiN,CACT,CAUA61C,UAAAA,CAAW96D,GAST,GARIvP,KAAKsiF,oBACP/yE,EACEA,EAASiW,oBACPxlB,KAAKsiF,kBACLtiF,KAAKuiF,kBAINrvD,EAAAA,EAAAA,IAAWlzB,KAAK6kB,QAAStV,EAASQ,aAAvC,CAGA,GAAI/P,KAAK2iF,YAAc3iF,KAAK4iF,aAAc,CACpC5iF,KAAK2iF,YACP3iF,KAAK6jF,qBAAqB7jF,KAAK2iF,YAE7B3iF,KAAK4iF,cACP5iF,KAAK8jF,uBAAuB9jF,KAAK4iF,cAEnC,MAAMrF,GAAmB8G,EAAAA,GAAAA,IACvB90E,EACAvP,KAAKoiF,WACLpiF,KAAKg6E,mBAEDzmD,EAAKgqD,EAAiB,GAAKA,EAAiB,GAC5C/pD,EAAK+pD,EAAiB,GAAKA,EAAiB,GAC5C7tC,EAAStqC,KAAKwX,KAAK2W,EAAKA,EAAKC,EAAKA,GAClCkU,EAAU1nC,KAAKmiF,SACrBz6C,EAAQ6P,YACR7P,EAAQupB,IACNssB,EAAiB,GACjBA,EAAiB,GACjB7tC,EACA,EACA,EAAItqC,KAAKuyB,IAEP33B,KAAK2iF,YACPj7C,EAAQ1G,OAENhhC,KAAK4iF,cACPl7C,EAAQiiB,QAEZ,CACmB,KAAf3pD,KAAK0oD,OACP1oD,KAAK4jF,UAAUr0E,EAAS6lB,YAAa,EAAG,EAAG,EAjC7C,CAmCF,CAUAmyB,QAAAA,CAASj1C,GACPtS,KAAKurE,mBAAmBj5D,EAAMy4C,UAAWz4C,EAAM04C,aAC/ChrD,KAAKwrE,cAAcl5D,EAAMmR,YACzBzjB,KAAK2rE,aAAar5D,EAAMq4C,UAC1B,CAKA25B,YAAAA,CAAah/D,GACXtlB,KAAKoiF,WAAa98D,CACpB,CAUA8kD,YAAAA,CAAa76D,GAEX,OADaA,EAASuX,WAEpB,IAAK,QACH9mB,KAAKkrE,UACmD37D,GAExD,MACF,IAAK,aACHvP,KAAK0qE,eACwDn7D,GAE7D,MACF,IAAK,UACHvP,KAAKorE,YACqD77D,GAE1D,MACF,IAAK,aACHvP,KAAK8qE,eACwDv7D,GAE7D,MACF,IAAK,kBACHvP,KAAK4qE,oBAEDr7D,GAGJ,MACF,IAAK,eACHvP,KAAKgrE,iBAEDz7D,GAGJ,MACF,IAAK,qBACHvP,KAAKwqE,uBAEDj7D,GAGJ,MACF,IAAK,SACHvP,KAAKqqE,WACoD96D,GAK/D,CAaAg7D,WAAAA,CAAYj7D,EAASgD,GACnB,MAAM/C,EAAW+C,EAAMiyE,qBAANjyE,CAA4BhD,GACxCC,IAGLvP,KAAKunD,SAASj1C,GACdtS,KAAKoqE,aAAa76D,GACpB,CASAi7D,sBAAAA,CAAuBj7D,GACrB,MAAMwlD,EAAaxlD,EAASgmD,qBAC5B,IAAK,IAAInuD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChDpH,KAAKoqE,aAAarV,EAAW3tD,GAEjC,CASA8jE,SAAAA,CAAU37D,GACJvP,KAAKsiF,oBACP/yE,EACEA,EAASiW,oBACPxlB,KAAKsiF,kBACLtiF,KAAKuiF,iBAIX,MAAMhuD,EAAkBhlB,EAAS+pB,qBAC3B/R,EAAShY,EAAS64D,YACpBpoE,KAAKg8D,QACPh8D,KAAKyjF,YAAYlvD,EAAiB,EAAGA,EAAgBnwB,OAAQmjB,GAE5C,KAAfvnB,KAAK0oD,OACP1oD,KAAK4jF,UAAUrvD,EAAiB,EAAGA,EAAgBnwB,OAAQmjB,EAE/D,CASAujD,cAAAA,CAAev7D,GACTvP,KAAKsiF,oBACP/yE,EACEA,EAASiW,oBACPxlB,KAAKsiF,kBACLtiF,KAAKuiF,iBAIX,MAAMhuD,EAAkBhlB,EAAS+pB,qBAC3B/R,EAAShY,EAAS64D,YACpBpoE,KAAKg8D,QACPh8D,KAAKyjF,YAAYlvD,EAAiB,EAAGA,EAAgBnwB,OAAQmjB,GAE5C,KAAfvnB,KAAK0oD,OACP1oD,KAAK4jF,UAAUrvD,EAAiB,EAAGA,EAAgBnwB,OAAQmjB,EAE/D,CASAmjD,cAAAA,CAAen7D,GASb,GARIvP,KAAKsiF,oBACP/yE,EACEA,EAASiW,oBACPxlB,KAAKsiF,kBACLtiF,KAAKuiF,kBAINrvD,EAAAA,EAAAA,IAAWlzB,KAAK6kB,QAAStV,EAASQ,aAAvC,CAGA,GAAI/P,KAAK4iF,aAAc,CACrB5iF,KAAK8jF,uBAAuB9jF,KAAK4iF,cACjC,MAAMl7C,EAAU1nC,KAAKmiF,SACf5tD,EAAkBhlB,EAAS+pB,qBACjCoO,EAAQ6P,YACRv3C,KAAKkkF,cACH3vD,EACA,EACAA,EAAgBnwB,OAChBmL,EAAS64D,aACT,GAEF1gC,EAAQiiB,QACV,CACA,GAAmB,KAAf3pD,KAAK0oD,MAAc,CACrB,MAAM87B,EAAej1E,EAAS2iD,kBAC9BlyD,KAAK4jF,UAAUY,EAAc,EAAG,EAAG,EACrC,CAlBA,CAmBF,CASA5Z,mBAAAA,CAAoBr7D,GACdvP,KAAKsiF,oBACP/yE,EAEIA,EAASiW,oBACPxlB,KAAKsiF,kBACLtiF,KAAKuiF,iBAIb,MAAMkC,EAAiBl1E,EAASQ,YAChC,IAAKmjB,EAAAA,EAAAA,IAAWlzB,KAAK6kB,QAAS4/D,GAA9B,CAGA,GAAIzkF,KAAK4iF,aAAc,CACrB5iF,KAAK8jF,uBAAuB9jF,KAAK4iF,cACjC,MAAMl7C,EAAU1nC,KAAKmiF,SACf5tD,EAAkBhlB,EAAS+pB,qBACjC,IAAI9E,EAAS,EACb,MAAMsE,EAAqCvpB,EAAS0qB,UAC9C1S,EAAShY,EAAS64D,YACxB1gC,EAAQ6P,YACR,IAAK,IAAInwC,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1CotB,EAASx0B,KAAKkkF,cACZ3vD,EACAC,EACAsE,EAAK1xB,GACLmgB,GACA,GAGJmgB,EAAQiiB,QACV,CACA,GAAmB,KAAf3pD,KAAK0oD,MAAc,CACrB,MAAMg8B,EAAgBn1E,EAAS0jD,mBAC/BjzD,KAAK4jF,UAAUc,EAAe,EAAGA,EAActgF,OAAQ,EACzD,CAvBA,CAwBF,CASAgnE,WAAAA,CAAY77D,GASV,GARIvP,KAAKsiF,oBACP/yE,EACEA,EAASiW,oBACPxlB,KAAKsiF,kBACLtiF,KAAKuiF,kBAINrvD,EAAAA,EAAAA,IAAWlzB,KAAK6kB,QAAStV,EAASQ,aAAvC,CAGA,GAAI/P,KAAK4iF,cAAgB5iF,KAAK2iF,WAAY,CACpC3iF,KAAK2iF,YACP3iF,KAAK6jF,qBAAqB7jF,KAAK2iF,YAE7B3iF,KAAK4iF,cACP5iF,KAAK8jF,uBAAuB9jF,KAAK4iF,cAEnC,MAAMl7C,EAAU1nC,KAAKmiF,SACrBz6C,EAAQ6P,YACRv3C,KAAKokF,WACH70E,EAASqqB,6BACT,EAC8BrqB,EAAS0qB,UACvC1qB,EAAS64D,aAEPpoE,KAAK2iF,YACPj7C,EAAQ1G,OAENhhC,KAAK4iF,cACPl7C,EAAQiiB,QAEZ,CACA,GAAmB,KAAf3pD,KAAK0oD,MAAc,CACrB,MAAMi8B,EAAoBp1E,EAAS2qB,uBACnCl6B,KAAK4jF,UAAUe,EAAmB,EAAG,EAAG,EAC1C,CA1BA,CA2BF,CAQA3Z,gBAAAA,CAAiBz7D,GASf,GARIvP,KAAKsiF,oBACP/yE,EACEA,EAASiW,oBACPxlB,KAAKsiF,kBACLtiF,KAAKuiF,kBAINrvD,EAAAA,EAAAA,IAAWlzB,KAAK6kB,QAAStV,EAASQ,aAAvC,CAGA,GAAI/P,KAAK4iF,cAAgB5iF,KAAK2iF,WAAY,CACpC3iF,KAAK2iF,YACP3iF,KAAK6jF,qBAAqB7jF,KAAK2iF,YAE7B3iF,KAAK4iF,cACP5iF,KAAK8jF,uBAAuB9jF,KAAK4iF,cAEnC,MAAMl7C,EAAU1nC,KAAKmiF,SACf5tD,EAAkBhlB,EAASqqB,6BACjC,IAAIpF,EAAS,EACb,MAAMgN,EAAQjyB,EAAS2kD,WACjB3sC,EAAShY,EAAS64D,YACxB1gC,EAAQ6P,YACR,IAAK,IAAInwC,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnBotB,EAASx0B,KAAKokF,WAAW7vD,EAAiBC,EAAQsE,EAAMvR,EAC1D,CACIvnB,KAAK2iF,YACPj7C,EAAQ1G,OAENhhC,KAAK4iF,cACPl7C,EAAQiiB,QAEZ,CACA,GAAmB,KAAf3pD,KAAK0oD,MAAc,CACrB,MAAMk8B,EAAqBr1E,EAAS4kD,wBACpCn0D,KAAK4jF,UAAUgB,EAAoB,EAAGA,EAAmBxgF,OAAQ,EACnE,CA5BA,CA6BF,CAMAy/E,oBAAAA,CAAqBxP,GACnB,MAAM3sC,EAAU1nC,KAAKmiF,SACf0C,EAAmB7kF,KAAKwiF,kBACzBqC,EAMCA,EAAiB/8C,WAAausC,EAAUvsC,YAC1C+8C,EAAiB/8C,UAAYusC,EAAUvsC,UACvCJ,EAAQI,UAAYusC,EAAUvsC,YAPhCJ,EAAQI,UAAYusC,EAAUvsC,UAC9B9nC,KAAKwiF,kBAAoB,CACvB16C,UAAWusC,EAAUvsC,WAQ3B,CAMAg8C,sBAAAA,CAAuBxP,GACrB,MAAM5sC,EAAU1nC,KAAKmiF,SACf2C,EAAqB9kF,KAAKyiF,oBAC3BqC,GAkBCA,EAAmBv1B,SAAW+kB,EAAY/kB,UAC5Cu1B,EAAmBv1B,QAAU+kB,EAAY/kB,QACzC7nB,EAAQ6nB,QAAU+kB,EAAY/kB,UAE3BrtC,EAAAA,EAAAA,IAAO4iE,EAAmBp1B,SAAU4kB,EAAY5kB,WACnDhoB,EAAQqpB,YACL+zB,EAAmBp1B,SAAW4kB,EAAY5kB,UAG3Co1B,EAAmBn1B,gBAAkB2kB,EAAY3kB,iBACnDm1B,EAAmBn1B,eAAiB2kB,EAAY3kB,eAChDjoB,EAAQioB,eAAiB2kB,EAAY3kB,gBAEnCm1B,EAAmBt2B,UAAY8lB,EAAY9lB,WAC7Cs2B,EAAmBt2B,SAAW8lB,EAAY9lB,SAC1C9mB,EAAQ8mB,SAAW8lB,EAAY9lB,UAE7Bs2B,EAAmBh0B,WAAawjB,EAAYxjB,YAC9Cg0B,EAAmBh0B,UAAYwjB,EAAYxjB,UAC3CppB,EAAQopB,UAAYwjB,EAAYxjB,WAE9Bg0B,EAAmBp2B,YAAc4lB,EAAY5lB,aAC/Co2B,EAAmBp2B,WAAa4lB,EAAY5lB,WAC5ChnB,EAAQgnB,WAAa4lB,EAAY5lB,YAE/Bo2B,EAAmBx1B,aAAeglB,EAAYhlB,cAChDw1B,EAAmBx1B,YAAcglB,EAAYhlB,YAC7C5nB,EAAQ4nB,YAAcglB,EAAYhlB,eA5CpC5nB,EAAQ6nB,QAAU+kB,EAAY/kB,QAC9B7nB,EAAQqpB,YAAYujB,EAAY5kB,UAChChoB,EAAQioB,eAAiB2kB,EAAY3kB,eACrCjoB,EAAQ8mB,SAAW8lB,EAAY9lB,SAC/B9mB,EAAQopB,UAAYwjB,EAAYxjB,UAChCppB,EAAQgnB,WAAa4lB,EAAY5lB,WACjChnB,EAAQ4nB,YAAcglB,EAAYhlB,YAClCtvD,KAAKyiF,oBAAsB,CACzBlzB,QAAS+kB,EAAY/kB,QACrBG,SAAU4kB,EAAY5kB,SACtBC,eAAgB2kB,EAAY3kB,eAC5BnB,SAAU8lB,EAAY9lB,SACtBsC,UAAWwjB,EAAYxjB,UACvBpC,WAAY4lB,EAAY5lB,WACxBY,YAAaglB,EAAYhlB,aAiC/B,CAMAy0B,oBAAAA,CAAqBxP,GACnB,MAAM7sC,EAAU1nC,KAAKmiF,SACf4C,EAAmB/kF,KAAK0iF,kBACxB75B,EAAY0rB,EAAU1rB,UACxB0rB,EAAU1rB,UACVgtB,EAAAA,GACCkP,GAUCA,EAAiBx8B,MAAQgsB,EAAUhsB,OACrCw8B,EAAiBx8B,KAAOgsB,EAAUhsB,KAClC7gB,EAAQ6gB,KAAOgsB,EAAUhsB,MAEvBw8B,EAAiBl8B,WAAaA,IAChCk8B,EAAiBl8B,UAAYA,EAC7BnhB,EAAQmhB,UAAYA,GAElBk8B,EAAiB57B,cAAgBorB,EAAUprB,eAC7C47B,EAAiB57B,aAAeorB,EAAUprB,aAC1CzhB,EAAQyhB,aAAeorB,EAAUprB,gBAnBnCzhB,EAAQ6gB,KAAOgsB,EAAUhsB,KACzB7gB,EAAQmhB,UAAYA,EACpBnhB,EAAQyhB,aAAeorB,EAAUprB,aACjCnpD,KAAK0iF,kBAAoB,CACvBn6B,KAAMgsB,EAAUhsB,KAChBM,UAAWA,EACXM,aAAcorB,EAAUprB,cAgB9B,CAUAoiB,kBAAAA,CAAmBzjC,EAAWwnB,GAC5B,GAAKxnB,EAEE,CACL,MAAMunC,EAAiBvnC,EAAUjH,WACjC7gC,KAAK2iF,WAAa,CAChB76C,WAAWooB,EAAAA,EAAAA,GACTmf,GAAkCxe,EAAAA,IAGxC,MARE7wD,KAAK2iF,WAAa,KASpB,GAAKrzB,EAEE,CACL,MAAMkgB,EAAmBlgB,EAAYzuB,WAC/B4uC,EAAqBngB,EAAYkB,aACjCkf,EAAsBpgB,EAAYe,cAClCuf,EAA4BtgB,EAAYgB,oBACxCwf,EAAsBxgB,EAAYiB,cAClCwf,EAAmBzgB,EAAYr/C,WAC/B+/D,EAAwB1gB,EAAYmB,gBACpCf,EAAWggB,GAEbC,EAAAA,GACJ3vE,KAAK4iF,aAAe,CAClBrzB,aACyBtvD,IAAvBwvE,EACIA,EACAjgB,EAAAA,GACNE,SACuB,IAArB1vD,KAAK2V,YACD+5C,EACAA,EAAS7vD,KAAKmI,GAAMA,EAAIhI,KAAK2V,cACnCg6C,gBACGigB,GAEGC,EAAAA,IAAyB7vE,KAAK2V,YACpC64C,cAC0BvuD,IAAxB6vE,EACIA,EACArgB,EAAAA,GACNqB,gBACwB7wD,IAArB8vE,EACGA,EACA3f,EAAAA,IAAoBpwD,KAAK2V,YAC/B+4C,gBAC4BzuD,IAA1B+vE,EACIA,EACAtf,EAAAA,GACNpB,aAAaY,EAAAA,EAAAA,GACXsf,GAAsCrf,EAAAA,IAG5C,MAzCEnwD,KAAK4iF,aAAe,IA0CxB,CASApX,aAAAA,CAAcC,GACZ,IAAIhM,EACJ,IAAKgM,KAAgBhM,EAAYgM,EAAWhxD,WAE1C,YADAza,KAAKg8D,OAAS,MAGhB,MAAMgpB,EAAkBvZ,EAAW9nD,cAAc3jB,KAAK2V,aAChDsvE,EAAcxZ,EAAWjoD,YACzB0hE,EAAczZ,EAAW3nD,YAC/B9jB,KAAKg8D,OAASyP,EAAWhoD,SAASzjB,KAAK2V,aACvC3V,KAAK6iF,cAAgBoC,EAAY,GAAKD,EACtChlF,KAAK8iF,cAAgBmC,EAAY,GAAKD,EACtChlF,KAAK+iF,aAAetjB,EAAU,GAAKulB,EACnChlF,KAAKgjF,cAAgBvX,EAAWvoD,aAChCljB,KAAKijF,cAAgBiC,EAAY,GACjCllF,KAAKkjF,cAAgBgC,EAAY,GACjCllF,KAAKmjF,qBAAuB1X,EAAWroD,oBACvCpjB,KAAKojF,eAAiB3X,EAAWtoD,cACjC,MAAMgiE,EAAa1Z,EAAWloD,gBAC9BvjB,KAAKqjF,YAAc,CAChB8B,EAAW,GAAKnlF,KAAK2V,YAAeqvE,EACpCG,EAAW,GAAKnlF,KAAK2V,YAAeqvE,GAEvChlF,KAAKsjF,YAAc7jB,EAAU,GAAKulB,CACpC,CASArZ,YAAAA,CAAaC,GACX,GAAKA,EAEE,CACL,MAAMoK,EAAgBpK,EAAU7gB,UAChC,GAAKirB,EAEE,CACL,MAAMoP,EAAqBpP,EAAcn1C,WACzC7gC,KAAK4zE,eAAiB,CACpB9rC,WAAWooB,EAAAA,EAAAA,GACTk1B,GAA0Cv0B,EAAAA,IAGhD,MARE7wD,KAAK4zE,eAAiB,KASxB,MAAMqC,EAAkBrK,EAAU5gB,YAClC,GAAKirB,EAEE,CACL,MAAMoP,EAAuBpP,EAAgBp1C,WACvCykD,EAAyBrP,EAAgBzlB,aACzC+0B,EAA0BtP,EAAgB5lB,cAC1Cm1B,EACJvP,EAAgB3lB,oBACZm1B,EAA0BxP,EAAgB1lB,cAC1Cm1B,EAAuBzP,EAAgBhmE,WACvC01E,EAA4B1P,EAAgBxlB,gBAClDzwD,KAAK8zE,iBAAmB,CACtBvkB,aAC6BtvD,IAA3BqlF,EACIA,EACA91B,EAAAA,GACNE,SAAU61B,GAEN5V,EAAAA,GACJhgB,eAAgB61B,GAEZ3V,EAAAA,GACJrhB,cAC8BvuD,IAA5BwlF,EACIA,EACAh2B,EAAAA,GACNqB,eAC2B7wD,IAAzBylF,EACIA,EACAt1B,EAAAA,GACN1B,gBACgCzuD,IAA9B0lF,EACIA,EACAj1B,EAAAA,GACNpB,aAAaY,EAAAA,EAAAA,GACXm1B,GAA8Cl1B,EAAAA,IAGpD,MArCEnwD,KAAK8zE,iBAAmB,KAsC1B,MAAM8R,EAAWha,EAAUvhB,UACrBgsB,EAAczK,EAAU3gB,aACxBqrB,EAAc1K,EAAU1gB,aACxBqrB,EAAqB3K,EAAUxoD,oBAC/BqzD,EAAe7K,EAAUzoD,cACzBizD,EAAYxK,EAAUroD,gBACtBsiE,EAAWja,EAAUjhB,UACrBm7B,EAAgBla,EAAUhhB,eAC1Bm7B,EAAmBna,EAAU9gB,kBACnC9qD,KAAKg0E,WAAa,CAChBzrB,UAAmBtoD,IAAb2lF,EAAyBA,EAAW1P,EAAAA,GAC1CrtB,eACoB5oD,IAAlB6lF,EAA8BA,EAAgBjQ,EAAAA,GAChD1sB,kBACuBlpD,IAArB8lF,EACIA,EACAjQ,EAAAA,IAER91E,KAAK0oD,WACUzoD,IAAb4lF,EACIj7E,MAAMC,QAAQg7E,GACZA,EAASvL,QAAO,CAACd,EAAK7e,EAAGvzD,IAAOoyE,GAAOpyE,EAAI,EAAI,IAAMuzD,IAAI,IACzDkrB,EACF,GACN7lF,KAAKuzE,kBACatzE,IAAhBo2E,EAA4Br2E,KAAK2V,YAAc0gE,EAAc,EAC/Dr2E,KAAKwzE,kBACavzE,IAAhBq2E,EAA4Bt2E,KAAK2V,YAAc2gE,EAAc,EAC/Dt2E,KAAKyzE,yBACoBxzE,IAAvBs2E,GAAmCA,EACrCv2E,KAAK2zE,mBAAiC1zE,IAAjBw2E,EAA6BA,EAAe,EACjEz2E,KAAKujF,WAAa,CAChBvjF,KAAK2V,YAAcygE,EAAU,GAC7Bp2E,KAAK2V,YAAcygE,EAAU,GAEjC,MAxFEp2E,KAAK0oD,MAAQ,EAyFjB,GCxpCWs9B,GAAwB,G,cCIrC,MAQMC,GAAqB,CACzB,MA+TF,SACEC,EACA32E,EACA+C,EACAhD,EACAtI,EACAyM,GAEA,MAAMg4D,EAAan5D,EAAMmR,WACnBmoD,EAAYt5D,EAAMq4C,UAClBw7B,EAAUva,GAAaA,EAAUjhB,UAEjC+gB,EACJj4D,GAAag4D,GAAc0a,EAAU,CAAC,OAAIlmF,EAC5C,GAAIwrE,EAAY,CACd,GAAIA,EAAW7nD,iBAAmBqF,GAAAA,EAAW/f,OAC3C,OAEF,MAAMk9E,EAAcF,EAAazO,WAAWnlE,EAAM+zE,YAAa,SAC/DD,EAAY5a,cAAcC,EAAYC,GACtC0a,EAAYlb,UAAU37D,EAAUD,EAAStI,EAC3C,CACA,GAAIm/E,EAAS,CACX,MAAMG,EAAaJ,EAAazO,WAAWnlE,EAAM+zE,YAAa,QAC9DC,EAAW3a,aAAaC,EAAWF,GACnC4a,EAAWhb,SAAS/7D,EAAUD,EAAStI,EACzC,CACF,EAzVE,WAkOF,SACEk/E,EACA32E,EACA+C,EACAhD,EACAtI,GAEA,MAAMsoD,EAAch9C,EAAM04C,YAC1B,GAAIsE,EAAa,CACf,MAAMi3B,EAAmBL,EAAazO,WACpCnlE,EAAM+zE,YACN,cAEFE,EAAiBhb,mBAAmB,KAAMjc,GAC1Ci3B,EAAiB7b,eAAen7D,EAAUD,EAAStI,EACrD,CACA,MAAM4kE,EAAYt5D,EAAMq4C,UACxB,GAAIihB,GAAaA,EAAUjhB,UAAW,CACpC,MAAM27B,EAAaJ,EAAazO,WAAWnlE,EAAM+zE,YAAa,QAC9DC,EAAW3a,aAAaC,GACxB0a,EAAWhb,SAAS/7D,EAAUD,EAAStI,EACzC,CACF,EAvPE,QAuYF,SAA+Bk/E,EAAc32E,EAAU+C,EAAOhD,EAAStI,GACrE,MAAM8gC,EAAYx1B,EAAMy4C,UAClBuE,EAAch9C,EAAM04C,YAC1B,GAAIljB,GAAawnB,EAAa,CAC5B,MAAMk3B,EAAgBN,EAAazO,WAAWnlE,EAAM+zE,YAAa,WACjEG,EAAcjb,mBAAmBzjC,EAAWwnB,GAC5Ck3B,EAAcpb,YAAY77D,EAAUD,EAAStI,EAC/C,CACA,MAAM4kE,EAAYt5D,EAAMq4C,UACxB,GAAIihB,GAAaA,EAAUjhB,UAAW,CACpC,MAAM27B,EAAaJ,EAAazO,WAAWnlE,EAAM+zE,YAAa,QAC9DC,EAAW3a,aAAaC,GACxB0a,EAAWhb,SAAS/7D,EAAUD,EAAStI,EACzC,CACF,EApZE,WAiWF,SACEk/E,EACA32E,EACA+C,EACAhD,EACAtI,EACAyM,GAEA,MAAMg4D,EAAan5D,EAAMmR,WACnBgjE,EAAWhb,GAA0C,IAA5BA,EAAWvoD,aACpC0oD,EAAYt5D,EAAMq4C,UAClBw7B,EAAUva,GAAaA,EAAUjhB,UAEjC+gB,EACJj4D,GAAagzE,GAAYN,EAAU,CAAC,OAAIlmF,EAC1C,GAAIwmF,EAAU,CACZ,GAAIhb,EAAW7nD,iBAAmBqF,GAAAA,EAAW/f,OAC3C,OAEF,MAAMk9E,EAAcF,EAAazO,WAAWnlE,EAAM+zE,YAAa,SAC/DD,EAAY5a,cAAcC,EAAYC,GACtC0a,EAAYtb,eAAev7D,EAAUD,EAAStI,EAChD,CACA,GAAIm/E,EAAS,CACX,MAAMG,EAAaJ,EAAazO,WAAWnlE,EAAM+zE,YAAa,QAC9DC,EAAW3a,aAAaC,EAAWF,GACnC4a,EAAWhb,SAAS/7D,EAAUD,EAAStI,EACzC,CACF,EA5XE,gBA8PF,SACEk/E,EACA32E,EACA+C,EACAhD,EACAtI,GAEA,MAAMsoD,EAAch9C,EAAM04C,YAC1B,GAAIsE,EAAa,CACf,MAAMi3B,EAAmBL,EAAazO,WACpCnlE,EAAM+zE,YACN,cAEFE,EAAiBhb,mBAAmB,KAAMjc,GAC1Ci3B,EAAiB3b,oBAAoBr7D,EAAUD,EAAStI,EAC1D,CACA,MAAM4kE,EAAYt5D,EAAMq4C,UACxB,GAAIihB,GAAaA,EAAUjhB,UAAW,CACpC,MAAM27B,EAAaJ,EAAazO,WAAWnlE,EAAM+zE,YAAa,QAC9DC,EAAW3a,aAAaC,GACxB0a,EAAWhb,SAAS/7D,EAAUD,EAAStI,EACzC,CACF,EAnRE,aA4RF,SACEk/E,EACA32E,EACA+C,EACAhD,EACAtI,GAEA,MAAM8gC,EAAYx1B,EAAMy4C,UAClBuE,EAAch9C,EAAM04C,YAC1B,GAAIsE,GAAexnB,EAAW,CAC5B,MAAM0+C,EAAgBN,EAAazO,WAAWnlE,EAAM+zE,YAAa,WACjEG,EAAcjb,mBAAmBzjC,EAAWwnB,GAC5Ck3B,EAAcxb,iBAAiBz7D,EAAUD,EAAStI,EACpD,CACA,MAAM4kE,EAAYt5D,EAAMq4C,UACxB,GAAIihB,GAAaA,EAAUjhB,UAAW,CACpC,MAAM27B,EAAaJ,EAAazO,WAAWnlE,EAAM+zE,YAAa,QAC9DC,EAAW3a,aAAaC,GACxB0a,EAAWhb,SAAS/7D,EAAUD,EAAStI,EACzC,CACF,EA/SE,mBA+LF,SACE0/E,EACAn3E,EACA+C,EACAhD,EACAq3E,EACA3/E,GAEA,MAAM+tD,EAAaxlD,EAASgmD,qBAC5B,IAAInuD,EAAGwE,EACP,IAAKxE,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAAG,EAE/Cw/E,EADyBX,GAAmBlxB,EAAW3tD,GAAG0f,YAExD4/D,EACA3xB,EAAW3tD,GACXkL,EACAhD,EACAq3E,EACA3/E,EAEJ,CACF,EAnNE,OAsCF,SAA8Bk/E,EAAc32E,EAAU+C,EAAOhD,EAAStI,GACpE,MAAM8gC,EAAYx1B,EAAMy4C,UAClBuE,EAAch9C,EAAM04C,YAC1B,GAAIljB,GAAawnB,EAAa,CAC5B,MAAMu3B,EAAeX,EAAazO,WAAWnlE,EAAM+zE,YAAa,UAChEQ,EAAatb,mBAAmBzjC,EAAWwnB,GAC3Cu3B,EAAaxc,WAAW96D,EAAUD,EAAStI,EAC7C,CACA,MAAM4kE,EAAYt5D,EAAMq4C,UACxB,GAAIihB,GAAaA,EAAUjhB,UAAW,CACpC,MAAM27B,EAAaJ,EAAazO,WAAWnlE,EAAM+zE,YAAa,QAC9DC,EAAW3a,aAAaC,GACxB0a,EAAWhb,SAAS/7D,EAAUD,EAChC,CACF,GA5CO,SAASw3E,GAAaC,EAAUC,GACrC,OAAOv/C,UAASt7B,EAAAA,EAAAA,IAAO46E,GAAW,IAAMt/C,UAASt7B,EAAAA,EAAAA,IAAO66E,GAAW,GACrE,CAOO,SAASC,GAAoBx4E,EAAYmH,GAC9C,MAAMiR,EAAYqgE,GAAaz4E,EAAYmH,GAC3C,OAAOiR,EAAYA,CACrB,CAOO,SAASqgE,GAAaz4E,EAAYmH,GACvC,MA5CyB,GA4CInH,EAAcmH,CAC7C,CAoCO,SAASuxE,GACdT,EACAp3E,EACAgD,EACA+S,EACAhB,EACAiB,EACA7R,EACAzM,GAEA,MAAMogF,EAAkB,GAClB3b,EAAan5D,EAAMmR,WACzB,GAAIgoD,EAAY,CACd,IAAI7vD,GAAU,EACd,MAAM45B,EAAai2B,EAAW7nD,gBAC1B4xB,GAAcvsB,GAAAA,EAAW/f,QAAUssC,GAAcvsB,GAAAA,EAAW9f,MAC9DyS,GAAU,EAEN45B,GAAcvsB,GAAAA,EAAWvf,MAC3B+hE,EAAW9hE,OAGXiS,GACFwrE,EAAgBtiF,KAAK2mE,EAAW9vD,QAEpC,CACA,MAAMmsB,EAAYx1B,EAAMy4C,UACpBjjB,GAAaA,EAAUlsB,WACzBwrE,EAAgBtiF,KAAKgjC,EAAUnsB,SAEjC,MAAMC,EAAUwrE,EAAgBhjF,OAAS,EAczC,OAbIwX,GACF2I,QAAQwG,IAAIq8D,GAAiB5uE,MAAK,IAAM6L,EAAS,QAwBrD,SACEqiE,EACAp3E,EACAgD,EACA+S,EACAC,EACA7R,EACAzM,GAEA,MAAMuI,EAAW+C,EAAMiyE,qBAANjyE,CAA4BhD,GAC7C,IAAKC,EACH,OAEF,MAAMqmD,EAAqBrmD,EAASiW,oBAClCH,EACAC,GAEI5J,EAAWpJ,EAAM3B,cACvB,GAAI+K,EACF2rE,GAAeX,EAAa9wB,EAAoBtjD,EAAOhD,EAAStI,OAC3D,EAEL4/E,EADyBX,GAAmBrwB,EAAmB9uC,YAE7D4/D,EACA9wB,EACAtjD,EACAhD,EACAtI,EACAyM,EAEJ,CACF,CArDE6zE,CACEZ,EACAp3E,EACAgD,EACA+S,EACAC,EACA7R,EACAzM,GAGK4U,CACT,CAmDA,SAASyrE,GAAeX,EAAan3E,EAAU+C,EAAOhD,EAAStI,GAC7D,GAA0B,sBAAtBuI,EAASuX,UAAmC,CAC9C,MAAMiuC,EAEFxlD,EACA+lD,gBACJ,IAAK,IAAIluD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAChDigF,GAAeX,EAAa3xB,EAAW3tD,GAAIkL,EAAOhD,EAAStI,GAE7D,MACF,CACe0/E,EAAYjP,WAAWnlE,EAAM+zE,YAAa,WAClDnc,WACuD36D,EAC5DD,EACAgD,EAAM3B,cACN2B,EAAMi1E,0BACNvgF,EAEJ,C,eCvKA,MAAMwgF,WAAkCC,GAAAA,EAItC9nF,WAAAA,CAAY+nF,GACV3nF,MAAM2nF,GAGN1nF,KAAK2nF,6BAA+B3nF,KAAK4nF,wBAAwBvlF,KAAKrC,MAMtEA,KAAK6nF,wBAML7nF,KAAK8nF,uBAAyB,KAM9B9nF,KAAK+nF,UAAW,EAMhB/nF,KAAKgoF,kBAAoB,KAMzBhoF,KAAKioF,mBAAqB,EAM1BjoF,KAAKkoF,oBAAsBvjE,IAM3B3kB,KAAKmoF,iBAAkBrjE,EAAAA,EAAAA,MAMvB9kB,KAAKooF,wBAAyBtjE,EAAAA,EAAAA,MAM9B9kB,KAAKqoF,kBAMLroF,KAAKsoF,gBAAkB,KAMvBtoF,KAAKuoF,oBAAsB,KAM3BvoF,KAAKwoF,oBAAsB,EAM3BxoF,KAAKyoF,qBAAuB,KAM5BzoF,KAAK0oF,wBAML1oF,KAAK2oF,aAAe,KAMpB3oF,KAAK4oF,oBAAqB,EAM1B5oF,KAAK6oF,UAAW,EAMhB7oF,KAAK8oF,eAAiB,KAMtB9oF,KAAKqiB,SAAW,CAClB,CAQA0mE,YAAAA,CAAaC,EAAelpF,EAAYmpF,GACtC,MAAMr7E,EAAS9N,EAAW8N,OACpBQ,EAAYtO,EAAWsO,UACvBO,EAASP,EAAUO,OACnBF,EAAaL,EAAUK,WACvBgB,EAAarB,EAAUqB,WACvBf,EAAWN,EAAUM,SACrBoB,EAAmBL,EAAWM,YAC9Bm5E,EAAelpF,KAAKo1C,WAAWvkC,YAC/B4C,EAAYzT,KAAKo1C,WAAW5hC,eAC5BoC,EAAa9V,EAAW8V,WACxBoI,EAAYle,EAAWke,UACvB89D,IACJ99D,EAAUC,EAAAA,EAASC,YAAcF,EAAUC,EAAAA,EAASE,cAEhDupB,EAAU1nC,KAAK0nC,QACfl1B,EAAQpN,KAAKq9B,OAAOxyB,EAAAA,EAAAA,IAASrC,GAAUa,EAAcmH,GACrDnD,EAASrN,KAAKq9B,OAAO9a,EAAAA,EAAAA,IAAU/Z,GAAUa,EAAcmH,GAEvD4hB,EAAa0xD,EAAan4E,YAActB,EAAWI,WACnDG,EAAawnB,GAAavnB,EAAAA,EAAAA,IAASH,GAAoB,KACvDq5E,EAAW3xD,EACbpyB,KAAKgpD,MAAMxgD,EAAO,GAAKkC,EAAiB,IAAME,GAAc,EAC5D,EACJ,IAAIo5E,EAAQ5xD,EACRpyB,KAAKmyB,OAAO3pB,EAAO,GAAKkC,EAAiB,IAAME,GAC/C,EACJ,EAAG,CACD,IAAIsV,EAAYtlB,KAAKq4C,mBACnB1pC,EACAF,EACA,EACAmH,EACApD,EACAC,EACA22E,EAAQp5E,GAENlQ,EAAW2T,YACb6R,EAAYA,EAAUva,MAAM,IAE9Bi+E,EAAc1J,QACZ53C,EACA,CAACA,EAAQiP,OAAOnkC,MAAOk1B,EAAQiP,OAAOlkC,QACtC6S,EACA5W,EACAotE,OACkB77E,IAAlBgpF,EACIzJ,EACAyJ,EACExJ,EACAC,EACNuJ,EACIx1E,GAAa3T,EAAW2T,UAAUA,QAClCxT,EAER,SAAWmpF,EAAQD,EACrB,CAKAE,eAAAA,GACwB,IAAlBrpF,KAAKqiB,WACPriB,KAAK8oF,eAAiB9oF,KAAK0nC,QAC3B1nC,KAAK0nC,SAAUC,EAAAA,EAAAA,GACb3nC,KAAK0nC,QAAQiP,OAAOnkC,MACpBxS,KAAK0nC,QAAQiP,OAAOlkC,OACpBijC,GAAAA,GAGN,CAKA4zC,iBAAAA,GACE,GAAsB,IAAlBtpF,KAAKqiB,UAAkBriB,KAAK8oF,eAAgB,CAC9C,MAAM5hD,EAAQlnC,KAAK8oF,eAAenF,YAClC3jF,KAAK8oF,eAAenF,YAAc3jF,KAAKqiB,SACvCriB,KAAK8oF,eAAe1yC,UAAUp2C,KAAK0nC,QAAQiP,OAAQ,EAAG,GACtD32C,KAAK8oF,eAAenF,YAAcz8C,GAClCqiD,EAAAA,EAAAA,IAAcvpF,KAAK0nC,SACnBgO,GAAAA,EAAW5wC,KAAK9E,KAAK0nC,QAAQiP,QAC7B32C,KAAK0nC,QAAU1nC,KAAK8oF,eACpB9oF,KAAK8oF,eAAiB,IACxB,CACF,CAMA50E,eAAAA,CAAgBpU,GACTE,KAAK2oF,cAAiB3oF,KAAKo1C,WAAW5hC,gBAG3CxT,KAAK+oF,aAAa/oF,KAAK2oF,aAAc7oF,GAAY,EACnD,CAOAm4C,sBAAAA,CAAuBn4C,GAChBE,KAAK2oF,eAGV3oF,KAAK2oF,aAAax0E,iBACdnU,KAAK+nF,UACP/nF,KAAK0nC,QAAQs1C,UAEfh9E,KAAKspF,oBACP,CASA53E,WAAAA,CAAY5R,EAAY8D,GACtB,MAAMuJ,EAAarN,EAAWqQ,iBAAiBrQ,EAAW8T,YAC1D5T,KAAKqiB,SAAWlV,EAAWC,QAC3B,MAAMgB,EAAYtO,EAAWsO,UAE7BpO,KAAK23C,iBAAiB73C,EAAY8D,GAClC,MAAM8jC,EAAU1nC,KAAK0nC,QAEfg/C,EAAc1mF,KAAK2oF,aACzB,IAAI50E,EAAS2yE,IAAgBA,EAAYr/E,UACzC,IAAK0M,EAAQ,CAIX,KAFE/T,KAAKo1C,WAAWniC,YAAYI,EAAAA,EAAgBiyB,YAC5CtlC,KAAKo1C,WAAWniC,YAAYI,EAAAA,EAAgBkO,aAE5C,OAAOvhB,KAAK4S,SAEhB,CAEA5S,KAAKqpF,kBAELrpF,KAAK+3C,UAAUrQ,EAAS5nC,GAExB,MAAM2P,EAAarB,EAAUqB,WAI7B,GADAzP,KAAK+nF,UAAW,EACZh0E,GAAU5G,EAAWS,QAAU5N,KAAK6oF,SAAU,CAChD,MAAMvvC,GAAc5F,EAAAA,EAAAA,IAAevmC,EAAWS,OAAQ6B,GACtDsE,GAASiT,EAAAA,EAAAA,IAAiBsyB,EAAax5C,EAAW8N,QAClD5N,KAAK+nF,SAAWh0E,KAAWud,EAAAA,EAAAA,IAAegoB,EAAax5C,EAAW8N,QAC9D5N,KAAK+nF,UACP/nF,KAAKg3C,cAActP,EAAS5nC,EAAYw5C,EAE5C,CAuBA,OArBIvlC,GACF/T,KAAK+oF,aACHrC,EACA5mF,GACAE,KAAKo1C,WAAW5hC,qBAAyBvT,IAIxCH,EAAW2T,WAAazT,KAAK+nF,UAChCrgD,EAAQs1C,UAGVh9E,KAAKg4C,WAAWtQ,EAAS5nC,GAErBE,KAAKqoF,oBAAsBj6E,EAAUM,WACvC1O,KAAKqoF,kBAAoBj6E,EAAUM,SACnC1O,KAAK8nF,uBAAyB,MAE3BhoF,EAAW2T,WACdzT,KAAKspF,oBAEAtpF,KAAK4S,SACd,CASAkd,WAAAA,CAAYvvB,GACV,OAAO,IAAIgkB,SAASC,IAClB,GACExkB,KAAKF,aACJE,KAAK8nF,yBACL9nF,KAAK6nF,wBACN,CACA,MAAMr5E,EAAOxO,KAAKF,WAAW0O,KAAKzD,QAC5B4D,EAAS3O,KAAKsoF,gBACd75E,EAAazO,KAAKkoF,oBAClBx5E,EAAW1O,KAAKqoF,kBAChB54E,EAAazP,KAAKuoF,oBAClB36E,EAAS5N,KAAKooF,uBACdv+E,EAAQ7J,KAAKo1C,WACbo0C,EAAa,GACbh3E,EAAQhE,EAAK,GAAKw3E,GAClBvzE,EAASjE,EAAK,GAAKw3E,GACzBwD,EAAW1kF,KACT9E,KAAKq4C,mBACH1pC,EACAF,EACAC,EACAs3E,GACAxzE,EACAC,EACA,GACA1H,SAEJ,MAAM6F,EAAS/G,EAAMgH,YACff,EAAmBL,EAAWM,YACpC,GACEa,EAAOG,YACPtB,EAAWI,cACVyhB,EAAAA,EAAAA,IAAexhB,EAAkBlC,GAClC,CACA,IAAIkpB,EAASlpB,EAAO,GACpB,MAAMoC,GAAaC,EAAAA,EAAAA,IAASH,GAC5B,IACIwoC,EADA8wC,EAAQ,EAEZ,KAAOtyD,EAAShnB,EAAiB,MAC7Bs5E,EACF9wC,EAAUtoC,EAAao5E,EACvBI,EAAW1kF,KACT9E,KAAKq4C,mBACH1pC,EACAF,EACAC,EACAs3E,GACAxzE,EACAC,EACA6lC,GACAvtC,SAEJ+rB,GAAU9mB,EAIZ,IAFAo5E,EAAQ,EACRtyD,EAASlpB,EAAO,GACTkpB,EAAShnB,EAAiB,MAC7Bs5E,EACF9wC,EAAUtoC,EAAao5E,EACvBI,EAAW1kF,KACT9E,KAAKq4C,mBACH1pC,EACAF,EACAC,EACAs3E,GACAxzE,EACAC,EACA6lC,GACAvtC,SAEJ+rB,GAAU9mB,CAEd,CACA,MAAMqjC,GAAiBC,EAAAA,EAAAA,MACvBtzC,KAAK8nF,uBF1ZN,SACLt5E,EACAg7E,EACAxvE,EACAyvE,EACA77E,EACAa,EACAC,EACA2W,EACA5V,GAEA,MAAMi6E,EAAaj6E,GAAagkC,EAAAA,EAAAA,IAAa7lC,EAAQ6B,GAAc7B,EAC7D4E,EAAQhE,EAAK,GAAKw3E,GAClBvzE,EAASjE,EAAK,GAAKw3E,GACnBt+C,GAAUC,EAAAA,EAAAA,GAAsBn1B,EAAOC,GAC7Ci1B,EAAQiiD,uBAAwB,EAChC,MAAMhzC,EAASjP,EAAQiP,OACjBj7B,EAAW,IAAIkuE,GACnBliD,EACAs+C,GACAp4E,EACA,KACAc,EACA2W,EACA5V,GACIyhC,EAAAA,EAAAA,KAA4BoC,EAAAA,EAAAA,MAAqB7jC,GACjD,MAEAo6E,EAAe7vE,EAAS5V,OAExB0lF,EAAc1kF,KAAKmyB,MAAM,SAAwBsyD,GACjDE,EAAmB,CAAC,EAC1B,IAAK,IAAI3iF,EAAI,EAAGA,GAAKyiF,IAAgBziF,EAAG,CACtC,MAAMkI,EAAU0K,EAAS5S,EAAI,GACvB4iF,EAAuB16E,EAAQk4C,oBAAsBiiC,EAC3D,IAAKO,EACH,SAEF,IAAItiC,EAASsiC,EAAqB16E,EAASb,GAC3C,IAAKi5C,EACH,SAEG98C,MAAMC,QAAQ68C,KACjBA,EAAS,CAACA,IAEZ,MACM9+B,GADQxhB,EAAI0iF,GACEhxE,SAAS,IAAImxE,SAAS,EAAG,UAC7C,IAAK,IAAI15E,EAAI,EAAGqhC,EAAK8V,EAAOtjD,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CAC/C,MAAM25E,EAAgBxiC,EAAOn3C,GACvBhB,EAAW26E,EAAc3F,qBAAd2F,CAAoC56E,GACrD,IAAKC,KAAa2jB,EAAAA,EAAAA,IAAWw2D,EAAYn6E,EAASQ,aAChD,SAEF,MAAMuC,EAAQ43E,EAAc5oE,QACtB0f,EAAO1uB,EAAMy4C,UACf/pB,GACFA,EAAKJ,SAAShY,GAEhB,MAAM+gC,EAASr3C,EAAM04C,YACjBrB,IACFA,EAAO/oB,SAAShY,GAChB+gC,EAAOoH,YAAY,OAErBz+C,EAAM05C,aAAQ/rD,GACd,MAAMo1C,EAAQ60C,EAAczmE,WAC5B,GAAI4xB,EAAO,CACT,MAAM80C,EAAU90C,EAAMxxB,eACtB,IAAKsmE,EACH,SAGF,MAAMC,GAAaziD,EAAAA,EAAAA,GACjBwiD,EAAQ,GACRA,EAAQ,QACRlqF,EACA,CAACinC,OAAO,IAEJg4B,EAAMkrB,EAAWzzC,OACvByzC,EAAWtiD,UAAYlf,EACvBwhE,EAAWliD,SAAS,EAAG,EAAGg3B,EAAI1sD,MAAO0sD,EAAIzsD,QACzCH,EAAM+3E,SACJ,IAAI3rB,GAAAA,EAAK,CACPQ,IAAKA,EACLz4C,OAAQ4uB,EAAM7xB,YACdu7C,aAAc,SACdE,aAAc,SACdzqC,OAAQ6gB,EAAMvxB,YACd1W,QAAS,EACToB,KAAM6mC,EAAM56B,UACZiI,MAAO2yB,EAAMpyB,WACbvU,SAAU2mC,EAAMlyB,cAChBZ,eAAgB8yB,EAAMjyB,sBAG5B,CACA,MAAMlW,EAASoF,EAAM+zE,aAAe,EACpC,IAAIiE,EAAiBP,EAAiB78E,GACjCo9E,IACHA,EAAiB,CAAC,EAClBP,EAAiB78E,GAAUo9E,EAC3BA,EAAwB,QAAI,GAC5BA,EAAuB,OAAI,GAC3BA,EAA2B,WAAI,GAC/BA,EAAsB,MAAI,IAE5B,MAAM1qF,EAAO2P,EAASuX,UACtB,GAAa,uBAATlnB,EAA+B,CACjC,MAAMm1D,EAEFxlD,EACAimD,8BACJ,IAAK,IAAIpuD,EAAI,EAAGwE,EAAKmpD,EAAW3wD,OAAQgD,EAAIwE,IAAMxE,EAAG,CACnD,MAAMmI,EAAWwlD,EAAW3tD,GAC5BkjF,EAAe/6E,EAASuX,UAAUoB,QAAQ,QAAS,KAAKpjB,KACtDyK,EACA+C,EAEJ,CACF,MACEg4E,EAAe1qF,EAAKsoB,QAAQ,QAAS,KAAKpjB,KAAKyK,EAAU+C,EAE7D,CACF,CAEA,MAAMi4E,EAAaxmF,OAAO2uB,KAAKq3D,GAAkBlqF,IAAImmB,QAAQ7U,KAAKqwE,EAAAA,IAClE,IAAK,IAAIp6E,EAAI,EAAGwE,EAAK2+E,EAAWnmF,OAAQgD,EAAIwE,IAAMxE,EAAG,CACnD,MAAMkjF,EAAiBP,EAAiBQ,EAAWnjF,IACnD,IAAK,MAAMxH,KAAQ0qF,EAAgB,CACjC,MAAME,EAAeF,EAAe1qF,GACpC,IAAK,IAAI2Q,EAAI,EAAGqhC,EAAK44C,EAAapmF,OAAQmM,EAAIqhC,EAAIrhC,GAAK,EAAG,CACxDmL,EAAS6rC,SAASijC,EAAaj6E,EAAI,IACnC,IAAK,IAAIw+C,EAAI,EAAG07B,EAAKjB,EAAWplF,OAAQ2qD,EAAI07B,IAAM17B,EAChDrzC,EAAS4oE,aAAakF,EAAWz6B,IACjCrzC,EAAS0uD,aAAaogB,EAAaj6E,GAEvC,CACF,CACF,CACA,OAAOm3B,EAAQU,aAAa,EAAG,EAAGuO,EAAOnkC,MAAOmkC,EAAOlkC,OACzD,CE+QsCi4E,CAC5Bl8E,EACAg7E,EACAxpF,KAAKgoF,kBACLn+E,EAAM29C,mBACN55C,EACAa,EACAC,EACAi8E,GAA0Bl8E,EAAYzO,KAAKwoF,qBAC3Cn1C,EAAiB5jC,EAAa,KAElC,CACA+U,EF/QC,SAAmBjkB,EAAOyZ,EAAUonE,GAEzC,MAAMwJ,EAAiB,GACvB,GAAIxJ,EAAW,CACb,MAAMz7D,EAAIvgB,KAAKmyB,MAAMnyB,KAAKq9B,MAAMliC,EAAM,IAAMylF,IACtCpgE,EAAIxgB,KAAKmyB,MAAMnyB,KAAKq9B,MAAMliC,EAAM,IAAMylF,IAItCh/E,EAGJ,IAFCogC,EAAAA,EAAAA,IAAMzhB,EAAG,EAAGy7D,EAAU5uE,MAAQ,IAC7B40B,EAAAA,EAAAA,IAAMxhB,EAAG,EAAGw7D,EAAU3uE,OAAS,GAAK2uE,EAAU5uE,OAE5C02B,EAAIk4C,EAAUh1D,KAAKplB,GACnBmiC,EAAIi4C,EAAUh1D,KAAKplB,EAAQ,GAE3BI,EADIg6E,EAAUh1D,KAAKplB,EAAQ,GACnB,KAAOmiC,EAAI,IAAMD,GACzB4gD,EAAc1kF,KAAKmyB,MAAM,SAAwBvd,EAAS5V,QAC5DgD,GAAKA,EAAI0iF,IAAgB,GAC3Bc,EAAe9lF,KAAKkV,EAAS5S,EAAI0iF,EAAc,GAEnD,CACA,OAAOc,CACT,CEyPQC,CAAUtqF,EAAOP,KAAKgoF,kBAAmBhoF,KAAK8nF,2BAGpD,CAYAj5E,0BAAAA,CACEpO,EACAX,EACAgP,EACAE,EACAqB,GACA,IAAAy6E,EACA,IAAK9qF,KAAK2oF,aACR,OAEF,MAAMl6E,EAAa3O,EAAWsO,UAAUK,WAClCC,EAAW5O,EAAWsO,UAAUM,SAChC7E,EAAQ7J,KAAKo1C,WAGbp7B,EAAW,CAAC,EAqCZvG,EAAYzT,KAAKo1C,WAAW5hC,eAClC,OAAOxT,KAAK2oF,aAAa95E,2BACvBpO,EACAgO,EACAC,EACAI,GAlCsB,SAAUQ,EAASC,EAAU2B,GACnD,MAAM3J,GAAM4E,EAAAA,EAAAA,IAAOmD,GACbu1B,EAAQ7qB,EAASzS,GACvB,GAAKs9B,GAcE,IAAc,IAAVA,GAAkB3zB,EAAa2zB,EAAM3zB,WAAY,CAC1D,GAAmB,IAAfA,EAGF,OAFA8I,EAASzS,IAAO,EAChB8I,EAAQyhB,OAAOzhB,EAAQ06E,YAAYlmD,GAAQ,GACpC71B,EAASM,EAASzF,EAAO0F,GAElCs1B,EAAMt1B,SAAWA,EACjBs1B,EAAM3zB,WAAaA,CACrB,MAtBY,CACV,GAAmB,IAAfA,EAEF,OADA8I,EAASzS,IAAO,EACTyH,EAASM,EAASzF,EAAO0F,GAElCc,EAAQvL,KACLkV,EAASzS,GAAO,CACf+H,QAASA,EACTzF,MAAOA,EACP0F,SAAUA,EACV2B,WAAYA,EACZlC,SAAUA,GAGhB,CAUF,GASEyE,EACwB,QADfq3E,EACLhrF,EAAW2T,iBAAS,IAAAq3E,GAAa,QAAbA,EAApBA,EAAuBr3E,UAAU,IAAAq3E,OAAA,EAAjCA,EAAmC//D,MAAMlrB,KAAKwrB,GAASA,EAAK1mB,QAC5D,KAER,CAMAmb,kBAAAA,GACE,MAAMjW,EAAQ7J,KAAKo1C,WACfvrC,EAAM4rC,cAAgBz1C,KAAK2oF,cAC7B9+E,EAAMsB,SAEV,CAOAy8E,uBAAAA,CAAwBrkF,GACtBvD,KAAKs1C,yBACP,CAQAH,YAAAA,CAAar1C,GACX,MAAM4nF,EAAc1nF,KAAKo1C,WACnB8zC,EAAexB,EAAY72E,YACjC,IAAKq4E,EACH,OAAO,EAGT,MAAM8B,EAAYlrF,EAAWke,UAAUC,EAAAA,EAASC,WAC1C+sE,EAAcnrF,EAAWke,UAAUC,EAAAA,EAASE,aAC5C+sE,EAAuBxD,EAAYyD,0BACnCC,EAAyB1D,EAAY2D,4BAE3C,GACGrrF,KAAK2b,QAAUuvE,GAAwBF,IACtCI,GAA0BH,EAG5B,OADAjrF,KAAK6nF,yBAA0B,GACxB,EAET7nF,KAAK6nF,yBAA0B,EAE/B,MAAMyD,EAAmBxrF,EAAW8N,OAC9BQ,EAAYtO,EAAWsO,UACvBqB,EAAarB,EAAUqB,WACvBhB,EAAaL,EAAUK,WACvBmH,EAAa9V,EAAW8V,WACxB21E,EAAsB7D,EAAYjiE,cAClC+lE,EAA0B9D,EAAY+D,kBAC5C,IAAIC,EAAyBhE,EAAYiE,sBAEV1rF,IAA3ByrF,IACFA,EAAyBE,IAG3B,MAAMj9E,EAASP,EAAUO,OAAO5D,QAC1B6C,GAASylB,EAAAA,EAAAA,GACbi4D,EACAE,EAA0B/8E,GAEtBo9E,EAAiBj+E,EAAO7C,QACxB+gF,EAAc,CAACl+E,EAAO7C,SACtB+E,EAAmBL,EAAWM,YAEpC,GACEm5E,EAAan4E,YACbtB,EAAWI,cACVyhB,EAAAA,EAAAA,IAAexhB,EAAkBhQ,EAAW8N,QAC7C,CAMA,MAAMoC,GAAaC,EAAAA,EAAAA,IAASH,GACtBi8E,EAAS3mF,KAAKqI,KAAIwC,EAAAA,EAAAA,IAASrC,GAAU,EAAGoC,GAC9CpC,EAAO,GAAKkC,EAAiB,GAAKi8E,EAClCn+E,EAAO,GAAKkC,EAAiB,GAAKi8E,GAClCC,EAAAA,EAAAA,IAAgBr9E,EAAQc,GACxB,MAAMw8E,GAAaC,EAAAA,EAAAA,IAAYJ,EAAY,GAAIr8E,GAG7Cw8E,EAAW,GAAKn8E,EAAiB,IACjCm8E,EAAW,GAAKn8E,EAAiB,GAEjCg8E,EAAYhnF,KAAK,CACfmnF,EAAW,GAAKj8E,EAChBi8E,EAAW,GACXA,EAAW,GAAKj8E,EAChBi8E,EAAW,KAGbA,EAAW,GAAKn8E,EAAiB,IACjCm8E,EAAW,GAAKn8E,EAAiB,IAEjCg8E,EAAYhnF,KAAK,CACfmnF,EAAW,GAAKj8E,EAChBi8E,EAAW,GACXA,EAAW,GAAKj8E,EAChBi8E,EAAW,IAGjB,CAEA,GACEjsF,KAAK2b,OACL3b,KAAKkoF,qBAAuBz5E,GAC5BzO,KAAKioF,mBAAqBsD,GAC1BvrF,KAAKyoF,sBAAwBiD,GAC7B1rF,KAAK0oF,4BAA8B5oF,EAAW2T,YAC9C6d,EAAAA,EAAAA,IAAetxB,KAAKooF,uBAAwBx6E,GAQ5C,OANKsU,EAAAA,EAAAA,IAAOliB,KAAKmoF,gBAAiB0D,KAChC7rF,KAAK8nF,uBAAyB,KAC9B9nF,KAAKmoF,gBAAkB0D,GAEzB7rF,KAAKsoF,gBAAkB35E,EACvB3O,KAAK4oF,oBAAqB,GACnB,EAGT5oF,KAAK2oF,aAAe,KAEpB,MAAMjC,EAAc,IAAIyF,EACtBC,GAAmB39E,EAAYmH,GAC/BhI,EACAa,EACAmH,GAGIy9B,GAAiBC,EAAAA,EAAAA,MACvB,IAAI4uC,EACJ,GAAI7uC,EAAgB,CAClB,IAAK,IAAIjsC,EAAI,EAAGwE,EAAKkgF,EAAY1nF,OAAQgD,EAAIwE,IAAMxE,EAAG,CACpD,MAAMwG,EAASk+E,EAAY1kF,GACrBsiF,GAAaj2C,EAAAA,EAAAA,IAAa7lC,EAAQ6B,GACxCy5E,EAAaj4D,aACXy4D,GACA/1C,EAAAA,EAAAA,IAAiBllC,EAAYgB,GAC7B4jC,EAEJ,CACA6uC,GAAgBhxC,EAAAA,EAAAA,IAA4BmC,EAAgB5jC,EAC9D,MACE,IAAK,IAAIrI,EAAI,EAAGwE,EAAKkgF,EAAY1nF,OAAQgD,EAAIwE,IAAMxE,EACjD8hF,EAAaj4D,aAAa66D,EAAY1kF,GAAIqH,EAAYgB,GAI1D,MAAM4V,EAAmBslE,GAA0Bl8E,EAAYmH,GAC/D,IAAI+F,GAAQ,EACZ,MAAM5H,EAKJA,CAACzE,EAAStI,KACR,IAAI0gD,EACJ,MAAM+hC,EACJn6E,EAAQk4C,oBAAsBkgC,EAAYlgC,mBAI5C,GAHIiiC,IACF/hC,EAAS+hC,EAAcn6E,EAASb,IAE9Bi5C,EAAQ,CACV,MAAM2kC,EAAQrsF,KAAKmnF,cACjB73E,EACA+V,EACAqiC,EACAg/B,EACAxE,EACAliF,KAAKo1C,WAAW5hC,eAChBxM,GAEF2U,EAAQA,IAAU0wE,CACpB,GAGE3C,GAAaj2C,EAAAA,EAAAA,IAAa7lC,EAAQ6B,GAElCuK,EAAWkvE,EAAal5D,oBAAoB05D,GAC9CgC,GACF1xE,EAAS7I,KAAKu6E,GAEhB,IAAK,IAAItkF,EAAI,EAAGwE,EAAKoO,EAAS5V,OAAQgD,EAAIwE,IAAMxE,EAC9C2M,EAAOiG,EAAS5S,GAAIA,GAEtBpH,KAAKgoF,kBAAoBhuE,EACzBha,KAAK2b,MAAQA,EAEb,MAAM2wE,EAA0B5F,EAAY3X,SACtCia,EAAgB,IAAIuD,GACxB3+E,EACAa,EACAmH,EACAszE,EAAav4D,cACb27D,EACA5E,EAAY+D,oBACV3rF,EAAW2T,WAgBf,OAbAzT,KAAKkoF,oBAAsBz5E,EAC3BzO,KAAKioF,kBAAoBsD,EACzBvrF,KAAKyoF,qBAAuBiD,EAC5B1rF,KAAK0oF,0BAA4B5oF,EAAW2T,UAC5CzT,KAAKmoF,gBAAkB0D,EACvB7rF,KAAKooF,uBAAyBx6E,EAC9B5N,KAAKsoF,gBAAkB35E,EACvB3O,KAAKuoF,oBAAsB94E,EAC3BzP,KAAKwoF,oBAAsB5yE,EAC3B5V,KAAK2oF,aAAeK,EACpBhpF,KAAK8nF,uBAAyB,KAE9B9nF,KAAK4oF,oBAAqB,GACnB,CACT,CAYAzB,aAAAA,CACE73E,EACA+V,EACAqiC,EACAw+B,EACA5gE,EACA7R,EACAzM,GAEA,IAAK0gD,EACH,OAAO,EAET,IAAI9rC,GAAU,EACd,GAAIhR,MAAMC,QAAQ68C,GAChB,IAAK,IAAItgD,EAAI,EAAGwE,EAAK87C,EAAOtjD,OAAQgD,EAAIwE,IAAMxE,EAC5CwU,EACEurE,GACEjB,EACA52E,EACAo4C,EAAOtgD,GACPie,EACArlB,KAAK2nF,6BACLriE,EACA7R,EACAzM,IACG4U,OAGTA,EAAUurE,GACRjB,EACA52E,EACAo4C,EACAriC,EACArlB,KAAK2nF,6BACLriE,EACA7R,EACAzM,GAGJ,OAAO4U,CACT,EAGF,Y,eCluBA,MAAM4wE,WAAoBj5E,GAAAA,EAIxB5T,WAAAA,CAAYsK,GACVlK,MAAMkK,EACR,CAKA4vC,cAAAA,GACE,OAAO,IAAI2tC,GAA0BxnF,KACvC,EAGF,W,iBC3EO,SAAS6nB,EACd0M,EACAC,EACAC,EACAlN,EACAjC,EACA1Y,EACA6/E,GAEA7/E,EAAOA,GAAc,GACrB6/E,EAAoBA,GAAwC,EAC5D,IAAIrlF,EAAI,EACR,IAAK,IAAImJ,EAAIikB,EAAQjkB,EAAIkkB,EAAKlkB,GAAKgX,EAAQ,CACzC,MAAM5B,EAAI4O,EAAgBhkB,GACpBqV,EAAI2O,EAAgBhkB,EAAI,GAC9B3D,EAAKxF,KAAOke,EAAU,GAAKK,EAAIL,EAAU,GAAKM,EAAIN,EAAU,GAC5D1Y,EAAKxF,KAAOke,EAAU,GAAKK,EAAIL,EAAU,GAAKM,EAAIN,EAAU,GAE5D,IAAK,IAAIypC,EAAI,EAAGA,EAAI09B,EAAmB19B,IACrCniD,EAAKxF,KAAOmtB,EAAgBhkB,EAAIw+C,EAEpC,CAKA,OAHIniD,GAAQA,EAAKxI,QAAUgD,IACzBwF,EAAKxI,OAASgD,GAETwF,CACT,CAYO,SAAS2Z,EACdgO,EACAC,EACAC,EACAlN,EACAf,EACAC,EACA7Z,GAEAA,EAAOA,GAAc,GACrB,MAAMspB,EAAM9wB,KAAK8wB,IAAI1P,GACf4P,EAAMhxB,KAAKgxB,IAAI5P,GACfk1D,EAAUj1D,EAAO,GACjBk1D,EAAUl1D,EAAO,GACvB,IAAIrf,EAAI,EACR,IAAK,IAAImJ,EAAIikB,EAAQjkB,EAAIkkB,EAAKlkB,GAAKgX,EAAQ,CACzC,MAAM9K,EAAS8X,EAAgBhkB,GAAKmrE,EAC9Bh/D,EAAS6X,EAAgBhkB,EAAI,GAAKorE,EACxC/uE,EAAKxF,KAAOs0E,EAAUj/D,EAASyZ,EAAMxZ,EAAS0Z,EAC9CxpB,EAAKxF,KAAOu0E,EAAUl/D,EAAS2Z,EAAM1Z,EAASwZ,EAC9C,IAAK,IAAI64B,EAAIx+C,EAAI,EAAGw+C,EAAIx+C,EAAIgX,IAAUwnC,EACpCniD,EAAKxF,KAAOmtB,EAAgBw6B,EAEhC,CAIA,OAHIniD,GAAQA,EAAKxI,QAAUgD,IACzBwF,EAAKxI,OAASgD,GAETwF,CACT,CAcO,SAAS8V,EACd6R,EACAC,EACAC,EACAlN,EACAb,EACAC,EACAF,EACA7Z,GAEAA,EAAOA,GAAc,GACrB,MAAM8uE,EAAUj1D,EAAO,GACjBk1D,EAAUl1D,EAAO,GACvB,IAAIrf,EAAI,EACR,IAAK,IAAImJ,EAAIikB,EAAQjkB,EAAIkkB,EAAKlkB,GAAKgX,EAAQ,CACzC,MAAM9K,EAAS8X,EAAgBhkB,GAAKmrE,EAC9Bh/D,EAAS6X,EAAgBhkB,EAAI,GAAKorE,EACxC/uE,EAAKxF,KAAOs0E,EAAUh1D,EAAKjK,EAC3B7P,EAAKxF,KAAOu0E,EAAUh1D,EAAKjK,EAC3B,IAAK,IAAIqyC,EAAIx+C,EAAI,EAAGw+C,EAAIx+C,EAAIgX,IAAUwnC,EACpCniD,EAAKxF,KAAOmtB,EAAgBw6B,EAEhC,CAIA,OAHIniD,GAAQA,EAAKxI,QAAUgD,IACzBwF,EAAKxI,OAASgD,GAETwF,CACT,CAYO,SAASqa,EACdsN,EACAC,EACAC,EACAlN,EACA9K,EACAC,EACA9P,GAEAA,EAAOA,GAAc,GACrB,IAAIxF,EAAI,EACR,IAAK,IAAImJ,EAAIikB,EAAQjkB,EAAIkkB,EAAKlkB,GAAKgX,EAAQ,CACzC3a,EAAKxF,KAAOmtB,EAAgBhkB,GAAKkM,EACjC7P,EAAKxF,KAAOmtB,EAAgBhkB,EAAI,GAAKmM,EACrC,IAAK,IAAIqyC,EAAIx+C,EAAI,EAAGw+C,EAAIx+C,EAAIgX,IAAUwnC,EACpCniD,EAAKxF,KAAOmtB,EAAgBw6B,EAEhC,CAIA,OAHIniD,GAAQA,EAAKxI,QAAUgD,IACzBwF,EAAKxI,OAASgD,GAETwF,CACT,C,8ECrJA,SACEsR,UAAW,EACXC,YAAa,E,iGCwJf,MAAMuuE,EAIJ/sF,WAAAA,CAAYsK,GACVA,EAAUA,GAAW,CAAC,EAMtBjK,KAAK8/C,UAAY,KAMjB9/C,KAAK2sF,kBAAoBC,OAEA3sF,IAArBgK,EAAQsF,UACVvP,KAAKgnD,YAAY/8C,EAAQsF,UAO3BvP,KAAKopD,WAAyBnpD,IAAjBgK,EAAQ+2B,KAAqB/2B,EAAQ+2B,KAAO,KAMzDhhC,KAAKg8D,YAA2B/7D,IAAlBgK,EAAQorC,MAAsBprC,EAAQorC,MAAQ,KAM5Dr1C,KAAK6X,eAAiC5X,IAArBgK,EAAQyR,SAAyBzR,EAAQyR,SAAW,KAMrE1b,KAAK6sF,2BAC8B5sF,IAAjCgK,EAAQkgE,qBACJlgE,EAAQkgE,qBACR,KAMNnqE,KAAK0pD,aAA6BzpD,IAAnBgK,EAAQ0/C,OAAuB1/C,EAAQ0/C,OAAS,KAM/D3pD,KAAK0oD,WAAyBzoD,IAAjBgK,EAAQ0+C,KAAqB1+C,EAAQ0+C,KAAO,KAMzD3oD,KAAK8sF,QAAU7iF,EAAQiD,MACzB,CAOAoU,KAAAA,GAAQ,IAAAyrE,EACN,IAAIx9E,EAAWvP,KAAKyuB,cAMpB,OALIlf,GAAgC,kBAAbA,IACrBA,EACEA,EACA+R,SAEG,IAAIorE,EAAM,CACfn9E,SAAkB,OAARA,QAAQ,IAARA,EAAAA,OAAYtP,EACtB+gC,KAAMhhC,KAAK+qD,UAAY/qD,KAAK+qD,UAAUzpC,aAAUrhB,EAChDo1C,MAAOr1C,KAAKyjB,WAAazjB,KAAKyjB,WAAWnC,aAAUrhB,EACnDyb,SAA4B,QAApBqxE,EAAE/sF,KAAK2Q,qBAAa,IAAAo8E,EAAAA,OAAI9sF,EAChC0pD,OAAQ3pD,KAAKgrD,YAAchrD,KAAKgrD,YAAY1pC,aAAUrhB,EACtD0oD,KAAM3oD,KAAK2qD,UAAY3qD,KAAK2qD,UAAUrpC,aAAUrhB,EAChDiN,OAAQlN,KAAKqmF,aAEjB,CAQA11E,WAAAA,GACE,OAAO3Q,KAAK6X,SACd,CAQAm1E,WAAAA,CAAYtxE,GACV1b,KAAK6X,UAAY6D,CACnB,CAQAuxE,uBAAAA,CAAwBvxE,GACtB1b,KAAK6sF,sBAAwBnxE,CAC/B,CAQA6rE,uBAAAA,GACE,OAAOvnF,KAAK6sF,qBACd,CASAp+D,WAAAA,GACE,OAAOzuB,KAAK8/C,SACd,CAQAykC,mBAAAA,GACE,OAAOvkF,KAAK2sF,iBACd,CAOA5hC,OAAAA,GACE,OAAO/qD,KAAKopD,KACd,CAOA0C,OAAAA,CAAQ9qB,GACNhhC,KAAKopD,MAAQpoB,CACf,CAOAvd,QAAAA,GACE,OAAOzjB,KAAKg8D,MACd,CAOAquB,QAAAA,CAASh1C,GACPr1C,KAAKg8D,OAAS3mB,CAChB,CAOA2V,SAAAA,GACE,OAAOhrD,KAAK0pD,OACd,CAOAqC,SAAAA,CAAUpC,GACR3pD,KAAK0pD,QAAUC,CACjB,CAOAgB,OAAAA,GACE,OAAO3qD,KAAK0oD,KACd,CAOAsD,OAAAA,CAAQrD,GACN3oD,KAAK0oD,MAAQC,CACf,CAOA09B,SAAAA,GACE,OAAOrmF,KAAK8sF,OACd,CAUA9lC,WAAAA,CAAYz3C,GACc,oBAAbA,EACTvP,KAAK2sF,kBAAoBp9E,EACI,kBAAbA,EAChBvP,KAAK2sF,kBAAoB,SAAUr9E,GACjC,OACEA,EAAQjD,IAAIkD,EAEhB,EACUA,OAEYtP,IAAbsP,IACTvP,KAAK2sF,kBAAoB,WACvB,OAA6Dp9E,CAC/D,GAJAvP,KAAK2sF,kBAAoBC,EAM3B5sF,KAAK8/C,UAAYvwC,CACnB,CAQA29E,SAAAA,CAAUhgF,GACRlN,KAAK8sF,QAAU5/E,CACjB,EAWK,SAASigF,EAAW17D,GACzB,IAAIg4D,EAEJ,GAAmB,oBAARh4D,EACTg4D,EAAgBh4D,MACX,CAIL,IAAIi2B,EACJ,GAAI98C,MAAMC,QAAQ4mB,GAChBi2B,EAASj2B,MACJ,EACL9qB,EAAAA,EAAAA,GACgD,oBAApB8qB,EAAc,UACxC,8CAGFi2B,EAAS,CAD2Bj2B,EAEtC,CACAg4D,EAAgB,WACd,OAAO/hC,CACT,CACF,CACA,OAAO+hC,CACT,CAKA,IAAI2D,EAAgB,KAOb,SAASC,EAAmB/9E,EAASb,GAM1C,IAAK2+E,EAAe,CAClB,MAAMpsD,EAAO,IAAIP,EAAAA,EAAK,CACpB7X,MAAO,0BAEH+gC,EAAS,IAAI2jC,EAAAA,EAAO,CACxB1kE,MAAO,UACPpW,MAAO,OAET46E,EAAgB,CACd,IAAIV,EAAM,CACRr3C,MAAO,IAAIk4C,EAAAA,EAAY,CACrBvsD,KAAMA,EACN2oB,OAAQA,EACRja,OAAQ,IAEV1O,KAAMA,EACN2oB,OAAQA,IAGd,CACA,OAAOyjC,CACT,CAqEA,SAASR,EAAwBt9E,GAC/B,OAAOA,EAAQmf,aACjB,CAEA,S,8ECviBA,MAAM3tB,UAAekN,EAAAA,EAInBrO,WAAAA,CAAYiE,GACV7D,QAMAC,KAAKwtF,aAAe5pF,EAMpB5D,KAAKytF,iBAAmB,KAMxBztF,KAAK0tF,aAAe,KAMpB1tF,KAAK2tF,WAAa,IACpB,CAMArrF,gBAAAA,CAAiB1C,EAAMykB,GACrB,IAAKzkB,IAASykB,EACZ,OAEF,MAAMupE,EAAY5tF,KAAK2tF,aAAe3tF,KAAK2tF,WAAa,CAAC,GACnDE,EAAmBD,EAAUhuF,KAAUguF,EAAUhuF,GAAQ,IAC1DiuF,EAAiBvqD,SAASjf,IAC7BwpE,EAAiB/oF,KAAKuf,EAE1B,CAYAphB,aAAAA,CAAcM,GACZ,MAAMuqF,EAA4B,kBAAVvqF,EAClB3D,EAAOkuF,EAAWvqF,EAAQA,EAAM3D,KAChCguF,EAAY5tF,KAAK2tF,YAAc3tF,KAAK2tF,WAAW/tF,GACrD,IAAKguF,EACH,OAGF,MAAMz+D,EAAM2+D,EAAW,IAAIpuF,EAAAA,GAAM6D,GAAS,EACrC4rB,EAAIvrB,SACPurB,EAAIvrB,OAAS5D,KAAKwtF,cAAgBxtF,MAEpC,MAAM+tF,EAAc/tF,KAAK0tF,eAAiB1tF,KAAK0tF,aAAe,CAAC,GACzDM,EACJhuF,KAAKytF,mBAAqBztF,KAAKytF,iBAAmB,CAAC,GAMrD,IAAIQ,EALEruF,KAAQmuF,IACZA,EAAYnuF,GAAQ,EACpBouF,EAAgBpuF,GAAQ,KAExBmuF,EAAYnuF,GAEd,IAAK,IAAIwH,EAAI,EAAGwE,EAAKgiF,EAAUxpF,OAAQgD,EAAIwE,IAAMxE,EAU/C,GARE6mF,EADE,gBAAiBL,EAAUxmF,GAE3BwmF,EAAUxmF,GACVuW,YAAYwR,GAGZy+D,EAAUxmF,GACVoI,KAAKxP,KAAMmvB,IAEG,IAAd8+D,GAAuB9+D,EAAIvR,mBAAoB,CACjDqwE,GAAY,EACZ,KACF,CAEF,GAA4B,MAAtBF,EAAYnuF,GAAa,CAC7B,IAAIsuF,EAAKF,EAAgBpuF,GAEzB,WADOouF,EAAgBpuF,GAChBsuF,KACLluF,KAAKyF,oBAAoB7F,EAAMmtB,EAAAA,WAE1BghE,EAAYnuF,EACrB,CACA,OAAOquF,CACT,CAMAzoF,eAAAA,GACExF,KAAK2tF,aAAcxnF,EAAAA,EAAAA,GAAMnG,KAAK2tF,WAChC,CASAQ,YAAAA,CAAavuF,GACX,OAAQI,KAAK2tF,YAAc3tF,KAAK2tF,WAAW/tF,SAAUK,CACvD,CAOAgT,WAAAA,CAAYrT,GACV,QAAKI,KAAK2tF,aAGH/tF,EACHA,KAAQI,KAAK2tF,WACb5pF,OAAO2uB,KAAK1yB,KAAK2tF,YAAYvpF,OAAS,EAC5C,CAMAqB,mBAAAA,CAAoB7F,EAAMykB,GACxB,IAAKrkB,KAAK2tF,WACR,OAEF,MAAMC,EAAY5tF,KAAK2tF,WAAW/tF,GAClC,IAAKguF,EACH,OAEF,MAAM5mF,EAAQ4mF,EAAU77D,QAAQ1N,IACjB,IAAXrd,IACEhH,KAAKytF,kBAAoB7tF,KAAQI,KAAKytF,kBAExCG,EAAU5mF,GAAS+lB,EAAAA,KACjB/sB,KAAKytF,iBAAiB7tF,KAExBguF,EAAU97D,OAAO9qB,EAAO,GACC,IAArB4mF,EAAUxpF,eACLpE,KAAK2tF,WAAW/tF,IAI/B,EAGF,S,6FCjLO,SAAS+nC,EAAsBn1B,EAAOC,EAAQijC,EAAY04C,GAE/D,IAAIz3C,EAeJ,OAbEA,EADEjB,GAAcA,EAAWtxC,OACgBsxC,EAAW24C,QAC7C3qD,EAAAA,GACA,IAAIE,gBAAgBpxB,GAAS,IAAKC,GAAU,KAE5CL,SAASC,cAAc,UAE9BG,IACFmkC,EAAOnkC,MAAQA,GAEbC,IACFkkC,EAAOlkC,OAASA,GAIhBkkC,EAAOG,WAAW,KAAMs3C,EAE5B,CAGA,IAAIE,EAKG,SAASnlE,IAId,OAHKmlE,IACHA,EAAsB3mD,EAAsB,EAAG,IAE1C2mD,CACT,CAOO,SAAS/E,EAAc7hD,GAC5B,MAAMiP,EAASjP,EAAQiP,OACvBA,EAAOnkC,MAAQ,EACfmkC,EAAOlkC,OAAS,EAChBi1B,EAAQO,UAAU,EAAG,EAAG,EAAG,EAC7B,CAoCO,SAAShK,EAAYswD,EAASC,GACnC,MAAMC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,EAEjC,CAKO,SAAS5wD,EAAegxD,GAC7B,KAAOA,EAAKC,WACVD,EAAKC,UAAU17E,QAEnB,CAUO,SAASa,EAAgB46E,EAAME,GACpC,MAAMC,EAAcH,EAAKI,WAEzB,IAAK,IAAI5nF,EAAI,KAAWA,EAAG,CACzB,MAAM6nF,EAAWF,EAAY3nF,GACvB8nF,EAAWJ,EAAS1nF,GAG1B,IAAK6nF,IAAaC,EAChB,MAIED,IAAaC,IAKZD,EAMAC,EAOLN,EAAK/7E,aAAaq8E,EAAUD,IAN1BL,EAAKvuC,YAAY4uC,KACf7nF,GAPFwnF,EAAK73E,YAAYm4E,GAarB,CACF,C,kCClJA,SACExlF,KAAM,EACNwf,QAAS,EACThgB,OAAQ,EAKRC,MAAO,EACPC,MAAO,E,iBCJF,SAASmvB,EACdhE,EACAC,EACAC,EACAlN,EACAzW,GAEAA,OAA8B7Q,IAAhB6Q,EAA4BA,EAAc,GACxD,IAAI1J,EAAI,EACR,IAAK,IAAImJ,EAAIikB,EAAQjkB,EAAIkkB,EAAKlkB,GAAKgX,EACjCzW,EAAY1J,KAAOmtB,EAAgBxpB,MAAMwF,EAAGA,EAAIgX,GAGlD,OADAzW,EAAY1M,OAASgD,EACd0J,CACT,CAUO,SAASkpB,EACdzF,EACAC,EACAsE,EACAvR,EACAuzC,GAEAA,OAAgC76D,IAAjB66D,EAA6BA,EAAe,GAC3D,IAAI1zD,EAAI,EACR,IAAK,IAAImJ,EAAI,EAAGqhC,EAAK9Y,EAAK10B,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CAC7C,MAAMkkB,EAAMqE,EAAKvoB,GACjBuqD,EAAa1zD,KAAOmxB,EAClBhE,EACAC,EACAC,EACAlN,EACAuzC,EAAa1zD,IAEfotB,EAASC,CACX,CAEA,OADAqmC,EAAa12D,OAASgD,EACf0zD,CACT,CAWO,SAAS7G,EACd1/B,EACAC,EACAgN,EACAja,EACAwzC,GAEAA,OAAkC96D,IAAlB86D,EAA8BA,EAAgB,GAC9D,IAAI3zD,EAAI,EACR,IAAK,IAAImJ,EAAI,EAAGqhC,EAAKpQ,EAAMp9B,OAAQmM,EAAIqhC,IAAMrhC,EAAG,CAC9C,MAAMuoB,EAAO0I,EAAMjxB,GACnBwqD,EAAc3zD,KACI,IAAhB0xB,EAAK10B,QAAgB00B,EAAK,KAAOtE,EAC7B,GACAwF,EACEzF,EACAC,EACAsE,EACAvR,EACAwzC,EAAc3zD,IAEtBotB,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CAEA,OADA22D,EAAc32D,OAASgD,EAChB2zD,CACT,C,6FCtEO,SAASo0B,EAAY/iE,GAC1B,OAAOA,aAAgB2X,OACrB3X,aAAgByqB,mBAChBzqB,aAAgBgjE,kBAChBhjE,aAAgBijE,YACdjjE,EACA,IACN,CAkBO,MAAMkjE,EAAgB,IAAI/5D,MAAM,YAqCvC,MAAMg6D,EAAc,CAAC,IAAK,KAgB1B,MAAMC,UAAiB5xB,EAAAA,EAIrBj+D,WAAAA,CAAYsK,GACV,MAAMlB,EAAQE,EAAAA,EAAUS,KAExB3J,MAAMkK,EAAQ8oB,UAAWhqB,EAAO,CAC9B+0D,WAAY7zD,EAAQ6zD,WACpBjxC,YAAa5iB,EAAQ4iB,cAOvB7sB,KAAK8sB,QAAU7iB,EAAQmjB,OAMvBptB,KAAKyvF,MAAQ,KAMbzvF,KAAK0vF,OAAS,KAMd1vF,KAAKwtD,MAAQvjD,EAAQuE,MAAQ,KAM7BxO,KAAK2vF,YAAc1lF,EAAQ2lF,YAAc,IAC3C,CAMAn1E,OAAAA,GACE,GAAIza,KAAKwtD,MACP,OAAOxtD,KAAKwtD,MAEd,MAAM4zB,EAAY+N,EAAYnvF,KAAKyvF,OACnC,OAAIrO,EACK,CAACA,EAAU5uE,MAAO4uE,EAAU3uE,QAE9B88E,CACT,CAOAr6C,OAAAA,GACE,OAAOl1C,KAAKyvF,KACd,CAOAI,QAAAA,GACE,OAAO7vF,KAAK0vF,MACd,CAOA/lF,IAAAA,GACE,GAAI3J,KAAK+I,QAAUE,EAAAA,EAAUS,MAAQ1J,KAAK+I,QAAUE,EAAAA,EAAUE,MAC5D,OAEFnJ,KAAK+I,MAAQE,EAAAA,EAAUigB,QACvBlpB,KAAKmL,UAEL,MAAM04B,EAAO7jC,KACbA,KAAK8sB,UACFtU,MAAK,SAAU4T,GACdyX,EAAK4rD,MAAQrjE,EACbyX,EAAK96B,MAAQE,EAAAA,EAAUC,OACvB26B,EAAK14B,SACP,IACC6xD,OAAM,SAAU8yB,GACfjsD,EAAK6rD,OAASI,EACdjsD,EAAK96B,MAAQE,EAAAA,EAAUE,MACvB06B,EAAK14B,SACP,GACJ,CAMA3F,eAAAA,GACMxF,KAAK2vF,cACP3vF,KAAK2vF,YAAYI,MAAMT,GACvBtvF,KAAK2vF,YAAc,MAErB5vF,MAAMyF,iBACR,EAGF,U,4FCmFA,QApRA,MAIE7F,WAAAA,CAAYqwF,GAMVhwF,KAAKgwF,mBAAkC/vF,IAAlB+vF,EAA8BA,EAAgB,KAMnEhwF,KAAKiwF,OAAS,EAMdjwF,KAAKkwF,SAAW,CAAC,EAMjBlwF,KAAKmwF,QAAU,KAMfnwF,KAAKowF,QAAU,IACjB,CAEAC,YAAAA,GACE,MAAMC,EAAQtwF,KAAKuG,MACf+pF,aAAiBtiF,EAAAA,GACnBsiF,EAAMtxE,SAEV,CAKAnN,cAAAA,GACE,OAAO7R,KAAKgwF,cAAgB,GAAKhwF,KAAK8G,WAAa9G,KAAKgwF,aAC1D,CAOAO,WAAAA,CAAY5b,GACV,KAAO30E,KAAK6R,kBACV7R,KAAKqwF,cAET,CAKAlqF,KAAAA,GACE,KAAOnG,KAAKmwF,SACVnwF,KAAKqwF,cAET,CAMAG,WAAAA,CAAYjpF,GACV,OAAOvH,KAAKkwF,SAASvmD,eAAepiC,EACtC,CAQAlD,OAAAA,CAAQghC,GACN,IAAIirD,EAAQtwF,KAAKmwF,QACjB,KAAOG,GACLjrD,EAAEirD,EAAMG,OAAQH,EAAMI,KAAM1wF,MAC5BswF,EAAQA,EAAMK,KAElB,CAOAtkF,GAAAA,CAAI9E,EAAK0C,GACP,MAAMqmF,EAAQtwF,KAAKkwF,SAAS3oF,GAK5B,OAJAZ,EAAAA,EAAAA,QACY1G,IAAVqwF,EACA,mEAEEA,IAAUtwF,KAAKowF,UAGfE,IAAUtwF,KAAKmwF,SACjBnwF,KAAKmwF,QAAgCnwF,KAAKmwF,QAAQQ,MAClD3wF,KAAKmwF,QAAQS,MAAQ,OAErBN,EAAMK,MAAMC,MAAQN,EAAMM,MAC1BN,EAAMM,MAAMD,MAAQL,EAAMK,OAE5BL,EAAMK,MAAQ,KACdL,EAAMM,MAAQ5wF,KAAKowF,QACnBpwF,KAAKowF,QAAQO,MAAQL,EACrBtwF,KAAKowF,QAAUE,GAZNA,EAAMG,MAcjB,CAOAt9E,MAAAA,CAAO5L,GACL,MAAM+oF,EAAQtwF,KAAKkwF,SAAS3oF,GAqB5B,OApBAZ,EAAAA,EAAAA,QACY1G,IAAVqwF,EACA,mEAEEA,IAAUtwF,KAAKowF,SACjBpwF,KAAKowF,QAAgCE,EAAMM,MACvC5wF,KAAKowF,UACPpwF,KAAKowF,QAAQO,MAAQ,OAEdL,IAAUtwF,KAAKmwF,SACxBnwF,KAAKmwF,QAAgCG,EAAMK,MACvC3wF,KAAKmwF,UACPnwF,KAAKmwF,QAAQS,MAAQ,QAGvBN,EAAMK,MAAMC,MAAQN,EAAMM,MAC1BN,EAAMM,MAAMD,MAAQL,EAAMK,cAErB3wF,KAAKkwF,SAAS3oF,KACnBvH,KAAKiwF,OACAK,EAAMG,MACf,CAKA3pF,QAAAA,GACE,OAAO9G,KAAKiwF,MACd,CAKArjC,OAAAA,GACE,MAAMl6B,EAAO,IAAI9nB,MAAM5K,KAAKiwF,QAC5B,IACIK,EADAlpF,EAAI,EAER,IAAKkpF,EAAQtwF,KAAKowF,QAASE,EAAOA,EAAQA,EAAMM,MAC9Cl+D,EAAKtrB,KAAOkpF,EAAMI,KAEpB,OAAOh+D,CACT,CAKAm+D,SAAAA,GACE,MAAM7sF,EAAS,IAAI4G,MAAM5K,KAAKiwF,QAC9B,IACIK,EADAlpF,EAAI,EAER,IAAKkpF,EAAQtwF,KAAKowF,QAASE,EAAOA,EAAQA,EAAMM,MAC9C5sF,EAAOoD,KAAOkpF,EAAMG,OAEtB,OAAOzsF,CACT,CAKA8sF,QAAAA,GACE,OAAO9wF,KAAKmwF,QAAQM,MACtB,CAKAM,WAAAA,GACE,OAAO/wF,KAAKmwF,QAAQO,IACtB,CAMAM,YAAAA,GACE,OAAOhxF,KAAKowF,QAAQM,IACtB,CAOAO,IAAAA,CAAK1pF,GAAK,IAAA2pF,EACR,OAAyB,QAAzBA,EAAOlxF,KAAKkwF,SAAS3oF,UAAI,IAAA2pF,OAAA,EAAlBA,EAAoBT,MAC7B,CAKAlqF,GAAAA,GACE,MAAM+pF,EAAQtwF,KAAKmwF,QAUnB,cATOnwF,KAAKkwF,SAASI,EAAMI,MACvBJ,EAAMK,QACRL,EAAMK,MAAMC,MAAQ,MAEtB5wF,KAAKmwF,QAAgCG,EAAMK,MACtC3wF,KAAKmwF,UACRnwF,KAAKowF,QAAU,QAEfpwF,KAAKiwF,OACAK,EAAMG,MACf,CAMAvoE,OAAAA,CAAQ3gB,EAAK5C,GACX3E,KAAKqM,IAAI9E,GACTvH,KAAKkwF,SAAS3oF,GAAKkpF,OAAS9rF,CAC9B,CAMA6H,GAAAA,CAAIjF,EAAK5C,IACPgC,EAAAA,EAAAA,KACIY,KAAOvH,KAAKkwF,UACd,uDAEF,MAAMI,EAAQ,CACZI,KAAMnpF,EACNopF,MAAO,KACPC,MAAO5wF,KAAKowF,QACZK,OAAQ9rF,GAEL3E,KAAKowF,QAGRpwF,KAAKowF,QAAQO,MAAQL,EAFrBtwF,KAAKmwF,QAAUG,EAIjBtwF,KAAKowF,QAAUE,EACftwF,KAAKkwF,SAAS3oF,GAAO+oF,IACnBtwF,KAAKiwF,MACT,CAOA/wE,OAAAA,CAAQ1Q,GACNxO,KAAKgwF,cAAgBxhF,CACvB,G,4CCpQF,SAASqa,EAAYjY,EAAQugF,EAAW1nD,EAAG9jB,EAAGC,GAC5C,MAAO,GAAP2G,QAAUpgB,EAAAA,EAAAA,IAAOyE,GAAO,KAAA2b,OAAI4kE,EAAS,KAAA5kE,QAAI6kE,EAAAA,EAAAA,IAAU3nD,EAAG9jB,EAAGC,GAC3D,CAaA,SAASyrE,EAAgBC,EAAUxoF,EAAM2gC,GACvC,KAAMA,KAAK6nD,GAET,OADAA,EAAS7nD,GAAK,IAAIvM,IAAI,CAACp0B,KAChB,EAET,MAAM0D,EAAM8kF,EAAS7nD,GACf8nD,EAAW/kF,EAAIglF,IAAI1oF,GAIzB,OAHKyoF,GACH/kF,EAAI2b,IAAIrf,IAEFyoF,CACV,CASA,SAASE,EAAqBH,EAAUxoF,EAAM2gC,GAC5C,MAAMj9B,EAAM8kF,EAAS7nD,GACrB,QAAIj9B,GACKA,EAAIklF,OAAO5oF,EAGtB,CAOA,SAAS6oF,EAAgB7xF,EAAY8N,GACnC,MAAMT,EAAarN,EAAWqQ,iBAAiBrQ,EAAW8T,YACtDzG,EAAWS,SACbA,GAASC,EAAAA,EAAAA,IACPD,GACA8lC,EAAAA,EAAAA,IAAevmC,EAAWS,OAAQ9N,EAAWsO,UAAUqB,cAG3D,MAAMmB,EACJzD,EAAWtD,MAAMmvC,kBAEnB,IAAKpoC,EAAOG,WAAY,CACtB,MAAM6gF,EAAahhF,EAChBihF,yBAAyB/xF,EAAWsO,UAAUqB,YAC9CM,YACC6hF,IACFhkF,GAASC,EAAAA,EAAAA,IAAgBD,EAAQgkF,GAErC,CACA,OAAOhkF,CACT,CAcA,MAAMkkF,UAAgCrK,EAAAA,EAKpC9nF,WAAAA,CAAYoyF,EAAW9nF,GACrBlK,MAAMgyF,GAEN9nF,EAAUA,GAAW,CAAC,EAMtBjK,KAAKgyF,eAAgB,EAMrBhyF,KAAKiyF,gBAAiB,EAMtBjyF,KAAKmoF,gBAAkB,KAMvBnoF,KAAKkyF,mBAMLlyF,KAAKmyF,mBAAqB,KAM1BnyF,KAAKoyF,cAAgB,GAMrBpyF,KAAKqyF,mBAMLryF,KAAKsyF,wBAMLtyF,KAAKuyF,YAAaztE,EAAAA,EAAAA,MAMlB9kB,KAAKwyF,eAAiB,IAAI1/D,EAAAA,EAAU,EAAG,EAAG,EAAG,GAM7C9yB,KAAKyyF,gBAAiBC,EAAAA,EAAAA,GAAgB,EAAG,EAAG,GAE5C,MAAMlqD,OAAkCvoC,IAAtBgK,EAAQu+B,UAA0Bv+B,EAAQu+B,UAAY,IAMxExoC,KAAK2yF,WAAa,IAAIC,EAASpqD,GAE/BxoC,KAAK80C,aAA2B,GAAZtM,CACtB,CAKAqqD,YAAAA,GACE,OAAO7yF,KAAK2yF,UACd,CAYAG,eAAAA,CAAgBrpD,EAAG9jB,EAAGC,EAAG9lB,GACvB,MAAMizF,EAAY/yF,KAAK2yF,WAEjBK,EADYhzF,KAAKo1C,WACMvkC,YACvBq9C,EAAWrlC,EAAYmqE,EAAYA,EAAW3qF,SAAUohC,EAAG9jB,EAAGC,GAGpE,IAAI9c,EAEJ,GAAIiqF,EAAUvC,YAAYtiC,GACxBplD,EAAOiqF,EAAU1mF,IAAI6hD,OAChB,CAQL,GAPAplD,EAAOkqF,EAAWC,QAChBxpD,EACA9jB,EACAC,EACA9lB,EAAW8V,WACX9V,EAAWsO,UAAUqB,aAElB3G,EACH,OAAO,KAETiqF,EAAUvmF,IAAI0hD,EAAUplD,EAC1B,CACA,OAAOA,CACT,CAUAmqF,OAAAA,CAAQxpD,EAAG9jB,EAAGC,EAAG9lB,GACf,MAAMgJ,EAAO9I,KAAK8yF,gBAAgBrpD,EAAG9jB,EAAGC,EAAG9lB,GAC3C,OAAKgJ,GACI,IAGX,CAOAosC,OAAAA,CAAQ30C,GACN,MAAMT,EAAaE,KAAKF,WACxB,IAAKA,EACH,OAAO,KAGT,MAAM+J,EAAQ7J,KAAKo1C,WACb30C,GAAa4a,EAAAA,EAAAA,IACjBvb,EAAWwO,2BACX/N,EAAMwK,SAGFuuC,EAAczvC,EAAMkG,YAC1B,GAAIupC,KACG7lB,EAAAA,EAAAA,IAAmB6lB,EAAa74C,GACnC,OAAO,KAIX,MAAM2N,EAAYtO,EAAWsO,UACvBwC,EAAS/G,EAAMmvC,kBACfk6C,EAAWtiF,EAAOihF,yBAAyBzjF,EAAUqB,YACrD0jF,EAAiBviF,EAAOwiF,kBAAkBtzF,EAAW8V,YAE3D,IACE,IAAI6zB,EAAIypD,EAASG,kBAAkBjlF,EAAUK,YAC7Cg7B,GAAKypD,EAASnsB,eACZt9B,EACF,CACA,MAAM1W,EAAYmgE,EAASI,yBAAyB7yF,EAAYgpC,GAC1D3gC,EAAO9I,KAAKizF,QAAQxpD,EAAG1W,EAAU,GAAIA,EAAU,GAAIjzB,GACzD,IAAKgJ,GAAQA,EAAKE,aAAeC,EAAAA,EAAUC,OACzC,SAGF,MAAMqqF,EAAaL,EAASpvE,UAAU2lB,GAChC+pD,GAAW5wE,EAAAA,EAAAA,IAAOswE,EAASO,YAAYhqD,IACvCltB,EAAiB22E,EAASl0C,cAAcvV,GAK9C,IAAI4L,EACJ,GAAIvsC,aAAgB4qF,EAAAA,GAAa5qF,aAAgB6qF,EAAAA,EAC/Ct+C,EAAQvsC,EAAK2a,eACR,MAAI3a,aAAgB0mF,GAMzB,SAJA,GADAn6C,EAAQ85C,EAAYrmF,EAAKosC,YACpBG,EACH,QAIJ,CAEA,MAAMa,EAAM9wC,KAAKmyB,MACf47D,IACI1yF,EAAW,GAAK8yF,EAAW,IAAMh3E,EACjCwW,EAAU,GAAKygE,EAAS,KAGxBr9C,EAAM/wC,KAAKmyB,MACf47D,IACII,EAAW,GAAK9yF,EAAW,IAAM8b,EACjCwW,EAAU,GAAKygE,EAAS,KAGxBzH,EAAS3mF,KAAKq9B,MAClB0wD,EAAiBviF,EAAOgjF,uBAAuBxlF,EAAUqB,aAG3D,OAAOzP,KAAKooC,aAAaiN,EAAOa,EAAM61C,EAAQ51C,EAAM41C,EACtD,CAEA,OAAO,IACT,CAQA52C,YAAAA,CAAar1C,GACNE,KAAKmyF,mBAECryF,EAAWsO,UAAUqB,aAAezP,KAAKmyF,qBAClDnyF,KAAK2yF,WAAWxsF,QAChBnG,KAAKmyF,mBAAqBryF,EAAWsO,UAAUqB,YAH/CzP,KAAKmyF,mBAAqBryF,EAAWsO,UAAUqB,WAMjD,MAAMmB,EAAS5Q,KAAKo1C,WAAWvkC,YAC/B,IAAKD,EACH,OAAO,EAET,MAAMijF,EAAiBjjF,EAAO6U,cAS9B,OARKzlB,KAAKsyF,wBAECtyF,KAAKsyF,0BAA4BuB,IAC1C7zF,KAAKsyF,wBAA0BuB,EAC3B7zF,KAAKqyF,qBAAuBzhF,EAAOvI,UACrCrI,KAAK2yF,WAAWxsF,SAJlBnG,KAAKsyF,wBAA0BuB,GAO1B,CACT,CASAC,YAAAA,CAAah0F,EAAY8N,EAAQmmF,EAAUzC,EAAU0C,GACnD,MAAM5lF,EAAYtO,EAAWsO,UACvB2jF,EAAY/xF,KAAKo1C,WACjB49C,EAAajB,EAAU/4C,kBACvBk6C,EAAWF,EAAWnB,yBAAyBzjF,EAAUqB,YAEzD4M,GAAgBlQ,EAAAA,EAAAA,IAAO6mF,GACvB32E,KAAiBvc,EAAW0c,cAChC1c,EAAW0c,YAAYH,GAAiB,CAAC,GAG3C,MAAMG,EAAc1c,EAAW0c,YAAYH,GAErCxc,EAAMkyF,EAAU54C,iBAChB86C,EAAO7uF,KAAKqI,IAChBsmF,EAAWC,EACXd,EAASnsB,aACTmsB,EAASG,kBACPjuF,KAAKmI,IACHwkF,EAAUrrB,mBACV7mE,EACIA,EACGsb,UACA2gC,qBAAqB12C,KAAKqI,IAAIskF,EAAUhrB,aAAc,IACzDmsB,EAASl0C,cAAc,IAE7Bg0C,EAAWkB,aAGTxlF,EAAWN,EAAUM,SACrBylF,EAAWzlF,GACbsnB,EAAAA,EAAAA,IACE5nB,EAAUO,OACVP,EAAUK,WACVC,EACA5O,EAAW0O,WAEbvO,EACJ,IAAK,IAAIwpC,EAAIsqD,EAAUtqD,GAAKwqD,IAAQxqD,EAAG,CACrC,MAAMxW,EAAYigE,EAASkB,0BACzBxmF,EACA67B,EACAzpC,KAAKwyF,gBAGDj2E,EAAiB22E,EAASl0C,cAAcvV,GAE9C,IAAK,IAAI9jB,EAAIsN,EAAU3H,KAAM3F,GAAKsN,EAAUzH,OAAQ7F,EAClD,IAAK,IAAIC,EAAIqN,EAAU1H,KAAM3F,GAAKqN,EAAUxH,OAAQ7F,EAAG,CACrD,GACElX,IACCwkF,EAASmB,4BAA4B,CAAC5qD,EAAG9jB,EAAGC,GAAIuuE,GAEjD,SAEF,MAAMrrF,EAAO9I,KAAKizF,QAAQxpD,EAAG9jB,EAAGC,EAAG9lB,GACnC,IAAKgJ,EACH,SAGF,IADcuoF,EAAgBC,EAAUxoF,EAAM2gC,GAE5C,SAGF,MAAM6qD,EAAexrF,EAAKT,SAG1B,GAFAmU,EAAY83E,IAAgB,EAExBxrF,EAAKE,aAAeC,EAAAA,EAAUS,OAC3B5J,EAAWge,UAAUxW,YAAYgtF,GAAe,CACnD,MAAMvhE,GAAY2/D,EAAAA,EAAAA,GAAgBjpD,EAAG9jB,EAAGC,EAAG5lB,KAAKyyF,gBAChD3yF,EAAWge,UAAUpX,QAAQ,CAC3BoC,EACAuT,EACA62E,EAASqB,mBAAmBxhE,GAC5BxW,GAEJ,CAEJ,CAEJ,CACF,CAUAi4E,cAAAA,CAAezhE,EAAWu+D,GACxB,MAAMyB,EAAY/yF,KAAK2yF,WACjBlpD,EAAI1W,EAAU,GACdpN,EAAIoN,EAAU,GACdnN,EAAImN,EAAU,GACd0hE,EAAYz0F,KAAK+0C,eACvB,IAAK,IAAI3tC,EAAI,EAAGA,EAAIqtF,EAAUrwF,SAAUgD,EAAG,CACzC,MAAM8mD,EAAWrlC,EACf7oB,KAAKo1C,WAAWvkC,YAChB4jF,EAAUrtF,GACVqiC,EACA9jB,EACAC,GAEF,GAAImtE,EAAUvC,YAAYtiC,GAAW,CACnC,MAAMplD,EAAOiqF,EAAU9B,KAAK/iC,GAC5B,GAAIplD,EAAKE,aAAeC,EAAAA,EAAUC,OAGhC,OAFAJ,EAAKw1D,eAAcnyD,EAAAA,EAAAA,IAAOnM,OAC1BqxF,EAAgBC,EAAUxoF,EAAM2gC,IACzB,CAEX,CACF,CACA,OAAO,CACT,CAYAirD,aAAAA,CAAcxB,EAAUngE,EAAW4hE,EAAMrD,GACvC,MAAMr+D,EAAYigE,EAAS0B,6BACzB7hE,EACA4hE,EACA30F,KAAKwyF,gBAGP,IAAKv/D,EACH,OAAO,EAGT,IAAI4hE,GAAU,EACd,MAAM9B,EAAY/yF,KAAK2yF,WACjB/hF,EAAS5Q,KAAKo1C,WAAW4D,kBACzBm4C,EAAYvgF,EAAOvI,SACzB,IAAK,IAAIsd,EAAIsN,EAAU3H,KAAM3F,GAAKsN,EAAUzH,OAAQ7F,EAClD,IAAK,IAAIC,EAAIqN,EAAU1H,KAAM3F,GAAKqN,EAAUxH,OAAQ7F,EAAG,CACrD,MAAMsoC,EAAWrlC,EAAYjY,EAAQugF,EAAWwD,EAAMhvE,EAAGC,GACzD,IAAIkvE,GAAS,EACb,GAAI/B,EAAUvC,YAAYtiC,GAAW,CACnC,MAAMplD,EAAOiqF,EAAU9B,KAAK/iC,GACxBplD,EAAKE,aAAeC,EAAAA,EAAUC,SAChCmoF,EAAgBC,EAAUxoF,EAAM6rF,GAChCG,GAAS,EAEb,CACKA,IACHD,GAAU,EAEd,CAEF,OAAOA,CACT,CAgBAnjF,WAAAA,CAAY5R,EAAY8D,GACtB5D,KAAKiyF,gBAAiB,EAQtB,MAAM9kF,EAAarN,EAAWqQ,iBAAiBrQ,EAAW8T,YACpDxF,EAAYtO,EAAWsO,UACvBqB,EAAarB,EAAUqB,WACvBslF,EAAiB3mF,EAAUK,WAC3BumF,EAAa5mF,EAAUO,OACvBiH,EAAa9V,EAAW8V,WAExBm8E,EAAY/xF,KAAKo1C,WACjB49C,EAAajB,EAAUlhF,YACvBqiF,EAAWF,EAAWnB,yBAAyBpiF,GAC/Cg6B,EAAIypD,EAASG,kBAAkB0B,EAAgB/B,EAAWkB,YAC1D33E,EAAiB22E,EAASl0C,cAAcvV,GAExC0nD,EAAY6B,EAAW3qF,SACxBrI,KAAKqyF,mBAECryF,KAAKqyF,qBAAuBlB,IACrCnxF,KAAKg1C,gBAAgBh1C,KAAKqyF,oBAC1BryF,KAAKqyF,mBAAqBlB,GAH1BnxF,KAAKqyF,mBAAqBlB,EAM5B,IAAI8D,EAAcn1F,EAAW8N,OAC7B,MAAMulF,EAAiBH,EAAWI,kBAAkBx9E,GAEpD5V,KAAK23C,iBAAiB73C,EAAY8D,GAGlC,MAAM4O,EAAQxS,KAAK0nC,QAAQiP,OAAOnkC,MAC5BC,EAASzS,KAAK0nC,QAAQiP,OAAOlkC,OAE7B6mC,EACJnsC,EAAWS,SAAU8lC,EAAAA,EAAAA,IAAevmC,EAAWS,OAAQ6B,GACrD6pC,IACF27C,GAAcpnF,EAAAA,EAAAA,IACZonF,GACAvhD,EAAAA,EAAAA,IAAevmC,EAAWS,OAAQ6B,KAItC,MAAM8jB,EAAMhX,EAAiB/J,EAAS,EAAI2gF,EACpC3/D,EAAMjX,EAAiB9J,EAAU,EAAI0gF,EACrC+B,EAAe,CACnBF,EAAW,GAAKzhE,EAChByhE,EAAW,GAAKxhE,EAChBwhE,EAAW,GAAKzhE,EAChByhE,EAAW,GAAKxhE,GAMZ89D,EAAW,CAAC,EAElBtxF,KAAKoyF,cAAchuF,OAAS,EAM5B,MAAM4vF,EAAUjC,EAAUoD,aAC1B,GAAIr1F,EAAWkhB,WAAY,CACzB,MAAMo0E,EAAUlC,EAASG,kBACvBjlF,EAAUyS,eACVmyE,EAAWkB,YAEPlzE,EAAa2wE,EAAgB7xF,EAAYA,EAAWkhB,YAC1DhhB,KAAK8zF,aAAah0F,EAAYkhB,EAAYo0E,EAAS9D,EAAU0C,EAC/D,CAEA,MAAMqB,EAAe1D,EAAgB7xF,EAAYm1F,GAcjD,GAbAj1F,KAAK8zF,aAAah0F,EAAYu1F,EAAc5rD,EAAG6nD,EAAU,GACrD0C,EAAU,GACZ5wF,YAAW,KACTpD,KAAK8zF,aACHh0F,EACAu1F,EACA5rD,EAAI,EACJ6nD,EACA0C,EAAU,KAEX,KAGCvqD,KAAK6nD,GACT,OAAOtxF,KAAK4S,UAOd,MAAMiZ,GAAM1f,EAAAA,EAAAA,IAAOnM,MACbue,EAAOze,EAAWye,KAGxB,IAAK,MAAMzV,KAAQwoF,EAAS7nD,GAAI,CAC9B,MAAM6rD,EAAYxsF,EAAKE,WACvB,GAAIssF,IAAcrsF,EAAAA,EAAUG,MAC1B,SAEF,MAAM2pB,EAAYjqB,EAAKiqB,UAEvB,GAAIuiE,IAAcrsF,EAAAA,EAAUC,OAAQ,CAElC,GAAc,IADAJ,EAAKq1D,SAAStyC,EAAKtN,GAChB,CAEfzV,EAAKw1D,cAAczyC,GACnB,QACF,CACF,CACIypE,IAAcrsF,EAAAA,EAAUE,QAC1BnJ,KAAKiyF,gBAAiB,GAIxB,GADqBjyF,KAAKw0F,eAAezhE,EAAWu+D,GAClC,CAEhBG,EAAqBH,EAAUxoF,EAAM2gC,GACrC3pC,EAAW0e,SAAU,EACrB,QACF,CAUA,GAP0Bxe,KAAK00F,cAC7BxB,EACAngE,EACA0W,EAAI,EACJ6nD,GAIA,SAIF,MAAM5jF,EAAUwlF,EAASnsB,aACzB,IAAK,IAAIwuB,EAAU9rD,EAAI,EAAG8rD,GAAW7nF,IAAW6nF,EAAS,CAQvD,GAPwBv1F,KAAK00F,cAC3BxB,EACAngE,EACAwiE,EACAjE,GAIA,KAEJ,CACF,CAMA,MAAMkE,EACFj5E,EAAiBw4E,EAAkBn/E,EAAcu9E,EAE/CzrD,EAAU1nC,KAAKk4C,iBAAiBp4C,IAGtCyO,EAAAA,EAAAA,IACEvO,KAAK61C,cACLrjC,EAAQ,EACRC,EAAS,EACT+iF,EACAA,EACA,GACChjF,EAAQ,GACRC,EAAS,GAGRtF,EAAWS,QACb5N,KAAKg3C,cAActP,EAAS5nC,EAAYw5C,GAGrC05C,EAAWyC,mBACd/tD,EAAQiiD,uBAAwB,GAGlC3pF,KAAK+3C,UAAUrQ,EAAS5nC,GAGxB,MAAMwhF,EAAKv9E,OAAO2uB,KAAK4+D,GAAUzxF,IAAImmB,QAGrC,IAAI0vE,EAFJpU,EAAGnwE,KAAKqwE,EAAAA,IAGR,MAAMmU,EAAQ,GACRC,EAAS,GACf,IAAK,IAAIxuF,EAAIk6E,EAAGl9E,OAAS,EAAGgD,GAAK,IAAKA,EAAG,CACvC,MAAMyuF,EAAWvU,EAAGl6E,GACd0uF,EAAuB9C,EAAW+C,iBACtCF,EACAjgF,EACAnG,GAGIumF,EADoB9C,EAASl0C,cAAc62C,GACRt5E,EACnCgX,EAAKuiE,EAAqB,GAAKE,EAAeR,EAC9ChiE,EAAKsiE,EAAqB,GAAKE,EAAeR,EAC9CS,EAAkB/C,EAASI,0BAC/Br+D,EAAAA,EAAAA,IAAWigE,GACXW,GAEIK,EAAmBhD,EAASiD,mBAAmBF,GAC/CtkB,GAASt2D,EAAAA,EAAAA,IAAerb,KAAK61C,cAAe,CAC/Cs9C,GAAkB+C,EAAiB,GAAKhB,EAAa,IACpD34E,EACD42E,GAAkB+B,EAAa,GAAKgB,EAAiB,IACpD35E,IAEE65E,EACJjD,EAAiBH,EAAWY,uBAAuBnkF,GACrD,IAAK,MAAM3G,KAAQwoF,EAASuE,GAAW,CACrC,GAAI/sF,EAAKE,aAAeC,EAAAA,EAAUC,OAChC,SAEF,MAAM6pB,EAAYjqB,EAAKiqB,UAGjBsjE,EAASJ,EAAgB,GAAKljE,EAAU,GACxCujE,EAAQlxF,KAAKq9B,MAAMkvC,EAAO,IAAM0kB,EAAS,GAAK9iE,GAC9CgjE,EAASN,EAAgB,GAAKljE,EAAU,GACxCyjE,EAAQpxF,KAAKq9B,MAAMkvC,EAAO,IAAM4kB,EAAS,GAAK/iE,GAC9C7N,EAAIvgB,KAAKq9B,MAAMkvC,EAAO,GAAK0kB,EAAS9iE,GACpC3N,EAAIxgB,KAAKq9B,MAAMkvC,EAAO,GAAK4kB,EAAS/iE,GACpC+yC,EAAI+vB,EAAQ3wE,EACZ0jB,EAAImtD,EAAQ5wE,EACZk4C,EAA2B,IAAdwjB,EAAGl9E,OAEtB,IAAIqyF,GAAe,EAGnBf,EAAc,CAAC/vE,EAAGC,EAAGD,EAAI4gD,EAAG3gD,EAAGD,EAAI4gD,EAAG3gD,EAAIyjB,EAAG1jB,EAAGC,EAAIyjB,GACpD,IAAK,IAAIjiC,EAAI,EAAGwE,EAAK+pF,EAAMvxF,OAAQgD,EAAIwE,IAAMxE,EAC3C,IAAK02D,GAAc+3B,EAAWD,EAAOxuF,GAAI,CACvC,MAAMswC,EAAOi+C,EAAMvuF,IAEjB8rB,EAAAA,EAAAA,IACE,CAACvN,EAAGC,EAAGD,EAAI4gD,EAAG3gD,EAAIyjB,GAClB,CAACqO,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9B++C,IACH/uD,EAAQ4P,OACRm/C,GAAe,GAEjB/uD,EAAQ6P,YAER7P,EAAQ8P,OAAOk+C,EAAY,GAAIA,EAAY,IAC3ChuD,EAAQ+P,OAAOi+C,EAAY,GAAIA,EAAY,IAC3ChuD,EAAQ+P,OAAOi+C,EAAY,GAAIA,EAAY,IAC3ChuD,EAAQ+P,OAAOi+C,EAAY,GAAIA,EAAY,IAE3ChuD,EAAQ8P,OAAOE,EAAK,GAAIA,EAAK,IAC7BhQ,EAAQ+P,OAAOC,EAAK,GAAIA,EAAK,IAC7BhQ,EAAQ+P,OAAOC,EAAK,GAAIA,EAAK,IAC7BhQ,EAAQ+P,OAAOC,EAAK,GAAIA,EAAK,IAC7BhQ,EAAQgQ,OAEZ,CAEFi+C,EAAM7wF,KAAK4wF,GACXE,EAAO9wF,KAAK+wF,GAEZ71F,KAAK02F,SAAS5tF,EAAMhJ,EAAY6lB,EAAGC,EAAG2gD,EAAGl9B,EAAG+sD,EAAYt4B,GACpD24B,GACF/uD,EAAQs1C,UAEVh9E,KAAKoyF,cAAcn9C,QAAQnsC,GAG3B9I,KAAK22F,gBAAgB72F,EAAW2gB,UAAWuyE,EAAYlqF,EACzD,CACF,CAeA,GAbA9I,KAAK41C,mBAAqBr5B,EAC1Bvc,KAAKgyF,eACFhyF,KAAKmoF,mBAAoBjmE,EAAAA,EAAAA,IAAOliB,KAAKmoF,gBAAiB+M,GACzDl1F,KAAKmoF,gBAAkB+M,EACvBl1F,KAAKkyF,mBAAqBt8E,EAE1B5V,KAAKg4C,WAAWh4C,KAAK0nC,QAAS5nC,GAE1BqN,EAAWS,QACb85B,EAAQs1C,UAEVt1C,EAAQiiD,uBAAwB,EAE5B3pF,KAAKiyF,eAAgB,CAKvB,MAAM2E,EAAqBA,CAAC/2F,EAAKC,KAC/B,MAAMuc,GAAgBlQ,EAAAA,EAAAA,IAAO6mF,GACvBx2E,EAAc1c,EAAW0c,YAAYH,GACrCw6E,EAAar6E,EAAczY,OAAO2uB,KAAKlW,GAAapY,OAAS,EACnEpE,KAAK82F,gBAAgBD,GACrB72F,KAAK2yF,WAAWpC,eAGlBzwF,EAAWgS,oBAAoBhN,KAAK8xF,EACtC,CAEA,OAAO52F,KAAK4S,SACd,CAMAkkF,eAAAA,CAAgBC,GACd/2F,KAAK2yF,WAAW3C,cAAgB5qF,KAAKqI,IACnCzN,KAAK2yF,WAAW3C,cACJ,EAAZ+G,EAEJ,CAaAL,QAAAA,CAAS5tF,EAAMhJ,EAAY6lB,EAAGC,EAAG2gD,EAAGl9B,EAAG0iD,EAAQjuB,GAC7C,IAAIzoB,EACJ,GAAIvsC,aAAgB0mF,GAElB,GADAn6C,EAAQ85C,EAAYrmF,EAAKosC,YACpBG,EACH,MAAM,IAAI9f,MAAM,kDAGlB8f,EAAQr1C,KAAKg3F,aAC0CluF,GAGzD,IAAKusC,EACH,OAEF,MAAM3N,EAAU1nC,KAAKk4C,iBAAiBp4C,GAChC+rB,GAAM1f,EAAAA,EAAAA,IAAOnM,MACbmN,EAAarN,EAAWqQ,iBAAiBrQ,EAAW8T,YACpDszB,EACJ/5B,EAAWC,SACV0wD,EAAah1D,EAAKq1D,SAAStyC,EAAK/rB,EAAWye,MAAQ,GAChD04E,EAAe/vD,IAAUQ,EAAQi8C,YACnCsT,IACFvvD,EAAQ4P,OACR5P,EAAQi8C,YAAcz8C,GAExBQ,EAAQ0O,UACNf,EACA02C,EACAA,EACA12C,EAAM7iC,MAAQ,EAAIu5E,EAClB12C,EAAM5iC,OAAS,EAAIs5E,EACnBpmE,EACAC,EACA2gD,EACAl9B,GAGE4tD,GACFvvD,EAAQs1C,UAEN91C,IAAU/5B,EAAWC,QACvBtN,EAAW0e,SAAU,EACZs/C,GACTh1D,EAAKw1D,cAAczyC,EAEvB,CAKApI,QAAAA,GACE,MAAMikB,EAAU1nC,KAAK0nC,QACrB,OAAOA,EAAUA,EAAQiP,OAAS,IACpC,CAQAqgD,YAAAA,CAAaluF,GACX,OAAOA,EAAK2a,UACd,CAQAkzE,eAAAA,CAAgBl2E,EAAWuyE,EAAYlqF,GAErC,MAAMuT,GAAgBlQ,EAAAA,EAAAA,IAAO6mF,GACvB32E,KAAiBoE,IACrBA,EAAUpE,GAAiB,CAAC,GAE9BoE,EAAUpE,GAAevT,EAAKT,WAAY,CAC5C,EAGF,U,cC58BA,QACW,UADX,EAE8B,yBCuD9B,MAAM6uF,UAAsB7iF,EAAAA,EAI1B1U,WAAAA,CAAYsK,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAMC,EAAcnG,OAAOoG,OAAO,CAAC,EAAGF,GAEhCu+B,EAAYv+B,EAAQu+B,iBACnBv+B,EAAQu+B,iBAERt+B,EAAY8pF,eACZ9pF,EAAYitF,uBACnBp3F,MAAMmK,GAKNlK,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAMLvK,KAAKuoB,WAAaigB,EAElBxoC,KAAKo3F,gBAA+Bn3F,IAApBgK,EAAQ+pF,QAAwB/pF,EAAQ+pF,QAAU,GAClEh0F,KAAKq3F,+BACgCp3F,IAAnCgK,EAAQktF,wBACJltF,EAAQktF,uBAGhB,CAMAG,YAAAA,GACE,OAAOt3F,KAAKuoB,UACd,CAQA4sE,UAAAA,GACE,OAA8Bn1F,KAAKqM,IAAIkrF,EACzC,CAQAH,UAAAA,CAAWpD,GACTh0F,KAAKwM,IAAI+qF,EAAsBvD,EACjC,CAQAwD,yBAAAA,GACE,OACEx3F,KAAKqM,IAAIkrF,EAEb,CAQAF,yBAAAA,CAA0BF,GACxBn3F,KAAKwM,IAAI+qF,EAAyCJ,EACpD,CAmBAjiD,OAAAA,CAAQ30C,GACN,OAAOR,MAAMm1C,QAAQ30C,EACvB,EAGF,UCjJA,QAlBA,cAAwB22F,EAItBv3F,WAAAA,CAAYsK,GACVlK,MAAMkK,EACR,CAKA4vC,cAAAA,GACE,OAAO,IAAIi4C,EAAwB9xF,KAAM,CACvCwoC,UAAWxoC,KAAKs3F,gBAEpB,E,8ECzBF,MAAM5D,UAAkB91B,EAAAA,EAStBj+D,WAAAA,CAAYozB,EAAWhqB,EAAO2f,EAAKC,EAAa8uE,EAAkBxtF,GAChElK,MAAMgzB,EAAWhqB,EAAOkB,GAMxBjK,KAAKi8D,aAAetzC,EAQpB3oB,KAAKm8D,KAAOzzC,EAEZ1oB,KAAKuH,IAAMmhB,EAMX1oB,KAAKg8D,OAAS,IAAIj4B,MACE,OAAhBpb,IACF3oB,KAAKg8D,OAAOrzC,YAAcA,GAO5B3oB,KAAK03F,UAAY,KAMjB13F,KAAK23F,kBAAoBF,CAC3B,CAOAh0E,QAAAA,GACE,OAAOzjB,KAAKg8D,MACd,CAMAquB,QAAAA,CAAS9oF,GACPvB,KAAKg8D,OAASz6D,EACdvB,KAAK+I,MAAQE,EAAAA,EAAUC,OACvBlJ,KAAK43F,iBACL53F,KAAKmL,SACP,CAOAsxD,iBAAAA,GACEz8D,KAAK+I,MAAQE,EAAAA,EAAUE,MACvBnJ,KAAK43F,iBACL53F,KAAKg8D,OAuGT,WACE,MAAMiB,GAAMt1B,EAAAA,EAAAA,GAAsB,EAAG,GAGrC,OAFAs1B,EAAIn1B,UAAY,gBAChBm1B,EAAI/0B,SAAS,EAAG,EAAG,EAAG,GACf+0B,EAAItmB,MACb,CA5GkBkhD,GACd73F,KAAKmL,SACP,CAOAuxD,gBAAAA,GACE,MAAMrnB,EAAyCr1C,KAAKg8D,OAChD3mB,EAAMyiD,cAAgBziD,EAAM0iD,cAC9B/3F,KAAK+I,MAAQE,EAAAA,EAAUC,OAEvBlJ,KAAK+I,MAAQE,EAAAA,EAAUG,MAEzBpJ,KAAK43F,iBACL53F,KAAKmL,SACP,CAuCAxB,IAAAA,GACM3J,KAAK+I,OAASE,EAAAA,EAAUE,QAC1BnJ,KAAK+I,MAAQE,EAAAA,EAAUS,KACvB1J,KAAKg8D,OAAS,IAAIj4B,MACQ,OAAtB/jC,KAAKi8D,eACPj8D,KAAKg8D,OAAOrzC,YAAc3oB,KAAKi8D,eAG/Bj8D,KAAK+I,OAASE,EAAAA,EAAUS,OAC1B1J,KAAK+I,MAAQE,EAAAA,EAAUigB,QACvBlpB,KAAKmL,UACLnL,KAAK23F,kBAAkB33F,KAAMA,KAAKm8D,MAClCn8D,KAAK03F,WAAYM,EAAAA,EAAAA,IACfh4F,KAAKg8D,OACLh8D,KAAK08D,iBAAiBr6D,KAAKrC,MAC3BA,KAAKy8D,kBAAkBp6D,KAAKrC,OAGlC,CAOA43F,cAAAA,GACM53F,KAAK03F,YACP13F,KAAK03F,YACL13F,KAAK03F,UAAY,KAErB,CAKAlyF,eAAAA,GACExF,KAAK43F,iBACL53F,KAAKg8D,OAAS,KACdj8D,MAAMyF,iBACR,EAcF,S,oHCxHA,MAAMyyF,UAAgBvrE,EAAAA,EAIpB/sB,WAAAA,CAAYsK,GAEVlK,MAAM,CACJ6sB,cAFF3iB,EAAUA,GAAW,CAAC,GAEE2iB,aACtBjd,MAAO1F,EAAQ0F,QAOjB3P,KAAKyO,gBAAaxO,EAMlBD,KAAKm/C,cAAgCl/C,IAArBgK,EAAQk1C,SAAyBl1C,EAAQk1C,SAAW,GAMpEn/C,KAAKuwB,YAActmB,EAAQsmB,aAAe,EAM1CvwB,KAAKk4F,mBAAqB,EAM1Bl4F,KAAKga,SAAW,GAMhBha,KAAKm4F,iBACHluF,EAAQkuF,kBACR,SAAU7oF,GACR,MAAMC,EAAiCD,EAAQmf,cAK/C,OAJA9nB,EAAAA,EAAAA,IACG4I,GAAmC,UAAvBA,EAASuX,UACtB,6EAEKvX,CACT,EAMFvP,KAAKo4F,qBAAuBnuF,EAAQouF,cAMpCr4F,KAAK4Q,OAAS,KAKd5Q,KAAKs4F,cAAgBt4F,KAAKuxB,QAAQlvB,KAAKrC,MAEvCA,KAAKu4F,eAAev4F,KAAKm/C,SAAUn/C,KAAKuwB,aACxCvwB,KAAK+4C,UAAU9uC,EAAQ2G,QAAU,KACnC,CAQAzK,KAAAA,CAAMkpB,GACJrvB,KAAKga,SAAS5V,OAAS,EACvBrE,MAAMoG,MAAMkpB,EACd,CAOAmgB,WAAAA,GACE,OAAOxvC,KAAKm/C,QACd,CAOAtuC,SAAAA,GACE,OAAO7Q,KAAK4Q,MACd,CAQAqgB,YAAAA,CAAarjB,EAAQa,EAAYgB,GAAY,IAAA+oF,EAChC,QAAXA,EAAAx4F,KAAK4Q,cAAM,IAAA4nF,GAAXA,EAAavnE,aAAarjB,EAAQa,EAAYgB,GAC1ChB,IAAezO,KAAKyO,aACtBzO,KAAKyO,WAAaA,EAClBzO,KAAKuxB,UAET,CAOAknE,WAAAA,CAAYt5C,GACVn/C,KAAKu4F,eAAep5C,EAAUn/C,KAAKuwB,YACrC,CAQAmoE,cAAAA,CAAenoE,GACbvwB,KAAKu4F,eAAev4F,KAAKm/C,SAAU5uB,EACrC,CAOAooE,cAAAA,GACE,OAAO34F,KAAKuwB,WACd,CAOAwoB,SAAAA,CAAUnoC,GACJ5Q,KAAK4Q,QACP5Q,KAAK4Q,OAAOnL,oBAAoBlD,EAAAA,EAAUqG,OAAQ5I,KAAKs4F,eAEzDt4F,KAAK4Q,OAASA,EACVA,GACFA,EAAOtO,iBAAiBC,EAAAA,EAAUqG,OAAQ5I,KAAKs4F,eAEjDt4F,KAAKuxB,SACP,CAMAA,OAAAA,GACEvxB,KAAKmG,QACLnG,KAAK44F,UACL54F,KAAK8qB,YAAY9qB,KAAKga,SACxB,CAOAu+E,cAAAA,CAAep5C,EAAU5uB,GACvB,MAAMgwC,EACS,IAAbphB,EAAiB,EAAI/5C,KAAKmI,IAAIgjB,EAAa4uB,GAAYA,EACnDh0C,EACJg0C,IAAan/C,KAAKm/C,UAAYn/C,KAAKk4F,qBAAuB33B,EAC5DvgE,KAAKm/C,SAAWA,EAChBn/C,KAAKuwB,YAAcA,EACnBvwB,KAAKk4F,mBAAqB33B,EACtBp1D,GACFnL,KAAKuxB,SAET,CAKAqnE,OAAAA,GACE,QAAwB34F,IAApBD,KAAKyO,aAA6BzO,KAAK4Q,OACzC,OAEF,MAAMhD,GAASkX,EAAAA,EAAAA,MACT+zE,EAAc74F,KAAKm/C,SAAWn/C,KAAKyO,WACnCuL,EAAWha,KAAK4Q,OAAOkf,cAGvBgpE,EAAY,CAAC,EAEnB,IAAK,IAAI1xF,EAAI,EAAGwE,EAAKoO,EAAS5V,OAAQgD,EAAIwE,EAAIxE,IAAK,CACjD,MAAMkI,EAAU0K,EAAS5S,GACzB,MAAM+E,EAAAA,EAAAA,IAAOmD,KAAYwpF,GAAY,CACnC,MAAMvpF,EAAWvP,KAAKm4F,iBAAiB7oF,GACvC,GAAIC,EAAU,CACZ,MAAMuB,EAAcvB,EAAS+oB,kBAC7BjE,EAAAA,EAAAA,IAA6BvjB,EAAalD,IAC1CylB,EAAAA,EAAAA,GAAOzlB,EAAQirF,EAAajrF,GAE5B,MAAMmrF,EAAY/4F,KAAK4Q,OACpBof,oBAAoBpiB,GACpBwiB,QAAO,SAAU4oE,GAChB,MAAMntE,GAAM1f,EAAAA,EAAAA,IAAO6sF,GACnB,QAAIntE,KAAOitE,KAGXA,EAAUjtE,IAAO,GACV,EACT,IACF7rB,KAAKga,SAASlV,KAAK9E,KAAKq4F,cAAcU,EAAWnrF,GACnD,CACF,CACF,CACF,CAQAyqF,aAAAA,CAAcr+E,EAAUpM,GACtB,MAAM4vC,EAAW,CAAC,EAAG,GACrB,IAAK,IAAIp2C,EAAI4S,EAAS5V,OAAS,EAAGgD,GAAK,IAAKA,EAAG,CAC7C,MAAMmI,EAAWvP,KAAKm4F,iBAAiBn+E,EAAS5S,IAC5CmI,GACF82D,EAAAA,EAAAA,IAAc7oB,EAAUjuC,EAAS+oB,kBAEjCte,EAAS8X,OAAO1qB,EAAG,EAEvB,EACA23C,EAAAA,EAAAA,IAAgBvB,EAAU,EAAIxjC,EAAS5V,QACvC,MAAM60F,GAAe7jE,EAAAA,EAAAA,IAAUxnB,GACzB2yD,EAAQvgE,KAAKk4F,mBACb3oF,EAAW,IAAI+qB,EAAAA,EAAM,CACzBkjB,EAAS,IAAM,EAAI+iB,GAAS04B,EAAa,GAAK14B,EAC9C/iB,EAAS,IAAM,EAAI+iB,GAAS04B,EAAa,GAAK14B,IAEhD,OAAIvgE,KAAKo4F,qBACAp4F,KAAKo4F,qBAAqB7oF,EAAUyK,GAEtC,IAAIwsC,EAAAA,EAAQ,CACjBj3C,WACAyK,YAEJ,EAGF,S,wFCtRA,MAAMhQ,UAAkByK,EAAAA,EAItB9U,WAAAA,CAAYsK,GACVlK,QAKAC,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAMLvK,KAAKk5F,YAAcjvF,EAAQqsC,WAK3B,MAAM2Q,EAAaljD,OAAOoG,OAAO,CAAC,EAAGF,GACH,kBAAvBA,EAAQg9C,oBACVA,EAAWA,WAClBljD,OAAOoG,OAAO88C,EAAYh9C,EAAQg9C,aAGpCA,EAAWrO,EAAAA,EAAcoiB,cACH/6D,IAApBgK,EAAQmD,QAAwBnD,EAAQmD,QAAU,GACpDzG,EAAAA,EAAAA,GAC+C,kBAAtCsgD,EAAWrO,EAAAA,EAAcoiB,SAChC,kCAGF/T,EAAWrO,EAAAA,EAAcqiB,cACHh7D,IAApBgK,EAAQoD,SAAwBpD,EAAQoD,QAC1C45C,EAAWrO,EAAAA,EAAcsiB,SAAWjxD,EAAQiD,OAC5C+5C,EAAWrO,EAAAA,EAAcuiB,qBACGl7D,IAA1BgK,EAAQqD,cAA8BrD,EAAQqD,cAAgB3H,IAChEshD,EAAWrO,EAAAA,EAAcwiB,qBACGn7D,IAA1BgK,EAAQuD,cAA8BvD,EAAQuD,cAAgB,EAChEy5C,EAAWrO,EAAAA,EAAc0iB,eACHr7D,IAApBgK,EAAQyD,QAAwBzD,EAAQyD,SAAW/H,IACrDshD,EAAWrO,EAAAA,EAAcyiB,eACHp7D,IAApBgK,EAAQ0D,QAAwB1D,EAAQ0D,QAAUhI,IAMpD3F,KAAKm5F,gBACsBl5F,IAAzBgnD,EAAWv0C,UAA0Bu0C,EAAWv0C,UAAY,kBACvDu0C,EAAWv0C,UAElB1S,KAAKuY,cAAc0uC,GAMnBjnD,KAAKo5F,OAAS,IAChB,CAMA/iD,aAAAA,GACE,OAAOr2C,KAAKk5F,WACd,CAKAxiD,YAAAA,GACE,OAAO12C,KAAKm5F,UACd,CASAnsF,aAAAA,CAAcqC,GAEZ,MAAMtG,EACJ/I,KAAKo5F,QAAM,CAETvvF,MAAO7J,KACPqP,aAAqBpP,IAAZoP,GAA+BA,GAEtCnC,EAASlN,KAAKqmF,YAWpB,OAVAt9E,EAAMqE,SAAUg6B,EAAAA,EAAAA,IAAMhiC,KAAKq9B,MAA0B,IAApBziC,KAAKkjB,cAAsB,IAAK,EAAG,GACpEna,EAAMsE,QAAUrN,KAAKy1C,aACrB1sC,EAAM6E,OAAS5N,KAAK+P,YACpBhH,EAAMmE,YAAoBjN,IAAXiN,GAAyBnE,EAAMsG,QAAqBnC,EAAXvH,IACxDoD,EAAMuE,cAAgBtN,KAAK0mE,mBAC3B39D,EAAMyE,cAAgBpI,KAAKqI,IAAIzN,KAAK2mE,mBAAoB,GACxD59D,EAAM2E,QAAU1N,KAAK+mE,aACrBh+D,EAAM4E,QAAU3N,KAAK4mE,aACrB5mE,KAAKo5F,OAASrwF,EAEPA,CACT,CAQA0D,cAAAA,CAAeC,GACb,OAAOwB,EAAAA,EAAAA,KACT,CAQAvB,mBAAAA,CAAoBE,GAClB,OAAOqB,EAAAA,EAAAA,KACT,CASA6B,SAAAA,GACE,OACE/P,KAAKqM,IAAIusC,EAAAA,EAAc9O,OAE3B,CASA48B,gBAAAA,GACE,OAA8B1mE,KAAKqM,IAAIusC,EAAAA,EAAcuiB,eACvD,CASAwL,gBAAAA,GACE,OAA8B3mE,KAAKqM,IAAIusC,EAAAA,EAAcwiB,eACvD,CASA2L,UAAAA,GACE,OAA8B/mE,KAAKqM,IAAIusC,EAAAA,EAAc0iB,SACvD,CASAsL,UAAAA,GACE,OAA8B5mE,KAAKqM,IAAIusC,EAAAA,EAAcyiB,SACvD,CAQAn4C,UAAAA,GACE,OAA8BljB,KAAKqM,IAAIusC,EAAAA,EAAcoiB,QACvD,CAMAltD,cAAAA,GACE,OAAOI,EAAAA,EAAAA,KACT,CASAunC,UAAAA,GACE,OAA+Bz1C,KAAKqM,IAAIusC,EAAAA,EAAcqiB,QACxD,CASAorB,SAAAA,GACE,OAAwCrmF,KAAKqM,IAAIusC,EAAAA,EAAcsiB,QACjE,CAMAm+B,aAAAA,CAAc/iD,GACZt2C,KAAKk5F,YAAc5iD,EACnBt2C,KAAKmL,SACP,CASAmuF,SAAAA,CAAU1rF,GACR5N,KAAKwM,IAAIosC,EAAAA,EAAc9O,OAAQl8B,EACjC,CAQA2rF,gBAAAA,CAAiBjsF,GACftN,KAAKwM,IAAIosC,EAAAA,EAAcuiB,eAAgB7tD,EACzC,CAQAksF,gBAAAA,CAAiBhsF,GACfxN,KAAKwM,IAAIosC,EAAAA,EAAcwiB,eAAgB5tD,EACzC,CAUAs5D,UAAAA,CAAWn5D,GACT3N,KAAKwM,IAAIosC,EAAAA,EAAcyiB,SAAU1tD,EACnC,CAUAq5D,UAAAA,CAAWt5D,GACT1N,KAAKwM,IAAIosC,EAAAA,EAAc0iB,SAAU5tD,EACnC,CAQAsW,UAAAA,CAAW5W,IACTzG,EAAAA,EAAAA,GAA0B,kBAAZyG,EAAsB,kCACpCpN,KAAKwM,IAAIosC,EAAAA,EAAcoiB,QAAS5tD,EAClC,CAQAqsF,UAAAA,CAAWpsF,GACTrN,KAAKwM,IAAIosC,EAAAA,EAAcqiB,QAAS5tD,EAClC,CASA6/E,SAAAA,CAAUwM,GACR15F,KAAKwM,IAAIosC,EAAAA,EAAcsiB,QAASw+B,EAClC,CAMAl0F,eAAAA,GACMxF,KAAKo5F,SACPp5F,KAAKo5F,OAAOvvF,MAAQ,KACpB7J,KAAKo5F,OAAS,MAEhBr5F,MAAMyF,iBACR,EAGF,S,iBCxYO,SAAS83D,EAAaq8B,EAAUC,EAAQC,GAC7C,IAAIn8B,EAAKo8B,EACTD,EAAaA,GAAcrY,EAC3B,IAAIuY,EAAM,EACNC,EAAOL,EAASv1F,OAChB61F,GAAQ,EAEZ,KAAOF,EAAMC,GAGXt8B,EAAMq8B,GAAQC,EAAOD,GAAQ,GAC7BD,GAAOD,EAAWF,EAASj8B,GAAMk8B,GAE7BE,EAAM,EAERC,EAAMr8B,EAAM,GAGZs8B,EAAOt8B,EACPu8B,GAASH,GAKb,OAAOG,EAAQF,GAAOA,CACxB,CASO,SAASvY,EAAUpwE,EAAGC,GAC3B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,CAClC,CASO,SAASswE,EAAWvwE,EAAGC,GAC5B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,CAClC,CAyBO,SAASoxD,EAAkBroB,EAAKx2C,EAAQmhD,GAC7C,GAAI3K,EAAI,IAAMx2C,EACZ,OAAO,EAGT,MAAMoE,EAAIoyC,EAAIh2C,OACd,GAAIR,GAAUw2C,EAAIpyC,EAAI,GACpB,OAAOA,EAAI,EAGb,GAAyB,oBAAd+8C,EAA0B,CACnC,IAAK,IAAI39C,EAAI,EAAGA,EAAIY,IAAKZ,EAAG,CAC1B,MAAM8yF,EAAY9/C,EAAIhzC,GACtB,GAAI8yF,IAAct2F,EAChB,OAAOwD,EAET,GAAI8yF,EAAYt2F,EACd,OAAImhD,EAAUnhD,EAAQw2C,EAAIhzC,EAAI,GAAI8yF,GAAa,EACtC9yF,EAAI,EAENA,CAEX,CACA,OAAOY,EAAI,CACb,CAEA,GAAI+8C,EAAY,EAAG,CACjB,IAAK,IAAI39C,EAAI,EAAGA,EAAIY,IAAKZ,EACvB,GAAIgzC,EAAIhzC,GAAKxD,EACX,OAAOwD,EAAI,EAGf,OAAOY,EAAI,CACb,CAEA,GAAI+8C,EAAY,EAAG,CACjB,IAAK,IAAI39C,EAAI,EAAGA,EAAIY,IAAKZ,EACvB,GAAIgzC,EAAIhzC,IAAMxD,EACZ,OAAOwD,EAGX,OAAOY,EAAI,CACb,CAEA,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,IAAKZ,EAAG,CAC1B,GAAIgzC,EAAIhzC,IAAMxD,EACZ,OAAOwD,EAET,GAAIgzC,EAAIhzC,GAAKxD,EACX,OAAIw2C,EAAIhzC,EAAI,GAAKxD,EAASA,EAASw2C,EAAIhzC,GAC9BA,EAAI,EAENA,CAEX,CACA,OAAOY,EAAI,CACb,CAOO,SAASmnE,EAAgB/0B,EAAKgB,EAAO3mB,GAC1C,KAAO2mB,EAAQ3mB,GAAK,CAClB,MAAM0M,EAAMiZ,EAAIgB,GAChBhB,EAAIgB,GAAShB,EAAI3lB,GACjB2lB,EAAI3lB,GAAO0M,IACTia,IACA3mB,CACJ,CACF,CAOO,SAASjZ,EAAO4+B,EAAKhuB,GAC1B,MAAM+tE,EAAYvvF,MAAMC,QAAQuhB,GAAQA,EAAO,CAACA,GAC1ChoB,EAAS+1F,EAAU/1F,OACzB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAQgD,IAC1BgzC,EAAIA,EAAIh2C,QAAU+1F,EAAU/yF,EAEhC,CAsBO,SAAS8a,EAAOk4E,EAAMC,GAC3B,MAAMC,EAAOF,EAAKh2F,OAClB,GAAIk2F,IAASD,EAAKj2F,OAChB,OAAO,EAET,IAAK,IAAIgD,EAAI,EAAGA,EAAIkzF,EAAMlzF,IACxB,GAAIgzF,EAAKhzF,KAAOizF,EAAKjzF,GACnB,OAAO,EAGX,OAAO,CACT,CA8BO,SAASmzF,EAASngD,EAAKogD,EAAMC,GAClC,MAAMC,EAAUF,GAAQhZ,EACxB,OAAOpnC,EAAIugD,OAAM,SAAUC,EAAY5zF,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,MAAM6zF,EAAMH,EAAQtgD,EAAIpzC,EAAQ,GAAI4zF,GACpC,QAASC,EAAM,GAAMJ,GAAkB,IAARI,EACjC,GACF,C,iGCrOe,SAASC,EAAY1gD,EAAK2U,GAA+D,IAA5Dj0C,EAAI+qB,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAG,EAAG/L,EAAK+L,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAGuU,EAAIh2C,OAAS,EAAGs2F,EAAO70D,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAGk1D,EAEpF,KAAOjhE,EAAQhf,GAAM,CACjB,GAAIgf,EAAQhf,EAAO,IAAK,CACpB,MAAM9S,EAAI8xB,EAAQhf,EAAO,EACnB7J,EAAI89C,EAAIj0C,EAAO,EACf2uB,EAAIrkC,KAAKuX,IAAI3U,GACb0+B,EAAI,GAAMthC,KAAK2lC,IAAI,EAAItB,EAAI,GAC3BuxD,EAAK,GAAM51F,KAAKwX,KAAK6sB,EAAI/C,GAAK1+B,EAAI0+B,GAAK1+B,IAAMiJ,EAAIjJ,EAAI,EAAI,GAAK,EAAI,GAGxE8yF,EAAY1gD,EAAK2U,EAFD3pD,KAAKqI,IAAIqN,EAAM1V,KAAKmyB,MAAMw3B,EAAI99C,EAAIy1B,EAAI1+B,EAAIgzF,IACzC51F,KAAKmI,IAAIusB,EAAO10B,KAAKmyB,MAAMw3B,GAAK/mD,EAAIiJ,GAAKy1B,EAAI1+B,EAAIgzF,IAC3BN,EAC3C,CAEA,MAAM//B,EAAIvgB,EAAI2U,GACd,IAAI3nD,EAAI0T,EAEJvK,EAAIupB,EAKR,IAHAmhE,EAAK7gD,EAAKt/B,EAAMi0C,GACZ2rC,EAAQtgD,EAAItgB,GAAQ6gC,GAAK,GAAGsgC,EAAK7gD,EAAKt/B,EAAMgf,GAEzC1yB,EAAImJ,GAAG,CAIV,IAHA0qF,EAAK7gD,EAAKhzC,EAAGmJ,GACbnJ,IACAmJ,IACOmqF,EAAQtgD,EAAIhzC,GAAIuzD,GAAK,GAAGvzD,IAC/B,KAAOszF,EAAQtgD,EAAI7pC,GAAIoqD,GAAK,GAAGpqD,GACnC,CAE8B,IAA1BmqF,EAAQtgD,EAAIt/B,GAAO6/C,GAAUsgC,EAAK7gD,EAAKt/B,EAAMvK,IAE7CA,IACA0qF,EAAK7gD,EAAK7pC,EAAGupB,IAGbvpB,GAAKw+C,IAAGj0C,EAAOvK,EAAI,GACnBw+C,GAAKx+C,IAAGupB,EAAQvpB,EAAI,EAC5B,CACJ,CAQA,SAAS0qF,EAAK7gD,EAAKhzC,EAAGmJ,GAClB,MAAM4wB,EAAMiZ,EAAIhzC,GAChBgzC,EAAIhzC,GAAKgzC,EAAI7pC,GACb6pC,EAAI7pC,GAAK4wB,CACb,CAQA,SAAS45D,EAAe3pF,EAAGC,GACvB,OAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,CACpC,C,iBCvEe,MAAMqc,EACjB/tB,WAAAA,GAA4B,IAAhBqrB,EAAU6a,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAG,EAErB7lC,KAAKk7F,YAAc91F,KAAKqI,IAAI,EAAGud,GAC/BhrB,KAAKm7F,YAAc/1F,KAAKqI,IAAI,EAAGrI,KAAKgpD,KAAwB,GAAnBpuD,KAAKk7F,cAC9Cl7F,KAAKmG,OACT,CAEA4kB,GAAAA,GACI,OAAO/qB,KAAKo7F,KAAKp7F,KAAKosB,KAAM,GAChC,CAEAH,MAAAA,CAAOH,GACH,IAAI8iE,EAAO5uF,KAAKosB,KAChB,MAAMhd,EAAS,GAEf,IAAK8jB,EAAWpH,EAAM8iE,GAAO,OAAOx/E,EAEpC,MAAMisF,EAASr7F,KAAKq7F,OACdC,EAAgB,GAEtB,KAAO1M,GAAM,CACT,IAAK,IAAIxnF,EAAI,EAAGA,EAAIwnF,EAAKE,SAAS1qF,OAAQgD,IAAK,CAC3C,MAAMm0F,EAAQ3M,EAAKE,SAAS1nF,GACtBo0F,EAAY5M,EAAK6M,KAAOJ,EAAOE,GAASA,EAE1CroE,EAAWpH,EAAM0vE,KACb5M,EAAK6M,KAAMrsF,EAAOtK,KAAKy2F,GAClB/9E,EAASsO,EAAM0vE,GAAYx7F,KAAKo7F,KAAKG,EAAOnsF,GAChDksF,EAAcx2F,KAAKy2F,GAEhC,CACA3M,EAAO0M,EAAc/0F,KACzB,CAEA,OAAO6I,CACX,CAEA0vE,QAAAA,CAAShzD,GACL,IAAI8iE,EAAO5uF,KAAKosB,KAEhB,IAAK8G,EAAWpH,EAAM8iE,GAAO,OAAO,EAEpC,MAAM0M,EAAgB,GACtB,KAAO1M,GAAM,CACT,IAAK,IAAIxnF,EAAI,EAAGA,EAAIwnF,EAAKE,SAAS1qF,OAAQgD,IAAK,CAC3C,MAAMm0F,EAAQ3M,EAAKE,SAAS1nF,GACtBo0F,EAAY5M,EAAK6M,KAAOz7F,KAAKq7F,OAAOE,GAASA,EAEnD,GAAIroE,EAAWpH,EAAM0vE,GAAY,CAC7B,GAAI5M,EAAK6M,MAAQj+E,EAASsO,EAAM0vE,GAAY,OAAO,EACnDF,EAAcx2F,KAAKy2F,EACvB,CACJ,CACA3M,EAAO0M,EAAc/0F,KACzB,CAEA,OAAO,CACX,CAEAoD,IAAAA,CAAKyiB,GACD,IAAMA,IAAQA,EAAKhoB,OAAS,OAAOpE,KAEnC,GAAIosB,EAAKhoB,OAASpE,KAAKm7F,YAAa,CAChC,IAAK,IAAI/zF,EAAI,EAAGA,EAAIglB,EAAKhoB,OAAQgD,IAC7BpH,KAAKorB,OAAOgB,EAAKhlB,IAErB,OAAOpH,IACX,CAGA,IAAI4uF,EAAO5uF,KAAK07F,OAAOtvE,EAAKrhB,QAAS,EAAGqhB,EAAKhoB,OAAS,EAAG,GAEzD,GAAKpE,KAAKosB,KAAK0iE,SAAS1qF,OAIjB,GAAIpE,KAAKosB,KAAK3Z,SAAWm8E,EAAKn8E,OAEjCzS,KAAK27F,WAAW37F,KAAKosB,KAAMwiE,OAExB,CACH,GAAI5uF,KAAKosB,KAAK3Z,OAASm8E,EAAKn8E,OAAQ,CAEhC,MAAMmpF,EAAU57F,KAAKosB,KACrBpsB,KAAKosB,KAAOwiE,EACZA,EAAOgN,CACX,CAGA57F,KAAK67F,QAAQjN,EAAM5uF,KAAKosB,KAAK3Z,OAASm8E,EAAKn8E,OAAS,GAAG,EAC3D,MAhBIzS,KAAKosB,KAAOwiE,EAkBhB,OAAO5uF,IACX,CAEAorB,MAAAA,CAAOC,GAEH,OADIA,GAAMrrB,KAAK67F,QAAQxwE,EAAMrrB,KAAKosB,KAAK3Z,OAAS,GACzCzS,IACX,CAEAmG,KAAAA,GAEI,OADAnG,KAAKosB,KAAO0vE,EAAW,IAChB97F,IACX,CAEAmT,MAAAA,CAAOkY,EAAM0wE,GACT,IAAK1wE,EAAM,OAAOrrB,KAElB,IAAI4uF,EAAO5uF,KAAKosB,KAChB,MAAMN,EAAO9rB,KAAKq7F,OAAOhwE,GACnB2wE,EAAO,GACPjb,EAAU,GAChB,IAAI35E,EAAGqnF,EAAQwN,EAGf,KAAOrN,GAAQoN,EAAK53F,QAAQ,CASxB,GAPKwqF,IACDA,EAAOoN,EAAKz1F,MACZkoF,EAASuN,EAAKA,EAAK53F,OAAS,GAC5BgD,EAAI25E,EAAQx6E,MACZ01F,GAAU,GAGVrN,EAAK6M,KAAM,CACX,MAAMz0F,EAAQk1F,EAAS7wE,EAAMujE,EAAKE,SAAUiN,GAE5C,IAAe,IAAX/0F,EAKA,OAHA4nF,EAAKE,SAASh9D,OAAO9qB,EAAO,GAC5Bg1F,EAAKl3F,KAAK8pF,GACV5uF,KAAKm8F,UAAUH,GACRh8F,IAEf,CAEKi8F,GAAYrN,EAAK6M,OAAQj+E,EAASoxE,EAAM9iE,GAOlC2iE,GACPrnF,IACAwnF,EAAOH,EAAOK,SAAS1nF,GACvB60F,GAAU,GAEPrN,EAAO,MAXVoN,EAAKl3F,KAAK8pF,GACV7N,EAAQj8E,KAAKsC,GACbA,EAAI,EACJqnF,EAASG,EACTA,EAAOA,EAAKE,SAAS,GAQ7B,CAEA,OAAO9uF,IACX,CAEAq7F,MAAAA,CAAOhwE,GAAQ,OAAOA,CAAM,CAE5B+wE,WAAAA,CAAYhrF,EAAGC,GAAK,OAAOD,EAAEka,KAAOja,EAAEia,IAAM,CAC5C+wE,WAAAA,CAAYjrF,EAAGC,GAAK,OAAOD,EAAEma,KAAOla,EAAEka,IAAM,CAE5Cc,MAAAA,GAAW,OAAOrsB,KAAKosB,IAAM,CAE7BkwE,QAAAA,CAASlwE,GAEL,OADApsB,KAAKosB,KAAOA,EACLpsB,IACX,CAEAo7F,IAAAA,CAAKxM,EAAMx/E,GACP,MAAMksF,EAAgB,GACtB,KAAO1M,GACCA,EAAK6M,KAAMrsF,EAAOtK,QAAQ8pF,EAAKE,UAC9BwM,EAAcx2F,QAAQ8pF,EAAKE,UAEhCF,EAAO0M,EAAc/0F,MAEzB,OAAO6I,CACX,CAEAssF,MAAAA,CAAO/vE,EAAO7Q,EAAMgf,EAAOrnB,GAEvB,MAAM8pF,EAAIziE,EAAQhf,EAAO,EACzB,IACI8zE,EADA4N,EAAIx8F,KAAKk7F,YAGb,GAAIqB,GAAKC,EAIL,OAFA5N,EAAOkN,EAAWnwE,EAAM5gB,MAAM+P,EAAMgf,EAAQ,IAC5C2iE,EAAS7N,EAAM5uF,KAAKq7F,QACbzM,EAGNn8E,IAEDA,EAASrN,KAAKgpD,KAAKhpD,KAAKuX,IAAI4/E,GAAKn3F,KAAKuX,IAAI6/E,IAG1CA,EAAIp3F,KAAKgpD,KAAKmuC,EAAIn3F,KAAKyjC,IAAI2zD,EAAG/pF,EAAS,KAG3Cm8E,EAAOkN,EAAW,IAClBlN,EAAK6M,MAAO,EACZ7M,EAAKn8E,OAASA,EAId,MAAMiqF,EAAKt3F,KAAKgpD,KAAKmuC,EAAIC,GACnBG,EAAKD,EAAKt3F,KAAKgpD,KAAKhpD,KAAKwX,KAAK4/E,IAEpCI,EAAYjxE,EAAO7Q,EAAMgf,EAAO6iE,EAAI38F,KAAKo8F,aAEzC,IAAK,IAAIh1F,EAAI0T,EAAM1T,GAAK0yB,EAAO1yB,GAAKu1F,EAAI,CAEpC,MAAME,EAASz3F,KAAKmI,IAAInG,EAAIu1F,EAAK,EAAG7iE,GAEpC8iE,EAAYjxE,EAAOvkB,EAAGy1F,EAAQH,EAAI18F,KAAKq8F,aAEvC,IAAK,IAAI9rF,EAAInJ,EAAGmJ,GAAKssF,EAAQtsF,GAAKmsF,EAAI,CAElC,MAAMI,EAAS13F,KAAKmI,IAAIgD,EAAImsF,EAAK,EAAGG,GAGpCjO,EAAKE,SAAShqF,KAAK9E,KAAK07F,OAAO/vE,EAAOpb,EAAGusF,EAAQrqF,EAAS,GAC9D,CACJ,CAIA,OAFAgqF,EAAS7N,EAAM5uF,KAAKq7F,QAEbzM,CACX,CAEAmO,cAAAA,CAAejxE,EAAM8iE,EAAMoO,EAAOhB,GAC9B,KACIA,EAAKl3F,KAAK8pF,IAENA,EAAK6M,MAAQO,EAAK53F,OAAS,IAAM44F,GAH5B,CAKT,IAEIC,EAFAl8C,EAAUp7C,IACVu3F,EAAiBv3F,IAGrB,IAAK,IAAIyB,EAAI,EAAGA,EAAIwnF,EAAKE,SAAS1qF,OAAQgD,IAAK,CAC3C,MAAMm0F,EAAQ3M,EAAKE,SAAS1nF,GACtB+tB,EAAOgoE,EAAS5B,GAChB6B,GAgNAhsF,EAhN2B0a,EAgNxBza,EAhN8BkqF,GAiN3Cn2F,KAAKqI,IAAI4D,EAAEma,KAAMpa,EAAEoa,MAAQpmB,KAAKmI,IAAI8D,EAAEia,KAAMla,EAAEka,QAC9ClmB,KAAKqI,IAAI4D,EAAEoa,KAAMra,EAAEqa,MAAQrmB,KAAKmI,IAAI8D,EAAEka,KAAMna,EAAEma,OAlNM4J,GAG5CioE,EAAcF,GACdA,EAAiBE,EACjBr8C,EAAU5rB,EAAO4rB,EAAU5rB,EAAO4rB,EAClCk8C,EAAa1B,GAEN6B,IAAgBF,GAEnB/nE,EAAO4rB,IACPA,EAAU5rB,EACV8nE,EAAa1B,EAGzB,CAEA3M,EAAOqO,GAAcrO,EAAKE,SAAS,EACvC,CA8LR,IAAsB19E,EAAGC,EA5LjB,OAAOu9E,CACX,CAEAiN,OAAAA,CAAQxwE,EAAM2xE,EAAOK,GACjB,MAAMvxE,EAAOuxE,EAAShyE,EAAOrrB,KAAKq7F,OAAOhwE,GACnCiyE,EAAa,GAGb1O,EAAO5uF,KAAK+8F,eAAejxE,EAAM9rB,KAAKosB,KAAM4wE,EAAOM,GAOzD,IAJA1O,EAAKE,SAAShqF,KAAKumB,GACnB7P,EAAOozE,EAAM9iE,GAGNkxE,GAAS,GACRM,EAAWN,GAAOlO,SAAS1qF,OAASpE,KAAKk7F,aACzCl7F,KAAKu9F,OAAOD,EAAYN,GACxBA,IAKRh9F,KAAKw9F,oBAAoB1xE,EAAMwxE,EAAYN,EAC/C,CAGAO,MAAAA,CAAOD,EAAYN,GACf,MAAMpO,EAAO0O,EAAWN,GAClBR,EAAI5N,EAAKE,SAAS1qF,OAClB6M,EAAIjR,KAAKm7F,YAEfn7F,KAAKy9F,iBAAiB7O,EAAM39E,EAAGurF,GAE/B,MAAMkB,EAAa19F,KAAK29F,kBAAkB/O,EAAM39E,EAAGurF,GAE7CjO,EAAUuN,EAAWlN,EAAKE,SAASh9D,OAAO4rE,EAAY9O,EAAKE,SAAS1qF,OAASs5F,IACnFnP,EAAQ97E,OAASm8E,EAAKn8E,OACtB87E,EAAQkN,KAAO7M,EAAK6M,KAEpBgB,EAAS7N,EAAM5uF,KAAKq7F,QACpBoB,EAASlO,EAASvuF,KAAKq7F,QAEnB2B,EAAOM,EAAWN,EAAQ,GAAGlO,SAAShqF,KAAKypF,GAC1CvuF,KAAK27F,WAAW/M,EAAML,EAC/B,CAEAoN,UAAAA,CAAW/M,EAAML,GAEbvuF,KAAKosB,KAAO0vE,EAAW,CAAClN,EAAML,IAC9BvuF,KAAKosB,KAAK3Z,OAASm8E,EAAKn8E,OAAS,EACjCzS,KAAKosB,KAAKqvE,MAAO,EACjBgB,EAASz8F,KAAKosB,KAAMpsB,KAAKq7F,OAC7B,CAEAsC,iBAAAA,CAAkB/O,EAAM39E,EAAGurF,GACvB,IAAIx1F,EACA42F,EAAaj4F,IACbo7C,EAAUp7C,IAEd,IAAK,IAAIyB,EAAI6J,EAAG7J,GAAKo1F,EAAIvrF,EAAG7J,IAAK,CAC7B,MAAMy2F,EAAQC,EAASlP,EAAM,EAAGxnF,EAAGpH,KAAKq7F,QAClC0C,EAAQD,EAASlP,EAAMxnF,EAAGo1F,EAAGx8F,KAAKq7F,QAElC2C,EAAUC,EAAiBJ,EAAOE,GAClC5oE,EAAOgoE,EAASU,GAASV,EAASY,GAGpCC,EAAUJ,GACVA,EAAaI,EACbh3F,EAAQI,EAER25C,EAAU5rB,EAAO4rB,EAAU5rB,EAAO4rB,GAE3Bi9C,IAAYJ,GAEfzoE,EAAO4rB,IACPA,EAAU5rB,EACVnuB,EAAQI,EAGpB,CAEA,OAAOJ,GAASw1F,EAAIvrF,CACxB,CAGAwsF,gBAAAA,CAAiB7O,EAAM39E,EAAGurF,GACtB,MAAMJ,EAAcxN,EAAK6M,KAAOz7F,KAAKo8F,YAAc8B,EAC7C7B,EAAczN,EAAK6M,KAAOz7F,KAAKq8F,YAAc8B,EACnCn+F,KAAKo+F,eAAexP,EAAM39E,EAAGurF,EAAGJ,GAChCp8F,KAAKo+F,eAAexP,EAAM39E,EAAGurF,EAAGH,IAIzBzN,EAAKE,SAAS39E,KAAKirF,EAC9C,CAGAgC,cAAAA,CAAexP,EAAM39E,EAAGurF,EAAG9B,GACvB9L,EAAKE,SAAS39E,KAAKupF,GAEnB,MAAMW,EAASr7F,KAAKq7F,OACdgD,EAAWP,EAASlP,EAAM,EAAG39E,EAAGoqF,GAChCiD,EAAYR,EAASlP,EAAM4N,EAAIvrF,EAAGurF,EAAGnB,GAC3C,IAAIkD,EAASC,EAAWH,GAAYG,EAAWF,GAE/C,IAAK,IAAIl3F,EAAI6J,EAAG7J,EAAIo1F,EAAIvrF,EAAG7J,IAAK,CAC5B,MAAMm0F,EAAQ3M,EAAKE,SAAS1nF,GAC5BoU,EAAO6iF,EAAUzP,EAAK6M,KAAOJ,EAAOE,GAASA,GAC7CgD,GAAUC,EAAWH,EACzB,CAEA,IAAK,IAAIj3F,EAAIo1F,EAAIvrF,EAAI,EAAG7J,GAAK6J,EAAG7J,IAAK,CACjC,MAAMm0F,EAAQ3M,EAAKE,SAAS1nF,GAC5BoU,EAAO8iF,EAAW1P,EAAK6M,KAAOJ,EAAOE,GAASA,GAC9CgD,GAAUC,EAAWF,EACzB,CAEA,OAAOC,CACX,CAEAf,mBAAAA,CAAoB1xE,EAAMkwE,EAAMgB,GAE5B,IAAK,IAAI51F,EAAI41F,EAAO51F,GAAK,EAAGA,IACxBoU,EAAOwgF,EAAK50F,GAAI0kB,EAExB,CAEAqwE,SAAAA,CAAUH,GAEN,IAAK,IAAyByC,EAArBr3F,EAAI40F,EAAK53F,OAAS,EAAagD,GAAK,EAAGA,IACZ,IAA5B40F,EAAK50F,GAAG0nF,SAAS1qF,OACbgD,EAAI,GACJq3F,EAAWzC,EAAK50F,EAAI,GAAG0nF,SACvB2P,EAAS3sE,OAAO2sE,EAAS1sE,QAAQiqE,EAAK50F,IAAK,IAExCpH,KAAKmG,QAETs2F,EAAST,EAAK50F,GAAIpH,KAAKq7F,OAEtC,EAGJ,SAASa,EAAS7wE,EAAMM,EAAOowE,GAC3B,IAAKA,EAAU,OAAOpwE,EAAMoG,QAAQ1G,GAEpC,IAAK,IAAIjkB,EAAI,EAAGA,EAAIukB,EAAMvnB,OAAQgD,IAC9B,GAAI20F,EAAS1wE,EAAMM,EAAMvkB,IAAK,OAAOA,EAEzC,OAAQ,CACZ,CAGA,SAASq1F,EAAS7N,EAAMyM,GACpByC,EAASlP,EAAM,EAAGA,EAAKE,SAAS1qF,OAAQi3F,EAAQzM,EACpD,CAGA,SAASkP,EAASlP,EAAM7/B,EAAGmmB,EAAGmmB,EAAQqD,GAC7BA,IAAUA,EAAW5C,EAAW,OACrC4C,EAASpzE,KAAO3lB,IAChB+4F,EAASnzE,KAAO5lB,IAChB+4F,EAASlzE,MAAQ7lB,IACjB+4F,EAASjzE,MAAQ9lB,IAEjB,IAAK,IAAIyB,EAAI2nD,EAAG3nD,EAAI8tE,EAAG9tE,IAAK,CACxB,MAAMm0F,EAAQ3M,EAAKE,SAAS1nF,GAC5BoU,EAAOkjF,EAAU9P,EAAK6M,KAAOJ,EAAOE,GAASA,EACjD,CAEA,OAAOmD,CACX,CAEA,SAASljF,EAAOpK,EAAGC,GAKf,OAJAD,EAAEka,KAAOlmB,KAAKmI,IAAI6D,EAAEka,KAAMja,EAAEia,MAC5Bla,EAAEma,KAAOnmB,KAAKmI,IAAI6D,EAAEma,KAAMla,EAAEka,MAC5Bna,EAAEoa,KAAOpmB,KAAKqI,IAAI2D,EAAEoa,KAAMna,EAAEma,MAC5Bpa,EAAEqa,KAAOrmB,KAAKqI,IAAI2D,EAAEqa,KAAMpa,EAAEoa,MACrBra,CACX,CAEA,SAAS8sF,EAAgB9sF,EAAGC,GAAK,OAAOD,EAAEka,KAAOja,EAAEia,IAAM,CACzD,SAAS6yE,EAAgB/sF,EAAGC,GAAK,OAAOD,EAAEma,KAAOla,EAAEka,IAAM,CAEzD,SAAS4xE,EAAS/rF,GAAO,OAAQA,EAAEoa,KAAOpa,EAAEka,OAASla,EAAEqa,KAAOra,EAAEma,KAAO,CACvE,SAASizE,EAAWptF,GAAK,OAAQA,EAAEoa,KAAOpa,EAAEka,MAASla,EAAEqa,KAAOra,EAAEma,KAAO,CAOvE,SAAS0yE,EAAiB7sF,EAAGC,GACzB,MAAMia,EAAOlmB,KAAKqI,IAAI2D,EAAEka,KAAMja,EAAEia,MAC1BC,EAAOnmB,KAAKqI,IAAI2D,EAAEma,KAAMla,EAAEka,MAC1BC,EAAOpmB,KAAKmI,IAAI6D,EAAEoa,KAAMna,EAAEma,MAC1BC,EAAOrmB,KAAKmI,IAAI6D,EAAEqa,KAAMpa,EAAEoa,MAEhC,OAAOrmB,KAAKqI,IAAI,EAAG+d,EAAOF,GACnBlmB,KAAKqI,IAAI,EAAGge,EAAOF,EAC9B,CAEA,SAAS/N,EAASpM,EAAGC,GACjB,OAAOD,EAAEka,MAAQja,EAAEia,MACZla,EAAEma,MAAQla,EAAEka,MACZla,EAAEma,MAAQpa,EAAEoa,MACZna,EAAEoa,MAAQra,EAAEqa,IACvB,CAEA,SAASyH,EAAW9hB,EAAGC,GACnB,OAAOA,EAAEia,MAAQla,EAAEoa,MACZna,EAAEka,MAAQna,EAAEqa,MACZpa,EAAEma,MAAQpa,EAAEka,MACZja,EAAEoa,MAAQra,EAAEma,IACvB,CAEA,SAASuwE,EAAWhN,GAChB,MAAO,CACHA,WACAr8E,OAAQ,EACRgpF,MAAM,EACNnwE,KAAM3lB,IACN4lB,KAAM5lB,IACN6lB,MAAO7lB,IACP8lB,MAAO9lB,IAEf,CAKA,SAASi3F,EAAYxiD,EAAKt/B,EAAMgf,EAAO9xB,EAAG0yF,GACtC,MAAMz4D,EAAQ,CAACnnB,EAAMgf,GAErB,KAAOmI,EAAM79B,QAAQ,CAIjB,IAHA01B,EAAQmI,EAAM17B,QACduU,EAAOmnB,EAAM17B,QAEOyB,EAAG,SAEvB,MAAM01D,EAAM5iD,EAAO1V,KAAKgpD,MAAMt0B,EAAQhf,GAAQ9S,EAAI,GAAKA,EACvD8yF,EAAY1gD,EAAKsjB,EAAK5iD,EAAMgf,EAAO4gE,GAEnCz4D,EAAMn9B,KAAKgW,EAAM4iD,EAAKA,EAAK5jC,EAC/B,CACJ,C,iBCheO,SAASzZ,EAAQ7R,GACtB,OAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,CAClC,CASO,SAASkU,EAAMlU,EAAM+xD,EAAO3zD,GAMjC,YALa3M,IAAT2M,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAM4B,EAAK,GAAK+xD,EAAQ,GAAO,EACpC3zD,EAAK,GAAM4B,EAAK,GAAK+xD,EAAQ,GAAO,EAC7B3zD,CACT,CAWO,SAASgW,EAAOpU,EAAM5B,GAC3B,OAAIhC,MAAMC,QAAQ2D,GACTA,QAEIvO,IAAT2M,EACFA,EAAO,CAAC4B,EAAMA,IAEd5B,EAAK,GAAK4B,EACV5B,EAAK,GAAK4B,GAEL5B,EACT,C,6EC/DO,MAAM+xF,EAAmB,GAMnB97B,EAAoB,G,gDCYjC,MAAM0qB,UAAoBrgC,EAAAA,EAIxBvtD,WAAAA,CAAYsK,GAGVlK,MAAM,CACJstD,OAAQ1nD,IACRq7B,MAJF/2B,EAAUA,GAAoB,CAACylC,OAAQ,IAIvB1O,KACd0O,OAAQzlC,EAAQylC,OAChBia,OAAQ1/C,EAAQ0/C,OAChBjnC,WAAyBziB,IAAlBgK,EAAQyY,MAAsBzY,EAAQyY,MAAQ,EACrDhU,cAA+BzO,IAArBgK,EAAQyE,SAAyBzE,EAAQyE,SAAW,EAC9D6T,oBAC6BtiB,IAA3BgK,EAAQsY,gBAA+BtY,EAAQsY,eACjDO,kBAC2B7iB,IAAzBgK,EAAQ6Y,aAA6B7Y,EAAQ6Y,aAAe,CAAC,EAAG,GAClEE,cAAe/Y,EAAQ+Y,eAE3B,CAQA1B,KAAAA,GACE,MAAMoB,EAAQ1iB,KAAKijB,WACb3Q,EAAQ,IAAIi7E,EAAY,CAC5BvsD,KAAMhhC,KAAK+qD,UAAY/qD,KAAK+qD,UAAUzpC,aAAUrhB,EAChD0pD,OAAQ3pD,KAAKgrD,YAAchrD,KAAKgrD,YAAY1pC,aAAUrhB,EACtDyvC,OAAQ1vC,KAAK4tD,YACblrC,MAAO9X,MAAMC,QAAQ6X,GAASA,EAAM3X,QAAU2X,EAC9ChU,SAAU1O,KAAKmjB,cACfZ,eAAgBviB,KAAKojB,oBACrBN,aAAc9iB,KAAKqjB,kBAAkBtY,QACrCiY,cAAehjB,KAAKsjB,qBAGtB,OADAhR,EAAM0R,WAAWhkB,KAAKkjB,cACf5Q,CACT,CAQAssF,SAAAA,CAAUlvD,GACR1vC,KAAK0vC,OAASA,EACd1vC,KAAK+T,QACP,EAGF,S,kCC3EA,SAMEwN,WAAY,aAOZJ,UAAW,YAOXE,QAAS,UAOTzC,UAAW,YAOXD,QAAS,U,0DCSX,MAAMgO,UAAelY,EAAAA,EAInB9U,WAAAA,CAAYsK,GAAS,IAAA40F,EACnB9+F,QAMAC,KAAKyP,YAAa2L,EAAAA,EAAAA,IAAcnR,EAAQwF,YAMxCzP,KAAK87B,cAAgBgjE,EAAkB70F,EAAQ2iB,cAM/C5sB,KAAK++F,yBAA0D,QAAlCF,EAAG50F,EAAQ+0F,+BAAuB,IAAAH,GAAAA,EAO/D7+F,KAAK4b,SAAU,EAMf5b,KAAKo5F,YAA2Bn5F,IAAlBgK,EAAQlB,MAAsBkB,EAAQlB,MAAQ,QAM5D/I,KAAKi/F,YAA2Bh/F,IAAlBgK,EAAQ0F,OAAsB1F,EAAQ0F,MAMpD3P,KAAKk/F,eAAiBj1F,EAAQ4iB,YAM9B7sB,KAAKm/F,aAAe,KAMpBn/F,KAAKo/F,aAAe,KAEpB,MAAMv7D,EAAO7jC,KAKbA,KAAKq/F,aAAe,IAAI96E,SAAQ,SAAUC,EAASyhB,GACjDpC,EAAKs7D,aAAe36E,EACpBqf,EAAKu7D,aAAen5D,CACtB,GACF,CAOA7I,eAAAA,GACE,OAAOp9B,KAAK87B,aACd,CAMAwB,0BAAAA,GACE,OAAOt9B,KAAK++F,wBACd,CAOA3jF,aAAAA,GACE,OAAOpb,KAAKyP,UACd,CAMA03D,cAAAA,CAAe13D,GACb,OAAO,IACT,CAKA0L,OAAAA,GACE,OAAOnb,KAAKq/F,YACd,CAOAr2F,QAAAA,GACE,OAAOhJ,KAAKo5F,MACd,CAKAroF,QAAAA,GACE,OAAO/Q,KAAKi/F,MACd,CAKAxJ,cAAAA,GACE,OAAOz1F,KAAKk/F,YACd,CAMA3tE,OAAAA,GACEvxB,KAAKmL,SACP,CASAm0F,eAAAA,CAAgB1yE,GACd5sB,KAAK87B,cAAgBgjE,EAAkBlyE,GACvC5sB,KAAKmL,SACP,CAMA8yD,QAAAA,CAASl1D,GACP/I,KAAKo5F,OAASrwF,EACd/I,KAAKmL,SACP,EAQF,SAAS2zF,EAAkBS,GACzB,OAAKA,EAG0B,oBAApBA,EACFA,GAEJ30F,MAAMC,QAAQ00F,KACjBA,EAAkB,CAACA,IAEbz/F,GAAey/F,GARd,IASX,CAEA,S,iBCjOO,SAASnhC,EAAOzD,GACrB,OAAOv1D,KAAKyjC,IAAI8xB,EAAG,EACrB,CAQO,SAAS57B,EAAQ47B,GACtB,OAAO,EAAIyD,EAAO,EAAIzD,EACxB,CAQO,SAASoK,EAASpK,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,CACjC,CAQO,SAASvY,EAAOuY,GACrB,OAAOA,CACT,C,6DC/BO,SAASthC,EAAW9E,EAAiBC,EAAQC,EAAKlN,GACvD,IAAIi4E,EAAY,EAChB,MAAMhqE,EAAKjB,EAAgBE,EAAMlN,GAC3BkO,EAAKlB,EAAgBE,EAAMlN,EAAS,GAC1C,IAAIob,EAAM,EACNC,EAAM,EACV,KAAOpO,EAASC,EAAKD,GAAUjN,EAAQ,CACrC,MAAMsb,EAAMtO,EAAgBC,GAAUgB,EAChCsN,EAAMvO,EAAgBC,EAAS,GAAKiB,EAC1C+pE,GAAa58D,EAAMC,EAAMF,EAAMG,EAC/BH,EAAME,EACND,EAAME,CACR,CACA,OAAO08D,EAAY,CACrB,CASO,SAAS9kE,EAAYnG,EAAiBC,EAAQsE,EAAMvR,GACzD,IAAI4N,EAAO,EACX,IAAK,IAAI/tB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACjB+tB,GAAQkE,EAAW9E,EAAiBC,EAAQC,EAAKlN,GACjDiN,EAASC,CACX,CACA,OAAOU,CACT,CASO,SAASsqE,EAAalrE,EAAiBC,EAAQgN,EAAOja,GAC3D,IAAI4N,EAAO,EACX,IAAK,IAAI/tB,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnB+tB,GAAQuF,EAAYnG,EAAiBC,EAAQsE,EAAMvR,GACnDiN,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAO+wB,CACT,C,qEClCA,MAAMm4D,EAIJ3tF,WAAAA,CAAYsK,GACVA,EAAUA,GAAW,CAAC,EAMtBjK,KAAK2gC,YAA2B1gC,IAAlBgK,EAAQ2e,MAAsB3e,EAAQ2e,MAAQ,KAM5D5oB,KAAK0/F,SAAWz1F,EAAQslD,QAMxBvvD,KAAK2/F,eAAiC1/F,IAArBgK,EAAQylD,SAAyBzlD,EAAQylD,SAAW,KAMrE1vD,KAAK4/F,gBAAkB31F,EAAQ0lD,eAM/B3vD,KAAK6/F,UAAY51F,EAAQukD,SAMzBxuD,KAAK8/F,YAAc71F,EAAQykD,WAM3B1uD,KAAKsxE,OAASrnE,EAAQuI,KACxB,CAOA8O,KAAAA,GACE,MAAMsH,EAAQ5oB,KAAK6gC,WACnB,OAAO,IAAIysD,EAAO,CAChB1kE,MAAOhe,MAAMC,QAAQ+d,GAASA,EAAM7d,QAAU6d,QAAS3oB,EACvDsvD,QAASvvD,KAAKwwD,aACdd,SAAU1vD,KAAKqwD,cAAgBrwD,KAAKqwD,cAActlD,aAAU9K,EAC5D0vD,eAAgB3vD,KAAKswD,oBACrB9B,SAAUxuD,KAAKuwD,cACf7B,WAAY1uD,KAAKywD,gBACjBj+C,MAAOxS,KAAKiQ,YAEhB,CAOA4wB,QAAAA,GACE,OAAO7gC,KAAK2gC,MACd,CAOA6vB,UAAAA,GACE,OAAOxwD,KAAK0/F,QACd,CAOArvC,WAAAA,GACE,OAAOrwD,KAAK2/F,SACd,CAOArvC,iBAAAA,GACE,OAAOtwD,KAAK4/F,eACd,CAOArvC,WAAAA,GACE,OAAOvwD,KAAK6/F,SACd,CAOApvC,aAAAA,GACE,OAAOzwD,KAAK8/F,WACd,CAOA7vF,QAAAA,GACE,OAAOjQ,KAAKsxE,MACd,CAQA1wC,QAAAA,CAAShY,GACP5oB,KAAK2gC,OAAS/X,CAChB,CAQAm3E,UAAAA,CAAWxwC,GACTvvD,KAAK0/F,SAAWnwC,CAClB,CAQAwB,WAAAA,CAAYrB,GACV1vD,KAAK2/F,UAAYjwC,CACnB,CAQAswC,iBAAAA,CAAkBrwC,GAChB3vD,KAAK4/F,gBAAkBjwC,CACzB,CAQAswC,WAAAA,CAAYzxC,GACVxuD,KAAK6/F,UAAYrxC,CACnB,CAQA0xC,aAAAA,CAAcxxC,GACZ1uD,KAAK8/F,YAAcpxC,CACrB,CAQAyxC,QAAAA,CAAS3tF,GACPxS,KAAKsxE,OAAS9+D,CAChB,EAGF,S,yGCzK2B4f,EAAAA,EAmKpB,SAAS4lE,EAAY3iD,EAAO+qD,EAAaC,GAC9C,MAAMnhC,EAAuC7pB,EAC7C,IAAIirD,GAAY,EACZC,GAAW,EACXzL,GAAS,EAEb,MAAMhpF,EAAe,EACnB6mB,EAAAA,EAAAA,IAAWusC,EAAK38D,EAAAA,EAAUq5D,MAAM,WAC9Bk5B,GAAS,EACJyL,GACHH,GAEJ,KAyBF,OAtBIlhC,EAAIx2C,KAAOob,EAAAA,IACby8D,GAAW,EACXrhC,EACGl7B,SACAxrB,MAAK,WACA8nF,GACFF,GAEJ,IACCpjC,OAAM,SAAU8yB,GACXwQ,IACExL,EACFsL,IAEAC,IAGN,KAEFv0F,EAAahH,MAAK6tB,EAAAA,EAAAA,IAAWusC,EAAK38D,EAAAA,EAAU4G,MAAOk3F,IAG9C,WACLC,GAAY,EACZx0F,EAAazH,QAAQC,EAAAA,GACvB,CACF,CAoCO,SAASy4D,EAAe1nB,EAAO3sB,GAIpC,OAHIA,IACF2sB,EAAM3sB,IAAMA,GAEP2sB,EAAM3sB,KAAOob,EAAAA,GAChB,IAAIvf,SAAQ,CAACC,EAASyhB,IACpBoP,EACGrR,SACAxrB,MAAK,IAAMgM,EAAQ6wB,KACnB2nB,OAAOnO,GACNxZ,EAAM8pB,UAAY9pB,EAAM7iC,MAAQgS,EAAQ6wB,GAASpP,EAAO4oB,OArC7D,SAAcxZ,EAAO3sB,GAC1B,OAAO,IAAInE,SAAQ,CAACC,EAASyhB,KAC3B,SAASu6D,IACPC,IACAj8E,EAAQ6wB,EACV,CACA,SAASqrD,IACPD,IACAx6D,EAAO,IAAI1Q,MAAM,oBACnB,CACA,SAASkrE,IACPprD,EAAM5vC,oBAAoB,OAAQ+6F,GAClCnrD,EAAM5vC,oBAAoB,QAASi7F,EACrC,CACArrD,EAAM/yC,iBAAiB,OAAQk+F,GAC/BnrD,EAAM/yC,iBAAiB,QAASo+F,GAC5Bh4E,IACF2sB,EAAM3sB,IAAMA,KAGlB,CAoBM/e,CAAK0rC,EACX,C,qHCvSA,IAAIsrD,EAKG,MAAMjrD,EAAa,GAY1B,SAASkrD,EAAiB3jC,EAAK4jC,EAAIC,EAAIC,EAAIC,GACzC/jC,EAAI1lB,YACJ0lB,EAAIzlB,OAAO,EAAG,GACdylB,EAAIxlB,OAAOopD,EAAIC,GACf7jC,EAAIxlB,OAAOspD,EAAIC,GACf/jC,EAAI5L,YACJ4L,EAAI3lB,OACJ2lB,EAAIvlB,OACJulB,EAAI/0B,SAAS,EAAG,EAAG9iC,KAAKqI,IAAIozF,EAAIE,GAAM,EAAG37F,KAAKqI,IAAIqzF,EAAIE,IACtD/jC,EAAI+f,SACN,CAUA,SAASikB,EAA8B70E,EAAMoI,GAE3C,OACEpvB,KAAKC,IAAI+mB,EAAc,EAAToI,GAAc,KAAO,GACnCpvB,KAAKC,IAAI+mB,EAAc,EAAToI,EAAa,GAAK,QAAc,CAElD,CA2CO,SAAS0sE,EACd/5E,EACAg6E,EACAl8B,EACAE,GAEA,MAAMH,GAAe1/C,EAAAA,EAAAA,IAAU2/C,EAAck8B,EAAYh6E,GAGzD,IAAI+9C,GAAmB36B,EAAAA,EAAAA,IACrB42D,EACAh8B,EACAF,GAGF,MAAMm8B,EAAsBD,EAAWnwD,wBACX/wC,IAAxBmhG,IACFl8B,GAAoBk8B,GAEtB,MAAMxtD,EAAsBzsB,EAAW6pB,wBACX/wC,IAAxB2zC,IACFsxB,GAAoBtxB,GAOtB,MAAMI,EAAe7sB,EAAWpX,YAChC,IAAKikC,IAAgBvgB,EAAAA,EAAAA,IAAmBugB,EAAcgxB,GAAe,CACnE,MAAMq8B,GACJ92D,EAAAA,EAAAA,IAAmBpjB,EAAY+9C,EAAkBF,GACjDE,EACEztC,SAAS4pE,IAAuBA,EAAqB,IACvDn8B,GAAoBm8B,EAExB,CAEA,OAAOn8B,CACT,CAqEO,SAASnxD,EACdvB,EACAC,EACAmD,EACAsvD,EACAlxB,EACAmxB,EACAm8B,EACAC,EACAC,EACAzV,EACA0V,EACA50E,EACA60E,EACAC,GAEA,MAAMj6D,GAAUC,EAAAA,EAAAA,GACdviC,KAAKq9B,MAAM7sB,EAAapD,GACxBpN,KAAKq9B,MAAM7sB,EAAanD,GACxBijC,GAOF,GAJK7oB,IACH6a,EAAQiiD,uBAAwB,GAGX,IAAnB6X,EAAQp9F,OACV,OAAOsjC,EAAQiP,OAKjB,SAASirD,EAAWj9F,GAClB,OAAOS,KAAKq9B,MAAM99B,EAAQiR,GAAcA,CAC1C,CAJA8xB,EAAQhlB,MAAM9M,EAAYA,GAM1B8xB,EAAQw1B,yBAA2B,UAEnC,MAAM2kC,GAAmB/8E,EAAAA,EAAAA,MAKzB,IAAIg9E,EAJJN,EAAQn9F,SAAQ,SAAUqkB,EAAKthB,EAAGgzC,IAChC5+B,EAAAA,EAAAA,IAAOqmF,EAAkBn5E,EAAI9a,OAC/B,IAGA,MAAMm0F,EAAcnsF,EAAasvD,EAE3B88B,GAAgBn1E,EAAc,EAAI,EAAIznB,KAAKyjC,IAAI,GAAI,KAAOk5D,EAEhE,IAAKL,GAAiC,IAAnBF,EAAQp9F,QAA2B,IAAX2nF,EAAc,CAUvD,GATA+V,GAAgBn6D,EAAAA,EAAAA,GACdviC,KAAKq9B,OAAMxyB,EAAAA,EAAAA,IAAS4xF,GAAoBE,GACxC38F,KAAKq9B,OAAM9a,EAAAA,EAAAA,IAAUk6E,GAAoBE,GACzCrsD,GAGG7oB,IACHi1E,EAAcnY,uBAAwB,GAEpC31C,GAAgB2tD,EAAY,CAC9B,MAAMM,GAAQjuD,EAAa,GAAK6tD,EAAiB,IAAME,EACjDG,IAASluD,EAAa,GAAK6tD,EAAiB,IAAME,EAClDvvF,GAAQvC,EAAAA,EAAAA,IAAS+jC,GAAgB+tD,EACjCtvF,GAASkV,EAAAA,EAAAA,IAAUqsB,GAAgB+tD,EACzCD,EAAcK,KAAKF,EAAMC,EAAM1vF,EAAOC,GACtCqvF,EAAcpqD,MAChB,CAEA8pD,EAAQn9F,SAAQ,SAAUqkB,EAAKthB,EAAGgzC,GAEhC,GAAI1xB,EAAI2sB,MAAM7iC,MAAQ,GAAKkW,EAAI2sB,MAAM5iC,OAAS,EAAG,CAC/C,GAAIiW,EAAIi5E,WAAY,CAClBG,EAAcxqD,OACd,MAAM2qD,GAAQv5E,EAAIi5E,WAAW,GAAKE,EAAiB,IAAME,EACnDG,IAASx5E,EAAIi5E,WAAW,GAAKE,EAAiB,IAAME,EACpDvvF,GAAQvC,EAAAA,EAAAA,IAASyY,EAAIi5E,YAAcI,EACnCtvF,GAASkV,EAAAA,EAAAA,IAAUe,EAAIi5E,YAAcI,EAC3CD,EAAcK,KACZt1E,EAAco1E,EAAO78F,KAAKq9B,MAAMw/D,GAChCp1E,EAAcq1E,EAAO98F,KAAKq9B,MAAMy/D,GAChCr1E,EAAcra,EAAQpN,KAAKq9B,MAAMw/D,EAAOzvF,GAASpN,KAAKq9B,MAAMw/D,GAC5Dp1E,EAAcpa,EAASrN,KAAKq9B,MAAMy/D,EAAOzvF,GAAUrN,KAAKq9B,MAAMy/D,IAEhEJ,EAAcpqD,MAChB,CAEA,MAAMuqD,GAAQv5E,EAAI9a,OAAO,GAAKi0F,EAAiB,IAAME,EAC/CG,IAASx5E,EAAI9a,OAAO,GAAKi0F,EAAiB,IAAME,EAChDK,GAAWnyF,EAAAA,EAAAA,IAASyY,EAAI9a,QAAUm0F,EAClCM,GAAY16E,EAAAA,EAAAA,IAAUe,EAAI9a,QAAUm0F,EAC1CD,EAAc1rD,UACZ1tB,EAAI2sB,MACJ02C,EACAA,EACArjE,EAAI2sB,MAAM7iC,MAAQ,EAAIu5E,EACtBrjE,EAAI2sB,MAAM5iC,OAAS,EAAIs5E,EACvBl/D,EAAco1E,EAAO78F,KAAKq9B,MAAMw/D,GAChCp1E,EAAcq1E,EAAO98F,KAAKq9B,MAAMy/D,GAChCr1E,EACIu1E,EACAh9F,KAAKq9B,MAAMw/D,EAAOG,GAAYh9F,KAAKq9B,MAAMw/D,GAC7Cp1E,EACIw1E,EACAj9F,KAAKq9B,MAAMy/D,EAAOG,GAAaj9F,KAAKq9B,MAAMy/D,IAG5Cx5E,EAAIi5E,YACNG,EAAc9kB,SAElB,CACF,GACF,CACA,MAAMslB,GAAgBrtE,EAAAA,EAAAA,IAAWqsE,GAqKjC,OAnKAC,EAAcgB,eAAel+F,SAAQ,SAAUm+F,EAAUp7F,EAAGgzC,GAqB1D,MAAMxpC,EAAS4xF,EAAS5xF,OAClBhN,EAAS4+F,EAAS5+F,OACxB,IAAI4xB,EAAK5kB,EAAO,GAAG,GACjB6kB,EAAK7kB,EAAO,GAAG,GACb8kB,EAAK9kB,EAAO,GAAG,GACjB+kB,EAAK/kB,EAAO,GAAG,GACbglB,EAAKhlB,EAAO,GAAG,GACjBilB,EAAKjlB,EAAO,GAAG,GAEjB,MAAM6xF,EAAKb,GAAYh+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,GACpDu9B,EAAKd,IACPh+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,GAEjC07B,EAAKe,GAAYh+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,GACpD27B,EAAKc,IACPh+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,GAEjC47B,EAAKa,GAAYh+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,GACpD67B,EAAKY,IACPh+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,GAMjCw9B,EAAwBntE,EACxBotE,EAAwBntE,EAC9BD,EAAK,EACLC,EAAK,EACLC,GAAMitE,EACNhtE,GAAMitE,EACNhtE,GAAM+sE,EACN9sE,GAAM+sE,EAEN,MAAMC,EAAkB,CACtB,CAACntE,EAAIC,EAAI,EAAG,EAAGkrE,EAAK4B,GACpB,CAAC7sE,EAAIC,EAAI,EAAG,EAAGkrE,EAAK0B,GACpB,CAAC,EAAG,EAAG/sE,EAAIC,EAAImrE,EAAK4B,GACpB,CAAC,EAAG,EAAG9sE,EAAIC,EAAImrE,EAAK0B,IAEhBI,GAAcC,EAAAA,EAAAA,IAAkBF,GACtC,IAAKC,EACH,OAMF,GAHAp7D,EAAQ4P,OACR5P,EAAQ6P,YA/TZ,WACE,QAAiCt3C,IAA7B0gG,EAAwC,CAC1C,MAAM1jC,GAAMt1B,EAAAA,EAAAA,GAAsB,EAAG,EAAG+N,GACxCunB,EAAIC,yBAA2B,UAC/BD,EAAIn1B,UAAY,wBAChB84D,EAAiB3jC,EAAK,EAAG,EAAG,EAAG,GAC/B2jC,EAAiB3jC,EAAK,EAAG,EAAG,EAAG,GAC/B,MAAM7wC,EAAO6wC,EAAI70B,aAAa,EAAG,EAAG,EAAG,GAAGhc,KAC1Cu0E,EACEM,EAA8B70E,EAAM,IACpC60E,EAA8B70E,EAAM,IACpC60E,EAA8B70E,EAAM,IACtCm9D,EAAAA,EAAAA,IAActsB,GACdvnB,EAAW5wC,KAAKm4D,EAAItmB,OACtB,CAEA,OAAOgqD,CACT,CAgTQqC,KAAgCn2E,EAAa,CAE/C6a,EAAQ8P,OAAOqpD,EAAIC,GAEnB,MAAMmC,EAAQ,EACRC,EAAKT,EAAK5B,EACVsC,EAAKT,EAAK5B,EAChB,IAAK,IAAIx5D,EAAO,EAAGA,EAAO27D,EAAO37D,IAE/BI,EAAQ+P,OACNopD,EAAKe,GAAat6D,EAAO,GAAK47D,EAAMD,GACpCnC,EAAKc,EAAYt6D,EAAO67D,GAAOF,EAAQ,KAGrC37D,GAAQ27D,EAAQ,GAClBv7D,EAAQ+P,OACNopD,EAAKe,GAAat6D,EAAO,GAAK47D,EAAMD,GACpCnC,EAAKc,GAAat6D,EAAO,GAAK67D,GAAOF,EAAQ,KAKnDv7D,EAAQ+P,OAAOspD,EAAIC,EACrB,MACEt5D,EAAQ8P,OAAOqpD,EAAIC,GACnBp5D,EAAQ+P,OAAOgrD,EAAIC,GACnBh7D,EAAQ+P,OAAOspD,EAAIC,GAmBrB,IAAI3rD,EACJ,GAjBA3N,EAAQgQ,OAERhQ,EAAQpiB,UACNw9E,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZL,EACAC,GAGFh7D,EAAQzgB,UACN46E,EAAiB,GAAKc,EACtBd,EAAiB,GAAKe,GAIpBd,EACFzsD,EAAQysD,EAAcnrD,OACtBjP,EAAQhlB,MAAMs/E,GAAeA,OACxB,CACL,MAAMpxF,EAAS4wF,EAAQ,GACjB5zF,EAASgD,EAAOhD,OACtBynC,EAAQzkC,EAAOykC,MACf3N,EAAQhlB,OACNzS,EAAAA,EAAAA,IAASrC,GAAUynC,EAAM7iC,QACxBmV,EAAAA,EAAAA,IAAU/Z,GAAUynC,EAAM5iC,OAE/B,CAEAi1B,EAAQ0O,UAAUf,EAAO,EAAG,GAC5B3N,EAAQs1C,SACV,IAEI8kB,KACFvY,EAAAA,EAAAA,IAAcuY,GACdpsD,EAAW5wC,KAAKg9F,EAAcnrD,SAG5B8qD,IACF/5D,EAAQ4P,OAER5P,EAAQw1B,yBAA2B,cACnCx1B,EAAQ4nB,YAAc,QACtB5nB,EAAQopB,UAAY,EAEpBywC,EAAcgB,eAAel+F,SAAQ,SAAUm+F,EAAUp7F,EAAGgzC,GAC1D,MAAMx2C,EAAS4+F,EAAS5+F,OAClB6+F,GAAM7+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,EACzCu9B,IAAO9+F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,EAC1C07B,GAAMj9F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,EACzC27B,IAAOl9F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,EAC1C47B,GAAMn9F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,EACzC67B,IAAOp9F,EAAO,GAAG,GAAK0+F,EAAc,IAAMn9B,EAEhDz9B,EAAQ6P,YACR7P,EAAQ8P,OAAOqpD,EAAIC,GACnBp5D,EAAQ+P,OAAOgrD,EAAIC,GACnBh7D,EAAQ+P,OAAOspD,EAAIC,GACnBt5D,EAAQ2pB,YACR3pB,EAAQiiB,QACV,IAEAjiB,EAAQs1C,WAEHt1C,EAAQiP,MACjB,C,cC2BA,QA7cA,MAUEh3C,WAAAA,CACEwnB,EACAg6E,EACAG,EACA8B,EACAC,EACAC,EACAC,GAMAvjG,KAAKwjG,YAAcr8E,EAMnBnnB,KAAKyjG,YAActC,EAGnB,IAAIuC,EAAoB,CAAC,EACzB,MAAMC,EAAeJ,GACjB9xD,EAAAA,EAAAA,KAAwC9G,IACtCi5D,EAAAA,EAAAA,IACEL,GACAj+E,EAAAA,EAAAA,IAAUqlB,EAAO3qC,KAAKyjG,YAAazjG,KAAKwjG,iBAG5Cz7E,EAAAA,EAAAA,IAAa/nB,KAAKyjG,YAAazjG,KAAKwjG,aAOxCxjG,KAAK6jG,cAAgB,SAAUr6D,GAC7B,MAAMjiC,EAAMiiC,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHKk6D,EAAkBn8F,KACrBm8F,EAAkBn8F,GAAOo8F,EAAan6D,IAEjCk6D,EAAkBn8F,EAC3B,EAMAvH,KAAK8jG,iBAAmBV,EAMxBpjG,KAAK+jG,uBAAyBV,EAAiBA,EAM/CrjG,KAAKgkG,WAAa,GAOlBhkG,KAAKikG,iBAAkB,EAMvBjkG,KAAKkkG,kBACHlkG,KAAKwjG,YAAY3zF,cACfuzF,KACApjG,KAAKwjG,YAAYzzF,cACnBE,EAAAA,EAAAA,IAASmzF,KAAoBnzF,EAAAA,EAAAA,IAASjQ,KAAKwjG,YAAYzzF,aAMzD/P,KAAKmkG,kBAAoBnkG,KAAKwjG,YAAYzzF,aACtCE,EAAAA,EAAAA,IAASjQ,KAAKwjG,YAAYzzF,aAC1B,KAMJ/P,KAAKokG,kBAAoBpkG,KAAKyjG,YAAY1zF,aACtCE,EAAAA,EAAAA,IAASjQ,KAAKyjG,YAAY1zF,aAC1B,KAEJ,MAAMs0F,GAAqBpvE,EAAAA,EAAAA,IAAWqsE,GAChCgD,GAAsBtvE,EAAAA,EAAAA,IAAYssE,GAClCiD,GAAyBxvE,EAAAA,EAAAA,IAAeusE,GACxCkD,GAAwB1vE,EAAAA,EAAAA,GAAcwsE,GACtCmD,EAAgBzkG,KAAK6jG,cAAcQ,GACnCK,EAAiB1kG,KAAK6jG,cAAcS,GACpCK,EAAoB3kG,KAAK6jG,cAAcU,GACvCK,EAAmB5kG,KAAK6jG,cAAcW,GAYtCK,EA9Ic,IAgJjBvB,EACGl+F,KAAKqI,IACH,EACArI,KAAKgpD,KACHhpD,KAAK0/F,MACH5vE,EAAAA,EAAAA,IAAQosE,IACLgC,EAAwBA,EAAwB,IAAM,QAI/D,GAcN,GAZAtjG,KAAK+kG,SACHV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGE7kG,KAAKikG,gBAAiB,CACxB,IAAIe,EAAYr/F,IAChB3F,KAAKgkG,WAAW3/F,SAAQ,SAAUm+F,EAAUp7F,EAAGgzC,GAC7C4qD,EAAY5/F,KAAKmI,IACfy3F,EACAxC,EAAS5xF,OAAO,GAAG,GACnB4xF,EAAS5xF,OAAO,GAAG,GACnB4xF,EAAS5xF,OAAO,GAAG,GAEvB,IAIA5Q,KAAKgkG,WAAW3/F,SAASm+F,IACvB,GACEp9F,KAAKqI,IACH+0F,EAAS5xF,OAAO,GAAG,GACnB4xF,EAAS5xF,OAAO,GAAG,GACnB4xF,EAAS5xF,OAAO,GAAG,IAEnBo0F,EACFhlG,KAAKmkG,kBAAoB,EACzB,CACA,MAAMc,EAAc,CAClB,CAACzC,EAAS5xF,OAAO,GAAG,GAAI4xF,EAAS5xF,OAAO,GAAG,IAC3C,CAAC4xF,EAAS5xF,OAAO,GAAG,GAAI4xF,EAAS5xF,OAAO,GAAG,IAC3C,CAAC4xF,EAAS5xF,OAAO,GAAG,GAAI4xF,EAAS5xF,OAAO,GAAG,KAEzCq0F,EAAY,GAAG,GAAKD,EAAYhlG,KAAKmkG,kBAAoB,IAC3Dc,EAAY,GAAG,IAAMjlG,KAAKmkG,mBAExBc,EAAY,GAAG,GAAKD,EAAYhlG,KAAKmkG,kBAAoB,IAC3Dc,EAAY,GAAG,IAAMjlG,KAAKmkG,mBAExBc,EAAY,GAAG,GAAKD,EAAYhlG,KAAKmkG,kBAAoB,IAC3Dc,EAAY,GAAG,IAAMjlG,KAAKmkG,mBAM5B,MAAM74E,EAAOlmB,KAAKmI,IAChB03F,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJ7/F,KAAKqI,IAChBw3F,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEN35E,EAAOtrB,KAAKmkG,kBAAoB,IACzC3B,EAAS5xF,OAASq0F,EAEtB,IAEJ,CAEAvB,EAAoB,CAAC,CACvB,CAYAwB,YAAAA,CAAa9zF,EAAGC,EAAGm4B,EAAG27D,EAAMC,EAAMC,GAChCrlG,KAAKgkG,WAAWl/F,KAAK,CACnB8L,OAAQ,CAACu0F,EAAMC,EAAMC,GACrBzhG,OAAQ,CAACwN,EAAGC,EAAGm4B,IAEnB,CAkBAu7D,QAAAA,CAAS3zF,EAAGC,EAAGm4B,EAAG8D,EAAG63D,EAAMC,EAAMC,EAAMC,EAAMT,GAC3C,MAAMU,GAAmBpyE,EAAAA,EAAAA,IAAe,CAACgyE,EAAMC,EAAMC,EAAMC,IACrDE,EAAkBxlG,KAAKmkG,mBACzBl0F,EAAAA,EAAAA,IAASs1F,GAAoBvlG,KAAKmkG,kBAClC,KACEsB,EAA0CzlG,KAAKmkG,kBAI/CuB,EACJ1lG,KAAKwjG,YAAY3zF,YACjB21F,EAAkB,IAClBA,EAAkB,EAEpB,IAAIG,GAAmB,EAEvB,GAAId,EAAiB,EAAG,CACtB,GAAI7kG,KAAKyjG,YAAYnhC,YAActiE,KAAKokG,kBAAmB,CACzD,MAAMwB,GAAmBzyE,EAAAA,EAAAA,IAAe,CAAC/hB,EAAGC,EAAGm4B,EAAG8D,IAGlDq4D,GADE11F,EAAAA,EAAAA,IAAS21F,GAAoB5lG,KAAKokG,kBAhRjB,KAkRuBuB,CAC5C,EACKD,GAAU1lG,KAAKwjG,YAAYlhC,YAAckjC,IAC5CG,EACEH,EAtRiB,KAsRuBG,EAE9C,CAEA,IAAKA,GAAoB3lG,KAAK8jG,kBAE1BrsE,SAAS8tE,EAAiB,KAC1B9tE,SAAS8tE,EAAiB,KAC1B9tE,SAAS8tE,EAAiB,KAC1B9tE,SAAS8tE,EAAiB,OAErBryE,EAAAA,EAAAA,IAAWqyE,EAAkBvlG,KAAK8jG,kBAErC,OAKN,IAAI+B,EAAc,EAElB,IAAKF,KAEAluE,SAAS0tE,EAAK,MACd1tE,SAAS0tE,EAAK,MACd1tE,SAAS2tE,EAAK,MACd3tE,SAAS2tE,EAAK,MACd3tE,SAAS4tE,EAAK,MACd5tE,SAAS4tE,EAAK,MACd5tE,SAAS6tE,EAAK,MACd7tE,SAAS6tE,EAAK,KAEf,GAAIT,EAAiB,EACnBc,GAAmB,OASnB,GALAE,GACIpuE,SAAS0tE,EAAK,KAAQ1tE,SAAS0tE,EAAK,IAAU,EAAJ,IAC1C1tE,SAAS2tE,EAAK,KAAQ3tE,SAAS2tE,EAAK,IAAU,EAAJ,IAC1C3tE,SAAS4tE,EAAK,KAAQ5tE,SAAS4tE,EAAK,IAAU,EAAJ,IAC1C5tE,SAAS6tE,EAAK,KAAQ7tE,SAAS6tE,EAAK,IAAU,EAAJ,GAE7B,GAAfO,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIhB,EAAiB,EAAG,CACtB,IAAKc,EAAkB,CACrB,MAAMh3F,EAAS,EAAEyC,EAAE,GAAKo4B,EAAE,IAAM,GAAIp4B,EAAE,GAAKo4B,EAAE,IAAM,GAC7Cs8D,EAAY9lG,KAAK6jG,cAAcl1F,GAErC,IAAI4kB,EACJ,GAAImyE,EAAQ,CAKVnyE,IAHG0e,EAAAA,EAAAA,IAAOkzD,EAAK,GAAIM,IACfxzD,EAAAA,EAAAA,IAAOozD,EAAK,GAAII,IAClB,GACqBxzD,EAAAA,EAAAA,IAAO6zD,EAAU,GAAIL,EAC9C,MACElyE,GAAM4xE,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE3C,MAAMtyE,GAAM2xE,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8BpyE,EAAKA,EAAKC,EAAKA,EACFxzB,KAAK+jG,sBAClD,CACA,GAAI4B,EAAkB,CACpB,GAAIvgG,KAAKC,IAAI+L,EAAE,GAAKo4B,EAAE,KAAOpkC,KAAKC,IAAI+L,EAAE,GAAKo4B,EAAE,IAAK,CAElD,MAAMu8D,EAAK,EAAE10F,EAAE,GAAKm4B,EAAE,IAAM,GAAIn4B,EAAE,GAAKm4B,EAAE,IAAM,GACzCw8D,EAAQhmG,KAAK6jG,cAAckC,GAC3BE,EAAK,EAAE34D,EAAE,GAAKl8B,EAAE,IAAM,GAAIk8B,EAAE,GAAKl8B,EAAE,IAAM,GACzC80F,EAAQlmG,KAAK6jG,cAAcoC,GAEjCjmG,KAAK+kG,SACH3zF,EACAC,EACA00F,EACAE,EACAd,EACAC,EACAY,EACAE,EACArB,EAAiB,GAEnB7kG,KAAK+kG,SACHkB,EACAF,EACAv8D,EACA8D,EACA44D,EACAF,EACAX,EACAC,EACAT,EAAiB,EAErB,KAAO,CAEL,MAAMsB,EAAK,EAAE/0F,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzC+0F,EAAQpmG,KAAK6jG,cAAcsC,GAC3BE,EAAK,EAAE78D,EAAE,GAAK8D,EAAE,IAAM,GAAI9D,EAAE,GAAK8D,EAAE,IAAM,GACzCg5D,EAAQtmG,KAAK6jG,cAAcwC,GAEjCrmG,KAAK+kG,SACH3zF,EACA+0F,EACAE,EACA/4D,EACA63D,EACAiB,EACAE,EACAhB,EACAT,EAAiB,GAEnB7kG,KAAK+kG,SACHoB,EACA90F,EACAm4B,EACA68D,EACAD,EACAhB,EACAC,EACAiB,EACAzB,EAAiB,EAErB,CACA,MACF,CACF,CAEA,GAAIa,EAAQ,CACV,IAAK1lG,KAAKkkG,kBACR,OAEFlkG,KAAKikG,iBAAkB,CACzB,CAM2B,IAAR,GAAd4B,IACH7lG,KAAKklG,aAAa9zF,EAAGo4B,EAAG8D,EAAG63D,EAAME,EAAMC,GAEd,IAAR,GAAdO,IACH7lG,KAAKklG,aAAa9zF,EAAGo4B,EAAGn4B,EAAG8zF,EAAME,EAAMD,GAErCS,IAEyB,IAAR,GAAdA,IACH7lG,KAAKklG,aAAa7zF,EAAGi8B,EAAGl8B,EAAGg0F,EAAME,EAAMH,GAEd,IAAR,EAAdU,IACH7lG,KAAKklG,aAAa7zF,EAAGi8B,EAAG9D,EAAG47D,EAAME,EAAMD,GAG7C,CAOAkB,qBAAAA,GACE,MAAM34F,GAASkX,EAAAA,EAAAA,MASf,OAPA9kB,KAAKgkG,WAAW3/F,SAAQ,SAAUm+F,EAAUp7F,EAAGgzC,GAC7C,MAAM1xB,EAAM85E,EAAS5xF,QACrBwiB,EAAAA,EAAAA,IAAiBxlB,EAAQ8a,EAAI,KAC7B0K,EAAAA,EAAAA,IAAiBxlB,EAAQ8a,EAAI,KAC7B0K,EAAAA,EAAAA,IAAiBxlB,EAAQ8a,EAAI,GAC/B,IAEO9a,CACT,CAKA20F,YAAAA,GACE,OAAOviG,KAAKgkG,UACd,GC7dF,MAAMrQ,UAAmB/1B,EAAAA,EAgBvBj+D,WAAAA,CACEwnB,EACAq/E,EACArF,EACAsF,EACA1zE,EACA2zE,EACA9wF,EACAm2E,EACA4a,EACAtD,EACA5B,EACAx3F,GAEAlK,MAAMgzB,EAAW9pB,EAAAA,EAAUS,KAAMO,GAMjCjK,KAAK4mG,kBAA+B3mG,IAAhBwhG,GAA4BA,EAMhDzhG,KAAK2V,YAAcC,EAMnB5V,KAAK6mG,QAAU9a,EAMf/rF,KAAKk8D,QAAU,KAMfl8D,KAAK8mG,gBAAkBN,EAMvBxmG,KAAK+mG,gBAAkBN,EAMvBzmG,KAAKgnG,kBAAoBN,GAAsC3zE,EAM/D/yB,KAAKinG,aAAe,GAMpBjnG,KAAKknG,qBAAuB,KAM5BlnG,KAAKmnG,SAAW,EAMhBnnG,KAAKonG,YAAcjgF,EAAWtX,WAC1BsX,EAAWpX,iBACX9P,EAEJ,MAAMqhG,EAAemF,EAAetQ,mBAClCn2F,KAAKgnG,mBAEDK,EAAkBrnG,KAAK+mG,gBAAgBh3F,YAC7C,IAAIqzF,EAAkBpjG,KAAK8mG,gBAAgB/2F,YAE3C,MAAMu3F,EAAsBD,GACxBx5F,EAAAA,EAAAA,IAAgByzF,EAAc+F,GAC9B/F,EAEJ,GAAqC,KAAjCpsE,EAAAA,EAAAA,IAAQoyE,GAIV,YADAtnG,KAAK+I,MAAQE,EAAAA,EAAUG,OAIzB,MAAMm+F,EAAmBpgF,EAAWpX,YAChCw3F,IAIAnE,EAHGA,GAGev1F,EAAAA,EAAAA,IAAgBu1F,EAAiBmE,GAFjCA,GAMtB,MAAMpiC,EAAmBshC,EAAeznD,cACtCh/C,KAAKgnG,kBAAkB,IAGnB9hC,EFTH,SACL/9C,EACAg6E,EACAG,EACAn8B,GAEA,MAAMF,GAAe7vC,EAAAA,EAAAA,IAAUksE,GAC/B,IAAIp8B,EAAmBg8B,EACrB/5E,EACAg6E,EACAl8B,EACAE,GAeF,QAZK1tC,SAASytC,IAAqBA,GAAoB,KACrDtwC,EAAAA,EAAAA,IAAc0sE,GAAc,SAAUhsE,GAOpC,OANA4vC,EAAmBg8B,EACjB/5E,EACAg6E,EACA7rE,EACA6vC,GAEK1tC,SAASytC,IAAqBA,EAAmB,CAC1D,IAGKA,CACT,CElB6BsiC,CACvBrgF,EACAg6E,EACAmG,EACAniC,GAGF,IAAK1tC,SAASytC,IAAqBA,GAAoB,EAIrD,YADAllE,KAAK+I,MAAQE,EAAAA,EAAUG,OAIzB,MAAMq+F,OACexnG,IAAnBojG,EAA+BA,EC3KN,GD0L3B,GATArjG,KAAK0nG,eAAiB,IAAIC,EACxBxgF,EACAg6E,EACAmG,EACAlE,EACAl+B,EAAmBuiC,EACnBtiC,GAGgD,IAA9CnlE,KAAK0nG,eAAenF,eAAen+F,OAGrC,YADApE,KAAK+I,MAAQE,EAAAA,EAAUG,OAIzBpJ,KAAKmnG,SAAWX,EAAenT,kBAAkBnuB,GACjD,IAAIlxB,EAAeh0C,KAAK0nG,eAAenB,wBAmBvC,GAjBInD,IACEj8E,EAAWtX,YACbmkC,EAAa,IAAK5M,EAAAA,EAAAA,IAChB4M,EAAa,GACbovD,EAAgB,GAChBA,EAAgB,IAElBpvD,EAAa,IAAK5M,EAAAA,EAAAA,IAChB4M,EAAa,GACbovD,EAAgB,GAChBA,EAAgB,KAGlBpvD,GAAenmC,EAAAA,EAAAA,IAAgBmmC,EAAcovD,KAI5CluE,EAAAA,EAAAA,IAAQ8e,GAEN,CACL,IAAIhkC,EAAa,EACb+jC,EAAa,EACb5sB,EAAWtX,aACbG,GAAaC,EAAAA,EAAAA,IAASs3F,GACtBxzD,EAAa3uC,KAAKmyB,OACfyc,EAAa,GAAKuzD,EAAiB,IAAMv3F,KAIxBigB,EAAAA,EAAAA,IACpB+jB,EAAajpC,QACboc,GACA,GAEY9iB,SAASuJ,IACrB,MAAMg6F,EAAcpB,EAAepS,0BACjCxmF,EACA5N,KAAKmnG,UAGP,IAAK,IAAIU,EAAOD,EAAYt8E,KAAMu8E,GAAQD,EAAYp8E,KAAMq8E,IAC1D,IAAK,IAAIC,EAAOF,EAAYr8E,KAAMu8E,GAAQF,EAAYn8E,KAAMq8E,IAAQ,CAClE,MAAMh/F,EAAO69F,EAAgB3mG,KAAKmnG,SAAUU,EAAMC,EAAMlyF,GACxD,GAAI9M,EAAM,CACR,MAAM0rB,EAASuf,EAAa/jC,EAC5BhQ,KAAKinG,aAAaniG,KAAK,CAACgE,OAAM0rB,UAChC,CACF,GAEAuf,KAG6B,IAA7B/zC,KAAKinG,aAAa7iG,SACpBpE,KAAK+I,MAAQE,EAAAA,EAAUG,MAE3B,MArCEpJ,KAAK+I,MAAQE,EAAAA,EAAUG,KAsC3B,CAMAqa,QAAAA,GACE,OAAOzjB,KAAKk8D,OACd,CAKA6rC,UAAAA,GACE,MAAMvG,EAAU,GAqBhB,GApBAxhG,KAAKinG,aAAa5iG,SAASuM,IACzB,MAAM9H,EAAO8H,EAAO9H,KACpB,GAAIA,GAAQA,EAAKE,YAAcC,EAAAA,EAAUC,OAAQ,KAAA8+F,EAC/C,MAAMp6F,EAAS5N,KAAK8mG,gBAAgB3Q,mBAAmBrtF,EAAKiqB,WAC5DnlB,EAAO,IAAMgD,EAAO4jB,OACpB5mB,EAAO,IAAMgD,EAAO4jB,OACpB,MAAMmtE,EAA6B,QAAnBqG,EAAGhoG,KAAKonG,mBAAW,IAAAY,OAAA,EAAhBA,EAAkBj9F,QACjC42F,IACFA,EAAW,IAAM/wF,EAAO4jB,OACxBmtE,EAAW,IAAM/wF,EAAO4jB,QAE1BgtE,EAAQ18F,KAAK,CACX8I,OAAQA,EACR+zF,WAAYA,EACZtsD,MAAOvsC,EAAK2a,YAEhB,KAEFzjB,KAAKinG,aAAa7iG,OAAS,EAEJ,IAAnBo9F,EAAQp9F,OACVpE,KAAK+I,MAAQE,EAAAA,EAAUE,UAClB,CACL,MAAMsgC,EAAIzpC,KAAKgnG,kBAAkB,GAC3Bx4F,EAAOxO,KAAK+mG,gBAAgBtT,YAAYhqD,GACxCj3B,EAAwB,kBAAThE,EAAoBA,EAAOA,EAAK,GAC/CiE,EAAyB,kBAATjE,EAAoBA,EAAOA,EAAK,GAChD22D,EAAmBnlE,KAAK+mG,gBAAgB/nD,cAAcvV,GACtDy7B,EAAmBllE,KAAK8mG,gBAAgB9nD,cAC5Ch/C,KAAKmnG,UAGD7F,EAAethG,KAAK+mG,gBAAgB5Q,mBACxCn2F,KAAKgnG,mBAGPhnG,KAAKk8D,QAAU+rC,EACbz1F,EACAC,EACAzS,KAAK2V,YACLuvD,EACAllE,KAAK8mG,gBAAgB/2F,YACrBo1D,EACAm8B,EACAthG,KAAK0nG,eACLlG,EACAxhG,KAAK6mG,QACL7mG,KAAK4mG,aACL5mG,KAAK6sB,aAGP7sB,KAAK+I,MAAQE,EAAAA,EAAUC,MACzB,CACAlJ,KAAKmL,SACP,CAMAxB,IAAAA,GACE,GAAI3J,KAAK+I,OAASE,EAAAA,EAAUS,KAAM,CAChC1J,KAAK+I,MAAQE,EAAAA,EAAUigB,QACvBlpB,KAAKmL,UAEL,IAAI+8F,EAAa,EAEjBloG,KAAKknG,qBAAuB,GAC5BlnG,KAAKinG,aAAa5iG,SAAQ8jG,IAAY,IAAX,KAACr/F,GAAKq/F,EAC/B,MAAMp/F,EAAQD,EAAKE,WACnB,GAAID,GAASE,EAAAA,EAAUS,MAAQX,GAASE,EAAAA,EAAUigB,QAAS,CACzDg/E,IAEA,MAAME,GAAkBvmG,EAAAA,EAAAA,IAAOiH,EAAMvG,EAAAA,EAAUqG,QAASimD,IACtD,MAAM9lD,EAAQD,EAAKE,WAEjBD,GAASE,EAAAA,EAAUC,QACnBH,GAASE,EAAAA,EAAUE,OACnBJ,GAASE,EAAAA,EAAUG,SAEnB9E,EAAAA,EAAAA,IAAc8jG,GACdF,IACmB,IAAfA,IACFloG,KAAKqoG,mBACLroG,KAAK+nG,kBAIX/nG,KAAKknG,qBAAqBpiG,KAAKsjG,EACjC,KAGiB,IAAfF,EACF9kG,WAAWpD,KAAK+nG,WAAW1lG,KAAKrC,MAAO,GAEvCA,KAAKinG,aAAa5iG,SAAQ,SAAAikG,EAAkBlhG,EAAGgzC,GAAK,IAAhB,KAACtxC,GAAKw/F,EAC1Bx/F,EAAKE,YACNC,EAAAA,EAAUS,MACrBZ,EAAKa,MAET,GAEJ,CACF,CAKA0+F,gBAAAA,GACEroG,KAAKknG,qBAAqB7iG,QAAQC,EAAAA,IAClCtE,KAAKknG,qBAAuB,IAC9B,CAMAlpC,OAAAA,GACMh+D,KAAKk8D,WACPqtB,EAAAA,EAAAA,IAAcvpF,KAAKk8D,QAAQplB,WAAW,OACtCpB,EAAW5wC,KAAK9E,KAAKk8D,SACrBl8D,KAAKk8D,QAAU,MAEjBn8D,MAAMi+D,SACR,EAGF,S,iBEhYO,SAAS1xC,EAAemd,EAAG9jB,EAAGC,EAAGmN,GACtC,YAAkB9yB,IAAd8yB,GACFA,EAAU,GAAK0W,EACf1W,EAAU,GAAKpN,EACfoN,EAAU,GAAKnN,EACRmN,GAEF,CAAC0W,EAAG9jB,EAAGC,EAChB,CAQO,SAASwrE,EAAU3nD,EAAG9jB,EAAGC,GAC9B,OAAO6jB,EAAI,IAAM9jB,EAAI,IAAMC,CAC7B,CAqCO,SAAS2iF,EAAKx1E,GACnB,OASsB0W,EATP1W,EAAU,GASApN,EATIoN,EAAU,GASXnN,EATemN,EAAU,IAU7CpN,GAAK8jB,GAAK7jB,EADb,IAAiB6jB,EAAG9jB,EAAGC,CAR9B,CAiBO,SAAS4iF,EAAiBz1E,EAAWmgE,GAC1C,MAAMzpD,EAAI1W,EAAU,GACdpN,EAAIoN,EAAU,GACdnN,EAAImN,EAAU,GAEpB,GAAImgE,EAASnsB,aAAet9B,GAAKA,EAAIypD,EAAStsB,aAC5C,OAAO,EAET,MAAM3zC,EAAYigE,EAASuV,iBAAiBh/D,GAC5C,OAAKxW,GAGEA,EAAUlN,WAAWJ,EAAGC,EACjC,C,oRCbO,MAAMswD,EAAc,kBAMdrlB,EAAmB,OAMnBrB,EAAiB,QAMjBmgB,EAAkB,GAMlBE,EAAwB,EAMxBpgB,EAAkB,QAMlBiB,EAAoB,GAMpBP,EAAqB,OAMrB0lB,EAAmB,SAMnBC,EAAsB,SAMtBjB,EAAiB,CAAC,EAAG,EAAG,EAAG,GAM3BzkB,EAAmB,EAKnBl+C,EAAe,IAAIuC,EAAAA,EAKhC,IAKIi0F,EALAC,EAAiB,KAUd,MAAMC,EAAc,CAAC,EAEtBC,EAAsB,IAAI3rE,IAAI,CAClC,QACA,aACA,YACA,UACA,UACA,YACA,WACA,gBACA,eACA,aACA,QACA,OACA,aASF,SAAS4rE,EAAWx2F,EAAOyyB,EAAQI,GACjC,MAAO,GAAP5Y,OAAUja,EAAK,KAAAia,OAAIwY,EAAM,WAAAxY,OAAU4Y,EAAM,IAC3C,CAMO,MAAMgxC,EAAgB,WAC3B,MAAM4yB,EAAU,IAChB,IAAIpmD,EAASqmD,EAMbC,eAAeC,EAAYtkE,SACnBokE,EAAYrtF,MAClB,MAAMwtF,QAAkBH,EAAYr/F,KAAKi7B,GACzC,GAAyB,IAArBukE,EAAU/kG,OACZ,OAAO,EAET,MAAMmkD,GAAO5jB,EAAAA,EAAAA,IAAkBC,GACzBwkE,EAAc7gD,EAAKrjB,SAAS,GAAG9B,cAC/BimE,EAAc9gD,EAAKxjB,OACzB,OAAOokE,EAAU73F,MAKd+zB,IACC,MAAMF,EAASE,EAAEF,OAAOjd,QAAQ,eAAgB,IAAIkb,cAC9C2B,EAASP,EAAAA,GAAYa,EAAEN,SAAWM,EAAEN,OAC1C,OACEI,IAAWikE,GACX/jE,EAAE/yB,QAAUi2C,EAAKj2C,OACjByyB,GAAUskE,IAIlB,CAEAJ,eAAeK,UACPN,EAAYrtF,MAClB,IAAI4tF,GAAO,EACX,MAAMC,EAAyBt3F,EAAai1C,gBACtCsiD,EAAQ1lG,OAAO2uB,KAAK82E,GAAwBp5E,QAC/C7oB,GAAQiiG,EAAuBjiG,GAAOwhG,IAEzC,IAAK,IAAI3hG,EAAIqiG,EAAMrlG,OAAS,EAAGgD,GAAK,IAAKA,EAAG,CAC1C,MAAMmhD,EAAOkhD,EAAMriG,GACnB,IAAIsiG,EAAiBF,EAAuBjhD,GACxCmhD,EAAiBX,UACTG,EAAY3gD,KACpBpiD,EAAAA,EAAAA,GAAMyiG,GACN12F,EAAa1F,IAAI+7C,EAAMwgD,KAEvBW,GAAkB,GAClBx3F,EAAa1F,IAAI+7C,EAAMmhD,GAAgB,GACnCA,EAAiBX,IACnBQ,GAAO,IAIf,CACA5mD,OAAU1iD,EACLspG,IACH5mD,EAAUv/C,WAAWkmG,EAAO,KAEhC,CAEA,OAAOL,eAAgBrkE,GAChBokE,IACHA,EAActlE,EAAAA,GAA0BG,KAAK4lE,MAAQr3F,SAASq3F,OAEhE,MAAMlhD,GAAO5jB,EAAAA,EAAAA,IAAkBC,GAC/B,IAAK2jB,EACH,OAEF,MAAMrjB,EAAWqjB,EAAKrjB,SACtB,IAAIykE,GAAY,EAChB,IAAK,MAAMxkE,KAAUD,EAAU,CAC7B,GAAI2jE,EAAoBrX,IAAIrsD,GAC1B,SAEF,MAAM59B,EAAMuhG,EAAWvgD,EAAKj2C,MAAOi2C,EAAKxjB,OAAQI,QAClBllC,IAA1BiS,EAAa7F,IAAI9E,KAGrB2K,EAAa1F,IAAIjF,EAAK,GAAG,GACzBoiG,GAAY,EACd,CACIA,IACFzmG,aAAay/C,GACbA,EAAUv/C,WAAWkmG,EAAO,KAEhC,CACF,CAzF6B,GA+FhBM,EAAqB,WAIhC,IAAIC,EACJ,OAAO,SAAUjlE,GACf,IAAInyB,EAASm2F,EAAYhkE,GACzB,QAAc3kC,GAAVwS,EAAqB,CACvB,GAAIixB,EAAAA,GAAyB,CAC3B,MAAM6kB,GAAO5jB,EAAAA,EAAAA,IAAkBC,GACzBklE,EAAUC,EAAYnlE,EAAU,WAItCnyB,GAHmBqO,MAAMkF,OAAOuiC,EAAKzjB,aACjC,IACA9e,OAAOuiC,EAAKzjB,cAGbglE,EAAQE,wBAA0BF,EAAQG,yBAC/C,MACOJ,IACHA,EAAiBz3F,SAASC,cAAc,OACxCw3F,EAAehsE,UAAY,IAC3BgsE,EAAev3F,MAAM43F,UAAY,IACjCL,EAAev3F,MAAM63F,UAAY,OACjCN,EAAev3F,MAAMG,OAAS,OAC9Bo3F,EAAev3F,MAAM83C,QAAU,IAC/By/C,EAAev3F,MAAM83F,OAAS,OAC9BP,EAAev3F,MAAMC,SAAW,WAChCs3F,EAAev3F,MAAMc,QAAU,QAC/By2F,EAAev3F,MAAMwI,KAAO,YAE9B+uF,EAAev3F,MAAMi2C,KAAO3jB,EAC5BxyB,SAASi4F,KAAKtzF,YAAY8yF,GAC1Bp3F,EAASo3F,EAAe/nF,aACxB1P,SAASi4F,KAAKhqD,YAAYwpD,GAE5BjB,EAAYhkE,GAAYnyB,CAC1B,CACA,OAAOA,CACT,CACF,CAvCkC,GA8ClC,SAASs3F,EAAYxhD,EAAMI,GAQzB,OAPKggD,IACHA,GAAiBhhE,EAAAA,EAAAA,GAAsB,EAAG,IAExC4gB,GAAQmgD,IACVC,EAAepgD,KAAOA,EACtBmgD,EAAcC,EAAepgD,MAExBogD,EAAeoB,YAAYphD,EACpC,CAOO,SAAS2hD,EAAiB/hD,EAAMI,GACrC,OAAOohD,EAAYxhD,EAAMI,GAAMn2C,KACjC,CASO,SAASylE,EAAyB1vB,EAAMI,EAAM3gC,GACnD,GAAI2gC,KAAQ3gC,EACV,OAAOA,EAAM2gC,GAEf,MAAMn2C,EAAQm2C,EACXvjB,MAAM,MACNk1C,QAAO,CAAC9/B,EAAM+vD,IAASnlG,KAAKqI,IAAI+sC,EAAM8vD,EAAiB/hD,EAAMgiD,KAAQ,GAExE,OADAviF,EAAM2gC,GAAQn2C,EACPA,CACT,CAOO,SAASkoE,EAAkB8vB,EAAWn4B,GAC3C,MAAMkI,EAAS,GACTC,EAAU,GACVC,EAAa,GACnB,IAAIjoE,EAAQ,EACRs+C,EAAY,EACZr+C,EAAS,EACTqyB,EAAa,EACjB,IAAK,IAAI19B,EAAI,EAAGwE,EAAKymE,EAAOjuE,OAAQgD,GAAKwE,EAAIxE,GAAK,EAAG,CACnD,MAAMuhD,EAAO0pB,EAAOjrE,GACpB,GAAa,OAATuhD,GAAiBvhD,IAAMwE,EAAI,CAC7B4G,EAAQpN,KAAKqI,IAAI+E,EAAOs+C,GACxB2pB,EAAW31E,KAAKgsD,GAChBA,EAAY,EACZr+C,GAAUqyB,EACVA,EAAa,EACb,QACF,CACA,MAAMyjB,EAAO8pB,EAAOjrE,EAAI,IAAMojG,EAAUjiD,KAClCkiD,EAAeH,EAAiB/hD,EAAMI,GAC5C4xB,EAAOz1E,KAAK2lG,GACZ35C,GAAa25C,EACb,MAAMC,EAAgBd,EAAkBrhD,GACxCiyB,EAAQ11E,KAAK4lG,GACb5lE,EAAa1/B,KAAKqI,IAAIq3B,EAAY4lE,EACpC,CACA,MAAO,CAACl4F,QAAOC,SAAQ8nE,SAAQC,UAASC,aAC1C,CA6BO,SAASoC,EACdn1C,EACApiB,EACAlY,EACAu9F,EACA/uB,EACAC,EACAtV,EACAl9B,EACA1jB,EACAC,EACAlD,GAEAglB,EAAQ4P,OAEQ,IAAZlqC,SAC0BnN,IAAxBynC,EAAQi8C,YACVj8C,EAAQi8C,YAAej8C,GAAaA,EAAQi8C,aAAev2E,EAE3Ds6B,EAAQi8C,aAAev2E,GAGvBkY,GACFoiB,EAAQpiB,UAAUld,MAAMs/B,EAASpiB,GAGbqlF,EAAc/vB,qBAElClzC,EAAQzgB,UAAUtB,EAAGC,GACrB8hB,EAAQhlB,MAAMA,EAAM,GAAIA,EAAM,IA2ClC,SAAkC2Z,EAAOqL,GACvC,MAAMkzC,EAAsBv+C,EAAMu+C,oBAClC,IAAK,IAAIxzE,EAAI,EAAGwE,EAAKgvE,EAAoBx2E,OAAQgD,EAAIwE,EAAIxE,GAAK,EACxDwD,MAAMC,QAAQ+vE,EAAoBxzE,EAAI,IACxCsgC,EAAQkzC,EAAoBxzE,IAAIgB,MAC9Bs/B,EACAkzC,EAAoBxzE,EAAI,IAG1BsgC,EAAQkzC,EAAoBxzE,IAAMwzE,EAAoBxzE,EAAI,EAGhE,CAtDIwjG,CAA+CD,EAAejjE,IACrDhlB,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCglB,EAAQzgB,UAAUtB,EAAGC,GACrB8hB,EAAQhlB,MAAMA,EAAM,GAAIA,EAAM,IAC9BglB,EAAQ0O,UAEJu0D,EAEF/uB,EACAC,EACAtV,EACAl9B,EACA,EACA,EACAk9B,EACAl9B,IAIF3B,EAAQ0O,UAEJu0D,EAEF/uB,EACAC,EACAtV,EACAl9B,EACA1jB,EACAC,EACA2gD,EAAI7jD,EAAM,GACV2mB,EAAI3mB,EAAM,IAIdglB,EAAQs1C,SACV,C,+CC5OA,QA3NA,MAIEr9E,WAAAA,CAAYsK,GAKVjK,KAAK6qG,MAAQ5gG,EAAQge,KASrBjoB,KAAK8qG,OAAoD7gG,EAAQmgC,MASjEpqC,KAAK6kB,aAA6B5kB,IAAnBgK,EAAQ2D,OAAuB3D,EAAQ2D,OAAS,KAS/D5N,KAAK+qG,kBACqB9qG,IAAxBgK,EAAQqgC,YAA4BrgC,EAAQqgC,YAAc,KAM5DtqC,KAAKgrG,sBACyB/qG,IAA5BgK,EAAQghC,gBAAgChhC,EAAQghC,gBAAkB,MAMpEjrC,KAAKirG,aAA6BhrG,IAAnBgK,EAAQogC,QAAuBpgC,EAAQogC,OAMtDrqC,KAAKkrG,aAAelrG,KAAKirG,UAAWjrG,KAAK6kB,SAMzC7kB,KAAKmrG,wBAA0BlhG,EAAQsgC,mBAMvCvqC,KAAKorG,iBAAmB,KAMxBprG,KAAKqrG,eAAiBphG,EAAQihC,aAChC,CAKAr7B,QAAAA,GACE,OAAO7P,KAAKkrG,SACd,CAOAl7D,OAAAA,GACE,OAAOhwC,KAAK6qG,KACd,CAOA96F,SAAAA,GACE,OAAO/P,KAAK6kB,OACd,CAOAuC,QAAAA,GACE,OAAOpnB,KAAK8qG,MACd,CASA95D,gBAAAA,GACE,OAAOhxC,KAAKqrG,gBAAkB3zE,EAAAA,EAAgB13B,KAAK8qG,OACrD,CAOApjF,cAAAA,GACE,OAAO1nB,KAAK+qG,YACd,CAaAO,kBAAAA,GACE,OAAOtrG,KAAKgrG,gBACd,CAOA1oC,QAAAA,GACE,OAAOtiE,KAAKirG,OACd,CAOAM,SAAAA,CAAUlhE,GACRrqC,KAAKirG,QAAU5gE,EACfrqC,KAAKkrG,aAAe7gE,IAAUrqC,KAAK6kB,QACrC,CAKA2mF,kBAAAA,GACE,OAAOxrG,KAAKorG,gBACd,CAKAK,kBAAAA,CAAmBvY,GACjBlzF,KAAKorG,iBAAmBlY,CAC1B,CAOAoG,SAAAA,CAAU1rF,GACR5N,KAAK6kB,QAAUjX,EACf5N,KAAKkrG,aAAelrG,KAAKirG,UAAWr9F,EACtC,CAQAuoD,cAAAA,CAAe7rB,GACbtqC,KAAK+qG,aAAezgE,CACtB,CAQAohE,qBAAAA,CAAsBlR,GACpBx6F,KAAKmrG,wBAA0B3Q,CACjC,CAOAzpD,sBAAAA,GACE,OAAO/wC,KAAKmrG,uBACd,E,kEClQK,SAAS/wE,EACd7F,EACAC,EACAsE,EACAvR,EACA6sC,EACAu3C,EACA/+F,GAEA,IAAIxF,EAAGwE,EAAI+Z,EAAG+P,EAAIE,EAAID,EAAIE,EAC1B,MAAMjQ,EAAIwuC,EAAYu3C,EAAoB,GAEpCC,EAAgB,GAEtB,IAAK,IAAI1iE,EAAI,EAAG2iE,EAAK/yE,EAAK10B,OAAQ8kC,EAAI2iE,IAAM3iE,EAAG,CAC7C,MAAMzU,EAAMqE,EAAKoQ,GAGjB,IAFAxT,EAAKnB,EAAgBE,EAAMlN,GAC3BoO,EAAKpB,EAAgBE,EAAMlN,EAAS,GAC/BngB,EAAIotB,EAAQptB,EAAIqtB,EAAKrtB,GAAKmgB,EAC7BqO,EAAKrB,EAAgBntB,GACrByuB,EAAKtB,EAAgBntB,EAAI,IACpBwe,GAAK+P,GAAME,GAAMjQ,GAAO+P,GAAM/P,GAAKA,GAAKiQ,KAC3ClQ,GAAMC,EAAI+P,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzCk2E,EAAc9mG,KAAK6gB,IAErB+P,EAAKE,EACLD,EAAKE,CAET,CAGA,IAAIi2E,EAASnnF,IACTonF,GAAoBpmG,IAGxB,IAFAimG,EAAcz6F,KAAKqwE,EAAAA,IACnB9rD,EAAKk2E,EAAc,GACdxkG,EAAI,EAAGwE,EAAKggG,EAAcxnG,OAAQgD,EAAIwE,IAAMxE,EAAG,CAClDwuB,EAAKg2E,EAAcxkG,GACnB,MAAMqrE,EAAgBrtE,KAAKC,IAAIuwB,EAAKF,GAChC+8C,EAAgBs5B,IAClBpmF,GAAK+P,EAAKE,GAAM,GACZ+D,EAAAA,EAAAA,IAAsBpF,EAAiBC,EAAQsE,EAAMvR,EAAQ5B,EAAGC,KAClEkmF,EAASnmF,EACTomF,EAAmBt5B,IAGvB/8C,EAAKE,CACP,CAMA,OALI9U,MAAMgrF,KAGRA,EAAS13C,EAAYu3C,IAEnB/+F,GACFA,EAAK9H,KAAKgnG,EAAQlmF,EAAGmmF,GACdn/F,GAEF,CAACk/F,EAAQlmF,EAAGmmF,EACrB,CAWO,SAASz3C,EACd//B,EACAC,EACAgN,EACAja,EACA6sC,GAGA,IAAIqgB,EAAiB,GACrB,IAAK,IAAIrtE,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnBqtE,EAAiBr6C,EACf7F,EACAC,EACAsE,EACAvR,EACA6sC,EACA,EAAIhtD,EACJqtE,GAEFjgD,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAOqwE,CACT,C,4CCrGA,IAAI+U,EAAa,CAAC,EAiBX,SAASrhE,EAAIvX,EAAQsW,EAAaH,GACvC,MAAMurB,EAAa1hC,EAAOo/B,UACpBuC,EAAkBrrB,EAAY8oB,UAC9BsC,KAAck3C,IAClBA,EAAWl3C,GAAc,CAAC,GAE5Bk3C,EAAWl3C,GAAYC,GAAmBxrB,CAC5C,CA4BO,SAAS1a,EAAIimC,EAAYC,GAC9B,OAAID,KAAck3C,GAAcj3C,KAAmBi3C,EAAWl3C,GACrDk3C,EAAWl3C,GAAYC,GAEzB,IACT,C,sFC7BO,SAAS2d,EAAYtnC,GAC1B,OAAKA,EAGDhe,MAAMC,QAAQ+d,IACT9P,EAAAA,EAAAA,IAAS8P,GAEG,kBAAVA,GAAsB,QAASA,EAW5C,SAAyBG,GACvB,IAAKA,EAAQyL,SAAWzL,EAAQva,KAC9B,OAAOw9F,EAAAA,GAAUljF,WAAWC,EAAQL,IAAK,YAAaK,EAAQH,OAGhE,MAAMslC,EAAWnlC,EAAQL,IAAM,IAAMK,EAAQyL,OAEvCy3E,EAAgBD,EAAAA,GAAUljF,WAC9BolC,OACAjuD,EACA8oB,EAAQH,OAEV,GAAIqjF,EACF,OAAOA,EAGT,MAAMxjF,EAAYujF,EAAAA,GAAU3/F,IAAI0c,EAAQL,IAAK,YAAa,MAC1D,GAAID,EAAU7E,kBAAoBqF,EAAAA,EAAW/f,OAC3C,OAAO,KAET,MAAMgjG,GAAuBvkE,EAAAA,EAAAA,GAC3B5e,EAAQva,KAAK,GACbua,EAAQva,KAAK,IAqBf,OAnBA09F,EAAqB91D,UACnB3tB,EAAUhF,SAAS,GACnBsF,EAAQyL,OAAO,GACfzL,EAAQyL,OAAO,GACfzL,EAAQva,KAAK,GACbua,EAAQva,KAAK,GACb,EACA,EACAua,EAAQva,KAAK,GACbua,EAAQva,KAAK,KAEfuyB,EAAAA,EAAAA,GACEmrE,EAAqBv1D,OACrBuX,OACAjuD,EACAgpB,EAAAA,EAAW/f,OACX6f,EAAQH,OACR,GAEKojF,EAAAA,GAAUljF,WAAWolC,OAAUjuD,EAAW8oB,EAAQH,MAC3D,CAtDWujF,CAAgBvjF,GAElBA,EARE,IASX,C,wGC3BO,SAASwpC,EACd79B,EACAC,EACAC,EACAlN,EACA3Z,EACAw+F,GAKA,OAHAA,EACmB,OAAjBA,QAAiB,IAAjBA,EAAAA,GACA13E,EAAAA,EAAAA,KAAsB5P,EAAAA,EAAAA,MAAeyP,EAAiBC,EAAQC,EAAKlN,MAChE2L,EAAAA,EAAAA,IAAWtlB,EAAQw+F,KAIrBA,EAAkB,IAAMx+F,EAAO,IAAMw+F,EAAkB,IAAMx+F,EAAO,IACpEw+F,EAAkB,IAAMx+F,EAAO,IAAMw+F,EAAkB,IAAMx+F,EAAO,KAIhE+jD,EAAAA,EAAAA,GACLp9B,EACAC,EACAC,EACAlN,GAOA,SAAU8kF,EAAQC,GAChB,OAAO51E,EAAAA,EAAAA,IAAkB9oB,EAAQy+F,EAAQC,EAC3C,IAEJ,CAUO,SAASl5C,EACd7+B,EACAC,EACAsE,EACAvR,EACA3Z,GAEA,IAAK,IAAIxG,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,GACEgrD,EAAqB79B,EAAiBC,EAAQsE,EAAK1xB,GAAImgB,EAAQ3Z,GAE/D,OAAO,EAET4mB,EAASsE,EAAK1xB,EAChB,CACA,OAAO,CACT,CAUO,SAASmlG,EACdh4E,EACAC,EACAC,EACAlN,EACA3Z,GAEA,QAAIwkD,EAAqB79B,EAAiBC,EAAQC,EAAKlN,EAAQ3Z,QAI7Ds6C,EAAAA,EAAAA,IACE3zB,EACAC,EACAC,EACAlN,EACA3Z,EAAO,GACPA,EAAO,SAMTs6C,EAAAA,EAAAA,IACE3zB,EACAC,EACAC,EACAlN,EACA3Z,EAAO,GACPA,EAAO,SAMTs6C,EAAAA,EAAAA,IACE3zB,EACAC,EACAC,EACAlN,EACA3Z,EAAO,GACPA,EAAO,QAMTs6C,EAAAA,EAAAA,IACE3zB,EACAC,EACAC,EACAlN,EACA3Z,EAAO,GACPA,EAAO,MAMb,CAUO,SAASktB,EACdvG,EACAC,EACAsE,EACAvR,EACA3Z,GAEA,IAAK2+F,EAAqBh4E,EAAiBC,EAAQsE,EAAK,GAAIvR,EAAQ3Z,GAClE,OAAO,EAET,GAAoB,IAAhBkrB,EAAK10B,OACP,OAAO,EAET,IAAK,IAAIgD,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAC1C,IACE6gD,EAAAA,EAAAA,IACE1zB,EACAuE,EAAK1xB,EAAI,GACT0xB,EAAK1xB,GACLmgB,EACA3Z,KAICwkD,EACC79B,EACAuE,EAAK1xB,EAAI,GACT0xB,EAAK1xB,GACLmgB,EACA3Z,GAGF,OAAO,EAIb,OAAO,CACT,CAUO,SAAS+mD,EACdpgC,EACAC,EACAgN,EACAja,EACA3Z,GAEA,IAAK,IAAIxG,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnB,GACE0zB,EAA0BvG,EAAiBC,EAAQsE,EAAMvR,EAAQ3Z,GAEjE,OAAO,EAET4mB,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAO,CACT,C,6FCzLO,SAAS+jB,EAAI1nB,EAAYu+B,GAG9B,OAFAv+B,EAAW,KAAOu+B,EAAM,GACxBv+B,EAAW,KAAOu+B,EAAM,GACjBv+B,CACT,CAoMO,SAASyhB,EAAOsqF,EAAaC,GAClC,IAAIvqF,GAAS,EACb,IAAK,IAAI9a,EAAIolG,EAAYpoG,OAAS,EAAGgD,GAAK,IAAKA,EAC7C,GAAIolG,EAAYplG,IAAMqlG,EAAYrlG,GAAI,CACpC8a,GAAS,EACT,KACF,CAEF,OAAOA,CACT,CAoBO,SAASqE,EAAO9lB,EAAY+lB,GACjC,MAAMyhD,EAAW7iE,KAAK8wB,IAAI1P,GACpB0hD,EAAW9iE,KAAKgxB,IAAI5P,GACpBb,EAAIllB,EAAW,GAAKwnE,EAAWxnE,EAAW,GAAKynE,EAC/CtiD,EAAInlB,EAAW,GAAKwnE,EAAWxnE,EAAW,GAAKynE,EAGrD,OAFAznE,EAAW,GAAKklB,EAChBllB,EAAW,GAAKmlB,EACTnlB,CACT,CAmBO,SAASiiB,EAAMjiB,EAAYiiB,GAGhC,OAFAjiB,EAAW,IAAMiiB,EACjBjiB,EAAW,IAAMiiB,EACVjiB,CACT,CA6GO,SAASkP,EAAMlP,EAAYgP,GAChC,GAAIA,EAAWI,WAAY,CACzB,MAAMG,GAAaC,EAAAA,EAAAA,IAASR,EAAWM,aACjCgkC,EAAaG,EAAczzC,EAAYgP,EAAYO,GACrD+jC,IACFtzC,EAAW,IAAMszC,EAAa/jC,EAElC,CACA,OAAOvP,CACT,CAOO,SAASyzC,EAAczzC,EAAYgP,EAAYwkC,GACpD,MAAMnkC,EAAmBL,EAAWM,YACpC,IAAIgkC,EAAa,EAUjB,OAREtkC,EAAWI,aACVpP,EAAW,GAAKqP,EAAiB,IAAMrP,EAAW,GAAKqP,EAAiB,MAEzEmkC,EAAoBA,IAAqBhkC,EAAAA,EAAAA,IAASH,GAClDikC,EAAa3uC,KAAKmyB,OACf92B,EAAW,GAAKqP,EAAiB,IAAMmkC,IAGrCF,CACT,C,mCC3aA,MAAM24D,EAAS,CACbC,KAAM,EACN3qF,KAAM,EACN8tE,MAAO,EACPv1B,KAAM,GAMR,IAAIyiC,EAAQ0P,EAAOC,KA0BZ,SAAS3qF,IACVg7E,EAAQ0P,EAAO1qF,MAGnB4qF,QAAQ5qF,QAAK6jB,UACf,C,kCCjBA,QA3BA,MACElmC,WAAAA,GAMEK,KAAK6sG,UAAW,CAClB,CAKA7tF,OAAAA,GACOhf,KAAK6sG,WACR7sG,KAAK6sG,UAAW,EAChB7sG,KAAKwF,kBAET,CAMAA,eAAAA,GAAmB,E,iBCzBd,SAAS0I,IACd,MAAM,IAAIqnB,MAAM,iCAClB,C,2BAOA,IAAIu3E,EAAc,EAWX,SAAS3gG,EAAOslB,GACrB,OAAOA,EAAIs7E,SAAWt7E,EAAIs7E,OAASj+E,SAASg+E,GAC9C,C,iBCjBO,SAAS1lE,EAAMziC,EAAO4I,EAAKE,GAChC,OAAOrI,KAAKmI,IAAInI,KAAKqI,IAAI9I,EAAO4I,GAAME,EACxC,CAaO,SAAS60B,EAAuB3c,EAAGC,EAAG8P,EAAIC,EAAIC,EAAIC,GACvD,MAAMtC,EAAKqC,EAAKF,EACVlC,EAAKqC,EAAKF,EAChB,GAAW,IAAPpC,GAAmB,IAAPC,EAAU,CACxB,MAAMmnC,IAAMh1C,EAAI+P,GAAMnC,GAAM3N,EAAI+P,GAAMnC,IAAOD,EAAKA,EAAKC,EAAKA,GACxDmnC,EAAI,GACNjlC,EAAKE,EACLD,EAAKE,GACI8kC,EAAI,IACbjlC,GAAMnC,EAAKonC,EACXhlC,GAAMnC,EAAKmnC,EAEf,CACA,OAAOt4B,EAAgB1c,EAAGC,EAAG8P,EAAIC,EACnC,CAUO,SAAS0M,EAAgB3M,EAAIC,EAAIC,EAAIC,GAC1C,MAAMtC,EAAKqC,EAAKF,EACVlC,EAAKqC,EAAKF,EAChB,OAAOpC,EAAKA,EAAKC,EAAKA,CACxB,CASO,SAASuvE,EAAkBiK,GAChC,MAAMhlG,EAAIglG,EAAI5oG,OAEd,IAAK,IAAIgD,EAAI,EAAGA,EAAIY,EAAGZ,IAAK,CAE1B,IAAI6lG,EAAS7lG,EACT8lG,EAAQ9nG,KAAKC,IAAI2nG,EAAI5lG,GAAGA,IAC5B,IAAK,IAAI8hC,EAAI9hC,EAAI,EAAG8hC,EAAIlhC,EAAGkhC,IAAK,CAC9B,MAAMikE,EAAW/nG,KAAKC,IAAI2nG,EAAI9jE,GAAG9hC,IAC7B+lG,EAAWD,IACbA,EAAQC,EACRF,EAAS/jE,EAEb,CAEA,GAAc,IAAVgkE,EACF,OAAO,KAIT,MAAM/rE,EAAM6rE,EAAIC,GAChBD,EAAIC,GAAUD,EAAI5lG,GAClB4lG,EAAI5lG,GAAK+5B,EAGT,IAAK,IAAI5wB,EAAInJ,EAAI,EAAGmJ,EAAIvI,EAAGuI,IAAK,CAC9B,MAAM68F,GAAQJ,EAAIz8F,GAAGnJ,GAAK4lG,EAAI5lG,GAAGA,GACjC,IAAK,IAAI2nD,EAAI3nD,EAAG2nD,EAAI/mD,EAAI,EAAG+mD,IACrB3nD,GAAK2nD,EACPi+C,EAAIz8F,GAAGw+C,GAAK,EAEZi+C,EAAIz8F,GAAGw+C,IAAMq+C,EAAOJ,EAAI5lG,GAAG2nD,EAGjC,CACF,CAGA,MAAMppC,EAAI,IAAI/a,MAAM5C,GACpB,IAAK,IAAI4jB,EAAI5jB,EAAI,EAAG4jB,GAAK,EAAGA,IAAK,CAC/BjG,EAAEiG,GAAKohF,EAAIphF,GAAG5jB,GAAKglG,EAAIphF,GAAGA,GAC1B,IAAK,IAAI3a,EAAI2a,EAAI,EAAG3a,GAAK,EAAGA,IAC1B+7F,EAAI/7F,GAAGjJ,IAAMglG,EAAI/7F,GAAG2a,GAAKjG,EAAEiG,EAE/B,CACA,OAAOjG,CACT,CAQO,SAASsoB,EAAUo/D,GACxB,OAAyB,IAAjBA,EAAwBjoG,KAAKuyB,EACvC,CAQO,SAASmW,EAAUw/D,GACxB,OAAQA,EAAiBloG,KAAKuyB,GAAM,GACtC,CASO,SAASsa,EAAO7gC,EAAGC,GACxB,MAAM63B,EAAI93B,EAAIC,EACd,OAAO63B,EAAI73B,EAAI,EAAI63B,EAAI73B,EAAI63B,CAC7B,CAUO,SAASq0B,EAAKnsD,EAAGC,EAAGsU,GACzB,OAAOvU,EAAIuU,GAAKtU,EAAID,EACtB,CAQO,SAASi3B,EAAQrgC,EAAG+uD,GACzB,MAAMpV,EAASv8C,KAAKyjC,IAAI,GAAIkuB,GAC5B,OAAO3xD,KAAKq9B,MAAMz6B,EAAI25C,GAAUA,CAClC,CAoBO,SAASpqB,EAAMvvB,EAAG+uD,GACvB,OAAO3xD,KAAKmyB,MAAM8Q,EAAQrgC,EAAG+uD,GAC/B,CASO,SAAS3I,EAAKpmD,EAAG+uD,GACtB,OAAO3xD,KAAKgpD,KAAK/lB,EAAQrgC,EAAG+uD,GAC9B,CASO,SAASlpB,EAAK7lC,EAAGuF,EAAKE,GAC3B,GAAIzF,GAAKuF,GAAOvF,EAAIyF,EAClB,OAAOzF,EAET,MAAMytE,EAAQhoE,EAAMF,EACpB,QAAWvF,EAAIuF,GAAOkoE,EAASA,GAASA,EAASloE,CACnD,C,mMC7EA,IAAIggG,EAAW,EACR,MACMC,EAAc,GAAKD,IACnBE,EAAa,GAAKF,IAClBG,EAAa,GAAKH,IAClBI,EAAY,GAAKJ,IACjBK,EAAkB,GAAKL,IACvBM,EAAW,GAAKN,IAChBO,EAAU1oG,KAAKyjC,IAAI,EADH0kE,GACkB,EAEzCQ,EAAY,CAChB,CAACP,GAAc,UACf,CAACC,GAAa,SACd,CAACC,GAAa,SACd,CAACC,GAAY,QACb,CAACC,GAAkB,WACnB,CAACC,GAAW,QAGRG,EAAajqG,OAAO2uB,KAAKq7E,GAAWluG,IAAImmB,QAAQ7U,KAAKqwE,EAAAA,IAepD,SAASysB,EAASruG,GACvB,MAAMsuG,EAAQ,GACd,IAAK,MAAMC,KAAaH,EAClBI,EAAaxuG,EAAMuuG,IACrBD,EAAMppG,KAAKipG,EAAUI,IAGzB,OAAqB,IAAjBD,EAAM9pG,OACD,UAEL8pG,EAAM9pG,OAAS,EACV8pG,EAAM5pE,KAAK,QAEb4pE,EAAMnjG,MAAM,GAAI,GAAGu5B,KAAK,MAAQ,QAAU4pE,EAAMA,EAAM9pG,OAAS,EACxE,CAOO,SAASgqG,EAAaC,EAAOC,GAClC,OAAQD,EAAQC,KAAcA,CAChC,CAgBO,SAASC,EAAO3uG,EAAM4uG,GAC3B,OAAO5uG,IAAS4uG,CAClB,CAMO,MAAMC,EAKX9uG,WAAAA,CAAYC,EAAM+E,GAChB,IA9DJ,SAAoB/E,GAClB,OAAOA,KAAQmuG,CACjB,CA4DSW,CAAW9uG,GACd,MAAM,IAAI21B,MAAM,sDAADhJ,OACyC0hF,EAASruG,KAGnEI,KAAKJ,KAAOA,EACZI,KAAK2E,MAAQA,CACf,EAGK,MAAMgqG,EAMXhvG,WAAAA,CAAYC,EAAMgvG,GAChB5uG,KAAKJ,KAAOA,EACZI,KAAK4uG,SAAWA,EAAS,QAAAC,EAAAhpE,UAAAzhC,OAFIsgE,EAAI,IAAA95D,MAAAikG,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJpqC,EAAIoqC,EAAA,GAAAjpE,UAAAipE,GAGjC9uG,KAAK0kE,KAAOA,CACd,EAmBK,SAASqqC,IACd,MAAO,CACLC,UAAW,IAAI9xE,IACf+pB,WAAY,IAAI/pB,IAChB5N,WAAW,EACXgoC,cAAc,EACd23C,UAAU,EAEd,CAYO,SAASr3C,EAAMs3C,EAASC,EAAcznE,GAC3C,cAAewnE,GACb,IAAK,UACH,GAAIX,EAAOY,EAAczB,GACvB,OAAO,IAAIe,EAAkBf,EAAYwB,EAAU,OAAS,SAE9D,IAAKd,EAAae,EAAc3B,GAC9B,MAAM,IAAIj4E,MAAM,+BAADhJ,OACkB0hF,EAASkB,KAG5C,OAAO,IAAIV,EAAkBjB,EAAa0B,GAE5C,IAAK,SACH,GAAIX,EAAOY,EAActB,GACvB,OAAO,IAAIY,EAAkBZ,GAAUjrF,EAAAA,EAAAA,IAAOssF,IAEhD,GAAIX,EAAOY,EAAc3B,GACvB,OAAO,IAAIiB,EAAkBjB,IAAe0B,GAE9C,GAAIX,EAAOY,EAAczB,GACvB,OAAO,IAAIe,EAAkBf,EAAYwB,EAAQp2F,YAEnD,IAAKs1F,EAAae,EAAc1B,GAC9B,MAAM,IAAIl4E,MAAM,8BAADhJ,OAA+B0hF,EAASkB,KAEzD,OAAO,IAAIV,EAAkBhB,EAAYyB,GAE3C,IAAK,SACH,GAAIX,EAAOY,EAAcxB,GACvB,OAAO,IAAIc,EAAkBd,GAAWyB,EAAAA,EAAAA,IAAgBF,IAE1D,GAAIX,EAAOY,EAAc3B,GACvB,OAAO,IAAIiB,EAAkBjB,IAAe0B,GAE9C,IAAKd,EAAae,EAAczB,GAC9B,MAAM,IAAIn4E,MAAM,8BAADhJ,OAA+B0hF,EAASkB,KAEzD,OAAO,IAAIV,EAAkBf,EAAYwB,GAO7C,IAAKtkG,MAAMC,QAAQqkG,GACjB,MAAM,IAAI35E,MAAM,oDAGlB,GAAuB,IAAnB25E,EAAQ9qG,OACV,MAAM,IAAImxB,MAAM,oBAGlB,GAA0B,kBAAf25E,EAAQ,GACjB,OAyqBJ,SAA6BA,EAASG,EAAY3nE,GAChD,MAAMknE,EAAWM,EAAQ,GAEnBI,EAASC,GAAQX,GACvB,IAAKU,EACH,MAAM,IAAI/5E,MAAM,qBAADhJ,OAAsBqiF,IAEvC,OAAOU,EAAOJ,EAASG,EAAY3nE,EACrC,CAjrBW8nE,CAAoBN,EAASC,EAAcznE,GAGpD,IAAK,MAAMrc,KAAQ6jF,EACjB,GAAoB,kBAAT7jF,EACT,MAAM,IAAIkK,MAAM,gCAIpB,GAAIg5E,EAAOY,EAActB,GAAW,CAClC,GAAuB,IAAnBqB,EAAQ9qG,OACV,MAAM,IAAImxB,MAAM,mDAADhJ,OACsC2iF,EAAQ9qG,SAG/D,OAAO,IAAIqqG,EAAkBZ,EAAUqB,EACzC,CAEA,GAAIX,EAAOY,EAAcxB,GAAY,CACnC,GAAuB,IAAnBuB,EAAQ9qG,OACV,OAAO,IAAIqqG,EAAkBd,EAAW,IAAIuB,EAAS,IAEvD,GAAuB,IAAnBA,EAAQ9qG,OACV,OAAO,IAAIqqG,EAAkBd,EAAWuB,GAE1C,MAAM,IAAI35E,MAAM,uDAADhJ,OAC0C2iF,EAAQ9qG,QAEnE,CAEA,IAAKgqG,EAAae,EAAcvB,GAC9B,MAAM,IAAIr4E,MAAM,yCAADhJ,OAC4B0hF,EAASkB,KAItD,OAAO,IAAIV,EAAkBb,EAAiBsB,EAChD,CAKO,MAAMO,EACN,MADMA,EAEN,MAFMA,EAGH,SAHGA,EAIG,gBAJHA,EAKC,cALDA,EAMN,MANMA,EAON,MAPMA,EAQN,IARMA,EASC,aATDA,EAUL,OAVKA,EAWL,OAXKA,EAYJ,KAZIA,EAaD,KAbCA,EAcE,IAdFA,EAeW,KAfXA,EAgBD,IAhBCA,EAiBQ,KAjBRA,EAkBD,IAlBCA,EAmBH,IAnBGA,EAoBN,IApBMA,EAqBD,IArBCA,EAsBJ,QAtBIA,EAuBN,IAvBMA,EAwBN,IAxBMA,EAyBN,MAzBMA,EA0BJ,QA1BIA,EA2BL,OA3BKA,EA4BJ,QA5BIA,EA6BN,MA7BMA,EA8BN,MA9BMA,GA+BL,OA/BKA,GAgCL,OAhCKA,GAiCJ,QAjCIA,GAkCF,UAlCEA,GAmCE,cAnCFA,GAoCD,WApCCA,GAqCL,OArCKA,GAsCP,KAtCOA,GAuCH,SAvCGA,GAwCH,SAxCGA,GAyCJ,QAzCIA,GA0CJ,QA1CIA,GA2CP,KA3COA,GA4CL,OA5CKA,GA6CF,UA7CEA,GA8CD,YA9CCA,GA+CN,MAYDF,GAAU,CACd,CAACE,GAAUC,GAA2BC,GAAa,EAAGhqG,KAAWiqG,IACjE,CAACH,GAAUC,GAA2BC,GAAa,EAAG,IA0MxD,SAAqBT,EAASG,EAAY3nE,GACxC,MAAMmgB,EAAOqnD,EAAQ,GACrB,GAAoB,kBAATrnD,EACT,MAAM,IAAItyB,MAAM,gDAIlB,OAFAmS,EAAQsnE,UAAU7mF,IAAI0/B,GAEf,CAAC,IAAI4mD,EAAkBf,EAAY7lD,GAC5C,IAjNE,CAAC4nD,IAAUC,GAA2BC,GAAa,EAAGhqG,KAAWiqG,IACjE,CAACH,IAASC,IAqNZ,SAAuBR,EAASG,EAAY3nE,GAC1CA,EAAQpY,WAAY,CACtB,GAvNsDugF,IACpD,CAACJ,GAAaC,GACZC,GAAa,EAAGhqG,KAChBmqG,GAAepC,IAEjB,CAAC+B,GAAmBC,IAuNtB,SAA0BR,EAASG,EAAY3nE,GAC7CA,EAAQ4vB,cAAe,CACzB,GAzNmEu4C,IACjE,CAACJ,GAAiBC,GAA2BG,IAC7C,CAACJ,GAAiBC,GAA2BK,GAAcF,IAC3D,CAACJ,GAAWC,GAA2BK,GAAcF,IACrD,CAACJ,GAAWC,GAA2BK,GAAcF,IACrD,CAACJ,GAAUC,GACTC,GAAa,EAAGhqG,KAChBmqG,GAAetC,IAEjB,CAACiC,GAAUC,GACTC,GAAa,EAAGhqG,KAChBmqG,GAAetC,IAEjB,CAACiC,GAAUC,GACTC,GAAa,EAAG,GAChBG,GAAetC,IAEjB,CAACiC,GAAYC,GACXC,GAAa,EAAG,GAChBG,GAAehC,IAEjB,CAAC2B,GAAeC,GACdC,GAAa,EAAG,GAChBG,GAAehC,IAEjB,CAAC2B,GAAkBC,GACjBC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAA2BC,GAC1BC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAeC,GACdC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAwBC,GACvBC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAeC,GACdC,GAAa,EAAGhqG,KAChBqqG,IAEF,CAACP,IAAeC,GACdC,GAAa,EAAGhqG,KAChBqqG,IAEF,CAACP,GAAaC,GACZC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAUC,GACTC,GAAa,EAAGhqG,KAChBmqG,GAAerC,IAEjB,CAACgC,GAAeC,GACdC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,GAAUC,GACTC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,IAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,IAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,IAAYC,GACXC,GAAa,EAAGhqG,KAChBsqG,IA8NJ,SAAuBf,EAASG,EAAY3nE,GAC1C,MAAMwoE,EAAYhB,EAAQ9qG,OAAS,EAE7B+rG,EAAYzC,EAAaD,EAAaD,EAEtC7iE,EAAQitB,EAAMs3C,EAAQ,GAAIiB,EAAWzoE,GAErC0oE,EAAWx4C,EAAMs3C,EAAQA,EAAQ9qG,OAAS,GAAIirG,EAAY3nE,GAE1Dg9B,EAAO,IAAI95D,MAAMslG,EAAY,GACnC,IAAK,IAAI9oG,EAAI,EAAGA,EAAI8oG,EAAY,EAAG9oG,GAAK,EAAG,CACzC,IACE,MAAMy9B,EAAQ+yB,EAAMs3C,EAAQ9nG,EAAI,GAAIujC,EAAM/qC,KAAM8nC,GAChDg9B,EAAKt9D,GAAKy9B,CACZ,CAAE,MAAOmB,GACP,MAAM,IAAIzQ,MAAM,4BAADhJ,OACenlB,EAAI,EAAC,0BAAAmlB,OAAyByZ,EAAIqqE,SAElE,CACA,IACE,MAAM3nE,EAASkvB,EAAMs3C,EAAQ9nG,EAAI,GAAIgpG,EAASxwG,KAAM8nC,GACpDg9B,EAAKt9D,EAAI,GAAKshC,CAChB,CAAE,MAAO1C,GACP,MAAM,IAAIzQ,MAAM,4BAADhJ,OACenlB,EAAI,EAAC,0BAAAmlB,OAAyByZ,EAAIqqE,SAElE,CACF,CAEA,MAAO,CAAC1lE,KAAU+5B,EAAM0rC,EAC1B,IAzPE,CAACX,IAAcC,GACbC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,IAAkBC,GACjBC,GAAa,EAAGhqG,KAChBsqG,IAwPJ,SAA6Bf,EAASG,EAAY3nE,GAChD,MAAM4oE,EAAoBpB,EAAQ,GAIlC,IAAIqB,EACJ,OAAQD,EAAkB,IACxB,IAAK,SACHC,EAAO,EACP,MACF,IAAK,cACH,MAAMl/F,EAAIi/F,EAAkB,GAC5B,GAAiB,kBAANj/F,GAAkBA,GAAK,EAChC,MAAM,IAAIkkB,MACR,gEAAAhJ,OACWorC,KAAKO,UAAU7mD,GAAE,aAGhCk/F,EAAOl/F,EACP,MACF,QACE,MAAM,IAAIkkB,MAAM,+BAADhJ,OACkBorC,KAAKO,UAAUo4C,KAIpD,MAAME,EAAgB,IAAI/B,EAAkBhB,EAAY8C,GAExD,IAAI5lE,EACJ,IACEA,EAAQitB,EAAMs3C,EAAQ,GAAIzB,EAAY/lE,EACxC,CAAE,MAAO1B,GACP,MAAM,IAAIzQ,MAAM,yDAADhJ,OAC4CyZ,EAAIqqE,SAEjE,CAEA,MAAM3rC,EAAO,IAAI95D,MAAMskG,EAAQ9qG,OAAS,GACxC,IAAK,IAAIgD,EAAI,EAAGA,EAAIs9D,EAAKtgE,OAAQgD,GAAK,EAAG,CACvC,IACE,MAAMqpG,EAAO74C,EAAMs3C,EAAQ9nG,EAAI,GAAIqmG,EAAY/lE,GAC/Cg9B,EAAKt9D,GAAKqpG,CACZ,CAAE,MAAOzqE,GACP,MAAM,IAAIzQ,MAAM,4BAADhJ,OACenlB,EAAI,EAAC,iCAAAmlB,OAAgCyZ,EAAIqqE,SAEzE,CACA,IACE,MAAM3nE,EAASkvB,EAAMs3C,EAAQ9nG,EAAI,GAAIioG,EAAY3nE,GACjDg9B,EAAKt9D,EAAI,GAAKshC,CAChB,CAAE,MAAO1C,GACP,MAAM,IAAIzQ,MAAM,4BAADhJ,OACenlB,EAAI,EAAC,iCAAAmlB,OAAgCyZ,EAAIqqE,SAEzE,CACF,CAEA,MAAO,CAACG,EAAe7lE,KAAU+5B,EACnC,IA/SE,CAAC+qC,IAAWC,GACVC,GAAa,EAAGhqG,MAuLpB,SAAoBupG,EAASG,EAAY3nE,GACvC,MAAMgpE,EAAYxB,EAAQ,GACpByB,EAAWzB,EAAQ9qG,OAAS,EAClC,GAAIusG,EAAW,IAAM,EACnB,MAAM,IAAIp7E,MAAM,2CAADhJ,OAC8BmkF,EAAS,UAAAnkF,OAASokF,EAAQ,YAG3E,IAoHA,SAAsBzB,EAASG,EAAY3nE,GACzC,MAAM0oE,EAAWx4C,EAAMs3C,EAAQA,EAAQ9qG,OAAS,GAAIirG,EAAY3nE,GAE1Dg9B,EAAO,IAAI95D,MAAMskG,EAAQ9qG,OAAS,GACxC,IAAK,IAAIgD,EAAI,EAAGA,EAAIs9D,EAAKtgE,OAAS,EAAGgD,GAAK,EAAG,CAC3C,IACE,MAAMs3C,EAAYkZ,EAAMs3C,EAAQ9nG,EAAI,GAAIomG,EAAa9lE,GACrDg9B,EAAKt9D,GAAKs3C,CACZ,CAAE,MAAO1Y,GACP,MAAM,IAAIzQ,MAAM,4BAADhJ,OACenlB,EAAC,yBAAAmlB,OAAwByZ,EAAIqqE,SAE7D,CACA,IACE,MAAM3nE,EAASkvB,EAAMs3C,EAAQ9nG,EAAI,GAAIgpG,EAASxwG,KAAM8nC,GACpDg9B,EAAKt9D,EAAI,GAAKshC,CAChB,CAAE,MAAO1C,GACP,MAAM,IAAIzQ,MAAM,4BAADhJ,OACenlB,EAAI,EAAC,yBAAAmlB,OAAwByZ,EAAIqqE,SAEjE,CACF,CAGA,OADA3rC,EAAKA,EAAKtgE,OAAS,GAAKgsG,EACjB1rC,CACT,IAxUE,CAAC+qC,IAASC,GAA2BC,GAAa,EAAG,IA6UvD,SAAoBT,EAASG,EAAY3nE,GACvC,IASIkpE,EATAjX,EAAWuV,EAAQ,GACvB,IAAKtkG,MAAMC,QAAQ8uF,GACjB,MAAM,IAAIpkE,MAAM,8DAQlB,GAA2B,kBAAhBokE,EAAS,GAAiB,CACnC,GAAoB,YAAhBA,EAAS,GACX,MAAM,IAAIpkE,MAAM,oHAIlB,IAAK3qB,MAAMC,QAAQ8uF,EAAS,IAC1B,MAAM,IAAIpkE,MAAM,sFAIlBokE,EAAWA,EAAS,GACpBiX,EAAalD,CACf,MACEkD,EAAanD,EAGf,MAAM/oC,EAAO,IAAI95D,MAAM+uF,EAASv1F,QAChC,IAAK,IAAIgD,EAAI,EAAGA,EAAIs9D,EAAKtgE,OAAQgD,IAC/B,IACE,MAAMypG,EAAMj5C,EAAM+hC,EAASvyF,GAAIwpG,EAAYlpE,GAC3Cg9B,EAAKt9D,GAAKypG,CACZ,CAAE,MAAO7qE,GACP,MAAM,IAAIzQ,MAAM,iCAADhJ,OACoBnlB,EAAC,0BAAAmlB,OAAyByZ,EAAIqqE,SAEnE,CAIF,MAAO,CADQz4C,EAAMs3C,EAAQ,GAAI0B,EAAYlpE,MAC1Bg9B,EACrB,IAtXE,CAAC+qC,IAAaC,GACZC,GAAa,EAAGhqG,KAChBmqG,GAAehC,IAEjB,CAAC2B,IAAaC,GACZC,GAAa,EAAGhqG,KAChBmqG,GAAehC,IAEjB,CAAC2B,IAAYC,GACXC,GAAa,EAAGhqG,KAChBmqG,GAAerC,IAEjB,CAACgC,IAAYC,GACXC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,IAAWC,GACVC,GAAa,EAAG,GAChBG,GAAerC,IAEjB,CAACgC,IAAcC,GACbC,GAAa,EAAG,IAsWpB,SAAyBT,EAASG,EAAY3nE,GAC5C,IAAI1gC,EACJ,IACEA,EAAQ4wD,EAAMs3C,EAAQ,GAAIzB,EAAY/lE,EACxC,CAAE,MAAO1B,GACP,MAAM,IAAIzQ,MAAM,yDAADhJ,OAC4CyZ,EAAIqqE,SAEjE,CACA,MAAMS,EAAS5B,EAAQ,GACvB,IAAKtkG,MAAMC,QAAQimG,GACjB,MAAM,IAAIv7E,MAAM,mDAElB,MAAMw7E,EAAe,IAAInmG,MAAMkmG,EAAO1sG,QACtC,IAAK,IAAIgD,EAAI,EAAGA,EAAI2pG,EAAa3sG,OAAQgD,IAAK,CAC5C,IAAIwhB,EACJ,IACEA,EAAQgvC,EAAMk5C,EAAO1pG,GAAIumG,EAAWjmE,EACtC,CAAE,MAAO1B,GACP,MAAM,IAAIzQ,MAAM,kCAADhJ,OACqBnlB,EAAC,4BAAAmlB,OAA2ByZ,EAAIqqE,SAEtE,CACA,KAAMznF,aAAiB6lF,GACrB,MAAM,IAAIl5E,MAAM,8BAADhJ,OACiBnlB,EAAC,6BAGnC2pG,EAAa3pG,GAAKwhB,CACpB,CACA,MAAO,CAAC5hB,KAAU+pG,EACpB,IAlYE,CAACtB,IAAeC,GACdC,GAAa,EAAG,GAChBG,GAAetC,EAAcC,EAAaC,EAAaC,KAc3D,SAASiC,GAAYV,EAASG,EAAY3nE,GACxC,MAAMwoE,EAAYhB,EAAQ9qG,OAAS,EAC7BsgE,EAAO,IAAI95D,MAAMslG,GACvB,IAAK,IAAI9oG,EAAI,EAAGA,EAAI8oG,IAAa9oG,EAAG,CAClC,MAAMG,EAAM2nG,EAAQ9nG,EAAI,GACxB,cAAeG,GACb,IAAK,SACHm9D,EAAKt9D,GAAK,IAAIqnG,EAAkBhB,EAAYlmG,GAC5C,MAEF,IAAK,SACHm9D,EAAKt9D,GAAK,IAAIqnG,EAAkBf,EAAYnmG,GAC5C,MAEF,QACE,MAAM,IAAIguB,MAAM,yEAADhJ,OAC4DhlB,IAIrE,IAANH,GACFsgC,EAAQuf,WAAW9+B,IAAI2G,OAAOvnB,GAElC,CACA,OAAOm9D,CACT,CAgCA,SAASqrC,GAAab,EAASG,EAAY3nE,GACzCA,EAAQunE,UAAW,CACrB,CAKA,SAASY,GAAWX,EAASG,EAAY3nE,GACvC,MAAMgpE,EAAYxB,EAAQ,GAC1B,GAAuB,IAAnBA,EAAQ9qG,OACV,MAAM,IAAImxB,MAAM,6BAADhJ,OAA8BmkF,EAAS,eAExD,MAAO,EACT,CAOA,SAASf,GAAaqB,EAASC,GAC7B,OAAO,SAAU/B,EAASG,EAAY3nE,GACpC,MAAMgpE,EAAYxB,EAAQ,GACpByB,EAAWzB,EAAQ9qG,OAAS,EAClC,GAAI4sG,IAAYC,GACd,GAAIN,IAAaK,EAAS,CACxB,MAAME,EAAqB,IAAZF,EAAgB,GAAK,IACpC,MAAM,IAAIz7E,MAAM,YAADhJ,OACDykF,EAAO,aAAAzkF,OAAY2kF,EAAM,SAAA3kF,OAAQmkF,EAAS,UAAAnkF,OAASokF,GAEnE,OACK,GAAIA,EAAWK,GAAWL,EAAWM,EAAS,CACnD,MAAMx7B,EACJw7B,IAAYtrG,IAAQ,GAAA4mB,OACbykF,EAAO,eAAAzkF,OACPykF,EAAO,QAAAzkF,OAAO0kF,GACvB,MAAM,IAAI17E,MAAM,YAADhJ,OACDkpD,EAAK,mBAAAlpD,OAAkBmkF,EAAS,UAAAnkF,OAASokF,GAEzD,CACF,CACF,CAKA,SAASX,GAAqBd,EAASG,EAAY3nE,GACjD,MAAMipE,EAAWzB,EAAQ9qG,OAAS,EAI5BsgE,EAAO,IAAI95D,MAAM+lG,GACvB,IAAK,IAAIvpG,EAAI,EAAGA,EAAIupG,IAAYvpG,EAAG,CACjC,MAAM+pG,EAAav5C,EAAMs3C,EAAQ9nG,EAAI,GAAIioG,EAAY3nE,GACrDg9B,EAAKt9D,GAAK+pG,CACZ,CACA,OAAOzsC,CACT,CAMA,SAASorC,GAAesB,GACtB,OAAO,SAAUlC,EAASG,EAAY3nE,GACpC,MAAMipE,EAAWzB,EAAQ9qG,OAAS,EAI5BsgE,EAAO,IAAI95D,MAAM+lG,GACvB,IAAK,IAAIvpG,EAAI,EAAGA,EAAIupG,IAAYvpG,EAAG,CACjC,MAAM+pG,EAAav5C,EAAMs3C,EAAQ9nG,EAAI,GAAIgqG,EAAS1pE,GAClDg9B,EAAKt9D,GAAK+pG,CACZ,CACA,OAAOzsC,CACT,CACF,CAkBA,SAASurC,GAAYf,EAASG,EAAY3nE,GACxC,MAAMgpE,EAAYxB,EAAQ,GACpByB,EAAWzB,EAAQ9qG,OAAS,EAClC,GAAIusG,EAAW,IAAM,EACnB,MAAM,IAAIp7E,MAAM,sDAADhJ,OACyCmkF,EAAS,UAAAnkF,OAASokF,EAAQ,YAGtF,CA0NA,SAASjB,KAA0C,QAAA2B,EAAAxrE,UAAAzhC,OAAZktG,EAAU,IAAA1mG,MAAAymG,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVD,EAAUC,GAAA1rE,UAAA0rE,GAC/C,OAAO,SAAUrC,EAASG,EAAY3nE,GACpC,MAAMknE,EAAWM,EAAQ,GAKzB,IAAIxqC,EACJ,IAAK,IAAIt9D,EAAI,EAAGA,EAAIkqG,EAAWltG,OAAQgD,IAAK,CAC1C,MAAMoqG,EAASF,EAAWlqG,GAAG8nG,EAASG,EAAY3nE,GAClD,GAAItgC,GAAKkqG,EAAWltG,OAAS,EAAG,CAC9B,IAAKotG,EACH,MAAM,IAAIj8E,MACR,8DAGJmvC,EAAO8sC,CACT,CACF,CACA,OAAO,IAAI7C,EAAeU,EAAYT,KAAalqC,EACrD,CACF,CAuBO,SAAS+sC,GAAoBliG,GAClC,IAAKA,EACH,MAAO,GAET,MAAM3P,EAAO2P,EAASuX,UACtB,OAAQlnB,GACN,IAAK,QACL,IAAK,aACL,IAAK,UACH,OAAOA,EACT,IAAK,aACL,IAAK,kBACL,IAAK,eACH,OAAsDA,EAAKinC,UAAU,GACvE,IAAK,SACH,MAAO,UACT,IAAK,qBACH,OAAO4qE,GAEHliG,EACA+lD,gBAAgB,IAEtB,QACE,MAAO,GAEb,CC58BO,SAASo8C,GAAgBxC,EAAStvG,EAAM8nC,GAE7C,OAAOiqE,GADY/5C,EAAMs3C,EAAStvG,EAAM8nC,GACHA,EACvC,CAOA,SAASiqE,GAAkBR,EAAYzpE,GACrC,GAAIypE,aAAsB1C,EAAmB,CAE3C,GAAI0C,EAAWvxG,OAAS+tG,GAAyC,kBAArBwD,EAAWxsG,MAAoB,CACzE,MAAMitG,GAAaloE,EAAAA,EAAAA,IAAWynE,EAAWxsG,OACzC,OAAO,WACL,OAAOitG,CACT,CACF,CACA,OAAO,WACL,OAAOT,EAAWxsG,KACpB,CACF,CACA,MAAMiqG,EAAWuC,EAAWvC,SAC5B,OAAQA,GACN,KAAKa,GACL,KAAKA,GACL,KAAKA,GACH,OAmFN,SAAoC0B,EAAYzpE,GAC9C,MAAM9nC,EAAOuxG,EAAWvC,SAClBxqG,EAAS+sG,EAAWzsC,KAAKtgE,OAEzBsgE,EAAO,IAAI95D,MAAMxG,GACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5Bs9D,EAAKt9D,GAAKuqG,GAAkBR,EAAWzsC,KAAKt9D,GAAIsgC,GAElD,OAAQ9nC,GACN,KAAK6vG,GACH,OAAQ/nE,IACN,IAAK,IAAItgC,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAC/B,MAAMzC,EAAQ+/D,EAAKt9D,GAAGsgC,GACtB,GAAqB,qBAAV/iC,GAAmC,OAAVA,EAClC,OAAOA,CAEX,CACA,MAAM,IAAI4wB,MAAM,8CAGpB,KAAKk6E,GACL,KAAKA,GACH,OAAQ/nE,IACN,IAAK,IAAItgC,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAC/B,MAAMzC,EAAQ+/D,EAAKt9D,GAAGsgC,GACtB,UAAW/iC,IAAU/E,EACnB,OAAO+E,CAEX,CACA,MAAM,IAAI4wB,MAAM,sCAADhJ,OAAuC3sB,KAG1D,QACE,MAAM,IAAI21B,MAAM,kCAADhJ,OAAmC3sB,IAGxD,CAvHaiyG,CAA2BV,EAAYzpE,GAEhD,KAAK+nE,EACL,KAAKA,EACL,KAAKA,GACH,OAyHN,SAAmC0B,GACjC,MAAMW,EAAmDX,EAAWzsC,KAAK,GACnE7c,EAA8BiqD,EAAentG,MACnD,OAAQwsG,EAAWvC,UACjB,KAAKa,EACH,OAAQ/nE,IACN,MAAMg9B,EAAOysC,EAAWzsC,KACxB,IAAI//D,EAAQ+iC,EAAQuf,WAAWY,GAC/B,IAAK,IAAIzgD,EAAI,EAAGwE,EAAK84D,EAAKtgE,OAAQgD,EAAIwE,IAAMxE,EAAG,CAG7CzC,EAAQA,EAFgD+/D,EAAKt9D,GACLzC,MAE1D,CACA,OAAOA,GAGX,KAAK8qG,EACH,OAAQ/nE,GAAYA,EAAQsnE,UAAUnnD,GAExC,KAAK4nD,GACH,OAAQ/nE,IACN,MAAMg9B,EAAOysC,EAAWzsC,KACxB,KAAM7c,KAAQngB,EAAQuf,YACpB,OAAO,EAET,IAAItiD,EAAQ+iC,EAAQuf,WAAWY,GAC/B,IAAK,IAAIzgD,EAAI,EAAGwE,EAAK84D,EAAKtgE,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MACMG,EADkDm9D,EAAKt9D,GACLzC,MACxD,IAAKA,IAAUZ,OAAOguG,OAAOptG,EAAO4C,GAClC,OAAO,EAET5C,EAAQA,EAAM4C,EAChB,CACA,OAAO,GAGX,QACE,MAAM,IAAIguB,MAAM,iCAADhJ,OAAkC4kF,EAAWvC,WAGlE,CAlKaoD,CAA0Bb,GAEnC,KAAK1B,GACH,OAAQ/nE,GAAYA,EAAQpY,UAE9B,KAAKmgF,EACH,OAAQ/nE,GAAYA,EAAQ4vB,aAE9B,KAAKm4C,EAAY,CACf,MAAM/qC,EAAOysC,EAAWzsC,KAAK7kE,KAAKgvD,GAAM8iD,GAAkB9iD,EAAGnnB,KAC7D,OAAQA,GACN,GAAGnb,UAAUm4C,EAAK7kE,KAAKgxG,GAAQA,EAAInpE,GAAS5uB,aAChD,CACA,KAAK22F,EACH,OAAQ/nE,GAAYA,EAAQj5B,WAE9B,KAAKghG,EACL,KAAKA,EACL,KAAKA,GACL,KAAKA,GACL,KAAKA,EACH,OAsLN,SAAkC0B,EAAYzpE,GAC5C,MAAMuqE,EAAKd,EAAWvC,SAChBxqG,EAAS+sG,EAAWzsC,KAAKtgE,OAEzBsgE,EAAO,IAAI95D,MAAMxG,GACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5Bs9D,EAAKt9D,GAAKuqG,GAAkBR,EAAWzsC,KAAKt9D,GAAIsgC,GAElD,OAAQuqE,GACN,KAAKxC,EACH,OAAQ/nE,IACN,IAAK,IAAItgC,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5B,GAAIs9D,EAAKt9D,GAAGsgC,GACV,OAAO,EAGX,OAAO,GAGX,KAAK+nE,EACH,OAAQ/nE,IACN,IAAK,IAAItgC,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5B,IAAKs9D,EAAKt9D,GAAGsgC,GACX,OAAO,EAGX,OAAO,GAGX,KAAK+nE,GACH,OAAQ/nE,IACN,MAAM/iC,EAAQ+/D,EAAK,GAAGh9B,GAChBn6B,EAAMm3D,EAAK,GAAGh9B,GACdj6B,EAAMi3D,EAAK,GAAGh9B,GACpB,OAAO/iC,GAAS4I,GAAO5I,GAAS8I,GAGpC,KAAKgiG,GACH,OAAQ/nE,IACN,MAAM/iC,EAAQ+/D,EAAK,GAAGh9B,GACtB,IAAK,IAAItgC,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5B,GAAIzC,IAAU+/D,EAAKt9D,GAAGsgC,GACpB,OAAO,EAGX,OAAO,GAGX,KAAK+nE,EACH,OAAQ/nE,IAAag9B,EAAK,GAAGh9B,GAE/B,QACE,MAAM,IAAInS,MAAM,gCAADhJ,OAAiC0lF,IAGtD,CA7OaC,CAAyBf,EAAYzpE,GAE9C,KAAK+nE,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACH,OA4IN,SAAqC0B,EAAYzpE,GAC/C,MAAMuqE,EAAKd,EAAWvC,SAChB9zF,EAAO62F,GAAkBR,EAAWzsC,KAAK,GAAIh9B,GAC7C5N,EAAQ63E,GAAkBR,EAAWzsC,KAAK,GAAIh9B,GACpD,OAAQuqE,GACN,KAAKxC,EACH,OAAQ/nE,GAAY5sB,EAAK4sB,KAAa5N,EAAM4N,GAE9C,KAAK+nE,EACH,OAAQ/nE,GAAY5sB,EAAK4sB,KAAa5N,EAAM4N,GAE9C,KAAK+nE,EACH,OAAQ/nE,GAAY5sB,EAAK4sB,GAAW5N,EAAM4N,GAE5C,KAAK+nE,EACH,OAAQ/nE,GAAY5sB,EAAK4sB,IAAY5N,EAAM4N,GAE7C,KAAK+nE,EACH,OAAQ/nE,GAAY5sB,EAAK4sB,GAAW5N,EAAM4N,GAE5C,KAAK+nE,EACH,OAAQ/nE,GAAY5sB,EAAK4sB,IAAY5N,EAAM4N,GAE7C,QACE,MAAM,IAAInS,MAAM,mCAADhJ,OAAoC0lF,IAGzD,CAvKaE,CAA4BhB,EAAYzpE,GAEjD,KAAK+nE,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,EACL,KAAKA,GACL,KAAKA,GACH,OA2NN,SAAkC0B,EAAYzpE,GAC5C,MAAMuqE,EAAKd,EAAWvC,SAChBxqG,EAAS+sG,EAAWzsC,KAAKtgE,OAEzBsgE,EAAO,IAAI95D,MAAMxG,GACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5Bs9D,EAAKt9D,GAAKuqG,GAAkBR,EAAWzsC,KAAKt9D,GAAIsgC,GAElD,OAAQuqE,GACN,KAAKxC,EACH,OAAQ/nE,IACN,IAAI/iC,EAAQ,EACZ,IAAK,IAAIyC,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5BzC,GAAS+/D,EAAKt9D,GAAGsgC,GAEnB,OAAO/iC,GAGX,KAAK8qG,EACH,OAAQ/nE,GAAYg9B,EAAK,GAAGh9B,GAAWg9B,EAAK,GAAGh9B,GAEjD,KAAK+nE,EACH,OAAQ/nE,IACN,IAAI/iC,EAAQ,EACZ,IAAK,IAAIyC,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5BzC,GAAS+/D,EAAKt9D,GAAGsgC,GAEnB,OAAO/iC,GAGX,KAAK8qG,EACH,OAAQ/nE,GAAYg9B,EAAK,GAAGh9B,GAAWg9B,EAAK,GAAGh9B,GAEjD,KAAK+nE,EACH,OAAQ/nE,IACN,MAAM/iC,EAAQ+/D,EAAK,GAAGh9B,GAChBn6B,EAAMm3D,EAAK,GAAGh9B,GACpB,GAAI/iC,EAAQ4I,EACV,OAAOA,EAET,MAAME,EAAMi3D,EAAK,GAAGh9B,GACpB,OAAI/iC,EAAQ8I,EACHA,EAEF9I,GAGX,KAAK8qG,EACH,OAAQ/nE,GAAYg9B,EAAK,GAAGh9B,GAAWg9B,EAAK,GAAGh9B,GAEjD,KAAK+nE,EACH,OAAQ/nE,GAAYtiC,KAAKyjC,IAAI67B,EAAK,GAAGh9B,GAAUg9B,EAAK,GAAGh9B,IAEzD,KAAK+nE,EACH,OAAQ/nE,GAAYtiC,KAAKC,IAAIq/D,EAAK,GAAGh9B,IAEvC,KAAK+nE,EACH,OAAQ/nE,GAAYtiC,KAAKmyB,MAAMmtC,EAAK,GAAGh9B,IAEzC,KAAK+nE,EACH,OAAQ/nE,GAAYtiC,KAAKgpD,KAAKsW,EAAK,GAAGh9B,IAExC,KAAK+nE,EACH,OAAQ/nE,GAAYtiC,KAAKq9B,MAAMiiC,EAAK,GAAGh9B,IAEzC,KAAK+nE,EACH,OAAQ/nE,GAAYtiC,KAAKgxB,IAAIsuC,EAAK,GAAGh9B,IAEvC,KAAK+nE,EACH,OAAQ/nE,GAAYtiC,KAAK8wB,IAAIwuC,EAAK,GAAGh9B,IAEvC,KAAK+nE,GACH,OAAe,IAAXrrG,EACMsjC,GAAYtiC,KAAKkkC,MAAMo7B,EAAK,GAAGh9B,GAAUg9B,EAAK,GAAGh9B,IAEnDA,GAAYtiC,KAAK0lC,KAAK45B,EAAK,GAAGh9B,IAExC,KAAK+nE,GACH,OAAQ/nE,GAAYtiC,KAAKwX,KAAK8nD,EAAK,GAAGh9B,IAExC,QACE,MAAM,IAAInS,MAAM,gCAADhJ,OAAiC0lF,IAGtD,CA/SaG,CAAyBjB,EAAYzpE,GAE9C,KAAK+nE,GACH,OAmTN,SAA+B0B,EAAYzpE,GACzC,MAAMtjC,EAAS+sG,EAAWzsC,KAAKtgE,OACzBsgE,EAAO,IAAI95D,MAAMxG,GACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5Bs9D,EAAKt9D,GAAKuqG,GAAkBR,EAAWzsC,KAAKt9D,GAAIsgC,GAElD,OAAQA,IACN,IAAK,IAAItgC,EAAI,EAAGA,EAAIhD,EAAS,EAAGgD,GAAK,EAAG,CAEtC,GADkBs9D,EAAKt9D,GAAGsgC,GAExB,OAAOg9B,EAAKt9D,EAAI,GAAGsgC,EAEvB,CACA,OAAOg9B,EAAKtgE,EAAS,GAAGsjC,GAE5B,CAlUa2qE,CAAsBlB,EAAYzpE,GAE3C,KAAK+nE,GACH,OAsUN,SAAgC0B,EAAYzpE,GAC1C,MAAMtjC,EAAS+sG,EAAWzsC,KAAKtgE,OACzBsgE,EAAO,IAAI95D,MAAMxG,GACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5Bs9D,EAAKt9D,GAAKuqG,GAAkBR,EAAWzsC,KAAKt9D,GAAIsgC,GAElD,OAAQA,IACN,MAAM/iC,EAAQ+/D,EAAK,GAAGh9B,GACtB,IAAK,IAAItgC,EAAI,EAAGA,EAAIhD,EAAS,EAAGgD,GAAK,EACnC,GAAIzC,IAAU+/D,EAAKt9D,GAAGsgC,GACpB,OAAOg9B,EAAKt9D,EAAI,GAAGsgC,GAGvB,OAAOg9B,EAAKtgE,EAAS,GAAGsjC,GAE5B,CArVa4qE,CAAuBnB,EAAYzpE,GAE5C,KAAK+nE,GACH,OAyVN,SAAsC0B,EAAYzpE,GAChD,MAAMtjC,EAAS+sG,EAAWzsC,KAAKtgE,OACzBsgE,EAAO,IAAI95D,MAAMxG,GACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5Bs9D,EAAKt9D,GAAKuqG,GAAkBR,EAAWzsC,KAAKt9D,GAAIsgC,GAElD,OAAQA,IACN,MAAM6oE,EAAO7rC,EAAK,GAAGh9B,GACf/iC,EAAQ+/D,EAAK,GAAGh9B,GAEtB,IAAI6qE,EACAC,EACJ,IAAK,IAAIprG,EAAI,EAAGA,EAAIhD,EAAQgD,GAAK,EAAG,CAClC,MAAMujC,EAAQ+5B,EAAKt9D,GAAGsgC,GACtB,IAAIgB,EAASg8B,EAAKt9D,EAAI,GAAGsgC,GACzB,MAAM+qE,EAAU7nG,MAAMC,QAAQ69B,GAI9B,GAHI+pE,IACF/pE,GAASD,EAAAA,EAAAA,IAAUC,IAEjBiC,GAAShmC,EACX,OAAU,IAANyC,EACKshC,EAEL+pE,EACKC,GACLnC,EACA5rG,EACA4tG,EACAC,EACA7nE,EACAjC,GAGGiqE,GACLpC,EACA5rG,EACA4tG,EACAC,EACA7nE,EACAjC,GAGJ6pE,EAAgB5nE,EAChB6nE,EAAiB9pE,CACnB,CACA,OAAO8pE,EAEX,CAxYaI,CAA6BzB,EAAYzpE,GAElD,KAAK+nE,GACH,OA4YN,SAAkC0B,EAAYzpE,GAC5C,MAAMuqE,EAAKd,EAAWvC,SAChBxqG,EAAS+sG,EAAWzsC,KAAKtgE,OAEzBsgE,EAAO,IAAI95D,MAAMxG,GACvB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5Bs9D,EAAKt9D,GAAKuqG,GAAkBR,EAAWzsC,KAAKt9D,GAAIsgC,GAElD,GAAQuqE,IACDxC,GACH,OAAQ/nE,IACN,MAAM/iC,EAAQ+/D,EAAK,GAAGh9B,GACtB,OAAIypE,EAAWzsC,KAAK,GAAG9kE,OAAS+tG,GACvB70F,EAAAA,EAAAA,IAASnU,GAEXA,EAAMmU,YAIf,MAAM,IAAIyc,MAAM,gCAADhJ,OAAiC0lF,GAGtD,CAlaaY,CAAyB1B,EAAYzpE,GAE9C,QACE,MAAM,IAAInS,MAAM,wBAADhJ,OAAyBqiF,IAU9C,CAgaA,SAAS+D,GAAkBpC,EAAM5rG,EAAOmuG,EAAQC,EAASC,EAAQC,GAC/D,MAAMj0E,EAAQg0E,EAASF,EACvB,GAAc,IAAV9zE,EACF,OAAO+zE,EAET,MAAMG,EAAQvuG,EAAQmuG,EAKtB,OAAOC,GAHI,IAATxC,EACI2C,EAAQl0E,GACP55B,KAAKyjC,IAAI0nE,EAAM2C,GAAS,IAAM9tG,KAAKyjC,IAAI0nE,EAAMvxE,GAAS,KAClCi0E,EAAUF,EACvC,CAWA,SAASL,GAAiBnC,EAAM5rG,EAAOmuG,EAAQK,EAAOH,EAAQI,GAE5D,GAAc,IADAJ,EAASF,EAErB,OAAOK,EAET,MAAME,GAAQpqE,EAAAA,EAAAA,IAAWkqE,GACnBG,GAAQrqE,EAAAA,EAAAA,IAAWmqE,GACzB,IAAIG,EAAWD,EAAM,GAAKD,EAAM,GAC5BE,EAAW,IACbA,GAAY,IACHA,GAAY,MACrBA,GAAY,KAGd,MAAMC,EAAO,CACXb,GAAkBpC,EAAM5rG,EAAOmuG,EAAQO,EAAM,GAAIL,EAAQM,EAAM,IAC/DX,GAAkBpC,EAAM5rG,EAAOmuG,EAAQO,EAAM,GAAIL,EAAQM,EAAM,IAC/DD,EAAM,GAAKV,GAAkBpC,EAAM5rG,EAAOmuG,EAAQ,EAAGE,EAAQO,GAC7DZ,GAAkBpC,EAAM5rG,EAAOmuG,EAAQK,EAAM,GAAIH,EAAQI,EAAM,KAEjE,OAAO7pE,EAAAA,EAAAA,IAAWiqE,EACpB,C,4FC3kBA,SAAS32D,GAAOnV,GACd,OAAO,CACT,CAUO,SAAS+rE,GAAqBC,GACnC,MAAMC,EAAiB5E,IACjB6E,EAuFD,SAAsBF,EAAOhsE,GAClC,MAAMtjC,EAASsvG,EAAMtvG,OAKfyvG,EAAgB,IAAIjpG,MAAMxG,GAEhC,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAC/B,MAAM0sG,EAAOJ,EAAMtsG,GACbgpB,EACJ,WAAY0jF,EACRpC,GAAgBoC,EAAK1jF,OAAQo9E,EAAa9lE,GAC1CmV,GAKN,IAAI6K,EACJ,GAAI98C,MAAMC,QAAQipG,EAAKxhG,OAAQ,CAC7B,MAAMyhG,EAAcD,EAAKxhG,MAAMlO,OAC/BsjD,EAAS,IAAI98C,MAAMmpG,GACnB,IAAK,IAAIxjG,EAAI,EAAGA,EAAIwjG,IAAexjG,EACjCm3C,EAAOn3C,GAAKyjG,GAAWF,EAAKxhG,MAAM/B,GAAIm3B,EAE1C,MACEggB,EAAS,CAACssD,GAAWF,EAAKxhG,MAAOo1B,IAGnCmsE,EAAczsG,GAAK,CAACgpB,SAAQs3B,SAC9B,CAEA,OAAO,SAAUhgB,GAIf,MAAMggB,EAAS,GAEf,IAAIusD,GAAc,EAClB,IAAK,IAAI7sG,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAE/B,IAAK8sG,EADmBL,EAAczsG,GAAGgpB,QACpBsX,MAGjBgsE,EAAMtsG,GAAG+sG,OAAQF,GAArB,CAGAA,GAAc,EACd,IAAK,MAAMG,KAAkBP,EAAczsG,GAAGsgD,OAAQ,CACpD,MAAMp1C,EAAQ8hG,EAAe1sE,GACxBp1B,GAGLo1C,EAAO5iD,KAAKwN,EACd,CARA,CASF,CAEA,OAAOo1C,CACT,CACF,CAlJoB2sD,CAAaX,EAAOC,GAChCW,ED1CC,CACLtF,UAAW,CAAC,EACZ/nD,WAAY,CAAC,EACbx4C,WAAYkW,IACZ2K,UAAW,KACXgoC,aAAc,ICsChB,OAAO,SAAUhoD,EAASb,GAGxB,GAFA6lG,EAAkBrtD,WAAa33C,EAAQu9C,wBACvCynD,EAAkB7lG,WAAaA,EAC3BklG,EAAerkF,UAAW,CAC5B,MAAM9rB,EAAK8L,EAAQuJ,QAEjBy7F,EAAkBhlF,eADTrvB,IAAPuD,EAC4BA,EAEA,IAElC,CAMA,OALImwG,EAAer8C,eACjBg9C,EAAkBh9C,aAAem6C,GAC/BniG,EAAQmf,gBAGLmlF,EAAUU,EACnB,CACF,CAUO,SAASC,GAA0BC,GACxC,MAAMb,EAAiB5E,IACjB3qG,EAASowG,EAAWpwG,OAKpBqwG,EAAa,IAAI7pG,MAAMxG,GAC7B,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5BqtG,EAAWrtG,GAAK4sG,GAAWQ,EAAWptG,GAAIusG,GAE5C,MAAMW,EDlFC,CACLtF,UAAW,CAAC,EACZ/nD,WAAY,CAAC,EACbx4C,WAAYkW,IACZ2K,UAAW,KACXgoC,aAAc,ICkFV5P,EAAS,IAAI98C,MAAMxG,GAEzB,OAAO,SAAUkL,EAASb,GAGxB,GAFA6lG,EAAkBrtD,WAAa33C,EAAQu9C,wBACvCynD,EAAkB7lG,WAAaA,EAC3BklG,EAAerkF,UAAW,CAC5B,MAAM9rB,EAAK8L,EAAQuJ,QAEjBy7F,EAAkBhlF,eADTrvB,IAAPuD,EAC4BA,EAEA,IAElC,CACA,IAAIkxG,EAAe,EACnB,IAAK,IAAIttG,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAC/B,MAAMkL,EAAQmiG,EAAWrtG,GAAGktG,GACxBhiG,IACFo1C,EAAOgtD,GAAgBpiG,EACvBoiG,GAAgB,EAEpB,CAEA,OADAhtD,EAAOtjD,OAASswG,EACThtD,CACT,CACF,CAwFO,SAASssD,GAAWW,EAAWjtE,GACpC,MAAMktE,EAAeC,GAAUF,EAAW,GAAIjtE,GACxCotE,EAAiBC,GAAYJ,EAAW,GAAIjtE,GAC5CstE,EAyNR,SAAmBL,EAAWjtE,GAC5B,MAAMutE,EAAS,QAMTC,EAAgBC,GAAgBR,EAAWM,EAAS,QAASvtE,GACnE,IAAKwtE,EACH,OAAO,KAGT,MAAMN,EAAeC,GAAUF,EAAWM,EAAQvtE,GAE5C0tE,EAAyBP,GAC7BF,EACAM,EAAS,cACTvtE,GAGIotE,EAAiBC,GAAYJ,EAAWM,EAAQvtE,GAEhD2tE,EAA2BN,GAC/BJ,EACAM,EAAS,cACTvtE,GAGI4tE,EAAeH,GAAgBR,EAAWM,EAAS,OAAQvtE,GAE3D6tE,EAAmBC,GACvBb,EACAM,EAAS,YACTvtE,GAGI+tE,EAAkBD,GACtBb,EACAM,EAAS,WACTvtE,GAGIguE,EAAkBF,GACtBb,EACAM,EAAS,WACTvtE,GAGIiuE,EAAmBC,GACvBjB,EACAM,EAAS,WACTvtE,GAGImuE,EAAoBV,GACxBR,EACAM,EAAS,YACTvtE,GAGIouE,EAAiBN,GAAgBb,EAAWM,EAAS,SAAUvtE,GAE/DquE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASvtE,GAE/DuuE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTvtE,GAGIwuE,EAAmBV,GACvBb,EACAM,EAAS,WACTvtE,GAGIyuE,EAAgBhB,GAAgBR,EAAWM,EAAS,QAASvtE,GAE7D0uE,EAAkBjB,GACtBR,EACAM,EAAS,UACTvtE,GAGI2uE,EAAmBlB,GACvBR,EACAM,EAAS,WACTvtE,GAGI4uE,EAAsBV,GAC1BjB,EACAM,EAAS,eACTvtE,GAGI6uE,EAAkBC,GACtB7B,EACAM,EAAS,UACTvtE,GAII1kB,EAAgByzF,GACpB9B,EACAM,EAAS,kBAGLtsD,EAAO,IAAIN,GAAAA,EAAK,CAACrlC,kBAEvB,OAAO,SAAU0kB,GAuCf,GAtCAihB,EAAKqD,QAAQkpD,EAAcxtE,IAEvBktE,GACFjsD,EAAKmD,QAAQ8oD,EAAaltE,IAGxB0tE,GACFzsD,EAAKyD,kBAAkBgpD,EAAuB1tE,IAG5CotE,GACFnsD,EAAKoD,UAAU+oD,EAAeptE,IAG5B2tE,GACF1sD,EAAK0D,oBAAoBgpD,EAAyB3tE,IAGhD4tE,GACF3sD,EAAK4C,QAAQ+pD,EAAa5tE,IAGxB6tE,GACF5sD,EAAK6C,YAAY+pD,EAAiB7tE,IAGhC+tE,GACF9sD,EAAK8C,WAAWgqD,EAAgB/tE,IAG9BguE,GACF/sD,EAAK+C,WAAWgqD,EAAgBhuE,IAG9BiuE,GACFhtD,EAAK2C,YAAYqqD,EAAiBjuE,IAGhCmuE,EAAmB,CACrB,MAAMrsD,EAAYqsD,EAAkBnuE,GACpC,GAAkB,UAAd8hB,GAAuC,SAAdA,EAC3B,MAAM,IAAIj0B,MAAM,6CAElBozB,EAAKgD,aAAanC,EACpB,CAkBA,GAhBIssD,GACFntD,EAAKiD,UAAUkqD,EAAepuE,IAG5BquE,GACFptD,EAAKxkC,SAAS4xF,EAAcruE,IAG1BuuE,GACFttD,EAAK1kC,kBAAkBgyF,EAAuBvuE,IAG5CwuE,GACFvtD,EAAKzkC,YAAYgyF,EAAiBxuE,IAGhCyuE,EAAe,CACjB,MAAMttD,EAAYstD,EAAczuE,GAChC,GACgB,SAAdmhB,GACc,WAAdA,GACc,UAAdA,GACc,QAAdA,GACc,UAAdA,EAEA,MAAM,IAAItzB,MACR,8DAGJozB,EAAKsD,aAAapD,EACpB,CAEA,GAAIutD,EAAiB,CACnB,MAAMrtD,EAAUqtD,EAAgB1uE,GAChC,GAAgB,SAAZqhB,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIxzB,MAAM,oDAElBozB,EAAKuD,WAAWnD,EAClB,CAEA,GAAIstD,EAAkB,CACpB,MAAMltD,EAAektD,EAAiB3uE,GACtC,GACmB,WAAjByhB,GACiB,QAAjBA,GACiB,WAAjBA,GACiB,eAAjBA,GACiB,YAAjBA,EAEA,MAAM,IAAI5zB,MACR,0EAGJozB,EAAKwD,gBAAgBhD,EACvB,CAUA,OARIotD,GACF5tD,EAAK2D,WAAWiqD,EAAgB7uE,IAG9B4uE,GACF3tD,EAAKkD,eAAeyqD,EAAoB5uE,IAGnCihB,CACT,CACF,CAxbuB+tD,CAAU/B,EAAWjtE,GACpCivE,EAkcR,SAAoBhC,EAAWjtE,GAC7B,GAAI,aAAcitE,EAChB,OAmBJ,SAAmBA,EAAWjtE,GAC5B,MAAMutE,EAAS,QAGT2B,EAAU3B,EAAS,MACnBvsF,EAAMmuF,GAAclC,EAAUiC,GAAUA,GAGxCE,EAAiBC,GACrBpC,EACAM,EAAS,SACTvtE,GAGIquE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASvtE,GAE/DsvE,EAAkBxB,GACtBb,EACAM,EAAS,UACTvtE,GAGIuvE,EAAuBF,GAC3BpC,EACAM,EAAS,eACTvtE,GAGIwuE,EAAmBV,GACvBb,EACAM,EAAS,WACTvtE,GAGIuuE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTvtE,GAIIm3B,EAAeq4C,GAAmBvC,EAAWM,EAAS,iBACtDl2C,EAAeo4C,GACnBxC,EACAM,EAAS,kBAELh2C,EAAek4C,GACnBxC,EACAM,EAAS,kBAELrsF,EAqfR,SAA2B+rF,EAAWyC,GACpC,MAAMlI,EAAUyF,EAAUyC,GAC1B,QAAgBn3G,IAAZivG,EACF,OAEF,OAAOmI,GAAiBnI,EAASkI,EACnC,CA3fgBE,CAAkB3C,EAAWM,EAAS,SAC9CtsF,EA6ZR,SAAwBgsF,EAAWyC,GACjC,MAAMlI,EAAUyF,EAAUyC,GAC1B,QAAgBn3G,IAAZivG,EACF,OAEF,GAAuB,kBAAZA,EACT,MAAM,IAAI35E,MAAM,yBAADhJ,OAA0B6qF,IAE3C,OAAOlI,CACT,CAtasBqI,CAAe5C,EAAWM,EAAS,gBACjDzgF,EAmdR,SAA6BmgF,EAAWyC,GACtC,MAAMlI,EAAUyF,EAAUyC,GAC1B,QAAgBn3G,IAAZivG,EACF,OAEF,OAAOsI,GAAmBtI,EAASkI,EACrC,CAzdiBK,CAAoB9C,EAAWM,EAAS,UACjD11C,EAAe23C,GAAmBvC,EAAWM,EAAS,iBACtDziG,EAAQklG,GAAe/C,EAAWM,EAAS,SAC3CxiG,EAASilG,GAAe/C,EAAWM,EAAS,UAC5CzmG,EAAOmpG,GAAahD,EAAWM,EAAS,QACxCjyF,EAAgByzF,GACpB9B,EACAM,EAAS,kBAGL2C,EAAO,IAAIl5C,GAAAA,EAAK,CACpBh2C,MACAm2C,eACAE,eACAE,eACAr2C,QACAD,cACA6L,SACA+qC,eACA9sD,SACAD,QACAhE,OACAwU,kBAGF,OAAO,SAAU0kB,GAwBf,OAvBIsvE,GACFY,EAAK5zF,WAAWgzF,EAAgBtvE,IAG9BuvE,GACFW,EAAK7zF,gBAAgBkzF,EAAqBvvE,IAGxCwuE,GACF0B,EAAK1zF,YAAYgyF,EAAiBxuE,IAGhCuuE,GACF2B,EAAK3zF,kBAAkBgyF,EAAuBvuE,IAG5CquE,GACF6B,EAAKzzF,SAAS4xF,EAAcruE,IAG1BovE,GACFc,EAAKl4C,UAAUo3C,EAAepvE,IAEzBkwE,CACT,CACF,CA1HWC,CAAUlD,EAAWjtE,GAG9B,GAAI,iBAAkBitE,EACpB,OA6HJ,SAAoBA,EAAWjtE,GAC7B,MAAMutE,EAAS,SAGT6C,EAAa7C,EAAS,SACtB8C,EAAa9C,EAAS,SACtB5nD,EAAS2qD,GAAcrD,EAAUmD,GAAaA,GAC9CpoE,EAASsoE,GAAcrD,EAAUoD,GAAaA,GAG9CnD,EAAeC,GAAUF,EAAWM,EAAQvtE,GAC5CotE,EAAiBC,GAAYJ,EAAWM,EAAQvtE,GAChDquE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASvtE,GAC/DuvE,EAAuBF,GAC3BpC,EACAM,EAAS,eACTvtE,GAEIwuE,EAAmBV,GACvBb,EACAM,EAAS,WACTvtE,GAEIuuE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTvtE,GAII6lB,EAAUmqD,GAAe/C,EAAWM,EAAS,WAC7CzuF,EAAQkxF,GAAe/C,EAAWM,EAAS,SAC3CjyF,EAAgByzF,GACpB9B,EACAM,EAAS,kBAGLgD,EAAQ,IAAI/qD,GAAAA,EAAa,CAC7BG,SACA3d,SACA6d,UACA/mC,QACAxD,kBAGF,OAAO,SAAU0kB,GAoBf,OAnBIktE,GACFqD,EAAMnsD,QAAQ8oD,EAAaltE,IAEzBotE,GACFmD,EAAMlsD,UAAU+oD,EAAeptE,IAE7BuvE,GACFgB,EAAMl0F,gBAAgBkzF,EAAqBvvE,IAEzCwuE,GACF+B,EAAM/zF,YAAYgyF,EAAiBxuE,IAEjCuuE,GACFgC,EAAMh0F,kBAAkBgyF,EAAuBvuE,IAE7CquE,GACFkC,EAAM9zF,SAAS4xF,EAAcruE,IAGxBuwE,CACT,CACF,CAhMWC,CAAWvD,EAAWjtE,GAG/B,GAAI,kBAAmBitE,EACrB,OAmMJ,SAAqBA,EAAWjtE,GAC9B,MAAMutE,EAAS,UAGTL,EAAeC,GAAUF,EAAWM,EAAQvtE,GAC5CotE,EAAiBC,GAAYJ,EAAWM,EAAQvtE,GAChDywE,EAAiB3C,GAAgBb,EAAWM,EAAS,SAAUvtE,GAC/DquE,EAAgBC,GAAkBrB,EAAWM,EAAS,QAASvtE,GAC/DuvE,EAAuBF,GAC3BpC,EACAM,EAAS,eACTvtE,GAEIwuE,EAAmBV,GACvBb,EACAM,EAAS,WACTvtE,GAEIuuE,EAAyBL,GAC7BjB,EACAM,EAAS,mBACTvtE,GAII1kB,EAAgByzF,GACpB9B,EACAM,EAAS,kBAGLmD,EAAS,IAAIC,GAAAA,EAAO,CACxB3oE,OAAQ,EACR1sB,kBAGF,OAAO,SAAU0kB,GAuBf,OAtBIywE,GACFC,EAAOxZ,UAAUuZ,EAAezwE,IAE9BktE,GACFwD,EAAOtsD,QAAQ8oD,EAAaltE,IAE1BotE,GACFsD,EAAOrsD,UAAU+oD,EAAeptE,IAE9BuvE,GACFmB,EAAOr0F,gBAAgBkzF,EAAqBvvE,IAE1CwuE,GACFkC,EAAOl0F,YAAYgyF,EAAiBxuE,IAElCuuE,GACFmC,EAAOn0F,kBAAkBgyF,EAAuBvuE,IAE9CquE,GACFqC,EAAOj0F,SAAS4xF,EAAcruE,IAGzB0wE,CACT,CACF,CA/PWE,CAAY3D,EAAWjtE,GAGhC,OAAO,IACT,CAhdwB6wE,CAAW5D,EAAWjtE,GACtC8wE,EAAiBhD,GAAgBb,EAAW,UAAWjtE,GAE7D,IACGktE,IACAE,IACAE,IACA2B,KACAtvG,EAAAA,GAAAA,GAAQstG,GAIT,MAAM,IAAIp/E,MACR,mEACEoiC,KAAKO,UAAUy8C,IAIrB,MAAMriG,EAAQ,IAAIo6E,GAAAA,GAClB,OAAO,SAAUhlD,GACf,IAAI+wE,GAAQ,EACZ,GAAI7D,EAAc,CAChB,MAAM5zE,EAAO4zE,EAAaltE,GACtB1G,IACFy3E,GAAQ,GAEVnmG,EAAMw5C,QAAQ9qB,EAChB,CACA,GAAI8zE,EAAgB,CAClB,MAAMnrD,EAASmrD,EAAeptE,GAC1BiiB,IACF8uD,GAAQ,GAEVnmG,EAAMy5C,UAAUpC,EAClB,CACA,GAAIqrD,EAAc,CAChB,MAAMrsD,EAAOqsD,EAAattE,GACtBihB,IACF8vD,GAAQ,GAEVnmG,EAAM05C,QAAQrD,EAChB,CACA,GAAIguD,EAAe,CACjB,MAAMthE,EAAQshE,EAAcjvE,GACxB2N,IACFojE,GAAQ,GAEVnmG,EAAM+3E,SAASh1C,EACjB,CAIA,OAHImjE,GACFlmG,EAAM46E,UAAUsrB,EAAe9wE,IAE7B+wE,EACK,KAEFnmG,CACT,CACF,CAYA,SAASuiG,GAAUF,EAAWM,EAAQvtE,GACpC,IAAIgxE,EACJ,GAAIzD,EAAS,qBAAsBN,EACjC+D,EAqqBJ,SAA0B/D,EAAWM,EAAQvtE,GAC3C,MAAMixE,EAAexD,GACnBR,EACAM,EAAS,cACTvtE,GAEIkxE,EAAkBC,GACtBlE,EACAM,EAAS,iBACTvtE,GAEIoxE,EAAuBD,GAC3BlE,EACAM,EAAS,eACTvtE,GAEIqxE,EAAiBC,GACrBrE,EACAM,EAAS,QACTvtE,GAEF,OAAO,SAAUA,GACf,MAAO,CACLhf,IAAKiwF,EAAajxE,GAClBlT,OAAQokF,GAAmBA,EAAgBlxE,GAC3Cl5B,KAAMsqG,GAAwBA,EAAqBpxE,GACnD9e,MAAOmwF,GAAkBA,EAAerxE,GAE5C,CACF,CAlsBoBuxE,CAAiBtE,EAAWM,EAAS,QAASvtE,OACzD,CACL,GAAyC,SAArCitE,EAAUM,EAAS,cAErB,OAAQvtE,GAAY,KAGtBgxE,EAAgBM,GACdrE,EACAM,EAAS,aACTvtE,EAEJ,CACA,IAAKgxE,EACH,OAAO,KAGT,MAAM13E,EAAO,IAAIP,GAAAA,EACjB,OAAO,SAAUiH,GACf,MAAM9e,EAAQ8vF,EAAchxE,GAC5B,OAAI9e,IAAUud,EAAAA,GACL,MAETnF,EAAKJ,SAAShY,GACPoY,EACT,CACF,CAYA,SAAS+zE,GAAYJ,EAAWM,EAAQvtE,GACtC,MAAMwxE,EAAgB1D,GACpBb,EACAM,EAAS,eACTvtE,GAGIgxE,EAAgBM,GACpBrE,EACAM,EAAS,eACTvtE,GAGF,IAAKwxE,IAAkBR,EACrB,OAAO,KAGT,MAAMS,EAAkBhE,GACtBR,EACAM,EAAS,kBACTvtE,GAGI0xE,EAAmBjE,GACvBR,EACAM,EAAS,mBACTvtE,GAGI2xE,EAAmB7C,GACvB7B,EACAM,EAAS,mBACTvtE,GAGI4xE,EAAyB9D,GAC7Bb,EACAM,EAAS,0BACTvtE,GAGI6xE,EAAqB/D,GACzBb,EACAM,EAAS,qBACTvtE,GAGIiiB,EAAS,IAAI2jC,GAAAA,EACnB,OAAO,SAAU5lD,GACf,GAAIgxE,EAAe,CACjB,MAAM9vF,EAAQ8vF,EAAchxE,GAC5B,GAAI9e,IAAUud,EAAAA,GACZ,OAAO,KAETwjB,EAAO/oB,SAAShY,EAClB,CAMA,GAJIswF,GACFvvD,EAAOw2C,SAAS+Y,EAAcxxE,IAG5ByxE,EAAiB,CACnB,MAAM5pD,EAAU4pD,EAAgBzxE,GAChC,GAAgB,SAAZ6nB,GAAkC,UAAZA,GAAmC,WAAZA,EAC/C,MAAM,IAAIh6B,MAAM,4CAElBo0B,EAAOo2C,WAAWxwC,EACpB,CAEA,GAAI6pD,EAAkB,CACpB,MAAM5qD,EAAW4qD,EAAiB1xE,GAClC,GACe,UAAb8mB,GACa,UAAbA,GACa,UAAbA,EAEA,MAAM,IAAIj5B,MAAM,6CAElBo0B,EAAOs2C,YAAYzxC,EACrB,CAcA,OAZI6qD,GACF1vD,EAAOoH,YAAYsoD,EAAiB3xE,IAGlC4xE,GACF3vD,EAAOq2C,kBAAkBsZ,EAAuB5xE,IAG9C6xE,GACF5vD,EAAOu2C,cAAcqZ,EAAmB7xE,IAGnCiiB,CACT,CACF,CAsgBA,SAAS6rD,GAAgBb,EAAW9sD,EAAMngB,GACxC,KAAMmgB,KAAQ8sD,GACZ,OAEF,MAAMf,EAAYlC,GAAgBiD,EAAU9sD,GAAO4lD,EAAY/lE,GAC/D,OAAO,SAAUA,GACf,OAAOswE,GAAcpE,EAAUlsE,GAAUmgB,EAC3C,CACF,CAQA,SAASstD,GAAgBR,EAAW9sD,EAAMngB,GACxC,KAAMmgB,KAAQ8sD,GACZ,OAAO,KAET,MAAMf,EAAYlC,GAAgBiD,EAAU9sD,GAAO6lD,EAAYhmE,GAC/D,OAAO,SAAUA,GACf,OAAOmvE,GAAcjD,EAAUlsE,GAAUmgB,EAC3C,CACF,CAuCA,SAAS+tD,GAAiBjB,EAAW9sD,EAAMngB,GACzC,KAAMmgB,KAAQ8sD,GACZ,OAAO,KAET,MAAMf,EAAYlC,GAAgBiD,EAAU9sD,GAAO2lD,EAAa9lE,GAChE,OAAO,SAAUA,GACf,MAAM/iC,EAAQivG,EAAUlsE,GACxB,GAAqB,mBAAV/iC,EACT,MAAM,IAAI4wB,MAAM,0BAADhJ,OAA2Bs7B,IAE5C,OAAOljD,CACT,CACF,CAQA,SAASq0G,GAAmBrE,EAAW9sD,EAAMngB,GAC3C,KAAMmgB,KAAQ8sD,GACZ,OAAO,KAET,MAAMf,EAAYlC,GAAgBiD,EAAU9sD,GAAO8lD,EAAWjmE,GAC9D,OAAO,SAAUA,GACf,OAAO2vE,GAAiBzD,EAAUlsE,GAAUmgB,EAC9C,CACF,CAQA,SAAS2uD,GAAqB7B,EAAW9sD,EAAMngB,GAC7C,KAAMmgB,KAAQ8sD,GACZ,OAAO,KAET,MAAMf,EAAYlC,GAAgBiD,EAAU9sD,GAAO+lD,EAAiBlmE,GACpE,OAAO,SAAUA,GACf,OAAO8vE,GAAmB5D,EAAUlsE,GAAUmgB,EAChD,CACF,CAQA,SAASkvD,GAAoBpC,EAAW9sD,EAAMngB,GAC5C,KAAMmgB,KAAQ8sD,GACZ,OAAO,KAET,MAAMf,EAAYlC,GAAgBiD,EAAU9sD,GAAO+lD,EAAiBlmE,GACpE,OAAO,SAAUA,GACf,MAAMh7B,EAAQ8qG,GAAmB5D,EAAUlsE,GAAUmgB,GACrD,GAAqB,IAAjBn7C,EAAMtI,OACR,MAAM,IAAImxB,MAAM,4BAADhJ,OAA6Bs7B,IAE9C,OAAOn7C,CACT,CACF,CAQA,SAASmsG,GAAclE,EAAW9sD,EAAMngB,GACtC,KAAMmgB,KAAQ8sD,GACZ,OAAO,KAET,MAAMf,EAAYlC,GAAgBiD,EAAU9sD,GAAO+lD,EAAiBlmE,GACpE,OAAO,SAAUA,GACf,OAAO8xE,GAAY5F,EAAUlsE,GAAUmgB,EACzC,CACF,CAQA,SAASmuD,GAAkBrB,EAAW9sD,EAAMngB,GAC1C,KAAMmgB,KAAQ8sD,GACZ,OAAO,KAET,MAAMf,EAAYlC,GAChBiD,EAAU9sD,GACV+lD,EAAkBH,EAClB/lE,GAEF,OAAO,SAAUA,GACf,OA+NJ,SAAyB/iC,EAAOyyG,GAC9B,GAAqB,kBAAVzyG,EACT,OAAOA,EAET,OAAO60G,GAAY70G,EAAOyyG,EAC5B,CApOWqC,CAAgB7F,EAAUlsE,GAAUmgB,EAC7C,CACF,CAOA,SAAS6vD,GAAe/C,EAAWyC,GACjC,MAAMzyG,EAAQgwG,EAAUyC,GACxB,QAAcn3G,IAAV0E,EAAJ,CAGA,GAAqB,kBAAVA,EACT,MAAM,IAAI4wB,MAAM,yBAADhJ,OAA0B6qF,IAE3C,OAAOzyG,CAJP,CAKF,CAOA,SAASgzG,GAAahD,EAAWyC,GAC/B,MAAMlI,EAAUyF,EAAUyC,GAC1B,QAAgBn3G,IAAZivG,EAAJ,CAGA,GAAuB,kBAAZA,EACT,OAAOtsF,EAAAA,EAAAA,IAAOssF,GAEhB,IAAKtkG,MAAMC,QAAQqkG,GACjB,MAAM,IAAI35E,MAAM,uCAADhJ,OAAwC6qF,IAEzD,GACqB,IAAnBlI,EAAQ9qG,QACc,kBAAf8qG,EAAQ,IACO,kBAAfA,EAAQ,GAEf,MAAM,IAAI35E,MAAM,uCAADhJ,OAAwC6qF,IAEzD,OAAOlI,CAdP,CAeF,CAuBA,SAASgI,GAAmBvC,EAAWyC,GACrC,MAAMlI,EAAUyF,EAAUyC,GAC1B,QAAgBn3G,IAAZivG,EAAJ,CAGA,GACc,gBAAZA,GACY,iBAAZA,GACY,aAAZA,GACY,cAAZA,EAEA,MAAM,IAAI35E,MAAM,kEAADhJ,OACqD6qF,IAGtE,OAAOlI,CAXP,CAYF,CAOA,SAASiI,GAAwBxC,EAAWyC,GAC1C,MAAMlI,EAAUyF,EAAUyC,GAC1B,QAAgBn3G,IAAZivG,EAAJ,CAGA,GAAgB,WAAZA,GAAoC,aAAZA,EAC1B,MAAM,IAAI35E,MAAM,mCAADhJ,OAAoC6qF,IAErD,OAAOlI,CAJP,CAKF,CAoBA,SAASuH,GAAsB9B,EAAWyC,GACxC,MAAMlI,EAAUyF,EAAUyC,GAC1B,QAAgBn3G,IAAZivG,EAAJ,CAGA,GAAuB,kBAAZA,EACT,MAAM,IAAI35E,MAAM,yBAADhJ,OAA0B6qF,IAE3C,GAAgB,cAAZlI,GAAuC,aAAZA,GAAsC,SAAZA,EACvD,MAAM,IAAI35E,MAAM,6CAADhJ,OAA8C6qF,IAE/D,OAAOlI,CAPP,CAQF,CAoBA,SAASsI,GAAmB7yG,EAAOyyG,GACjC,IAAKxsG,MAAMC,QAAQlG,GACjB,MAAM,IAAI4wB,MAAM,yBAADhJ,OAA0B6qF,IAE3C,MAAMhzG,EAASO,EAAMP,OACrB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAC5B,GAAwB,kBAAbzC,EAAMyC,GACf,MAAM,IAAImuB,MAAM,oCAADhJ,OAAqC6qF,IAGxD,OAAOzyG,CACT,CAOA,SAASkyG,GAAclyG,EAAOyyG,GAC5B,GAAqB,kBAAVzyG,EACT,MAAM,IAAI4wB,MAAM,yBAADhJ,OAA0B6qF,IAE3C,OAAOzyG,CACT,CAOA,SAASqzG,GAAcrzG,EAAOyyG,GAC5B,GAAqB,kBAAVzyG,EACT,MAAM,IAAI4wB,MAAM,yBAADhJ,OAA0B6qF,IAE3C,OAAOzyG,CACT,CAOA,SAAS0yG,GAAiB1yG,EAAOyyG,GAC/B,GAAqB,kBAAVzyG,EACT,OAAOA,EAET,MAAM+H,EAAQ8qG,GAAmB7yG,EAAOyyG,GAClChzG,EAASsI,EAAMtI,OACrB,GAAIA,EAAS,GAAKA,EAAS,EACzB,MAAM,IAAImxB,MAAM,2CAADhJ,OAA4C6qF,IAE7D,OAAO1qG,CACT,CAOA,SAAS8sG,GAAY70G,EAAOyyG,GAC1B,MAAM5oG,EAAOgpG,GAAmB7yG,EAAOyyG,GACvC,GAAoB,IAAhB5oG,EAAKpK,OACP,MAAM,IAAImxB,MAAM,wCAADhJ,OAAyC6qF,IAE1D,OAAO5oG,CACT,C,eC/uCA,MAAM1E,GACU,cAgBhB,MAAMyJ,WAAwBc,GAAAA,EAI5B1U,WAAAA,CAAYsK,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAMC,EAAcnG,OAAOoG,OAAO,CAAC,EAAGF,UAE/BC,EAAYoI,aACZpI,EAAY21E,oBACZ31E,EAAYghF,4BACZhhF,EAAYkhF,uBACnBrrF,MAAMmK,GAMNlK,KAAK05G,WAAazvG,EAAQwJ,UAAYqb,OAAO7kB,EAAQwJ,gBAAaxT,EAMlED,KAAK8/E,mBACsB7/E,IAAzBgK,EAAQ41E,aAA6B51E,EAAQ41E,aAAe,IAO9D7/E,KAAK4mD,OAAS,KAOd5mD,KAAK6mD,oBAAiB5mD,EAEtBD,KAAKunD,SAASt9C,EAAQqI,OAMtBtS,KAAK25G,2BAC8B15G,IAAjCgK,EAAQihF,sBACJjhF,EAAQihF,qBAOdlrF,KAAK45G,6BACgC35G,IAAnCgK,EAAQmhF,wBACJnhF,EAAQmhF,sBAEhB,CAMA53E,YAAAA,GACE,OAAOxT,KAAK05G,UACd,CAiBA5pF,WAAAA,CAAYvvB,GACV,OAAOR,MAAM+vB,YAAYvvB,EAC3B,CAKAkrF,eAAAA,GACE,OAAOzrF,KAAK8/E,aACd,CAKA6L,cAAAA,GACE,OACE3rF,KAAKqM,IAAIvC,GAEb,CAQAw9C,QAAAA,GACE,OAAOtnD,KAAK4mD,MACd,CAOAY,gBAAAA,GACE,OAAOxnD,KAAK6mD,cACd,CAMAskC,uBAAAA,GACE,OAAOnrF,KAAK25G,qBACd,CAMAtuB,yBAAAA,GACE,OAAOrrF,KAAK45G,uBACd,CAQA1lG,eAAAA,CAAgBpU,EAAYqN,GAC1B,MAAM0sG,EAAiB75G,KAAKwT,eACxBqmG,KAAkB/5G,EAAW2T,aAAc,IAC7C3T,EAAW2T,UAAUomG,GAAkB,IAAInsF,EAAAA,EAAM,IAEnD1tB,KAAK2Q,cAAcuD,gBAAgBpU,EAAYqN,EACjD,CAMA2sG,cAAAA,CAAeC,GACb/5G,KAAKwM,IAAI1C,GAAuBiwG,EAClC,CAuBAxyD,QAAAA,CAASj1C,GACPtS,KAAK4mD,YAAmB3mD,IAAVqS,EAAsB+6E,GAAAA,GAAqB/6E,EACzD,MAAM0nG,EAuBV,SAAqB1nG,GACnB,QAAcrS,IAAVqS,EACF,OAAO+6E,GAAAA,GAET,IAAK/6E,EACH,OAAO,KAET,GAAqB,oBAAVA,EACT,OAAOA,EAET,GAAIA,aAAiBo6E,GAAAA,GACnB,OAAOp6E,EAET,IAAK1H,MAAMC,QAAQyH,GACjB,OAAOiiG,GAA0B,CAACjiG,IAEpC,GAAqB,IAAjBA,EAAMlO,OACR,MAAO,GAGT,MAAMA,EAASkO,EAAMlO,OACf+9B,EAAQ7vB,EAAM,GAEpB,GAAI6vB,aAAiBuqD,GAAAA,GAAO,CAI1B,MAAMhlC,EAAS,IAAI98C,MAAMxG,GACzB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAC/B,MAAM8yF,EAAY5nF,EAAMlL,GACxB,KAAM8yF,aAAqBxN,GAAAA,IACzB,MAAM,IAAIn3D,MAAM,sCAElBmyB,EAAOtgD,GAAK8yF,CACd,CACA,OAAOxyC,CACT,CAEA,GAAI,UAAWvlB,EAAO,CAIpB,MAAMuxE,EAAQ,IAAI9oG,MAAMxG,GACxB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,IAAUgD,EAAG,CAC/B,MAAM8yF,EAAY5nF,EAAMlL,GACxB,KAAM,UAAW8yF,GACf,MAAM,IAAI3kE,MAAM,kDAElBm+E,EAAMtsG,GAAK8yF,CACb,CACA,OAAOuZ,GAAqBC,EAC9B,CAEA,MAAMc,EACwDliG,EAC9D,OAAOiiG,GAA0BC,EACnC,CA/EsByF,CAAY3nG,GAC9BtS,KAAK6mD,eACO,OAAVv0C,OAAiBrS,GAAYi6G,EAAAA,GAAAA,IAAgBF,GAC/Ch6G,KAAKmL,SACP,CAMAgvG,YAAAA,CAAa1mG,GACXzT,KAAK05G,WAAajmG,EAAYqb,OAAOrb,QAAaxT,EAClDD,KAAKmL,SACP,EAoEF,W,iBC9VO,SAAShF,EAAMkrB,GACpB,IAAK,MAAM+lF,KAAY/lF,SACdA,EAAO+lF,EAElB,CAOO,SAAS/vG,EAAQgqB,GACtB,IAAI+lF,EACJ,IAAKA,KAAY/lF,EACf,OAAO,EAET,OAAQ+lF,CACV,C,oHCRA,SAASgD,EACP7lF,EACA8lF,EACAC,EACA/yF,EACA5B,EACAC,EACAC,GAEA,MAAM6P,EAAKnB,EAAgB8lF,GACrB1kF,EAAKpB,EAAgB8lF,EAAU,GAC/B9mF,EAAKgB,EAAgB+lF,GAAW5kF,EAChClC,EAAKe,EAAgB+lF,EAAU,GAAK3kF,EAC1C,IAAInB,EACJ,GAAW,IAAPjB,GAAmB,IAAPC,EACdgB,EAAS6lF,MACJ,CACL,MAAM1/C,IAAMh1C,EAAI+P,GAAMnC,GAAM3N,EAAI+P,GAAMnC,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAImnC,EAAI,EACNnmC,EAAS8lF,MACJ,IAAI3/C,EAAI,EAAG,CAChB,IAAK,IAAIvzD,EAAI,EAAGA,EAAImgB,IAAUngB,EAC5Bye,EAAaze,IAAKm2D,EAAAA,EAAAA,IAChBhpC,EAAgB8lF,EAAUjzG,GAC1BmtB,EAAgB+lF,EAAUlzG,GAC1BuzD,GAIJ,YADA90C,EAAazhB,OAASmjB,EAExB,CACEiN,EAAS6lF,CACX,CACF,CACA,IAAK,IAAIjzG,EAAI,EAAGA,EAAImgB,IAAUngB,EAC5Bye,EAAaze,GAAKmtB,EAAgBC,EAASptB,GAE7Cye,EAAazhB,OAASmjB,CACxB,CAYO,SAAS4Q,EAAgB5D,EAAiBC,EAAQC,EAAKlN,EAAQ9Z,GACpE,IAAIioB,EAAKnB,EAAgBC,GACrBmB,EAAKpB,EAAgBC,EAAS,GAClC,IAAKA,GAAUjN,EAAQiN,EAASC,EAAKD,GAAUjN,EAAQ,CACrD,MAAMqO,EAAKrB,EAAgBC,GACrBqB,EAAKtB,EAAgBC,EAAS,GAC9B+lF,GAAexyD,EAAAA,EAAAA,IAAUryB,EAAIC,EAAIC,EAAIC,GACvC0kF,EAAe9sG,IACjBA,EAAM8sG,GAER7kF,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOpoB,CACT,CAUO,SAASgsB,EACdlF,EACAC,EACAsE,EACAvR,EACA9Z,GAEA,IAAK,IAAIrG,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACjBqG,EAAM0qB,EAAgB5D,EAAiBC,EAAQC,EAAKlN,EAAQ9Z,GAC5D+mB,EAASC,CACX,CACA,OAAOhnB,CACT,CAUO,SAASqmD,EACdv/B,EACAC,EACAgN,EACAja,EACA9Z,GAEA,IAAK,IAAIrG,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnBqG,EAAMgsB,EAAqBlF,EAAiBC,EAAQsE,EAAMvR,EAAQ9Z,GAClE+mB,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAOqJ,CACT,CAgBO,SAAS2qB,EACd7D,EACAC,EACAC,EACAlN,EACAk7B,EACA+3D,EACA70F,EACAC,EACAC,EACAC,EACApB,GAEA,GAAI8P,GAAUC,EACZ,OAAO3O,EAET,IAAI1e,EAAGi7B,EACP,GAAiB,IAAbogB,EAAgB,CAQlB,GANApgB,GAAkB0lB,EAAAA,EAAAA,IAChBpiC,EACAC,EACA2O,EAAgBC,GAChBD,EAAgBC,EAAS,IAEvB6N,EAAkBvc,EAAoB,CACxC,IAAK1e,EAAI,EAAGA,EAAImgB,IAAUngB,EACxBye,EAAaze,GAAKmtB,EAAgBC,EAASptB,GAG7C,OADAye,EAAazhB,OAASmjB,EACf8a,CACT,CACA,OAAOvc,CACT,CACApB,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAI3d,EAAQwtB,EAASjN,EACrB,KAAOvgB,EAAQytB,GAWb,GAVA2lF,EACE7lF,EACAvtB,EAAQugB,EACRvgB,EACAugB,EACA5B,EACAC,EACAlB,GAEF2d,GAAkB0lB,EAAAA,EAAAA,IAAUpiC,EAAGC,EAAGlB,EAAS,GAAIA,EAAS,IACpD2d,EAAkBvc,EAAoB,CAExC,IADAA,EAAqBuc,EAChBj7B,EAAI,EAAGA,EAAImgB,IAAUngB,EACxBye,EAAaze,GAAKsd,EAAStd,GAE7Bye,EAAazhB,OAASmjB,EACtBvgB,GAASugB,CACX,MAWEvgB,GACEugB,EACAniB,KAAKqI,KACDrI,KAAKwX,KAAKylB,GAAmBj9B,KAAKwX,KAAKkJ,IACvC28B,EACA,EACF,GAIR,GAAI+3D,IAEFJ,EACE7lF,EACAE,EAAMlN,EACNiN,EACAjN,EACA5B,EACAC,EACAlB,GAEF2d,GAAkB0lB,EAAAA,EAAAA,IAAUpiC,EAAGC,EAAGlB,EAAS,GAAIA,EAAS,IACpD2d,EAAkBvc,GAAoB,CAExC,IADAA,EAAqBuc,EAChBj7B,EAAI,EAAGA,EAAImgB,IAAUngB,EACxBye,EAAaze,GAAKsd,EAAStd,GAE7Bye,EAAazhB,OAASmjB,CACxB,CAEF,OAAOzB,CACT,CAgBO,SAAS4T,EACdnF,EACAC,EACAsE,EACAvR,EACAk7B,EACA+3D,EACA70F,EACAC,EACAC,EACAC,EACApB,GAEAA,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAK,IAAIvd,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACjB0e,EAAqBsS,EACnB7D,EACAC,EACAC,EACAlN,EACAk7B,EACA+3D,EACA70F,EACAC,EACAC,EACAC,EACApB,GAEF8P,EAASC,CACX,CACA,OAAO3O,CACT,CAgBO,SAASiuC,EACdx/B,EACAC,EACAgN,EACAja,EACAk7B,EACA+3D,EACA70F,EACAC,EACAC,EACAC,EACApB,GAEAA,EAAWA,GAAsB,CAACC,IAAKA,KACvC,IAAK,IAAIvd,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnB0e,EAAqB4T,EACnBnF,EACAC,EACAsE,EACAvR,EACAk7B,EACA+3D,EACA70F,EACAC,EACAC,EACAC,EACApB,GAEF8P,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAO0hB,CACT,C,8EC/TA,IAAI20F,EAAa,KA2BV,SAASC,EAASC,GACvBF,EAAaE,EAEb,MAAMC,EAAY72G,OAAO2uB,KAAKioF,EAAME,MAC9BpoF,EAAMmoF,EAAUx2G,OACtB,IAAIgD,EAAGmJ,EACP,IAAKnJ,EAAI,EAAGA,EAAIqrB,IAAOrrB,EAAG,CACxB,MAAM6gB,EAAO2yF,EAAUxzG,GACvB,KAAK0zG,EAAAA,EAAAA,IAAoB7yF,GAAO,CAC9B,MAAM8yF,EAAMJ,EAAME,KAAK5yF,GACvB,IAAImiB,EAAmD2wE,EAAI3wE,MACtDA,GAA0B,YAAjB2wE,EAAIC,WAChB5wE,EAAQ,YAEVoG,EAAAA,EAAAA,IACE,IAAIrG,EAAAA,EAAW,CACbliB,KAAMA,EACNgjB,gBAAiB8vE,EAAIE,KACrB/vE,cAAe6vE,EAAIG,SACnB9wE,UAGN,CACF,CACA,IAAKhjC,EAAI,EAAGA,EAAIqrB,IAAOrrB,EAAG,CACxB,MAAM+zG,EAAQP,EAAUxzG,GAClBg0G,GAAQN,EAAAA,EAAAA,IAAoBK,GAClC,IAAK5qG,EAAI,EAAGA,EAAIkiB,IAAOliB,EAAG,CACxB,MAAM8qG,EAAQT,EAAUrqG,GAClB+qG,GAAQR,EAAAA,EAAAA,IAAoBO,GAClC,KAAKtzF,EAAAA,EAAAA,IAAaozF,EAAOE,GACvB,GAAIV,EAAME,KAAKM,KAAWR,EAAME,KAAKQ,IACnCjqE,EAAAA,EAAAA,IAAyB,CAACgqE,EAAOE,QAC5B,CACL,MAAMh2F,EAAYq1F,EAAMQ,EAAOE,IAC/BxpE,EAAAA,EAAAA,IACEupE,EACAE,GACAxnE,EAAAA,EAAAA,IAA8BsnE,EAAOE,EAAOh2F,EAAU2qB,UACtD6D,EAAAA,EAAAA,IAA8BwnE,EAAOF,EAAO91F,EAAU4qB,SAE1D,CAEJ,CACF,CACF,C,0DCgDA,QA7HA,MACEvwC,WAAAA,GAAc,IAAA47G,EAAA,MAsDdC,EAAAA,EAAAA,GAAA,wBAKkB,WAAa,QAAA3M,EAAAhpE,UAAAzhC,OAATsgE,EAAI,IAAA95D,MAAAikG,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJpqC,EAAIoqC,GAAAjpE,UAAAipE,GAExB,OADAyM,EAAKE,MAAM/2C,GACJ62C,CACT,IAzDEv7G,KAAK07G,cAAgB,GAIrB17G,KAAKkN,OAAS,EAKdlN,KAAKq/D,QAAU,EAMfr/D,KAAKmiF,SACH,IAAIw5B,OAAMxyF,EAAAA,EAAAA,MAA4B,CACpC9c,IAAKA,CAACzI,EAAQwzG,KACZ,GAEE,oBAD0BjuF,EAAAA,EAAAA,MAA4BiuF,GAOxD,OADAp3G,KAAKy7G,MAAMrE,GACJp3G,KAAK47G,iBAEdpvG,IAAKA,CAAC5I,EAAQwzG,EAAUzyG,KACtB3E,KAAKy7G,MAAMrE,EAAUzyG,IACd,IAIf,CAMA82G,KAAAA,GACE,MAAMruC,EAAeptE,KAAK07G,cACpB10G,EAAQhH,KAAKkN,OAASlN,KAAKq/D,QAC5B+N,EAAapmE,KAChBomE,EAAapmE,GAAS,IAExBomE,EAAapmE,GAAOlC,QAAK+gC,UAC3B,CAgBAi8C,YAAAA,CAAa/tE,GACX/T,KAAKy7G,MAAM1nG,EACb,CASA+iC,UAAAA,GACE,OAAO92C,KAAKmiF,QACd,CAKA/pC,IAAAA,CAAK1Q,GACH1nC,KAAK07G,cAAcr3G,SAASw3G,IAC1B,IAAK,IAAIz0G,EAAI,EAAGwE,EAAKiwG,EAAoBz3G,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC5D,MAAMgwG,EAAWyE,EAAoBz0G,GACrC,GAAwB,oBAAbgwG,EAAyB,CAClCA,EAAS1vE,GACT,QACF,CACA,MAAMo0E,EAAqBD,IAAsBz0G,GACjD,GAAsD,oBAAxBsgC,EAAS0vE,GACnB1vE,EAAS0vE,MAAa0E,OACnC,CACL,GAAkC,oBAAvBA,EAAmC,CAC1Bp0E,EAAS0vE,GAAY0E,EAAmBp0E,GAC1D,QACF,CACkBA,EAAS0vE,GAAY0E,CACzC,CACF,IAEJ,CAEA31G,KAAAA,GACEnG,KAAK07G,cAAct3G,OAAS,EAC5BpE,KAAKkN,OAAS,EACdlN,KAAKq/D,QAAU,CACjB,CAMA7qC,MAAAA,GACEx0B,KAAKq/D,QAAUr/D,KAAK07G,cAAct3G,OAClCpE,KAAKkN,OAAS,CAChB,E,+FCrHF,MAAM2qB,UAAuBjT,EAAAA,EAC3BjlB,WAAAA,GACEI,QAMAC,KAAK83B,OAAS,KAMd93B,KAAKunB,OAAS,EAMdvnB,KAAKu0B,eACP,CAQAlO,aAAAA,CAAczY,GACZ,OAAO0mB,EAAAA,EAAAA,IACLt0B,KAAKu0B,gBACL,EACAv0B,KAAKu0B,gBAAgBnwB,OACrBpE,KAAKunB,OACL3Z,EAEJ,CAMA0qB,cAAAA,GACE,OAAOpqB,EAAAA,EAAAA,KACT,CAOA6tG,kBAAAA,GACE,OAAO/7G,KAAKu0B,gBAAgBxpB,MAAM,EAAG/K,KAAKunB,OAC5C,CAKA+R,kBAAAA,GACE,OAAOt5B,KAAKu0B,eACd,CAOAynF,iBAAAA,GACE,OAAOh8G,KAAKu0B,gBAAgBxpB,MAC1B/K,KAAKu0B,gBAAgBnwB,OAASpE,KAAKunB,OAEvC,CAOAorC,SAAAA,GACE,OAAO3yD,KAAK83B,MACd,CAQAvS,qBAAAA,CAAsBF,GAOpB,GANIrlB,KAAKilB,6BAA+BjlB,KAAKylB,gBAC3CzlB,KAAKglB,yCAA2C,EAChDhlB,KAAKilB,2BAA6BjlB,KAAKylB,eAKvCJ,EAAmB,GACgC,IAAlDrlB,KAAKglB,0CACJK,GAAoBrlB,KAAKglB,yCAE3B,OAAOhlB,KAGT,MAAM41D,EACJ51D,KAAKw4B,8BAA8BnT,GAErC,OADkCuwC,EAAmBt8B,qBACvBl1B,OAASpE,KAAKu0B,gBAAgBnwB,OACnDwxD,GAQT51D,KAAKglB,yCAA2CK,EACzCrlB,KACT,CAOAw4B,6BAAAA,CAA8BnT,GAC5B,OAAOrlB,IACT,CAKAooE,SAAAA,GACE,OAAOpoE,KAAKunB,MACd,CAMA2Q,kBAAAA,CAAmBJ,EAAQvD,GACzBv0B,KAAKunB,OAAS00F,EAAmBnkF,GACjC93B,KAAK83B,OAASA,EACd93B,KAAKu0B,gBAAkBA,CACzB,CAOA0D,cAAAA,CAAennB,EAAagnB,IAC1B5pB,EAAAA,EAAAA,KACF,CAQAyqB,SAAAA,CAAUb,EAAQhnB,EAAaorG,GAC7B,IAAI30F,EACJ,GAAIuQ,EACFvQ,EAAS00F,EAAmBnkF,OACvB,CACL,IAAK,IAAI1wB,EAAI,EAAGA,EAAI80G,IAAW90G,EAAG,CAChC,GAA2B,IAAvB0J,EAAY1M,OAGd,OAFApE,KAAK83B,OAAS,UACd93B,KAAKunB,OAAS,GAGhBzW,EAA6CA,EAAY,EAC3D,CACAyW,EAASzW,EAAY1M,OACrB0zB,EAASygC,EAAmBhxC,EAC9B,CACAvnB,KAAK83B,OAASA,EACd93B,KAAKunB,OAASA,CAChB,CAYAlM,cAAAA,CAAe0L,GACT/mB,KAAKu0B,kBACPxN,EACE/mB,KAAKu0B,gBACLv0B,KAAKu0B,gBACLv0B,KAAK83B,OAAOkP,WAAW,OAAS,EAAI,EACpChnC,KAAKunB,QAEPvnB,KAAKmL,UAET,CAUAob,MAAAA,CAAOC,EAAOC,GACZ,MAAM8N,EAAkBv0B,KAAKs5B,qBAC7B,GAAI/E,EAAiB,CACnB,MAAMhN,EAASvnB,KAAKooE,aACpB7hD,EAAAA,EAAAA,IACEgO,EACA,EACAA,EAAgBnwB,OAChBmjB,EACAf,EACAC,EACA8N,GAEFv0B,KAAKmL,SACP,CACF,CAYAuX,KAAAA,CAAMgE,EAAIC,EAAIF,QACDxmB,IAAP0mB,IACFA,EAAKD,GAEFD,IACHA,GAAS2O,EAAAA,EAAAA,IAAUp1B,KAAK+P,cAE1B,MAAMwkB,EAAkBv0B,KAAKs5B,qBAC7B,GAAI/E,EAAiB,CACnB,MAAMhN,EAASvnB,KAAKooE,aACpB1lD,EAAAA,EAAAA,IACE6R,EACA,EACAA,EAAgBnwB,OAChBmjB,EACAb,EACAC,EACAF,EACA8N,GAEFv0B,KAAKmL,SACP,CACF,CAUA8b,SAAAA,CAAUxK,EAAQC,GAChB,MAAM6X,EAAkBv0B,KAAKs5B,qBAC7B,GAAI/E,EAAiB,CACnB,MAAMhN,EAASvnB,KAAKooE,aACpBnhD,EAAAA,EAAAA,IACEsN,EACA,EACAA,EAAgBnwB,OAChBmjB,EACA9K,EACAC,EACA6X,GAEFv0B,KAAKmL,SACP,CACF,EAOK,SAASotD,EAAmBhxC,GACjC,IAAIuQ,EAQJ,OAPc,GAAVvQ,EACFuQ,EAAS,KACU,GAAVvQ,EACTuQ,EAAS,MACU,GAAVvQ,IACTuQ,EAAS,QAEmDA,CAChE,CAMO,SAASmkF,EAAmBnkF,GACjC,IAAIvQ,EAQJ,MAPc,MAAVuQ,EACFvQ,EAAS,EACU,OAAVuQ,GAA6B,OAAVA,EAC5BvQ,EAAS,EACU,QAAVuQ,IACTvQ,EAAS,GAEmBA,CAChC,CAQO,SAAS88D,EAAgB83B,EAAgB72F,EAAW1Y,GACzD,MAAM2nB,EAAkB4nF,EAAe7iF,qBACvC,IAAK/E,EACH,OAAO,KAET,MAAMhN,EAAS40F,EAAe/zC,YAC9B,OAAOvgD,EAAAA,EAAAA,IACL0M,EACA,EACAA,EAAgBnwB,OAChBmjB,EACAjC,EACA1Y,EAEJ,CAEA,S,wICnVA,MAAMwvG,EAAe,CAAC,EAAG,EAAG,GA6oB5B,QAhmBA,MAIEz8G,WAAAA,CAAYsK,GA2BV,IAAIi4D,EACJ,GAvBAliE,KAAK0N,aAA8BzN,IAApBgK,EAAQyD,QAAwBzD,EAAQyD,QAAU,EAMjE1N,KAAKwjE,aAAev5D,EAAQs4D,aAC5B57D,EAAAA,EAAAA,IACE4zF,EAAAA,EAAAA,IACEv6F,KAAKwjE,cAML,CAACpyD,EAAGC,IAAMA,EAAID,IACd,GAEF,qDAKGnH,EAAQoyG,QACX,IAAK,IAAIj1G,EAAI,EAAGwE,EAAK5L,KAAKwjE,aAAap/D,OAAS,EAAGgD,EAAIwE,IAAMxE,EAC3D,GAAK86D,GAGH,GAAIliE,KAAKwjE,aAAap8D,GAAKpH,KAAKwjE,aAAap8D,EAAI,KAAO86D,EAAY,CAClEA,OAAajiE,EACb,KACF,OALAiiE,EAAaliE,KAAKwjE,aAAap8D,GAAKpH,KAAKwjE,aAAap8D,EAAI,GAchEpH,KAAKujE,YAAcrB,EAMnBliE,KAAK2N,QAAU3N,KAAKwjE,aAAap/D,OAAS,EAM1CpE,KAAKotD,aAA6BntD,IAAnBgK,EAAQ0nE,OAAuB1nE,EAAQ0nE,OAAS,KAM/D3xE,KAAKs8G,SAAW,UACQr8G,IAApBgK,EAAQoyG,UACVr8G,KAAKs8G,SAAWryG,EAAQoyG,SACxB11G,EAAAA,EAAAA,GACE3G,KAAKs8G,SAASl4G,QAAUpE,KAAKwjE,aAAap/D,OAC1C,wDAIJ,MAAMwJ,EAAS3D,EAAQ2D,YAER3N,IAAX2N,GAAyB5N,KAAKotD,SAAYptD,KAAKs8G,WACjDt8G,KAAKotD,SAAUn4B,EAAAA,EAAAA,IAAWrnB,KAG5BjH,EAAAA,EAAAA,IACI3G,KAAKotD,SAAWptD,KAAKs8G,UAAct8G,KAAKotD,UAAYptD,KAAKs8G,SAC3D,+DAOFt8G,KAAKu8G,WAAa,UACQt8G,IAAtBgK,EAAQuyG,YACVx8G,KAAKu8G,WAAatyG,EAAQuyG,WAC1B71G,EAAAA,EAAAA,GACE3G,KAAKu8G,WAAWn4G,QAAUpE,KAAKwjE,aAAap/D,OAC5C,0DAQJpE,KAAKy8G,eACkBx8G,IAArBgK,EAAQupF,SACJvpF,EAAQupF,SACPxzF,KAAKu8G,WAEJ,KADA15C,EAAAA,GAERl8D,EAAAA,EAAAA,IACI3G,KAAKy8G,WAAaz8G,KAAKu8G,YACtBv8G,KAAKy8G,YAAcz8G,KAAKu8G,WAC3B,mEAOFv8G,KAAK6kB,aAAqB5kB,IAAX2N,EAAuBA,EAAS,KAM/C5N,KAAK08G,gBAAkB,KAMvB18G,KAAK28G,SAAW,CAAC,EAAG,GAMpB38G,KAAK48G,WAAa,CAAC,EAAG,EAAG,EAAG,QAEN38G,IAAlBgK,EAAQ4yG,MACV78G,KAAK08G,gBAAkBzyG,EAAQ4yG,MAAMh9G,KAAI,CAAC2O,EAAMi7B,KAC9C,MAAMxW,EAAY,IAAIH,EAAAA,EACpB1tB,KAAKmI,IAAI,EAAGiB,EAAK,IACjBpJ,KAAKqI,IAAIe,EAAK,GAAK,GAAI,GACvBpJ,KAAKmI,IAAI,EAAGiB,EAAK,IACjBpJ,KAAKqI,IAAIe,EAAK,GAAK,GAAI,IAEzB,GAAIZ,EAAQ,CACV,MAAMkvG,EAAsB98G,KAAKo0F,0BAA0BxmF,EAAQ67B,GACnExW,EAAU3H,KAAOlmB,KAAKqI,IAAIqvG,EAAoBxxF,KAAM2H,EAAU3H,MAC9D2H,EAAUzH,KAAOpmB,KAAKmI,IAAIuvG,EAAoBtxF,KAAMyH,EAAUzH,MAC9DyH,EAAU1H,KAAOnmB,KAAKqI,IAAIqvG,EAAoBvxF,KAAM0H,EAAU1H,MAC9D0H,EAAUxH,KAAOrmB,KAAKmI,IAAIuvG,EAAoBrxF,KAAMwH,EAAUxH,KAChE,CACA,OAAOwH,KAEArlB,GACT5N,KAAK+8G,qBAAqBnvG,EAE9B,CAUAovG,gBAAAA,CAAiBpvG,EAAQoyB,EAAMhxB,GAC7B,MAAMikB,EAAYjzB,KAAKo0F,0BAA0BxmF,EAAQoyB,GACzD,IAAK,IAAI54B,EAAI6rB,EAAU3H,KAAM1f,EAAKqnB,EAAUzH,KAAMpkB,GAAKwE,IAAMxE,EAC3D,IAAK,IAAImJ,EAAI0iB,EAAU1H,KAAMqmB,EAAK3e,EAAUxH,KAAMlb,GAAKqhC,IAAMrhC,EAC3DvB,EAAS,CAACgxB,EAAM54B,EAAGmJ,GAGzB,CASA0sG,+BAAAA,CACElqF,EACA/jB,EACAkuG,EACA3qB,GAEA,IAAIt/D,EAAWtN,EAAGC,EACdu3F,EAAkB,KAClB1zE,EAAI1W,EAAU,GAAK,EAOvB,IANyB,IAArB/yB,KAAKujE,aACP59C,EAAIoN,EAAU,GACdnN,EAAImN,EAAU,IAEdoqF,EAAkBn9G,KAAKm2F,mBAAmBpjE,EAAWw/D,GAEhD9oD,GAAKzpC,KAAK0N,SAAS,CAYxB,QAXUzN,IAAN0lB,QAAyB1lB,IAAN2lB,GACrBD,EAAIvgB,KAAKmyB,MAAM5R,EAAI,GACnBC,EAAIxgB,KAAKmyB,MAAM3R,EAAI,GACnBqN,GAAYmqF,EAAAA,EAAAA,GAAwBz3F,EAAGA,EAAGC,EAAGA,EAAGs3F,IAEhDjqF,EAAYjzB,KAAKo0F,0BACf+oB,EACA1zE,EACAyzE,GAGAluG,EAASy6B,EAAGxW,GACd,OAAO,IAEPwW,CACJ,CACA,OAAO,CACT,CAOA15B,SAAAA,GACE,OAAO/P,KAAK6kB,OACd,CAOA+hD,UAAAA,GACE,OAAO5mE,KAAK2N,OACd,CAOAo5D,UAAAA,GACE,OAAO/mE,KAAK0N,OACd,CAQAoW,SAAAA,CAAU2lB,GACR,OAAIzpC,KAAKotD,QACAptD,KAAKotD,QAEPptD,KAAKs8G,SAAS7yE,EACvB,CAQAuV,aAAAA,CAAcvV,GACZ,OAAOzpC,KAAKwjE,aAAa/5B,EAC3B,CAOA09B,cAAAA,GACE,OAAOnnE,KAAKwjE,YACd,CAQA65C,0BAAAA,CAA2BtqF,EAAWmqF,EAAe3qB,GACnD,GAAIx/D,EAAU,GAAK/yB,KAAK2N,QAAS,CAC/B,GAAyB,IAArB3N,KAAKujE,YAAmB,CAC1B,MAAMj4C,EAAsB,EAAfyH,EAAU,GACjBxH,EAAsB,EAAfwH,EAAU,GACvB,OAAOqqF,EAAAA,EAAAA,GACL9xF,EACAA,EAAO,EACPC,EACAA,EAAO,EACP2xF,EAEJ,CACA,MAAMC,EAAkBn9G,KAAKm2F,mBAC3BpjE,EACAw/D,GAAcvyF,KAAK48G,YAErB,OAAO58G,KAAKo0F,0BACV+oB,EACApqF,EAAU,GAAK,EACfmqF,EAEJ,CACA,OAAO,IACT,CAQAtoB,4BAAAA,CAA6B7hE,EAAW0W,EAAGyzE,GACzC,GAAIzzE,EAAIzpC,KAAK2N,SAAW87B,EAAIzpC,KAAK0N,QAC/B,OAAO,KAGT,MAAM4vG,EAAavqF,EAAU,GACvBwqF,EAAaxqF,EAAU,GACvByqF,EAAazqF,EAAU,GAE7B,GAAI0W,IAAM6zE,EACR,OAAOF,EAAAA,EAAAA,GACLG,EACAC,EACAD,EACAC,EACAN,GAIJ,GAAIl9G,KAAKujE,YAAa,CACpB,MAAM5hB,EAASv8C,KAAKyjC,IAAI7oC,KAAKujE,YAAa95B,EAAI6zE,GACxChyF,EAAOlmB,KAAKmyB,MAAMgmF,EAAa57D,GAC/Bp2B,EAAOnmB,KAAKmyB,MAAMimF,EAAa77D,GACrC,GAAIlY,EAAI6zE,EACN,OAAOF,EAAAA,EAAAA,GAAwB9xF,EAAMA,EAAMC,EAAMA,EAAM2xF,GAGzD,MAAM1xF,EAAOpmB,KAAKmyB,MAAMoqB,GAAU47D,EAAa,IAAM,EAC/C9xF,EAAOrmB,KAAKmyB,MAAMoqB,GAAU67D,EAAa,IAAM,EACrD,OAAOJ,EAAAA,EAAAA,GAAwB9xF,EAAME,EAAMD,EAAME,EAAMyxF,EACzD,CAEA,MAAMC,EAAkBn9G,KAAKm2F,mBAAmBpjE,EAAW/yB,KAAK48G,YAChE,OAAO58G,KAAKo0F,0BAA0B+oB,EAAiB1zE,EAAGyzE,EAC5D,CASA9oB,yBAAAA,CAA0BxmF,EAAQ67B,EAAGyzE,GACnCl9G,KAAKy9G,uBAAuB7vG,EAAO,GAAIA,EAAO,GAAI67B,GAAG,EAAO2yE,GAC5D,MAAM9wF,EAAO8wF,EAAa,GACpB7wF,EAAO6wF,EAAa,GAC1Bp8G,KAAKy9G,uBAAuB7vG,EAAO,GAAIA,EAAO,GAAI67B,GAAG,EAAM2yE,GAC3D,MAAM5wF,EAAO4wF,EAAa,GACpB3wF,EAAO2wF,EAAa,GAC1B,OAAOgB,EAAAA,EAAAA,GAAwB9xF,EAAME,EAAMD,EAAME,EAAMyxF,EACzD,CAMA3oB,kBAAAA,CAAmBxhE,GACjB,MAAM4+C,EAAS3xE,KAAK8jB,UAAUiP,EAAU,IAClCtkB,EAAazO,KAAKg/C,cAAcjsB,EAAU,IAC1CygE,GAAW5wE,EAAAA,EAAAA,IAAO5iB,KAAKyzF,YAAY1gE,EAAU,IAAK/yB,KAAK28G,UAC7D,MAAO,CACLhrC,EAAO,IAAM5+C,EAAU,GAAK,IAAOygE,EAAS,GAAK/kF,EACjDkjE,EAAO,IAAM5+C,EAAU,GAAK,IAAOygE,EAAS,GAAK/kF,EAErD,CAUA0nF,kBAAAA,CAAmBpjE,EAAWw/D,GAC5B,MAAM5gB,EAAS3xE,KAAK8jB,UAAUiP,EAAU,IAClCtkB,EAAazO,KAAKg/C,cAAcjsB,EAAU,IAC1CygE,GAAW5wE,EAAAA,EAAAA,IAAO5iB,KAAKyzF,YAAY1gE,EAAU,IAAK/yB,KAAK28G,UACvDrxF,EAAOqmD,EAAO,GAAK5+C,EAAU,GAAKygE,EAAS,GAAK/kF,EAChD8c,EAAOomD,EAAO,IAAM5+C,EAAU,GAAK,GAAKygE,EAAS,GAAK/kF,EACtD+c,EAAOF,EAAOkoE,EAAS,GAAK/kF,EAC5Bgd,EAAOF,EAAOioE,EAAS,GAAK/kF,EAClC,OAAO6d,EAAAA,EAAAA,GAAehB,EAAMC,EAAMC,EAAMC,EAAM8mE,EAChD,CAaAmrB,iCAAAA,CAAkCj9G,EAAYgO,EAAYkvG,GACxD,OAAO39G,KAAK49G,gCACVn9G,EAAW,GACXA,EAAW,GACXgO,GACA,EACAkvG,EAEJ,CAeAC,+BAAAA,CACEj4F,EACAC,EACAnX,EACAovG,EACAF,GAEA,MAAMl0E,EAAIzpC,KAAKqzF,kBAAkB5kF,GAC3BiU,EAAQjU,EAAazO,KAAKg/C,cAAcvV,GACxCkoC,EAAS3xE,KAAK8jB,UAAU2lB,GACxB+pD,GAAW5wE,EAAAA,EAAAA,IAAO5iB,KAAKyzF,YAAYhqD,GAAIzpC,KAAK28G,UAElD,IAAIY,EAAc76F,GAASiD,EAAIgsD,EAAO,IAAOljE,EAAa+kF,EAAS,GAC/DgqB,EAAc96F,GAASivD,EAAO,GAAK/rD,GAAMnX,EAAa+kF,EAAS,GAUnE,OARIqqB,GACFN,GAAanvD,EAAAA,EAAAA,IAAKmvD,EA7eP,GA6e+B,EAC1CC,GAAapvD,EAAAA,EAAAA,IAAKovD,EA9eP,GA8e+B,IAE1CD,GAAahmF,EAAAA,EAAAA,IAAMgmF,EAhfR,GAifXC,GAAajmF,EAAAA,EAAAA,IAAMimF,EAjfR,KAofNM,EAAAA,EAAAA,GAAwBr0E,EAAG8zE,EAAYC,EAAYG,EAC5D,CAiBAF,sBAAAA,CAAuB93F,EAAGC,EAAG6jB,EAAGo0E,EAA2BF,GACzD,MAAMhsC,EAAS3xE,KAAK8jB,UAAU2lB,GACxBh7B,EAAazO,KAAKg/C,cAAcvV,GAChC+pD,GAAW5wE,EAAAA,EAAAA,IAAO5iB,KAAKyzF,YAAYhqD,GAAIzpC,KAAK28G,UAElD,IAAIY,GAAc53F,EAAIgsD,EAAO,IAAMljE,EAAa+kF,EAAS,GACrDgqB,GAAc7rC,EAAO,GAAK/rD,GAAKnX,EAAa+kF,EAAS,GAUzD,OARIqqB,GACFN,GAAanvD,EAAAA,EAAAA,IAAKmvD,EA/gBP,GA+gB+B,EAC1CC,GAAapvD,EAAAA,EAAAA,IAAKovD,EAhhBP,GAghB+B,IAE1CD,GAAahmF,EAAAA,EAAAA,IAAMgmF,EAlhBR,GAmhBXC,GAAajmF,EAAAA,EAAAA,IAAMimF,EAnhBR,KAshBNM,EAAAA,EAAAA,GAAwBr0E,EAAG8zE,EAAYC,EAAYG,EAC5D,CAUArqB,wBAAAA,CAAyB7yF,EAAYgpC,EAAGk0E,GACtC,OAAO39G,KAAKy9G,uBACVh9G,EAAW,GACXA,EAAW,GACXgpC,GACA,EACAk0E,EAEJ,CAMAI,sBAAAA,CAAuBhrF,GACrB,OAAO/yB,KAAKwjE,aAAazwC,EAAU,GACrC,CAUA0gE,WAAAA,CAAYhqD,GACV,OAAIzpC,KAAKy8G,UACAz8G,KAAKy8G,UAEPz8G,KAAKu8G,WAAW9yE,EACzB,CAMAg/D,gBAAAA,CAAiBh/D,GACf,OAAKzpC,KAAK08G,gBAKH18G,KAAK08G,gBAAgBjzE,GAJnBzpC,KAAK6kB,QACR7kB,KAAKo0F,0BAA0Bp0F,KAAK6kB,QAAS4kB,GAC7C,IAGR,CAmBA4pD,iBAAAA,CAAkB5kF,EAAYuvG,GAC5B,MAAMv0E,GAAIg5B,EAAAA,EAAAA,IACRziE,KAAKwjE,aACL/0D,EACAuvG,GAAiB,GAEnB,OAAO52E,EAAAA,EAAAA,IAAMqC,EAAGzpC,KAAK0N,QAAS1N,KAAK2N,QACrC,CAQA0mF,2BAAAA,CAA4BthE,EAAWohE,GACrC,OAAOoY,EAAAA,EAAAA,IACLpY,EACA,EACAA,EAAS/vF,OACT,EACApE,KAAKm2F,mBAAmBpjE,GAE5B,CAMAgqF,oBAAAA,CAAqBnvG,GACnB,MAAMxJ,EAASpE,KAAKwjE,aAAap/D,OAC3B65G,EAAiB,IAAIrzG,MAAMxG,GACjC,IAAK,IAAIqlC,EAAIzpC,KAAK0N,QAAS+7B,EAAIrlC,IAAUqlC,EACvCw0E,EAAex0E,GAAKzpC,KAAKo0F,0BAA0BxmF,EAAQ67B,GAE7DzpC,KAAK08G,gBAAkBuB,CACzB,GCtoBK,SAASC,EAAiBzuG,GAC/B,IAAIyjF,EAAWzjF,EAAW+7F,qBAK1B,OAJKtY,IACHA,EA6HG,SAA6BzjF,EAAY9B,EAAS6lF,EAAUl+D,GACjE,MAAM1nB,EAASuwG,EAAqB1uG,GACpC,OA3FK,SAAyB7B,EAAQD,EAAS6lF,EAAUl+D,GACzDA,OAAoBr1B,IAAXq1B,EAAuBA,EAAS,WAEzC,MAAMitC,EAAc67C,EAAsBxwG,EAAQD,EAAS6lF,GAE3D,OAAO,IAAI6qB,EAAS,CAClBzwG,OAAQA,EACR+jE,QAAQt8C,EAAAA,EAAAA,IAAUznB,EAAQ0nB,GAC1BitC,YAAaA,EACbixB,SAAUA,GAEd,CAgFS8qB,CAAgB1wG,EAAQD,EAAS6lF,EAAUl+D,EACpD,CAhIeipF,CAAoB9uG,GAC/BA,EAAWg8F,mBAAmBvY,IAEzBA,CACT,CA4FA,SAASkrB,EAAsBxwG,EAAQD,EAAS6lF,EAAUlmF,GACxDK,OAAsB1N,IAAZ0N,EAAwBA,EAAUgxF,EAAAA,EAC5CnL,GAAW5wE,EAAAA,EAAAA,SAAoB3iB,IAAbuzF,EAAyBA,EAAW3wB,EAAAA,GAEtD,MAAMpwD,GAASkV,EAAAA,EAAAA,IAAU/Z,GACnB4E,GAAQvC,EAAAA,EAAAA,IAASrC,GAEvBN,EACEA,EAAgB,EACZA,EACAlI,KAAKqI,IAAI+E,EAAQghF,EAAS,GAAI/gF,EAAS+gF,EAAS,IAEtD,MAAMpvF,EAASuJ,EAAU,EACnB40D,EAAc,IAAI33D,MAAMxG,GAC9B,IAAK,IAAIqlC,EAAI,EAAGA,EAAIrlC,IAAUqlC,EAC5B84B,EAAY94B,GAAKn8B,EAAgBlI,KAAKyjC,IAAI,EAAGY,GAE/C,OAAO84B,CACT,CAsBO,SAAS47C,EAAqB1uG,GAEnC,IAAI7B,GADJ6B,GAAa2L,EAAAA,EAAAA,IAAc3L,IACHM,YACxB,IAAKnC,EAAQ,CACX,MAAM4wG,EACH,IAAM9mF,EAAAA,GAAgBkrC,QAAWnzD,EAAWuhC,mBAC/CpjC,GAAS0e,EAAAA,EAAAA,IAAgBkyF,GAAOA,EAAMA,EAAMA,EAC9C,CACA,OAAO5wG,CACT,C,sDC3IA,MAAM6wG,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UCvBZ,SAASC,EAAmBC,EAAU5rB,GAC3C,OAAO,SAOKngE,EAAWnd,EAAYnG,GAC/B,IAAKsjB,EACH,OAEF,IAAItH,EACJ,MAAMge,EAAI1W,EAAU,GACpB,GAAImgE,EAAU,CAEZ,MAAMzd,EAAQyd,EAASuV,iBAAiBh/D,GACpCgsC,IACFhqD,EAAOgqD,EAAM9tD,YAAc,EAE/B,CACA,ODaC,SAA2Bm3F,EAAUr1E,EAAG9jB,EAAGC,EAAG6F,GACnD,OAAOqzF,EACJ52F,QAAQu2F,EAAQh1E,EAAE3wB,YAClBoP,QAAQw2F,EAAQ/4F,EAAE7M,YAClBoP,QAAQy2F,EAAQ/4F,EAAE9M,YAClBoP,QAAQ02F,GAAY,WACnB,QAAa3+G,IAATwrB,EACF,MAAM,IAAI8J,MACR,6EAGJ,OAAQ9J,EAAO7F,GAAG9M,UACpB,GACJ,CC1BaimG,CAAkBD,EAAUr1E,EAAG1W,EAAU,GAAIA,EAAU,GAAItH,EACnE,CAEL,CAOO,SAASuzF,EAAoBC,EAAW/rB,GAC7C,MAAMzgE,EAAMwsF,EAAU76G,OAChB86G,EAAmB,IAAIt0G,MAAM6nB,GACnC,IAAK,IAAIrrB,EAAI,EAAGA,EAAIqrB,IAAOrrB,EACzB83G,EAAiB93G,GAAKy3G,EAAmBI,EAAU73G,GAAI8rF,GAEzD,OAOK,SAAoCgsB,GACzC,GAAgC,IAA5BA,EAAiB96G,OACnB,OAAO86G,EAAiB,GAE1B,OAAO,SAOKnsF,EAAWnd,EAAYnG,GAC/B,IAAKsjB,EACH,OAEF,MAAMsW,GAAI81E,EAAAA,EAAAA,IAAcpsF,GAClB/rB,GAAQirC,EAAAA,EAAAA,IAAO5I,EAAG61E,EAAiB96G,QACzC,OAAO86G,EAAiBl4G,GAAO+rB,EAAWnd,EAAYnG,EACvD,CAEL,CA3BS2vG,CAA2BF,EACpC,C,wBCDA,MAAMG,UAAmB1yF,EAAAA,EAIvBhtB,WAAAA,CAAYsK,GACVlK,MAAM,CACJ6sB,aAAc3iB,EAAQ2iB,aACtBoyE,wBAAyB/0F,EAAQ+0F,wBACjCvvF,WAAYxF,EAAQwF,WACpB1G,MAAOkB,EAAQlB,MACf4G,MAAO1F,EAAQ0F,MACfkd,YAAa5iB,EAAQ4iB,cAMvB7sB,KAAKqK,GAKLrK,KAAKsK,KAKLtK,KAAKuK,GAMLvK,KAAKs/G,qBACwBr/G,IAA3BgK,EAAQkpF,eAA+BlpF,EAAQkpF,eAAiB,EAMlEnzF,KAAKkzF,cAAgCjzF,IAArBgK,EAAQipF,SAAyBjpF,EAAQipF,SAAW,KAEpE,MAAMM,EAAW,CAAC,IAAK,KACnBxzF,KAAKkzF,WACPtwE,EAAAA,EAAAA,IAAO5iB,KAAKkzF,SAASO,YAAYzzF,KAAKkzF,SAASnsB,cAAeysB,GAOhExzF,KAAKu/G,QAAU,CAAC,EAAG,GAMnBv/G,KAAK0wF,KAAOzmF,EAAQ1C,MAAO4E,EAAAA,EAAAA,IAAOnM,MAMlCA,KAAKw/G,YAAc,CACjB1hD,WAAY7zD,EAAQ6zD,WACpBjxC,YAAa5iB,EAAQ4iB,aAUvB7sB,KAAKk0F,WAAajqF,EAAQiqF,WAAajqF,EAAQiqF,WAAa,CAC9D,CAMAN,sBAAAA,CAAuBnkF,GACrB,OAAO,CACT,CAMApH,MAAAA,GACE,OAAOrI,KAAK0wF,IACd,CAOA+uB,MAAAA,CAAOl4G,GACDvH,KAAK0wF,OAASnpF,IAChBvH,KAAK0wF,KAAOnpF,EACZvH,KAAKmL,UAET,CAOAg8D,cAAAA,CAAe13D,GACb,MAAMyjF,EAAWzjF,EACbzP,KAAK6xF,yBAAyBpiF,GAC9BzP,KAAKkzF,SACT,OAAKA,EAGEA,EAAS/rB,iBAFP,IAGX,CAWA8rB,OAAAA,CAAQxpD,EAAG9jB,EAAGC,EAAGhQ,EAAYnG,GAC3B,OAAOvB,EAAAA,EAAAA,KACT,CAOAwxG,WAAAA,GACE,OAAO1/G,KAAKkzF,QACd,CAMArB,wBAAAA,CAAyBpiF,GACvB,OAAKzP,KAAKkzF,SAGHlzF,KAAKkzF,SAFHrB,EAAyBpiF,EAGpC,CASA2jF,iBAAAA,CAAkBx9E,GAChB,OAAO5V,KAAKs/G,eACd,CAQAvpB,gBAAAA,CAAiBtsD,EAAG7zB,EAAYnG,GAC9B,MAAMyjF,EAAWlzF,KAAK6xF,yBAAyBpiF,GACzC0jF,EAAiBnzF,KAAKozF,kBAAkBx9E,GACxC49E,GAAW5wE,EAAAA,EAAAA,IAAOswE,EAASO,YAAYhqD,GAAIzpC,KAAKu/G,SACtD,OAAsB,GAAlBpsB,EACKK,GAEFmsB,EAAAA,EAAAA,IAAUnsB,EAAUL,EAAgBnzF,KAAKu/G,QAClD,CAWAK,8BAAAA,CAA+B7sF,EAAWtjB,GACxC,MAAMowG,OACW5/G,IAAfwP,EAA2BA,EAAazP,KAAKob,gBACzC83E,OACWjzF,IAAfwP,EACIzP,KAAK6xF,yBAAyBguB,GAC9B7/G,KAAKkzF,UAAYlzF,KAAK6xF,yBAAyBguB,GAIrD,OAHI7/G,KAAK+Q,YAAc8uG,EAAev9C,aACpCvvC,EHjNC,SAAemgE,EAAUngE,EAAWtjB,GACzC,MAAMg6B,EAAI1W,EAAU,GACdpkB,EAASukF,EAASqB,mBAAmBxhE,GACrCjjB,EAAmBquG,EAAqB1uG,GAC9C,KAAKgkB,EAAAA,EAAAA,IAAmB3jB,EAAkBnB,GAAS,CACjD,MAAMqB,GAAaC,EAAAA,EAAAA,IAASH,GACtBikC,EAAa3uC,KAAKgpD,MACrBt+C,EAAiB,GAAKnB,EAAO,IAAMqB,GAGtC,OADArB,EAAO,IAAMqB,EAAa+jC,EACnBm/C,EAASI,yBAAyB3kF,EAAQ86B,EACnD,CACA,OAAO1W,CACT,CGoMkBpjB,CAAMujF,EAAUngE,EAAW8sF,KAElCrX,EAAAA,EAAAA,IAAiBz1E,EAAWmgE,GAAYngE,EAAY,IAC7D,CAMA5sB,KAAAA,GAAS,CAKTorB,OAAAA,GACEvxB,KAAKmG,QACLpG,MAAMwxB,SACR,EAQK,MAAMuuF,UAAwBpgH,EAAAA,GAKnCC,WAAAA,CAAYC,EAAMkJ,GAChB/I,MAAMH,GAONI,KAAK8I,KAAOA,CACd,EAGF,UC1RA,EAMiB,gBANjB,EAce,cAdf,EAuBiB,gBCOjB,MAAMi3G,UAAgBV,EAIpB1/G,WAAAA,CAAYsK,GACVlK,MAAM,CACJ6sB,aAAc3iB,EAAQ2iB,aACtB4b,UAAWv+B,EAAQu+B,UACnB/4B,WAAYxF,EAAQwF,WACpB1G,MAAOkB,EAAQlB,MACfmqF,SAAUjpF,EAAQipF,SAClBC,eAAgBlpF,EAAQkpF,eACxBxjF,MAAO1F,EAAQ0F,MACfmuD,WAAY7zD,EAAQ6zD,WACpBjxC,YAAa5iB,EAAQ4iB,YACrBtlB,IAAK0C,EAAQ1C,IACby3F,wBAAyB/0F,EAAQ+0F,wBACjC9K,WAAYjqF,EAAQiqF,aAOtBl0F,KAAKggH,yBACHhgH,KAAKigH,kBAAoBF,EAAQ9+F,UAAUg/F,gBAM7CjgH,KAAKy3F,iBAAmBxtF,EAAQwtF,iBAE5BxtF,EAAQg2G,kBACVjgH,KAAKigH,gBAAkBh2G,EAAQg2G,iBAOjCjgH,KAAKkgH,KAAO,KAERj2G,EAAQi2G,KACVlgH,KAAKmgH,QAAQl2G,EAAQi2G,MACZj2G,EAAQyf,KACjB1pB,KAAKiyB,OAAOhoB,EAAQyf,KAOtB1pB,KAAKogH,iBAAmB,CAAC,CAC3B,CAQAC,mBAAAA,GACE,OAAOrgH,KAAKy3F,gBACd,CAQA6oB,kBAAAA,GACE,OAAOv8G,OAAOw8G,eAAevgH,MAAMigH,kBAAoBjgH,KAAKigH,gBACxDjgH,KAAKigH,gBAAgB59G,KAAKrC,MAC1BA,KAAKigH,eACX,CAUAO,OAAAA,GACE,OAAOxgH,KAAKkgH,IACd,CAOA33G,gBAAAA,CAAiBhF,GACf,MAAMuF,EAAoDvF,EAAMK,OAC1DioB,GAAM1f,EAAAA,EAAAA,IAAOrD,GACbwsF,EAAYxsF,EAAKE,WACvB,IAAIpJ,EACA01F,GAAarsF,EAAAA,EAAUigB,SACzBlpB,KAAKogH,iBAAiBv0F,IAAO,EAC7BjsB,EAAO6gH,GACE50F,KAAO7rB,KAAKogH,0BACdpgH,KAAKogH,iBAAiBv0F,GAC7BjsB,EACE01F,GAAarsF,EAAAA,EAAUE,MACnBs3G,EACAnrB,GAAarsF,EAAAA,EAAUC,OACrBu3G,OACAxgH,QAEEA,GAARL,GACFI,KAAKiD,cAAc,IAAI68G,EAAgBlgH,EAAMkJ,GAEjD,CAQA43G,mBAAAA,CAAoBjpB,GAClBz3F,KAAKy3F,iBAAmBA,EACxBz3F,KAAKmL,SACP,CASAw1G,kBAAAA,CAAmBV,EAAiB14G,GAClCvH,KAAKigH,gBAAkBA,EACJ,qBAAR14G,EACTvH,KAAKy/G,OAAOl4G,GAEZvH,KAAKmL,SAET,CAOA8mB,MAAAA,CAAOvI,GACL,MAAMw2F,EJ7GH,SAAmBx2F,GACxB,MAAMw2F,EAAO,GACb,IAAIr7E,EAAQ,sBAAsB+7E,KAAKl3F,GACvC,GAAImb,EAAO,CAET,MAAMg8E,EAAgBh8E,EAAM,GAAGi8E,WAAW,GACpCC,EAAel8E,EAAM,GAAGi8E,WAAW,GACzC,IAAIE,EACJ,IAAKA,EAAWH,EAAeG,GAAYD,IAAgBC,EACzDd,EAAKp7G,KAAK4kB,EAAIxB,QAAQ2c,EAAM,GAAI/V,OAAOsqD,aAAa4nC,KAEtD,OAAOd,CACT,CAEA,GADAr7E,EAAQ,kBAAkB+7E,KAAKl3F,GAC3Bmb,EAAO,CAET,MAAM4rE,EAAOhpE,SAAS5C,EAAM,GAAI,IAChC,IAAK,IAAIz9B,EAAIqgC,SAAS5C,EAAM,GAAI,IAAKz9B,GAAKqpG,EAAMrpG,IAC9C84G,EAAKp7G,KAAK4kB,EAAIxB,QAAQ2c,EAAM,GAAIz9B,EAAE0R,aAEpC,OAAOonG,CACT,CAEA,OADAA,EAAKp7G,KAAK4kB,GACHw2F,CACT,CIqFiBe,CAAUv3F,GACvB1pB,KAAKkgH,KAAOA,EACZlgH,KAAKmgH,QAAQD,EACf,CAQAC,OAAAA,CAAQD,GACNlgH,KAAKkgH,KAAOA,EACZ,MAAM34G,EAAM24G,EAAK57E,KAAK,MAClBtkC,KAAKggH,yBACPhgH,KAAK2gH,mBAAmB3B,EAAoBkB,EAAMlgH,KAAKkzF,UAAW3rF,GAElEvH,KAAKy/G,OAAOl4G,EAEhB,CAQA04G,eAAAA,CAAgBltF,EAAWnd,EAAYnG,GAEvC,EAGF,UC+FA,SAASyxG,EAAwBC,EAAWz4F,GACQy4F,EAAU19F,WAAYiF,IACtEA,CACJ,CAEA,QAhQA,cAAwBq3F,EAItBpgH,WAAAA,CAAYsK,GACVlK,MAAM,CACJ6sB,aAAc3iB,EAAQ2iB,aACtB4b,UAAWv+B,EAAQu+B,UACnB/4B,WAAYxF,EAAQwF,WACpB1G,MAAOkB,EAAQlB,MACfmqF,SAAUjpF,EAAQipF,SAClBuE,iBAAkBxtF,EAAQwtF,iBACtBxtF,EAAQwtF,iBACRypB,EACJ/tB,eAAgBlpF,EAAQkpF,eACxB8sB,gBAAiBh2G,EAAQg2G,gBACzBv2F,IAAKzf,EAAQyf,IACbw2F,KAAMj2G,EAAQi2G,KACdvwG,MAAO1F,EAAQ0F,MACfmuD,WAAY7zD,EAAQ6zD,WACpBjxC,iBAC0B5sB,IAAxBgK,EAAQ4iB,aAA4B5iB,EAAQ4iB,YAC9CtlB,IAAK0C,EAAQ1C,IACby3F,wBAAyB/0F,EAAQ+0F,wBACjC9K,WAAYjqF,EAAQiqF,aAOtBl0F,KAAK2oB,iBACqB1oB,IAAxBgK,EAAQ0e,YAA4B1e,EAAQ0e,YAAc,KAM5D3oB,KAAKohH,eACmBnhH,IAAtBgK,EAAQm3G,UAA0Bn3G,EAAQm3G,UAAY1tB,EAAAA,EAMxD1zF,KAAKqhH,sBAAwB,CAAC,EAM9BrhH,KAAKshH,4BAA8Br3G,EAAQs3G,2BAM3CvhH,KAAKwhH,0BAA2B,CAClC,CAOA5tB,sBAAAA,CAAuBnkF,GACrB,OACEzP,KAAKob,iBACL3L,KACCyiC,EAAAA,EAAAA,IAAWlyC,KAAKob,gBAAiB3L,GAE3B,EAEFzP,KAAKyhH,WACd,CAKAA,SAAAA,GACE,OAAO,CACT,CAOAp5G,MAAAA,GACE,IAAId,EAAMxH,MAAMsI,SAIhB,OAHKrI,KAAKy1F,mBACRluF,GAAO,0BAEFA,CACT,CAOAsqF,wBAAAA,CAAyBpiF,GACvB,MAAMiyG,EAAW1hH,KAAKob,gBACtB,GAAIpb,KAAKkzF,YAAcwuB,IAAYxvE,EAAAA,EAAAA,IAAWwvE,EAAUjyG,IACtD,OAAOzP,KAAKkzF,SAEd,MAAMyuB,GAAUx1G,EAAAA,EAAAA,IAAOsD,GAKvB,OAJMkyG,KAAW3hH,KAAKqhH,wBACpBrhH,KAAKqhH,sBAAsBM,GACzB9vB,EAAyBpiF,IAEtBzP,KAAKqhH,sBAAsBM,EACpC,CAYAC,WAAAA,CAAYn4E,EAAG9jB,EAAGC,EAAGhQ,EAAYnG,EAAYlI,GAC3C,MAAMwrB,EAAY,CAAC0W,EAAG9jB,EAAGC,GACnBi8F,EAAe7hH,KAAK4/G,+BACxB7sF,EACAtjB,GAEIqyG,EAAUD,EACZ7hH,KAAKigH,gBAAgB4B,EAAcjsG,EAAYnG,QAC/CxP,EACE6I,EAAO,IAAI9I,KAAKohH,UACpBruF,OACY9yB,IAAZ6hH,EAAwB74G,EAAAA,EAAUS,KAAOT,EAAAA,EAAUG,WACvCnJ,IAAZ6hH,EAAwBA,EAAU,GAClC9hH,KAAK2oB,YACL3oB,KAAKy3F,iBACLz3F,KAAKw/G,aAIP,OAFA12G,EAAKvB,IAAMA,EACXuB,EAAKxG,iBAAiBC,EAAAA,EAAUqG,OAAQ5I,KAAKuI,iBAAiBlG,KAAKrC,OAC5D8I,CACT,CAWAmqF,OAAAA,CAAQxpD,EAAG9jB,EAAGC,EAAGhQ,EAAYnG,GAC3B,MAAM8jC,EAAmBvzC,KAAKob,gBAC9B,IACGm4B,IACA9jC,IACDyiC,EAAAA,EAAAA,IAAWqB,EAAkB9jC,GAE7B,OAAOzP,KAAK+hH,gBACVt4E,EACA9jB,EACAC,EACAhQ,EACA29B,GAAoB9jC,GAGxB,MAAMsjB,EAAY,CAAC0W,EAAG9jB,EAAGC,GACnBre,EAAMvH,KAAKqI,SACXm+F,EAAiBxmG,KAAK6xF,yBAAyBt+C,GAC/CkzD,EAAiBzmG,KAAK6xF,yBAAyBpiF,GAC/Ci3F,EAAmB1mG,KAAK4/G,+BAC5B7sF,EACAtjB,GAEI3G,EAAO,IAAI6qF,EAAAA,EACfpgD,EACAizD,EACA/2F,EACAg3F,EACA1zE,EACA2zE,EACA1mG,KAAKozF,kBAAkBx9E,GACvB5V,KAAKyhH,aACL,CAACh4E,EAAG9jB,EAAGC,EAAGhQ,IACR5V,KAAK+hH,gBAAgBt4E,EAAG9jB,EAAGC,EAAGhQ,EAAY29B,IAC5CvzC,KAAKshH,4BACLthH,KAAKwhH,yBACLxhH,KAAKw/G,aAGP,OADA12G,EAAKvB,IAAMA,EACJuB,CACT,CAWAi5G,eAAAA,CAAgBt4E,EAAG9jB,EAAGC,EAAGhQ,EAAYnG,GACnC,MAAMlI,EAAMvH,KAAKqI,SACjB,OAAOrI,KAAK4hH,YAAYn4E,EAAG9jB,EAAGC,EAAGhQ,EAAYnG,EAAYlI,EAC3D,CAOAy6G,0BAAAA,CAA2BjuG,GACrB/T,KAAKwhH,0BAA4BztG,IAGrC/T,KAAKwhH,yBAA2BztG,EAChC/T,KAAKmL,UACP,CAcA82G,wBAAAA,CAAyBxyG,EAAYyyG,GACnC,MAAMC,GAAO/mG,EAAAA,EAAAA,IAAc3L,GAC3B,GAAI0yG,EAAM,CACR,MAAMR,GAAUx1G,EAAAA,EAAAA,IAAOg2G,GACjBR,KAAW3hH,KAAKqhH,wBACpBrhH,KAAKqhH,sBAAsBM,GAAWO,EAE1C,CACF,GCnLF,QAxDA,cAAkBE,EAIhBziH,WAAAA,CAAYsK,GAGV,MAAMwF,OACmBxP,KAHzBgK,EAAUA,GAAW,CAAC,GAGZwF,WAA2BxF,EAAQwF,WAAa,YAEpDyjF,OACiBjzF,IAArBgK,EAAQipF,SACJjpF,EAAQipF,SPSX,SAAmBjpF,GACxB,MAAMo4G,EAAap4G,GAAW,CAAC,EAEzB2D,EAASy0G,EAAWz0G,SAAUwN,EAAAA,EAAAA,IAAc,aAAarL,YAEzDuyG,EAAc,CAClB10G,OAAQA,EACRF,QAAS20G,EAAW30G,QACpB8lF,SAAU6uB,EAAW7uB,SACrBjxB,YAAa67C,EACXxwG,EACAy0G,EAAW10G,QACX00G,EAAW7uB,SACX6uB,EAAW/0G,gBAGf,OAAO,IAAI+wG,EAASiE,EACtB,COzBUC,CAAU,CACR30G,OAAQuwG,EAAqB1uG,GAC7BnC,cAAerD,EAAQqD,cACvBK,QAAS1D,EAAQ0D,QACjBD,QAASzD,EAAQyD,QACjB8lF,SAAUvpF,EAAQupF,WAG1BzzF,MAAM,CACJ6sB,aAAc3iB,EAAQ2iB,aACtB4b,UAAWv+B,EAAQu+B,UACnB7f,YAAa1e,EAAQ0e,YACrBkE,YAAa5iB,EAAQ4iB,YACrBpd,WAAYA,EACZ8xG,2BAA4Bt3G,EAAQs3G,2BACpCruB,SAAUA,EACVuE,iBAAkBxtF,EAAQwtF,iBAC1BtE,eAAgBlpF,EAAQkpF,eACxB8sB,gBAAiBh2G,EAAQg2G,gBACzBv2F,IAAKzf,EAAQyf,IACbw2F,KAAMj2G,EAAQi2G,KACdvwG,WAAyB1P,IAAlBgK,EAAQ0F,OAAsB1F,EAAQ0F,MAC7CmuD,WAAY7zD,EAAQ6zD,WACpBkhC,wBAAyB/0F,EAAQ+0F,wBACjC9K,WAAYjqF,EAAQiqF,aAOtBl0F,KAAK6mG,aAA6B5mG,IAAnBgK,EAAQ8hF,OAAuB9hF,EAAQ8hF,OAAS,CACjE,CAMA01B,SAAAA,GACE,OAAOzhH,KAAK6mG,OACd,E,oJC7EF,MAAMpiF,GAAevO,EAAAA,EAAAA,MAOrB,MAAMyY,EAUJhvB,WAAAA,CAAYC,EAAM20B,EAAiBuE,EAAMvR,EAAQ0/B,EAAYzjD,GAI3DxD,KAAKypF,cAMLzpF,KAAK6kB,QAML7kB,KAAK0mD,IAAMljD,EAMXxD,KAAKwiH,MAAQ5iH,EAMbI,KAAKyiH,iBAAmBluF,EAMxBv0B,KAAKwzD,oBAAsB,KAM3BxzD,KAAK0iH,eAAiB,KAMtB1iH,KAAK+4B,MAAQD,GAAQ,KAMrB94B,KAAK2iH,YAAc17D,EAMnBjnD,KAAKsiF,kBAMLtiF,KAAK4iH,QAAUr7F,EAMfvnB,KAAK6iH,mBACP,CAQAx2G,GAAAA,CAAI9E,GACF,OAAOvH,KAAK2iH,YAAYp7G,EAC1B,CAOAwI,SAAAA,GAYE,OAXK/P,KAAK6kB,UACR7kB,KAAK6kB,QACY,UAAf7kB,KAAKwiH,OACDnuF,EAAAA,EAAAA,IAA6Br0B,KAAKyiH,mBAClCnuF,EAAAA,EAAAA,IACEt0B,KAAKyiH,iBACL,EACAziH,KAAKyiH,iBAAiBr+G,OACtB,IAGHpE,KAAK6kB,OACd,CAKAqV,oBAAAA,GACE,IAAKl6B,KAAKwzD,oBAAqB,CAC7B,MAAMr5B,GAAa/E,EAAAA,EAAAA,IAAUp1B,KAAK+P,aAClC/P,KAAKwzD,qBAAsBp5B,EAAAA,EAAAA,GACzBp6B,KAAKyiH,iBACL,EACAziH,KAAK+4B,MACL,EACAoB,EACA,EAEJ,CACA,OAAOn6B,KAAKwzD,mBACd,CAKAW,qBAAAA,GACE,IAAKn0D,KAAKwzD,oBAAqB,CAC7B,MAAM16B,GAAO6I,EAAAA,EAAAA,IAAY3hC,KAAKyiH,iBAAkBziH,KAAK+4B,OAC/Cq7B,GAAcC,EAAAA,EAAAA,GAAmBr0D,KAAKyiH,iBAAkB,EAAG3pF,EAAM,GACvE94B,KAAKwzD,qBAAsBc,EAAAA,EAAAA,GACzBt0D,KAAKyiH,iBACL,EACA3pF,EACA,EACAs7B,EAEJ,CACA,OAAOp0D,KAAKwzD,mBACd,CAKAtB,eAAAA,GAUE,OATKlyD,KAAK0iH,iBACR1iH,KAAK0iH,gBAAiBzwD,EAAAA,EAAAA,IACpBjyD,KAAKyiH,iBACL,EACAziH,KAAKyiH,iBAAiBr+G,OACtB,EACA,KAGGpE,KAAK0iH,cACd,CAKAzvD,gBAAAA,GACE,IAAKjzD,KAAK0iH,eAAgB,CACxB1iH,KAAK0iH,eAAiB,GACtB,MAAMnuF,EAAkBv0B,KAAKyiH,iBAC7B,IAAIjuF,EAAS,EACb,MAAMsE,EAAqC94B,KAAK+4B,MAChD,IAAK,IAAI3xB,EAAI,EAAGwE,EAAKktB,EAAK10B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMqtB,EAAMqE,EAAK1xB,GACX+rD,GAAWlB,EAAAA,EAAAA,IAAiB19B,EAAiBC,EAAQC,EAAK,EAAG,KACnEjZ,EAAAA,EAAAA,IAAOxb,KAAK0iH,eAAgBvvD,GAC5B3+B,EAASC,CACX,CACF,CACA,OAAOz0B,KAAK0iH,cACd,CAQA7pG,KAAAA,GACE,OAAO7Y,KAAK0mD,GACd,CAKA9sB,0BAAAA,GACE,OAAO55B,KAAKyiH,gBACd,CAQAh0F,WAAAA,GACE,OAAOzuB,IACT,CAMAulB,qBAAAA,CAAsBF,GACpB,OAAOrlB,IACT,CAQAwlB,mBAAAA,CAAoBH,EAAkBC,GACpC,OAAOtlB,IACT,CAOAmnD,aAAAA,GACE,OAAOnnD,KAAK2iH,WACd,CAOA91D,qBAAAA,GACE,OAAO7sD,KAAK2iH,WACd,CAKAv6C,SAAAA,GACE,OAAOpoE,KAAK4iH,OACd,CAKAp7D,gBAAAA,GACE,OAAOxnD,KAAKypF,aACd,CAOA3iE,OAAAA,GACE,OAAO9mB,KAAKwiH,KACd,CAOAl9F,SAAAA,CAAU7V,GAER,MAAM+X,GADN/X,GAAa2L,EAAAA,EAAAA,IAAc3L,IACIM,YACzB0X,EAAkBhY,EAAWiY,iBACnC,GAAIF,GAAeC,EAAiB,CAClC,MAAM/E,GAAQiF,EAAAA,EAAAA,IAAUF,IAAmBE,EAAAA,EAAAA,IAAUH,IACrDjZ,EAAAA,EAAAA,IACEkW,EACAgD,EAAgB,GAChBA,EAAgB,GAChB/E,GACCA,EACD,EACA,EACA,IAEFmF,EAAAA,EAAAA,IACE7nB,KAAKyiH,iBACL,EACAziH,KAAKyiH,iBAAiBr+G,OACtB,EACAqgB,EACAzkB,KAAKyiH,iBAET,CACF,CASApnG,cAAAA,CAAe0L,GACbA,EAAY/mB,KAAKyiH,iBAAkBziH,KAAKyiH,iBAAkBziH,KAAK4iH,QACjE,CAKAthG,KAAAA,GAAQ,IAAAwhG,EACN,OAAO,IAAIn0F,EACT3uB,KAAKwiH,MACLxiH,KAAKyiH,iBAAiB13G,QACZ,QADmB+3G,EAC7B9iH,KAAK+4B,aAAK,IAAA+pF,OAAA,EAAVA,EAAY/3G,QACZ/K,KAAK4iH,QACL7+G,OAAOoG,OAAO,CAAC,EAAGnK,KAAK2iH,aACvB3iH,KAAK0mD,IAET,CAKAzsB,OAAAA,GACE,OAAOj6B,KAAK+4B,KACd,CAMAy+B,yBAAAA,GAkEE,OAjEAx3D,KAAKwlB,qBAAsBL,EAAAA,EAAAA,KAAW,CAACE,EAAkBC,KACvD,GAAID,IAAqBrlB,KAAKsiF,kBAC5B,OAAOtiF,KAAK6iH,oBAEd7iH,KAAK6iH,oBAAsB7iH,KAAKshB,QAC5BgE,GACFtlB,KAAK6iH,oBAAoBxnG,eAAeiK,GAE1C,MAAMmT,EACJz4B,KAAK6iH,oBAAoBvpF,qBAC3B,IAAIsB,EACJ,OAAQ56B,KAAKwiH,OACX,IAAK,aACH/pF,EAA0Br0B,QAASs0B,EAAAA,EAAAA,IACjCD,EACA,EACAz4B,KAAK6iH,oBAAoBJ,iBAAiBr+G,OAC1CpE,KAAK6iH,oBAAoBD,QACzBv9F,EACAoT,EACA,GAEFmC,EAAiB,CAACnC,EAA0Br0B,QAC5C,MACF,IAAK,kBACHw2B,EAAiB,GACjBnC,EAA0Br0B,QAASm+B,EAAAA,EAAAA,IACjC9J,EACA,EACAz4B,KAAK6iH,oBAAoB9pF,MACzB/4B,KAAK6iH,oBAAoBD,QACzBv9F,EACAoT,EACA,EACAmC,GAEF,MACF,IAAK,UACHA,EAAiB,GACjBnC,EAA0Br0B,QAASy2B,EAAAA,EAAAA,IACjCpC,EACA,EACAz4B,KAAK6iH,oBAAoB9pF,MACzB/4B,KAAK6iH,oBAAoBD,QACzBx9G,KAAKwX,KAAKyI,GACVoT,EACA,EACAmC,GAgBN,OAXIA,IACF56B,KAAK6iH,oBAAsB,IAAIl0F,EAC7B3uB,KAAKwiH,MACL/pF,EACAmC,EACA,EACA56B,KAAK2iH,YACL3iH,KAAK0mD,MAGT1mD,KAAKsiF,kBAAoBj9D,EAClBrlB,KAAK6iH,uBAEP7iH,IACT,EAMF2uB,EAAc1N,UAAUqY,mBACtB3K,EAAc1N,UAAU2Y,2BA8D1B,S,kCCzgBA,SACE7F,QAAS,EACTK,aAAc,EACdD,MAAO,EACPF,MAAO,EACPC,MAAO,EACPF,KAAM,G,uGCcK,IAAIppB,MAAM,GAMhB,SAASm4G,IACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EACzB,CAqEO,SAASC,EAAaC,EAAYC,GAOvC,OANAD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,CACT,CAWO,SAAS76G,EAAMkd,EAAW7kB,GAC/B,MAAMklB,EAAIllB,EAAW,GACfmlB,EAAInlB,EAAW,GAGrB,OAFAA,EAAW,GAAK6kB,EAAU,GAAKK,EAAIL,EAAU,GAAKM,EAAIN,EAAU,GAChE7kB,EAAW,GAAK6kB,EAAU,GAAKK,EAAIL,EAAU,GAAKM,EAAIN,EAAU,GACzD7kB,CACT,CA4DO,SAAS0iH,EAAQ79F,EAAWqd,EAAKC,EAAKlc,EAAIC,EAAIH,EAAOqc,EAAKC,GAC/D,MAAM1M,EAAMhxB,KAAKgxB,IAAI5P,GACf0P,EAAM9wB,KAAK8wB,IAAI1P,GAOrB,OANAlB,EAAU,GAAKoB,EAAKwP,EACpB5Q,EAAU,GAAKqB,EAAKyP,EACpB9Q,EAAU,IAAMoB,EAAK0P,EACrB9Q,EAAU,GAAKqB,EAAKuP,EACpB5Q,EAAU,GAAKud,EAAMnc,EAAKwP,EAAM4M,EAAMpc,EAAK0P,EAAMuM,EACjDrd,EAAU,GAAKud,EAAMlc,EAAKyP,EAAM0M,EAAMnc,EAAKuP,EAAM0M,EAC1Ctd,CACT,CAoCO,SAAS1W,EAAYhL,EAAQgN,GAClC,MAAMwyG,GAyBoBpW,EAzBFp8F,GA0Bb,GAAKo8F,EAAI,GAAKA,EAAI,GAAKA,EAAI,GADjC,IAAqBA,GAxB1BrmG,EAAAA,EAAAA,GAAe,IAARy8G,EAAW,4CAElB,MAAMhyG,EAAIR,EAAO,GACXS,EAAIT,EAAO,GACX44B,EAAI54B,EAAO,GACX08B,EAAI18B,EAAO,GACXi+C,EAAIj+C,EAAO,GACXy0B,EAAIz0B,EAAO,GASjB,OAPAhN,EAAO,GAAK0pC,EAAI81E,EAChBx/G,EAAO,IAAMyN,EAAI+xG,EACjBx/G,EAAO,IAAM4lC,EAAI45E,EACjBx/G,EAAO,GAAKwN,EAAIgyG,EAChBx/G,EAAO,IAAM4lC,EAAInE,EAAIiI,EAAIuhB,GAAKu0D,EAC9Bx/G,EAAO,KAAOwN,EAAIi0B,EAAIh0B,EAAIw9C,GAAKu0D,EAExBx/G,CACT,CAcA,MAAMy/G,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,GAQzC,SAASvqG,EAASk0F,GAEvB,MADwB,UAAYA,EAAI1oE,KAAK,MAAQ,GAEvD,CAOA,SAASoF,EAAW45E,GAElB,OADeA,EAAaz8E,UAAU,EAAGy8E,EAAal/G,OAAS,GAAGghC,MAAM,KAC1DvlC,IAAIgiB,WACpB,CAQO,SAASqwB,EAAWqxE,EAAeC,GACxC,MAAMC,EAAO/5E,EAAW65E,GAClBG,EAAOh6E,EAAW85E,GACxB,IAAK,IAAIp8G,EAAI,EAAGA,EAAI,IAAKA,EACvB,GAA6D,IAAzDhC,KAAKq9B,OAAOghF,EAAKr8G,GAAKs8G,EAAKt8G,IAAMi8G,EAAgBj8G,IACnD,OAAO,EAGX,OAAO,CACT,C,mCCnTO,IAKIu8G,EAAsB,QAEtBC,EAAqB,qBACrBC,EAAa,oBACbC,EAAU1+G,KAAKuyB,GAAK,EAOpBosF,EAAQ,MAIRC,EAAM,oBACNC,EAAM,kBACNC,EAAS9+G,KAAKuyB,GAAK,EACnBwsF,EAAmB,EAAV/+G,KAAKuyB,GAKdysF,EAAM,cC5BbC,EAAgB,CAEpBA,UAA0B,EAC1BA,QAAwB,eACxBA,MAAsB,eACtBA,QAAwB,gBACxBA,QAAwB,eACxBA,KAAqB,gBACrBA,KAAqB,eACrBA,QAAwB,iBACxBA,OAAuB,gBACvBA,SAAyB,SACzBA,UAA0B,gBAC1BA,OAAuB,WACvBA,KAAqB,iBAErB,UChBA,GACEC,GAAI,CAAEpJ,SAAU,MAChBqJ,GAAI,CAAErJ,SAAU,KAChBsJ,GAAI,CAAEtJ,SAAU,OAChB,QAAS,CAAEA,SAAU,KAAO,MAC5BuJ,KAAM,CAAEvJ,SAAU,QAClBwJ,IAAK,CAAExJ,SAAU,MACjB,QAAS,CAAEA,SAAU,kBACrB,QAAS,CAAEA,SAAU,kBACrByJ,GAAI,CAAEzJ,SAAU,KAChB,SAAU,CAAEA,SAAU,WACtB,SAAU,CAAEA,SAAU,WACtB0J,GAAI,CAAE1J,SAAU,UAChB2J,GAAI,CAAE3J,SAAU,OAChB4J,GAAI,CAAE5J,SAAU,SAChB6J,KAAM,CAAE7J,SAAU,SAClB8J,GAAI,CAAE9J,SAAU,IAChB+J,GAAI,CAAE/J,SAAU,OAChB,SAAU,CAAEA,SAAU,aACtB,QAAS,CAAEA,SAAU,kBACrB,QAAS,CAAEA,SAAU,mBCpBvB,IAAIgK,EAAc,iBACH,SAASrgF,EAAMpT,EAAKlqB,GACjC,GAAIkqB,EAAIlqB,GACN,OAAOkqB,EAAIlqB,GAMb,IAJA,IAGI49G,EAHAzyF,EAAO3uB,OAAO2uB,KAAKjB,GACnB2zF,EAAO79G,EAAI67B,cAAclb,QAAQg9F,EAAa,IAC9C99G,GAAK,IAEAA,EAAIsrB,EAAKtuB,QAGhB,IAFA+gH,EAAUzyF,EAAKtrB,IACQg8B,cAAclb,QAAQg9F,EAAa,MACrCE,EACnB,OAAO3zF,EAAI0zF,EAGjB,CCPe,SAAS,EAACE,GAEvB,IAYIC,EAAWC,EAAUC,EAZrB3hF,EAAO,CAAC,EACR4hF,EAAWJ,EAAQjgF,MAAM,KAAKvlC,KAAI,SAAU+oC,GAC9C,OAAOA,EAAE3D,MACX,IAAG7U,QAAO,SAAUhf,GAClB,OAAOA,CACT,IAAGkpE,QAAO,SAAUpF,EAAG9jE,GAErB,IAAIg0B,EAAQh0B,EAAEg0B,MAAM,KAGpB,OAFAA,EAAMtgC,MAAK,GACXowE,EAAE9vC,EAAM,GAAGhC,eAAiBgC,EAAM,GAC3B8vC,CACT,GAAG,CAAC,GAEAwwC,EAAS,CACXvD,KAAM,WACNwD,MAAO,YACPC,GAAI,SAAUh9E,GACZ/E,EAAK+hF,GAAK/jG,WAAW+mB,EACvB,EACAi9E,MAAO,SAAUj9E,GACf/E,EAAKiiF,KAAOl9E,EAAIo7E,CAClB,EACA+B,MAAO,SAAUn9E,GACf/E,EAAK8L,KAAO/G,EAAIo7E,CAClB,EACAgC,MAAO,SAAUp9E,GACf/E,EAAK+L,KAAOhH,EAAIo7E,CAClB,EACAiC,OAAQ,SAAUr9E,GAChB/E,EAAKoiF,OAASr9E,EAAIo7E,CACpB,EACAkC,MAAO,SAAUt9E,GACf/E,EAAKsiF,MAAQv9E,EAAIo7E,CACnB,EACAoC,MAAO,SAAUx9E,GACf/E,EAAKwiF,MAAQz9E,EAAIo7E,CACnB,EACAsC,MAAO,SAAU19E,GACf/E,EAAK0iF,MAAQ39E,EAAIo7E,CACnB,EACA98E,MAAO,SAAU0B,GACf/E,EAAKqD,MAAQrlB,WAAW+mB,GAAKo7E,CAC/B,EACAwC,MAAO,SAAU59E,GACf/E,EAAK4iF,qBAAuB5kG,WAAW+mB,GAAKo7E,CAC9C,EACA0C,KAAM,SAAU99E,GACd/E,EAAK8iF,MAAQ/9E,EAAIo7E,CACnB,EACA4C,IAAK,SAAUh+E,GACb/E,EAAKrO,GAAK3T,WAAW+mB,EACvB,EACAi+E,IAAK,SAAUj+E,GACb/E,EAAKpO,GAAK5T,WAAW+mB,EACvB,EACAk+E,IAAK,SAAUl+E,GACb/E,EAAKkjF,GAAKllG,WAAW+mB,EACvB,EACAmmB,EAAG,SAAUnmB,GACX/E,EAAKkjF,GAAKllG,WAAW+mB,EACvB,EACAx3B,EAAG,SAAUw3B,GACX/E,EAAKzyB,EAAIyQ,WAAW+mB,EACtB,EACAv3B,EAAG,SAAUu3B,GACX/E,EAAKxyB,EAAIwQ,WAAW+mB,EACtB,EACAM,EAAG,SAAUN,GACX/E,EAAKzyB,EAAIyyB,EAAKxyB,EAAIwQ,WAAW+mB,EAC/B,EACAo+E,IAAK,WACHnjF,EAAKojF,KAAM,CACb,EACAx6E,KAAM,SAAU7D,GACd/E,EAAK4I,KAAOhF,SAASmB,EAAG,GAC1B,EACAs+E,MAAO,WACLrjF,EAAKsjF,UAAW,CAClB,EACAC,QAAS,SAAUx+E,GACjB/E,EAAKwjF,aAAez+E,EAAExD,MAAM,KAAKvlC,KAAI,SAAUuR,GAC7C,OAAOyQ,WAAWzQ,EACpB,GACF,EACA8pG,SAAU,SAAUtyE,GAClB/E,EAAKq3E,SAAWr5F,WAAW+mB,EAC7B,EACAwB,MAAO,SAAUxB,GACf/E,EAAKuG,MAAQxB,EACb,IAAI0+E,EAAOziF,EAAMuF,EAAOxB,GACpB0+E,IACFzjF,EAAKq3E,SAAWoM,EAAKpM,SAEzB,EACAqM,eAAgB,SAAU3+E,GACxB/E,EAAK0jF,eAAiB3+E,EAAIo7E,CAC5B,EACAwD,GAAI,SAAU5+E,GACZ,IAAI4+E,EAAK3iF,EAAM4iF,EAAe7+E,GAC9B/E,EAAK0jF,gBAAkBC,GAAU3lG,WAAW+mB,IAAMo7E,CACpD,EACA0D,SAAU,SAAU9+E,GACR,UAANA,EACF/E,EAAK8jF,UAAY,OAEjB9jF,EAAK6jF,SAAW9+E,CAEpB,EACAqyE,KAAM,SAAUryE,GACd,IAAIg/E,EAAY,SACC,IAAbh/E,EAAExkC,SAAuD,IAAvCwjH,EAAU71F,QAAQ6W,EAAEi/E,OAAO,EAAG,MAAqD,IAAvCD,EAAU71F,QAAQ6W,EAAEi/E,OAAO,EAAG,MAAqD,IAAvCD,EAAU71F,QAAQ6W,EAAEi/E,OAAO,EAAG,MAC1IhkF,EAAKo3E,KAAOryE,EAEhB,EACAk/E,OAAQ,WACNjkF,EAAKikF,QAAS,CAChB,GAEF,IAAKxC,KAAaG,EAChBF,EAAWE,EAASH,GAChBA,KAAaI,EAEa,oBAD5BF,EAAeE,EAAOJ,IAEpBE,EAAaD,GAEb1hF,EAAK2hF,GAAgBD,EAGvB1hF,EAAKyhF,GAAaC,EAMtB,MAH8B,kBAAnB1hF,EAAK8jF,WAA6C,UAAnB9jF,EAAK8jF,YAC7C9jF,EAAK8jF,UAAY9jF,EAAK8jF,UAAUvkF,eAE3BS,CACT,CC0KA,QA5TA,MACE,YAAOhrB,CAAM+1E,GACX,MAAMm5B,EAASn5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,OAAbA,EAAM,KAClE,OAAIwsB,GAAUA,EAAO3jH,QAAU,EACtB,CACL4jH,UAAWD,EAAO,GAClB9/F,KAAMwf,SAASsgF,EAAO,GAAI,KAGvB,IACT,CAEA,kBAAOE,CAAYr5B,GAAqB,IAAfhvF,EAAIimC,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAG,OAC9B,IAAK+oD,GAAQA,EAAKxqF,OAAS,EACzB,MAAO,CAAExE,OAAMioD,KAAM,UAAWqgE,kBAAmB,MAGrD,MAAMrgE,EAAO+mC,EAAK,GACZu5B,EAAmBtmG,WAAW+sE,EAAK,KAAO,KAE1Cm5B,EAASn5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,OAAbA,EAAM,KAQlE,MAAO,CACL37F,OACAioD,OACAqgE,kBAAmBC,EACnB3kH,GAXSukH,EACP,CACAC,UAAWD,EAAO,GAClB9/F,KAAMwf,SAASsgF,EAAO,GAAI,KAE1B,KAQN,CAEA,kBAAOK,CAAYx5B,GACjB,MAAM/mC,EAAO+mC,EAAK,IAAM,UAGxB,IAAI7pC,EACJ,MAAMsjE,EAAoBxgE,EAAKhjB,MAAM,aACrC,GAAIwjF,EAAmB,CAErB,MAAMC,EAAeD,EAAkB,GAAGE,cAC1C,GAAqB,MAAjBD,EAAsBvjE,EAAY,YACjC,GAAqB,MAAjBujE,EAAsBvjE,EAAY,YACtC,IAAqB,MAAjBujE,EACJ,MAAM,IAAI/yF,MAAM,8BAADhJ,OAA+B+7F,IADpBvjE,EAAY,IACuB,CACpE,MAEEA,EAAY6pC,EAAK,GAAKA,EAAK,GAAGxrD,cAAgB,UAGhD,MAAMolF,EAAY55B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,UAAbA,EAAM,KAC/DvqF,EAAQw3G,EAAY/gF,SAAS+gF,EAAU,GAAI,IAAM,KAEjDC,EAAW75B,EAAKv1C,MACnBkiD,GACC3wF,MAAMC,QAAQ0wF,KACA,eAAbA,EAAM,IAAoC,cAAbA,EAAM,IAAmC,cAAbA,EAAM,MAIpE,MAAO,CACL1zC,OACA9C,YACAuiE,KALWtnH,KAAKioH,YAAYQ,GAM5Bz3G,QAEJ,CAEA,kBAAO03G,CAAY95B,GACjB,OAAOA,EACJx+D,QAAQmrE,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,SAAbA,EAAM,KAChD17F,KAAKo7G,GAASj7G,KAAKooH,YAAYnN,KAC/B9pG,MAAK,CAACC,EAAGC,KAAOD,EAAEJ,OAAS,IAAMK,EAAEL,OAAS,IACjD,CAEA,cAAO23G,CAAQ/5B,GAAmB,IAAbx/E,EAAMy2B,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE7B,OAAQ+oD,EAAK,IACX,IAAK,UACHx/E,EAAOxP,KAAO,eACdwP,EAAOy4C,KAAO+mC,EAAK,GACnBx/E,EAAOw5G,SAAWh6B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,gBAAbA,EAAM,KACjEv7F,KAAK2oH,QAAQ/5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,gBAAbA,EAAM,MAChE,KACJnsF,EAAOy5G,WAAaj6B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,eAAbA,EAAM,KACnEv7F,KAAK2oH,QAAQ/5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,eAAbA,EAAM,MAChE,KAEJ,MAAMutB,EAASl6B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,OAAbA,EAAM,KAC9DutB,IACF15G,EAAO25G,kBAAoB,CACzBnpH,KAAMkpH,EAAO,GACb7N,KAAMj7G,KAAK0oH,YAAY95B,KAI3B,MAAMo6B,EAAiBp6B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,eAAbA,EAAM,KAC1E,GAAIytB,EAAgB,CAClB,MAAM1B,EAAOtnH,KAAKioH,YAAYe,GAC9B55G,EAAO25G,kBAAkBzB,KAAOA,CAClC,CAEAl4G,EAAO5L,GAAKxD,KAAK6Y,MAAM+1E,GACvB,MAEF,IAAK,cACL,IAAK,UACHx/E,EAAOxP,KAAO,gBACdwP,EAAOy4C,KAAO+mC,EAAK,GAGnB,MAAMq6B,EAAsBr6B,EAAKv1C,MAC9BkiD,GAAU3wF,MAAMC,QAAQ0wF,KAAwB,UAAbA,EAAM,IAA+B,aAAbA,EAAM,MAEpE,GAAI0tB,EAAqB,CACvB,MAAMC,EAAkBlpH,KAAK2oH,QAAQM,GACN,aAA3BA,EAAoB,GACtB75G,EAAO+5G,eAAiBD,EAExB95G,EAAOu2G,MAAQuD,EAEjB,MAAME,EAASx6B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,WAAbA,EAAM,KAC9D6tB,GAAwB,cAAdA,EAAO,KACnBF,EAAgBG,eAAiB,CAC/BxhE,KAAMuhE,EAAO,GACbx7E,UAAW/rB,WAAWunG,EAAO,KAGnC,CAEAh6G,EAAO25G,kBAAoB,CACzBnpH,KAAM,cACNq7G,KAAMj7G,KAAK0oH,YAAY95B,IAGzBx/E,EAAO5L,GAAKxD,KAAK6Y,MAAM+1E,GACvB,MAEF,IAAK,QACHx/E,EAAOxP,KAAO,yBACdwP,EAAOy4C,KAAO+mC,EAAK,GACnBx/E,EAAOk6G,UAAY16B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,cAAbA,EAAM,KAClEv7F,KAAK2oH,QAAQ/5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,cAAbA,EAAM,MAChE,KACJ,MAEF,IAAK,WACHnsF,EAAOxP,KAAO,gBACdwP,EAAOy4C,KAAO+mC,EAAK,GAGnBx/E,EAAOm6G,QAAU36B,EACdx+D,QAAQmrE,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,WAAbA,EAAM,KAChD17F,KAAK2pH,IAAM,CACV5pH,KAAM,sBACNioD,KAAM2hE,EAAO,GACbhmH,GAAIxD,KAAK6Y,MAAM2wG,OAInB,MAAMC,EAAe76B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,qBAAbA,EAAM,KACpEkuB,IACFr6G,EAAOs6G,SAAW7nG,WAAW4nG,EAAa,KAI5C,MAAME,EAAgB/6B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,cAAbA,EAAM,KACrEouB,IACFv6G,EAAOk6G,UAAYtpH,KAAK2oH,QAAQgB,IAIlCv6G,EAAO5L,GAAKxD,KAAK6Y,MAAM+1E,GACvB,MAEF,IAAK,YACHx/E,EAAOxP,KAAO,YACdwP,EAAOy4C,KAAO+mC,EAAK,GACnBx/E,EAAOw6G,gBAAkB/nG,WAAW+sE,EAAK,IACzCx/E,EAAOy6G,mBAAqBhoG,WAAW+sE,EAAK,IAC9BA,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,eAAbA,EAAM,MAC7Dv7F,KAAK2oH,QAAQ/5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,eAAbA,EAAM,KAAsBnsF,GAE1F,MAEF,IAAK,aACHA,EAAOxP,KAAO,aACdwP,EAAOy4C,KAAO+mC,EAAK,GACnBx/E,EAAO06G,OAASl7B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,WAAbA,EAAM,KAC/Dv7F,KAAK2oH,QAAQ/5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,WAAbA,EAAM,MAChE,KACJnsF,EAAO26G,WAAan7B,EACjBx+D,QAAQmrE,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,cAAbA,EAAM,KAChD17F,KAAKmqH,GAAUhqH,KAAK2oH,QAAQqB,KAC/B,MAEF,IAAK,SACH56G,EAAOxP,KAAO,SACdwP,EAAOy4C,KAAO+mC,EAAK,GACnBx/E,EAAO5L,GAAKxD,KAAK6Y,MAAM+1E,GACvB,MAEF,IAAK,YACHx/E,EAAOxP,KAAO,YACdwP,EAAOy4C,KAAO+mC,EAAK,GACnBx/E,EAAOzK,MAAQkd,WAAW+sE,EAAK,IAC/Bx/E,EAAOk4G,KAAOtnH,KAAKioH,YACjBr5B,EAAKv1C,MACFkiD,GACC3wF,MAAMC,QAAQ0wF,KACA,eAAbA,EAAM,IAAoC,cAAbA,EAAM,IAAmC,cAAbA,EAAM,OAGtEnsF,EAAO5L,GAAKxD,KAAK6Y,MAAM+1E,GACvB,MAEF,IAAK,WACHx/E,EAAOxP,KAAO,WAGd,MAAMqqH,EAAgBr7B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,cAAbA,EAAM,KACzE,GAAI0uB,EAAe,CACjB,MAAMC,EAAmBD,EAAc5wE,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,KACrEnsF,EAAO+6G,WAAaD,EAAmBlqH,KAAK2oH,QAAQuB,GAAoB,IAC1E,CAGA,MAAME,EAAgBx7B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,cAAbA,EAAM,KACzE,GAAI6uB,EAAe,CACjB,MAAMC,EAAmBD,EAAc/wE,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,KACrEnsF,EAAOk7G,WAAaD,EAAmBrqH,KAAK2oH,QAAQ0B,GAAoB,IAC1E,CAGA,MAAME,EAAqB37B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,2BAAbA,EAAM,KAE5EnsF,EAAOo7G,eADLD,EACsBvqH,KAAK2oH,QAAQ4B,GAEb,KAE1B,MAEF,IAAK,yBAyBH,GAxBAn7G,EAAOxP,KAAO,iBACdwP,EAAOy4C,KAAO+mC,EAAK,GACnBx/E,EAAO06G,OAASl7B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,WAAbA,EAAM,KAC/Dv7F,KAAK2oH,QAAQ/5B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,WAAbA,EAAM,MAChE,KAEJnsF,EAAO26G,WAAan7B,EACjBx+D,QAAQmrE,GAAU3wF,MAAMC,QAAQ0wF,KAAwB,cAAbA,EAAM,IAAmC,kBAAbA,EAAM,MAC7E17F,KAAKmqH,GACa,cAAbA,EAAM,GACDhqH,KAAK2oH,QAAQqB,GACE,kBAAbA,EAAM,GACR,CACLniE,KAAMmiE,EAAM,GACZrlH,MAAOqlH,EAAM,GACbxmH,GAAI,CACF,UAAa,OACb,KAAQ,YANP,IAasB,IAA7B4L,EAAO26G,WAAW3lH,OAAc,CAClC,MAAMqmH,EAAkBr7G,EAAO26G,WAAW,GACb,qBAAzBU,EAAgB5iE,OAClB4iE,EAAgB9lH,MAAQS,KAAKq9B,MAAoC,MAA7BgoF,EAAgB9lH,MAAQ,IAAa,IAE7E,CAEAyK,EAAO5L,GAAKxD,KAAK6Y,MAAM+1E,GACvB,MAEF,IAAK,OACEx/E,EAAO25G,oBACV35G,EAAO25G,kBAAoB,CAAEnpH,KAAM,cAAeq7G,KAAM,KAE1D7rG,EAAO25G,kBAAkB9N,KAAKn2G,KAAK9E,KAAKooH,YAAYx5B,IACpD,MAEF,IAAK,aACH,MAAM04B,EAAOtnH,KAAKioH,YAAYr5B,EAAM,cAChCx/E,EAAO25G,mBAAqB35G,EAAO25G,kBAAkB9N,MACvD7rG,EAAO25G,kBAAkB9N,KAAK52G,SAAS42G,IAChCA,EAAKqM,OACRrM,EAAKqM,KAAOA,MAIdA,EAAKY,mBAAgD,IAA3BZ,EAAKY,mBAC7B94G,EAAOw6G,kBACTx6G,EAAOw6G,gBAAkB,CACvBjlH,MAAOyK,EAAOw6G,gBACdtC,SAIN,MAEF,QACEl4G,EAAOs7G,QAAU97B,EAAK,GAI1B,OAAOx/E,CACT,GCvSF,QAhBA,cAAkCu7G,EAChC,cAAOhC,CAAQ/5B,GAAmB,IAAbx/E,EAAMy2B,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAW7B,OAVA9lC,MAAM4oH,QAAQ/5B,EAAMx/E,GAGhBA,EAAO25G,mBAA0D,cAArC35G,EAAO25G,kBAAkB6B,gBAChDx7G,EAAO25G,kBAEZ35G,EAAOy7G,cACFz7G,EAAOy7G,MAGTz7G,CACT,GCsBF,QAnCA,cAAkCu7G,EAChC,cAAOhC,CAAQ/5B,GAAmB,IAAbx/E,EAAMy2B,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7B9lC,MAAM4oH,QAAQ/5B,EAAMx/E,GAGpB,MAAM05G,EAASl6B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,OAAbA,EAAM,KAC9DutB,IACF15G,EAAO25G,kBAAoB,CACzB6B,QAAS9B,EAAO,GAChB7N,KAAMj7G,KAAK0oH,YAAY95B,KAK3B,MAAMk8B,EAAYl8B,EAAKv1C,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,UAAbA,EAAM,KACrE,GAAIuvB,EAAW,CACb,MAAMC,EAAQD,EAAUzxE,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,UAAbA,EAAM,KAChEpmE,EAAO21F,EAAUzxE,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,SAAbA,EAAM,KAC/DzvE,EAAOg/F,EAAUzxE,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,SAAbA,EAAM,KACrEnsF,EAAOy7G,MAAQ,CAAC,EACZE,IACF37G,EAAOy7G,MAAME,MAAQA,EAAM,IAEzB51F,IACF/lB,EAAOy7G,MAAM11F,KAAOA,EAAK,IAEvBrJ,IACF1c,EAAOy7G,MAAM/+F,KAAOA,EAAK/gB,MAAM,GAEnC,CAEA,OAAOqE,CACT,GCFK,SAAS47G,EAAcC,GAC5B,MAAMC,EAzBR,SAA2BD,GAEzB,OAAIA,EAAK5xE,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,UAAbA,EAAM,KAC9C,QAIL0vB,EAAK5xE,MAAMkiD,GAAU3wF,MAAMC,QAAQ0wF,IAAuB,OAAbA,EAAM,MAIvC,aAAZ0vB,EAAK,IAAiC,YAAZA,EAAK,IAAoBA,EAAK,GAHnD,OASX,CAQkBE,CAAkBF,GAElC,OAD4B,SAAZC,EAAqBE,EAAsBC,GAC5C1C,QAAQsC,EACzB,CCpCA,QAqKA,SAAqBK,GACnB,IAAIhc,EAAS,IAAIic,EAAOD,GACxB,OAAOhc,EAAO5mE,QAChB,EAtKA,IAAI8iF,EAAU,EAMVC,EAAa,KACbC,EAAQ,WACRhB,EAAU,cACViB,EAAY,QACZC,EAAS,cAEb,SAASL,EAAO5iE,GACd,GAAoB,kBAATA,EACT,MAAM,IAAIpzB,MAAM,gBAElBv1B,KAAK2oD,KAAOA,EAAK1jB,OACjBjlC,KAAKg9F,MAAQ,EACbh9F,KAAK6rH,MAAQ,EACb7rH,KAAKirH,KAAO,KACZjrH,KAAKiiC,MAAQ,GACbjiC,KAAK8rH,cAAgB,KACrB9rH,KAAK+I,MAAQyiH,CACf,CCvBA,SAASO,EAAMt6F,EAAKlqB,EAAK5C,GACnBiG,MAAMC,QAAQtD,KAChB5C,EAAMswC,QAAQ1tC,GACdA,EAAM,MAER,IAAIykH,EAAQzkH,EAAM,CAAC,EAAIkqB,EAEnB8vB,EAAM58C,EAAM21E,QAAO,SAAS2xC,EAAQ5gG,GAEtC,OADA6gG,EAAM7gG,EAAM4gG,GACLA,CACT,GAAGD,GACCzkH,IACFkqB,EAAIlqB,GAAOg6C,EAEf,CAEO,SAAS2qE,EAAMtjF,EAAGnX,GACvB,GAAK7mB,MAAMC,QAAQ+9B,GAAnB,CAIA,IAAIrhC,EAAMqhC,EAAEylD,QAIZ,GAHY,cAAR9mF,IACFA,EAAMqhC,EAAEylD,SAEO,IAAbzlD,EAAExkC,OACJ,OAAIwG,MAAMC,QAAQ+9B,EAAE,KAClBnX,EAAIlqB,GAAO,CAAC,OACZ2kH,EAAMtjF,EAAE,GAAInX,EAAIlqB,UAGlBkqB,EAAIlqB,GAAOqhC,EAAE,IAGf,GAAKA,EAAExkC,OAIP,GAAY,YAARmD,EAAJ,CAIA,GAAY,SAARA,EAKF,OAJMA,KAAOkqB,IACXA,EAAIlqB,GAAO,SAEbkqB,EAAIlqB,GAAKzC,KAAK8jC,GAOhB,IAAIxhC,EACJ,OALKwD,MAAMC,QAAQtD,KACjBkqB,EAAIlqB,GAAO,CAAC,GAINA,GACN,IAAK,OACL,IAAK,SACL,IAAK,aAQH,OAPAkqB,EAAIlqB,GAAO,CACTsgD,KAAMjf,EAAE,GAAGxF,cACXulF,QAAS//E,EAAE,SAEI,IAAbA,EAAExkC,QACJ8nH,EAAMtjF,EAAE,GAAInX,EAAIlqB,KAGpB,IAAK,WACL,IAAK,YASH,OARAkqB,EAAIlqB,GAAO,CACTsgD,KAAMjf,EAAE,GACRx3B,EAAGw3B,EAAE,GACLg9E,GAAIh9E,EAAE,SAES,IAAbA,EAAExkC,QACJ8nH,EAAMtjF,EAAE,GAAInX,EAAIlqB,KAGpB,IAAK,SACL,IAAK,mBACL,IAAK,cACL,IAAK,QACL,IAAK,UACL,IAAK,UACL,IAAK,cAGH,OAFAqhC,EAAE,GAAK,CAAC,OAAQA,EAAE,SAClBmjF,EAAMt6F,EAAKlqB,EAAKqhC,GAElB,IAAK,WACL,IAAK,cACL,IAAK,YAGL,IAAK,eACL,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,UACL,IAAK,cACL,IAAK,gBACL,IAAK,SACL,IAAK,iBAIH,OAHAA,EAAE,GAAK,CAAC,OAAQA,EAAE,IAClBmjF,EAAMt6F,EAAKlqB,EAAKqhC,QAChBnX,EAAIlqB,GAAK3H,KAAO2H,GAElB,QAEE,IADAH,GAAK,IACIA,EAAIwhC,EAAExkC,QACb,IAAKwG,MAAMC,QAAQ+9B,EAAExhC,IACnB,OAAO8kH,EAAMtjF,EAAGnX,EAAIlqB,IAGxB,OAAOwkH,EAAMt6F,EAAKlqB,EAAKqhC,GAzE3B,MAFEnX,EAAIlqB,GAAOqhC,OAJXnX,EAAIlqB,IAAO,CAfb,MAFEkqB,EAAImX,IAAK,CAkGb,CD5FA2iF,EAAOtqG,UAAUkrG,cAAgB,WAC/B,IAAIC,EAAOpsH,KAAK2oD,KAAK3oD,KAAK6rH,SAC1B,GAvBW,IAuBP7rH,KAAK+I,MACP,KAAO0iH,EAAWloF,KAAK6oF,IAAO,CAC5B,GAAIpsH,KAAK6rH,OAAS7rH,KAAK2oD,KAAKvkD,OAC1B,OAEFgoH,EAAOpsH,KAAK2oD,KAAK3oD,KAAK6rH,QACxB,CAEF,OAAQ7rH,KAAK+I,OACX,KAAKyiH,EACH,OAAOxrH,KAAKqsH,QAAQD,GACtB,KApCU,EAqCR,OAAOpsH,KAAK0qH,QAAQ0B,GACtB,KApCS,EAqCP,OAAOpsH,KAAKssH,OAAOF,GACrB,KArCa,EAsCX,OAAOpsH,KAAKusH,WAAWH,GACzB,KAzCS,EA0CP,OAAOpsH,KAAKguC,OAAOo+E,GACrB,KAxCQ,EAyCN,OAEN,EACAb,EAAOtqG,UAAUsrG,WAAa,SAASH,GACrC,GAAa,MAATA,EAGF,OAFApsH,KAAKwsH,MAAQ,SACbxsH,KAAK+I,MAjDI,GAoDX,GAAI4iH,EAAUpoF,KAAK6oF,GAGjB,OAFApsH,KAAKwsH,KAAOxsH,KAAKwsH,KAAKvnF,YACtBjlC,KAAKysH,UAAUL,GAGjB,MAAM,IAAI72F,MAAM,oBAAqB62F,EAAO,8BAAgCpsH,KAAK6rH,MACnF,EACAN,EAAOtqG,UAAUwrG,UAAY,SAASL,GACpC,MAAa,MAATA,GACgB,OAAdpsH,KAAKwsH,MACPxsH,KAAK8rH,cAAchnH,KAAK9E,KAAKwsH,MAE/BxsH,KAAKwsH,KAAO,UACZxsH,KAAK+I,MAAQyiH,IAGF,MAATY,GACFpsH,KAAKg9F,QACa,OAAdh9F,KAAKwsH,OACPxsH,KAAK8rH,cAAchnH,KAAK9E,KAAKwsH,MAC7BxsH,KAAKwsH,KAAO,MAEdxsH,KAAK+I,MAAQyiH,EACbxrH,KAAK8rH,cAAgB9rH,KAAKiiC,MAAM17B,WAC3BvG,KAAK8rH,gBACR9rH,KAAK+I,OA3EC,UAkEV,CAcF,EACAwiH,EAAOtqG,UAAU+sB,OAAS,SAASo+E,GACjC,IAAIR,EAAOroF,KAAK6oF,GAAhB,CAIA,GAAIT,EAAUpoF,KAAK6oF,GAGjB,OAFApsH,KAAKwsH,KAAO3qG,WAAW7hB,KAAKwsH,WAC5BxsH,KAAKysH,UAAUL,GAGjB,MAAM,IAAI72F,MAAM,oBAAqB62F,EAAO,0BAA4BpsH,KAAK6rH,MAN7E,CAFE7rH,KAAKwsH,MAAQJ,CASjB,EACAb,EAAOtqG,UAAUqrG,OAAS,SAASF,GACpB,MAATA,EAIJpsH,KAAKwsH,MAAQJ,EAHXpsH,KAAK+I,MAhGQ,CAqGjB,EACAwiH,EAAOtqG,UAAUypG,QAAU,SAAS0B,GAClC,GAAI1B,EAAQnnF,KAAK6oF,GACfpsH,KAAKwsH,MAAQJ,MADf,CAIA,GAAa,MAATA,EAAc,CAChB,IAAIM,EAAa,GAWjB,OAVAA,EAAW5nH,KAAK9E,KAAKwsH,MACrBxsH,KAAKg9F,QACa,OAAdh9F,KAAKirH,KACPjrH,KAAKirH,KAAOyB,EAEZ1sH,KAAK8rH,cAAchnH,KAAK4nH,GAE1B1sH,KAAKiiC,MAAMn9B,KAAK9E,KAAK8rH,eACrB9rH,KAAK8rH,cAAgBY,OACrB1sH,KAAK+I,MAAQyiH,EAEf,CACA,IAAIG,EAAUpoF,KAAK6oF,GAInB,MAAM,IAAI72F,MAAM,oBAAqB62F,EAAO,2BAA6BpsH,KAAK6rH,OAH5E7rH,KAAKysH,UAAUL,EAhBjB,CAoBF,EACAb,EAAOtqG,UAAUorG,QAAU,SAASD,GAClC,GAAIV,EAAMnoF,KAAK6oF,GAGb,OAFApsH,KAAKwsH,KAAOJ,OACZpsH,KAAK+I,MArIK,GAwIZ,GAAa,MAATqjH,EAGF,OAFApsH,KAAKwsH,KAAO,QACZxsH,KAAK+I,MAxII,GA2IX,GAAI6iH,EAAOroF,KAAK6oF,GAGd,OAFApsH,KAAKwsH,KAAOJ,OACZpsH,KAAK+I,MA9II,GAiJX,IAAI4iH,EAAUpoF,KAAK6oF,GAInB,MAAM,IAAI72F,MAAM,oBAAqB62F,EAAO,2BAA6BpsH,KAAK6rH,OAH5E7rH,KAAKysH,UAAUL,EAInB,EACAb,EAAOtqG,UAAUynB,OAAS,WACxB,KAAO1oC,KAAK6rH,MAAQ7rH,KAAK2oD,KAAKvkD,QAC5BpE,KAAKmsH,gBAEP,IAxJU,IAwJNnsH,KAAK+I,MACP,OAAO/I,KAAKirH,KAEd,MAAM,IAAI11F,MAAM,2BAA4Bv1B,KAAK2oD,KAAO,eAAiB3oD,KAAK+I,MAChF,EEjKO,SAAS4jH,EAAIhiF,GAClB,MAHQ,oBAGDA,CACT,CAEO,SAASiiF,EAAwBC,GAEtC,MAAMC,GAAsBD,EAAI7R,UAAY,IAAI53E,cAAclb,QAAQ,KAAM,KAEvE2kG,EAAI1G,QAAS0G,EAAIlG,OAAiC,4BAAvBmG,GAA2E,iCAAvBA,IAClFD,EAAI1G,MAAQ0G,EAAIlG,OAEbkG,EAAI5G,SAAU4G,EAAIl9E,MAAgC,6BAAvBm9E,GAA4E,oCAAvBA,EAIzED,EAAI5G,SAAU4G,EAAI/G,MAAgC,wBAAvBgH,GAAuE,oCAAvBA,IACrFD,EAAI5G,OAAS4G,EAAI/G,KACjB+G,EAAI/G,KAAO6G,EAAIE,EAAI/G,KAAO,EAAI,IAAM,WAC7B+G,EAAIl9E,OANXk9E,EAAI/G,KAAO6G,EAAIE,EAAIl9E,KAAO,EAAI,IAAM,IACpCk9E,EAAI5G,OAAS4G,EAAIl9E,YACVk9E,EAAIl9E,KAMf,CCnBA,SAASo9E,EAAYzF,GACnB,IAAIl4G,EAAS,CAAEg7B,MAAO,KAAM8wE,cAAUj7G,GAkBtC,MAhBoB,kBAATqnH,GACTl4G,EAAOg7B,MAAQk9E,EAAKlkF,cACC,UAAjBh0B,EAAOg7B,QACTh7B,EAAOg7B,MAAQ,SAEI,UAAjBh7B,EAAOg7B,QACTh7B,EAAO8rG,SAAW,IAEXoM,GAAQA,EAAKz/D,OACtBz4C,EAAOg7B,MAAQk9E,EAAKz/D,KAAKzkB,cACJ,UAAjBh0B,EAAOg7B,QACTh7B,EAAOg7B,MAAQ,SAEjBh7B,EAAO8rG,SAAWoM,EAAKY,mBAGlB94G,CACT,CAEA,SAAS49G,EAAQC,GACf,MAA6B,kBAAlBA,EACFA,EAActoH,MAAQsoH,EAAc3F,KAAKY,kBAE3C+E,CACT,CAEA,SAASC,EAAmBvoH,EAAOyK,GAC7BzK,EAAM2kH,UAAU55E,QAClBtgC,EAAOgC,EAAIzM,EAAM2kH,UAAU55E,OAC3BtgC,EAAOw2G,GAAK,IAEZx2G,EAAOgC,EAAI47G,EAAQroH,EAAM2kH,UAAUM,sBACQ3pH,IAAvC0E,EAAM2kH,UAAUO,mBAClBz6G,EAAOw2G,GAAKjhH,EAAM2kH,UAAUO,wBACiB5pH,IAApC0E,EAAM2kH,UAAUM,sBAAqE3pH,IAApC0E,EAAM2kH,UAAU6D,kBAC1E/9G,EAAOw2G,GAAKx2G,EAAOgC,GAAKhC,EAAOgC,EAAI47G,EAAQroH,EAAM2kH,UAAU6D,mBAGjE,CAEO,SAASC,EAAkBC,GAAuB,IAAbj+G,EAAMy2B,UAAAzhC,OAAA,QAAAnE,IAAA4lC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpD,OAAKwnF,GAAgC,kBAAbA,EAIF,aAAlBA,EAASztH,MACXwtH,EAAkBC,EAASlD,WAAY/6G,GAEnCi+G,EAAS7C,iBACP6C,EAAS7C,eAAeV,QAAkD,SAAxCuD,EAAS7C,eAAeV,OAAOjiE,KAEnEz4C,EAAOs4G,SAAW2F,EAAS7C,eAAeT,WAAW,GAAGplH,MAGxDyK,EAAOi4G,aAAegG,EAAS7C,eAAeT,WAAWlqH,KAAKmqH,GAAUA,EAAMrlH,SAG3EyK,IAITrL,OAAO2uB,KAAK26F,GAAUhpH,SAASkD,IAC7B,MAAM5C,EAAQ0oH,EAAS9lH,GACvB,GAAc,OAAV5C,EAIJ,OAAQ4C,GACN,IAAK,OACH,GAAI6H,EAAOk+G,QACT,MAEFl+G,EAAOy4C,KAAOljD,EACdyK,EAAOk+G,QAAU3oH,EACjB,MAEF,IAAK,OACW,kBAAVA,EACFyK,EAAO4rG,SAAW,UACC,iBAAVr2G,GAA4B0oH,EAASxE,YAAcwE,EAASxE,WAAWiB,SAChF16G,EAAO4rG,SAAWqS,EAASxE,WAAWiB,OAAOjiE,MAE/C,MAEF,IAAK,QACL,IAAK,iBACCljD,EAAM2kH,YAERl6G,EAAOm+G,MAAQ5oH,EAAM2kH,UAAUzhE,KAC/BqlE,EAAmBvoH,EAAOyK,IAExBzK,EAAM0kH,iBACRj6G,EAAOm4G,eAAiB5iH,EAAM0kH,eAAez7E,UAAYxoC,KAAKuyB,GAAK,KAErE,MAEF,IAAK,YACHvoB,EAAOm+G,MAAQ5oH,EAAMkjD,KACrBqlE,EAAmBvoH,EAAOyK,GAC1B,MAEF,IAAK,iBACHA,EAAO+2G,OAASxhH,EAAMipC,WAAa,GAAKxoC,KAAKuyB,GAAK,IAClD,MAEF,IAAK,oBACH,GAAIhzB,EAAMs2G,KAYR,GAXA7rG,EAAO6rG,KAAOt2G,EAAMs2G,KACjBp7G,KAAKo7G,IACJ,MAAMl2D,EAAYk2D,EAAKl2D,UACvB,GAAkB,SAAdA,EAAsB,MAAO,IACjC,GAAkB,UAAdA,EAAuB,MAAO,IAClC,GAAkB,SAAdA,EAAsB,MAAO,IACjC,GAAkB,UAAdA,EAAuB,MAAO,IAClC,MAAM,IAAIxvB,MAAM,2BAADhJ,OAA4Bw4B,OAE5CzgB,KAAK,IAAM,IAEV3/B,EAAM2iH,KAAM,CACd,MAAM,MAAEl9E,EAAK,SAAE8wE,GAAa6R,EAAYpoH,EAAM2iH,MAC9Cl4G,EAAOg7B,MAAQA,EACfh7B,EAAO8rG,SAAWA,CACpB,MAAO,GAAIv2G,EAAMs2G,KAAK,IAAMt2G,EAAMs2G,KAAK,GAAGqM,KAAM,CAC9C,MAAM,MAAEl9E,EAAK,SAAE8wE,GAAa6R,EAAYpoH,EAAMs2G,KAAK,GAAGqM,MACtDl4G,EAAOg7B,MAAQA,EACfh7B,EAAO8rG,SAAWA,CACpB,CAEF,MAEF,IAAK,KACCv2G,EAAMqjH,WAAarjH,EAAMsjB,OAC3B7Y,EAAOstB,MAAQ/3B,EAAMqjH,UAAY,IAAMrjH,EAAMsjB,MAE/C,MAEF,IAAK,aACCtjB,EAAMmlH,QAAUnlH,EAAMmlH,OAAOjiE,OAC/Bz4C,EAAO4rG,SAAWr2G,EAAMmlH,OAAOjiE,MAE7BljD,EAAMolH,YACRplH,EAAMolH,WAAW1lH,SAAS2lH,IACxB,MAAM1E,EAAY0E,EAAMniE,KAAKzkB,cAAclb,QAAQ,OAAQ,KACrDslG,EAAaxD,EAAMrlH,MACrBqlH,EAAM1C,MAAQ0C,EAAM1C,KAAKY,kBAC3B94G,EAAOk2G,GAAakI,EAAaxD,EAAM1C,KAAKY,kBACpB,WAAf8B,EAAM1C,KACfl4G,EAAOk2G,GAAakI,EAAapoH,KAAKuyB,GAAK,IAE3CvoB,EAAOk2G,GAAakI,KAI1B,MAEF,IAAK,OACC7oH,EAAMkjD,OACRz4C,EAAOg7B,MAAQzlC,EAAMkjD,KAAKzkB,cACL,UAAjBh0B,EAAOg7B,QACTh7B,EAAOg7B,MAAQ,UAGfzlC,EAAMujH,oBACR94G,EAAO8rG,SAAWv2G,EAAMujH,mBAE1B,MAEF,IAAK,WACHkF,EAAkBzoH,EAAOyK,GACzBA,EAAOu4G,UAAYhjH,EAAMnB,GAAKmB,EAAMnB,GAAGwkH,UAAY,IAAMrjH,EAAMnB,GAAGykB,KAAOtjB,EAAMkjD,cAU7C5nD,IAApCmP,EAAOq+G,2BACTr+G,EAAO02G,KAAO12G,EAAOq+G,+BAEkBxtH,IAArCmP,EAAOs+G,4BACTt+G,EAAO+2G,MAAQ/2G,EAAOs+G,gCAEqBztH,IAAzCmP,EAAOu+G,gCACTv+G,EAAO02G,KAAO12G,EAAOu+G,8BACrBv+G,EAAOugC,KAAOvgC,EAAOu+G,oCAE0B1tH,IAA7CmP,EAAOw+G,oCACTx+G,EAAOugC,KAAOvgC,EAAOw+G,wCAE0B3tH,IAA7CmP,EAAOy+G,oCACTz+G,EAAOwgC,KAAOxgC,EAAOy+G,wCAEsB5tH,IAAzCmP,EAAO0+G,gCACT1+G,EAAO02G,KAAO12G,EAAO0+G,oCAEuB7tH,IAA1CmP,EAAO2+G,iCACT3+G,EAAOu3G,MAAQv3G,EAAO2+G,qCAEe9tH,IAAnCmP,EAAO4+G,0BACT5+G,EAAOomB,GAAKpmB,EAAO4+G,8BAEmB/tH,IAApCmP,EAAO6+G,2BACT7+G,EAAOqmB,GAAKrmB,EAAO6+G,+BAEqBhuH,IAAtCmP,EAAO8+G,6BACT9+G,EAAO02G,KAAO12G,EAAO8+G,iCAEoBjuH,IAAvCmP,EAAO++G,8BACT/+G,EAAO+2G,MAAQ/2G,EAAO++G,kCAEWluH,IAA/BmP,EAAOg/G,sBACTh/G,EAAO+2G,MAAQ/2G,EAAOg/G,0BAEKnuH,IAAzBmP,EAAOi/G,gBACTj/G,EAAOomB,GAAKpmB,EAAOi/G,eAEjBj/G,EAAOk/G,+BACTl/G,EAAOomB,GAAKpmB,EAAOk/G,mCAESruH,IAA1BmP,EAAOm/G,iBACTn/G,EAAOqmB,GAAKrmB,EAAOm/G,gBAEjBn/G,EAAOo/G,gCACTp/G,EAAOqmB,GAAKrmB,EAAOo/G,oCAEcvuH,IAA/BmP,EAAOq/G,sBACTr/G,EAAOugC,KAAOvgC,EAAOq/G,0BAEYxuH,IAA/BmP,EAAOs/G,sBACTt/G,EAAOwgC,KAAOxgC,EAAOs/G,0BAEuBzuH,IAA1CmP,EAAOu/G,iCACTv/G,EAAO23G,GAAK33G,EAAOu/G,qCAE4B1uH,IAA7CmP,EAAOw/G,oCACTx/G,EAAO23G,GAAK33G,EAAOw/G,wCAEmC3uH,IAApDmP,EAAOy/G,2CACTz/G,EAAO23G,GAAK33G,EAAOy/G,+CAEE5uH,IAAnBmP,EAAO0/G,UACT1/G,EAAO83B,MAAQ93B,EAAO0/G,cAEoB7uH,IAAxCmP,EAAO2/G,+BACT3/G,EAAO83B,MAAQ93B,EAAO2/G,8BAEpB3/G,EAAO4/G,oCACT5/G,EAAOq3G,qBAAuBr3G,EAAO4/G,mCAIvCpC,EAAwBx9G,GAEjBA,GAtNEi+G,CAuNX,CChQA,IAAI4B,EAAa,CAAC,eAAgB,UAAW,SAAU,SAAU,SAAU,WAAY,UACrF,cAAe,gBAAiB,SAAU,kBAa5C,SAASC,EAASrC,GAEhB,IADA,IAAIn6F,EAAO3uB,OAAO2uB,KAAKm6F,GACdzlH,EAAI,EAAGwE,EAAK8mB,EAAKtuB,OAAQgD,EAAGwE,IAAMxE,EAAG,CAC5C,IAAIG,EAAMmrB,EAAKtrB,IAGkB,IAA7B6nH,EAAWl9F,QAAQxqB,IACrB4nH,EAAqBtC,EAAItlH,IAEH,kBAAbslH,EAAItlH,IACb2nH,EAASrC,EAAItlH,GAEjB,CACF,CAEA,SAAS4nH,EAAqBtC,GAC5B,GAAIA,EAAIuC,UAAW,CACjB,IAAIpH,EAAYjkH,OAAO2uB,KAAKm6F,EAAIuC,WAAW,GACvCpH,GAAaA,KAAa6E,EAAIuC,YAChCvC,EAAInwF,MAAQsrF,EAAY,IAAM6E,EAAIuC,UAAUpH,GAEhD,CAaA,GAZiB,WAAb6E,EAAIjtH,KACNitH,EAAI7R,SAAW,UACO,aAAb6R,EAAIjtH,MACbitH,EAAI7R,SAAW,WACf6R,EAAIwC,OAAQ,GAEkB,kBAAnBxC,EAAIyC,WACbzC,EAAI7R,SAAWj3G,OAAO2uB,KAAKm6F,EAAIyC,YAAY,GAE3CzC,EAAI7R,SAAW6R,EAAIyC,WAGnBzC,EAAI0C,KAAM,CAEZ,IADA,IAAIC,EAAY,GACPpoH,EAAI,EAAGwE,EAAKihH,EAAI0C,KAAKnrH,OAAQgD,EAAIwE,IAAMxE,EAAG,CACjD,IAAI6zG,EAAO,CAAC4R,EAAI0C,KAAKnoH,GAAG,GAAGg8B,cAAeypF,EAAI0C,KAAKnoH,GAAG,GAAGg8B,gBACvB,IAA9B63E,EAAK,GAAGlpF,QAAQ,WAAiC,MAAZkpF,EAAK,IAA0B,QAAZA,EAAK,KAA6B,UAAZA,EAAK,GACrFuU,GAAa,KAC0B,IAA9BvU,EAAK,GAAGlpF,QAAQ,WAAiC,MAAZkpF,EAAK,IAA0B,QAAZA,EAAK,KAA6B,UAAZA,EAAK,GAC5FuU,GAAa,KACyB,IAA7BvU,EAAK,GAAGlpF,QAAQ,UAAgC,MAAZkpF,EAAK,IAA0B,QAAZA,EAAK,KAA6B,SAAZA,EAAK,GAC3FuU,GAAa,KACyB,IAA7BvU,EAAK,GAAGlpF,QAAQ,UAAgC,MAAZkpF,EAAK,IAA0B,QAAZA,EAAK,IAA6B,SAAZA,EAAK,MAC3FuU,GAAa,IAEjB,CACyB,IAArBA,EAAUprH,SACZorH,GAAa,KAEU,IAArBA,EAAUprH,SACZyoH,EAAI5R,KAAOuU,EAEf,CACI3C,EAAI4C,OACN5C,EAAIziF,MAAQyiF,EAAI4C,KAAK5nE,KAAKzkB,cACR,UAAdypF,EAAIziF,QACNyiF,EAAIziF,MAAQ,SAEVyiF,EAAI4C,KAAK9G,UACM,WAAbkE,EAAIjtH,KACFitH,EAAI6C,OAAS7C,EAAI6C,MAAMC,WACzB9C,EAAI3R,SAAW2R,EAAI4C,KAAK9G,QAAQkE,EAAI6C,MAAMC,SAASv+G,GAGrDy7G,EAAI3R,SAAW2R,EAAI4C,KAAK9G,UAI9B,IAAIiH,EAAS/C,EAAIgD,OAiEjB,SAASC,EAAQnlF,GAEf,OAAOA,GADKkiF,EAAI3R,UAAY,EAE9B,CAnEiB,WAAb2R,EAAIjtH,OACNgwH,EAAS/C,GAEP+C,IAIEA,EAAOF,MACT7C,EAAIlF,UAAYiI,EAAOF,MAAM7nE,KAAKzkB,cAElCypF,EAAIlF,UAAYiI,EAAO/nE,KAAKzkB,cAEI,OAA9BypF,EAAIlF,UAAU58G,MAAM,EAAG,KACzB8hH,EAAIlF,UAAYkF,EAAIlF,UAAU58G,MAAM,IAEhB,qBAAlB8hH,EAAIlF,YACNkF,EAAIlF,UAAY,UAEI,aAAlBkF,EAAIlF,WAA8C,+BAAlBkF,EAAIlF,YACf,8BAAnBkF,EAAIyC,aACNzC,EAAIkD,QAAS,GAEflD,EAAIlF,UAAY,SAEI,eAAlBkF,EAAIlF,YACNkF,EAAIlF,UAAY,SAEdiI,EAAOF,OAASE,EAAOF,MAAMC,WAC/B9C,EAAIU,MAAQqC,EAAOF,MAAMC,SAAS9nE,KAAK3/B,QAAQ,MAAO,IAAIA,QAAQ,gBAAiB,QACtC,kBAAzC2kG,EAAIU,MAAMnqF,cAAcr4B,MAAM,EAAG,MACnC8hH,EAAIU,MAAQ,QAGdV,EAAIz7G,EAAIw+G,EAAOF,MAAMC,SAASv+G,EAC9By7G,EAAIjH,GAAK/jG,WAAW+tG,EAAOF,MAAMC,SAAS/J,GAAI,KAG5CgK,EAAOF,OAASE,EAAOF,MAAMM,UAC/BnD,EAAIxF,aAAeuI,EAAOF,MAAMM,UAE7BnD,EAAIlF,UAAU51F,QAAQ,eACzB86F,EAAIlF,UAAY,WAEbkF,EAAIlF,UAAU51F,QAAQ,eACzB86F,EAAIlF,UAAY,YAEbkF,EAAIlF,UAAU51F,QAAQ,UACrB86F,EAAIlF,UAAU51F,QAAQ,6BAC1B86F,EAAIlF,UAAY,SAEI,YAAlBkF,EAAIlF,YACNkF,EAAIlF,UAAY,WAEbkF,EAAIlF,UAAU51F,QAAQ,YACzB86F,EAAIlF,UAAY,UAGhBkF,EAAIx7G,IAAMomB,SAASo1F,EAAIx7G,KACzBw7G,EAAIx7G,EAAIw7G,EAAIz7G,GAEVy7G,EAAIpG,uBACNoG,EAAIpG,qBAAuBkG,EAAIE,EAAIpG,uBAU1B,CACT,CAAC,sBAAuB,uBACxB,CAAC,sBAAuB,qCACxB,CAAC,sBAAuB,uBACxB,CAAC,sBAAuB,qCACxB,CAAC,gBAAiB,iBAClB,CAAC,gBAAiB,iBAClB,CAAC,gBAAiB,2BAClB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,kBACnB,CAAC,iBAAkB,4BACnB,CAAC,mBAAoB,oBACrB,CAAC,mBAAoB,+BACrB,CAAC,mBAAoB,6BACrB,CAAC,qBAAsB,sBACvB,CAAC,qBAAsB,oBACvB,CAAC,qBAAsB,8BACvB,CAAC,qBAAsB,4BACvB,CAAC,eAAgB,gBACjB,CAAC,KAAM,gBACP,CAAC,qBAAsB,sBACvB,CAAC,qBAAsB,sBACvB,CAAC,OAAQ,qBAAsBkG,GAC/B,CAAC,sBAAuB,uBACxB,CAAC,sBAAuB,uBACxB,CAAC,QAAS,sBAAuBA,GACjC,CAAC,KAAM,gBAAiBmD,GACxB,CAAC,KAAM,iBAAkBA,GACzB,CAAC,QAAS,mBAAoBnD,GAC9B,CAAC,OAAQ,qBAAsBA,GAC/B,CAAC,OAAQ,sBAAuBA,GAChC,CAAC,OAAQ,sBAAuBA,GAChC,CAAC,OAAQ,sBAAuBA,GAChC,CAAC,UAAW,WACZ,CAAC,QAAS,UAAWA,GACrB,CAAC,UAAW,SAETtoH,SAxCS,SAAS+M,GACrB,OAvJJ,SAAgBqgB,EAAKi0F,GACnB,IAAIuK,EAAUvK,EAAO,GACjBwK,EAASxK,EAAO,KACduK,KAAWx+F,IAASy+F,KAAUz+F,IAClCA,EAAIw+F,GAAWx+F,EAAIy+F,GACG,IAAlBxK,EAAOthH,SACTqtB,EAAIw+F,GAAWvK,EAAO,GAAGj0F,EAAIw+F,KAGnC,CA8IWE,CAAOtD,EAAKz7G,EACrB,IAuCAw7G,EAAwBC,EAC1B,CACe,WAASA,GACtB,GAAmB,kBAARA,EACT,OAAOO,EAAkBP,GAE3B,MAAM3B,EC1MD,SAA0B2B,GAE/B,MAAMuD,EAAgBvD,EAAItE,cAG1B,OACE6H,EAAc9sF,SAAS,YACvB8sF,EAAc9sF,SAAS,YACvB8sF,EAAc9sF,SAAS,aACvB8sF,EAAc9sF,SAAS,YACvB8sF,EAAc9sF,SAAS,eACvB8sF,EAAc9sF,SAAS,cACvB8sF,EAAc9sF,SAAS,aAEhB,QAKP8sF,EAAc9sF,SAAS,WACvB8sF,EAAc9sF,SAAS,WACvB8sF,EAAc9sF,SAAS,aACvB8sF,EAAc9sF,SAAS,YACvB8sF,EAAc9sF,SAAS,QAEhB,OAKX,CD4KkB+sF,CAAiBxD,GACjC,IAAIyD,EAAOhhB,EAAOud,GAClB,GAAgB,SAAZ3B,EAAoB,CAEtB,OAAOkC,EADUpC,EAAcsF,GAEjC,CACA,IAAI1wH,EAAO0wH,EAAK,GACZ7+F,EAAM,CAAC,EAGX,OAFAy6F,EAAMoE,EAAM7+F,GACZy9F,EAASz9F,GACFA,EAAI7xB,EACb,CE1JA,SAASi7G,EAAKhzD,GAEZ,IAAI0oE,EAAOvwH,KACX,GAAyB,IAArB6lC,UAAUzhC,OAAc,CAC1B,IAAI22G,EAAMl1E,UAAU,GACD,kBAARk1E,EACa,MAAlBA,EAAIyV,OAAO,GACb3V,EAAK,GAAgC4V,EAAU5qF,UAAU,IAEzDg1E,EAAK,GAAgCgS,EAAIhnF,UAAU,IAGrDg1E,EAAK,GAAgCE,CAEzC,MAAO,GAAyB,IAArBl1E,UAAUzhC,OAAc,CACjC,GAAIwG,MAAMC,QAAQg9C,GAChB,OAAOA,EAAKhoD,KAAI,SAAU+oC,GACxB,OAAIh+B,MAAMC,QAAQ+9B,GACTiyE,EAAKzyG,MAAMmoH,EAAM3nF,GAEjBiyE,EAAKjyE,EAEhB,IACK,GAAoB,kBAATif,GAChB,GAAIA,KAAQgzD,EACV,OAAOA,EAAKhzD,OAEL,SAAUA,EACnBgzD,EAAK,QAAUhzD,EAAK6oE,MAAQ7oE,EACnB,SAAUA,EACnBgzD,EAAK,QAAUhzD,EAAK8oE,MAAQ9oE,EACnB,YAAaA,EACtBgzD,EAAK,WAAahzD,EAAK+oE,SAAW/oE,EAElC+kD,QAAQjwF,IAAIkrC,GAEd,MACF,CACF,ECtGe,SAAUgzD,GACvBA,EAAK,YAAa,mFAClBA,EAAK,YAAa,mHAClBA,EAAK,YAAa,oJAElB,IAAK,IAAIzzG,EAAI,EAAGA,GAAK,KAAMA,EACzByzG,EAAK,SAAW,MAAQzzG,GAAI,mBAAqBA,EAAI,0BACrDyzG,EAAK,SAAW,MAAQzzG,GAAI,mBAAqBA,EAAI,iCAGvDyzG,EAAKgW,MAAQhW,EAAK,aAClBA,EAAK,aAAeA,EAAK,aACzBA,EAAKiW,OAASjW,EAAK,aACnBA,EAAK,eAAiBA,EAAK,aAC3BA,EAAK,eAAiBA,EAAK,YAC7B,CDwFAkW,CAAQlW,GACR,UE3FA,IAAImW,EAAQ,CAAC,OAAQ,SAAU,OAAQ,UAmDvC,QA5BA,SAAe/oG,GACb,IAjCF,SAAiBA,GACf,MAAuB,kBAATA,CAChB,CA+BMgpG,CAAQhpG,GAoBL,MAAM,aAAcA,EAGlBA,EAFA4kG,EAAI5kG,GAnBX,GAhCJ,SAAiBA,GACf,OAAOA,KAAQ4yF,CACjB,CA8BQqW,CAAQjpG,GACV,OAAO4yF,EAAK5yF,GAEd,GAhCJ,SAAiBA,GACf,OAA8B,IAAtBA,EAAK8J,QAAQ,OAAqC,IAAvB9J,EAAK8J,QAAQ,MAAiC,kBAAT9J,KAAuB,YAAaA,EAC9G,CA8BQkpG,CAAQlpG,GAAO,CACjB,IAAIs5B,EAAMsrE,EAAI5kG,GAEd,GA/BN,SAAuBoD,GACrB,IAAI+lG,EAAOvsF,EAAMxZ,EAAM,aACvB,GAAK+lG,EAAL,CAGA,IAAInpG,EAAO4c,EAAMusF,EAAM,QACvB,OAAOnpG,GAAQ+oG,EAAMj/F,QAAQ9J,IAAS,CAFtC,CAGF,CAwBUopG,CAAc9vE,GAChB,OAAOs5D,EAAK,aAEd,IAAIyW,EA1BV,SAAsBjmG,GACpB,IAAIkmG,EAAM1sF,EAAMxZ,EAAM,aACtB,GAAKkmG,EAGL,OAAO1sF,EAAM0sF,EAAK,QACpB,CAoByBC,CAAajwE,GAChC,OAAI+vE,EACKG,EAAQH,GAEV/vE,CACT,CACA,OAzBJ,SAAkBt5B,GAChB,MAAmB,MAAZA,EAAK,EACd,CAuBQypG,CAASzpG,GACJwpG,EAAQxpG,QADjB,CAQJ,EC9De,SAAS,EAACf,EAAatW,GAEpC,IAAIjM,EAAOyyG,EACX,GAFAlwF,EAAcA,GAAe,CAAC,GAEzBtW,EACH,OAAOsW,EAET,IAAKkwF,KAAYxmG,OAED3Q,KADd0E,EAAQiM,EAAOwmG,MAEblwF,EAAYkwF,GAAYzyG,GAG5B,OAAOuiB,CACT,CCbe,SAAS,EAACyqG,EAAQC,EAAQC,GACvC,IAAIC,EAAMH,EAASC,EACnB,OAAOC,EAAUzsH,KAAKwX,KAAK,EAAIk1G,EAAMA,EACvC,CCHe,SAAS,EAACnsG,GACvB,OAAOA,EAAI,GAAK,EAAI,CACtB,CCCe,SAAS,EAACA,GACvB,OAAQvgB,KAAKC,IAAIsgB,IAAMy+F,EAAOz+F,EAAKA,EAAKosG,EAAKpsG,GAAKw+F,CACpD,CCHe,SAAS,EAACwN,EAAQK,EAAKJ,GACpC,IAAIE,EAAMH,EAASC,EACfK,EAAM,GAAMN,EAEhB,OADAG,EAAM1sH,KAAKyjC,KAAM,EAAIipF,IAAQ,EAAIA,GAAOG,GAChC7sH,KAAK6kC,IAAI,IAAO65E,EAAUkO,IAAQF,CAC5C,CCLe,SAAS,EAACH,EAAQO,GAI/B,IAHA,IACIJ,EAAKK,EADLC,EAAS,GAAMT,EAEfK,EAAMlO,EAAU,EAAI1+G,KAAK0lC,KAAKonF,GACzB9qH,EAAI,EAAGA,GAAK,GAAIA,IAIvB,GAHA0qH,EAAMH,EAASvsH,KAAKgxB,IAAI47F,GAExBA,GADAG,EAAOrO,EAAU,EAAI1+G,KAAK0lC,KAAKonF,EAAM9sH,KAAKyjC,KAAM,EAAIipF,IAAQ,EAAIA,GAAOM,IAAYJ,EAE/E5sH,KAAKC,IAAI8sH,IAAS,MACpB,OAAOH,EAIX,OAAQ,IACV,CCZA,SAASK,EAASC,GAChB,OAAOA,CACT,CCJA,IAAIC,GAAQ,CC8FZ,CACEC,KAlFK,WACL,IAAIV,EAAM9xH,KAAKqR,EAAIrR,KAAKoR,EACxBpR,KAAKyyH,GAAK,EAAIX,EAAMA,EACd,OAAQ9xH,OACZA,KAAKw1B,GAAK,GAEN,OAAQx1B,OACZA,KAAKy1B,GAAK,GAEZz1B,KAAK6uD,EAAIzpD,KAAKwX,KAAK5c,KAAKyyH,IACpBzyH,KAAKimH,OACHjmH,KAAK+vH,OACP/vH,KAAK+mH,GAAK3hH,KAAK8wB,IAAIl2B,KAAKimH,QAExBjmH,KAAK+mH,GAAK2L,EAAM1yH,KAAK6uD,EAAGzpD,KAAKgxB,IAAIp2B,KAAKimH,QAAS7gH,KAAK8wB,IAAIl2B,KAAKimH,SAG1DjmH,KAAK+mH,KACJ/mH,KAAK+uD,EACP/uD,KAAK+mH,GAAK/mH,KAAK+uD,EAEf/uD,KAAK+mH,GAAK,EAIlB,EA0DE92E,QArDK,SAAiBilC,GACtB,IAOIvvD,EAAGC,EAPHosB,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAEZ,GAAI+sG,EAAM1O,EAAM,IAAM0O,EAAM1O,GAAO,IAAMjyE,EAAMiyE,EAAM,KAAOjyE,EAAMiyE,GAAO,IACvE,OAAO,KAIT,GAAI7+G,KAAKC,IAAID,KAAKC,IAAIstH,GAAO7O,IAAYC,EACvC,OAAO,KAEP,GAAI/jH,KAAK+vH,OACPpqG,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,EAAIpR,KAAK+mH,GAAK6L,EAAW5gF,EAAMhyC,KAAKmmH,OACvDvgG,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,EAAIpR,KAAK+mH,GAAK3hH,KAAKuX,IAAIvX,KAAK6kC,IAAIi6E,EAAS,GAAMyO,QAC7D,CACL,IAAIf,EAASxsH,KAAKgxB,IAAIu8F,GAClBT,EAAKW,EAAM7yH,KAAK6uD,EAAG8jE,EAAKf,GAC5BjsG,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,EAAIpR,KAAK+mH,GAAK6L,EAAW5gF,EAAMhyC,KAAKmmH,OACvDvgG,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,EAAIpR,KAAK+mH,GAAK3hH,KAAKuX,IAAIu1G,EAC5C,CAGA,OAFAh9C,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CAEX,EA6BEhlC,QAzBK,SAAiBglC,GACtB,IAEIljC,EAAK2gF,EAFLhtG,EAAIuvD,EAAEvvD,EAAI3lB,KAAKw1B,GACf5P,EAAIsvD,EAAEtvD,EAAI5lB,KAAKy1B,GAGnB,GAAIz1B,KAAK+vH,OACP4C,EAAM7O,EAAU,EAAI1+G,KAAK0lC,KAAK1lC,KAAK2lC,KAAKnlB,GAAK5lB,KAAKoR,EAAIpR,KAAK+mH,UACtD,CACL,IAAImL,EAAK9sH,KAAK2lC,KAAKnlB,GAAK5lB,KAAKoR,EAAIpR,KAAK+mH,KAEtC,IAAa,QADb4L,EAAMG,EAAM9yH,KAAK6uD,EAAGqjE,IAElB,OAAO,IAEX,CAKA,OAJAlgF,EAAM4gF,EAAW5yH,KAAKmmH,MAAQxgG,GAAK3lB,KAAKoR,EAAIpR,KAAK+mH,KAEjD7xC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,WAAY,wCAAyC,eAAgB,4BAA6B,qBAAsB,SFrF5I,CACEskB,KAXK,WACL,EAWAviF,QAASoiF,EACTniF,QAASmiF,EACTnkB,MALiB,CAAC,UAAW,cCN3BA,GAAQ,CAAC,EACT6kB,GAAY,GAEhB,SAAS5qG,GAAIg6F,EAAM/6G,GACjB,IAAIqrB,EAAMsgG,GAAU3uH,OACpB,OAAK+9G,EAAKjU,OAIV6kB,GAAUtgG,GAAO0vF,EACjBA,EAAKjU,MAAM7pG,SAAQ,SAAU2D,GAC3BkmG,GAAMlmG,EAAEo7B,eAAiB3Q,CAC3B,IACOzyB,OAPL4sG,QAAQjwF,IAAIvV,IACL,EAOX,CAIO,SAAS4rH,GAAsBhrH,GACpC,OAAOA,EAAEkgB,QAAQ,cAAe,KAAK+c,OAAO/c,QAAQ,KAAM,IAC5D,CAmBA,UACEyO,MAJK,WACL47F,GAAMluH,QAAQ8jB,GAChB,EAGEA,IAAKA,GACL9b,IApBK,SAAaw7C,GAClB,IAAKA,EACH,OAAO,EAET,IAAI7/C,EAAI6/C,EAAKzkB,cACb,MAAwB,qBAAb8qE,GAAMlmG,IAAsB+qH,GAAU7kB,GAAMlmG,MAGvDA,EAAIgrH,GAAsBhrH,MACjBkmG,IAAS6kB,GAAU7kB,GAAMlmG,IAHzB+qH,GAAU7kB,GAAMlmG,SAGzB,CAGF,GE2LA,SAhOiB,CACfirH,MAAO,CACL7hH,EAAG,QACHw0G,GAAI,QACJsN,YAAa,cAEfC,MAAO,CACL/hH,EAAG,QACHw0G,GAAI,QACJsN,YAAa,6BAEfE,MAAO,CACLhiH,EAAG,QACHw0G,GAAI,cACJsN,YAAa,wBAEfG,MAAO,CACLjiH,EAAG,QACHw0G,GAAI,QACJsN,YAAa,YAEfI,KAAM,CACJliH,EAAG,YACHC,EAAG,WACH6hH,YAAa,aAEfK,KAAM,CACJniH,EAAG,QACHw0G,GAAI,OACJsN,YAAa,uBAEfM,MAAO,CACLpiH,EAAG,QACHw0G,GAAI,OACJsN,YAAa,4BAEfO,SAAU,CACRriH,EAAG,YACHC,EAAG,YACH6hH,YAAa,iBAEfQ,OAAQ,CACNtiH,EAAG,WACHw0G,GAAI,IACJsN,YAAa,8BAEfS,QAAS,CACPviH,EAAG,QACHw0G,GAAI,OACJsN,YAAa,mCAEfU,MAAO,CACLxiH,EAAG,QACHw0G,GAAI,cACJsN,YAAa,qBAEfW,OAAQ,CACNziH,EAAG,YACHw0G,GAAI,YACJsN,YAAa,eAEfY,SAAU,CACR1iH,EAAG,YACHw0G,GAAI,YACJsN,YAAa,yBAEfa,OAAQ,CACN3iH,EAAG,UACHC,EAAG,UACH6hH,YAAa,eAEfc,OAAQ,CACN5iH,EAAG,YACHw0G,GAAI,SACJsN,YAAa,oBAEfe,UAAW,CACT7iH,EAAG,UACHC,EAAG,QACHu0G,GAAI,YACJsN,YAAa,qBAEfgB,OAAQ,CACN9iH,EAAG,kBACHw0G,GAAI,kBACJsN,YAAa,eAEfiB,IAAK,CACH/iH,EAAG,UACHw0G,GAAI,OACJsN,YAAa,mCAEfkB,OAAQ,CACNhjH,EAAG,QACHw0G,GAAI,MACJsN,YAAa,2BAEfmB,QAAS,CACPjjH,EAAG,WACHw0G,GAAI,SACJsN,YAAa,gBAEfoB,QAAS,CACPljH,EAAG,YACHw0G,GAAI,SACJsN,YAAa,gBAEfqB,QAAS,CACPnjH,EAAG,YACHw0G,GAAI,SACJsN,YAAa,gBAEfsB,QAAS,CACPpjH,EAAG,YACHw0G,GAAI,SACJsN,YAAa,gBAEfuB,QAAS,CACPrjH,EAAG,YACHw0G,GAAI,SACJsN,YAAa,gBAEfwB,QAAS,CACPtjH,EAAG,YACHw0G,GAAI,SACJsN,YAAa,6BAEfyB,QAAS,CACPvjH,EAAG,QACHw0G,GAAI,MACJsN,YAAa,gCAEf0B,SAAU,CACRxjH,EAAG,QACHw0G,GAAI,MACJsN,YAAa,gBAEf2B,QAAS,CACPzjH,EAAG,QACHw0G,GAAI,MACJsN,YAAa,gBAEf4B,QAAS,CACP1jH,EAAG,QACHw0G,GAAI,MACJsN,YAAa,gBAEf6B,MAAO,CACL3jH,EAAG,QACHw0G,GAAI,IACJsN,YAAa,SAEf8B,KAAM,CACJ5jH,EAAG,QACHw0G,GAAI,IACJsN,YAAa,gCAEf+B,MAAO,CACL7jH,EAAG,QACHw0G,GAAI,OACJsN,YAAa,cAEfgC,MAAO,CACL9jH,EAAG,QACHw0G,GAAI,QACJsN,YAAa,cAEfiC,MAAO,CACL/jH,EAAG,QACHw0G,GAAI,IACJsN,YAAa,mBAEfkC,SAAU,CACRhkH,EAAG,UACHC,EAAG,UACH6hH,YAAa,0BAEfmC,QAAS,CACPjkH,EAAG,QACHw0G,GAAI,QACJsN,YAAa,yBAEfoC,MAAO,CACLlkH,EAAG,QACHw0G,GAAI,MACJsN,YAAa,oBAEfqC,OAAQ,CACNnkH,EAAG,QACHC,EAAG,aACH6hH,YAAa,kBAEfsC,QAAS,CACPpkH,EAAG,QACHC,EAAG,aACH6hH,YAAa,WAEfuC,MAAO,CACLrkH,EAAG,QACHw0G,GAAI,MACJsN,YAAa,UAEfwC,MAAO,CACLtkH,EAAG,QACHw0G,GAAI,OACJsN,YAAa,UAEfyC,KAAM,CACJvkH,EAAG,QACHw0G,GAAI,OACJsN,YAAa,UAEfrC,MAAO,CACLz/G,EAAG,QACHw0G,GAAI,cACJsN,YAAa,UAEfnD,OAAQ,CACN3+G,EAAG,QACHC,EAAG,QACH6hH,YAAa,8BCxNXrC,GAAQ+E,GAAU/E,MCJxB,IAAIgF,GAAS,CACXC,MAAO,CACL1O,QAAS,QACT2O,QAAS,QACTC,UAAW,SAEbC,OAAQ,CACN7O,QAAS,yBACT2O,QAAS,SACTC,UAAW,SAEbE,OAAQ,CACN9O,QAAS,uBACT2O,QAAS,QACTC,UAAW,wCAEbG,MAAO,CACL/O,QAAS,QACT2O,QAAS,QACTC,UAAW,6BAEbI,MAAO,CACL1O,SAAU,2CACVqO,QAAS,SACTC,UAAW,6BAEbK,QAAS,CACPjP,QAAS,0CACT2O,QAAS,SACTC,UAAW,+BAEbM,SAAU,CACRlP,QAAS,mBACT2O,QAAS,UACTC,UAAW,yBAEbO,cAAe,CACbnP,QAAS,kDACT2O,QAAS,SACTC,UAAW,iBAEbQ,IAAK,CACHpP,QAAS,kDACT2O,QAAS,SACTC,UAAW,kCAEbS,OAAQ,CACNrP,QAAS,qDACT2O,QAAS,OACTC,UAAW,kBAEbU,MAAO,CACLtP,QAAS,qDACT2O,QAAS,WACTC,UAAW,gBAEbW,WAAY,CACVvP,QAAS,yBACT2O,QAAS,OACTC,UAAW,cAEbY,OAAQ,CACNxP,QAAS,6CACT2O,QAAS,OACTC,UAAW,mCAEba,OAAQ,CACNzP,QAAS,yDACT2O,QAAS,OACTC,UAAW,yCAEbc,OAAQ,CACN1P,QAAS,aACT2O,QAAS,SACTC,UAAW,kBAEbe,SAAU,CACR3P,QAAS,eACT2O,QAAS,SACTC,UAAW,YAEbgB,cAAe,CACb5P,QAAS,cACT2O,QAAS,SACTC,UAAW,yBAEbiB,MAAO,CACL7P,QAAS,wDACT2O,QAAS,OACTC,UAAW,8BAEbkB,UAAW,CACT9P,QAAS,mDAEX+P,YAAa,CACX/P,QAAS,uDAEXgQ,UAAW,CACThQ,QAAS,sEAEXiQ,UAAW,CACTjQ,QAAS,uDAEXkQ,WAAY,CACVlQ,QAAS,sDAEXmQ,WAAY,CACVnQ,QAAS,qDAEXoQ,WAAY,CACVpQ,QAAS,oDAEXqQ,UAAW,CACTrQ,QAAS,+CAEXsQ,UAAW,CACTtQ,QAAS,sDAEXuQ,UAAW,CACTvQ,QAAS,uDAEXwQ,UAAW,CACTxQ,QAAS,uDAEXyQ,UAAW,CACTzQ,QAAS,4CAEX0Q,UAAW,CACT1Q,QAAS,kDAEX2Q,UAAW,CACT3Q,QAAS,sDAEX4Q,UAAW,CACT5Q,QAAS,iDAEX6Q,UAAW,CACT7Q,QAAS,yDAEX8Q,UAAW,CACT9Q,QAAS,gDAEX+Q,UAAW,CACT/Q,QAAS,yDAEXgR,UAAW,CACThR,QAAS,oDAEXiR,UAAW,CACTjR,QAAS,oDAEXkR,UAAW,CACTlR,QAAS,8CAEXmR,UAAW,CACTnR,QAAS,2CAEXoR,UAAW,CACTpR,QAAS,4DAEXqR,UAAW,CACTrR,QAAS,+DAEXsR,UAAW,CACTtR,QAAS,kDAEXuR,UAAW,CACTvR,QAAS,2BAEXwR,UAAW,CACTxR,QAAS,2CAEXyR,UAAW,CACTzR,QAAS,gDAEX0R,UAAW,CACT1R,QAAS,+CAEX2R,UAAW,CACT3R,QAAS,4DAEX4R,UAAW,CACT5R,QAAS,4BAEX6R,UAAW,CACT7R,QAAS,kBAEX8R,UAAW,CACT9R,QAAS,gBAEX+R,UAAW,CACT/R,QAAS,qEAEXgS,UAAW,CACThS,QAAS,0DAEXiS,UAAW,CACTjS,QAAS,6DAEXkS,UAAW,CACTlS,QAAS,8DAEXmS,UAAW,CACTnS,QAAS,gDAEXoS,UAAW,CACTpS,QAAS,gDAEXqS,UAAW,CACTrS,QAAS,iEAEXsS,UAAW,CACTtS,QAAS,yDAEXuS,UAAW,CACTvS,QAAS,mEAEXwS,UAAW,CACTxS,QAAS,4DAEXyS,UAAW,CACTzS,QAAS,uDAEX0S,UAAW,CACT1S,QAAS,sDAEX2S,UAAW,CACT3S,QAAS,qDAEX4S,UAAW,CACT5S,QAAS,uDAEX6S,UAAW,CACT7S,QAAS,yDAEX8S,UAAW,CACT9S,QAAS,sDAEX+S,UAAW,CACT/S,QAAS,gCAEXgT,UAAW,CACThT,QAAS,SAEXiT,UAAW,CACTjT,QAAS,sDAEXkT,UAAW,CACTlT,QAAS,qDAEXmT,UAAW,CACTnT,QAAS,uDAEXoT,YAAa,CACXpT,QAAS,uDAEXqT,UAAW,CACTrT,QAAS,4BAEXsT,UAAW,CACTtT,QAAS,WAEXuT,UAAW,CACTvT,QAAS,WAEXwT,UAAW,CACTxT,QAAS,qDAEXyT,UAAW,CACTzT,QAAS,oDAEX0T,UAAW,CACT1T,QAAS,6CAEX2T,UAAW,CACT3T,QAAS,8DAEX4T,UAAW,CACT5T,QAAS,yDAEX6T,UAAW,CACT7T,QAAS,WAEX8T,UAAW,CACT9T,QAAS,wCAEX+T,UAAW,CACT/T,QAAS,uBAEXgU,UAAW,CACThU,QAAS,wCAEXiU,YAAa,CACXjU,QAAS,+CAEXkU,UAAW,CACTlU,QAAS,+CAEXmU,UAAW,CACTnU,QAAS,gDAEXoU,UAAW,CACTpU,QAAS,mEAEXqU,UAAW,CACTrU,QAAS,4DAEXsU,UAAW,CACTtU,QAAS,qBAEXuU,UAAW,CACTvU,QAAS,qBAEXwU,UAAW,CACTxU,QAAS,2BAEXyU,UAAW,CACTzU,QAAS,cAEX0U,UAAW,CACT1U,QAAS,iDAEX2U,UAAW,CACT3U,QAAS,eAEX4U,UAAW,CACT5U,QAAS,iBAEX6U,UAAW,CACT7U,QAAS,sDAEX8U,UAAW,CACT9U,QAAS,oDAEX+U,UAAW,CACT/U,QAAS,wDAEXgV,UAAW,CACThV,QAAS,kDAEXiV,UAAW,CACTjV,QAAS,SAEXkV,UAAW,CACTlV,QAAS,0DAEXmV,UAAW,CACTnV,QAAS,sDAEXoV,UAAW,CACTpV,QAAS,sDAEXqV,UAAW,CACTrV,QAAS,+DAEXsV,UAAW,CACTtV,QAAS,2DAEXuV,UAAW,CACTvV,QAAS,uDAEXwV,UAAW,CACTxV,QAAS,wDAEXyV,UAAW,CACTzV,QAAS,oBAEX0V,UAAW,CACT1V,QAAS,kEAEX2V,UAAW,CACT3V,QAAS,2DAEX4V,UAAW,CACT5V,QAAS,wDAEX6V,UAAW,CACT7V,QAAS,qDAEX8V,UAAW,CACT9V,QAAS,uDAEX+V,UAAW,CACT/V,QAAS,wBAEXgW,UAAW,CACThW,QAAS,SAEXiW,UAAW,CACTjW,QAAS,uDAEXkW,UAAW,CACTlW,QAAS,0BAEXmW,UAAW,CACTnW,QAAS,yDAEXoW,UAAW,CACTpW,QAAS,uDAEXqW,UAAW,CACTrW,QAAS,kDAEXsW,UAAW,CACTtW,QAAS,uDAEXuW,UAAW,CACTvW,QAAS,oDAEXwW,UAAW,CACTxW,QAAS,6DAEXyW,UAAW,CACTzW,QAAS,uDAEX0W,UAAW,CACT1W,QAAS,oDAEX2W,UAAW,CACT3W,QAAS,oBAEX4W,UAAW,CACT5W,QAAS,6DAEX6W,UAAW,CACT7W,QAAS,sBAEX8W,UAAW,CACT9W,QAAS,kDAEX+W,UAAW,CACT/W,QAAS,sDAEXgX,YAAa,CACXhX,QAAS,oDAEXiX,YAAa,CACXjX,QAAS,SAEXkX,UAAW,CACTlX,QAAS,wBAEXmX,UAAW,CACTnX,QAAS,gBAEXoX,UAAW,CACTpX,QAAS,oDAEXqX,UAAW,CACTrX,QAAS,mDAEXsX,UAAW,CACTtX,QAAS,uDAEXuX,UAAW,CACTvX,QAAS,uBAEXwX,UAAW,CACTxX,QAAS,sDAEXyX,UAAW,CACTzX,QAAS,yEAEX0X,UAAW,CACT1X,QAAS,8CAEX2X,UAAW,CACT3X,QAAS,uBAEX4X,UAAW,CACT5X,QAAS,eAEX6X,UAAW,CACT7X,QAAS,6DAEX8X,YAAa,CACX9X,QAAS,gBAEX+X,YAAa,CACX/X,QAAS,gBAEXgY,WAAY,CACVhY,QAAS,aAEXiY,UAAW,CACTjY,QAAS,wBAEXkY,YAAa,CACXlY,QAAS,4BAEXmY,YAAa,CACXnY,QAAS,6BAEXoY,YAAa,CACXpY,QAAS,qBAEXqY,YAAa,CACXrY,QAAS,UAEXsY,UAAW,CACTtY,QAAS,gBAEXuY,cAAe,CACbvY,QAAS,iBAEXwY,YAAa,CACXxY,QAAS,qBAEXyY,aAAc,CACZzY,QAAS,iBAEX0Y,YAAa,CACX1Y,QAAS,gBAEX2Y,aAAc,CACZ3Y,QAAS,iBAEX4Y,aAAc,CACZ5Y,QAAS,eAEX6Y,YAAa,CACX7Y,QAAS,aAEX8Y,aAAc,CACZ9Y,QAAS,aAEX+Y,gBAAiB,CACf/Y,QAAS,eAEXgZ,aAAc,CACZhZ,QAAS,iBAEXiZ,aAAc,CACZjZ,QAAS,iBAEXkZ,YAAa,CACXlZ,QAAS,iBAEXmZ,YAAa,CACXnZ,QAAS,gBAEXoZ,WAAY,CACVpZ,QAAS,cAEXqZ,cAAe,CACbrZ,QAAS,wBAEXsZ,cAAe,CACbtZ,QAAS,uBAEXuZ,aAAc,CACZvZ,QAAS,uBAEXwZ,YAAa,CACXxZ,QAAS,oBAEXyZ,aAAc,CACZzZ,QAAS,yBAEX0Z,aAAc,CACZ1Z,QAAS,wBAEX2Z,aAAc,CACZ3Z,QAAS,iBAEX4Z,eAAgB,CACd5Z,QAAS,uBAEX6Z,aAAc,CACZ7Z,QAAS,sBAEX8Z,aAAc,CACZ9Z,QAAS,wBAEX+Z,aAAc,CACZ/Z,QAAS,yBAEXga,UAAW,CACTha,QAAS,0BAEXia,UAAW,CACTja,QAAS,+BAEXka,YAAa,CACXla,QAAS,eAEXma,UAAW,CACTna,QAAS,gBAEXoa,UAAW,CACTpa,QAAS,wBAEXqa,UAAW,CACTra,QAAS,0BAEXsa,UAAW,CACTta,QAAS,0BAEXua,UAAW,CACTva,QAAS,sBAEXwa,UAAW,CACTxa,QAAS,qBAEXya,UAAW,CACTza,QAAS,sBAEX0a,UAAW,CACT1a,QAAS,oBAEX2a,UAAW,CACT3a,QAAS,uBAEX4a,UAAW,CACT5a,QAAS,iBAEX6a,UAAW,CACT7a,QAAS,wBAEX8a,UAAW,CACT9a,QAAS,oBAEX+a,UAAW,CACT/a,QAAS,0BAEXgb,UAAW,CACThb,QAAS,yBAEXib,UAAW,CACTjb,QAAS,wBAEXkb,UAAW,CACTlb,QAAS,2BAEXmb,UAAW,CACTnb,QAAS,6BAEXob,UAAW,CACTpb,QAAS,yBAEXqb,UAAW,CACTrb,QAAS,2BAEXsb,UAAW,CACTtb,QAAS,0BAEXub,UAAW,CACTvb,QAAS,sBAEXwb,UAAW,CACTxb,QAAS,2BAEXyb,UAAW,CACTzb,QAAS,kBAEX0b,UAAW,CACT1b,QAAS,wBAEX2b,UAAW,CACT3b,QAAS,0BAEX4b,UAAW,CACT5b,QAAS,yBAEX6b,UAAW,CACT7b,QAAS,2BAEX8b,UAAW,CACT9b,QAAS,cAEX+b,UAAW,CACT/b,QAAS,2BAEXgc,UAAW,CACThc,QAAS,qBAEXic,UAAW,CACTjc,QAAS,gBAEXkc,UAAW,CACTlc,QAAS,uBAEXmc,UAAW,CACTnc,QAAS,uBAEXoc,UAAW,CACTpc,QAAS,sBAEXqc,UAAW,CACTrc,QAAS,uBAEXsc,UAAW,CACTtc,QAAS,oBAEXuc,UAAW,CACTvc,QAAS,qBAEXwc,UAAW,CACTxc,QAAS,8BAEXyc,UAAW,CACTzc,QAAS,SAEX0c,UAAW,CACT1c,QAAS,gBAEX2c,UAAW,CACT3c,QAAS,eAEX4c,UAAW,CACT5c,QAAS,SAEX6c,UAAW,CACT7c,QAAS,2BAEX8c,UAAW,CACT9c,QAAS,eAEX+c,UAAW,CACT/c,QAAS,eAEXgd,UAAW,CACThd,QAAS,yBAEXid,UAAW,CACTjd,QAAS,wBAEXkd,UAAW,CACTld,QAAS,eAEXmd,UAAW,CACTnd,QAAS,4BAEXod,UAAW,CACTpd,QAAS,2BAEXqd,UAAW,CACTrd,QAAS,yBAEXsd,UAAW,CACTtd,QAAS,wBAEXud,UAAW,CACTvd,QAAS,sBAEXwd,UAAW,CACTxd,QAAS,cAEXyd,UAAW,CACTzd,QAAS,cAEX0d,UAAW,CACT1d,QAAS,wBAEX2d,UAAW,CACT3d,QAAS,oBAEX4d,UAAW,CACT5d,QAAS,qBAEX6d,UAAW,CACT7d,QAAS,uBAEX8d,UAAW,CACT9d,QAAS,gBAEX+d,UAAW,CACT/d,QAAS,gBAEXge,UAAW,CACThe,QAAS,gBAEXie,UAAW,CACTje,QAAS,gBAEXke,UAAW,CACTle,QAAS,cAEXme,UAAW,CACTne,QAAS,gBAEXoe,UAAW,CACTpe,QAAS,cAEXqe,UAAW,CACTre,QAAS,cAEXse,UAAW,CACTte,QAAS,gBAEXue,UAAW,CACTve,QAAS,kBAEXwe,UAAW,CACTxe,QAAS,aAEXye,UAAW,CACTze,QAAS,cAEX0e,UAAW,CACT1e,QAAS,4BAEX2e,UAAW,CACT3e,QAAS,kBAEX4e,UAAW,CACT5e,QAAS,eAEX6e,UAAW,CACT7e,QAAS,eAEX8e,UAAW,CACT9e,QAAS,eAEX+e,UAAW,CACT/e,QAAS,aAEXgf,UAAW,CACThf,QAAS,gBAEXif,UAAW,CACTjf,QAAS,aAEXkf,UAAW,CACTlf,QAAS,yBAEXmf,UAAW,CACTnf,QAAS,gBAEXof,UAAW,CACTpf,QAAS,gBAEXqf,UAAW,CACTrf,QAAS,uBAEXsf,UAAW,CACTtf,QAAS,iBAEXuf,UAAW,CACTvf,QAAS,gBAEXwf,YAAa,CACXxf,QAAS,iBAEXyf,UAAW,CACTzf,QAAS,aAEX0f,UAAW,CACT1f,QAAS,eAEX2f,UAAW,CACT3f,QAAS,gBAEX4f,UAAW,CACT5f,QAAS,gBAEX6f,UAAW,CACT7f,QAAS,kBAEX8f,UAAW,CACT9f,QAAS,gBAEX+f,UAAW,CACT/f,QAAS,eAEXggB,UAAW,CACThgB,QAAS,eAEXigB,UAAW,CACTjgB,QAAS,cAEXkgB,UAAW,CACTlgB,QAAS,eAEXmgB,UAAW,CACTngB,QAAS,eAEXogB,UAAW,CACTpgB,QAAS,kBAEXqgB,UAAW,CACTrgB,QAAS,aAEXsgB,UAAW,CACTtgB,QAAS,cAEXugB,UAAW,CACTvgB,QAAS,aAEXwgB,UAAW,CACTxgB,QAAS,iBAEXygB,UAAW,CACTzgB,QAAS,cAEX0gB,UAAW,CACT1gB,QAAS,uBAEX2gB,UAAW,CACT3gB,QAAS,cAEX4gB,UAAW,CACT5gB,QAAS,eAEX6gB,UAAW,CACT7gB,QAAS,iBAEX8gB,UAAW,CACT9gB,QAAS,eAEX+gB,UAAW,CACT/gB,QAAS,iBAEXghB,UAAW,CACThhB,QAAS,eAEXihB,UAAW,CACTjhB,QAAS,eAEXkhB,UAAW,CACTlhB,QAAS,gBAEXmhB,UAAW,CACTnhB,QAAS,cAEXohB,UAAW,CACTphB,QAAS,eAEXqhB,UAAW,CACTrhB,QAAS,gBAEXshB,UAAW,CACTthB,QAAS,iBAEXuhB,UAAW,CACTvhB,QAAS,eAEXwhB,UAAW,CACTxhB,QAAS,gBAEXyhB,UAAW,CACTzhB,QAAS,gBAEX0hB,UAAW,CACT1hB,QAAS,gBAEX2hB,UAAW,CACT3hB,QAAS,gBAEX4hB,UAAW,CACT5hB,QAAS,iBAEX6hB,UAAW,CACT7hB,QAAS,eAEX8hB,UAAW,CACT9hB,QAAS,eAEX+hB,UAAW,CACT/hB,QAAS,gBAEXgiB,UAAW,CACThiB,QAAS,iBAEXiiB,UAAW,CACTjiB,QAAS,eAEXkiB,UAAW,CACTliB,QAAS,iBAEXmiB,UAAW,CACTniB,QAAS,gBAEXoiB,UAAW,CACTpiB,QAAS,kBAEXqiB,UAAW,CACTriB,QAAS,iBAEXsiB,UAAW,CACTtiB,QAAS,gBAEXuiB,UAAW,CACTviB,QAAS,iBAEXwiB,UAAW,CACTxiB,QAAS,gBAEXyiB,UAAW,CACTziB,QAAS,cAEX0iB,UAAW,CACT1iB,QAAS,aAEX2iB,UAAW,CACT3iB,QAAS,eAEX4iB,WAAY,CACV5iB,QAAS,iBAEX6iB,WAAY,CACV7iB,QAAS,cAEX8iB,WAAY,CACV9iB,QAAS,iBAEX+iB,UAAW,CACT/iB,QAAS,iBAEXgjB,YAAa,CACXhjB,QAAS,gBAEXijB,UAAW,CACTjjB,QAAS,cAEXkjB,UAAW,CACTljB,QAAS,gBAEXmjB,UAAW,CACTnjB,QAAS,iBAEXojB,UAAW,CACTpjB,QAAS,wBAEXqjB,UAAW,CACTrjB,QAAS,iBAEXsjB,UAAW,CACTtjB,QAAS,gBAEXujB,UAAW,CACTvjB,QAAS,gBAEXwjB,UAAW,CACTxjB,QAAS,iBAEXyjB,cAAe,CACbzjB,QAAS,SAEX0jB,cAAe,CACb1jB,QAAS,SAEX2jB,gBAAiB,CACf3jB,QAAS,SAEX4jB,iBAAkB,CAChB5jB,QAAS,SAEX6jB,eAAgB,CACd7jB,QAAS,SAEX8jB,WAAY,CACV9jB,QAAS,SAEX+jB,aAAc,CACZ/jB,QAAS,SAEXgkB,aAAc,CACZhkB,QAAS,SAEXikB,cAAe,CACbjkB,QAAS,SAEXkkB,UAAW,CACTlkB,QAAS,SAEXmkB,UAAW,CACTnkB,QAAS,SAEXokB,UAAW,CACTpkB,QAAS,SAEXqkB,UAAW,CACTrkB,QAAS,SAEXskB,UAAW,CACTtkB,QAAS,SAEXukB,UAAW,CACTvkB,QAAS,SAEXwkB,UAAW,CACTxkB,QAAS,SAEXykB,UAAW,CACTzkB,QAAS,SAEX0kB,UAAW,CACT1kB,QAAS,SAEX2kB,UAAW,CACT3kB,QAAS,SAEX4kB,UAAW,CACT5kB,QAAS,SAEX6kB,UAAW,CACT7kB,QAAS,SAEX8kB,UAAW,CACT9kB,QAAS,SAEX+kB,UAAW,CACT/kB,QAAS,SAEXglB,UAAW,CACThlB,QAAS,SAEXilB,UAAW,CACTjlB,QAAS,SAEXklB,UAAW,CACTllB,QAAS,SAEXmlB,UAAW,CACTnlB,QAAS,SAEXolB,UAAW,CACTplB,QAAS,SAEXqlB,UAAW,CACTrlB,QAAS,SAEXslB,UAAW,CACTtlB,QAAS,SAEXulB,UAAW,CACTvlB,QAAS,SAEXwlB,UAAW,CACTxlB,QAAS,SAEXylB,UAAW,CACTzlB,QAAS,SAEX0lB,UAAW,CACT1lB,QAAS,SAEX2lB,UAAW,CACT3lB,QAAS,SAEX4lB,UAAW,CACT5lB,QAAS,SAEX6lB,UAAW,CACT7lB,QAAS,SAEX8lB,UAAW,CACT9lB,QAAS,SAEX+lB,UAAW,CACT/lB,QAAS,SAEXgmB,UAAW,CACThmB,QAAS,SAEXimB,UAAW,CACTjmB,QAAS,SAEXkmB,UAAW,CACTlmB,QAAS,SAEXmmB,UAAW,CACTnmB,QAAS,SAEXomB,UAAW,CACTpmB,QAAS,SAEXqmB,UAAW,CACTrmB,QAAS,SAEXsmB,UAAW,CACTtmB,QAAS,SAEXumB,UAAW,CACTvmB,QAAS,SAEXwmB,UAAW,CACTxmB,QAAS,SAEXymB,UAAW,CACTzmB,QAAS,SAEX0mB,UAAW,CACT1mB,QAAS,SAEX2mB,UAAW,CACT3mB,QAAS,SAEX4mB,UAAW,CACT5mB,QAAS,SAEX6mB,UAAW,CACT7mB,QAAS,SAEX8mB,UAAW,CACT9mB,QAAS,SAEX+mB,UAAW,CACT/mB,QAAS,SAEXgnB,UAAW,CACThnB,QAAS,SAEXinB,UAAW,CACTjnB,QAAS,SAEXknB,UAAW,CACTlnB,QAAS,SAEXmnB,UAAW,CACTnnB,QAAS,SAEXonB,UAAW,CACTpnB,QAAS,SAEXqnB,UAAW,CACTrnB,QAAS,SAEXsnB,UAAW,CACTtnB,QAAS,SAEXunB,UAAW,CACTvnB,QAAS,SAEXwnB,UAAW,CACTxnB,QAAS,SAEXynB,UAAW,CACTznB,QAAS,SAEX0nB,UAAW,CACT1nB,QAAS,SAEX2nB,UAAW,CACT3nB,QAAS,SAEX4nB,UAAW,CACT5nB,QAAS,SAEX6nB,UAAW,CACT7nB,QAAS,SAEX8nB,UAAW,CACT9nB,QAAS,SAEX+nB,UAAW,CACT/nB,QAAS,SAEXgoB,UAAW,CACThoB,QAAS,SAEXioB,UAAW,CACTjoB,QAAS,SAEXkoB,UAAW,CACTloB,QAAS,SAEXmoB,UAAW,CACTnoB,QAAS,SAEXooB,UAAW,CACTpoB,QAAS,SAEXqoB,UAAW,CACTroB,QAAS,SAEXsoB,UAAW,CACTtoB,QAAS,eAIb,IAAK,IAAI7/G,MAAOsuH,GAAQ,CACtB,IAAIlQ,GAAQkQ,GAAOtuH,IACdo+G,GAAMqQ,YAGXH,GAAOlQ,GAAMqQ,WAAarQ,GAC5B,CAEA,YC1tCA,SApCA,SAAegC,EAAWN,EAAcj2G,EAAGC,EAAGohH,EAAIkd,EAAKjoB,GACrD,IAAInmE,EAAM,CAAC,EAgCX,OA7BEA,EAAIquF,gBADY3vI,IAAd0nH,GAAyC,SAAdA,E9BDR,EADF,E8BQjBN,IACF9lE,EAAI8lE,aAAeA,EAAaxnH,IAAIgiB,YACR,IAAxB0/B,EAAI8lE,aAAa,IAAoC,IAAxB9lE,EAAI8lE,aAAa,IAAoC,IAAxB9lE,EAAI8lE,aAAa,KAC7E9lE,EAAIquF,W9Bdc,G8BgBhBruF,EAAI8lE,aAAajjH,OAAS,IACA,IAAxBm9C,EAAI8lE,aAAa,IAAoC,IAAxB9lE,EAAI8lE,aAAa,IAAoC,IAAxB9lE,EAAI8lE,aAAa,IAAoC,IAAxB9lE,EAAI8lE,aAAa,KAC1G9lE,EAAIquF,W9BjBY,E8BkBhBruF,EAAI8lE,aAAa,IAAMxD,EACvBtiE,EAAI8lE,aAAa,IAAMxD,EACvBtiE,EAAI8lE,aAAa,IAAMxD,EACvBtiE,EAAI8lE,aAAa,GAAM9lE,EAAI8lE,aAAa,GAAK,IAAa,KAK5DK,IACFnmE,EAAIquF,W9B1BmB,E8B2BvBruF,EAAIsuF,MAAQnoB,GAEdnmE,EAAInwC,EAAIA,EACRmwC,EAAIlwC,EAAIA,EACRkwC,EAAIkxE,GAAKA,EACTlxE,EAAIouF,IAAMA,EACHpuF,CACT,ECsBA,IAAIuuF,GAAiB,CAAC,EAuDtB7mC,eAAe8mC,GAAgBxoI,EAAKyoI,GAIlC,IAHA,IAAIC,EAAW,GACXC,QAAqBF,EAAKG,gBAErBC,EAAeF,EAAe,EAAGE,GAAgB,EAAGA,IAAgB,CAC3E,IAAI/6F,QAAc26F,EAAKvsH,SAAS2sH,GAG5BhkH,QADgBipB,EAAMg7F,cAEtBC,EAAM,CAACj7F,EAAMplC,WAAYolC,EAAM1tB,aAC/B4oH,EAAmBl7F,EAAMm7F,iBAAiB3wI,IAAI4wI,IAC9CC,EAAM,CAACr7F,EAAMs7F,cAAcC,gBAAgB,GAAIv7F,EAAMs7F,cAAcC,gBAAgB,IAAI/wI,IAAI4wI,IAE3FjlH,EAAO+kH,EAAiB,IAAMD,EAAI,GAAK,GAAKI,EAAI,GAChDnlH,EAAOglH,EAAiB,IAAMD,EAAI,GAAK,GAAKI,EAAI,GAEhDG,EAAqBzkH,EAAK,GAC1B0kH,EAAsB1kH,EAAK,GAC3B2kH,EAAQ,GAEZ,IAAK,IAAI3pI,EAAIkpI,EAAI,GAAK,EAAGlpI,GAAK,EAAGA,IAC/B,IAAK,IAAImJ,EAAI+/H,EAAI,GAAK,EAAG//H,GAAK,EAAGA,IAAK,CACpC,IAAIvJ,EAAQI,EAAIkpI,EAAI,GAAK//H,EACzBwgI,EAAMjsI,KAAK,EAAEksI,GAAiBF,EAAoB9pI,IAASgqI,GAAiBH,EAAmB7pI,KACjG,CAGFipI,EAASnrI,KAAK,CACZ4rI,IAAKA,EACLJ,IAAKA,EACLW,GAAI,EAAEzlH,EAAMD,GACZ2lH,IAAKH,GAET,CAEA,IAAII,EAAU,CACZC,OAAQ,CACNC,UAAWnB,GAEbD,SAAUA,GAGZ,OADAH,GAAevoI,GAAO4pI,EACfA,CACT,CAoBA,SAASG,GAAmB3sI,GAC1B,GAAqB,IAAjBA,EAAMP,OACR,OAAO,KAET,IAAImtI,EAAwB,MAAb5sI,EAAM,GAIrB,OAHI4sI,IACF5sI,EAAQA,EAAMoG,MAAM,IAER,SAAVpG,EACK,CAAEkjD,KAAM,OAAQ2pF,WAAYD,EAAUE,KAAM,KAAMC,QAAQ,GAE5D,CACL7pF,KAAMljD,EACN6sI,WAAYD,EACZE,KAAM3B,GAAenrI,IAAU,KAC/B+sI,QAAQ,EAEZ,CAEA,SAASjB,GAAiB7tE,GACxB,OAAQA,EAAWx9D,KAAKuyB,GAAK,GAC/B,CAEA,SAASq5G,GAAiBW,GACxB,OAAQA,EAAU,KAAQvsI,KAAKuyB,GAAK,GACtC,CA2BA,SAASi6G,GAAa18H,EAAMyhB,EAAOlC,GACjC,OAAO3F,OAAOsqD,aAAahxE,MAAM,KAAM,IAAIypI,WAAW38H,EAAKme,OAAOtoB,MAAM4rB,EAAOlC,IACjF,CAiCA,SAASq9G,GAASf,GAChB,OAAOA,EAAMlxI,KAAI,SAAUqpC,GACzB,MAAO,CAAC8nG,GAAiB9nG,EAAE6oG,gBAAiBf,GAAiB9nG,EAAE8oG,eACjE,GACF,CAEA,SAASC,GAAe/8H,EAAMsf,EAAQ09G,GACpC,MAAO,CACLrqF,KAAM+pF,GAAa18H,EAAMsf,EAAS,EAAGA,EAAS,IAAIyQ,OAClDwpD,OAAQmjD,GAAa18H,EAAMsf,EAAS,GAAIA,EAAS,GAAK,GAAGyQ,OACzDktG,cAAej9H,EAAKk9H,WAAW59G,EAAS,GAAI09G,GAC5CG,cAAen9H,EAAKk9H,WAAW59G,EAAS,GAAI09G,GAC5CI,eAAgBp9H,EAAKk9H,WAAW59G,EAAS,IAAK09G,GAC9CK,eAAgBr9H,EAAKk9H,WAAW59G,EAAS,IAAK09G,GAC9CM,iBAAkBt9H,EAAKk9H,WAAW59G,EAAS,IAAK09G,GAChDO,kBAAmBv9H,EAAKk9H,WAAW59G,EAAS,IAAK09G,GACjDQ,cAAex9H,EAAKy9H,SAASn+G,EAAS,IAAK09G,GAE/C,CAEA,SAASU,GAAc19H,EAAMsf,EAAQq+G,EAAYX,EAAgBY,GAC/D,IAAIC,EAAcv+G,EAAS,IACvBw+G,EAAmB,IAEI,IAAvBF,IACFE,EAAmB,GAIrB,IADA,IAAIC,EAAmB,GACd7rI,EAAI,EAAGA,EAAIyrI,EAAWH,cAAetrI,IAAK,CACjD,IAAI8rI,EAAS,CACXlB,cAAe98H,EAAKi+H,WAAWJ,EAAc3rI,EAAI4rI,EAAkBd,GACnEH,eAAgB78H,EAAKi+H,WAAWJ,EAAc3rI,EAAI4rI,EAAmB,EAAGd,KAI/C,IAAvBY,IACFI,EAAOE,iBAAmBl+H,EAAKi+H,WAAWJ,EAAc3rI,EAAI4rI,EAAmB,EAAGd,GAClFgB,EAAOG,kBAAoBn+H,EAAKi+H,WAAWJ,EAAc3rI,EAAI4rI,EAAmB,GAAId,IAGtFe,EAAiBnuI,KAAKouI,EACxB,CACA,OAAOD,CACT,CC7RA,SAAS9oG,GAAWmjF,EAASt+G,GAC3B,KAAMhP,gBAAgBmqC,IACpB,OAAO,IAAIA,GAAWmjF,GAGxBttH,KAAKiwC,QAAU,KAEfjwC,KAAKkwC,QAAU,KAEflwC,KAAK6nD,KAEL7nD,KAAK08B,MACL1tB,EAAWA,GAAY,SAAU8gF,GAC/B,GAAIA,EACF,MAAMA,CAEV,EACA,IAAIwjD,EAAOC,EAAUjmB,GACrB,GAAoB,kBAATgmB,EAAX,CAIA,IAAIE,EAAUrpG,GAAWkH,YAAYhlC,IAAIinI,EAAKt4B,UAC9C,GAAKw4B,EAAL,CAIA,GAAIF,EAAK3rB,WAAgC,SAAnB2rB,EAAK3rB,UAAsB,CAC/C,IAAI8rB,EAAW5uG,EAAM6uG,GAAOJ,EAAK3rB,WAC7B8rB,IACFH,EAAKjsB,aAAeisB,EAAKjsB,eAAiBosB,EAASrsB,QAAUqsB,EAASrsB,QAAQhiF,MAAM,KAAO,MAC3FkuG,EAAK/lB,MAAQkmB,EAAS1d,QACtBud,EAAKtd,UAAYyd,EAASzd,UAAYyd,EAASzd,UAAYsd,EAAK3rB,UAEpE,CACA2rB,EAAKvsB,GAAKusB,EAAKvsB,IAAM,EACrBusB,EAAKr4B,KAAOq4B,EAAKr4B,MAAQ,MACzBq4B,EAAK/lB,MAAQ+lB,EAAK/lB,OAAS,QAC3B+lB,EAAK3jG,KAAO2jG,EAAK3jG,MAAQ2jG,EAAKxtB,KAE9B,IAAI6tB,EJrCC,SAAgBviI,EAAGC,EAAGu0G,EAAI2H,EAAOwC,GACtC,IAAK3+G,EAAG,CACN,IAAI2kH,EAAUlxF,EAAM+wF,GAAWrI,GAC1BwI,IACHA,EAAUlF,IAEZz/G,EAAI2kH,EAAQ3kH,EACZC,EAAI0kH,EAAQ1kH,EACZu0G,EAAKmQ,EAAQnQ,EACf,CASA,OAPIA,IAAOv0G,IACTA,GAAK,EAAM,EAAMu0G,GAAMx0G,IAEd,IAAPw0G,GAAYxgH,KAAKC,IAAI+L,EAAIC,GAAK0yG,KAChCgM,GAAS,EACT1+G,EAAID,GAEC,CACLA,EAAGA,EACHC,EAAGA,EACHu0G,GAAIA,EACJmK,OAAQA,EAEZ,CIagB6jB,CAAUN,EAAKliI,EAAGkiI,EAAKjiI,EAAGiiI,EAAK1tB,GAAI0tB,EAAK/lB,MAAO+lB,EAAKvjB,QAC9D8jB,EJzDC,SAAsBziI,EAAGC,EAAGu0G,EAAIqB,GACrC,IAAIj+E,EAAK53B,EAAIA,EACT03B,EAAKz3B,EAAIA,EACTohH,GAAMzpF,EAAKF,GAAME,EACjB6lB,EAAI,EASR,OARIo4D,GAEFj+E,GADA53B,GAAK,EAAIqhH,G5BDM,mB4BCQA,G5BCV,mBAEA,oB4BHsBA,KAC1BrhH,EACTqhH,EAAK,GAEL5jE,EAAIzpD,KAAKwX,KAAK61G,GAGT,CACLA,GAAIA,EACJ5jE,EAAGA,EACH8gF,KAJS3mG,EAAKF,GAAMA,EAMxB,CIuCYgrG,CAAgBH,EAAQviI,EAAGuiI,EAAQtiI,EAAGsiI,EAAQ/tB,GAAI0tB,EAAKrsB,KAC7DS,EDmGC,SAAqBA,GAE1B,YAAiBznH,IAAbynH,EACK,KAEGA,EAAStiF,MAAM,KACdvlC,IAAIyxI,GACnB,CC1GiByC,CAAYT,EAAK5rB,UAE5BssB,EAAWV,EAAK3tB,OAASA,GAAM2tB,EAAK3rB,UAAW2rB,EAAKjsB,aAAcssB,EAAQviI,EAAGuiI,EAAQtiI,EAAGwiI,EAAIphB,GAAIohB,EAAIlE,IACtGjoB,GAEFlsG,EAAOxb,KAAMszI,GACb93H,EAAOxb,KAAMwzI,GAGbxzI,KAAKoR,EAAIuiI,EAAQviI,EACjBpR,KAAKqR,EAAIsiI,EAAQtiI,EACjBrR,KAAK4lH,GAAK+tB,EAAQ/tB,GAClB5lH,KAAK+vH,OAAS4jB,EAAQ5jB,OAGtB/vH,KAAKyyH,GAAKohB,EAAIphB,GACdzyH,KAAK6uD,EAAIglF,EAAIhlF,EACb7uD,KAAK2vI,IAAMkE,EAAIlE,IAGf3vI,KAAK2lH,MAAQquB,EAGT,SAAUh0I,MAA6B,oBAAdA,KAAKwyH,MAChCxyH,KAAKwyH,OAIPxjH,EAAS,KAAMhP,KA5Cf,MAFEgP,EAAS,uCAAyCs+G,EAHpD,MAFEt+G,EAAS,kCAAoCs+G,EAoDjD,CACAnjF,GAAWkH,YAAcA,GACzBlH,GAAWkH,YAAY1a,QACvB,YCjEO,SAASs9G,GAAqB/+D,EAAGu9C,EAAIrhH,GAC1C,IAII8iI,EACAC,EACAC,EACAC,EAPAC,EAAYp/D,EAAEvvD,EACd4uH,EAAWr/D,EAAEtvD,EACb4uH,EAASt/D,EAAEzrC,EAAIyrC,EAAEzrC,EAAI,EAYzB,GAAI8qG,GAAYzwB,GAAWywB,GAAY,MAAQzwB,EAC7CywB,GAAYzwB,OACP,GAAIywB,EAAWzwB,GAAWywB,EAAW,MAAQzwB,EAClDywB,EAAWzwB,MACN,IAAIywB,GAAYzwB,EAGrB,MAAO,CAAEn+F,GAAIhgB,IAAUigB,GAAIjgB,IAAU8jC,EAAGyrC,EAAEzrC,GACrC,GAAI8qG,EAAWzwB,EAEpB,MAAO,CAAEn+F,EAAGhgB,IAAUigB,EAAGjgB,IAAU8jC,EAAGyrC,EAAEzrC,EAC1C,CASA,OAPI6qG,EAAYlvI,KAAKuyB,KACnB28G,GAAc,EAAIlvI,KAAKuyB,IAEzBw8G,EAAU/uI,KAAKgxB,IAAIm+G,GACnBF,EAAUjvI,KAAK8wB,IAAIq+G,GACnBH,EAAWD,EAAUA,EAEd,CACLxuH,IAFFuuH,EAAK9iI,EAAKhM,KAAKwX,KAAK,EAAQ61G,EAAK2hB,IAEtBI,GAAUH,EAAUjvI,KAAK8wB,IAAIo+G,GACtC1uH,GAAIsuH,EAAKM,GAAUH,EAAUjvI,KAAKgxB,IAAIk+G,GACtC7qG,GAAKyqG,GAAM,EAAIzhB,GAAO+hB,GAAUL,EAEpC,CAEO,SAASM,GAAqBv/D,EAAGu9C,EAAIrhH,EAAGC,GAG7C,IAIIqjI,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKAhB,EAEAE,EAvBAe,EAAQ,MAkBRC,EAAItgE,EAAEvvD,EACN8vH,EAAIvgE,EAAEtvD,EACN8vH,EAAIxgE,EAAEzrC,EAAIyrC,EAAEzrC,EAAI,EASpB,GAJAirG,EAAItvI,KAAKwX,KAAK44H,EAAIA,EAAIC,EAAIA,GAC1Bd,EAAKvvI,KAAKwX,KAAK44H,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAG/BhB,EAAItjI,EAAImkI,GAMV,GAJAjB,EAAY,EAIRK,EAAKvjI,EAAImkI,EAGX,OADAf,GAAUnjI,EACH,CACLsU,EAAGuvD,EAAEvvD,EACLC,EAAGsvD,EAAEtvD,EACL6jB,EAAGyrC,EAAEzrC,QAMT6qG,EAAYlvI,KAAKkkC,MAAMmsG,EAAGD,GAY5BZ,EAAKc,EAAIf,EAGTM,GAFAJ,EAAKH,EAAIC,IAEK,EAAMliB,IADpBqiB,EAAK,EAAM1vI,KAAKwX,KAAK,EAAM61G,GAAM,EAAMA,GAAMoiB,EAAKA,IAElDK,EAAQN,EAAKE,EACbQ,EAAO,EAIP,GACEA,IAMAP,EAAKtiB,GALLuiB,EAAK5jI,EAAIhM,KAAKwX,KAAK,EAAM61G,EAAKyiB,EAAQA,KAKtBF,GAFhBR,EAASE,EAAIO,EAAQS,EAAIR,EAAQF,GAAM,EAAMviB,EAAKyiB,EAAQA,KAM1DG,GADAD,EAAOR,GAFPE,EAAK,EAAM1vI,KAAKwX,KAAK,EAAMm4H,GAAM,EAAMA,GAAMF,EAAKA,KAGnCI,GAFfE,EAAON,GAAM,EAAME,GAAMD,GAEKI,EAC9BD,EAAQE,EACRD,EAAQE,QAEHC,EAAQA,EAlFDE,OAkFmBD,EAjFnB,IAqFd,MAAO,CACL3vH,EAAG2uH,EACH1uH,EAHSxgB,KAAK0lC,KAAKsqG,EAAOhwI,KAAKC,IAAI8vI,IAInC1rG,EAAG+qG,EAEP,CC5JA,SAASmB,GAAY/1I,GACnB,OlCbsB,IkCadA,GlCZc,IkCYSA,CACjC,CAEe,SAAS,GAACgR,EAAQhE,EAAMuZ,GAErC,GDhBK,SAAuBvV,EAAQhE,GACpC,OAAIgE,EAAOg/H,aAAehjI,EAAKgjI,cAEpBh/H,EAAOQ,IAAMxE,EAAKwE,GAAKhM,KAAKC,IAAIuL,EAAO6hH,GAAK7lH,EAAK6lH,IAAM,SjCL5C,IiCSX7hH,EAAOg/H,WACRh/H,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,GjCTvI,IiCUXz2G,EAAOg/H,YACRh/H,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,IAAMz2G,EAAOy2G,aAAa,KAAOz6G,EAAKy6G,aAAa,GAI3W,CCEMuuB,CAAchlI,EAAQhE,GACxB,OAAOuZ,EAMT,GlCrBuB,IkCqBnBvV,EAAOg/H,YlCrBY,IkCqBkBhjI,EAAKgjI,WAC5C,OAAOzpH,EAIT,IAAI0vH,EAAWjlI,EAAOQ,EAClB0kI,EAAYllI,EAAO6hH,GACvB,GlC9ByB,IkC8BrB7hH,EAAOg/H,WAA8B,CAEvC,GAAsB,IADFmG,GAAenlI,GAAQ,EAAOuV,GAEhD,OAEF0vH,EAAWlyB,EACXmyB,EAAYlyB,CACd,CAEA,IAAIoyB,EAASppI,EAAKwE,EACd6kI,EAASrpI,EAAKyE,EACd6kI,EAAUtpI,EAAK6lH,GAQnB,GlCjDyB,IkC0CrB7lH,EAAKgjI,aACPoG,EAASryB,EACTsyB,ElCxC6B,YkCyC7BC,EAAUtyB,GAIRkyB,IAAcI,GAAWL,IAAaG,IAAWL,GAAY/kI,EAAOg/H,cAAgB+F,GAAY/oI,EAAKgjI,YACvG,OAAOzpH,EAcT,IAVAA,EAAQ8tH,GAAqB9tH,EAAO2vH,EAAWD,GAE3CF,GAAY/kI,EAAOg/H,cACrBzpH,EDwHG,SAA2B+uD,EAAG06D,EAAYvoB,GAC/C,GjCpLsB,IiCoLlBuoB,EAGF,MAAO,CACLjqH,EAAGuvD,EAAEvvD,EAAI0hG,EAAa,GACtBzhG,EAAGsvD,EAAEtvD,EAAIyhG,EAAa,GACtB59E,EAAGyrC,EAAEzrC,EAAI49E,EAAa,IAEnB,GjC3Le,IiC2LXuoB,EAA2B,CACpC,IAAIuG,EAAQ9uB,EAAa,GACrB+uB,EAAQ/uB,EAAa,GACrBgvB,EAAQhvB,EAAa,GACrBivB,EAAQjvB,EAAa,GACrBkvB,EAAQlvB,EAAa,GACrBmvB,EAAQnvB,EAAa,GACrBovB,EAAOpvB,EAAa,GAGxB,MAAO,CACL1hG,EAAG8wH,GAAQvhE,EAAEvvD,EAAI6wH,EAAQthE,EAAEtvD,EAAI2wH,EAAQrhE,EAAEzrC,GAAK0sG,EAC9CvwH,EAAG6wH,GAAQD,EAAQthE,EAAEvvD,EAAIuvD,EAAEtvD,EAAI0wH,EAAQphE,EAAEzrC,GAAK2sG,EAC9C3sG,EAAGgtG,IAASF,EAAQrhE,EAAEvvD,EAAI2wH,EAAQphE,EAAEtvD,EAAIsvD,EAAEzrC,GAAK4sG,EAEnD,CACF,CCjJYK,CAAkBvwH,EAAOvV,EAAOg/H,WAAYh/H,EAAOy2G,eAEzDsuB,GAAY/oI,EAAKgjI,cACnBzpH,EDoJG,SAA6B+uD,EAAG06D,EAAYvoB,GACjD,GjCnNsB,IiCmNlBuoB,EAGF,MAAO,CACLjqH,EAAGuvD,EAAEvvD,EAAI0hG,EAAa,GACtBzhG,EAAGsvD,EAAEtvD,EAAIyhG,EAAa,GACtB59E,EAAGyrC,EAAEzrC,EAAI49E,EAAa,IAEnB,GjC1Ne,IiC0NXuoB,EAA2B,CACpC,IAAIuG,EAAQ9uB,EAAa,GACrB+uB,EAAQ/uB,EAAa,GACrBgvB,EAAQhvB,EAAa,GACrBivB,EAAQjvB,EAAa,GACrBkvB,EAAQlvB,EAAa,GACrBmvB,EAAQnvB,EAAa,GACrBovB,EAAOpvB,EAAa,GACpBsvB,GAASzhE,EAAEvvD,EAAIwwH,GAASM,EACxBG,GAAS1hE,EAAEtvD,EAAIwwH,GAASK,EACxBI,GAAS3hE,EAAEzrC,EAAI4sG,GAASI,EAI5B,MAAO,CACL9wH,EAAGgxH,EAAQH,EAAQI,EAAQL,EAAQM,EACnCjxH,GAAI4wH,EAAQG,EAAQC,EAAQN,EAAQO,EACpCptG,EAAG8sG,EAAQI,EAAQL,EAAQM,EAAQC,EAEvC,CACF,CCjLYC,CAAoB3wH,EAAOvZ,EAAKgjI,WAAYhjI,EAAKy6G,eAE3DlhG,EAAQsuH,GAAqBtuH,EAAO+vH,EAASF,EAAQC,GlC9D5B,IkCgErBrpI,EAAKgjI,aAEqB,IADFmG,GAAenpI,GAAM,EAAMuZ,GAEnD,OAIJ,OAAOA,CACT,CAEO,SAAS4vH,GAAenlI,EAAQs/B,EAAS/pB,GAC9C,GAAqB,OAAjBvV,EAAOi/H,OAA0C,IAAxBj/H,EAAOi/H,MAAMzrI,OAExC,OADAwoG,QAAQjwF,IAAI,+BACJ,EAEV,IAAIguB,EAAQ,CAAEhlB,GAAIQ,EAAMR,EAAGC,EAAGO,EAAMP,GAChC8iB,EAAS,CAAE/iB,EAAGK,OAAOrB,IAAKiB,EAAGI,OAAOrB,KACpCoyH,EAAiB,GACrBC,EACA,IAAK,IAAI5vI,EAAI,EAAGA,EAAIwJ,EAAOi/H,MAAMzrI,OAAQgD,IAAK,CAC5C,IAAIqqI,EAAO7gI,EAAOi/H,MAAMzoI,GAExB,GADA2vI,EAAejyI,KAAK2sI,EAAK5pF,MACrB4pF,EAAKC,OAAQ,CACfhpG,EAASiC,EACT,KACF,CACA,GAAkB,OAAd8mG,EAAKA,KAQT,IADA,IAAIxB,EAAWwB,EAAKA,KAAKxB,SAChB1/H,EAAI,EAAGqhC,EAAKq+F,EAAS7rI,OAAQmM,EAAIqhC,EAAIrhC,IAAK,CACjD,IAAI0mI,EAAUhH,EAAS1/H,GAEnB2mI,GAAW9xI,KAAKC,IAAI4xI,EAAQvG,IAAI,IAAMtrI,KAAKC,IAAI4xI,EAAQvG,IAAI,KAAO,IAClEplH,EAAO2rH,EAAQhG,GAAG,GAAKiG,EACvB3rH,EAAO0rH,EAAQhG,GAAG,GAAKiG,EACvB1rH,EAAOyrH,EAAQhG,GAAG,IAAMgG,EAAQ3G,IAAI,GAAK,GAAK2G,EAAQvG,IAAI,GAAKwG,EAC/DzrH,EAAOwrH,EAAQhG,GAAG,IAAMgG,EAAQ3G,IAAI,GAAK,GAAK2G,EAAQvG,IAAI,GAAKwG,EACnE,KAAI3rH,EAAOof,EAAM/kB,GAAK0F,EAAOqf,EAAMhlB,GAAK8F,EAAOkf,EAAM/kB,GAAK4F,EAAOmf,EAAMhlB,KAGvE+iB,EAASyuG,GAAkBxsG,EAAOuF,EAAS+mG,IACtCn2H,MAAM4nB,EAAO/iB,IAChB,MAAMqxH,CAEV,MAtBE,GAAIvF,EAAKD,UAEP,OADA5kC,QAAQjwF,IAAI,kCAAqC80H,EAAK5pF,KAAO,MACrD,CAqBd,CACA,OAAI/mC,MAAM4nB,EAAO/iB,IACfinF,QAAQjwF,IAAI,oDACPguB,EAAMhlB,EAAIs+F,EAAM,IAAMt5E,EAAM/kB,EAAIq+F,EAAM,YAAe8yB,EAAiB,MACnE,IAEV5wH,EAAMR,GAAK+iB,EAAO/iB,EAClBQ,EAAMP,EAAI8iB,EAAO9iB,EACV,EACT,CAEA,SAASuxH,GAAkBC,EAAKlnG,EAASmnG,GACvC,IAAIxiH,EAAM,CAAElP,EAAGK,OAAOrB,IAAKiB,EAAGI,OAAOrB,KACrC,GAAI7D,MAAMs2H,EAAIzxH,GACZ,OAAOkP,EAET,IAAIyiH,EAAK,CAAE3xH,EAAGyxH,EAAIzxH,EAAGC,EAAGwxH,EAAIxxH,GAC5B0xH,EAAG3xH,GAAK0xH,EAAGpG,GAAG,GACdqG,EAAG1xH,GAAKyxH,EAAGpG,GAAG,GACdqG,EAAG3xH,EAAIitG,EAAW0kB,EAAG3xH,EAAIvgB,KAAKuyB,IAAMvyB,KAAKuyB,GACzC,IAAIgjC,EAAI48E,GAAeD,EAAID,GAC3B,GAAInnG,EAAS,CACX,GAAIpvB,MAAM65C,EAAEh1C,GACV,OAAOkP,EAET8lC,EAAEh1C,EAAI2xH,EAAG3xH,EAAIg1C,EAAEh1C,EACfg1C,EAAE/0C,EAAI0xH,EAAG1xH,EAAI+0C,EAAE/0C,EACf,IACI4xH,EAAK9G,EADLtpI,EAAI,EAER,EAAG,CAED,GADAspI,EAAM6G,GAAe58E,EAAG08E,GACpBv2H,MAAM4vH,EAAI/qH,GAAI,CAChBinF,QAAQjwF,IAAI,6FACZ,KACF,CACA66H,EAAM,CAAE7xH,EAAG2xH,EAAG3xH,GAAK+qH,EAAI/qH,EAAIg1C,EAAEh1C,GAAIC,EAAG0xH,EAAG1xH,GAAK8qH,EAAI9qH,EAAI+0C,EAAE/0C,IACtD+0C,EAAEh1C,GAAK6xH,EAAI7xH,EACXg1C,EAAE/0C,GAAK4xH,EAAI5xH,CACb,OAASxe,KAAOhC,KAAKC,IAAImyI,EAAI7xH,GAXZ,OAWwBvgB,KAAKC,IAAImyI,EAAI5xH,GAXrC,OAYjB,GAAIxe,EAAI,EAEN,OADAwlG,QAAQjwF,IAAI,mDACLkY,EAETA,EAAIlP,EAAIitG,EAAWj4D,EAAEh1C,EAAI0xH,EAAGpG,GAAG,IAC/Bp8G,EAAIjP,EAAI+0C,EAAE/0C,EAAIyxH,EAAGpG,GAAG,EACtB,MACOnwH,MAAM65C,EAAEh1C,KACXkP,EAAIlP,EAAIyxH,EAAIzxH,EAAIg1C,EAAEh1C,EAClBkP,EAAIjP,EAAIwxH,EAAIxxH,EAAI+0C,EAAE/0C,GAGtB,OAAOiP,CACT,CAEA,SAAS0iH,GAAeH,EAAKC,GAC3B,IAIII,EAJA98E,EAAI,CAAEh1C,EAAGyxH,EAAIzxH,EAAI0xH,EAAG3G,IAAI,GAAI9qH,EAAGwxH,EAAIxxH,EAAIyxH,EAAG3G,IAAI,IAC9CgH,EAAYtyI,KAAKmyB,MAAMojC,EAAEh1C,GAAzB+xH,EAAgCtyI,KAAKmyB,MAAMojC,EAAE/0C,GAC7C+xH,EAAYh9E,EAAEh1C,EAAI,EAAM+xH,EAAxBC,EAAmCh9E,EAAE/0C,EAAI,EAAM8xH,EAC/C7iH,EAAM,CAAElP,EAAGK,OAAOrB,IAAKiB,EAAGI,OAAOrB,KAErC,GAAI+yH,EAAS,GAAKA,GAAUL,EAAG/G,IAAI,GACjC,OAAOz7G,EAET,GAAI6iH,EAAS,GAAKA,GAAUL,EAAG/G,IAAI,GACjC,OAAOz7G,EAET4iH,EAAOC,EAASL,EAAG/G,IAAI,GAAMoH,EAC7B,IAAIE,EAAWP,EAAGnG,IAAIuG,GAAK,GAAvBG,EAA8BP,EAAGnG,IAAIuG,GAAK,GAC9CA,IACA,IAAII,EAAWR,EAAGnG,IAAIuG,GAAK,GAAvBI,EAA8BR,EAAGnG,IAAIuG,GAAK,GAC9CA,GAAOJ,EAAG/G,IAAI,GACd,IAAIwH,EAAWT,EAAGnG,IAAIuG,GAAK,GAAvBK,EAA8BT,EAAGnG,IAAIuG,GAAK,GAC9CA,IACA,IAAIM,EAAWV,EAAGnG,IAAIuG,GAAK,GAAvBM,EAA8BV,EAAGnG,IAAIuG,GAAK,GAC1CO,EAAML,EAASA,EAAQM,EAAMN,GAAU,EAAMA,GAC/CO,GAAO,EAAMP,IAAW,EAAMA,GAASQ,GAAO,EAAMR,GAAUA,EAGhE,OAFA9iH,EAAIlP,EAAKuyH,EAAMN,EAAQK,EAAMJ,EAAQM,EAAMJ,EAAQC,EAAMF,EACzDjjH,EAAIjP,EAAKsyH,EAAMN,EAAQK,EAAMJ,EAAQM,EAAMJ,EAAQC,EAAMF,EAClDjjH,CACT,CCnMe,SAAS,GAACwlC,EAAK+9E,EAAQjyH,GACpC,IAGIyiB,EAAG+xB,EAAGvzD,EAHNixI,EAAMlyH,EAAMR,EACd2yH,EAAMnyH,EAAMP,EACZ2yH,EAAMpyH,EAAMsjB,GAAK,EAGf8X,EAAM,CAAC,EACX,IAAKn6C,EAAI,EAAGA,EAAI,EAAGA,IACjB,IAAIgxI,GAAgB,IAANhxI,QAAuBnH,IAAZkmB,EAAMsjB,EAqB/B,OAlBU,IAANriC,GACFwhC,EAAIyvG,EAEF19E,GADiC,IAA/B,KAAK5oC,QAAQsoC,EAAI4gD,KAAK7zG,IACpB,IAEA,KAES,IAANA,GACTwhC,EAAI0vG,EAEF39E,GADiC,IAA/B,KAAK5oC,QAAQsoC,EAAI4gD,KAAK7zG,IACpB,IAEA,MAGNwhC,EAAI2vG,EACJ59E,EAAI,KAEEN,EAAI4gD,KAAK7zG,IACf,IAAK,IAML,IAAK,IACHm6C,EAAIoZ,GAAK/xB,EACT,MALF,IAAK,IAML,IAAK,IACH2Y,EAAIoZ,IAAM/xB,EACV,MACF,IAAK,SACc3oC,IAAbkmB,EAAMw0C,KACRpZ,EAAI9X,EAAIb,GAEV,MACF,IAAK,SACc3oC,IAAbkmB,EAAMw0C,KACRpZ,EAAI9X,GAAKb,GAEX,MACF,QAEE,OAAO,KAGb,OAAO2Y,CACT,CCtDe,SAAS,GAAC70C,GACvB,IAAI60C,EAAM,CACR57B,EAAGjZ,EAAM,GACTkZ,EAAGlZ,EAAM,IAQX,OANIA,EAAMtI,OAAS,IACjBm9C,EAAI9X,EAAI/8B,EAAM,IAEZA,EAAMtI,OAAS,IACjBm9C,EAAItwC,EAAIvE,EAAM,IAET60C,CACT,CCZA,SAASi3F,GAAWC,GAClB,GAA+B,oBAApBzyH,OAAOyR,SAAyB,CACzC,GAAIzR,OAAOyR,SAASghH,GAClB,OAEF,MAAM,IAAIC,UAAU,qCACtB,CACA,GAAmB,kBAARD,GAAoBA,IAAQA,IAAQhhH,SAASghH,GACtD,MAAM,IAAIC,UAAU,qCAExB,CCMe,SAASpzH,GAAU1U,EAAQhE,EAAMuZ,EAAOwyH,GACrD,IAAI7iB,EAYA8iB,OAAmB34I,KAVrBkmB,EADEvb,MAAMC,QAAQsb,GACR0yH,GAAQ1yH,GAGR,CACNR,EAAGQ,EAAMR,EACTC,EAAGO,EAAMP,EACT6jB,EAAGtjB,EAAMsjB,EACTx4B,EAAGkV,EAAMlV,IAGIw4B,EAajB,GD9Ca,SAAUtjB,GACvBqyH,GAAWryH,EAAMR,GACjB6yH,GAAWryH,EAAMP,EACnB,CC+BEkzH,CAAY3yH,GAERvV,EAAO+0G,OAAS/4G,EAAK+4G,OA7B3B,SAAqB/0G,EAAQhE,GAC3B,OtCRsB,IsCSnBgE,EAAO+0G,MAAMiqB,YtCRM,IsCQuBh/H,EAAO+0G,MAAMiqB,YtCPjC,IsCO8Dh/H,EAAO+0G,MAAMiqB,aAAoD,UAAnBhjI,EAAK+6G,YtCTpH,IsCUjB/6G,EAAK+4G,MAAMiqB,YtCTM,IsCSuBhjI,EAAK+4G,MAAMiqB,YtCR/B,IsCQ4DhjI,EAAK+4G,MAAMiqB,aAAsD,UAArBh/H,EAAO+2G,SAC1I,CAyBoCoxB,CAAYnoI,EAAQhE,KAEpDuZ,EAAQb,GAAU1U,EADlBklH,EAAQ,IAAI3T,GAAK,SACgBh8F,EAAOwyH,GACxC/nI,EAASklH,GAGP6iB,GAA+B,QAAhB/nI,EAAOqqG,OACxB90F,EAAQ6yH,GAAYpoI,GAAQ,EAAOuV,IAGb,YAApBvV,EAAOoqG,SACT70F,EAAQ,CACNR,EAAGQ,EAAMR,EAAIq+F,EACbp+F,EAAGO,EAAMP,EAAIo+F,EACbv6E,EAAGtjB,EAAMsjB,GAAK,QAWhB,GARI74B,EAAOsqG,WACT/0F,EAAQ,CACNR,EAAGQ,EAAMR,EAAI/U,EAAOsqG,SACpBt1F,EAAGO,EAAMP,EAAIhV,EAAOsqG,SACpBzxE,EAAGtjB,EAAMsjB,GAAK,MAGlBtjB,EAAQvV,EAAOs/B,QAAQ/pB,IAErB,OAUJ,GANIvV,EAAO22G,iBACTphG,EAAMR,GAAK/U,EAAO22G,gBAIpBphG,EAAQ8yH,GAAgBroI,EAAO+0G,MAAO/4G,EAAK+4G,MAAOx/F,GAmClD,OA3BIvZ,EAAK26G,iBACPphG,EAAQ,CACNR,EAAGQ,EAAMR,EAAI/Y,EAAK26G,eAClB3hG,EAAGO,EAAMP,EACT6jB,EAAGtjB,EAAMsjB,GAAK,IAII,YAAlB78B,EAAKouG,SAEP70F,EAAQ,CACNR,EAAGQ,EAAMR,EAAIs+F,EACbr+F,EAAGO,EAAMP,EAAIq+F,EACbx6E,EAAGtjB,EAAMsjB,GAAK,IAGhBtjB,EAAQvZ,EAAKqjC,QAAQ9pB,GACjBvZ,EAAKsuG,WACP/0F,EAAQ,CACNR,EAAGQ,EAAMR,EAAI/Y,EAAKsuG,SAClBt1F,EAAGO,EAAMP,EAAIhZ,EAAKsuG,SAClBzxE,EAAGtjB,EAAMsjB,GAAK,KAMhBkvG,GAA6B,QAAd/rI,EAAKquG,KACf+9B,GAAYpsI,GAAM,EAAMuZ,IAG7BA,IAAUyyH,UACLzyH,EAAMsjB,EAERtjB,EACT,CChHA,IAAI2vG,GAAQ3T,GAAK,SAiFjB,SAAS9yE,GAAY7R,EAAM07G,EAAI/wE,EAAQwwE,GACrC,IAAIQ,EAAkB53F,EAAK7uB,EAC3B,OAAI9nB,MAAMC,QAAQs9D,IAChBgxE,EAAmB7zH,GAAUkY,EAAM07G,EAAI/wE,EAAQwwE,IAAgB,CAAEhzH,EAAGhB,IAAKiB,EAAGjB,KACxEwjD,EAAO/jE,OAAS,EACQ,qBAAdo5B,EAAKqqB,MAAsC,YAAdrqB,EAAKqqB,MAA2C,qBAAZqxF,EAAGrxF,MAAoC,YAAZqxF,EAAGrxF,KACvE,kBAAvBsxF,EAAiB1vG,EACD,CAAC0vG,EAAiBxzH,EAAGwzH,EAAiBvzH,EAAGuzH,EAAiB1vG,GAAGld,OAAO47C,EAAOp9D,MAAM,IAEjF,CAACouI,EAAiBxzH,EAAGwzH,EAAiBvzH,EAAGuiD,EAAO,IAAI57C,OAAO47C,EAAOp9D,MAAM,IAG1E,CAACouI,EAAiBxzH,EAAGwzH,EAAiBvzH,GAAG2G,OAAO47C,EAAOp9D,MAAM,IAG/D,CAACouI,EAAiBxzH,EAAGwzH,EAAiBvzH,KAGjE27B,EAAMj8B,GAAUkY,EAAM07G,EAAI/wE,EAAQwwE,GAEd,KADpBjmH,EAAO3uB,OAAO2uB,KAAKy1C,IACV/jE,QAGTsuB,EAAKruB,SAAQ,SAAUkD,GACrB,GAA0B,qBAAdi2B,EAAKqqB,MAAsC,YAAdrqB,EAAKqqB,MAA2C,qBAAZqxF,EAAGrxF,MAAoC,YAAZqxF,EAAGrxF,MACzG,GAAY,MAARtgD,GAAuB,MAARA,GAAuB,MAARA,EAChC,YAGF,GAAY,MAARA,GAAuB,MAARA,EACjB,OAGJg6C,EAAIh6C,GAAO4gE,EAAO5gE,EACpB,IAb2Bg6C,EAgB/B,CAMA,SAAS63F,GAAU/tH,GACjB,OAAIA,aAAgB82F,GACX92F,EAEW,kBAATA,GAAqB,UAAWA,EAClCA,EAAKguH,MAEPl3B,GAAiD92F,EAC1D,CAyFA,SAtDA,SAAeiuH,EAAkBC,EAAejqG,GAE9C,IAAIkqG,EAEAC,EAGAhoH,EAFAioH,GAAS,EAmBb,MAhB6B,qBAAlBH,GACTE,EAASL,GAAUE,GACnBE,EAAW1jB,GACX4jB,GAAS,IAC8C,qBAArBH,EAAe5zH,GAAqB/a,MAAMC,QAAQ0uI,MACpFjqG,EAA4CiqG,EAC5CE,EAASL,GAAUE,GACnBE,EAAW1jB,GACX4jB,GAAS,GAENF,IACHA,EAAWJ,GAAUE,IAElBG,IACHA,EAASL,GAA8DG,IAErEjqG,EACKD,GAAYmqG,EAAUC,EAAQnqG,IAErC7d,EAAM,CAOJwe,QAAS,SAAUk4B,EAAQwwE,GACzB,OAAOtpG,GAAYmqG,EAAUC,EAAQtxE,EAAQwwE,EAC/C,EAOAzoG,QAAS,SAAUi4B,EAAQwwE,GACzB,OAAOtpG,GAAYoqG,EAAQD,EAAUrxE,EAAQwwE,EAC/C,GAEEe,IACFjoH,EAAI4nH,MAAQI,GAEPhoH,EAEX,ECpNA,IAQIkoH,GAA4B,SAQ5BC,GAAyB,SAEzBC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJtE,GAAI,GACR,UACEzlG,QAASA,GACTC,QA4BK,SAAiB+pG,GACtB,IAAInuH,EAAOouH,GAAQl2G,GAAOi2G,EAAK1xB,gBAC/B,GAAIz8F,EAAK6mG,KAAO7mG,EAAKkmB,IACnB,MAAO,CAAClmB,EAAKkmB,IAAKlmB,EAAK6mG,IAAK7mG,EAAKkmB,IAAKlmB,EAAK6mG,KAE7C,MAAO,CAAC7mG,EAAKhR,KAAMgR,EAAKquH,OAAQruH,EAAKgO,MAAOhO,EAAK/Q,IACnD,EAjCE89H,QAASA,IAWJ,SAAS5oG,GAAQghG,EAAIvnB,GAE1B,OADAA,EAAWA,GAAY,EA6TzB,SAAgB0wB,EAAK1wB,GAEnB,IAAI2wB,EAAW,QAAUD,EAAI7tG,QAC3B+tG,EAAY,QAAUF,EAAI5tG,SAE5B,OAAO4tG,EAAIG,WAAaH,EAAII,WAa9B,SAAmBjuG,EAASC,EAAU+tG,GACpC,IAAIE,EAAUC,GAAkBH,GAC5BI,EAAYv1I,KAAKmyB,MAAMgV,EAAU,KACjCquG,EAASx1I,KAAKmyB,MAAMiV,EAAW,KAAU,GAC7C,OAmCF,SAAyBquG,EAAQ1kG,EAAK2kG,GAEpC,IAAI9zI,EAAQ8zI,EAAO,EACfC,EAAYpB,GAA0B74B,WAAW95G,GACjDg0I,EAAYpB,GAAuB94B,WAAW95G,GAG9Ci0I,EAASF,EAAYF,EAAS,EAC9BK,EAASF,EAAY7kG,EACrBglG,GAAW,EAEXF,EAASvF,KACXuF,EAASA,EAASvF,GAAImE,GAAI,EAC1BsB,GAAW,IAGTF,IAAWnB,IAAMiB,EAAYjB,IAAKmB,EAASnB,KAAQmB,EAASnB,IAAKiB,EAAYjB,KAAMqB,IACrFF,KAGEA,IAAWlB,IAAMgB,EAAYhB,IAAKkB,EAASlB,KAAQkB,EAASlB,IAAKgB,EAAYhB,KAAMoB,MACrFF,IAEenB,IACbmB,IAIAA,EAASvF,KACXuF,EAASA,EAASvF,GAAImE,GAAI,GAGxBqB,EAASlB,IACXkB,EAASA,EAASlB,GAAIH,GAAI,EAC1BsB,GAAW,GAGXA,GAAW,GAGPD,IAAWpB,IAAQkB,EAAYlB,IAAOoB,EAASpB,KAAWoB,EAASpB,IAAOkB,EAAYlB,KAAOqB,IACjGD,KAGIA,IAAWnB,IAAQiB,EAAYjB,IAAOmB,EAASnB,KAAWmB,EAASnB,IAAOiB,EAAYjB,KAAOoB,MACjGD,IAEepB,IACboB,IAIAA,EAASlB,KACXkB,EAASA,EAASlB,GAAIH,GAAI,GAI5B,OADgB/qH,OAAOsqD,aAAa6hE,GAAUnsH,OAAOsqD,aAAa8hE,EAEpE,CA7FSE,CAAgBT,EAAWC,EAAQH,EAC5C,CAlB2CY,CAAUjB,EAAI7tG,QAAS6tG,EAAI5tG,SAAU4tG,EAAIG,YAAcF,EAASxyB,OAAOwyB,EAASj2I,OAAS,EAAGslH,GAAY4wB,EAAUzyB,OAAOyyB,EAAUl2I,OAAS,EAAGslH,EAC1L,CAlUS4xB,CA8DT,SAAiBrK,GACf,IAMIsK,EACAh/C,EAAGi/C,EAAGC,EAAG5B,EAAGr9C,EAGZk/C,EACAC,EAXAC,EAAM3K,EAAGte,IACTkpB,EAAO5K,EAAGj/F,IACV5gC,EAAI,QACJ0qI,EAAa,UACb/0B,EAAK,MAILg1B,EAASC,GAASJ,GAClBK,EAAUD,GAASH,GAIvBF,EAAav2I,KAAKmyB,OAAOskH,EAAO,KAAO,GAAK,EAG/B,MAATA,IACFF,EAAa,IAIXC,GAAO,IAAQA,EAAM,IAAQC,GAAQ,GAAOA,EAAO,KACrDF,EAAa,IAIXC,GAAO,IAAQA,EAAM,KACnBC,GAAQ,GAAOA,EAAO,EACxBF,EAAa,GAENE,GAAQ,GAAOA,EAAO,GAC7BF,EAAa,GAENE,GAAQ,IAAQA,EAAO,GAC9BF,EAAa,GAENE,GAAQ,IAAQA,EAAO,KAC9BF,EAAa,KAOjBD,EAAgBM,GAHgB,GAAlBL,EAAa,GAAS,IAAM,GAK1CJ,EAAmBO,GAAe,EAAIA,GAEtCv/C,EAAInrF,EAAIhM,KAAKwX,KAAK,EAAIk/H,EAAa12I,KAAKgxB,IAAI2lH,GAAU32I,KAAKgxB,IAAI2lH,IAC/DP,EAAIp2I,KAAK6kC,IAAI8xG,GAAU32I,KAAK6kC,IAAI8xG,GAChCN,EAAIF,EAAkBn2I,KAAK8wB,IAAI6lH,GAAU32I,KAAK8wB,IAAI6lH,GAClDlC,EAAIz0I,KAAK8wB,IAAI6lH,IAAWE,EAAUP,GAElCl/C,EAAIprF,IAAM,EAAI0qI,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,EAAIA,EAAaA,EAAaA,EAAa,KAAOC,GAAU,EAAID,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,GAAKA,EAAaA,EAAaA,EAAa,MAAQ12I,KAAKgxB,IAAI,EAAI2lH,IAAW,GAAKD,EAAaA,EAAa,IAAM,GAAKA,EAAaA,EAAaA,EAAa,MAAQ12I,KAAKgxB,IAAI,EAAI2lH,GAAW,GAAKD,EAAaA,EAAaA,EAAa,KAAQ12I,KAAKgxB,IAAI,EAAI2lH,IAEpb,IAAIG,EAAcn1B,EAAKxqB,GAAKs9C,GAAK,EAAI2B,EAAIC,GAAK5B,EAAIA,EAAIA,EAAI,GAAO,EAAI,GAAK2B,EAAIA,EAAIA,EAAI,GAAKC,EAAI,GAAKF,GAAmB1B,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAS,IAEhJsC,EAAep1B,GAAMvqB,EAAID,EAAIn3F,KAAK6kC,IAAI8xG,IAAWlC,EAAIA,EAAI,GAAK,EAAI2B,EAAI,EAAIC,EAAI,EAAIA,EAAIA,GAAK5B,EAAIA,EAAIA,EAAIA,EAAI,IAAQ,GAAK,GAAK2B,EAAIA,EAAIA,EAAI,IAAMC,EAAI,IAAMF,GAAmB1B,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,MACpM+B,EAAM,IACRO,GAAe,KAIjB,MAAO,CACL3vG,SAAUpnC,KAAKq9B,MAAM05G,GACrB5vG,QAASnnC,KAAKq9B,MAAMy5G,GACpB3B,WAAYoB,EACZnB,WAAY4B,GAAoBR,GAEpC,CApIgBS,CAAQ,CACpB1pB,IAAKse,EAAG,GACRj/F,IAAKi/F,EAAG,KACNvnB,EACN,CAkBO,SAASmvB,GAAQoB,GACtB,IAAInuH,EAAOouH,GAAQl2G,GAAOi2G,EAAK1xB,gBAC/B,OAAIz8F,EAAK6mG,KAAO7mG,EAAKkmB,IACZ,CAAClmB,EAAKkmB,IAAKlmB,EAAK6mG,KAElB,EAAE7mG,EAAKhR,KAAOgR,EAAKgO,OAAS,GAAIhO,EAAK/Q,IAAM+Q,EAAKquH,QAAU,EACnE,CAQA,SAAS6B,GAASM,GAChB,OAAQA,GAAOl3I,KAAKuyB,GAAK,IAC3B,CASA,SAAS4kH,GAASC,GAChB,OAAiBA,EAAMp3I,KAAKuyB,GAApB,GACV,CAoGA,SAASuiH,GAAQE,GAEf,IAAI+B,EAAc/B,EAAI5tG,SAClB0vG,EAAa9B,EAAI7tG,QACjBiuG,EAAaJ,EAAII,WACjBD,EAAaH,EAAIG,WAErB,GAAIA,EAAa,GAAKA,EAAa,GACjC,OAAO,KAGT,IAGIgB,EAEA5+C,EAAI8/C,EAAIC,EAAIC,EAAIC,EAChBC,EACAnwG,EAAIowG,EAPJ/1B,EAAK,MACL31G,EAAI,QACJ0qI,EAAa,UAEbiB,GAAM,EAAI33I,KAAKwX,KAAK,aAAoB,EAAIxX,KAAKwX,KAAK,YAMtD+I,EAAIu2H,EAAa,IACjBt2H,EAAIu2H,EAMJ3B,EAAa,MACf50H,GAAK,KAKPi3H,EAAgC,GAAlBtC,EAAa,GAAS,IAAM,EAI1CgB,EAAmBO,oBAKnBgB,GAFApwG,EADI9mB,EAAImhG,EACC,oBAEO,EAAIg2B,EAAK,EAAI,GAAKA,EAAKA,EAAKA,EAAK,IAAM33I,KAAKgxB,IAAI,EAAIsW,IAAO,GAAKqwG,EAAKA,EAAK,GAAK,GAAKA,EAAKA,EAAKA,EAAKA,EAAK,IAAM33I,KAAKgxB,IAAI,EAAIsW,GAAO,IAAMqwG,EAAKA,EAAKA,EAAK,GAAM33I,KAAKgxB,IAAI,EAAIsW,GAG1LiwD,EAAKvrF,EAAIhM,KAAKwX,KAAK,EAAIk/H,EAAa12I,KAAKgxB,IAAI0mH,GAAW13I,KAAKgxB,IAAI0mH,IACjEL,EAAKr3I,KAAK6kC,IAAI6yG,GAAW13I,KAAK6kC,IAAI6yG,GAClCJ,EAAKnB,EAAkBn2I,KAAK8wB,IAAI4mH,GAAW13I,KAAK8wB,IAAI4mH,GACpDH,EAAS,UAAJvrI,EAAuBhM,KAAKyjC,IAAI,EAAIizG,EAAa12I,KAAKgxB,IAAI0mH,GAAW13I,KAAKgxB,IAAI0mH,GAAU,KAC7FF,EAAIj3H,GAAKg3E,EAAKoqB,GAEd,IAAI4L,EAAMmqB,EAAWngD,EAAKv3F,KAAK6kC,IAAI6yG,GAAWH,GAAOC,EAAIA,EAAI,GAAK,EAAI,EAAIH,EAAK,GAAKC,EAAK,EAAIA,EAAKA,EAAK,EAAInB,GAAmBqB,EAAIA,EAAIA,EAAIA,EAAI,IAAM,GAAK,GAAKH,EAAK,IAAMC,EAAK,GAAKD,EAAKA,EAAK,mBAAwB,EAAIC,EAAKA,GAAME,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAC5PjqB,EAAM4pB,GAAS5pB,GAEf,IAGIvjH,EAHA4iC,GAAO4qG,GAAK,EAAI,EAAIH,EAAKC,GAAME,EAAIA,EAAIA,EAAI,GAAK,EAAI,EAAIF,EAAK,GAAKD,EAAK,EAAIC,EAAKA,EAAK,EAAInB,EAAkB,GAAKkB,EAAKA,GAAMG,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAOx3I,KAAK8wB,IAAI4mH,GAInK,GAHA9qG,EAAM6qG,EAAaN,GAASvqG,GAGxBooG,EAAI1wB,SAAU,CAChB,IAAIxyE,EAAWgjG,GAAQ,CACrB1tG,SAAU4tG,EAAI5tG,SAAW4tG,EAAI1wB,SAC7Bn9E,QAAS6tG,EAAI7tG,QAAU6tG,EAAI1wB,SAC3B8wB,WAAYJ,EAAII,WAChBD,WAAYH,EAAIG,aAElBnrI,EAAS,CACP2L,IAAKm8B,EAASy7E,IACd74F,MAAOod,EAASlF,IAChBmoG,OAAQxnB,EACR73G,KAAMk3B,EAEV,MAEE5iC,EAAS,CACPujH,IAAKA,EACL3gF,IAAKA,GAGT,OAAO5iC,CACT,CAUA,SAASgtI,GAAoBzpB,GAG3B,IAAIqqB,EAAmB,IA8DvB,OA5DK,IAAMrqB,GAASA,GAAO,GACzBqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,GAC7BqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,GAC7BqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,GAC7BqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,GAC7BqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,GAC7BqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,GAC7BqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,GAC7BqqB,EAAmB,IAEX,GAAKrqB,GAASA,GAAO,EAC7BqqB,EAAmB,IAEX,EAAIrqB,GAASA,GAAO,EAC5BqqB,EAAmB,IAEX,EAAIrqB,GAASA,IAAQ,EAC7BqqB,EAAmB,KAEV,EAAIrqB,GAASA,IAAQ,GAC9BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,GAC/BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,GAC/BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,GAC/BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,GAC/BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,GAC/BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,GAC/BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,GAC/BqqB,EAAmB,KAEV,GAAKrqB,GAASA,IAAQ,KAC/BqqB,EAAmB,KAEdA,CACT,CA2CA,SAAStC,GAAkBtzI,GACzB,IAAIqzI,EAAUrzI,EApYI,EAyYlB,OAJgB,IAAZqzI,IACFA,EAtYgB,GAyYXA,CACT,CAsFA,SAASz2G,GAAOi5G,GAEd,GAAIA,GAAoC,IAAtBA,EAAW74I,OAC3B,KAAO,mCAWT,IARA,IAII84I,EAJA94I,EAAS64I,EAAW74I,OAEpB+4I,EAAO,KACPC,EAAK,GAELh2I,EAAI,GAGC,QAASm8B,KAAK25G,EAAWD,EAAWzsB,OAAOppH,KAAK,CACvD,GAAIA,GAAK,EACP,KAAO,kCAAoC61I,EAE7CG,GAAMF,EACN91I,GACF,CAEA,IAAImzI,EAAa9yG,SAAS21G,EAAI,IAE9B,GAAU,IAANh2I,GAAWA,EAAI,EAAIhD,EAGrB,KAAO,kCAAoC64I,EAG7C,IAAIzC,EAAayC,EAAWzsB,OAAOppH,KAGnC,GAAIozI,GAAc,KAAsB,MAAfA,GAAqC,MAAfA,GAAsBA,GAAc,KAAsB,MAAfA,GAAqC,MAAfA,EAC9G,KAAO,yBAA2BA,EAAa,iBAAmByC,EAGpEE,EAAOF,EAAWp2G,UAAUz/B,EAAGA,GAAK,GAWpC,IATA,IAAIoF,EAAMkuI,GAAkBH,GAExB8C,EAqDN,SAA4BxuF,EAAGriD,GAG7B,IAAI8wI,EAAS3D,GAA0B74B,WAAWt0G,EAAM,GACpD+wI,EAAe,IACfC,GAAe,EAEnB,KAAOF,IAAWzuF,EAAEiyD,WAAW,IAAI,CAQjC,KAPAw8B,IACexD,IACbwD,IAEEA,IAAWvD,IACbuD,IAEEA,EAAS5H,GAAG,CACd,GAAI8H,EACF,KAAO,kBAAoB3uF,EAE7ByuF,EAASzD,GACT2D,GAAe,CACjB,CACAD,GAAgB,GAClB,CAEA,OAAOA,CACT,CA/EiBE,CAAmBN,EAAK3sB,OAAO,GAAIhkH,GAC9CkxI,EAgGN,SAA6B11I,EAAGwE,GAE9B,GAAIxE,EAAI,IACN,KAAO,oCAAsCA,EAK/C,IAAI21I,EAAS/D,GAAuB94B,WAAWt0G,EAAM,GACjDoxI,EAAgB,EAChBJ,GAAe,EAEnB,KAAOG,IAAW31I,EAAE84G,WAAW,IAAI,CAUjC,KATA68B,IACe7D,IACb6D,IAEEA,IAAW5D,IACb4D,IAIEA,EAAS3D,GAAG,CACd,GAAIwD,EACF,KAAO,kBAAoBx1I,EAE7B21I,EAAS9D,GACT2D,GAAe,CACjB,CACAI,GAAiB,GACnB,CAEA,OAAOA,CACT,CAjIkBC,CAAoBV,EAAK3sB,OAAO,GAAIhkH,GAM7CkxI,EAAYI,GAAetD,IAChCkD,GAAa,IAIf,IAAIK,EAAY35I,EAASgD,EAEzB,GAAI22I,EAAY,IAAM,EACpB,KAAO,oKAAsKd,EAG/K,IAIIe,EAAeC,EAAkBC,EAJjCC,EAAMJ,EAAY,EAElBK,EAAa,EACbC,EAAc,EAalB,OAXIF,EAAM,IACRH,EAAgB,IAAW54I,KAAKyjC,IAAI,GAAIs1G,GACxCF,EAAmBhB,EAAWp2G,UAAUz/B,EAAGA,EAAI+2I,GAC/CC,EAAav8H,WAAWo8H,GAAoBD,EAC5CE,EAAoBjB,EAAWp2G,UAAUz/B,EAAI+2I,GAC7CE,EAAcx8H,WAAWq8H,GAAqBF,GAMzC,CACLzxG,QAJQ6xG,EAAaf,EAKrB7wG,SAJS6xG,EAAcX,EAKvBlD,WAAYA,EACZD,WAAYA,EACZ7wB,SAAUs0B,EAEd,CAqGA,SAASF,GAAetD,GACtB,IAAIhuG,EACJ,OAAQguG,GACR,IAAK,IACHhuG,EAAW,KACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,EACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,IAAK,IACHA,EAAW,IACX,MACF,IAAK,IACHA,EAAW,KACX,MACF,QACEA,GAAY,EAEd,GAAIA,GAAY,EACd,OAAOA,EAGP,KAAO,wBAA0BguG,CAGrC,CCjuBA,SAASlgH,GAAM3U,EAAGC,EAAG6jB,GACnB,KAAMzpC,gBAAgBs6B,IACpB,OAAO,IAAIA,GAAM3U,EAAGC,EAAG6jB,GAEzB,GAAI7+B,MAAMC,QAAQ8a,GAChB3lB,KAAK2lB,EAAIA,EAAE,GACX3lB,KAAK4lB,EAAID,EAAE,GACX3lB,KAAKypC,EAAI9jB,EAAE,IAAM,OACZ,GAAiB,kBAANA,EAChB3lB,KAAK2lB,EAAIA,EAAEA,EACX3lB,KAAK4lB,EAAID,EAAEC,EACX5lB,KAAKypC,EAAI9jB,EAAE8jB,GAAK,OACX,GAAiB,kBAAN9jB,GAA+B,qBAANC,EAAmB,CAC5D,IAAIuiD,EAASxiD,EAAEyf,MAAM,KACrBplC,KAAK2lB,EAAI9D,WAAWsmD,EAAO,IAC3BnoE,KAAK4lB,EAAI/D,WAAWsmD,EAAO,IAC3BnoE,KAAKypC,EAAI5nB,WAAWsmD,EAAO,KAAO,CACpC,MACEnoE,KAAK2lB,EAAIA,EACT3lB,KAAK4lB,EAAIA,EACT5lB,KAAKypC,EAAIA,GAAK,EAEhBmjE,QAAQ5qF,KAAK,8DACf,CAEAsY,GAAMgkH,SAAW,SAAUC,GACzB,OAAO,IAAIjkH,GAAMu+G,GAAQ0F,GAC3B,EACAjkH,GAAMrZ,UAAUu9H,OAAS,SAAU90B,GACjC,OAAOz5E,GAAQ,CAACjwC,KAAK2lB,EAAG3lB,KAAK4lB,GAAI8jG,EACnC,EACA,YCvCA,IAEI+0B,GAAM,QACNC,GAAM,UACNC,GAAM,gBASK,SAAS,GAAClsB,GACvB,IAAImsB,EAAK,GACTA,EAAG,GAfK,EAeMnsB,GAdN,IAckBA,GAAMgsB,GAAMhsB,GAAMisB,GAAMjsB,EAAKksB,MACvDC,EAAG,GAAKnsB,GAXA,IAWYA,GAAMgsB,GAAMhsB,GAAMisB,GAAMjsB,EAAKksB,MACjD,IAAIhkF,EAAI83D,EAAKA,EAKb,OAJAmsB,EAAG,GAAKjkF,GAZA,OAYW83D,GAXX,oBACA,oBAUuBA,IAC/B93D,GAAK83D,EACLmsB,EAAG,GAAKjkF,GAXA,kBACA,oBAUW83D,GACnBmsB,EAAG,GAAKjkF,EAAI83D,EAVJ,YAWDmsB,CACT,CCvBe,SAAS,GAAC5sB,EAAK6sB,EAAMC,EAAMF,GAGxC,OAFAE,GAAQD,EACRA,GAAQA,EACAD,EAAG,GAAK5sB,EAAM8sB,GAAQF,EAAG,GAAKC,GAAQD,EAAG,GAAKC,GAAQD,EAAG,GAAKC,EAAOD,EAAG,KAClF,CCCe,SAAS,GAAC/tC,EAAK4hB,EAAImsB,GAGhC,IAFA,IAAI7vF,EAAI,GAAK,EAAI0jE,GACbT,EAAMnhB,EACDzpG,EALI,GAKUA,IAAKA,EAAG,CAC7B,IAAIs/B,EAAIthC,KAAKgxB,IAAI47F,GACbr3D,EAAI,EAAI83D,EAAK/rF,EAAIA,EAKrB,GADAsrF,GADAr3D,GAAKokF,GAAQ/sB,EAAKtrF,EAAGthC,KAAK8wB,IAAI87F,GAAM4sB,GAAM/tC,IAAQl2C,EAAIv1D,KAAKwX,KAAK+9C,IAAM5L,EAElE3pD,KAAKC,IAAIs1D,GAAKopD,EAChB,OAAOiO,CAEX,CAEA,OAAOA,CACT,CCmJA,UACEQ,KAtJK,WACLxyH,KAAKw1B,QAAiBv1B,IAAZD,KAAKw1B,GAAmBx1B,KAAKw1B,GAAK,EAC5Cx1B,KAAKy1B,QAAiBx1B,IAAZD,KAAKy1B,GAAmBz1B,KAAKy1B,GAAK,EAC5Cz1B,KAAKmmH,WAAuBlmH,IAAfD,KAAKmmH,MAAsBnmH,KAAKmmH,MAAQ,EACrDnmH,KAAK8lH,UAAqB7lH,IAAdD,KAAK8lH,KAAqB9lH,KAAK8lH,KAAO,EAE9C9lH,KAAKyyH,KACPzyH,KAAK4+I,GAAKI,GAAQh/I,KAAKyyH,IACvBzyH,KAAKi/I,IAAMF,GAAQ/+I,KAAK8lH,KAAM1gH,KAAKgxB,IAAIp2B,KAAK8lH,MAAO1gH,KAAK8wB,IAAIl2B,KAAK8lH,MAAO9lH,KAAK4+I,IAEjF,EA6IE3uG,QAvIK,SAAiBilC,GACtB,IAII48C,EACAnsG,EAAGC,EALHosB,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAERs5H,EAAYtsB,EAAW5gF,EAAMhyC,KAAKmmH,OAGlCg5B,EAAU/5I,KAAKgxB,IAAIu8F,GACnBysB,EAAUh6I,KAAK8wB,IAAIy8F,GAEvB,GAAK3yH,KAAKyyH,GA0BH,CACL,IAAI4sB,EAAKD,EAAUF,EACfI,EAAMl6I,KAAKyjC,IAAIw2G,EAAI,GACnB71G,EAAIxpC,KAAK2vI,IAAMvqI,KAAKyjC,IAAIu2G,EAAS,GACjCG,EAAKn6I,KAAKyjC,IAAIW,EAAG,GACjBg2G,EAAKp6I,KAAKC,IAAI+5I,GAAWr7B,EAAQ3+G,KAAK6kC,IAAI0oF,GAAO,EACjDh4D,EAAIv1D,KAAKyjC,IAAI22G,EAAI,GACjBttB,EAAK9sH,KAAKyjC,IAAI8xB,EAAG,GACrBm3D,EAAM,EAAI9xH,KAAKyyH,GAAKrtH,KAAKyjC,IAAIs2G,EAAS,GACtCE,GAAUj6I,KAAKwX,KAAKk1G,GACpB,IAAI2tB,EAAKV,GAAQpsB,EAAKwsB,EAASC,EAASp/I,KAAK4+I,IAE7Cj5H,EAAI3lB,KAAKoR,GAAKpR,KAAK+mH,GAAKs4B,GAAM,EAC1BC,EAAM,GAAK,EAAI3kF,EAAInxB,EACjB81G,EAAM,IAAM,EAAI,GAAK3kF,EAAIu3D,EAAK,GAAK1oF,EAAI,GAAKmxB,EAAInxB,EAC9C81G,EAAM,IAAM,GAAK,IAAMptB,EAAKA,EAAKv3D,EAAI,IAAMA,OAC7C36D,KAAKw1B,GAEX5P,EAAI5lB,KAAKoR,GAAKpR,KAAK+mH,IAAM04B,EAAKz/I,KAAKi/I,IAC/BE,EAAUD,EAAYG,EAAK,GAAK,EAC9BC,EAAM,IAAM,EAAI3kF,EAAI,EAAInxB,EAAI,EAAI+1G,EAC9BD,EAAM,IAAM,GAAKptB,EAAK,GAAKv3D,EAAI,IAAMnxB,EAAI,IAAMmxB,EAAInxB,EACjD81G,EAAM,IAAM,KAAO,IAAMptB,EAAKA,EAAKv3D,EAAI,KAAOA,QAChD36D,KAAKy1B,EACf,KAlDc,CACZ,IAAIpkB,EAAI+tI,EAAUh6I,KAAKgxB,IAAI8oH,GAE3B,GAAK95I,KAAKC,IAAID,KAAKC,IAAIgM,GAAK,GAAM0yG,EAChC,OAAQ,GAMR,GAJAp+F,EAAI,GAAM3lB,KAAKoR,EAAIpR,KAAK+mH,GAAK3hH,KAAKuX,KAAK,EAAItL,IAAM,EAAIA,IAAMrR,KAAKw1B,GAChE5P,EAAIw5H,EAAUh6I,KAAK8wB,IAAIgpH,GAAa95I,KAAKwX,KAAK,EAAIxX,KAAKyjC,IAAIx3B,EAAG,KAC9DA,EAAIjM,KAAKC,IAAIugB,KAEJ,EAAG,CACV,GAAKvU,EAAI,EAAK0yG,EACZ,OAAQ,GAERn+F,EAAI,CAER,MACEA,EAAIxgB,KAAKwtE,KAAKhtD,GAGZ+sG,EAAM,IACR/sG,GAAKA,GAGPA,EAAI5lB,KAAKoR,EAAIpR,KAAK+mH,IAAMnhG,EAAI5lB,KAAK8lH,MAAQ9lH,KAAKy1B,EAElD,CA6BA,OAHAy/C,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EAECsvD,CACT,EAsEEhlC,QAjEK,SAAiBglC,GACtB,IAAI48C,EAAKE,EACLW,EAAK3gF,EACLrsB,GAAKuvD,EAAEvvD,EAAI3lB,KAAKw1B,KAAO,EAAIx1B,KAAKoR,GAChCwU,GAAKsvD,EAAEtvD,EAAI5lB,KAAKy1B,KAAO,EAAIz1B,KAAKoR,GAEpC,GAAKpR,KAAKyyH,GAqBR,GAFAT,EAAM0tB,GADN5tB,EAAM9xH,KAAKi/I,IAAMr5H,EAAI5lB,KAAK+mH,GACH/mH,KAAKyyH,GAAIzyH,KAAK4+I,IAEjCx5I,KAAKC,IAAI2sH,GAAOlO,EAAS,CAC3B,IAAIq7B,EAAU/5I,KAAKgxB,IAAI47F,GACnBotB,EAAUh6I,KAAK8wB,IAAI87F,GACnB2tB,EAAUv6I,KAAKC,IAAI+5I,GAAWr7B,EAAQ3+G,KAAK6kC,IAAI+nF,GAAO,EACtDxoF,EAAIxpC,KAAK2vI,IAAMvqI,KAAKyjC,IAAIu2G,EAAS,GACjCG,EAAKn6I,KAAKyjC,IAAIW,EAAG,GACjBmxB,EAAIv1D,KAAKyjC,IAAI82G,EAAS,GACtBztB,EAAK9sH,KAAKyjC,IAAI8xB,EAAG,GACrBm3D,EAAM,EAAI9xH,KAAKyyH,GAAKrtH,KAAKyjC,IAAIs2G,EAAS,GACtC,IAAI7xG,EAAI3nB,EAAIvgB,KAAKwX,KAAKk1G,GAAO9xH,KAAK+mH,GAC9B64B,EAAKx6I,KAAKyjC,IAAIyE,EAAG,GAGrBqlF,EAAMX,GAFNF,GAAY6tB,GAEOC,GAAM,EAAI5/I,KAAKyyH,IAAO,IAAO,EAC5CmtB,EAAK,IAAM,EAAI,EAAIjlF,EAAI,EAAInxB,EAAImxB,EAAInxB,EAAI,EAAI+1G,EACzCK,EAAK,IAAM,GAAK,GAAKjlF,EAAI,IAAMnxB,EAAImxB,EAAI,GAAKu3D,EAAK,GAAK1oF,EACpDo2G,EAAK,IAAM,KAAO,KAAOjlF,EAAI,KAAOu3D,EAAK,KAAOA,EAAKv3D,MAE7D3oB,EAAM4gF,EAAW5yH,KAAKmmH,MAAS74E,GAAK,EAChCsyG,EAAK,GAAK,EAAI,EAAIjlF,EAAInxB,EACpBo2G,EAAK,IAAM,EAAI,GAAKjlF,EAAI,GAAKu3D,EAAK,EAAI1oF,EAAImxB,EAAI,EAAInxB,EAChDo2G,EAAK,IAAM,GAAK,IAAMjlF,EAAI,KAAOu3D,EAAK,IAAMA,EAAKv3D,MAAQykF,EACnE,MACEzsB,EAAM7O,EAAUiO,EAAKnsG,GACrBosB,EAAM,MA7CI,CACZ,IAAI3M,EAAIjgC,KAAK2lC,IAAIplB,EAAI3lB,KAAK+mH,IACtB59E,EAAI,IAAO9D,EAAI,EAAIA,GACnBw6G,EAAO7/I,KAAK8lH,KAAOlgG,EAAI5lB,KAAK+mH,GAC5B19E,EAAIjkC,KAAK8wB,IAAI2pH,GACjB/tB,EAAM1sH,KAAKwX,MAAM,EAAIxX,KAAKyjC,IAAIQ,EAAG,KAAO,EAAIjkC,KAAKyjC,IAAIM,EAAG,KACxDwpF,EAAMvtH,KAAK06I,KAAKhuB,GAEZlsG,EAAI,IACN+sG,GAAOA,GAIP3gF,EADS,IAAN7I,GAAmB,IAANE,EACV,EAEAupF,EAAWxtH,KAAKkkC,MAAMH,EAAGE,GAAKrpC,KAAKmmH,MAE7C,CAmCA,OAHAjxC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EAECz9C,CACT,EAOEg5B,MALiB,CAAC,2BAA4B,6BCvKjC,SAAS,GAACvoF,GACvB,IAAIujB,EAAI9jC,KAAK2lC,IAAIplB,GAEjB,OADAujB,GAAKA,EAAI,EAAIA,GAAK,CAEpB,CCJe,SAAS,GAACvjB,EAAGC,GAC1BD,EAAIvgB,KAAKC,IAAIsgB,GACbC,EAAIxgB,KAAKC,IAAIugB,GACb,IAAIxU,EAAIhM,KAAKqI,IAAIkY,EAAGC,GAChBvU,EAAIjM,KAAKmI,IAAIoY,EAAGC,IAAMxU,GAAQ,GAElC,OAAOA,EAAIhM,KAAKwX,KAAK,EAAIxX,KAAKyjC,IAAIx3B,EAAG,GACvC,CCJe,SAAS,GAACsU,GACvB,IAAIC,EAAIxgB,KAAKC,IAAIsgB,GAGjB,OAFAC,ECLa,SAAUD,GACvB,IAAIC,EAAI,EAAID,EACR8jB,EAAI7jB,EAAI,EAEZ,OAAa,IAAN6jB,EAAU9jB,EAAIA,EAAIvgB,KAAKuX,IAAIiJ,GAAK6jB,CACzC,CDAMs2G,CAAOn6H,GAAK,EAAIA,GAAKo6H,GAAM,EAAGp6H,GAAK,KAEhCD,EAAI,GAAKC,EAAIA,CACtB,CERe,SAAS,GAACq6H,EAAIC,GAO3B,IANA,IAII72G,EAJA82G,EAAS,EAAI/6I,KAAK8wB,IAAI,EAAIgqH,GAC1B94I,EAAI64I,EAAG77I,OAAS,EAChBg8I,EAAKH,EAAG74I,GACRi5I,EAAK,IAGAj5I,GAAK,GACZiiC,EAAU82G,EAASC,EAAdC,EAAmBJ,EAAG74I,GAC3Bi5I,EAAKD,EACLA,EAAK/2G,EAGP,OAAQ62G,EAAI72G,EAAIjkC,KAAKgxB,IAAI,EAAI8pH,EAC/B,CCXe,SAAS,GAACD,EAAIK,EAAOC,GAelC,IAdA,IAWIC,EACAC,EAZAC,EAAYt7I,KAAKgxB,IAAIkqH,GACrBK,EAAYv7I,KAAK8wB,IAAIoqH,GACrBM,EAAaC,GAAKN,GAClBO,ECPS,SAAUn7H,GACvB,IAAIujB,EAAI9jC,KAAK2lC,IAAIplB,GAEjB,OADKujB,EAAI,EAAIA,GAAK,CAEpB,CDGmBsB,CAAK+1G,GAClBr3G,EAAI,EAAIy3G,EAAYG,EACpB15I,GAAK,EAAIs5I,EAAYE,EACrBrwI,EAAI0vI,EAAG77I,OAAS,EAChB28I,EAAKd,EAAG1vI,GACRywI,EAAM,EACNC,EAAM,EACNxjF,EAAK,IAIAltD,GAAK,GACZiwI,EAAMS,EACNR,EAAMO,EAGND,EAAY73G,GAFZ+3G,EAAMF,GAEAP,EAAgBp5I,GADtB45I,EAAMvjF,GAC0BwiF,EAAG1vI,GACnCktD,EAAYr2D,EAAI65I,EAAVR,EAAgBv3G,EAAI83G,EAM5B,MAAO,EAHP93G,EAAIw3G,EAAYI,GAGJC,GAFZ35I,EAAIu5I,EAAYC,GAEKnjF,EAAIv0B,EAAIu0B,EAAKr2D,EAAI25I,EACxC,CEiJA,UACEvuB,KAzJK,WACL,IAAKxyH,KAAK8nH,SAAWhnG,MAAM9gB,KAAKyyH,KAAOzyH,KAAKyyH,IAAM,GAChD,MAAM,IAAIl9F,MAAM,sIAEdv1B,KAAK8nH,SAEPo5B,GAAM1uB,KAAKpqH,MAAMpI,MACjBA,KAAKiwC,QAAUixG,GAAMjxG,QACrBjwC,KAAKkwC,QAAUgxG,GAAMhxG,SAGvBlwC,KAAKw1B,QAAiBv1B,IAAZD,KAAKw1B,GAAmBx1B,KAAKw1B,GAAK,EAC5Cx1B,KAAKy1B,QAAiBx1B,IAAZD,KAAKy1B,GAAmBz1B,KAAKy1B,GAAK,EAC5Cz1B,KAAKmmH,WAAuBlmH,IAAfD,KAAKmmH,MAAsBnmH,KAAKmmH,MAAQ,EACrDnmH,KAAK8lH,UAAqB7lH,IAAdD,KAAK8lH,KAAqB9lH,KAAK8lH,KAAO,EAElD9lH,KAAKmhJ,IAAM,GACXnhJ,KAAKohJ,IAAM,GACXphJ,KAAKqhJ,IAAM,GACXrhJ,KAAKshJ,IAAM,GAEX,IAAIj8G,EAAIrlC,KAAKyyH,IAAM,EAAIrtH,KAAKwX,KAAK,EAAI5c,KAAKyyH,KACtCzqH,EAAIq9B,GAAK,EAAIA,GACbk8G,EAAKv5I,EAEThI,KAAKmhJ,IAAI,GAAKn5I,GAAK,EAAIA,IAAM,EAAI,EAAIA,GAAUA,GAAK,IAAM,GAAKA,GAAK,GAAK,GAAKA,IAAM,KAAO,OAAhD,KAC3ChI,KAAKohJ,IAAI,GAAKp5I,GAAUA,GAAK,EAAI,EAAIA,GAAK,EAAI,EAAIA,IAAM,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,KAAO,UAAzE,GAEpBu5I,GAAUv5I,EACVhI,KAAKmhJ,IAAI,GAAKI,GAAM,EAAI,EAAIv5I,GAAcA,IAAM,IAAM,GAAKA,GAAK,KAAO,IAAMA,GAAK,KAAO,OAAxD,MACjChI,KAAKohJ,IAAI,GAAKG,GAAM,EAAI,EAAIv5I,IAAM,GAAK,GAAKA,IAAM,GAAK,EAAIA,GAAK,IAAM,IAAMA,IAAM,KAAO,SAEzFu5I,GAAUv5I,EACVhI,KAAKmhJ,IAAI,GAAKI,GAAM,GAAK,GAAKv5I,IAAM,IAAM,GAAKA,IAAM,KAAO,IAAMA,GAAK,MAAQ,SAC/EhI,KAAKohJ,IAAI,GAAKG,IAAO,GAAK,GAAKv5I,GAAK,GAAK,GAAKA,GAAK,IAAQA,IAAM,MAAQ,SAEzEu5I,GAAUv5I,EACVhI,KAAKmhJ,IAAI,GAAKI,GAAM,KAAO,IAAMv5I,IAAM,IAAM,GAAKA,IAAM,OAAS,SACjEhI,KAAKohJ,IAAI,GAAKG,GAAM,KAAO,IAAMv5I,GAAeA,IAAM,MAAQ,OAAxB,MAEtCu5I,GAAUv5I,EACVhI,KAAKmhJ,IAAI,GAAKI,GAAM,KAAO,IAAMv5I,IAAM,OAAS,OAChDhI,KAAKohJ,IAAI,GAAKG,IAAO,IAAM,IAAMv5I,GAAK,OAAS,QAE/Cu5I,GAAUv5I,EACVhI,KAAKmhJ,IAAI,GAAKI,GAAM,OAAS,OAC7BvhJ,KAAKohJ,IAAI,GAAKG,GAAM,OAAS,QAE7BA,EAAKn8I,KAAKyjC,IAAI7gC,EAAG,GACjBhI,KAAKwhJ,GAAKxhJ,KAAK+mH,IAAM,EAAI/+G,IAAM,EAAIu5I,GAAM,EAAI,EAAIA,GAAM,EAAI,GAAKA,EAAK,OAErEvhJ,KAAKqhJ,IAAI,GAAKr5I,GAAYA,GAAK,EAAI,EAAIA,IAAM,GAAK,GAAKA,GAAK,EAAI,IAAMA,GAAK,GAAK,IAAMA,IAAM,MAAQ,YAAhF,IACpBhI,KAAKshJ,IAAI,GAAKt5I,GAAK,GAAMA,IAAM,EAAI,EAAIA,GAAK,EAAI,GAAKA,GAAK,GAAK,IAAMA,IAAM,IAAM,IAAMA,GAAK,KAAO,YAEnGhI,KAAKqhJ,IAAI,GAAKE,IAAO,EAAI,GAAKv5I,IAAM,EAAI,GAAKA,GAAK,IAAM,KAAOA,IAAM,GAAK,IAAMA,GAAK,QAAU,aAC/FhI,KAAKshJ,IAAI,GAAKC,GAAM,GAAK,GAAKv5I,GAAcA,GAAK,IAAM,KAAOA,GAAK,IAAM,IAAMA,IAAM,QAAU,WAA5D,KAEnCu5I,GAAUv5I,EACVhI,KAAKqhJ,IAAI,GAAKE,IAAO,GAAK,IAAMv5I,GAAK,GAAK,IAAMA,GAAK,IAAM,KAAOA,IAAM,KAAO,UAC/EhI,KAAKshJ,IAAI,GAAKC,GAAM,GAAK,IAAMv5I,IAAM,IAAM,IAAMA,GAAK,MAAQ,MAAQA,GAAK,OAAS,WAEpFu5I,GAAUv5I,EACVhI,KAAKqhJ,IAAI,GAAKE,IAAO,KAAO,OAASv5I,GAAK,GAAK,IAAMA,GAAK,OAAS,WACnEhI,KAAKshJ,IAAI,GAAKC,GAAM,MAAQ,OAASv5I,IAAM,IAAM,IAAMA,GAAK,QAAU,WAEtEu5I,GAAUv5I,EACVhI,KAAKqhJ,IAAI,GAAKE,IAAO,KAAO,OAASv5I,GAAK,OAAS,UACnDhI,KAAKshJ,IAAI,GAAKC,GAAM,MAAQ,MAAQv5I,IAAM,QAAU,UAEpDu5I,GAAUv5I,EACVhI,KAAKqhJ,IAAI,GAAKE,IAAO,SAAW,WAChCvhJ,KAAKshJ,IAAI,GAAU,kBAALC,EAEd,IAAI7L,EAAI+L,GAAKzhJ,KAAKohJ,IAAKphJ,KAAK8lH,MAC5B9lH,KAAK0hJ,IAAM1hJ,KAAKwhJ,IAAM9L,EClGT,SAAUuK,EAAIK,GAO3B,IANA,IAIIS,EAJA73G,EAAI,EAAI9jC,KAAK8wB,IAAIoqH,GACjBl5I,EAAI64I,EAAG77I,OAAS,EAChB68I,EAAMhB,EAAG74I,GACTo5I,EAAM,IAGDp5I,GAAK,GACZ25I,EAAY73G,EAAI+3G,EAAVT,EAAgBP,EAAG74I,GACzBo5I,EAAMS,EACNA,EAAMF,EAGR,OAAO37I,KAAKgxB,IAAIkqH,GAASS,CAC3B,CDoF4BY,CAAM3hJ,KAAKshJ,IAAK,EAAI5L,GAChD,EA+EEzlG,QA7EK,SAAiBilC,GACtB,IAAI0sE,EAAKhvB,EAAW19C,EAAEvvD,EAAI3lB,KAAKmmH,OAC3B07B,EAAK3sE,EAAEtvD,EAEXi8H,EAAKJ,GAAKzhJ,KAAKohJ,IAAKS,GACpB,IAAIC,EAAS18I,KAAKgxB,IAAIyrH,GAClBE,EAAS38I,KAAK8wB,IAAI2rH,GAClBG,EAAS58I,KAAKgxB,IAAIwrH,GAClBK,EAAS78I,KAAK8wB,IAAI0rH,GAEtBC,EAAKz8I,KAAKkkC,MAAMw4G,EAAQG,EAASF,GACjCH,EAAKx8I,KAAKkkC,MAAM04G,EAASD,EAAQ/B,GAAM8B,EAAQC,EAASE,IACxDL,EAAKM,GAAO98I,KAAK6kC,IAAI23G,IAErB,IAKIj8H,EACAC,EANAub,EAAMghH,GAAYniJ,KAAKshJ,IAAK,EAAIO,EAAI,EAAID,GAmB5C,OAjBAC,GAAU1gH,EAAI,GACdygH,GAAUzgH,EAAI,GAKV/7B,KAAKC,IAAIu8I,IAAO,gBAClBj8H,EAAI3lB,KAAKoR,GAAKpR,KAAKwhJ,GAAKI,GAAM5hJ,KAAKw1B,GACnC5P,EAAI5lB,KAAKoR,GAAKpR,KAAKwhJ,GAAKK,EAAK7hJ,KAAK0hJ,IAAM1hJ,KAAKy1B,KAE7C9P,EAAIhgB,IACJigB,EAAIjgB,KAGNuvE,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EAECsvD,CACT,EA4CEhlC,QA1CK,SAAiBglC,GACtB,IAMIljC,EACA2gF,EAPAivB,GAAM1sE,EAAEvvD,EAAI3lB,KAAKw1B,KAAO,EAAIx1B,KAAKoR,GACjCywI,GAAM3sE,EAAEtvD,EAAI5lB,KAAKy1B,KAAO,EAAIz1B,KAAKoR,GAQrC,GANAywI,GAAMA,EAAK7hJ,KAAK0hJ,IAAM1hJ,KAAKwhJ,GAC3BI,GAAU5hJ,KAAKwhJ,GAKXp8I,KAAKC,IAAIu8I,IAAO,eAAgB,CAClC,IAAIzgH,EAAMghH,GAAYniJ,KAAKqhJ,IAAK,EAAIQ,EAAI,EAAID,GAE5CC,GAAU1gH,EAAI,GACdygH,GAAUzgH,EAAI,GACdygH,EAAKx8I,KAAK0lC,KAAK+1G,GAAKe,IAEpB,IAAIE,EAAS18I,KAAKgxB,IAAIyrH,GAClBE,EAAS38I,KAAK8wB,IAAI2rH,GAClBG,EAAS58I,KAAKgxB,IAAIwrH,GAClBK,EAAS78I,KAAK8wB,IAAI0rH,GAEtBC,EAAKz8I,KAAKkkC,MAAMw4G,EAASG,EAAQjC,GAAMgC,EAAQC,EAASF,IAGxD/vG,EAAM4gF,GAFNgvB,EAAKx8I,KAAKkkC,MAAM04G,EAAQC,EAASF,IAEX/hJ,KAAKmmH,OAC3BwM,EAAM8uB,GAAKzhJ,KAAKmhJ,IAAKU,EACvB,MACE7vG,EAAMrsC,IACNgtH,EAAMhtH,IAMR,OAHAuvE,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EAECz9C,CACT,EAOEg5B,MALiB,CAAC,+BAAgC,+BAAgC,SAAU,sBAAuB,sBAAuB,eAAgB,eAAgB,UExJ5K,UACEskB,KAlBK,WACL,IAAI/lF,ECLS,SAAUA,EAAMuF,GAC7B,QAAa/xC,IAATwsC,EAAoB,CAGtB,IAFAA,EAAOrnC,KAAKmyB,MAAoC,IAA7Bq7F,EAAW5gF,GAAO5sC,KAAKuyB,IAAWvyB,KAAKuyB,IAAM,GAErD,EACT,OAAO,EACF,GAAI8U,EAAO,GAChB,OAAO,EAEX,CACA,OAAOA,CACT,CDNa21G,CAAYpiJ,KAAKysC,KAAMzsC,KAAKmmH,OACvC,QAAalmH,IAATwsC,EACF,MAAM,IAAIlX,MAAM,oBAElBv1B,KAAK8lH,KAAO,EACZ9lH,KAAKmmH,OAAU,EAAI/gH,KAAKC,IAAIonC,GAAS,KAAOu3E,EAC5ChkH,KAAKw1B,GAAK,IACVx1B,KAAKy1B,GAAKz1B,KAAKmnH,SAAW,IAAW,EACrCnnH,KAAK+mH,GAAK,MAEVs7B,GAAO7vB,KAAKpqH,MAAMpI,MAClBA,KAAKiwC,QAAUoyG,GAAOpyG,QACtBjwC,KAAKkwC,QAAUmyG,GAAOnyG,OACxB,EAKEg+D,MAHiB,CAAC,uCAAwC,OAI1Do0C,UAxBqB,UEFR,SAAS,GAACC,EAAOx3G,GAC9B,OAAQ3lC,KAAKyjC,KAAK,EAAI05G,IAAU,EAAIA,GAAQx3G,EAC9C,CCwDA,UACEynF,KA3CK,WACL,IAAIqsB,EAAOz5I,KAAKgxB,IAAIp2B,KAAK8lH,MACrBg5B,EAAO15I,KAAK8wB,IAAIl2B,KAAK8lH,MACzBg5B,GAAQA,EACR9+I,KAAKwiJ,GAAKp9I,KAAKwX,KAAK,EAAI5c,KAAKyyH,KAAO,EAAIzyH,KAAKyyH,GAAKosB,EAAOA,GACzD7+I,KAAKy7I,EAAIr2I,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAKqsB,EAAOA,GAAQ,EAAI9+I,KAAKyyH,KACzDzyH,KAAKyiJ,MAAQr9I,KAAK06I,KAAKjB,EAAO7+I,KAAKy7I,GACnCz7I,KAAK0iJ,OAAS,GAAM1iJ,KAAKy7I,EAAIz7I,KAAK6uD,EAClC7uD,KAAK2iJ,EAAIv9I,KAAK6kC,IAAI,GAAMjqC,KAAKyiJ,MAAQv+B,IAAW9+G,KAAKyjC,IAAIzjC,KAAK6kC,IAAI,GAAMjqC,KAAK8lH,KAAO5B,GAASlkH,KAAKy7I,GAAKmH,GAAK5iJ,KAAK6uD,EAAIgwF,EAAM7+I,KAAK0iJ,QAClI,EAmCEzyG,QAjCK,SAAiBilC,GACtB,IAAIljC,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAIZ,OAFAsvD,EAAEtvD,EAAI,EAAIxgB,KAAK0lC,KAAK9qC,KAAK2iJ,EAAIv9I,KAAKyjC,IAAIzjC,KAAK6kC,IAAI,GAAM0oF,EAAMzO,GAASlkH,KAAKy7I,GAAKmH,GAAK5iJ,KAAK6uD,EAAIzpD,KAAKgxB,IAAIu8F,GAAM3yH,KAAK0iJ,SAAW5+B,EAC3H5uC,EAAEvvD,EAAI3lB,KAAKy7I,EAAIzpG,EACRkjC,CACT,EA2BEhlC,QAzBK,SAAiBglC,GAKtB,IAJA,IACIljC,EAAMkjC,EAAEvvD,EAAI3lB,KAAKy7I,EACjB9oB,EAAMz9C,EAAEtvD,EACR6yH,EAAMrzI,KAAKyjC,IAAIzjC,KAAK6kC,IAAI,GAAM0oF,EAAMzO,GAAUlkH,KAAK2iJ,EAAG,EAAI3iJ,KAAKy7I,GAC1Dr0I,EAxCI,GAwCUA,EAAI,IACzBurH,EAAM,EAAIvtH,KAAK0lC,KAAK2tG,EAAMmK,GAAK5iJ,KAAK6uD,EAAIzpD,KAAKgxB,IAAI8+C,EAAEtvD,IAAK,GAAM5lB,KAAK6uD,IAAMi1D,IACrE1+G,KAAKC,IAAIstH,EAAMz9C,EAAEtvD,GANT,UAIkBxe,EAK9B8tE,EAAEtvD,EAAI+sG,EAGR,OAAKvrH,GAGL8tE,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,GAJE,IAKX,EAOEg5B,MALiB,CAAC,UCWpB,UACEskB,KAvDK,WACLqwB,GAAMrwB,KAAKpqH,MAAMpI,MACZA,KAAKwiJ,KAGVxiJ,KAAK8iJ,MAAQ19I,KAAKgxB,IAAIp2B,KAAKyiJ,OAC3BziJ,KAAK+iJ,MAAQ39I,KAAK8wB,IAAIl2B,KAAKyiJ,OAC3BziJ,KAAKgjJ,GAAK,EAAIhjJ,KAAKwiJ,GACdxiJ,KAAK08B,QACR18B,KAAK08B,MAAQ,qCAEjB,EA6CEuT,QA3CK,SAAiBilC,GACtB,IAAI+tE,EAAMC,EAAMC,EAAMp0F,EAWtB,OAVAmmB,EAAEvvD,EAAIitG,EAAW19C,EAAEvvD,EAAI3lB,KAAKmmH,OAC5B08B,GAAM5yG,QAAQ7nC,MAAMpI,KAAM,CAACk1E,IAC3B+tE,EAAO79I,KAAKgxB,IAAI8+C,EAAEtvD,GAClBs9H,EAAO99I,KAAK8wB,IAAIg/C,EAAEtvD,GAClBu9H,EAAO/9I,KAAK8wB,IAAIg/C,EAAEvvD,GAClBopC,EAAI/uD,KAAK+mH,GAAK/mH,KAAKgjJ,IAAM,EAAIhjJ,KAAK8iJ,MAAQG,EAAOjjJ,KAAK+iJ,MAAQG,EAAOC,GACrEjuE,EAAEvvD,EAAIopC,EAAIm0F,EAAO99I,KAAKgxB,IAAI8+C,EAAEvvD,GAC5BuvD,EAAEtvD,EAAImpC,GAAK/uD,KAAK+iJ,MAAQE,EAAOjjJ,KAAK8iJ,MAAQI,EAAOC,GACnDjuE,EAAEvvD,EAAI3lB,KAAKoR,EAAI8jE,EAAEvvD,EAAI3lB,KAAKw1B,GAC1B0/C,EAAEtvD,EAAI5lB,KAAKoR,EAAI8jE,EAAEtvD,EAAI5lB,KAAKy1B,GACnBy/C,CACT,EA+BEhlC,QA7BK,SAAiBglC,GACtB,IAAI+tE,EAAMC,EAAMlxG,EAAK2gF,EAAKywB,EAM1B,GALAluE,EAAEvvD,GAAKuvD,EAAEvvD,EAAI3lB,KAAKw1B,IAAMx1B,KAAKoR,EAC7B8jE,EAAEtvD,GAAKsvD,EAAEtvD,EAAI5lB,KAAKy1B,IAAMz1B,KAAKoR,EAE7B8jE,EAAEvvD,GAAK3lB,KAAK+mH,GACZ7xC,EAAEtvD,GAAK5lB,KAAK+mH,GACPq8B,EAAMpD,GAAM9qE,EAAEvvD,EAAGuvD,EAAEtvD,GAAK,CAC3B,IAAI4jB,EAAI,EAAIpkC,KAAKkkC,MAAM85G,EAAKpjJ,KAAKgjJ,IACjCC,EAAO79I,KAAKgxB,IAAIoT,GAChB05G,EAAO99I,KAAK8wB,IAAIsT,GAChBmpF,EAAMvtH,KAAK06I,KAAKoD,EAAOljJ,KAAK8iJ,MAAQ5tE,EAAEtvD,EAAIq9H,EAAOjjJ,KAAK+iJ,MAAQK,GAC9DpxG,EAAM5sC,KAAKkkC,MAAM4rC,EAAEvvD,EAAIs9H,EAAMG,EAAMpjJ,KAAK+iJ,MAAQG,EAAOhuE,EAAEtvD,EAAI5lB,KAAK8iJ,MAAQG,EAC5E,MACEtwB,EAAM3yH,KAAKyiJ,MACXzwG,EAAM,EAOR,OAJAkjC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACNkwB,GAAM3yG,QAAQ9nC,MAAMpI,KAAM,CAACk1E,IAC3BA,EAAEvvD,EAAIitG,EAAW19C,EAAEvvD,EAAI3lB,KAAKmmH,OACrBjxC,CACT,EAOEg5B,MALiB,CAAC,2BAA4B,wBAAyB,SAAU,oCAAqC,yBC9CjH,SAASm1C,GAAMC,EAAM1xB,EAAQ2xB,GAElC,OADA3xB,GAAU2xB,EACFn+I,KAAK6kC,IAAI,IAAO65E,EAAUw/B,IAASl+I,KAAKyjC,KAAK,EAAI+oF,IAAW,EAAIA,GAAS,GAAM2xB,EACzF,CA0JA,UACE/wB,KAxJK,WAELxyH,KAAKw1B,GAAKx1B,KAAKw1B,IAAM,EACrBx1B,KAAKy1B,GAAKz1B,KAAKy1B,IAAM,EACrBz1B,KAAK8lH,KAAO9lH,KAAK8lH,MAAQ,EACzB9lH,KAAKmmH,MAAQnmH,KAAKmmH,OAAS,EAE3BnmH,KAAKwjJ,QAAUp+I,KAAK8wB,IAAIl2B,KAAK8lH,MAC7B9lH,KAAKyjJ,QAAUr+I,KAAKgxB,IAAIp2B,KAAK8lH,MACzB9lH,KAAK+vH,OACS,IAAZ/vH,KAAK+mH,KAAajmG,MAAM9gB,KAAKimH,SAAW7gH,KAAKC,IAAIrF,KAAKwjJ,UAAYz/B,IACpE/jH,KAAK+mH,GAAK,IAAO,EAAIgL,EAAK/xH,KAAK8lH,MAAQ1gH,KAAKgxB,IAAIp2B,KAAKimH,WAGnD7gH,KAAKC,IAAIrF,KAAKwjJ,UAAYz/B,IACxB/jH,KAAK8lH,KAAO,EAGd9lH,KAAK8xH,IAAM,EAIX9xH,KAAK8xH,KAAO,GAGhB9xH,KAAK0jJ,KAAOt+I,KAAKwX,KAAKxX,KAAKyjC,IAAI,EAAI7oC,KAAK6uD,EAAG,EAAI7uD,KAAK6uD,GAAKzpD,KAAKyjC,IAAI,EAAI7oC,KAAK6uD,EAAG,EAAI7uD,KAAK6uD,IACvE,IAAZ7uD,KAAK+mH,KAAajmG,MAAM9gB,KAAKimH,SAAW7gH,KAAKC,IAAIrF,KAAKwjJ,UAAYz/B,GAAS3+G,KAAKC,IAAID,KAAK8wB,IAAIl2B,KAAKimH,SAAWlC,IAG/G/jH,KAAK+mH,GAAK,GAAM/mH,KAAK0jJ,KAAOhxB,EAAM1yH,KAAK6uD,EAAGzpD,KAAKgxB,IAAIp2B,KAAKimH,QAAS7gH,KAAK8wB,IAAIl2B,KAAKimH,SAAW4M,EAAM7yH,KAAK6uD,EAAG7uD,KAAK8xH,IAAM9xH,KAAKimH,OAAQjmH,KAAK8xH,IAAM1sH,KAAKgxB,IAAIp2B,KAAKimH,UAE3JjmH,KAAK2jJ,IAAMjxB,EAAM1yH,KAAK6uD,EAAG7uD,KAAKyjJ,QAASzjJ,KAAKwjJ,SAC5CxjJ,KAAK4jJ,GAAK,EAAIx+I,KAAK0lC,KAAKu4G,GAAMrjJ,KAAK8lH,KAAM9lH,KAAKyjJ,QAASzjJ,KAAK6uD,IAAMi1D,EAClE9jH,KAAK6jJ,MAAQz+I,KAAK8wB,IAAIl2B,KAAK4jJ,IAC3B5jJ,KAAK8jJ,MAAQ1+I,KAAKgxB,IAAIp2B,KAAK4jJ,IAE/B,EAqHE3zG,QAlHK,SAAiBilC,GACtB,IAII2kE,EAAGrE,EAAGuO,EAAMC,EAAM9xB,EAAI+xB,EAJtBjyG,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EACRs+H,EAAS9+I,KAAKgxB,IAAIu8F,GAClBwxB,EAAS/+I,KAAK8wB,IAAIy8F,GAElByxB,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAEjC,OAAI/gH,KAAKC,IAAID,KAAKC,IAAI2sC,EAAMhyC,KAAKmmH,OAAS/gH,KAAKuyB,KAAOosF,GAAS3+G,KAAKC,IAAIstH,EAAM3yH,KAAK8lH,OAAS/B,GAG1F7uC,EAAEvvD,EAAIhB,IACNuwD,EAAEtvD,EAAIjB,IACCuwD,GAELl1E,KAAK+vH,QAEP8pB,EAAI,EAAI75I,KAAK+mH,IAAM,EAAI/mH,KAAKyjJ,QAAUS,EAASlkJ,KAAKwjJ,QAAUW,EAAS/+I,KAAK8wB,IAAIkuH,IAChFlvE,EAAEvvD,EAAI3lB,KAAKoR,EAAIyoI,EAAIsK,EAAS/+I,KAAKgxB,IAAIguH,GAAQpkJ,KAAKw1B,GAClD0/C,EAAEtvD,EAAI5lB,KAAKoR,EAAIyoI,GAAK75I,KAAKwjJ,QAAUU,EAASlkJ,KAAKyjJ,QAAUU,EAAS/+I,KAAK8wB,IAAIkuH,IAASpkJ,KAAKy1B,GACpFy/C,IAEPsgE,EAAI,EAAIpwI,KAAK0lC,KAAKu4G,GAAM1wB,EAAKuxB,EAAQlkJ,KAAK6uD,IAAMi1D,EAChDkgC,EAAO5+I,KAAK8wB,IAAIs/G,GAChBuO,EAAO3+I,KAAKgxB,IAAIo/G,GACZpwI,KAAKC,IAAIrF,KAAKwjJ,UAAYz/B,GAC5BmO,EAAKW,EAAM7yH,KAAK6uD,EAAG8jE,EAAM3yH,KAAK8xH,IAAK9xH,KAAK8xH,IAAMoyB,GAC9CD,EAAK,EAAIjkJ,KAAKoR,EAAIpR,KAAK+mH,GAAKmL,EAAKlyH,KAAK0jJ,KACtCxuE,EAAEvvD,EAAI3lB,KAAKw1B,GAAKyuH,EAAK7+I,KAAKgxB,IAAI4b,EAAMhyC,KAAKmmH,OACzCjxC,EAAEtvD,EAAI5lB,KAAKy1B,GAAKz1B,KAAK8xH,IAAMmyB,EAAK7+I,KAAK8wB,IAAI8b,EAAMhyC,KAAKmmH,OAE7CjxC,IACE9vE,KAAKC,IAAIrF,KAAKyjJ,SAAW1/B,GAGlC81B,EAAI,EAAI75I,KAAKoR,EAAIpR,KAAK+mH,IAAM,EAAIi9B,EAAO5+I,KAAK8wB,IAAIkuH,IAChDlvE,EAAEtvD,EAAIi0H,EAAIkK,IAIVlK,EAAI,EAAI75I,KAAKoR,EAAIpR,KAAK+mH,GAAK/mH,KAAK2jJ,KAAO3jJ,KAAK6jJ,OAAS,EAAI7jJ,KAAK8jJ,MAAQC,EAAO/jJ,KAAK6jJ,MAAQG,EAAO5+I,KAAK8wB,IAAIkuH,KAC1GlvE,EAAEtvD,EAAIi0H,GAAK75I,KAAK6jJ,MAAQE,EAAO/jJ,KAAK8jJ,MAAQE,EAAO5+I,KAAK8wB,IAAIkuH,IAASpkJ,KAAKy1B,IAE5Ey/C,EAAEvvD,EAAIk0H,EAAImK,EAAO5+I,KAAKgxB,IAAIguH,GAAQpkJ,KAAKw1B,GAGlC0/C,GACT,EAoEEhlC,QAjEK,SAAiBglC,GAGtB,IAAIljC,EAAK2gF,EAAKT,EAAImyB,EAAIC,EAFtBpvE,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GAEZ,IAAIwuH,EAAK7+I,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,GACvC,GAAI5lB,KAAK+vH,OAAQ,CACf,IAAIvmF,EAAI,EAAIpkC,KAAK0lC,KAAKm5G,GAAM,EAAIjkJ,KAAKoR,EAAIpR,KAAK+mH,KAG9C,OAFA/0E,EAAMhyC,KAAKmmH,MACXwM,EAAM3yH,KAAK8lH,KACPm+B,GAAMlgC,GACR7uC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,IAETy9C,EAAMvtH,KAAK06I,KAAK16I,KAAK8wB,IAAIsT,GAAKxpC,KAAKyjJ,QAAUvuE,EAAEtvD,EAAIxgB,KAAKgxB,IAAIoT,GAAKxpC,KAAKwjJ,QAAUS,GAG5EjyG,EAFA5sC,KAAKC,IAAIrF,KAAKwjJ,SAAWz/B,EACvB/jH,KAAK8lH,KAAO,EACR8M,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,GAAI,EAAIuvD,EAAEtvD,IAE/CgtG,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,EAAGuvD,EAAEtvD,IAG5CgtG,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,EAAIvgB,KAAKgxB,IAAIoT,GAAIy6G,EAAKjkJ,KAAKwjJ,QAAUp+I,KAAK8wB,IAAIsT,GAAK0rC,EAAEtvD,EAAI5lB,KAAKyjJ,QAAUr+I,KAAKgxB,IAAIoT,KAE9H0rC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,EACT,CACE,GAAI9vE,KAAKC,IAAIrF,KAAKwjJ,UAAYz/B,EAAO,CACnC,GAAIkgC,GAAMlgC,EAMR,OALA4O,EAAM3yH,KAAK8lH,KACX9zE,EAAMhyC,KAAKmmH,MACXjxC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EAECz9C,EAETA,EAAEvvD,GAAK3lB,KAAK8xH,IACZ58C,EAAEtvD,GAAK5lB,KAAK8xH,IACZI,EAAK+xB,EAAKjkJ,KAAK0jJ,MAAQ,EAAI1jJ,KAAKoR,EAAIpR,KAAK+mH,IACzC4L,EAAM3yH,KAAK8xH,IAAMgB,EAAM9yH,KAAK6uD,EAAGqjE,GAC/BlgF,EAAMhyC,KAAK8xH,IAAMc,EAAW5yH,KAAK8xH,IAAM9xH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,GAAI,EAAIuvD,EAAEtvD,GAC7E,MACEy+H,EAAK,EAAIj/I,KAAK0lC,KAAKm5G,EAAKjkJ,KAAK6jJ,OAAS,EAAI7jJ,KAAKoR,EAAIpR,KAAK+mH,GAAK/mH,KAAK2jJ,MAClE3xG,EAAMhyC,KAAKmmH,MACP89B,GAAMlgC,EACRugC,EAAMtkJ,KAAK4jJ,IAEXU,EAAMl/I,KAAK06I,KAAK16I,KAAK8wB,IAAImuH,GAAMrkJ,KAAK8jJ,MAAQ5uE,EAAEtvD,EAAIxgB,KAAKgxB,IAAIiuH,GAAMrkJ,KAAK6jJ,MAAQI,GAC9EjyG,EAAM4gF,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,EAAIvgB,KAAKgxB,IAAIiuH,GAAKJ,EAAKjkJ,KAAK6jJ,MAAQz+I,KAAK8wB,IAAImuH,GAAMnvE,EAAEtvD,EAAI5lB,KAAK8jJ,MAAQ1+I,KAAKgxB,IAAIiuH,MAE5H1xB,GAAO,EAAIG,EAAM9yH,KAAK6uD,EAAGzpD,KAAK6kC,IAAI,IAAO65E,EAAUwgC,KAOvD,OAJApvE,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EAGCz9C,CACT,EAOEg5B,MALiB,CAAC,QAAS,2BAA4B,gCAAiC,gCAAiC,uBAMzHm1C,MAAOA,IC7FT,UACE7wB,KAzEK,WACL,IAAI+xB,EAAOvkJ,KAAK8lH,KAChB9lH,KAAKwkJ,QAAUxkJ,KAAKmmH,MACpB,IAAIs+B,EAAUr/I,KAAKgxB,IAAImuH,GACnBG,EAAgB1kJ,KAAKoR,EAErBuzI,EAAa,EADN3kJ,KAAK4lH,GAEZg/B,EAAK,EAAID,EAAav/I,KAAKyjC,IAAI87G,EAAY,GAC3C91F,EAAI7uD,KAAK6uD,EAAIzpD,KAAKwX,KAAKgoI,GAC3B5kJ,KAAKqsC,EAAIrsC,KAAK+mH,GAAK29B,EAAgBt/I,KAAKwX,KAAK,EAAIgoI,IAAO,EAAIA,EAAKx/I,KAAKyjC,IAAI47G,EAAS,IACnFzkJ,KAAKknC,MAAQ9hC,KAAKwX,KAAK,EAAIgoI,GAAM,EAAIA,GAAMx/I,KAAKyjC,IAAIzjC,KAAK8wB,IAAIquH,GAAO,IACpEvkJ,KAAK6kJ,GAAKz/I,KAAK06I,KAAK2E,EAAUzkJ,KAAKknC,OACnC,IAAI49G,EAAK1/I,KAAKuX,IAAIvX,KAAK6kC,IAAI7kC,KAAKuyB,GAAK,EAAI33B,KAAK6kJ,GAAK,IAC/CE,EAAK3/I,KAAKuX,IAAIvX,KAAK6kC,IAAI7kC,KAAKuyB,GAAK,EAAI4sH,EAAO,IAC5CS,EAAK5/I,KAAKuX,KAAK,EAAIkyC,EAAI41F,IAAY,EAAI51F,EAAI41F,IAC/CzkJ,KAAK2iJ,EAAImC,EAAK9kJ,KAAKknC,MAAQ69G,EAAK/kJ,KAAKknC,MAAQ2nB,EAAI,EAAIm2F,CACvD,EA0DE/0G,QAxDK,SAAiBilC,GACtB,IAAI+vE,EAAM7/I,KAAKuX,IAAIvX,KAAK6kC,IAAI7kC,KAAKuyB,GAAK,EAAIu9C,EAAEtvD,EAAI,IAC5Cs/H,EAAMllJ,KAAK6uD,EAAI,EAAIzpD,KAAKuX,KAAK,EAAI3c,KAAK6uD,EAAIzpD,KAAKgxB,IAAI8+C,EAAEtvD,KAAO,EAAI5lB,KAAK6uD,EAAIzpD,KAAKgxB,IAAI8+C,EAAEtvD,KACpFu/H,GAAKnlJ,KAAKknC,OAAS+9G,EAAMC,GAAOllJ,KAAK2iJ,EAGrCtxI,EAAI,GAAKjM,KAAK0lC,KAAK1lC,KAAK2lC,IAAIo6G,IAAM//I,KAAKuyB,GAAK,GAG5CmiH,EAAI95I,KAAKknC,OAASguC,EAAEvvD,EAAI3lB,KAAKwkJ,SAG7BY,EAAOhgJ,KAAK0lC,KAAK1lC,KAAKgxB,IAAI0jH,IAAM10I,KAAKgxB,IAAIp2B,KAAK6kJ,IAAMz/I,KAAK6kC,IAAI54B,GAAKjM,KAAK8wB,IAAIl2B,KAAK6kJ,IAAMz/I,KAAK8wB,IAAI4jH,KAE/FuL,EAAOjgJ,KAAK06I,KAAK16I,KAAK8wB,IAAIl2B,KAAK6kJ,IAAMz/I,KAAKgxB,IAAI/kB,GAAKjM,KAAKgxB,IAAIp2B,KAAK6kJ,IAAMz/I,KAAK8wB,IAAI7kB,GAAKjM,KAAK8wB,IAAI4jH,IAIlG,OAFA5kE,EAAEtvD,EAAI5lB,KAAKqsC,EAAI,EAAIjnC,KAAKuX,KAAK,EAAIvX,KAAKgxB,IAAIivH,KAAU,EAAIjgJ,KAAKgxB,IAAIivH,KAAUrlJ,KAAKy1B,GAChFy/C,EAAEvvD,EAAI3lB,KAAKqsC,EAAI+4G,EAAOplJ,KAAKw1B,GACpB0/C,CACT,EAsCEhlC,QApCK,SAAiBglC,GAgBtB,IAfA,IAAIugE,EAAIvgE,EAAEvvD,EAAI3lB,KAAKw1B,GACfggH,EAAItgE,EAAEtvD,EAAI5lB,KAAKy1B,GAEf2vH,EAAO3P,EAAIz1I,KAAKqsC,EAChBg5G,EAAO,GAAKjgJ,KAAK0lC,KAAK1lC,KAAK2lC,IAAIyqG,EAAIx1I,KAAKqsC,IAAMjnC,KAAKuyB,GAAK,GAExDtmB,EAAIjM,KAAK06I,KAAK16I,KAAK8wB,IAAIl2B,KAAK6kJ,IAAMz/I,KAAKgxB,IAAIivH,GAAQjgJ,KAAKgxB,IAAIp2B,KAAK6kJ,IAAMz/I,KAAK8wB,IAAImvH,GAAQjgJ,KAAK8wB,IAAIkvH,IACjGtL,EAAI10I,KAAK0lC,KAAK1lC,KAAKgxB,IAAIgvH,IAAShgJ,KAAK8wB,IAAIl2B,KAAK6kJ,IAAMz/I,KAAK8wB,IAAIkvH,GAAQhgJ,KAAKgxB,IAAIp2B,KAAK6kJ,IAAMz/I,KAAK6kC,IAAIo7G,KAElGC,EAAStlJ,KAAKwkJ,QAAU1K,EAAI95I,KAAKknC,MAEjCi+G,EAAI,EACJI,EAAMl0I,EACNm0I,GAAW,IACXC,EAAY,EACTrgJ,KAAKC,IAAIkgJ,EAAMC,GAAW,MAAW,CAC1C,KAAMC,EAAY,GAEhB,OAGFN,EAAI,EAAInlJ,KAAKknC,OAAS9hC,KAAKuX,IAAIvX,KAAK6kC,IAAI7kC,KAAKuyB,GAAK,EAAItmB,EAAI,IAAMrR,KAAK2iJ,GAAK3iJ,KAAK6uD,EAAIzpD,KAAKuX,IAAIvX,KAAK6kC,IAAI7kC,KAAKuyB,GAAK,EAAIvyB,KAAK06I,KAAK9/I,KAAK6uD,EAAIzpD,KAAKgxB,IAAImvH,IAAQ,IACvJC,EAAUD,EACVA,EAAM,EAAIngJ,KAAK0lC,KAAK1lC,KAAK2lC,IAAIo6G,IAAM//I,KAAKuyB,GAAK,CAC/C,CAIA,OAFAu9C,EAAEvvD,EAAI2/H,EACNpwE,EAAEtvD,EAAI2/H,EACCrwE,CACT,EAOEg5B,MALiB,CAAC,WC5DpB,IAAIw3C,GAAM,KAqOV,UACElzB,KAzNK,WACL,IAAIV,EAAKG,EAAK0zB,EAAQ/I,EAAGgJ,EAAGC,EAAGC,EAAGC,EAAQ7wE,EAAG8wE,EAC3CC,EAD8Cz/B,EAAQ,EAC9C0/B,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAU,EAItEvmJ,KAAKwmJ,OAjBP,SAAiB9R,GACf,IAAI+R,EAAmB,CAAC,0BAA2B,oCAAqC,kDACpFC,EAAuC,kBAAfhS,EAAE15B,SAAwBj3G,OAAO2uB,KAAKgiH,EAAE15B,UAAU,GAAK05B,EAAE15B,SAErF,MAAO,YAAa05B,GAAK,WAAYA,IAAmD,IAA9C+R,EAAiB10H,QAAQ20H,KAA+F,IAArED,EAAiB10H,QAAQihG,GAAsB0zB,GAC9I,CAYgBC,CAAQ3mJ,MACtBA,KAAK4mJ,OAAS,WAAY5mJ,KAE1B,IAAI6mJ,GAAM,EACN,UAAW7mJ,OACb6mJ,GAAM,GAGR,IAAIC,GAAM,EAaV,GAZI,yBAA0B9mJ,OAC5B8mJ,GAAM,GAGJD,IACFN,EAAUvmJ,KAAKknC,OAGb4/G,IACFtgC,EAAQxmH,KAAKymH,sBAGXogC,GAAOC,EACTZ,EAAOlmJ,KAAK2mH,WAOZ,GALAw/B,EAAOnmJ,KAAKqmH,MACZggC,EAAOrmJ,KAAK2vC,KACZy2G,EAAOpmJ,KAAKumH,MACZ+/B,EAAOtmJ,KAAK4vC,KAERxqC,KAAKC,IAAIghJ,EAAOC,IAASZ,KAAQ5zB,EAAM1sH,KAAKC,IAAIghJ,KAAUX,IACzDtgJ,KAAKC,IAAIysH,EAAMhO,IAAY4hC,IAAOtgJ,KAAKC,IAAID,KAAKC,IAAIrF,KAAK8lH,MAAQhC,IAAY4hC,IAC7EtgJ,KAAKC,IAAID,KAAKC,IAAIihJ,GAAQxiC,IAAY4hC,GACzC,MAAM,IAAInwH,MAId,IAAIwxH,EAAS,EAAM/mJ,KAAKyyH,GACxBR,EAAM7sH,KAAKwX,KAAKmqI,GAEZ3hJ,KAAKC,IAAIrF,KAAK8lH,MAAQ/B,GACxBgiC,EAAS3gJ,KAAKgxB,IAAIp2B,KAAK8lH,MACvB6/B,EAASvgJ,KAAK8wB,IAAIl2B,KAAK8lH,MACvBgM,EAAM,EAAI9xH,KAAKyyH,GAAKszB,EAASA,EAC7B/lJ,KAAKkgJ,EAAIyF,EAASA,EAClB3lJ,KAAKkgJ,EAAI96I,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAKzyH,KAAKkgJ,EAAIlgJ,KAAKkgJ,EAAI6G,GACnD/mJ,KAAK65I,EAAI75I,KAAKkgJ,EAAIlgJ,KAAK+mH,GAAKkL,EAAMH,GAElC8zB,GADAhJ,EAAI58I,KAAKkgJ,EAAIjuB,GAAO0zB,EAASvgJ,KAAKwX,KAAKk1G,KAC/B8qB,EAAI,IAEH,EACPgJ,EAAI,GAEJA,EAAIxgJ,KAAKwX,KAAKgpI,GACV5lJ,KAAK8lH,KAAO,IACd8/B,GAAKA,IAIT5lJ,KAAKorC,EAAIw6G,GAAKhJ,EACd58I,KAAKorC,GAAKhmC,KAAKyjC,IAAIgqF,EAAM7yH,KAAK6uD,EAAG7uD,KAAK8lH,KAAMigC,GAAS/lJ,KAAKkgJ,KAE1DlgJ,KAAKkgJ,EAAI,EAAIjuB,EACbjyH,KAAK65I,EAAI75I,KAAK+mH,GACd/mH,KAAKorC,EAAIwxG,EAAIgJ,EAAI,GAGfiB,GAAOC,GACLD,GACFZ,EAAS7gJ,KAAK06I,KAAK16I,KAAKgxB,IAAImwH,GAAW3J,GAClCkK,IACHtgC,EAAQ+/B,KAGVN,EAASz/B,EACT+/B,EAAUnhJ,KAAK06I,KAAKlD,EAAIx3I,KAAKgxB,IAAI6vH,KAEnCjmJ,KAAKgnJ,KAAOd,EAAO9gJ,KAAK06I,KAAK,IAAO8F,EAAI,EAAIA,GAAKxgJ,KAAK6kC,IAAIg8G,IAAWjmJ,KAAKkgJ,IAE1E2F,EAAIzgJ,KAAKyjC,IAAIgqF,EAAM7yH,KAAK6uD,EAAGw3F,EAAMjhJ,KAAKgxB,IAAIiwH,IAAQrmJ,KAAKkgJ,GACvD4F,EAAI1gJ,KAAKyjC,IAAIgqF,EAAM7yH,KAAK6uD,EAAGy3F,EAAMlhJ,KAAKgxB,IAAIkwH,IAAQtmJ,KAAKkgJ,GACvD0F,EAAI5lJ,KAAKorC,EAAIy6G,EACb3wE,GAAK4wE,EAAID,IAAMC,EAAID,GAEnBG,IADAA,EAAIhmJ,KAAKorC,EAAIprC,KAAKorC,GACT06G,EAAID,IAAMG,EAAIF,EAAID,IAC3B/zB,EAAMq0B,EAAOC,IAEFhhJ,KAAKuyB,GACdyuH,GAAQjiC,EACC2N,EAAM1sH,KAAKuyB,KACpByuH,GAAQjiC,GAGVnkH,KAAKgnJ,KAAOp0B,EAAW,IAAOuzB,EAAOC,GAAQhhJ,KAAK0lC,KAAKk7G,EAAI5gJ,KAAK6kC,IAAI,GAAMjqC,KAAKkgJ,GAAKiG,EAAOC,IAASlxE,GAAKl1E,KAAKkgJ,GAC9G+F,EAAS7gJ,KAAK0lC,KAAK,EAAI1lC,KAAKgxB,IAAIp2B,KAAKkgJ,EAAIttB,EAAWuzB,EAAOnmJ,KAAKgnJ,QAAUpB,EAAI,EAAIA,IAClFp/B,EAAQ+/B,EAAUnhJ,KAAK06I,KAAKlD,EAAIx3I,KAAKgxB,IAAI6vH,KAG3CjmJ,KAAKinJ,OAAS7hJ,KAAKgxB,IAAI6vH,GACvBjmJ,KAAKknJ,OAAS9hJ,KAAK8wB,IAAI+vH,GACvBjmJ,KAAKmnJ,OAAS/hJ,KAAKgxB,IAAIowF,GACvBxmH,KAAKonJ,OAAShiJ,KAAK8wB,IAAIswF,GAEvBxmH,KAAKqnJ,GAAK,EAAIrnJ,KAAKkgJ,EACnBlgJ,KAAKsnJ,IAAMtnJ,KAAK65I,EAAI75I,KAAKqnJ,GACzBrnJ,KAAKunJ,IAAM,EAAIvnJ,KAAKsnJ,IAEhBtnJ,KAAKwmJ,OACPxmJ,KAAKwnJ,IAAM,GAEXxnJ,KAAKwnJ,IAAMpiJ,KAAKC,IAAIrF,KAAKsnJ,IAAMliJ,KAAK0lC,KAAK1lC,KAAKwX,KAAKggI,EAAIA,EAAI,GAAKx3I,KAAK8wB,IAAIqwH,KAErEvmJ,KAAK8lH,KAAO,IACd9lH,KAAKwnJ,KAAOxnJ,KAAKwnJ,MAIrB5B,EAAI,GAAMK,EACVjmJ,KAAKynJ,SAAWznJ,KAAKsnJ,IAAMliJ,KAAKuX,IAAIvX,KAAK6kC,IAAIi6E,EAAS0hC,IACtD5lJ,KAAK0nJ,SAAW1nJ,KAAKsnJ,IAAMliJ,KAAKuX,IAAIvX,KAAK6kC,IAAIi6E,EAAS0hC,GACxD,EA6FE31G,QAzFK,SAAiBilC,GACtB,IACIiwE,EAAG3J,EAAGmM,EAAG3N,EAAG4N,EAAG/H,EAAMgI,EAAGj/G,EADxBu/B,EAAS,CAAC,EAId,GAFA+M,EAAEvvD,EAAIuvD,EAAEvvD,EAAI3lB,KAAKgnJ,KAEb5hJ,KAAKC,IAAID,KAAKC,IAAI6vE,EAAEtvD,GAAKk+F,GAAWC,EAAO,CAS7C,GALAohC,EAAI,KAHJyC,EAAI5nJ,KAAKorC,EAAIhmC,KAAKyjC,IAAIgqF,EAAM7yH,KAAK6uD,EAAGqmB,EAAEtvD,EAAGxgB,KAAKgxB,IAAI8+C,EAAEtvD,IAAK5lB,KAAKkgJ,KAE9DL,EAAO,EAAI+H,IAEXpM,EAAI,IAAOoM,EAAI/H,GACf7F,EAAI50I,KAAKgxB,IAAIp2B,KAAKkgJ,EAAIhrE,EAAEvvD,GACxBgiI,GAAKxC,EAAInlJ,KAAKinJ,OAASjN,EAAIh6I,KAAKknJ,QAAU1L,EAEtCp2I,KAAKC,IAAID,KAAKC,IAAIsiJ,GAAK,GAAO5jC,EAChC,MAAM,IAAIxuF,MAGZqT,EAAI,GAAM5oC,KAAKsnJ,IAAMliJ,KAAKuX,KAAK,EAAIgrI,IAAM,EAAIA,IAC7C9H,EAAOz6I,KAAK8wB,IAAIl2B,KAAKkgJ,EAAIhrE,EAAEvvD,GAGzBkiI,EADEziJ,KAAKC,IAAIw6I,GAAQ6F,GACf1lJ,KAAK65I,EAAI3kE,EAAEvvD,EAEX3lB,KAAKsnJ,IAAMliJ,KAAKkkC,MAAO67G,EAAInlJ,KAAKknJ,OAASlN,EAAIh6I,KAAKinJ,OAASpH,EAEnE,MACEj3G,EAAIssC,EAAEtvD,EAAI,EAAI5lB,KAAKynJ,SAAWznJ,KAAK0nJ,SACnCG,EAAI7nJ,KAAKsnJ,IAAMpyE,EAAEtvD,EAenB,OAZI5lB,KAAK4mJ,QACPz+E,EAAOxiD,EAAIkiI,EACX1/E,EAAOviD,EAAIgjB,IAEXi/G,GAAK7nJ,KAAKwnJ,IACVr/E,EAAOxiD,EAAIijB,EAAI5oC,KAAKonJ,OAASS,EAAI7nJ,KAAKmnJ,OACtCh/E,EAAOviD,EAAIiiI,EAAI7nJ,KAAKonJ,OAASx+G,EAAI5oC,KAAKmnJ,QAGxCh/E,EAAOxiD,EAAK3lB,KAAKoR,EAAI+2D,EAAOxiD,EAAI3lB,KAAKw1B,GACrC2yC,EAAOviD,EAAK5lB,KAAKoR,EAAI+2D,EAAOviD,EAAI5lB,KAAKy1B,GAE9B0yC,CACT,EA8CEj4B,QA5CK,SAAiBglC,GACtB,IAAI2yE,EAAGj/G,EAAGk/G,EAAIC,EAAIC,EAAIC,EAAIC,EACtB//E,EAAS,CAAC,EAmBd,GAjBA+M,EAAEvvD,GAAKuvD,EAAEvvD,EAAI3lB,KAAKw1B,KAAO,EAAMx1B,KAAKoR,GACpC8jE,EAAEtvD,GAAKsvD,EAAEtvD,EAAI5lB,KAAKy1B,KAAO,EAAMz1B,KAAKoR,GAEhCpR,KAAK4mJ,QACPh+G,EAAIssC,EAAEtvD,EACNiiI,EAAI3yE,EAAEvvD,IAENijB,EAAIssC,EAAEvvD,EAAI3lB,KAAKonJ,OAASlyE,EAAEtvD,EAAI5lB,KAAKmnJ,OACnCU,EAAI3yE,EAAEtvD,EAAI5lB,KAAKonJ,OAASlyE,EAAEvvD,EAAI3lB,KAAKmnJ,OAASnnJ,KAAKwnJ,KAInDO,EAAK,KADLD,EAAK1iJ,KAAK2lC,KAAK/qC,KAAKunJ,IAAM3+G,IACT,EAAIk/G,GACrBE,EAAK,IAAOF,EAAK,EAAIA,GAErBI,IADAD,EAAK7iJ,KAAKgxB,IAAIp2B,KAAKunJ,IAAMM,IACd7nJ,KAAKknJ,OAASa,EAAK/nJ,KAAKinJ,QAAUe,EAEzC5iJ,KAAKC,IAAID,KAAKC,IAAI6iJ,GAAM,GAAKnkC,EAC/B57C,EAAOxiD,EAAI,EACXwiD,EAAOviD,EAAIsiI,EAAK,GAAKpkC,EAAUA,MAC1B,CAIL,GAHA37C,EAAOviD,EAAI5lB,KAAKorC,EAAIhmC,KAAKwX,MAAM,EAAIsrI,IAAO,EAAIA,IAC9C//E,EAAOviD,EAAIktG,EAAM9yH,KAAK6uD,EAAGzpD,KAAKyjC,IAAIs/B,EAAOviD,EAAG,EAAI5lB,KAAKkgJ,IAEjD/3E,EAAOviD,IAAMjgB,IACf,MAAM,IAAI4vB,MAGZ4yC,EAAOxiD,GAAK3lB,KAAKqnJ,GAAKjiJ,KAAKkkC,MAAOy+G,EAAK/nJ,KAAKknJ,OAASe,EAAKjoJ,KAAKinJ,OAAS7hJ,KAAK8wB,IAAIl2B,KAAKunJ,IAAMM,GAC9F,CAIA,OAFA1/E,EAAOxiD,GAAK3lB,KAAKgnJ,KAEV7+E,CACT,EAOE+lC,MALiB,CAAC,0BAA2B,0BAA2B,oCAAqC,oCAAqC,iDAAkD,mDAAoD,yCAA0C,mBAAoB,UC5GxT,UACEskB,KAtIK,WAsBL,GATKxyH,KAAK4vC,OACR5vC,KAAK4vC,KAAO5vC,KAAK2vC,MAEd3vC,KAAK+mH,KACR/mH,KAAK+mH,GAAK,GAEZ/mH,KAAKw1B,GAAKx1B,KAAKw1B,IAAM,EACrBx1B,KAAKy1B,GAAKz1B,KAAKy1B,IAAM,IAEjBrwB,KAAKC,IAAIrF,KAAK2vC,KAAO3vC,KAAK4vC,MAAQm0E,GAAtC,CAIA,IAAI87B,EAAO7/I,KAAKqR,EAAIrR,KAAKoR,EACzBpR,KAAK6uD,EAAIzpD,KAAKwX,KAAK,EAAIijI,EAAOA,GAE9B,IAAIsI,EAAO/iJ,KAAKgxB,IAAIp2B,KAAK2vC,MACrBy4G,EAAOhjJ,KAAK8wB,IAAIl2B,KAAK2vC,MACrBg0G,EAAMjxB,EAAM1yH,KAAK6uD,EAAGs5F,EAAMC,GAC1BC,EAAMx1B,EAAM7yH,KAAK6uD,EAAG7uD,KAAK2vC,KAAMw4G,GAE/BG,EAAOljJ,KAAKgxB,IAAIp2B,KAAK4vC,MACrB24G,EAAOnjJ,KAAK8wB,IAAIl2B,KAAK4vC,MACrB44G,EAAM91B,EAAM1yH,KAAK6uD,EAAGy5F,EAAMC,GAC1BE,EAAM51B,EAAM7yH,KAAK6uD,EAAG7uD,KAAK4vC,KAAM04G,GAE/BI,EAAMtjJ,KAAKC,IAAID,KAAKC,IAAIrF,KAAK8lH,MAAQhC,GAAWC,EAChD,EACA8O,EAAM7yH,KAAK6uD,EAAG7uD,KAAK8lH,KAAM1gH,KAAKgxB,IAAIp2B,KAAK8lH,OAEvC1gH,KAAKC,IAAIrF,KAAK2vC,KAAO3vC,KAAK4vC,MAAQm0E,EACpC/jH,KAAK2oJ,GAAKvjJ,KAAKuX,IAAIgnI,EAAM6E,GAAOpjJ,KAAKuX,IAAI0rI,EAAMI,GAE/CzoJ,KAAK2oJ,GAAKR,EAERrnI,MAAM9gB,KAAK2oJ,MACb3oJ,KAAK2oJ,GAAKR,GAEZnoJ,KAAK4oJ,GAAKjF,GAAO3jJ,KAAK2oJ,GAAKvjJ,KAAKyjC,IAAIw/G,EAAKroJ,KAAK2oJ,KAC9C3oJ,KAAKikJ,GAAKjkJ,KAAKoR,EAAIpR,KAAK4oJ,GAAKxjJ,KAAKyjC,IAAI6/G,EAAK1oJ,KAAK2oJ,IAC3C3oJ,KAAK08B,QACR18B,KAAK08B,MAAQ,0BA9Bf,CAgCF,EA+EEuT,QA3EK,SAAiBilC,GACtB,IAAIljC,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAGRxgB,KAAKC,IAAI,EAAID,KAAKC,IAAIstH,GAAOvtH,KAAKuyB,KAAOosF,IAC3C4O,EAAMZ,EAAKY,IAAQ7O,EAAU,QAG/B,IACIoO,EAAI22B,EADJ/2B,EAAM1sH,KAAKC,IAAID,KAAKC,IAAIstH,GAAO7O,GAEnC,GAAIgO,EAAM/N,EACRmO,EAAKW,EAAM7yH,KAAK6uD,EAAG8jE,EAAKvtH,KAAKgxB,IAAIu8F,IACjCk2B,EAAM7oJ,KAAKoR,EAAIpR,KAAK4oJ,GAAKxjJ,KAAKyjC,IAAIqpF,EAAIlyH,KAAK2oJ,QACtC,CAEL,IADA72B,EAAMa,EAAM3yH,KAAK2oJ,KACN,EACT,OAAO,KAETE,EAAM,CACR,CACA,IAAIlpG,EAAQ3/C,KAAK2oJ,GAAK/1B,EAAW5gF,EAAMhyC,KAAKmmH,OAI5C,OAHAjxC,EAAEvvD,EAAI3lB,KAAK+mH,IAAM8hC,EAAMzjJ,KAAKgxB,IAAIupB,IAAU3/C,KAAKw1B,GAC/C0/C,EAAEtvD,EAAI5lB,KAAK+mH,IAAM/mH,KAAKikJ,GAAK4E,EAAMzjJ,KAAK8wB,IAAIypB,IAAU3/C,KAAKy1B,GAElDy/C,CACT,EAkDEhlC,QA9CK,SAAiBglC,GACtB,IAAI2zE,EAAK/2B,EAAKI,EACVS,EAAK3gF,EACLrsB,GAAKuvD,EAAEvvD,EAAI3lB,KAAKw1B,IAAMx1B,KAAK+mH,GAC3BnhG,EAAK5lB,KAAKikJ,IAAM/uE,EAAEtvD,EAAI5lB,KAAKy1B,IAAMz1B,KAAK+mH,GACtC/mH,KAAK2oJ,GAAK,GACZE,EAAMzjJ,KAAKwX,KAAK+I,EAAIA,EAAIC,EAAIA,GAC5BksG,EAAM,IAEN+2B,GAAOzjJ,KAAKwX,KAAK+I,EAAIA,EAAIC,EAAIA,GAC7BksG,GAAO,GAET,IAAInyE,EAAQ,EAIZ,GAHY,IAARkpG,IACFlpG,EAAQv6C,KAAKkkC,MAAOwoF,EAAMnsG,EAAKmsG,EAAMlsG,IAE1B,IAARijI,GAAe7oJ,KAAK2oJ,GAAK,GAI5B,GAHA72B,EAAM,EAAI9xH,KAAK2oJ,GACfz2B,EAAK9sH,KAAKyjC,IAAKggH,GAAO7oJ,KAAKoR,EAAIpR,KAAK4oJ,IAAM92B,IAE7B,QADba,EAAMG,EAAM9yH,KAAK6uD,EAAGqjE,IAElB,OAAO,UAGTS,GAAO7O,EAMT,OAJA9xE,EAAM4gF,EAAWjzE,EAAQ3/C,KAAK2oJ,GAAK3oJ,KAAKmmH,OAExCjxC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAgBEg5B,MAdiB,CACjB,gDACA,0BACA,8BACA,8BACA,MACA,gCACA,kCC9CF,UACEskB,KAnGK,WACLxyH,KAAKoR,EAAI,YACTpR,KAAKyyH,GAAK,iBACVzyH,KAAK6uD,EAAIzpD,KAAKwX,KAAK5c,KAAKyyH,IACnBzyH,KAAK8lH,OACR9lH,KAAK8lH,KAAO,kBAET9lH,KAAKmmH,QACRnmH,KAAKmmH,MAAQ,mBAGVnmH,KAAK+mH,KACR/mH,KAAK+mH,GAAK,OAEZ/mH,KAAK8oJ,IAAM,iBACX9oJ,KAAK+oJ,IAAM,EAAI/oJ,KAAK8oJ,IACpB9oJ,KAAKgpJ,IAAMhpJ,KAAK8lH,KAChB9lH,KAAK4kJ,GAAK5kJ,KAAKyyH,GACfzyH,KAAK6uD,EAAIzpD,KAAKwX,KAAK5c,KAAK4kJ,IACxB5kJ,KAAKipJ,KAAO7jJ,KAAKwX,KAAK,EAAK5c,KAAK4kJ,GAAKx/I,KAAKyjC,IAAIzjC,KAAK8wB,IAAIl2B,KAAKgpJ,KAAM,IAAO,EAAIhpJ,KAAK4kJ,KAClF5kJ,KAAKkpJ,GAAK,iBACVlpJ,KAAKyiG,GAAKr9F,KAAK06I,KAAK16I,KAAKgxB,IAAIp2B,KAAKgpJ,KAAOhpJ,KAAKipJ,MAC9CjpJ,KAAKmpC,EAAI/jC,KAAKyjC,KAAK,EAAI7oC,KAAK6uD,EAAIzpD,KAAKgxB,IAAIp2B,KAAKgpJ,OAAS,EAAIhpJ,KAAK6uD,EAAIzpD,KAAKgxB,IAAIp2B,KAAKgpJ,MAAOhpJ,KAAKipJ,KAAOjpJ,KAAK6uD,EAAI,GAC9G7uD,KAAK+uD,EAAI3pD,KAAK6kC,IAAIjqC,KAAKyiG,GAAK,EAAIziG,KAAK8oJ,KAAO1jJ,KAAKyjC,IAAIzjC,KAAK6kC,IAAIjqC,KAAKgpJ,IAAM,EAAIhpJ,KAAK8oJ,KAAM9oJ,KAAKipJ,MAAQjpJ,KAAKmpC,EAC1GnpC,KAAK8kJ,GAAK9kJ,KAAK+mH,GACf/mH,KAAKmpJ,GAAKnpJ,KAAKoR,EAAIhM,KAAKwX,KAAK,EAAI5c,KAAK4kJ,KAAO,EAAI5kJ,KAAK4kJ,GAAKx/I,KAAKyjC,IAAIzjC,KAAKgxB,IAAIp2B,KAAKgpJ,KAAM,IACxFhpJ,KAAKopJ,GAAK,iBACVppJ,KAAKgI,EAAI5C,KAAKgxB,IAAIp2B,KAAKopJ,IACvBppJ,KAAKqpJ,IAAMrpJ,KAAK8kJ,GAAK9kJ,KAAKmpJ,GAAK/jJ,KAAK6kC,IAAIjqC,KAAKopJ,IAC7CppJ,KAAKspJ,GAAKtpJ,KAAK+oJ,IAAM/oJ,KAAKkpJ,EAC5B,EAsEEj5G,QAjEK,SAAiBilC,GACtB,IAAIq0E,EAAK1B,EAAG2B,EAAQ9iH,EAAG4G,EAAGm8G,EAAKC,EAC3B13G,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EACRs5H,EAAYtsB,EAAW5gF,EAAMhyC,KAAKmmH,OAgBtC,OAdAojC,EAAMnkJ,KAAKyjC,KAAM,EAAI7oC,KAAK6uD,EAAIzpD,KAAKgxB,IAAIu8F,KAAS,EAAI3yH,KAAK6uD,EAAIzpD,KAAKgxB,IAAIu8F,IAAS3yH,KAAKipJ,KAAOjpJ,KAAK6uD,EAAI,GACpGg5F,EAAI,GAAKziJ,KAAK0lC,KAAK9qC,KAAK+uD,EAAI3pD,KAAKyjC,IAAIzjC,KAAK6kC,IAAI0oF,EAAM,EAAI3yH,KAAK8oJ,KAAM9oJ,KAAKipJ,MAAQM,GAAOvpJ,KAAK8oJ,KAC5FU,GAAUtK,EAAYl/I,KAAKipJ,KAC3BviH,EAAIthC,KAAK06I,KAAK16I,KAAK8wB,IAAIl2B,KAAKspJ,IAAMlkJ,KAAKgxB,IAAIyxH,GAAKziJ,KAAKgxB,IAAIp2B,KAAKspJ,IAAMlkJ,KAAK8wB,IAAI2xH,GAAKziJ,KAAK8wB,IAAIszH,IAC3Fl8G,EAAIloC,KAAK06I,KAAK16I,KAAK8wB,IAAI2xH,GAAKziJ,KAAKgxB,IAAIozH,GAAUpkJ,KAAK8wB,IAAIwQ,IACxD+iH,EAAMzpJ,KAAKgI,EAAIslC,EACfo8G,EAAK1pJ,KAAKqpJ,IAAMjkJ,KAAKyjC,IAAIzjC,KAAK6kC,IAAIjqC,KAAKopJ,GAAK,EAAIppJ,KAAK8oJ,KAAM9oJ,KAAKgI,GAAK5C,KAAKyjC,IAAIzjC,KAAK6kC,IAAIvD,EAAI,EAAI1mC,KAAK8oJ,KAAM9oJ,KAAKgI,GAC/GktE,EAAEtvD,EAAI8jI,EAAKtkJ,KAAK8wB,IAAIuzH,GAAO,EAC3Bv0E,EAAEvvD,EAAI+jI,EAAKtkJ,KAAKgxB,IAAIqzH,GAAO,EAEtBzpJ,KAAK2pJ,QACRz0E,EAAEtvD,IAAM,EACRsvD,EAAEvvD,IAAM,GAEFuvD,CACV,EA6CEhlC,QA1CK,SAAiBglC,GACtB,IAAI2yE,EAAG2B,EAAQ9iH,EAAG4G,EAAQo8G,EAAIE,EAC1BC,EAIA1oH,EAAM+zC,EAAEvvD,EACZuvD,EAAEvvD,EAAIuvD,EAAEtvD,EACRsvD,EAAEtvD,EAAIub,EACDnhC,KAAK2pJ,QACRz0E,EAAEtvD,IAAM,EACRsvD,EAAEvvD,IAAM,GAEV+jI,EAAKtkJ,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,GAEnC0nB,EADMloC,KAAKkkC,MAAM4rC,EAAEtvD,EAAGsvD,EAAEvvD,GACdvgB,KAAKgxB,IAAIp2B,KAAKopJ,IACxB1iH,EAAI,GAAKthC,KAAK0lC,KAAK1lC,KAAKyjC,IAAI7oC,KAAKqpJ,IAAMK,EAAI,EAAI1pJ,KAAKgI,GAAK5C,KAAK6kC,IAAIjqC,KAAKopJ,GAAK,EAAIppJ,KAAK8oJ,MAAQ9oJ,KAAK8oJ,KAClGjB,EAAIziJ,KAAK06I,KAAK16I,KAAK8wB,IAAIl2B,KAAKspJ,IAAMlkJ,KAAKgxB,IAAIsQ,GAAKthC,KAAKgxB,IAAIp2B,KAAKspJ,IAAMlkJ,KAAK8wB,IAAIwQ,GAAKthC,KAAK8wB,IAAIoX,IAC3Fk8G,EAASpkJ,KAAK06I,KAAK16I,KAAK8wB,IAAIwQ,GAAKthC,KAAKgxB,IAAIkX,GAAKloC,KAAK8wB,IAAI2xH,IACxD3yE,EAAEvvD,EAAI3lB,KAAKmmH,MAAQqjC,EAASxpJ,KAAKipJ,KACjCW,EAAM/B,EACNgC,EAAK,EACL,IAAIvU,EAAO,EACX,GACEpgE,EAAEtvD,EAAI,GAAKxgB,KAAK0lC,KAAK1lC,KAAKyjC,IAAI7oC,KAAK+uD,GAAI,EAAI/uD,KAAKipJ,MAAQ7jJ,KAAKyjC,IAAIzjC,KAAK6kC,IAAI49G,EAAI,EAAI7nJ,KAAK8oJ,KAAM,EAAI9oJ,KAAKipJ,MAAQ7jJ,KAAKyjC,KAAK,EAAI7oC,KAAK6uD,EAAIzpD,KAAKgxB,IAAIwzH,KAAS,EAAI5pJ,KAAK6uD,EAAIzpD,KAAKgxB,IAAIwzH,IAAO5pJ,KAAK6uD,EAAI,IAAM7uD,KAAK8oJ,KACpM1jJ,KAAKC,IAAIukJ,EAAM10E,EAAEtvD,GAAK,QACxBikI,EAAK,GAEPD,EAAM10E,EAAEtvD,EACR0vH,GAAQ,QACM,IAAPuU,GAAYvU,EAAO,IAC5B,OAAIA,GAAQ,GACH,KAGDpgE,CACV,EAOEg5B,MALiB,CAAC,SAAU,WCnGf,SAAS,GAAC47C,EAAI/M,EAAI6H,EAAImF,EAAI/3B,GACvC,OAAQ83B,EAAK93B,EAAM+qB,EAAK33I,KAAKgxB,IAAI,EAAI47F,GAAO4yB,EAAKx/I,KAAKgxB,IAAI,EAAI47F,GAAO+3B,EAAK3kJ,KAAKgxB,IAAI,EAAI47F,EACzF,CCFe,SAAS,GAACrsG,GACvB,OAAQ,EAAI,IAAOA,GAAK,EAAIA,EAAI,IAAM,EAAI,KAAOA,GACnD,CCFe,SAAS,GAACA,GACvB,MAAQ,KAAQA,GAAK,EAAI,IAAOA,GAAK,EAAI,OAAUA,GACrD,CCFe,SAAS,GAACA,GACvB,MAAQ,UAAaA,EAAIA,GAAK,EAAI,IAAOA,EAC3C,CCFe,SAAS,GAACA,GACvB,OAAQA,EAAIA,EAAIA,GAAK,GAAK,KAC5B,CCFe,SAAS,GAACvU,EAAGy9C,EAAG+iE,GAC7B,IAAIiuB,EAAOhxF,EAAI+iE,EACf,OAAOxgH,EAAIhM,KAAKwX,KAAK,EAAIijI,EAAOA,EAClC,CCAe,SAAS,GAACl6H,GACvB,OAAQvgB,KAAKC,IAAIsgB,GAAKm+F,EAAWn+F,EAAKA,EAAKosG,EAAKpsG,GAAKvgB,KAAKuyB,EAC5D,CCLe,SAAS,GAAC8nH,EAAIqK,EAAI/M,EAAI6H,EAAImF,GACvC,IAAI/3B,EACAG,EAEJH,EAAMytB,EAAKqK,EACX,IAAK,IAAI1iJ,EAAI,EAAGA,EAAI,GAAIA,IAGtB,GADA4qH,GADAG,GAAQstB,GAAMqK,EAAK93B,EAAM+qB,EAAK33I,KAAKgxB,IAAI,EAAI47F,GAAO4yB,EAAKx/I,KAAKgxB,IAAI,EAAI47F,GAAO+3B,EAAK3kJ,KAAKgxB,IAAI,EAAI47F,MAAU83B,EAAK,EAAI/M,EAAK33I,KAAK8wB,IAAI,EAAI87F,GAAO,EAAI4yB,EAAKx/I,KAAK8wB,IAAI,EAAI87F,GAAO,EAAI+3B,EAAK3kJ,KAAK8wB,IAAI,EAAI87F,IAExL5sH,KAAKC,IAAI8sH,IAAS,MACpB,OAAOH,EAKX,OAAOrtG,GACT,CC2FA,UACE6tG,KArFK,WACAxyH,KAAK+vH,SACR/vH,KAAK8pJ,GAAKE,GAAKhqJ,KAAKyyH,IACpBzyH,KAAK+8I,GAAKkN,GAAKjqJ,KAAKyyH,IACpBzyH,KAAK4kJ,GAAKsF,GAAKlqJ,KAAKyyH,IACpBzyH,KAAK+pJ,GAAKI,GAAKnqJ,KAAKyyH,IACpBzyH,KAAKi/I,IAAMj/I,KAAKoR,EAAIg5I,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAI/pJ,KAAK8lH,MAEtE,EA8EE71E,QA1EK,SAAiBilC,GAGtB,IAAIvvD,EAAGC,EACHykI,EAAMn1E,EAAEvvD,EACRqsG,EAAM98C,EAAEtvD,EAGZ,GAFAykI,EAAMz3B,EAAWy3B,EAAMrqJ,KAAKmmH,OAExBnmH,KAAK+vH,OACPpqG,EAAI3lB,KAAKoR,EAAIhM,KAAK06I,KAAK16I,KAAK8wB,IAAI87F,GAAO5sH,KAAKgxB,IAAIi0H,IAChDzkI,EAAI5lB,KAAKoR,GAAKhM,KAAKkkC,MAAMlkC,KAAK6kC,IAAI+nF,GAAM5sH,KAAK8wB,IAAIm0H,IAAQrqJ,KAAK8lH,UACzD,CAEL,IAAI8L,EAASxsH,KAAKgxB,IAAI47F,GAClBH,EAASzsH,KAAK8wB,IAAI87F,GAClBs4B,EAAKC,GAAGvqJ,KAAKoR,EAAGpR,KAAK6uD,EAAG+iE,GACxB44B,EAAKplJ,KAAK6kC,IAAI+nF,GAAO5sH,KAAK6kC,IAAI+nF,GAC9BqtB,EAAKgL,EAAMjlJ,KAAK8wB,IAAI87F,GACpBy4B,EAAMpL,EAAKA,EACXqL,EAAK1qJ,KAAKyyH,GAAKZ,EAASA,GAAU,EAAI7xH,KAAKyyH,IAG/C9sG,EAAI2kI,EAAKjL,GAAM,EAAIoL,EAAMD,GAAM,EAAI,GAAK,EAAIA,EAAK,EAAIE,GAAMD,EAAM,MACjE7kI,EAHS5lB,KAAKoR,EAAIg5I,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAI/3B,GAGlDhyH,KAAKi/I,IAAMqL,EAAK14B,EAASC,EAAS44B,GAAO,IAAO,EAAID,EAAK,EAAIE,GAAMD,EAAM,GACpF,CAIA,OAFAv1E,EAAEvvD,EAAIA,EAAI3lB,KAAKw1B,GACf0/C,EAAEtvD,EAAIA,EAAI5lB,KAAKy1B,GACRy/C,CACT,EA8CEhlC,QA1CK,SAAiBglC,GACtBA,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GACZ,IAEIu8F,EAAKq4B,EAFL1kI,EAAIuvD,EAAEvvD,EAAI3lB,KAAKoR,EACfwU,EAAIsvD,EAAEtvD,EAAI5lB,KAAKoR,EAGnB,GAAIpR,KAAK+vH,OAAQ,CACf,IAAI7gE,EAAKtpC,EAAI5lB,KAAK8lH,KAClBkM,EAAM5sH,KAAK06I,KAAK16I,KAAKgxB,IAAI84B,GAAM9pD,KAAK8wB,IAAIvQ,IACxC0kI,EAAMjlJ,KAAKkkC,MAAMlkC,KAAK6kC,IAAItkB,GAAIvgB,KAAK8wB,IAAIg5B,GACzC,KAAO,CAEL,IACIm3F,EAAOsE,GADD3qJ,KAAKi/I,IAAMj/I,KAAKoR,EAAIwU,EACR5lB,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,IACtD,GAAI3kJ,KAAKC,IAAID,KAAKC,IAAIghJ,GAAQviC,IAAYC,EAMxC,OALA7uC,EAAEvvD,EAAI3lB,KAAKmmH,MACXjxC,EAAEtvD,EAAIk+F,EACFl+F,EAAI,IACNsvD,EAAEtvD,IAAM,GAEHsvD,EAET,IAAI01E,EAAML,GAAGvqJ,KAAKoR,EAAGpR,KAAK6uD,EAAGzpD,KAAKgxB,IAAIiwH,IAElCwE,EAAMD,EAAMA,EAAMA,EAAM5qJ,KAAKoR,EAAIpR,KAAKoR,GAAK,EAAIpR,KAAKyyH,IACpDq4B,EAAM1lJ,KAAKyjC,IAAIzjC,KAAK6kC,IAAIo8G,GAAO,GAC/B0E,EAAKplI,EAAI3lB,KAAKoR,EAAIw5I,EAClBI,EAAMD,EAAKA,EACf/4B,EAAMq0B,EAAOuE,EAAMxlJ,KAAK6kC,IAAIo8G,GAAQwE,EAAME,EAAKA,GAAM,IAAO,EAAI,EAAID,GAAOC,EAAKA,EAAK,IACrFV,EAAMU,GAAM,EAAIC,GAAOF,EAAM,GAAK,EAAI,EAAIA,GAAOA,EAAME,EAAM,KAAO5lJ,KAAK8wB,IAAImwH,EAC/E,CAIA,OAFAnxE,EAAEvvD,EAAIitG,EAAWy3B,EAAMrqJ,KAAKmmH,OAC5BjxC,EAAEtvD,EAAIqlI,GAAWj5B,GACV98C,CACT,EAOEg5B,MALiB,CAAC,UAAW,kBAAmB,SCzGnC,SAAS,GAACyjB,EAAQC,GAC/B,IAAIE,EACJ,OAAIH,EAAS,MAEF,EAAIA,EAASA,IAAWC,GAAU,GAD3CE,EAAMH,EAASC,GACsCE,GAAQ,GAAMH,EAAUvsH,KAAKuX,KAAK,EAAIm1G,IAAQ,EAAIA,KAE/F,EAAIF,CAEhB,CCmQA,IAAIs5B,GAAM,kBAENC,GAAM,mBACNC,GAAM,mBACNC,GAAM,mBACNC,GAAM,kBACNC,GAAM,oBAsBV,UACE/4B,KAlQK,WACL,IASMZ,EATFj3D,EAAIv1D,KAAKC,IAAIrF,KAAK8lH,MAQtB,GAPI1gH,KAAKC,IAAIs1D,EAAImpD,GAAWC,EAC1B/jH,KAAKwrJ,KAAOxrJ,KAAK8lH,KAAO,EAZR,EACA,EAYP1gH,KAAKC,IAAIs1D,GAAKopD,EACvB/jH,KAAKwrJ,KAZU,EAcfxrJ,KAAKwrJ,KAbU,EAebxrJ,KAAKyyH,GAAK,EAMZ,OAHAzyH,KAAKyrJ,GAAKC,GAAM1rJ,KAAK6uD,EAAG,GACxB7uD,KAAK2rJ,IAAM,IAAO,EAAI3rJ,KAAKyyH,IAC3BzyH,KAAK4rJ,IA+NT,SAAiBn5B,GACf,IAAI93D,EACAkxF,EAAM,GASV,OARAA,EAAI,GAAKp5B,EAAKy4B,GACdvwF,EAAI83D,EAAKA,EACTo5B,EAAI,IAAMlxF,EAAIwwF,GACdU,EAAI,GAAKlxF,EAAI0wF,GACb1wF,GAAK83D,EACLo5B,EAAI,IAAMlxF,EAAIywF,GACdS,EAAI,IAAMlxF,EAAI2wF,GACdO,EAAI,GAAKlxF,EAAI4wF,GACNM,CACT,CA3OeC,CAAQ9rJ,KAAKyyH,IAChBzyH,KAAKwrJ,MACX,KAxBc,EA2Bd,KA5Bc,EA6BZxrJ,KAAKkvD,GAAK,EACV,MACF,KA7Ba,EA8BXlvD,KAAK+rJ,GAAK3mJ,KAAKwX,KAAK,GAAM5c,KAAKyrJ,IAC/BzrJ,KAAKkvD,GAAK,EAAIlvD,KAAK+rJ,GACnB/rJ,KAAKgsJ,IAAM,EACXhsJ,KAAKisJ,IAAM,GAAMjsJ,KAAKyrJ,GACtB,MACF,KAlCa,EAmCXzrJ,KAAK+rJ,GAAK3mJ,KAAKwX,KAAK,GAAM5c,KAAKyrJ,IAC/B75B,EAASxsH,KAAKgxB,IAAIp2B,KAAK8lH,MACvB9lH,KAAKksJ,MAAQR,GAAM1rJ,KAAK6uD,EAAG+iE,GAAU5xH,KAAKyrJ,GAC1CzrJ,KAAKmsJ,MAAQ/mJ,KAAKwX,KAAK,EAAI5c,KAAKksJ,MAAQlsJ,KAAKksJ,OAC7ClsJ,KAAKkvD,GAAK9pD,KAAK8wB,IAAIl2B,KAAK8lH,OAAS1gH,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAKb,EAASA,GAAU5xH,KAAK+rJ,GAAK/rJ,KAAKmsJ,OAC3FnsJ,KAAKisJ,KAAOjsJ,KAAKgsJ,IAAMhsJ,KAAK+rJ,IAAM/rJ,KAAKkvD,GACvClvD,KAAKgsJ,KAAOhsJ,KAAKkvD,QAzCN,IA6CXlvD,KAAKwrJ,OACPxrJ,KAAK+lJ,OAAS3gJ,KAAKgxB,IAAIp2B,KAAK8lH,MAC5B9lH,KAAK2lJ,OAASvgJ,KAAK8wB,IAAIl2B,KAAK8lH,MAGlC,EAuNE71E,QAnNK,SAAiBilC,GAGtB,IAAIvvD,EAAGC,EAAGwmI,EAAQC,EAAQz6B,EAAQxoF,EAAGkjH,EAAMC,EAAMl7I,EAAGwgH,EAChDw4B,EAAMn1E,EAAEvvD,EACRqsG,EAAM98C,EAAEtvD,EAGZ,GADAykI,EAAMz3B,EAAWy3B,EAAMrqJ,KAAKmmH,OACxBnmH,KAAK+vH,QAIP,GAHA6B,EAASxsH,KAAKgxB,IAAI47F,GAClBH,EAASzsH,KAAK8wB,IAAI87F,GAClBo6B,EAAShnJ,KAAK8wB,IAAIm0H,GACdrqJ,KAAKwrJ,OAASxrJ,KAAKwsJ,OAASxsJ,KAAKwrJ,OAASxrJ,KAAKysJ,MAAO,CAExD,IADA7mI,EAAK5lB,KAAKwrJ,OAASxrJ,KAAKysJ,MAAS,EAAI56B,EAASu6B,EAAS,EAAIpsJ,KAAK+lJ,OAASn0B,EAAS5xH,KAAK2lJ,OAAS9zB,EAASu6B,IAChGroC,EACP,OAAO,KAGTp+F,GADAC,EAAIxgB,KAAKwX,KAAK,EAAIgJ,IACVisG,EAASzsH,KAAKgxB,IAAIi0H,GAC1BzkI,GAAM5lB,KAAKwrJ,OAASxrJ,KAAKysJ,MAAS76B,EAAS5xH,KAAK2lJ,OAAS/zB,EAAS5xH,KAAK+lJ,OAASl0B,EAASu6B,CAC3F,MAAO,GAAIpsJ,KAAKwrJ,OAASxrJ,KAAK0sJ,QAAU1sJ,KAAKwrJ,OAASxrJ,KAAK2sJ,OAAQ,CAIjE,GAHI3sJ,KAAKwrJ,OAASxrJ,KAAK0sJ,SACrBN,GAAUA,GAERhnJ,KAAKC,IAAI2sH,EAAMhyH,KAAK8lH,MAAQ/B,EAC9B,OAAO,KAETn+F,EAAIs+F,EAAe,GAAN8N,EAEbrsG,GADAC,EAAI,GAAM5lB,KAAKwrJ,OAASxrJ,KAAK2sJ,OAAUvnJ,KAAK8wB,IAAItQ,GAAKxgB,KAAKgxB,IAAIxQ,KACtDxgB,KAAKgxB,IAAIi0H,GACjBzkI,GAAKwmI,CACP,MACK,CAYL,OAXAE,EAAO,EACPC,EAAO,EACPl7I,EAAI,EACJ+6I,EAAShnJ,KAAK8wB,IAAIm0H,GAClBgC,EAASjnJ,KAAKgxB,IAAIi0H,GAClBz4B,EAASxsH,KAAKgxB,IAAI47F,GAClB5oF,EAAIsiH,GAAM1rJ,KAAK6uD,EAAG+iE,GACd5xH,KAAKwrJ,OAASxrJ,KAAKwsJ,OAASxsJ,KAAKwrJ,OAASxrJ,KAAKysJ,QACjDH,EAAOljH,EAAIppC,KAAKyrJ,GAChBc,EAAOnnJ,KAAKwX,KAAK,EAAI0vI,EAAOA,IAEtBtsJ,KAAKwrJ,MACX,KAAKxrJ,KAAKwsJ,MACRn7I,EAAI,EAAIrR,KAAKksJ,MAAQI,EAAOtsJ,KAAKmsJ,MAAQI,EAAOH,EAChD,MACF,KAAKpsJ,KAAKysJ,MACRp7I,EAAI,EAAIk7I,EAAOH,EACf,MACF,KAAKpsJ,KAAK0sJ,OACRr7I,EAAIyyG,EAAUkO,EACd5oF,EAAIppC,KAAKyrJ,GAAKriH,EACd,MACF,KAAKppC,KAAK2sJ,OACRt7I,EAAI2gH,EAAMlO,EACV16E,EAAIppC,KAAKyrJ,GAAKriH,EAGlB,GAAIhkC,KAAKC,IAAIgM,GAAK0yG,EAChB,OAAO,KAET,OAAQ/jH,KAAKwrJ,MACX,KAAKxrJ,KAAKwsJ,MACV,KAAKxsJ,KAAKysJ,MACRp7I,EAAIjM,KAAKwX,KAAK,EAAIvL,GAEhBuU,EADE5lB,KAAKwrJ,OAASxrJ,KAAKwsJ,MACjBxsJ,KAAKisJ,IAAM56I,GAAKrR,KAAKmsJ,MAAQG,EAAOtsJ,KAAKksJ,MAAQK,EAAOH,IAEvD/6I,EAAIjM,KAAKwX,KAAK,GAAK,EAAI2vI,EAAOH,KAAYE,EAAOtsJ,KAAKisJ,IAE7DtmI,EAAI3lB,KAAKgsJ,IAAM36I,EAAIk7I,EAAOF,EAC1B,MACF,KAAKrsJ,KAAK0sJ,OACV,KAAK1sJ,KAAK2sJ,OACJvjH,GAAK,GACPzjB,GAAKtU,EAAIjM,KAAKwX,KAAKwsB,IAAMijH,EACzBzmI,EAAIwmI,GAAWpsJ,KAAKwrJ,OAASxrJ,KAAK2sJ,OAAUt7I,GAAKA,IAEjDsU,EAAIC,EAAI,EAIhB,CAIA,OAFAsvD,EAAEvvD,EAAI3lB,KAAKoR,EAAIuU,EAAI3lB,KAAKw1B,GACxB0/C,EAAEtvD,EAAI5lB,KAAKoR,EAAIwU,EAAI5lB,KAAKy1B,GACjBy/C,CACT,EA2HEhlC,QAvHK,SAAiBglC,GACtBA,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GACZ,IAEI40H,EAAKr4B,EAAK46B,EAAKC,EAAKzjH,EAAGg6G,EAAKj9C,EAF5BxgF,EAAIuvD,EAAEvvD,EAAI3lB,KAAKoR,EACfwU,EAAIsvD,EAAEtvD,EAAI5lB,KAAKoR,EAEnB,GAAIpR,KAAK+vH,OAAQ,CACf,IACEk0B,EADE6I,EAAO,EACLC,EAAO,EAIb,IADA/6B,EAAW,IADXiyB,EAAK7+I,KAAKwX,KAAK+I,EAAIA,EAAIC,EAAIA,KAEjB,EACR,OAAO,KAOT,OALAosG,EAAM,EAAI5sH,KAAK06I,KAAK9tB,GAChBhyH,KAAKwrJ,OAASxrJ,KAAKwsJ,OAASxsJ,KAAKwrJ,OAASxrJ,KAAKysJ,QACjDM,EAAO3nJ,KAAKgxB,IAAI47F,GAChB86B,EAAO1nJ,KAAK8wB,IAAI87F,IAEVhyH,KAAKwrJ,MACX,KAAKxrJ,KAAKysJ,MACRz6B,EAAO5sH,KAAKC,IAAI4+I,IAAOlgC,EAAS,EAAI3+G,KAAK06I,KAAKl6H,EAAImnI,EAAO9I,GACzDt+H,GAAKonI,EACLnnI,EAAIknI,EAAO7I,EACX,MACF,KAAKjkJ,KAAKwsJ,MACRx6B,EAAO5sH,KAAKC,IAAI4+I,IAAOlgC,EAAS/jH,KAAK8lH,KAAO1gH,KAAK06I,KAAKgN,EAAO9sJ,KAAK+lJ,OAASngI,EAAImnI,EAAO/sJ,KAAK2lJ,OAAS1B,GACpGt+H,GAAKonI,EAAO/sJ,KAAK2lJ,OACjB//H,GAAKknI,EAAO1nJ,KAAKgxB,IAAI47F,GAAOhyH,KAAK+lJ,QAAU9B,EAC3C,MACF,KAAKjkJ,KAAK0sJ,OACR9mI,GAAKA,EACLosG,EAAMlO,EAAUkO,EAChB,MACF,KAAKhyH,KAAK2sJ,OACR36B,GAAOlO,EAGXumC,EAAa,IAANzkI,GAAY5lB,KAAKwrJ,OAASxrJ,KAAKysJ,OAASzsJ,KAAKwrJ,OAASxrJ,KAAKwsJ,MAAcpnJ,KAAKkkC,MAAM3jB,EAAGC,GAAlB,CAC9E,KAAO,CAEL,GADAugF,EAAK,EACDnmG,KAAKwrJ,OAASxrJ,KAAKwsJ,OAASxsJ,KAAKwrJ,OAASxrJ,KAAKysJ,MAAO,CAIxD,GAHA9mI,GAAK3lB,KAAKkvD,GACVtpC,GAAK5lB,KAAKkvD,IACVk0F,EAAMh+I,KAAKwX,KAAK+I,EAAIA,EAAIC,EAAIA,IAClBm+F,EAGR,OAFA7uC,EAAEvvD,EAAI3lB,KAAKmmH,MACXjxC,EAAEtvD,EAAI5lB,KAAK8lH,KACJ5wC,EAET23E,EAAM,EAAIznJ,KAAK06I,KAAK,GAAMsD,EAAMpjJ,KAAK+rJ,IACrCa,EAAMxnJ,KAAK8wB,IAAI22H,GACflnI,GAAMknI,EAAMznJ,KAAKgxB,IAAIy2H,GACjB7sJ,KAAKwrJ,OAASxrJ,KAAKwsJ,OACrBrmD,EAAKymD,EAAM5sJ,KAAKksJ,MAAQtmI,EAAIinI,EAAM7sJ,KAAKmsJ,MAAQ/I,EAC/Ch6G,EAAIppC,KAAKyrJ,GAAKtlD,EACdvgF,EAAIw9H,EAAMpjJ,KAAKmsJ,MAAQS,EAAMhnI,EAAI5lB,KAAKksJ,MAAQW,IAE9C1mD,EAAKvgF,EAAIinI,EAAMzJ,EACfh6G,EAAIppC,KAAKyrJ,GAAKtlD,EACdvgF,EAAIw9H,EAAMwJ,EAEd,MAAO,GAAI5sJ,KAAKwrJ,OAASxrJ,KAAK0sJ,QAAU1sJ,KAAKwrJ,OAASxrJ,KAAK2sJ,OAAQ,CAKjE,GAJI3sJ,KAAKwrJ,OAASxrJ,KAAK0sJ,SACrB9mI,GAAKA,KAEPwjB,EAAKzjB,EAAIA,EAAIC,EAAIA,GAIf,OAFAsvD,EAAEvvD,EAAI3lB,KAAKmmH,MACXjxC,EAAEtvD,EAAI5lB,KAAK8lH,KACJ5wC,EAETixB,EAAK,EAAI/8D,EAAIppC,KAAKyrJ,GACdzrJ,KAAKwrJ,OAASxrJ,KAAK2sJ,SACrBxmD,GAAMA,EAEV,CACAkkD,EAAMjlJ,KAAKkkC,MAAM3jB,EAAGC,GACpBosG,EA+BJ,SAAiBg7B,EAAMnB,GACrB,IAAIlxF,EAAIqyF,EAAOA,EACf,OAAQA,EAAOnB,EAAI,GAAKzmJ,KAAKgxB,IAAIukC,GAAKkxF,EAAI,GAAKzmJ,KAAKgxB,IAAIukC,EAAIA,GAAKkxF,EAAI,GAAKzmJ,KAAKgxB,IAAIukC,EAAIA,EAAIA,EAC7F,CAlCUsyF,CAAQ7nJ,KAAK06I,KAAK35C,GAAKnmG,KAAK4rJ,IACpC,CAIA,OAFA12E,EAAEvvD,EAAIitG,EAAW5yH,KAAKmmH,MAAQkkC,GAC9Bn1E,EAAEtvD,EAAIosG,EACC98C,CACT,EAmCEg5B,MALiB,CAAC,+BAAgC,+BAAgC,QAMlFy+C,OA/QkB,EAgRlBD,OA/QkB,EAgRlBD,MA/QiB,EAgRjBD,MA/QiB,GChCJ,SAAS,GAAC7mI,GAIvB,OAHIvgB,KAAKC,IAAIsgB,GAAK,IAChBA,EAAKA,EAAI,EAAK,GAAK,GAEdvgB,KAAK06I,KAAKn6H,EACnB,CCyIA,UACE6sG,KAjHK,WACDptH,KAAKC,IAAIrF,KAAK2vC,KAAO3vC,KAAK4vC,MAAQm0E,IAGtC/jH,KAAK6/I,KAAO7/I,KAAKqR,EAAIrR,KAAKoR,EAC1BpR,KAAKyyH,GAAK,EAAIrtH,KAAKyjC,IAAI7oC,KAAK6/I,KAAM,GAClC7/I,KAAK+pJ,GAAK3kJ,KAAKwX,KAAK5c,KAAKyyH,IAEzBzyH,KAAKktJ,OAAS9nJ,KAAKgxB,IAAIp2B,KAAK2vC,MAC5B3vC,KAAKmtJ,OAAS/nJ,KAAK8wB,IAAIl2B,KAAK2vC,MAC5B3vC,KAAKizC,GAAKjzC,KAAKktJ,OACfltJ,KAAK8xH,IAAM9xH,KAAKktJ,OAChBltJ,KAAK2jJ,IAAMjxB,EAAM1yH,KAAK+pJ,GAAI/pJ,KAAKktJ,OAAQltJ,KAAKmtJ,QAC5CntJ,KAAKotJ,IAAM1B,GAAM1rJ,KAAK+pJ,GAAI/pJ,KAAKktJ,QAE/BltJ,KAAKktJ,OAAS9nJ,KAAKgxB,IAAIp2B,KAAK4vC,MAC5B5vC,KAAKmtJ,OAAS/nJ,KAAK8wB,IAAIl2B,KAAK4vC,MAC5B5vC,KAAKkzC,GAAKlzC,KAAKktJ,OACfltJ,KAAKwoJ,IAAM91B,EAAM1yH,KAAK+pJ,GAAI/pJ,KAAKktJ,OAAQltJ,KAAKmtJ,QAC5CntJ,KAAKqtJ,IAAM3B,GAAM1rJ,KAAK+pJ,GAAI/pJ,KAAKktJ,QAE/BltJ,KAAKktJ,OAAS9nJ,KAAKgxB,IAAIp2B,KAAK8lH,MAC5B9lH,KAAKmtJ,OAAS/nJ,KAAK8wB,IAAIl2B,KAAK8lH,MAC5B9lH,KAAKstJ,GAAKttJ,KAAKktJ,OACfltJ,KAAKutJ,IAAM7B,GAAM1rJ,KAAK+pJ,GAAI/pJ,KAAKktJ,QAE3B9nJ,KAAKC,IAAIrF,KAAK2vC,KAAO3vC,KAAK4vC,MAAQm0E,EACpC/jH,KAAKwtJ,KAAOxtJ,KAAK2jJ,IAAM3jJ,KAAK2jJ,IAAM3jJ,KAAKwoJ,IAAMxoJ,KAAKwoJ,MAAQxoJ,KAAKqtJ,IAAMrtJ,KAAKotJ,KAE1EptJ,KAAKwtJ,IAAMxtJ,KAAK8xH,IAElB9xH,KAAKwpC,EAAIxpC,KAAK2jJ,IAAM3jJ,KAAK2jJ,IAAM3jJ,KAAKwtJ,IAAMxtJ,KAAKotJ,IAC/CptJ,KAAKikJ,GAAKjkJ,KAAKoR,EAAIhM,KAAKwX,KAAK5c,KAAKwpC,EAAIxpC,KAAKwtJ,IAAMxtJ,KAAKutJ,KAAOvtJ,KAAKwtJ,IACpE,EAiFEv9G,QA5EK,SAAiBilC,GACtB,IAAIljC,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAEZ5lB,KAAKm/I,QAAU/5I,KAAKgxB,IAAIu8F,GACxB3yH,KAAKo/I,QAAUh6I,KAAK8wB,IAAIy8F,GAExB,IAAI86B,EAAK/B,GAAM1rJ,KAAK+pJ,GAAI/pJ,KAAKm/I,SACzB0J,EAAM7oJ,KAAKoR,EAAIhM,KAAKwX,KAAK5c,KAAKwpC,EAAIxpC,KAAKwtJ,IAAMC,GAAMztJ,KAAKwtJ,IACxD7tG,EAAQ3/C,KAAKwtJ,IAAM56B,EAAW5gF,EAAMhyC,KAAKmmH,OACzCxgG,EAAIkjI,EAAMzjJ,KAAKgxB,IAAIupB,GAAS3/C,KAAKw1B,GACjC5P,EAAI5lB,KAAKikJ,GAAK4E,EAAMzjJ,KAAK8wB,IAAIypB,GAAS3/C,KAAKy1B,GAI/C,OAFAy/C,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EA6DEhlC,QA3DK,SAAiBglC,GACtB,IAAI2zE,EAAK4E,EAAI37B,EAAKnyE,EAAO3N,EAAK2gF,EA0B9B,OAxBAz9C,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,EAAI5lB,KAAKikJ,GAAK/uE,EAAEtvD,EAAI5lB,KAAKy1B,GACvBz1B,KAAKwtJ,KAAO,GACd3E,EAAMzjJ,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,GACpCksG,EAAM,IAEN+2B,GAAOzjJ,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,GACrCksG,GAAO,GAETnyE,EAAQ,EACI,IAARkpG,IACFlpG,EAAQv6C,KAAKkkC,MAAMwoF,EAAM58C,EAAEvvD,EAAGmsG,EAAM58C,EAAEtvD,IAExCksG,EAAM+2B,EAAM7oJ,KAAKwtJ,IAAMxtJ,KAAKoR,EACxBpR,KAAK+vH,OACP4C,EAAMvtH,KAAK06I,MAAM9/I,KAAKwpC,EAAIsoF,EAAMA,IAAQ,EAAI9xH,KAAKwtJ,OAEjDC,GAAMztJ,KAAKwpC,EAAIsoF,EAAMA,GAAO9xH,KAAKwtJ,IACjC76B,EAAM3yH,KAAK0tJ,MAAM1tJ,KAAK+pJ,GAAI0D,IAG5Bz7G,EAAM4gF,EAAWjzE,EAAQ3/C,KAAKwtJ,IAAMxtJ,KAAKmmH,OACzCjxC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAgCEg5B,MALiB,CAAC,0BAA2B,oBAAqB,SAAU,OAM5Ew/C,MA5BK,SAAe/7B,EAAQ87B,GAC5B,IAAI77B,EAAgBE,EAAKG,EAAKE,EAC1BH,EAAM27B,GAAM,GAAMF,GACtB,GAAI97B,EAAS5N,EACX,OAAOiO,EAIT,IADA,IAAI47B,EAASj8B,EAASA,EACbvqH,EAAI,EAAGA,GAAK,GAAIA,IAOvB,GADA4qH,GADAG,EAAO,IADPF,EAAM,GADNH,EAAMH,GAFNC,EAASxsH,KAAKgxB,IAAI47F,KAGFF,GACGG,EAHV7sH,KAAK8wB,IAAI87F,IAGiBy7B,GAAM,EAAIG,GAAUh8B,EAASK,EAAM,GAAMN,EAASvsH,KAAKuX,KAAK,EAAIm1G,IAAQ,EAAIA,KAE3G1sH,KAAKC,IAAI8sH,IAAS,KACpB,OAAOH,EAGX,OAAO,IACT,GCrCA,UACEQ,KApFK,WAGLxyH,KAAK6tJ,QAAUzoJ,KAAKgxB,IAAIp2B,KAAK8lH,MAC7B9lH,KAAK8tJ,QAAU1oJ,KAAK8wB,IAAIl2B,KAAK8lH,MAE7B9lH,KAAK+tJ,cAAgB,IAAO/tJ,KAAKoR,EACjCpR,KAAKwiJ,GAAK,CACZ,EA6EEvyG,QAzEK,SAAiBilC,GACtB,IAAI08C,EAAQC,EACRuyB,EACA4J,EAEA7kH,EACAxjB,EAAGC,EACHosB,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EA2BZ,OAxBAw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAE7ByL,EAASxsH,KAAKgxB,IAAIu8F,GAClBd,EAASzsH,KAAK8wB,IAAIy8F,GAElBq7B,EAAS5oJ,KAAK8wB,IAAIkuH,IAClBj7G,EAAInpC,KAAK6tJ,QAAUj8B,EAAS5xH,KAAK8tJ,QAAUj8B,EAASm8B,GAE3C,GAAO5oJ,KAAKC,IAAI8jC,IAAM46E,GAC7Bp+F,EAAI3lB,KAAKw1B,GAFL,EAEUx1B,KAAKoR,EAAUygH,EAASzsH,KAAKgxB,IAAIguH,GAAQj7G,EACvDvjB,EAAI5lB,KAAKy1B,GAHL,EAGUz1B,KAAKoR,GAAWpR,KAAK8tJ,QAAUl8B,EAAS5xH,KAAK6tJ,QAAUh8B,EAASm8B,GAAU7kH,IASxFxjB,EAAI3lB,KAAKw1B,GAAKx1B,KAAK+tJ,cAAgBl8B,EAASzsH,KAAKgxB,IAAIguH,GACrDx+H,EAAI5lB,KAAKy1B,GAAKz1B,KAAK+tJ,eAAiB/tJ,KAAK8tJ,QAAUl8B,EAAS5xH,KAAK6tJ,QAAUh8B,EAASm8B,IAEtF94E,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EAsCEhlC,QApCK,SAAiBglC,GACtB,IAAI+uE,EACAhB,EAAMC,EACN15G,EACAwI,EAAK2gF,EAyBT,OArBAz9C,EAAEvvD,GAAKuvD,EAAEvvD,EAAI3lB,KAAKw1B,IAAMx1B,KAAKoR,EAC7B8jE,EAAEtvD,GAAKsvD,EAAEtvD,EAAI5lB,KAAKy1B,IAAMz1B,KAAKoR,EAE7B8jE,EAAEvvD,GAAK3lB,KAAK+mH,GACZ7xC,EAAEtvD,GAAK5lB,KAAK+mH,IAEPk9B,EAAK7+I,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,KACtC4jB,EAAIpkC,KAAKkkC,MAAM26G,EAAIjkJ,KAAKwiJ,IACxBS,EAAO79I,KAAKgxB,IAAIoT,GAGhBmpF,EAAMg7B,IAFNzK,EAAO99I,KAAK8wB,IAAIsT,IAEGxpC,KAAK6tJ,QAAW34E,EAAEtvD,EAAIq9H,EAAOjjJ,KAAK8tJ,QAAW7J,GAChEjyG,EAAM5sC,KAAKkkC,MAAM4rC,EAAEvvD,EAAIs9H,EAAMgB,EAAKjkJ,KAAK8tJ,QAAU5K,EAAOhuE,EAAEtvD,EAAI5lB,KAAK6tJ,QAAU5K,GAC7EjxG,EAAM4gF,EAAW5yH,KAAKmmH,MAAQn0E,KAE9B2gF,EAAM3yH,KAAKyiJ,MACXzwG,EAAM,GAGRkjC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,SCjCpB,UACEskB,KApDK,WAEAxyH,KAAK+vH,SACR/vH,KAAK+mH,GAAK2L,EAAM1yH,KAAK6uD,EAAGzpD,KAAKgxB,IAAIp2B,KAAKimH,QAAS7gH,KAAK8wB,IAAIl2B,KAAKimH,SAEjE,EAgDEh2E,QA5CK,SAAiBilC,GACtB,IAEIvvD,EAAGC,EAFHosB,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAIRw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OACjC,GAAInmH,KAAK+vH,OACPpqG,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,EAAIgzI,EAAOh/I,KAAK8wB,IAAIl2B,KAAKimH,QAC5CrgG,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,EAAIhM,KAAKgxB,IAAIu8F,GAAOvtH,KAAK8wB,IAAIl2B,KAAKimH,YAChD,CACL,IAAIwnC,EAAK/B,GAAM1rJ,KAAK6uD,EAAGzpD,KAAKgxB,IAAIu8F,IAChChtG,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,EAAIpR,KAAK+mH,GAAKq9B,EACjCx+H,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,EAAIq8I,EAAK,GAAMztJ,KAAK+mH,EACzC,CAIA,OAFA7xC,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EA0BEhlC,QAtBK,SAAiBglC,GAGtB,IAAIljC,EAAK2gF,EAYT,OAdAz9C,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GAGRz1B,KAAK+vH,QACP/9E,EAAM4gF,EAAW5yH,KAAKmmH,MAASjxC,EAAEvvD,EAAI3lB,KAAKoR,EAAKhM,KAAK8wB,IAAIl2B,KAAKimH,SAC7D0M,EAAMvtH,KAAK06I,KAAM5qE,EAAEtvD,EAAI5lB,KAAKoR,EAAKhM,KAAK8wB,IAAIl2B,KAAKimH,WAE/C0M,ECxDW,SAAUhB,EAAQvoF,GAC/B,IAAIy2G,EAAO,GAAK,EAAIluB,EAASA,IAAW,EAAIA,GAAUvsH,KAAKuX,KAAK,EAAIg1G,IAAW,EAAIA,IACnF,GAAIvsH,KAAKC,IAAID,KAAKC,IAAI+jC,GAAKy2G,GAAQ,KACjC,OAAIz2G,EAAI,GACG,EAAI06E,EAENA,EASX,IALA,IACIqO,EACAgtB,EACAC,EACAttB,EAJAE,EAAM5sH,KAAK06I,KAAK,GAAM12G,GAKjBhiC,EAAI,EAAGA,EAAI,GAAIA,IAMtB,GALA+3I,EAAU/5I,KAAKgxB,IAAI47F,GACnBotB,EAAUh6I,KAAK8wB,IAAI87F,GACnBF,EAAMH,EAASwtB,EAEfntB,GADAG,EAAO/sH,KAAKyjC,IAAI,EAAIipF,EAAMA,EAAK,IAAM,EAAIstB,IAAYh2G,GAAK,EAAIuoF,EAASA,GAAUwtB,GAAW,EAAIrtB,EAAMA,GAAO,GAAMH,EAASvsH,KAAKuX,KAAK,EAAIm1G,IAAQ,EAAIA,KAElJ1sH,KAAKC,IAAI8sH,IAAS,MACpB,OAAOH,EAKX,OAAOrtG,GACT,CD4BUspI,CAAOjuJ,KAAK6uD,EAAG,EAAIqmB,EAAEtvD,EAAI5lB,KAAK+mH,GAAK/mH,KAAKoR,GAC9C4gC,EAAM4gF,EAAW5yH,KAAKmmH,MAAQjxC,EAAEvvD,GAAK3lB,KAAKoR,EAAIpR,KAAK+mH,MAGrD7xC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,QE5BpB,UACEskB,KArCK,WACLxyH,KAAKw1B,GAAKx1B,KAAKw1B,IAAM,EACrBx1B,KAAKy1B,GAAKz1B,KAAKy1B,IAAM,EACrBz1B,KAAK8lH,KAAO9lH,KAAK8lH,MAAQ,EACzB9lH,KAAKmmH,MAAQnmH,KAAKmmH,OAAS,EAC3BnmH,KAAKimH,OAASjmH,KAAKimH,QAAU,EAC7BjmH,KAAK08B,MAAQ18B,KAAK08B,OAAS,wCAE3B18B,KAAKwiJ,GAAKp9I,KAAK8wB,IAAIl2B,KAAKimH,OAC1B,EA6BEh2E,QAzBK,SAAiBilC,GACtB,IAAIljC,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAERw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAC7B+nC,EAAOjD,GAAWt4B,EAAM3yH,KAAK8lH,MAGjC,OAFA5wC,EAAEvvD,EAAI3lB,KAAKw1B,GAAMx1B,KAAKoR,EAAIgzI,EAAOpkJ,KAAKwiJ,GACtCttE,EAAEtvD,EAAI5lB,KAAKy1B,GAAMz1B,KAAKoR,EAAI88I,EACnBh5E,CACT,EAiBEhlC,QAbK,SAAiBglC,GACtB,IAAIvvD,EAAIuvD,EAAEvvD,EACNC,EAAIsvD,EAAEtvD,EAIV,OAFAsvD,EAAEvvD,EAAIitG,EAAW5yH,KAAKmmH,OAAUxgG,EAAI3lB,KAAKw1B,KAAOx1B,KAAKoR,EAAIpR,KAAKwiJ,KAC9DttE,EAAEtvD,EAAIqlI,GAAWjrJ,KAAK8lH,MAASlgG,EAAI5lB,KAAKy1B,IAAOz1B,KAAKoR,GAC7C8jE,CACT,EAOEg5B,MALiB,CAAC,kBAAmB,0BAA2B,oCAAqC,QCiGvG,UACEskB,KA9GK,WAGLxyH,KAAK6/I,KAAO7/I,KAAKqR,EAAIrR,KAAKoR,EAC1BpR,KAAKyyH,GAAK,EAAIrtH,KAAKyjC,IAAI7oC,KAAK6/I,KAAM,GAClC7/I,KAAK6uD,EAAIzpD,KAAKwX,KAAK5c,KAAKyyH,IACxBzyH,KAAK8pJ,GAAKE,GAAKhqJ,KAAKyyH,IACpBzyH,KAAK+8I,GAAKkN,GAAKjqJ,KAAKyyH,IACpBzyH,KAAK4kJ,GAAKsF,GAAKlqJ,KAAKyyH,IACpBzyH,KAAK+pJ,GAAKI,GAAKnqJ,KAAKyyH,IACpBzyH,KAAKi/I,IAAMj/I,KAAKoR,EAAIg5I,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAI/pJ,KAAK8lH,KACpE,EAoGE71E,QAhGK,SAAiBilC,GACtB,IAEIvvD,EAAGC,EAAGuoI,EAFNn8G,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAERw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAEjC,GADAgoC,EAAK/J,EAAOh/I,KAAKgxB,IAAIu8F,GACjB3yH,KAAK+vH,OACH3qH,KAAKC,IAAIstH,IAAQ5O,GACnBp+F,EAAI3lB,KAAKoR,EAAIgzI,EACbx+H,GAAK,EAAI5lB,KAAKoR,EAAIpR,KAAK8lH,OAEvBngG,EAAI3lB,KAAKoR,EAAIhM,KAAKgxB,IAAI+3H,GAAM/oJ,KAAK6kC,IAAI0oF,GACrC/sG,EAAI5lB,KAAKoR,GAAK65I,GAAWt4B,EAAM3yH,KAAK8lH,OAAS,EAAI1gH,KAAK8wB,IAAIi4H,IAAO/oJ,KAAK6kC,IAAI0oF,UAG5E,GAAIvtH,KAAKC,IAAIstH,IAAQ5O,EACnBp+F,EAAI3lB,KAAKoR,EAAIgzI,EACbx+H,GAAK,EAAI5lB,KAAKi/I,QACT,CACL,IAAIqL,EAAKC,GAAGvqJ,KAAKoR,EAAGpR,KAAK6uD,EAAGzpD,KAAKgxB,IAAIu8F,IAAQvtH,KAAK6kC,IAAI0oF,GACtDhtG,EAAI2kI,EAAKllJ,KAAKgxB,IAAI+3H,GAClBvoI,EAAI5lB,KAAKoR,EAAIg5I,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAIp3B,GAAO3yH,KAAKi/I,IAAMqL,GAAM,EAAIllJ,KAAK8wB,IAAIi4H,GAC7F,CAIF,OAFAj5E,EAAEvvD,EAAIA,EAAI3lB,KAAKw1B,GACf0/C,EAAEtvD,EAAIA,EAAI5lB,KAAKy1B,GACRy/C,CACT,EAsEEhlC,QAlEK,SAAiBglC,GACtB,IAAIljC,EAAK2gF,EAAKhtG,EAAGC,EAAGxe,EAChBi4I,EAAI+O,EACJp8B,EAAKG,EAIT,GAHAxsG,EAAIuvD,EAAEvvD,EAAI3lB,KAAKw1B,GACf5P,EAAIsvD,EAAEtvD,EAAI5lB,KAAKy1B,GAEXz1B,KAAK+vH,OACP,GAAI3qH,KAAKC,IAAIugB,EAAI5lB,KAAKoR,EAAIpR,KAAK8lH,OAAS/B,EACtC/xE,EAAM4gF,EAAWjtG,EAAI3lB,KAAKoR,EAAIpR,KAAKmmH,OACnCwM,EAAM,MACD,CAIL,IAAI07B,EACJ,IAJAhP,EAAKr/I,KAAK8lH,KAAOlgG,EAAI5lB,KAAKoR,EAC1Bg9I,EAAKzoI,EAAIA,EAAI3lB,KAAKoR,EAAIpR,KAAKoR,EAAIiuI,EAAKA,EACpCrtB,EAAMqtB,EAEDj4I,EAjEI,GAiEUA,IAAKA,EAItB,GADA4qH,GADAG,GAAQ,GAAKktB,GAAMrtB,GADnBq8B,EAASjpJ,KAAK6kC,IAAI+nF,IACgB,GAAKA,EAAM,IAAOA,EAAMA,EAAMo8B,GAAMC,KAAYr8B,EAAMqtB,GAAMgP,EAAS,GAEnGjpJ,KAAKC,IAAI8sH,IAASpO,EAAO,CAC3B4O,EAAMX,EACN,KACF,CAEFhgF,EAAM4gF,EAAW5yH,KAAKmmH,MAAS/gH,KAAK06I,KAAKn6H,EAAIvgB,KAAK6kC,IAAI+nF,GAAOhyH,KAAKoR,GAAMhM,KAAKgxB,IAAIu8F,GACnF,MAEA,GAAIvtH,KAAKC,IAAIugB,EAAI5lB,KAAKi/I,MAAQl7B,EAC5B4O,EAAM,EACN3gF,EAAM4gF,EAAW5yH,KAAKmmH,MAAQxgG,EAAI3lB,KAAKoR,OAClC,CAIL,IAAIs5I,EAAI4D,EAAKC,EAAMC,EACf18B,EACJ,IALAutB,GAAMr/I,KAAKi/I,IAAMr5H,GAAK5lB,KAAKoR,EAC3Bg9I,EAAKzoI,EAAIA,EAAI3lB,KAAKoR,EAAIpR,KAAKoR,EAAIiuI,EAAKA,EACpCrtB,EAAMqtB,EAGDj4I,EAtFI,GAsFUA,IAAKA,EAQtB,GAPA0qH,EAAM9xH,KAAK6uD,EAAIzpD,KAAKgxB,IAAI47F,GACxB04B,EAAKtlJ,KAAKwX,KAAK,EAAIk1G,EAAMA,GAAO1sH,KAAK6kC,IAAI+nF,GACzCs8B,EAAMtuJ,KAAKoR,EAAIg5I,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAI/3B,GACxDu8B,EAAOvuJ,KAAK8pJ,GAAK,EAAI9pJ,KAAK+8I,GAAK33I,KAAK8wB,IAAI,EAAI87F,GAAO,EAAIhyH,KAAK4kJ,GAAKx/I,KAAK8wB,IAAI,EAAI87F,GAAO,EAAIhyH,KAAK+pJ,GAAK3kJ,KAAK8wB,IAAI,EAAI87F,GAGhHA,GADAG,GAAQktB,GAAMqL,GADd8D,EAAKF,EAAMtuJ,KAAKoR,GACQ,GAAKo9I,EAAK,GAAM9D,GAAM8D,EAAKA,EAAKJ,KAAQpuJ,KAAKyyH,GAAKrtH,KAAKgxB,IAAI,EAAI47F,IAAQw8B,EAAKA,EAAKJ,EAAK,EAAI/O,EAAKmP,IAAO,EAAI9D,IAAOrL,EAAKmP,IAAO9D,EAAK6D,EAAO,EAAInpJ,KAAKgxB,IAAI,EAAI47F,IAAQu8B,GAEtLnpJ,KAAKC,IAAI8sH,IAASpO,EAAO,CAC3B4O,EAAMX,EACN,KACF,CAIF04B,EAAKtlJ,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAKrtH,KAAKyjC,IAAIzjC,KAAKgxB,IAAIu8F,GAAM,IAAMvtH,KAAK6kC,IAAI0oF,GACpE3gF,EAAM4gF,EAAW5yH,KAAKmmH,MAAQ/gH,KAAK06I,KAAKn6H,EAAI+kI,EAAK1qJ,KAAKoR,GAAKhM,KAAKgxB,IAAIu8F,GACtE,CAKF,OAFAz9C,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,YAAa,qBAAsB,SCsFvD,UACEskB,KA3MK,WACLxyH,KAAK65I,EAAI,GACT75I,KAAK65I,EAAE,GAAK,YACZ75I,KAAK65I,EAAE,IAAM,YACb75I,KAAK65I,EAAE,GAAK,WACZ75I,KAAK65I,EAAE,IAAM,UACb75I,KAAK65I,EAAE,GAAK,SACZ75I,KAAK65I,EAAE,IAAM,SACb75I,KAAK65I,EAAE,GAAK,SACZ75I,KAAK65I,EAAE,IAAM,QACb75I,KAAK65I,EAAE,GAAK,MACZ75I,KAAK65I,EAAE,KAAO,MAEd75I,KAAKyuJ,KAAO,GACZzuJ,KAAK0uJ,KAAO,GACZ1uJ,KAAKyuJ,KAAK,GAAK,YACfzuJ,KAAK0uJ,KAAK,GAAK,EACf1uJ,KAAKyuJ,KAAK,GAAK,WACfzuJ,KAAK0uJ,KAAK,GAAK,WACf1uJ,KAAKyuJ,KAAK,IAAM,WAChBzuJ,KAAK0uJ,KAAK,GAAK,UACf1uJ,KAAKyuJ,KAAK,IAAM,UAChBzuJ,KAAK0uJ,KAAK,GAAK,UACf1uJ,KAAKyuJ,KAAK,IAAM,UAChBzuJ,KAAK0uJ,KAAK,IAAM,UAChB1uJ,KAAKyuJ,KAAK,IAAM,SAChBzuJ,KAAK0uJ,KAAK,IAAM,UAEhB1uJ,KAAK2uJ,KAAO,GACZ3uJ,KAAK4uJ,KAAO,GACZ5uJ,KAAK2uJ,KAAK,GAAK,aACf3uJ,KAAK4uJ,KAAK,GAAK,EACf5uJ,KAAK2uJ,KAAK,IAAM,WAChB3uJ,KAAK4uJ,KAAK,IAAM,WAChB5uJ,KAAK2uJ,KAAK,GAAK,WACf3uJ,KAAK4uJ,KAAK,IAAM,WAChB5uJ,KAAK2uJ,KAAK,IAAM,UAChB3uJ,KAAK4uJ,KAAK,GAAK,UACf5uJ,KAAK2uJ,KAAK,GAAK,WACf3uJ,KAAK4uJ,KAAK,GAAK,WACf5uJ,KAAK2uJ,KAAK,GAAK,UACf3uJ,KAAK4uJ,KAAK,GAAK,UAEf5uJ,KAAK48I,EAAI,GACT58I,KAAK48I,EAAE,GAAK,aACZ58I,KAAK48I,EAAE,GAAK,YACZ58I,KAAK48I,EAAE,IAAM,UACb58I,KAAK48I,EAAE,IAAM,SACb58I,KAAK48I,EAAE,IAAM,SACb58I,KAAK48I,EAAE,GAAK,QACZ58I,KAAK48I,EAAE,GAAK,MACZ58I,KAAK48I,EAAE,GAAK,OACZ58I,KAAK48I,EAAE,IAAM,KACf,EAuJE3sG,QAjJK,SAAiBilC,GACtB,IAAIltE,EACAgqC,EAAMkjC,EAAEvvD,EAGRkpI,EAFM35E,EAAEtvD,EAEU5lB,KAAK8lH,KACvBo5B,EAAYltG,EAAMhyC,KAAKmmH,MAIvB2oC,EAAQD,EAAYhrC,EAAa,KACjCkrC,EAAW7P,EACX8P,EAAU,EAEVC,EAAQ,EACZ,IAAKjnJ,EAAI,EAAGA,GAAK,GAAIA,IACnBgnJ,GAAoBF,EACpBG,GAAgBjvJ,KAAK65I,EAAE7xI,GAAKgnJ,EAI9B,IAOIE,EAPAC,EAAQF,EACRG,EAAQL,EAGRM,EAAU,EACVC,EAAU,EAIVC,EAAO,EACPC,EAAO,EACX,IAAKxnJ,EAAI,EAAGA,GAAK,EAAGA,IAElBknJ,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVK,EAAOA,EAAOvvJ,KAAKyuJ,KAAKzmJ,GAAKqnJ,EAAUrvJ,KAAK0uJ,KAAK1mJ,GAAKsnJ,EACtDE,EAAOA,EAAOxvJ,KAAK0uJ,KAAK1mJ,GAAKqnJ,EAAUrvJ,KAAKyuJ,KAAKzmJ,GAAKsnJ,EAOxD,OAHAp6E,EAAEvvD,EAAK6pI,EAAOxvJ,KAAKoR,EAAKpR,KAAKw1B,GAC7B0/C,EAAEtvD,EAAK2pI,EAAOvvJ,KAAKoR,EAAKpR,KAAKy1B,GAEtBy/C,CACT,EAoGEhlC,QA/FK,SAAiBglC,GACtB,IAAIltE,EAeAynJ,EAdA9pI,EAAIuvD,EAAEvvD,EACNC,EAAIsvD,EAAEtvD,EAEN8pI,EAAU/pI,EAAI3lB,KAAKw1B,GAInB+5H,GAHU3pI,EAAI5lB,KAAKy1B,IAGFz1B,KAAKoR,EACtBo+I,EAAOE,EAAU1vJ,KAAKoR,EAGtBu+I,EAAS,EACTC,EAAS,EAITT,EAAQ,EACRC,EAAQ,EACZ,IAAKpnJ,EAAI,EAAGA,GAAK,EAAGA,IAElBynJ,EAAUG,EAASL,EAAOI,EAASH,EACnCG,EAFUA,EAASJ,EAAOK,EAASJ,EAGnCI,EAASH,EACTN,EAAQA,EAAQnvJ,KAAK2uJ,KAAK3mJ,GAAK2nJ,EAAS3vJ,KAAK4uJ,KAAK5mJ,GAAK4nJ,EACvDR,EAAQA,EAAQpvJ,KAAK4uJ,KAAK5mJ,GAAK2nJ,EAAS3vJ,KAAK2uJ,KAAK3mJ,GAAK4nJ,EAOzD,IAAK,IAAIxoJ,EAAI,EAAGA,EAAIpH,KAAK6vJ,WAAYzoJ,IAAK,CACxC,IAGI8nJ,EAHAG,EAAUF,EACVG,EAAUF,EAIVU,EAASP,EACTQ,EAASP,EACb,IAAKxnJ,EAAI,EAAGA,GAAK,EAAGA,IAElBknJ,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVY,IAAmB9nJ,EAAI,IAAMhI,KAAKyuJ,KAAKzmJ,GAAKqnJ,EAAUrvJ,KAAK0uJ,KAAK1mJ,GAAKsnJ,GACrES,IAAmB/nJ,EAAI,IAAMhI,KAAK0uJ,KAAK1mJ,GAAKqnJ,EAAUrvJ,KAAKyuJ,KAAKzmJ,GAAKsnJ,GAGvED,EAAU,EACVC,EAAU,EACV,IAAIU,EAAShwJ,KAAKyuJ,KAAK,GACnBwB,EAASjwJ,KAAK0uJ,KAAK,GACvB,IAAK1mJ,EAAI,EAAGA,GAAK,EAAGA,IAElBknJ,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVc,GAAkBhoJ,GAAKhI,KAAKyuJ,KAAKzmJ,GAAKqnJ,EAAUrvJ,KAAK0uJ,KAAK1mJ,GAAKsnJ,GAC/DW,GAAkBjoJ,GAAKhI,KAAK0uJ,KAAK1mJ,GAAKqnJ,EAAUrvJ,KAAKyuJ,KAAKzmJ,GAAKsnJ,GAIjE,IAAIY,EAAOF,EAASA,EAASC,EAASA,EACtCd,GAASW,EAASE,EAASD,EAASE,GAAUC,EAC9Cd,GAASW,EAASC,EAASF,EAASG,GAAUC,CAChD,CAGA,IAAIjB,EAAQE,EACRJ,EAAWK,EACXe,EAAU,EAEVrB,EAAQ,EACZ,IAAK9mJ,EAAI,EAAGA,GAAK,EAAGA,IAClBmoJ,GAAoBlB,EACpBH,GAAgB9uJ,KAAK48I,EAAE50I,GAAKmoJ,EAK9B,IAAIx9B,EAAM3yH,KAAK8lH,KAAQgpC,EAAQjrC,EAAa,IACxC7xE,EAAMhyC,KAAKmmH,MAAQ4oC,EAKvB,OAHA75E,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EAECz9C,CACT,EAOEg5B,MALiB,CAAC,uBAAwB,SC9K5C,UACEskB,KApCK,WACL,EAoCAviF,QA/BK,SAAiBilC,GACtB,IAAIljC,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAGRw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAC7BxgG,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,EAAIgzI,EACvBx+H,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,EAAIhM,KAAKuX,IAAIvX,KAAK6kC,IAAK7kC,KAAKuyB,GAAK,EAAMg7F,EAAM,MAAS,KAI7E,OAFAz9C,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EAoBEhlC,QAhBK,SAAiBglC,GACtBA,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GAEZ,IAAIuc,EAAM4gF,EAAW5yH,KAAKmmH,MAAQjxC,EAAEvvD,EAAI3lB,KAAKoR,GACzCuhH,EAAM,KAAOvtH,KAAK0lC,KAAK1lC,KAAK2lC,IAAI,GAAMmqC,EAAEtvD,EAAI5lB,KAAKoR,IAAMhM,KAAKuyB,GAAK,GAIrE,OAFAu9C,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,qBAAsB,SCiE1C,UACEskB,KAzFK,WAIAxyH,KAAK+vH,QAGR/vH,KAAKgI,EAAI,EACThI,KAAKiR,EAAI,EACTjR,KAAKyyH,GAAK,EACVzyH,KAAKowJ,IAAMhrJ,KAAKwX,MAAM5c,KAAKiR,EAAI,GAAKjR,KAAKgI,GACzChI,KAAKqwJ,IAAMrwJ,KAAKowJ,KAAOpwJ,KAAKiR,EAAI,IANhCjR,KAAK4+I,GAAKI,GAAQh/I,KAAKyyH,GAQ3B,EA6EExiF,QAzEK,SAAiBilC,GACtB,IAAIvvD,EAAGC,EACHosB,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAKZ,GAFAosB,EAAM4gF,EAAW5gF,EAAMhyC,KAAKmmH,OAExBnmH,KAAK+vH,OAAQ,CACf,GAAK/vH,KAAKiR,EAIR,IADA,IAAI89C,EAAI/uD,KAAKgI,EAAI5C,KAAKgxB,IAAIu8F,GACjBvrH,EAhDA,GAgDcA,IAAKA,EAAG,CAC7B,IAAI4yI,GAAKh6I,KAAKiR,EAAI0hH,EAAMvtH,KAAKgxB,IAAIu8F,GAAO5jE,IAAM/uD,KAAKiR,EAAI7L,KAAK8wB,IAAIy8F,IAEhE,GADAA,GAAOqnB,EACH50I,KAAKC,IAAI20I,GAAKj2B,EAChB,KAEJ,MATA4O,EAAiB,IAAX3yH,KAAKgI,EAAU5C,KAAK06I,KAAK9/I,KAAKgI,EAAI5C,KAAKgxB,IAAIu8F,IAAQA,EAW3DhtG,EAAI3lB,KAAKoR,EAAIpR,KAAKqwJ,IAAMr+G,GAAOhyC,KAAKiR,EAAI7L,KAAK8wB,IAAIy8F,IACjD/sG,EAAI5lB,KAAKoR,EAAIpR,KAAKowJ,IAAMz9B,CAC1B,KAAO,CACL,IAAIjsF,EAAIthC,KAAKgxB,IAAIu8F,GACbnpF,EAAIpkC,KAAK8wB,IAAIy8F,GACjB/sG,EAAI5lB,KAAKoR,EAAI2tI,GAAQpsB,EAAKjsF,EAAG8C,EAAGxpC,KAAK4+I,IACrCj5H,EAAI3lB,KAAKoR,EAAI4gC,EAAMxI,EAAIpkC,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAK/rF,EAAIA,EACrD,CAIA,OAFAwuC,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EAyCEhlC,QAvCK,SAAiBglC,GACtB,IAAIy9C,EAAW3gF,EAAKtL,EA+BpB,OA7BAwuC,EAAEvvD,GAAK3lB,KAAKw1B,GACZwc,EAAMkjC,EAAEvvD,EAAI3lB,KAAKoR,EACjB8jE,EAAEtvD,GAAK5lB,KAAKy1B,GACZk9F,EAAMz9C,EAAEtvD,EAAI5lB,KAAKoR,EAEbpR,KAAK+vH,QACP4C,GAAO3yH,KAAKowJ,IACZp+G,GAAahyC,KAAKqwJ,KAAOrwJ,KAAKiR,EAAI7L,KAAK8wB,IAAIy8F,IACvC3yH,KAAKiR,EACP0hH,EAAMg7B,IAAO3tJ,KAAKiR,EAAI0hH,EAAMvtH,KAAKgxB,IAAIu8F,IAAQ3yH,KAAKgI,GAC9B,IAAXhI,KAAKgI,IACd2qH,EAAMg7B,GAAMvoJ,KAAKgxB,IAAIu8F,GAAO3yH,KAAKgI,IAEnCgqC,EAAM4gF,EAAW5gF,EAAMhyC,KAAKmmH,OAC5BwM,EAAMs4B,GAAWt4B,KAEjBA,EAAM+sB,GAAYxqE,EAAEtvD,EAAI5lB,KAAKoR,EAAGpR,KAAKyyH,GAAIzyH,KAAK4+I,KAC9Cl4G,EAAIthC,KAAKC,IAAIstH,IACL7O,GACNp9E,EAAIthC,KAAKgxB,IAAIu8F,GAGb3gF,EAAM4gF,EAFC5yH,KAAKmmH,MAAQjxC,EAAEvvD,EAAIvgB,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAK/rF,EAAIA,IAAM1mC,KAAKoR,EAAIhM,KAAK8wB,IAAIy8F,MAGpEjsF,EAAIq9E,EAASD,IACvB9xE,EAAMhyC,KAAKmmH,QAGfjxC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,aAAc,SChClC,UACEskB,KA5EK,WAAiB,EA6EtBviF,QAzEK,SAAiBilC,GAYtB,IATA,IAAIljC,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAERs5H,EAAYtsB,EAAW5gF,EAAMhyC,KAAKmmH,OAClCxmE,EAAQgzE,EACRb,EAAM1sH,KAAKuyB,GAAKvyB,KAAKgxB,IAAIu8F,KAIhB,CACX,IAAI29B,IAAgB3wG,EAAQv6C,KAAKgxB,IAAIupB,GAASmyE,IAAQ,EAAI1sH,KAAK8wB,IAAIypB,IAEnE,GADAA,GAAS2wG,EACLlrJ,KAAKC,IAAIirJ,GAAevsC,EAC1B,KAEJ,CACApkE,GAAS,EAKLv6C,KAAKuyB,GAAK,EAAIvyB,KAAKC,IAAIstH,GAAO5O,IAChCm7B,EAAY,GAEd,IAAIv5H,EAAI,cAAiB3lB,KAAKoR,EAAI8tI,EAAY95I,KAAK8wB,IAAIypB,GAAS3/C,KAAKw1B,GACjE5P,EAAI,gBAAkB5lB,KAAKoR,EAAIhM,KAAKgxB,IAAIupB,GAAS3/C,KAAKy1B,GAI1D,OAFAy/C,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EAyCEhlC,QAvCK,SAAiBglC,GACtB,IAAIv1B,EACAkxD,EAIJ37B,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GACZo7E,EAAM37B,EAAEtvD,GAAK,gBAAkB5lB,KAAKoR,GAKhChM,KAAKC,IAAIwrG,GAAO,gBAClBA,EAAM,eAERlxD,EAAQv6C,KAAK06I,KAAKjvC,GAClB,IAAI7+D,EAAM4gF,EAAW5yH,KAAKmmH,MAASjxC,EAAEvvD,GAAK,cAAiB3lB,KAAKoR,EAAIhM,KAAK8wB,IAAIypB,KACzE3N,GAAQ5sC,KAAKuyB,KACfqa,GAAO5sC,KAAKuyB,IAEVqa,EAAM5sC,KAAKuyB,KACbqa,EAAM5sC,KAAKuyB,IAEbk5E,GAAO,EAAIlxD,EAAQv6C,KAAKgxB,IAAI,EAAIupB,IAAUv6C,KAAKuyB,GAC3CvyB,KAAKC,IAAIwrG,GAAO,IAClBA,EAAM,GAER,IAAI8hB,EAAMvtH,KAAK06I,KAAKjvC,GAIpB,OAFA37B,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,YAAa,SCoDjC,UACEskB,KA/FK,WAIDptH,KAAKC,IAAIrF,KAAK2vC,KAAO3vC,KAAK4vC,MAAQm0E,IAGtC/jH,KAAK4vC,KAAO5vC,KAAK4vC,MAAQ5vC,KAAK2vC,KAC9B3vC,KAAK6/I,KAAO7/I,KAAKqR,EAAIrR,KAAKoR,EAC1BpR,KAAKyyH,GAAK,EAAIrtH,KAAKyjC,IAAI7oC,KAAK6/I,KAAM,GAClC7/I,KAAK6uD,EAAIzpD,KAAKwX,KAAK5c,KAAKyyH,IACxBzyH,KAAK8pJ,GAAKE,GAAKhqJ,KAAKyyH,IACpBzyH,KAAK+8I,GAAKkN,GAAKjqJ,KAAKyyH,IACpBzyH,KAAK4kJ,GAAKsF,GAAKlqJ,KAAKyyH,IACpBzyH,KAAK+pJ,GAAKI,GAAKnqJ,KAAKyyH,IAEpBzyH,KAAKm/I,QAAU/5I,KAAKgxB,IAAIp2B,KAAK2vC,MAC7B3vC,KAAKo/I,QAAUh6I,KAAK8wB,IAAIl2B,KAAK2vC,MAE7B3vC,KAAK2jJ,IAAMjxB,EAAM1yH,KAAK6uD,EAAG7uD,KAAKm/I,QAASn/I,KAAKo/I,SAC5Cp/I,KAAKuwJ,IAAMnG,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAI/pJ,KAAK2vC,MAErDvqC,KAAKC,IAAIrF,KAAK2vC,KAAO3vC,KAAK4vC,MAAQm0E,EACpC/jH,KAAK2oJ,GAAK3oJ,KAAKm/I,SAEfn/I,KAAKm/I,QAAU/5I,KAAKgxB,IAAIp2B,KAAK4vC,MAC7B5vC,KAAKo/I,QAAUh6I,KAAK8wB,IAAIl2B,KAAK4vC,MAC7B5vC,KAAKwoJ,IAAM91B,EAAM1yH,KAAK6uD,EAAG7uD,KAAKm/I,QAASn/I,KAAKo/I,SAC5Cp/I,KAAKwwJ,IAAMpG,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAI/pJ,KAAK4vC,MACzD5vC,KAAK2oJ,IAAM3oJ,KAAK2jJ,IAAM3jJ,KAAKwoJ,MAAQxoJ,KAAKwwJ,IAAMxwJ,KAAKuwJ,MAErDvwJ,KAAKmpC,EAAInpC,KAAKuwJ,IAAMvwJ,KAAK2jJ,IAAM3jJ,KAAK2oJ,GACpC3oJ,KAAKi/I,IAAMmL,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAI/pJ,KAAK8lH,MACzD9lH,KAAKikJ,GAAKjkJ,KAAKoR,GAAKpR,KAAKmpC,EAAInpC,KAAKi/I,KACpC,EA8DEhvG,QA1DK,SAAiBilC,GACtB,IAEI2zE,EAFA72G,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAKZ,GAAI5lB,KAAK+vH,OACP84B,EAAM7oJ,KAAKoR,GAAKpR,KAAKmpC,EAAIwpF,OACpB,CACL,IAAI8sB,EAAK2K,GAAKpqJ,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,GAAIp3B,GAClDk2B,EAAM7oJ,KAAKoR,GAAKpR,KAAKmpC,EAAIs2G,EAC3B,CACA,IAAI9/F,EAAQ3/C,KAAK2oJ,GAAK/1B,EAAW5gF,EAAMhyC,KAAKmmH,OACxCxgG,EAAI3lB,KAAKw1B,GAAKqzH,EAAMzjJ,KAAKgxB,IAAIupB,GAC7B/5B,EAAI5lB,KAAKy1B,GAAKz1B,KAAKikJ,GAAK4E,EAAMzjJ,KAAK8wB,IAAIypB,GAG3C,OAFAu1B,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EAwCEhlC,QApCK,SAAiBglC,GAGtB,IAAI48C,EAAK+2B,EAAKl2B,EAAK3gF,EAFnBkjC,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,EAAI5lB,KAAKikJ,GAAK/uE,EAAEtvD,EAAI5lB,KAAKy1B,GAEvBz1B,KAAK2oJ,IAAM,GACbE,EAAMzjJ,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,GACpCksG,EAAM,IAEN+2B,GAAOzjJ,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,GACrCksG,GAAO,GAET,IAAInyE,EAAQ,EAKZ,OAJY,IAARkpG,IACFlpG,EAAQv6C,KAAKkkC,MAAMwoF,EAAM58C,EAAEvvD,EAAGmsG,EAAM58C,EAAEtvD,IAGpC5lB,KAAK+vH,QACP/9E,EAAM4gF,EAAW5yH,KAAKmmH,MAAQxmE,EAAQ3/C,KAAK2oJ,IAC3Ch2B,EAAMs4B,GAAWjrJ,KAAKmpC,EAAI0/G,EAAM7oJ,KAAKoR,GACrC8jE,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,IAGPy9C,EAAMg4B,GADG3qJ,KAAKmpC,EAAI0/G,EAAM7oJ,KAAKoR,EACbpR,KAAK8pJ,GAAI9pJ,KAAK+8I,GAAI/8I,KAAK4kJ,GAAI5kJ,KAAK+pJ,IAChD/3G,EAAM4gF,EAAW5yH,KAAKmmH,MAAQxmE,EAAQ3/C,KAAK2oJ,IAC3CzzE,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,EAEX,EAOEg5B,MALiB,CAAC,oBAAqB,SCFzC,UACEskB,KA9GK,WAELxyH,KAAKqsC,EAAIrsC,KAAKoR,CAChB,EA4GE6+B,QA1GK,SAAiBilC,GACtB,IAMIvvD,EAAGC,EANHosB,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAIRw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAG7B/gH,KAAKC,IAAIstH,IAAQ5O,IACnBp+F,EAAI3lB,KAAKw1B,GAAKx1B,KAAKqsC,EAAI+3G,EACvBx+H,EAAI5lB,KAAKy1B,IAEX,IAAIkqB,EAAQguG,GAAM,EAAIvoJ,KAAKC,IAAIstH,EAAMvtH,KAAKuyB,MACrCvyB,KAAKC,IAAI++I,IAASrgC,GAAW3+G,KAAKC,IAAID,KAAKC,IAAIstH,GAAO7O,IAAYC,KACrEp+F,EAAI3lB,KAAKw1B,GAEP5P,EADE+sG,GAAO,EACL3yH,KAAKy1B,GAAKrwB,KAAKuyB,GAAK33B,KAAKqsC,EAAIjnC,KAAK6kC,IAAI,GAAM0V,GAE5C3/C,KAAKy1B,GAAKrwB,KAAKuyB,GAAK33B,KAAKqsC,GAAKjnC,KAAK6kC,IAAI,GAAM0V,IAIrD,IAAI0/F,EAAK,GAAMj6I,KAAKC,IAAKD,KAAKuyB,GAAKysH,EAASA,EAAOh/I,KAAKuyB,IACpD8yH,EAAMpL,EAAKA,EACXoR,EAAQrrJ,KAAKgxB,IAAIupB,GACjB+wG,EAAQtrJ,KAAK8wB,IAAIypB,GAEjBxW,EAAIunH,GAASD,EAAQC,EAAQ,GAC7BC,EAAMxnH,EAAIA,EACVl4B,EAAIk4B,GAAK,EAAIsnH,EAAQ,GACrBG,EAAM3/I,EAAIA,EACV6gH,EAAM1sH,KAAKuyB,GAAK33B,KAAKqsC,GAAKgzG,GAAMl2G,EAAIynH,GAAOxrJ,KAAKwX,KAAK6tI,GAAOthH,EAAIynH,IAAQznH,EAAIynH,IAAQA,EAAMnG,IAAQkG,EAAMC,MAAUA,EAAMnG,GACxHrG,EAAO,IACTtyB,GAAOA,GAETnsG,EAAI3lB,KAAKw1B,GAAKs8F,EAEd,IAAI1oF,EAAIqhH,EAAMthH,EAWd,OAVA2oF,EAAM1sH,KAAKuyB,GAAK33B,KAAKqsC,GAAKp7B,EAAIm4B,EAAIi2G,EAAKj6I,KAAKwX,MAAMg0I,EAAMnG,IAAQA,EAAM,GAAKrhH,EAAIA,KAAOwnH,EAAMnG,GAG1F7kI,EAFE+sG,GAAO,EAEL3yH,KAAKy1B,GAAKq8F,EAGV9xH,KAAKy1B,GAAKq8F,EAEhB58C,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EAyDEhlC,QArDK,SAAiBglC,GACtB,IAAIljC,EAAK2gF,EACLk+B,EAAIC,EAAIC,EAAKthH,EAAIpC,EAAI2jH,EACrBjoH,EACAkoH,EACAn/B,EACAo/B,EAwCJ,OAnCAh8E,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GACZq8F,EAAM1sH,KAAKuyB,GAAK33B,KAAKqsC,EAGrB0kH,GAFAF,EAAK37E,EAAEvvD,EAAImsG,GAEA++B,GADXC,EAAK57E,EAAEtvD,EAAIksG,GACUg/B,EAOrBh/B,EAAQ,GAHJg/B,EAAKA,GADTE,GAAM,GAFNvhH,GAAMrqC,KAAKC,IAAIyrJ,IAAO,EAAIC,IAEX,EAAI,EAAID,EAAKA,EAAKC,EAAMA,IACnB,GAFpB1jH,EAAKoC,EAAK,EAAIqhH,EAAKA,EAAKD,EAAKA,GAEAxjH,EAAKA,EAAK2jH,EAAKA,EAAKA,EAAK,EAAIvhH,EAAKpC,EAAK2jH,EAAKA,GAAM,KAC/EjoH,GAAM0G,EAAKpC,EAAKA,EAAK,EAAI2jH,GAAMA,IAC/BC,EAAK,EAAI7rJ,KAAKwX,MAAMmsB,EAAK,IAErB3jC,KAAKC,IAAIysH,GAAO,IAEhBA,EADEA,GAAO,EACH,GAEC,GAGXo/B,EAAM9rJ,KAAKwtE,KAAKk/C,GAAO,EAErBa,EADEz9C,EAAEtvD,GAAK,IACDqrI,EAAK7rJ,KAAK8wB,IAAIg7H,EAAM9rJ,KAAKuyB,GAAK,GAAK0V,EAAK,EAAI2jH,GAAM5rJ,KAAKuyB,MAEtDs5H,EAAK7rJ,KAAK8wB,IAAIg7H,EAAM9rJ,KAAKuyB,GAAK,GAAK0V,EAAK,EAAI2jH,GAAM5rJ,KAAKuyB,GAIhEqa,EADE5sC,KAAKC,IAAIwrJ,GAAM9sC,EACX/jH,KAAKmmH,MAELyM,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKuyB,IAAMo5H,EAAM,EAAI3rJ,KAAKwX,KAAK,EAAI,GAAKi0I,EAAKA,EAAKC,EAAKA,GAAMC,EAAMA,IAAQ,EAAIF,GAG/G37E,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,EAOEg5B,MALiB,CAAC,oBAAqB,gBAAiB,kBAAmB,UCwC7E,UACEskB,KA/IK,WACLxyH,KAAKmxJ,QAAU/rJ,KAAKgxB,IAAIp2B,KAAK8lH,MAC7B9lH,KAAKoxJ,QAAUhsJ,KAAK8wB,IAAIl2B,KAAK8lH,MAE7B9lH,KAAKqlC,EAAIrlC,KAAKyyH,IAAM,EAAIrtH,KAAKwX,KAAK,EAAI5c,KAAKyyH,IAC7C,EA2IExiF,QAzIK,SAAiBilC,GACtB,IAKI40E,EAAI/M,EAAI6H,EAAImF,EAAIsH,EAAKC,EAAI9nH,EAAG+nH,EAAIC,EAAOC,EAAMC,EAL7C1/G,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EACRgsG,EAASxsH,KAAKgxB,IAAI8+C,EAAEtvD,GACpBisG,EAASzsH,KAAK8wB,IAAIg/C,EAAEtvD,GACpBw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAEjC,OAAInmH,KAAK+vH,OACH3qH,KAAKC,IAAIrF,KAAKmxJ,QAAU,IAAMptC,GAEhC7uC,EAAEvvD,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,GAAK0yG,EAAU6O,GAAOvtH,KAAKgxB,IAAIguH,GACpDlvE,EAAEtvD,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,GAAK0yG,EAAU6O,GAAOvtH,KAAK8wB,IAAIkuH,GAC7ClvE,GACE9vE,KAAKC,IAAIrF,KAAKmxJ,QAAU,IAAMptC,GAEvC7uC,EAAEvvD,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,GAAK0yG,EAAU6O,GAAOvtH,KAAKgxB,IAAIguH,GACpDlvE,EAAEtvD,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,GAAK0yG,EAAU6O,GAAOvtH,KAAK8wB,IAAIkuH,GAC7ClvE,IAGPs8E,EAAQxxJ,KAAKmxJ,QAAUv/B,EAAS5xH,KAAKoxJ,QAAUv/B,EAASzsH,KAAK8wB,IAAIkuH,GAEjEmN,GADA/nH,EAAIpkC,KAAKwtE,KAAK4+E,IACLhoH,EAAIpkC,KAAKgxB,IAAIoT,GAAK,EAC3B0rC,EAAEvvD,EAAI3lB,KAAKw1B,GAAKx1B,KAAKoR,EAAImgJ,EAAK1/B,EAASzsH,KAAKgxB,IAAIguH,GAChDlvE,EAAEtvD,EAAI5lB,KAAKy1B,GAAKz1B,KAAKoR,EAAImgJ,GAAMvxJ,KAAKoxJ,QAAUx/B,EAAS5xH,KAAKmxJ,QAAUt/B,EAASzsH,KAAK8wB,IAAIkuH,IACjFlvE,IAGT40E,EAAKE,GAAKhqJ,KAAKyyH,IACfsqB,EAAKkN,GAAKjqJ,KAAKyyH,IACfmyB,EAAKsF,GAAKlqJ,KAAKyyH,IACfs3B,EAAKI,GAAKnqJ,KAAKyyH,IACXrtH,KAAKC,IAAIrF,KAAKmxJ,QAAU,IAAMptC,GAEhCstC,EAAMrxJ,KAAKoR,EAAIg5I,GAAKN,EAAI/M,EAAI6H,EAAImF,EAAIjmC,GACpCwtC,EAAKtxJ,KAAKoR,EAAIg5I,GAAKN,EAAI/M,EAAI6H,EAAImF,EAAIp3B,GACnCz9C,EAAEvvD,EAAI3lB,KAAKw1B,IAAM67H,EAAMC,GAAMlsJ,KAAKgxB,IAAIguH,GACtClvE,EAAEtvD,EAAI5lB,KAAKy1B,IAAM47H,EAAMC,GAAMlsJ,KAAK8wB,IAAIkuH,GAC/BlvE,GACE9vE,KAAKC,IAAIrF,KAAKmxJ,QAAU,IAAMptC,GAEvCstC,EAAMrxJ,KAAKoR,EAAIg5I,GAAKN,EAAI/M,EAAI6H,EAAImF,EAAIjmC,GACpCwtC,EAAKtxJ,KAAKoR,EAAIg5I,GAAKN,EAAI/M,EAAI6H,EAAImF,EAAIp3B,GACnCz9C,EAAEvvD,EAAI3lB,KAAKw1B,IAAM67H,EAAMC,GAAMlsJ,KAAKgxB,IAAIguH,GACtClvE,EAAEtvD,EAAI5lB,KAAKy1B,IAAM47H,EAAMC,GAAMlsJ,KAAK8wB,IAAIkuH,GAC/BlvE,GAGH9vE,KAAKC,IAAI2sC,GAAO+xE,GAAS3+G,KAAKC,IAAIstH,EAAM3yH,KAAK8lH,MAAQ/B,GACvD7uC,EAAEvvD,EAAIuvD,EAAEtvD,EAAI,EACLsvD,IAETu8E,ECjEC,SAAyB9hH,EAAMgiH,EAAM/hH,EAAMgiH,EAAMxgJ,EAAGi0B,GACzD,MAAMygH,EAAI8L,EAAOD,EACXE,EAAKzsJ,KAAK0lC,MAAM,EAAIzF,GAAKjgC,KAAK6kC,IAAI0F,IAClCmiH,EAAK1sJ,KAAK0lC,MAAM,EAAIzF,GAAKjgC,KAAK6kC,IAAI2F,IAClCmiH,EAAQ3sJ,KAAKgxB,IAAIy7H,GAAKG,EAAQ5sJ,KAAK8wB,IAAI27H,GACvCI,EAAQ7sJ,KAAKgxB,IAAI07H,GAAKI,EAAQ9sJ,KAAK8wB,IAAI47H,GAE7C,IAAgBK,EACZC,EAAWC,EAAWC,EAAUC,EAAUC,EAAOC,EAAUC,EAAWC,EAAYlX,EAClFmX,EAAK/Y,EAAGqG,EAAG2S,EAAYnsH,EAFvB4+G,EAASQ,EAAYgN,EAAY,IAIrC,EAAG,CAQD,GAPAV,EAAYhtJ,KAAKgxB,IAAIkvH,GACrB+M,EAAYjtJ,KAAK8wB,IAAIovH,GACrBgN,EAAWltJ,KAAKwX,KACbs1I,EAAQE,GAAcF,EAAQE,IAC5BJ,EAAQC,EAAQF,EAAQG,EAAQG,IAChCL,EAAQC,EAAQF,EAAQG,EAAQG,IAEpB,IAAbC,EACF,MAAO,CAAEZ,KAAM,EAAGqB,IAAK,GAEzBR,EAAWR,EAAQE,EAAQD,EAAQE,EAAQG,EAC3CG,EAAQptJ,KAAKkkC,MAAMgpH,EAAUC,GAC7BE,EAAWT,EAAQE,EAAQE,EAAYE,EACvCI,EAAY,EAAID,EAAWA,EAC3BE,EAA4B,IAAdD,EAAoBH,EAAW,EAAIR,EAAQE,EAAQS,EAAa,EAC9EjX,EAAIp2G,EAAI,GAAKqtH,GAAa,EAAIrtH,GAAK,EAAI,EAAIqtH,IAC3CP,EAAU7M,EACVA,EAASQ,GAAK,EAAIrK,GAAKp2G,EAAIotH,GACxBD,EAAQ/W,EAAI6W,GAAYK,EAAalX,EAAI8W,GAAiB,EAAII,EAAaA,EAArB,IAC3D,OAASvtJ,KAAKC,IAAIigJ,EAAS6M,GAAW,SAAWW,EAAY,GAE7D,OAAkB,IAAdA,EACK,CAAEpB,KAAM/sI,IAAKouI,IAAKpuI,MAG3BiuI,EAAMF,GAAathJ,EAAIA,EAAKA,GAAK,EAAIi0B,IAAOj0B,GAAK,EAAIi0B,MAASj0B,GAAK,EAAIi0B,IAAOj0B,GAAK,EAAIi0B,KACvFw0G,EAAI,EAAI+Y,EAAM,OAAS,KAAOA,GAAcA,GAAO,IAAM,IAAMA,GAAzB,MACtC1S,EAAI0S,EAAM,MAAQ,IAAMA,GAAcA,GAAO,GAAK,GAAKA,GAAvB,MAChCC,EAAa3S,EAAIoS,GAAYK,EAAazS,EAAI,GAAKqS,GAAiB,EAAII,EAAaA,EAArB,GAC5DzS,EAAI,EAAIyS,GAAmB,EAAIL,EAAWA,EAAnB,IAAqC,EAAIK,EAAaA,EAArB,KAE5DjsH,EAAKt1B,GAAK,EAAIi0B,GAAMw0G,GAAK2Y,EAAQK,GAK1B,CAAEnB,KAFItsJ,KAAKkkC,MAAM4oH,EAAQE,EAAWJ,EAAQC,EAAQF,EAAQG,EAAQG,GAE5DU,IAAKrsH,GACtB,CDgBassH,CAAgBhzJ,KAAK8lH,KAAM9lH,KAAKmmH,MAAOwM,EAAK3gF,EAAKhyC,KAAKoR,EAAGpR,KAAKqlC,GACrEqsH,EAAOD,EAAKC,KACZx8E,EAAEvvD,EAAI8rI,EAAKsB,IAAM3tJ,KAAKgxB,IAAIs7H,GAC1Bx8E,EAAEtvD,EAAI6rI,EAAKsB,IAAM3tJ,KAAK8wB,IAAIw7H,GACnBx8E,GAGb,EA+EEhlC,QA7EK,SAAiBglC,GAGtB,IAAI+uE,EAAIx6G,EAAGsjH,EAAMD,EAAM96G,EAAK2gF,EAAKb,EAAKg4B,EAAI/M,EAAI6H,EAAImF,EAAIsH,EAAQK,EAAMqB,EAAKtB,EACzE,GAHAv8E,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GAERz1B,KAAK+vH,OAAQ,CAEf,IADAk0B,EAAK7+I,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,IACzB,EAAIk+F,EAAU9jH,KAAKoR,EAC3B,OA0BF,OAxBAq4B,EAAIw6G,EAAKjkJ,KAAKoR,EAEd27I,EAAO3nJ,KAAKgxB,IAAIqT,GAChBqjH,EAAO1nJ,KAAK8wB,IAAIuT,GAEhBuI,EAAMhyC,KAAKmmH,MACP/gH,KAAKC,IAAI4+I,IAAOlgC,EAClB4O,EAAM3yH,KAAK8lH,MAEX6M,EAAMg7B,GAAMb,EAAO9sJ,KAAKmxJ,QAAWj8E,EAAEtvD,EAAImnI,EAAO/sJ,KAAKoxJ,QAAWnN,GAChEnyB,EAAM1sH,KAAKC,IAAIrF,KAAK8lH,MAAQhC,EAGxB9xE,EAFA5sC,KAAKC,IAAIysH,IAAQ/N,EACf/jH,KAAK8lH,MAAQ,EACT8M,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,GAAIuvD,EAAEtvD,IAE3CgtG,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,OAAO4rC,EAAEvvD,EAAGuvD,EAAEtvD,IAG7CgtG,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,EAAIonI,EAAM9I,EAAKjkJ,KAAKoxJ,QAAUtE,EAAO53E,EAAEtvD,EAAI5lB,KAAKmxJ,QAAUpE,KAIzG73E,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,CACT,CAKE,OAJA40E,EAAKE,GAAKhqJ,KAAKyyH,IACfsqB,EAAKkN,GAAKjqJ,KAAKyyH,IACfmyB,EAAKsF,GAAKlqJ,KAAKyyH,IACfs3B,EAAKI,GAAKnqJ,KAAKyyH,IACXrtH,KAAKC,IAAIrF,KAAKmxJ,QAAU,IAAMptC,GAKhC4O,EAAMg4B,KAHN0G,EAAMrxJ,KAAKoR,EAAIg5I,GAAKN,EAAI/M,EAAI6H,EAAImF,EAAIjmC,KACpCmgC,EAAK7+I,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,KAEnB5lB,KAAKoR,EAAG04I,EAAI/M,EAAI6H,EAAImF,GACpC/3G,EAAM4gF,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,GAAI,EAAIuvD,EAAEtvD,IACrDsvD,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,GACE9vE,KAAKC,IAAIrF,KAAKmxJ,QAAU,IAAMptC,GAEvCstC,EAAMrxJ,KAAKoR,EAAIg5I,GAAKN,EAAI/M,EAAI6H,EAAImF,EAAIjmC,GAIpC6O,EAAMg4B,KAHN1G,EAAK7+I,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,IAC1ByrI,GAEOrxJ,KAAKoR,EAAG04I,EAAI/M,EAAI6H,EAAImF,GACpC/3G,EAAM4gF,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,EAAGuvD,EAAEtvD,IAChDsvD,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,IAGPw8E,EAAOtsJ,KAAKkkC,MAAM4rC,EAAEvvD,EAAGuvD,EAAEtvD,GACzBmtI,EAAM3tJ,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,GACpC6rI,EC3EC,SAAwB9hH,EAAMgiH,EAAMD,EAAMqB,EAAK3hJ,EAAGi0B,GACvD,MAAMwsH,EAAKzsJ,KAAK0lC,MAAM,EAAIzF,GAAKjgC,KAAK6kC,IAAI0F,IAClCoiH,EAAQ3sJ,KAAKgxB,IAAIy7H,GAAKG,EAAQ5sJ,KAAK8wB,IAAI27H,GACvCoB,EAAY7tJ,KAAKgxB,IAAIs7H,GAAOwB,EAAY9tJ,KAAK8wB,IAAIw7H,GAEjDyB,EAAS/tJ,KAAKkkC,MAAMyoH,EAAOC,EAAQkB,GACnCT,EAAWT,EAAQiB,EACnBP,EAAY,EAAID,EAAWA,EAC3BG,EAAMF,GAAathJ,EAAIA,EAAKA,GAAK,EAAIi0B,IAAOj0B,GAAK,EAAIi0B,MAASj0B,GAAK,EAAIi0B,IAAOj0B,GAAK,EAAIi0B,KACvFw0G,EAAI,EAAI+Y,EAAM,OAAS,KAAOA,GAAcA,GAAO,IAAM,IAAMA,GAAzB,MACtC1S,EAAI0S,EAAM,MAAQ,IAAMA,GAAcA,GAAO,GAAK,GAAKA,GAAvB,MAEtC,IAAuCQ,EACnCT,EAAYL,EAAUC,EAAUM,EADhCL,EAAQO,GAAQ3hJ,GAAK,EAAIi0B,GAAMw0G,GAAYiZ,EAAY,IAG3D,GACEH,EAAavtJ,KAAK8wB,IAAI,EAAIi9H,EAASX,GACnCF,EAAWltJ,KAAKgxB,IAAIo8H,GACpBD,EAAWntJ,KAAK8wB,IAAIs8H,GACpBK,EAAa3S,EAAIoS,GAAYK,EAAazS,EAAI,GAAKqS,GAAiB,EAAII,EAAaA,EAArB,GAC5DzS,EAAI,EAAIyS,GAAmB,EAAIL,EAAWA,EAAnB,IAAqC,EAAIK,EAAaA,EAArB,KAC5DS,EAASZ,EACTA,EAAQO,GAAQ3hJ,GAAK,EAAIi0B,GAAMw0G,GAAKgZ,QAC7BztJ,KAAKC,IAAImtJ,EAAQY,GAAU,SAAWN,EAAY,GAE3D,GAAkB,IAAdA,EACF,MAAO,CAAEljH,KAAMjrB,IAAKitI,KAAMjtI,KAG5B,MAAMwc,EAAM4wH,EAAQO,EAAWN,EAAQO,EAAWW,EAS5CzX,EAAIp2G,EAAI,GAAKqtH,GAAa,EAAIrtH,GAAK,EAAI,EAAIqtH,IAKjD,MAAO,CAAE9iH,KAbIxqC,KAAKkkC,MAChByoH,EAAQQ,EAAWP,EAAQM,EAAWY,GACrC,EAAI7tH,GAAKjgC,KAAKwX,KAAK61I,EAAWA,EAAWtxH,EAAMA,IAWnCywH,KAFFD,GAPEvsJ,KAAKkkC,MAClBgpH,EAAWW,EACXjB,EAAQO,EAAWR,EAAQO,EAAWY,IAGpB,EAAIzX,GAAKp2G,EAAIotH,GAC5BD,EAAQ/W,EAAI6W,GAAYK,EAAalX,EAAI8W,GAAiB,EAAII,EAAaA,EAArB,MAI7D,CD+BaU,CAAerzJ,KAAK8lH,KAAM9lH,KAAKmmH,MAAOurC,EAAMqB,EAAK/yJ,KAAKoR,EAAGpR,KAAKqlC,GAErE6vC,EAAEvvD,EAAI8rI,EAAKG,KACX18E,EAAEtvD,EAAI6rI,EAAK7hH,KACJslC,EAGb,EAOEg5B,MALiB,CAAC,wBAAyB,SEvE7C,UACEskB,KAjFK,WAKLxyH,KAAK6tJ,QAAUzoJ,KAAKgxB,IAAIp2B,KAAK8lH,MAC7B9lH,KAAK8tJ,QAAU1oJ,KAAK8wB,IAAIl2B,KAAK8lH,KAC/B,EA2EE71E,QAvEK,SAAiBilC,GACtB,IAAI08C,EAAQC,EACRuyB,EACA4J,EAEA7kH,EAAGxjB,EAAGC,EACNosB,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAiBZ,OAdAw+H,EAAOxxB,EAAW5gF,EAAMhyC,KAAKmmH,OAE7ByL,EAASxsH,KAAKgxB,IAAIu8F,GAClBd,EAASzsH,KAAK8wB,IAAIy8F,GAElBq7B,EAAS5oJ,KAAK8wB,IAAIkuH,KAClBj7G,EAAInpC,KAAK6tJ,QAAUj8B,EAAS5xH,KAAK8tJ,QAAUj8B,EAASm8B,GAE3C,GAAO5oJ,KAAKC,IAAI8jC,IAAM46E,KAC7Bp+F,EAFI,EAEA3lB,KAAKoR,EAAUygH,EAASzsH,KAAKgxB,IAAIguH,GACrCx+H,EAAI5lB,KAAKy1B,GAHL,EAGUz1B,KAAKoR,GAAWpR,KAAK8tJ,QAAUl8B,EAAS5xH,KAAK6tJ,QAAUh8B,EAASm8B,IAEhF94E,EAAEvvD,EAAIA,EACNuvD,EAAEtvD,EAAIA,EACCsvD,CACT,EA+CEhlC,QA7CK,SAAiBglC,GACtB,IAAI+uE,EACAx6G,EACAsjH,EAAMD,EACNh7B,EACA9/E,EAAK2gF,EAYT,OATAz9C,EAAEvvD,GAAK3lB,KAAKw1B,GACZ0/C,EAAEtvD,GAAK5lB,KAAKy1B,GAEZgU,EAAIkkH,IADJ1J,EAAK7+I,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,IACpB5lB,KAAKoR,GAEpB27I,EAAO3nJ,KAAKgxB,IAAIqT,GAChBqjH,EAAO1nJ,KAAK8wB,IAAIuT,GAEhBuI,EAAMhyC,KAAKmmH,MACP/gH,KAAKC,IAAI4+I,IAAOlgC,GAClB4O,EAAM3yH,KAAK8lH,KACX5wC,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,IAETy9C,EAAMg7B,GAAMb,EAAO9sJ,KAAK6tJ,QAAW34E,EAAEtvD,EAAImnI,EAAO/sJ,KAAK8tJ,QAAW7J,GAChEnyB,EAAM1sH,KAAKC,IAAIrF,KAAK8lH,MAAQhC,EACxB1+G,KAAKC,IAAIysH,IAAQ/N,GAEjB/xE,EADEhyC,KAAK8lH,MAAQ,EACT8M,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAM4rC,EAAEvvD,GAAIuvD,EAAEtvD,IAE3CgtG,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,OAAO4rC,EAAEvvD,EAAGuvD,EAAEtvD,IAEnDsvD,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,IAETljC,EAAM4gF,EAAW5yH,KAAKmmH,MAAQ/gH,KAAKkkC,MAAO4rC,EAAEvvD,EAAIonI,EAAO9I,EAAKjkJ,KAAK8tJ,QAAUhB,EAAO53E,EAAEtvD,EAAI5lB,KAAK6tJ,QAAUd,IACvG73E,EAAEvvD,EAAIqsB,EACNkjC,EAAEtvD,EAAI+sG,EACCz9C,GACT,EAOEg5B,MALiB,CAAC,UC1EpB,IAAIolD,GACK,EADLA,GAEK,EAFLA,GAGI,EAHJA,GAII,EAJJA,GAKG,EALHA,GAMM,EAGNC,GACM,EADNA,GAEM,EAFNA,GAGM,EAHNA,GAIM,EAmTV,SAASC,GAAyBxhC,EAAKpsG,EAAGD,EAAGwP,GAC3C,IAAIwqB,EAmBJ,OAlBIqyE,EAAMjO,GACR5uF,EAAKxwB,MAAQ4uJ,GACb5zG,EAAQ,IAERA,EAAQv6C,KAAKkkC,MAAM1jB,EAAGD,GAClBvgB,KAAKC,IAAIs6C,IAAUukE,EACrB/uF,EAAKxwB,MAAQ4uJ,GACJ5zG,EAAQukE,GAAUvkE,GAASmkE,EAAUI,GAC9C/uF,EAAKxwB,MAAQ4uJ,GACb5zG,GAASmkE,GACAnkE,EAAQmkE,EAAUI,GAAUvkE,KAAWmkE,EAAUI,IAC1D/uF,EAAKxwB,MAAQ4uJ,GACb5zG,EAASA,GAAS,EAAMA,EAAQykE,EAAMzkE,EAAQykE,IAE9CjvF,EAAKxwB,MAAQ4uJ,GACb5zG,GAASmkE,IAGNnkE,CACT,CAGA,SAAS8zG,GAAqBzhH,EAAKxd,GACjC,IAAIk/H,EAAO1hH,EAAMxd,EAMjB,OALIk/H,GAAQtvC,EACVsvC,GAAQvvC,EACCuvC,GAAQtvC,IACjBsvC,GAAQvvC,GAEHuvC,CACT,CAGA,UACElhC,KAnVK,WACLxyH,KAAKw1B,GAAKx1B,KAAKw1B,IAAM,EACrBx1B,KAAKy1B,GAAKz1B,KAAKy1B,IAAM,EACrBz1B,KAAK8lH,KAAO9lH,KAAK8lH,MAAQ,EACzB9lH,KAAKmmH,MAAQnmH,KAAKmmH,OAAS,EAC3BnmH,KAAKimH,OAASjmH,KAAKimH,QAAU,EAC7BjmH,KAAK08B,MAAQ18B,KAAK08B,OAAS,mCAGvB18B,KAAK8lH,MAAQhC,EAAUI,EAAS,EAClClkH,KAAK2zJ,KAAOL,GACHtzJ,KAAK8lH,QAAUhC,EAAUI,EAAS,GAC3ClkH,KAAK2zJ,KAAOL,GACHluJ,KAAKC,IAAIrF,KAAKmmH,QAAUjC,EACjClkH,KAAK2zJ,KAAOL,GACHluJ,KAAKC,IAAIrF,KAAKmmH,QAAUrC,EAAUI,EAC3ClkH,KAAK2zJ,KAAO3zJ,KAAKmmH,MAAQ,EAAMmtC,GAAkBA,GAEjDtzJ,KAAK2zJ,KAAOL,GAKE,IAAZtzJ,KAAKyyH,KACPzyH,KAAK4zJ,YAAc,GAAK5zJ,KAAKoR,EAAIpR,KAAKqR,GAAKrR,KAAKoR,EAChDpR,KAAK6zJ,oBAAsB7zJ,KAAK4zJ,YAAc5zJ,KAAK4zJ,YAEvD,EAyTE3jH,QArTK,SAAiBilC,GACtB,IACIy9C,EAAK3gF,EACL2N,EAAOqyE,EACPr3D,EAAGjuB,EAHHonH,EAAK,CAAEnuI,EAAG,EAAGC,EAAG,GAKhBuP,EAAO,CAAExwB,MAAO,GAoBpB,GAjBAuwE,EAAEvvD,GAAK3lB,KAAKmmH,MAMVwM,EADc,IAAZ3yH,KAAKyyH,GACDrtH,KAAK0lC,KAAK9qC,KAAK6zJ,oBAAsBzuJ,KAAK6kC,IAAIirC,EAAEtvD,IAEhDsvD,EAAEtvD,EAQVosB,EAAMkjC,EAAEvvD,EACJ3lB,KAAK2zJ,OAASL,GAChBthC,EAAMlO,EAAU6O,EACZ3gF,GAAOkyE,GAAUlyE,GAAO8xE,EAAUI,GACpC/uF,EAAKxwB,MAAQ4uJ,GACb5zG,EAAQ3N,EAAM8xE,GACL9xE,EAAM8xE,EAAUI,GAAUlyE,KAAS8xE,EAAUI,IACtD/uF,EAAKxwB,MAAQ4uJ,GACb5zG,EAAS3N,EAAM,EAAMA,EAAMoyE,EAAMpyE,EAAMoyE,GAC9BpyE,IAAQ8xE,EAAUI,IAAWlyE,IAAQkyE,GAC9C/uF,EAAKxwB,MAAQ4uJ,GACb5zG,EAAQ3N,EAAM8xE,IAEd3uF,EAAKxwB,MAAQ4uJ,GACb5zG,EAAQ3N,QAEL,GAAIhyC,KAAK2zJ,OAASL,GACvBthC,EAAMlO,EAAU6O,EACZ3gF,GAAOkyE,GAAUlyE,GAAO8xE,EAAUI,GACpC/uF,EAAKxwB,MAAQ4uJ,GACb5zG,GAAS3N,EAAM8xE,GACN9xE,EAAMkyE,GAAUlyE,IAAQkyE,GACjC/uF,EAAKxwB,MAAQ4uJ,GACb5zG,GAAS3N,GACAA,GAAOkyE,GAAUlyE,KAAS8xE,EAAUI,IAC7C/uF,EAAKxwB,MAAQ4uJ,GACb5zG,GAAS3N,EAAM8xE,IAEf3uF,EAAKxwB,MAAQ4uJ,GACb5zG,EAAS3N,EAAM,GAAOA,EAAMoyE,GAAOpyE,EAAMoyE,OAEtC,CACL,IAAIh7E,EAAGF,EAAGxC,EACNw9G,EAAQC,EACR4P,EAEA/zJ,KAAK2zJ,OAASL,GAChBthH,EAAMyhH,GAAqBzhH,GAAM8xE,GACxB9jH,KAAK2zJ,OAASL,GACvBthH,EAAMyhH,GAAqBzhH,GAAMoyE,GACxBpkH,KAAK2zJ,OAASL,KACvBthH,EAAMyhH,GAAqBzhH,GAAM8xE,IAEnCogC,EAAS9+I,KAAKgxB,IAAIu8F,GAClBwxB,EAAS/+I,KAAK8wB,IAAIy8F,GAClBohC,EAAS3uJ,KAAKgxB,IAAI4b,GAElB5I,EAAI+6G,EADK/+I,KAAK8wB,IAAI8b,GAElB9I,EAAIi7G,EAAS4P,EACbrtH,EAAIw9G,EAEAlkJ,KAAK2zJ,OAASL,GAEhB3zG,EAAQ6zG,GADRxhC,EAAM5sH,KAAKwtE,KAAKxpC,GACsB1C,EAAGwC,EAAG/T,GACnCn1B,KAAK2zJ,OAASL,GAEvB3zG,EAAQ6zG,GADRxhC,EAAM5sH,KAAKwtE,KAAK1pC,GACsBxC,GAAI0C,EAAGjU,GACpCn1B,KAAK2zJ,OAASL,GAEvB3zG,EAAQ6zG,GADRxhC,EAAM5sH,KAAKwtE,MAAMxpC,GACqB1C,GAAIwC,EAAG/T,GACpCn1B,KAAK2zJ,OAASL,GAEvB3zG,EAAQ6zG,GADRxhC,EAAM5sH,KAAKwtE,MAAM1pC,GACqBxC,EAAG0C,EAAGjU,IAG5C68F,EAAMryE,EAAQ,EACdxqB,EAAKxwB,MAAQ4uJ,GAEjB,CAyBA,OApBA7mH,EAAKtnC,KAAK0lC,KAAM,GAAKs5E,GAAQzkE,EAAQv6C,KAAKwtE,KAAKxtE,KAAKgxB,IAAIupB,GAASv6C,KAAK8wB,IAAIguF,IAAWJ,IACrFnpD,EAAIv1D,KAAKwX,MAAM,EAAIxX,KAAK8wB,IAAI87F,KAAS5sH,KAAK8wB,IAAIwW,GAAMtnC,KAAK8wB,IAAIwW,KAAQ,EAAItnC,KAAK8wB,IAAI9wB,KAAK0lC,KAAK,EAAI1lC,KAAK8wB,IAAIypB,OAGrGxqB,EAAKxwB,QAAU4uJ,GACjB7mH,GAAMo3E,EACG3uF,EAAKxwB,QAAU4uJ,GACxB7mH,GAAM03E,EACGjvF,EAAKxwB,QAAU4uJ,KACxB7mH,GAAM,IAAM03E,GAId0vC,EAAGnuI,EAAIg1C,EAAIv1D,KAAK8wB,IAAIwW,GACpBonH,EAAGluI,EAAI+0C,EAAIv1D,KAAKgxB,IAAIsW,GACpBonH,EAAGnuI,EAAImuI,EAAGnuI,EAAI3lB,KAAKoR,EAAIpR,KAAKw1B,GAC5Bs+H,EAAGluI,EAAIkuI,EAAGluI,EAAI5lB,KAAKoR,EAAIpR,KAAKy1B,GAE5By/C,EAAEvvD,EAAImuI,EAAGnuI,EACTuvD,EAAEtvD,EAAIkuI,EAAGluI,EACFsvD,CACT,EA+LEhlC,QA3LK,SAAiBglC,GACtB,IACIxoC,EAAIsnH,EAAIC,EAAOC,EACfC,EAAUx0G,EAAOkyE,EAAQG,EACzBr3D,EA8HEy5F,EACA/F,EAAQgG,EAlIVC,EAAK,CAAEjK,IAAK,EAAGr4B,IAAK,GAIpB78F,EAAO,CAAExwB,MAAO,GA4CpB,GAzCAuwE,EAAEvvD,GAAKuvD,EAAEvvD,EAAI3lB,KAAKw1B,IAAMx1B,KAAKoR,EAC7B8jE,EAAEtvD,GAAKsvD,EAAEtvD,EAAI5lB,KAAKy1B,IAAMz1B,KAAKoR,EAI7B4iJ,EAAK5uJ,KAAK0lC,KAAK1lC,KAAKwX,KAAKs4D,EAAEvvD,EAAIuvD,EAAEvvD,EAAIuvD,EAAEtvD,EAAIsvD,EAAEtvD,IAC7C8mB,EAAKtnC,KAAKkkC,MAAM4rC,EAAEtvD,EAAGsvD,EAAEvvD,GACnBuvD,EAAEvvD,GAAK,GAAOuvD,EAAEvvD,GAAKvgB,KAAKC,IAAI6vE,EAAEtvD,GAClCuP,EAAKxwB,MAAQ4uJ,GACJr+E,EAAEtvD,GAAK,GAAOsvD,EAAEtvD,GAAKxgB,KAAKC,IAAI6vE,EAAEvvD,IACzCwP,EAAKxwB,MAAQ4uJ,GACb7mH,GAAMo3E,GACG5uC,EAAEvvD,EAAI,IAAQuvD,EAAEvvD,GAAKvgB,KAAKC,IAAI6vE,EAAEtvD,IACzCuP,EAAKxwB,MAAQ4uJ,GACb7mH,EAAMA,EAAK,EAAMA,EAAK03E,EAAM13E,EAAK03E,IAEjCjvF,EAAKxwB,MAAQ4uJ,GACb7mH,GAAMo3E,GAQRnpD,EAAKypD,EAAM,GAAMh/G,KAAK6kC,IAAIyC,GAC1BynH,EAAW/uJ,KAAKgxB,IAAIukC,IAAMv1D,KAAK8wB,IAAIykC,GAAM,EAAIv1D,KAAKwX,KAAK,IACvD+iC,EAAQv6C,KAAK0lC,KAAKqpH,IAGlBtiC,EAAS,GAFToiC,EAAQ7uJ,KAAK8wB,IAAIwW,IAEIunH,GADrBC,EAAQ9uJ,KAAK6kC,IAAI+pH,IACoBE,GAAS,EAAI9uJ,KAAK8wB,IAAI9wB,KAAK0lC,KAAK,EAAI1lC,KAAK8wB,IAAIypB,QACpE,EACZkyE,GAAU,EACDA,EAAS,IAClBA,EAAS,GAOP7xH,KAAK2zJ,OAASL,GAChBthC,EAAM5sH,KAAKwtE,KAAKi/C,GAChByiC,EAAGtiC,IAAMlO,EAAUkO,EACf78F,EAAKxwB,QAAU4uJ,GACjBe,EAAGjK,IAAM1qG,EAAQmkE,EACR3uF,EAAKxwB,QAAU4uJ,GACxBe,EAAGjK,IAAO1qG,EAAQ,EAAMA,EAAQykE,EAAMzkE,EAAQykE,EACrCjvF,EAAKxwB,QAAU4uJ,GACxBe,EAAGjK,IAAM1qG,EAAQmkE,EAEjBwwC,EAAGjK,IAAM1qG,OAEN,GAAI3/C,KAAK2zJ,OAASL,GACvBthC,EAAM5sH,KAAKwtE,KAAKi/C,GAChByiC,EAAGtiC,IAAMA,EAAMlO,EACX3uF,EAAKxwB,QAAU4uJ,GACjBe,EAAGjK,KAAO1qG,EAAQmkE,EACT3uF,EAAKxwB,QAAU4uJ,GACxBe,EAAGjK,KAAO1qG,EACDxqB,EAAKxwB,QAAU4uJ,GACxBe,EAAGjK,KAAO1qG,EAAQmkE,EAElBwwC,EAAGjK,IAAO1qG,EAAQ,GAAOA,EAAQykE,GAAOzkE,EAAQykE,MAE7C,CAEL,IAAIh7E,EAAGF,EAAGxC,EAEVi0B,GADAvxB,EAAIyoF,GACIzoF,EAQNF,GAFFyxB,IAJEj0B,EADEi0B,GAAK,EACH,EAEAv1D,KAAKwX,KAAK,EAAI+9C,GAAKv1D,KAAKgxB,IAAIupB,IAEzBjZ,IACA,EACH,EAEAthC,KAAKwX,KAAK,EAAI+9C,GAGhBxlC,EAAKxwB,QAAU4uJ,IACjB54F,EAAIzxB,EACJA,GAAKxC,EACLA,EAAIi0B,GACKxlC,EAAKxwB,QAAU4uJ,IACxBrqH,GAAKA,EACLxC,GAAKA,GACIvR,EAAKxwB,QAAU4uJ,KACxB54F,EAAIzxB,EACJA,EAAIxC,EACJA,GAAKi0B,GAGH36D,KAAK2zJ,OAASL,IAChB34F,EAAIvxB,EACJA,GAAKF,EACLA,EAAIyxB,GACK36D,KAAK2zJ,OAASL,IACvBlqH,GAAKA,EACLF,GAAKA,GACIlpC,KAAK2zJ,OAASL,KACvB34F,EAAIvxB,EACJA,EAAIF,EACJA,GAAKyxB,GAGP25F,EAAGtiC,IAAM5sH,KAAKwtE,MAAMlsC,GAAKo9E,EACzBwwC,EAAGjK,IAAMjlJ,KAAKkkC,MAAMJ,EAAGE,GACnBppC,KAAK2zJ,OAASL,GAChBgB,EAAGjK,IAAMoJ,GAAqBa,EAAGjK,KAAMvmC,GAC9B9jH,KAAK2zJ,OAASL,GACvBgB,EAAGjK,IAAMoJ,GAAqBa,EAAGjK,KAAMjmC,GAC9BpkH,KAAK2zJ,OAASL,KACvBgB,EAAGjK,IAAMoJ,GAAqBa,EAAGjK,KAAMvmC,GAE3C,CAmBA,OAfgB,IAAZ9jH,KAAKyyH,KAGP2hC,EAAeE,EAAGtiC,IAAM,EAAI,EAAI,EAChCq8B,EAASjpJ,KAAK6kC,IAAIqqH,EAAGtiC,KACrBqiC,EAAKr0J,KAAKqR,EAAIjM,KAAKwX,KAAKyxI,EAASA,EAASruJ,KAAK6zJ,qBAC/CS,EAAGtiC,IAAM5sH,KAAK0lC,KAAK1lC,KAAKwX,KAAK5c,KAAKoR,EAAIpR,KAAKoR,EAAIijJ,EAAKA,IAAOr0J,KAAK4zJ,YAAcS,IAC1ED,IACFE,EAAGtiC,KAAOsiC,EAAGtiC,MAIjBsiC,EAAGjK,KAAOrqJ,KAAKmmH,MACfjxC,EAAEvvD,EAAI2uI,EAAGjK,IACTn1E,EAAEtvD,EAAI0uI,EAAGtiC,IACF98C,CACT,EA2CEg5B,MALiB,CAAC,mCAAoC,mCAAoC,QC3W5F,IAAIqmD,GAAU,CACZ,CAAC,EAAQ,WAAa,WAAa,WACnC,CAAC,OAAS,WAAc,UAAa,WACrC,CAAC,OAAS,UAAa,YAAc,YACrC,CAAC,KAAS,WAAa,SAAY,WACnC,CAAC,OAAS,WAAa,YAAc,YACrC,CAAC,MAAS,WAAa,WAAa,WACpC,CAAC,KAAS,WAAa,WAAa,YACpC,CAAC,OAAS,WAAa,YAAc,WACrC,CAAC,OAAS,WAAa,SAAY,YACnC,CAAC,OAAS,WAAa,YAAc,YACrC,CAAC,OAAS,WAAa,UAAa,YACpC,CAAC,MAAS,WAAa,WAAa,YACpC,CAAC,OAAS,WAAa,WAAa,YACpC,CAAC,OAAS,WAAa,UAAa,YACpC,CAAC,OAAS,WAAa,YAAc,WACrC,CAAC,OAAS,WAAa,UAAa,YACpC,CAAC,OAAS,QAAU,WAAa,YACjC,CAAC,OAAS,UAAY,OAAU,YAChC,CAAC,OAAS,UAAY,UAAa,aAGjCC,GAAU,CACZ,EAAE,WAAa,MAAQ,YAAc,YACrC,CAAC,KAAQ,OAAS,WAAa,aAC/B,CAAC,KAAQ,MAAQ,YAAc,YAC/B,CAAC,KAAQ,UAAY,WAAa,YAClC,CAAC,KAAQ,SAAW,YAAc,SAClC,CAAC,IAAQ,UAAY,WAAa,YAClC,CAAC,KAAQ,SAAW,YAAc,YAClC,CAAC,KAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,SAAW,YAAc,YAClC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,YAAc,YACnC,CAAC,MAAQ,UAAY,UAAa,YAClC,CAAC,MAAQ,WAAa,UAAa,SACnC,CAAC,MAAQ,WAAa,WAAc,WACpC,CAAC,MAAQ,WAAa,QAAW,WACjC,CAAC,EAAQ,WAAa,WAAc,YAGlCC,GAAM,MACNC,GAAM,OACNhY,GAAKz4B,EAAM,EACX0wC,GAAM,EAAIjY,GACVkY,GAAQ,GAERC,GAAY,SAAUC,EAAOnvI,GAC/B,OAAOmvI,EAAM,GAAKnvI,GAAKmvI,EAAM,GAAKnvI,GAAKmvI,EAAM,GAAKnvI,EAAImvI,EAAM,IAC9D,EAgGA,UACEtiC,KA/EK,WACLxyH,KAAKw1B,GAAKx1B,KAAKw1B,IAAM,EACrBx1B,KAAKy1B,GAAKz1B,KAAKy1B,IAAM,EACrBz1B,KAAKmmH,MAAQnmH,KAAKmmH,OAAS,EAC3BnmH,KAAKyyH,GAAK,EACVzyH,KAAK08B,MAAQ18B,KAAK08B,OAAS,UAC7B,EA0EEuT,QAxEK,SAAiBghG,GACtB,IAAIj/F,EAAM4gF,EAAWqe,EAAGtrH,EAAI3lB,KAAKmmH,OAE7BgM,EAAO/sH,KAAKC,IAAI4rI,EAAGrrH,GACnBxe,EAAIhC,KAAKmyB,MAAM46F,EAAOuqB,IACtBt1I,EAAI,EACNA,EAAI,EACKA,GAAKwtJ,KACdxtJ,EAAIwtJ,IAGN,IAAId,EAAK,CACPnuI,EAAGkvI,GAAUN,GAAQntJ,GAFvB+qH,EAAOlO,GAAOkO,EAAOwiC,GAAMvtJ,IAEQ4qC,EACjCpsB,EAAGivI,GAAUL,GAAQptJ,GAAI+qH,IAQ3B,OANI8e,EAAGrrH,EAAI,IACTkuI,EAAGluI,GAAKkuI,EAAGluI,GAGbkuI,EAAGnuI,EAAImuI,EAAGnuI,EAAI3lB,KAAKoR,EAAIqjJ,GAAMz0J,KAAKw1B,GAClCs+H,EAAGluI,EAAIkuI,EAAGluI,EAAI5lB,KAAKoR,EAAIsjJ,GAAM10J,KAAKy1B,GAC3Bq+H,CACT,EAmDE5jH,QAjDK,SAAiB4jH,GACtB,IAAI7iB,EAAK,CACPtrH,GAAImuI,EAAGnuI,EAAI3lB,KAAKw1B,KAAOx1B,KAAKoR,EAAIqjJ,IAChC7uI,EAAGxgB,KAAKC,IAAIyuJ,EAAGluI,EAAI5lB,KAAKy1B,KAAOz1B,KAAKoR,EAAIsjJ,KAG1C,GAAIzjB,EAAGrrH,GAAK,EACVqrH,EAAGtrH,GAAK4uI,GAAQK,IAAO,GACvB3jB,EAAGrrH,EAAIkuI,EAAGluI,EAAI,GAAKk+F,EAAUA,MACxB,CAEL,IAAI18G,EAAIhC,KAAKmyB,MAAM05G,EAAGrrH,EAAIgvI,IAM1B,IALIxtJ,EAAI,EACNA,EAAI,EACKA,GAAKwtJ,KACdxtJ,EAAIwtJ,MAGJ,GAAIJ,GAAQptJ,GAAG,GAAK6pI,EAAGrrH,IACnBxe,MACG,MAAIotJ,GAAQptJ,EAAI,GAAG,IAAM6pI,EAAGrrH,GAGjC,QAFExe,CAGJ,CAGF,IAAI0tJ,EAAQN,GAAQptJ,GAChBuzD,EAAI,GAAKs2E,EAAGrrH,EAAIkvI,EAAM,KAAON,GAAQptJ,EAAI,GAAG,GAAK0tJ,EAAM,IAE3Dn6F,EA1EJ,SAAwBo6F,EAAMp+H,EAAOq+H,EAASC,GAE5C,IADA,IAAItvI,EAAIgR,EACDs+H,IAASA,EAAO,CACrB,IAAIC,EAAMH,EAAKpvI,GAEf,GADAA,GAAKuvI,EACD9vJ,KAAKC,IAAI6vJ,GAAOF,EAClB,KAEJ,CACA,OAAOrvI,CACT,CAgEQwvI,EAAe,SAAUxvI,GAC3B,OAAQkvI,GAAUC,EAAOnvI,GAAKsrH,EAAGrrH,GA/EvB,SAAUkvI,EAAOnvI,GAC/B,OAAOmvI,EAAM,GAAKnvI,GAAK,EAAImvI,EAAM,GAAS,EAAJnvI,EAAQmvI,EAAM,GACtD,CA6E4CM,CAAUN,EAAOnvI,EACzD,GAAGg1C,EAAGopD,EAAO,KAEbktB,EAAGtrH,GAAKkvI,GAAUN,GAAQntJ,GAAIuzD,GAC9Bs2E,EAAGrrH,GAAK,EAAIxe,EAAIuzD,GAAKqpD,EACjB8vC,EAAGluI,EAAI,IACTqrH,EAAGrrH,GAAKqrH,EAAGrrH,EAEf,CAGA,OADAqrH,EAAGtrH,EAAIitG,EAAWqe,EAAGtrH,EAAI3lB,KAAKmmH,OACvB8qB,CACT,EAOE/iC,MALiB,CAAC,WAAY,UCtIhC,UACEskB,KAhBK,WACLxyH,KAAK6nD,KAAO,SACd,EAeE5X,QAbK,SAAiBilC,GAEtB,OADY++D,GAAqB/+D,EAAGl1E,KAAKyyH,GAAIzyH,KAAKoR,EAEpD,EAWE8+B,QATK,SAAiBglC,GAEtB,OADYu/D,GAAqBv/D,EAAGl1E,KAAKyyH,GAAIzyH,KAAKoR,EAAGpR,KAAKqR,EAE5D,EAOE68F,MALiB,CAAC,aAAc,aAAc,UAAW,YCI3D,IAAIs9C,GACM,EADNA,GAEM,EAFNA,GAGK,EAHLA,GAIK,EAGL9lC,GAAS,CACXr8E,EAAG,CAAE0xE,IAAK,IAAQ09B,KAAK,GACvB4c,IAAK,CAAEt6C,IAAK,EAAG09B,KAAK,EAAM71E,SAAS,GACnC0yF,KAAM,CAAEv6C,IAAK,EAAG09B,KAAK,EAAM71E,SAAS,GACpCujD,MAAO,CAAEpL,IAAK,EAAG09B,KAAK,GACtB3yB,KAAM,CAAE/K,IAAK,EAAG09B,KAAK,IAoJvB,UACEjmB,KAjJK,WA0BL,GAzBAzuH,OAAO2uB,KAAKgzF,IAAQrhH,QAAQ,SAAU6wE,GACpC,GAAuB,qBAAZl1E,KAAKk1E,GACdl1E,KAAKk1E,GAAKwwC,GAAOxwC,GAAG6lC,QACf,IAAI2K,GAAOxwC,GAAGujE,KAAO33H,MAAM9gB,KAAKk1E,IACrC,MAAM,IAAI3/C,MAAM,4CAA8C2/C,EAAI,MAAQl1E,KAAKk1E,IACtEwwC,GAAOxwC,GAAGujE,MACnBz4I,KAAKk1E,GAAKrzD,WAAW7hB,KAAKk1E,IAC5B,CACIwwC,GAAOxwC,GAAGtS,UACZ5iE,KAAKk1E,GAAKl1E,KAAKk1E,GAAK8uC,EAExB,EAAE3hH,KAAKrC,OAEHoF,KAAKC,IAAKD,KAAKC,IAAIrF,KAAK8lH,MAAQhC,GAAYC,EAC9C/jH,KAAKwrJ,KAAOxrJ,KAAK8lH,KAAO,EAAI0lC,GAAcA,GACjCpmJ,KAAKC,IAAIrF,KAAK8lH,MAAQ/B,EAC/B/jH,KAAKwrJ,KAAOA,IAEZxrJ,KAAKwrJ,KAAOA,GACZxrJ,KAAK+lJ,OAAS3gJ,KAAKgxB,IAAIp2B,KAAK8lH,MAC5B9lH,KAAK2lJ,OAASvgJ,KAAK8wB,IAAIl2B,KAAK8lH,OAG9B9lH,KAAKu1J,IAAMv1J,KAAKqpC,EAAIrpC,KAAKoR,EAErBpR,KAAKu1J,KAAO,GAAKv1J,KAAKu1J,IAAM,KAC9B,MAAM,IAAIhgI,MAAM,kBAGlBv1B,KAAKk1E,EAAI,EAAIl1E,KAAKu1J,IAClBv1J,KAAKw1J,GAAK,EAAIx1J,KAAKk1E,EACnBl1E,KAAKogJ,GAAK,EAAIpgJ,KAAKu1J,IACnBv1J,KAAKy1J,OAASz1J,KAAKk1E,EAAI,GAAKl1E,KAAKogJ,GACjCpgJ,KAAKyyH,GAAK,EAEV,IAAIijC,EAAQ11J,KAAKs1J,KACb9uC,EAAQxmH,KAAKq1J,IACjBr1J,KAAK21J,GAAKvwJ,KAAK8wB,IAAIswF,GACnBxmH,KAAK41J,GAAKxwJ,KAAKgxB,IAAIowF,GACnBxmH,KAAK61J,GAAKzwJ,KAAK8wB,IAAIw/H,GACnB11J,KAAK81J,GAAK1wJ,KAAKgxB,IAAIs/H,EACrB,EAwGEzlH,QAtGK,SAAiBilC,GACtBA,EAAEvvD,GAAK3lB,KAAKmmH,MACZ,IAGIxgG,EAAGC,EAkCHmwI,EAAIC,EArCJpkC,EAASxsH,KAAKgxB,IAAI8+C,EAAEtvD,GACpBisG,EAASzsH,KAAK8wB,IAAIg/C,EAAEtvD,GACpBwmI,EAAShnJ,KAAK8wB,IAAIg/C,EAAEvvD,GAExB,OAAQ3lB,KAAKwrJ,MACX,KAAKA,GACH5lI,EAAI5lB,KAAK+lJ,OAASn0B,EAAS5xH,KAAK2lJ,OAAS9zB,EAASu6B,EAClD,MACF,KAAKZ,GACH5lI,EAAIisG,EAASu6B,EACb,MACF,KAAKZ,GACH5lI,GAAKgsG,EACL,MACF,KAAK45B,GACH5lI,EAAIgsG,EAMR,OAFAjsG,GADAC,EAAI5lB,KAAKu1J,KAAOv1J,KAAKk1E,EAAItvD,IACjBisG,EAASzsH,KAAKgxB,IAAI8+C,EAAEvvD,GAEpB3lB,KAAKwrJ,MACX,KAAKA,GACH5lI,GAAK5lB,KAAK2lJ,OAAS/zB,EAAS5xH,KAAK+lJ,OAASl0B,EAASu6B,EACnD,MACF,KAAKZ,GACH5lI,GAAKgsG,EACL,MACF,KAAK45B,GACH5lI,IAAOisG,EAASu6B,EAChB,MACF,KAAKZ,GACH5lI,GAAKisG,EAASu6B,EAalB,OANA4J,EAAK,IADLD,EAAKnwI,EAAI5lB,KAAK21J,GAAKhwI,EAAI3lB,KAAK41J,IACb51J,KAAK81J,GAAK91J,KAAKogJ,GAAKpgJ,KAAK61J,IACxClwI,GAAKA,EAAI3lB,KAAK21J,GAAK/vI,EAAI5lB,KAAK41J,IAAM51J,KAAK61J,GAAKG,EAC5CpwI,EAAImwI,EAAKC,EAET9gF,EAAEvvD,EAAIA,EAAI3lB,KAAKoR,EACf8jE,EAAEtvD,EAAIA,EAAI5lB,KAAKoR,EACR8jE,CACT,EAuDEhlC,QArDK,SAAiBglC,GACtBA,EAAEvvD,GAAK3lB,KAAKoR,EACZ8jE,EAAEtvD,GAAK5lB,KAAKoR,EACZ,IAGI6kJ,EAAIC,EAAIH,EAHR7sH,EAAI,CAAEvjB,EAAGuvD,EAAEvvD,EAAGC,EAAGsvD,EAAEtvD,GAIvBmwI,EAAK,GAAK/1J,KAAKu1J,IAAMrgF,EAAEtvD,EAAI5lB,KAAK81J,IAChCG,EAAKj2J,KAAKu1J,IAAMrgF,EAAEvvD,EAAIowI,EACtBG,EAAKl2J,KAAKu1J,IAAMrgF,EAAEtvD,EAAI5lB,KAAK61J,GAAKE,EAChC7gF,EAAEvvD,EAAIswI,EAAKj2J,KAAK21J,GAAKO,EAAKl2J,KAAK41J,GAC/B1gF,EAAEtvD,EAAIswI,EAAKl2J,KAAK21J,GAAKM,EAAKj2J,KAAK41J,GAE/B,IAAI3R,EAAKjE,GAAM9qE,EAAEvvD,EAAGuvD,EAAEtvD,GACtB,GAAIxgB,KAAKC,IAAI4+I,GAAMlgC,EACjB76E,EAAEvjB,EAAI,EACNujB,EAAEtjB,EAAIsvD,EAAEtvD,MACH,CACL,IAAIknI,EAAMC,EAIV,OAHAA,EAAO,EAAI9I,EAAKA,EAAKjkJ,KAAKy1J,MAC1B1I,GAAQ/sJ,KAAKk1E,EAAI9vE,KAAKwX,KAAKmwI,KAAU/sJ,KAAKu1J,IAAMtR,EAAKA,EAAKjkJ,KAAKu1J,KAC/DzI,EAAO1nJ,KAAKwX,KAAK,EAAImwI,EAAOA,GACpB/sJ,KAAKwrJ,MACX,KAAKA,GACHtiH,EAAEtjB,EAAIxgB,KAAK06I,KAAKgN,EAAO9sJ,KAAK+lJ,OAAS7wE,EAAEtvD,EAAImnI,EAAO/sJ,KAAK2lJ,OAAS1B,GAChE/uE,EAAEtvD,GAAKknI,EAAO9sJ,KAAK+lJ,OAAS3gJ,KAAKgxB,IAAI8S,EAAEtjB,IAAMq+H,EAC7C/uE,EAAEvvD,GAAKonI,EAAO/sJ,KAAK2lJ,OACnB,MACF,KAAK6F,GACHtiH,EAAEtjB,EAAIxgB,KAAK06I,KAAK5qE,EAAEtvD,EAAImnI,EAAO9I,GAC7B/uE,EAAEtvD,EAAIknI,EAAO7I,EACb/uE,EAAEvvD,GAAKonI,EACP,MACF,KAAKvB,GACHtiH,EAAEtjB,EAAIxgB,KAAK06I,KAAKgN,GAChB53E,EAAEtvD,GAAKsvD,EAAEtvD,EACT,MACF,KAAK4lI,GACHtiH,EAAEtjB,GAAKxgB,KAAK06I,KAAKgN,GAGrB5jH,EAAEvjB,EAAIvgB,KAAKkkC,MAAM4rC,EAAEvvD,EAAGuvD,EAAEtvD,EAC1B,CAIA,OAFAsvD,EAAEvvD,EAAIujB,EAAEvjB,EAAI3lB,KAAKmmH,MACjBjxC,EAAEtvD,EAAIsjB,EAAEtjB,EACDsvD,CACT,EAOEg5B,MALiB,CAAC,qBAAsB,UCd1C,UACEskB,KAvJK,WAKL,GAJAxyH,KAAKm2J,UAA4B,MAAfn2J,KAAKo2J,MAAgB,EAAI,EAC3Cp2J,KAAKqpC,EAAIrjB,OAAOhmB,KAAKqpC,GACrBrpC,KAAKq2J,WAAar2J,KAAKqpC,EAAIrpC,KAAKoR,EAE5BpR,KAAKq2J,YAAc,GAAKr2J,KAAKq2J,WAAa,KAC5C,MAAM,IAAI9gI,MAMZ,GAHAv1B,KAAKs2J,SAAW,EAAMt2J,KAAKq2J,WAC3Br2J,KAAKy7I,EAAIz7I,KAAKs2J,SAAWt2J,KAAKs2J,SAAW,EAEzB,IAAZt2J,KAAKyyH,GAAY,CACnB,IAAIs0B,EAAS,EAAM/mJ,KAAKyyH,GACpB8jC,EAAU,EAAIxP,EAElB/mJ,KAAKw2J,SAAWpxJ,KAAKwX,KAAKmqI,GAC1B/mJ,KAAKy2J,UAAY1P,EACjB/mJ,KAAK02J,cAAgBH,EAErBv2J,KAAKi4G,MAAQ,SACf,MACEj4G,KAAKw2J,SAAW,EAChBx2J,KAAKy2J,UAAY,EACjBz2J,KAAK02J,cAAgB,EAErB12J,KAAKi4G,MAAQ,SAGVj4G,KAAK08B,QACR18B,KAAK08B,MAAQ,+BAEjB,EAwHEuT,QAtHF,SAAiBilC,GACf,IAEI/zC,EAAKw1H,EAAKC,EAAKC,EAFf7kH,EAAMkjC,EAAEvvD,EACRgtG,EAAMz9C,EAAEtvD,EAIZ,GAFAosB,GAAYhyC,KAAKmmH,MAEE,YAAfnmH,KAAKi4G,MAAqB,CAC5B0a,EAAMvtH,KAAK0lC,KAAK9qC,KAAKy2J,UAAYrxJ,KAAK6kC,IAAI0oF,IAC1C,IAAIzpF,EAAIlpC,KAAKw2J,SAAWxW,GAAMhgJ,KAAKw2J,SAAWpxJ,KAAK8wB,IAAIy8F,GAAMvtH,KAAKgxB,IAAIu8F,IAMtE,GAJAgkC,EAAMztH,EAAI9jC,KAAK8wB,IAAI8b,GAAO5sC,KAAK8wB,IAAIy8F,GACnCikC,EAAM1tH,EAAI9jC,KAAKgxB,IAAI4b,GAAO5sC,KAAK8wB,IAAIy8F,GACnCkkC,EAAM3tH,EAAI9jC,KAAKgxB,IAAIu8F,IAEb3yH,KAAKs2J,SAAWK,GAAOA,EAAMC,EAAMA,EAAMC,EAAMA,EAAM72J,KAAK02J,cAAiB,EAG/E,OAFAxhF,EAAEvvD,EAAIK,OAAOrB,IACbuwD,EAAEtvD,EAAII,OAAOrB,IACNuwD,EAGT/zC,EAAMnhC,KAAKs2J,SAAWK,EAClB32J,KAAKm2J,WACPjhF,EAAEvvD,EAAI3lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK8rH,EAAM5W,GAAM6W,EAAK11H,IACnD+zC,EAAEtvD,EAAI5lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK+rH,EAAM11H,KAExC+zC,EAAEvvD,EAAI3lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK8rH,EAAMz1H,GACxC+zC,EAAEtvD,EAAI5lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK+rH,EAAM7W,GAAM4W,EAAKz1H,IAEvD,KAA0B,WAAfnhC,KAAKi4G,QACd92E,EAAM/7B,KAAK8wB,IAAIy8F,GACfgkC,EAAMvxJ,KAAK8wB,IAAI8b,GAAO7Q,EACtBy1H,EAAMxxJ,KAAKgxB,IAAI4b,GAAO7Q,EACtB01H,EAAMzxJ,KAAKgxB,IAAIu8F,GACfxxF,EAAMnhC,KAAKs2J,SAAWK,EAElB32J,KAAKm2J,WACPjhF,EAAEvvD,EAAI3lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK8rH,EAAM5W,GAAM6W,EAAK11H,IACnD+zC,EAAEtvD,EAAI5lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK+rH,EAAM11H,KAExC+zC,EAAEvvD,EAAI3lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK8rH,EAAMz1H,GACxC+zC,EAAEtvD,EAAI5lB,KAAKq2J,WAAajxJ,KAAK0lC,KAAK+rH,EAAM7W,GAAM4W,EAAKz1H,MAKvD,OAFA+zC,EAAEvvD,EAAIuvD,EAAEvvD,EAAI3lB,KAAKoR,EACjB8jE,EAAEtvD,EAAIsvD,EAAEtvD,EAAI5lB,KAAKoR,EACV8jE,CACT,EAyEEhlC,QAvEF,SAAiBglC,GACf,IAGI9jE,EAAGC,EAAG+xG,EAAKr0D,EAHX4nG,GAAO,EACPC,EAAM,EACNC,EAAM,EAMV,GAHA3hF,EAAEvvD,EAAIuvD,EAAEvvD,EAAI3lB,KAAKoR,EACjB8jE,EAAEtvD,EAAIsvD,EAAEtvD,EAAI5lB,KAAKoR,EAEE,YAAfpR,KAAKi4G,MAAqB,CACxBj4G,KAAKm2J,WACPU,EAAMzxJ,KAAK6kC,IAAIirC,EAAEtvD,EAAI5lB,KAAKq2J,YAC1BO,EAAMxxJ,KAAK6kC,IAAIirC,EAAEvvD,EAAI3lB,KAAKq2J,YAAcrW,GAAM,EAAK6W,KAEnDD,EAAMxxJ,KAAK6kC,IAAIirC,EAAEvvD,EAAI3lB,KAAKq2J,YAC1BQ,EAAMzxJ,KAAK6kC,IAAIirC,EAAEtvD,EAAI5lB,KAAKq2J,YAAcrW,GAAM,EAAK4W,IAGrD,IAAIE,EAAOD,EAAM72J,KAAKw2J,SAKtB,GAJAplJ,EAAIwlJ,EAAMA,EAAME,EAAOA,EAAOH,EAAMA,GAEpCvzC,GADA/xG,EAAI,EAAIrR,KAAKs2J,SAAWK,GACbtlJ,EAAK,EAAID,EAAIpR,KAAKy7I,GAEnB,EAGR,OAFAvmE,EAAEvvD,EAAIK,OAAOrB,IACbuwD,EAAEtvD,EAAII,OAAOrB,IACNuwD,EAGTnmB,IAAM19C,EAAIjM,KAAKwX,KAAKwmG,KAAS,EAAMhyG,GACnCulJ,EAAM32J,KAAKs2J,SAAWvnG,EAAI4nG,EAC1BC,GAAO7nG,EACP8nG,GAAO9nG,EAEPmmB,EAAEvvD,EAAIvgB,KAAKkkC,MAAMstH,EAAKD,GACtBzhF,EAAEtvD,EAAIxgB,KAAK0lC,KAAK+rH,EAAMzxJ,KAAK8wB,IAAIg/C,EAAEvvD,GAAKgxI,GACtCzhF,EAAEtvD,EAAIxgB,KAAK0lC,KAAK9qC,KAAK02J,cAAgBtxJ,KAAK6kC,IAAIirC,EAAEtvD,GAClD,MAAO,GAAmB,WAAf5lB,KAAKi4G,MAAoB,CAYlC,GAXIj4G,KAAKm2J,WACPU,EAAMzxJ,KAAK6kC,IAAIirC,EAAEtvD,EAAI5lB,KAAKq2J,YAC1BO,EAAMxxJ,KAAK6kC,IAAIirC,EAAEvvD,EAAI3lB,KAAKq2J,YAAcjxJ,KAAKwX,KAAK,EAAMi6I,EAAMA,KAE9DD,EAAMxxJ,KAAK6kC,IAAIirC,EAAEvvD,EAAI3lB,KAAKq2J,YAC1BQ,EAAMzxJ,KAAK6kC,IAAIirC,EAAEtvD,EAAI5lB,KAAKq2J,YAAcjxJ,KAAKwX,KAAK,EAAMg6I,EAAMA,IAGhExlJ,EAAIwlJ,EAAMA,EAAMC,EAAMA,EAAMF,EAAMA,GAElCvzC,GADA/xG,EAAI,EAAIrR,KAAKs2J,SAAWK,GACbtlJ,EAAK,EAAID,EAAIpR,KAAKy7I,GACnB,EAGR,OAFAvmE,EAAEvvD,EAAIK,OAAOrB,IACbuwD,EAAEtvD,EAAII,OAAOrB,IACNuwD,EAGTnmB,IAAM19C,EAAIjM,KAAKwX,KAAKwmG,KAAS,EAAMhyG,GACnCulJ,EAAM32J,KAAKs2J,SAAWvnG,EAAI4nG,EAC1BC,GAAO7nG,EACP8nG,GAAO9nG,EAEPmmB,EAAEvvD,EAAIvgB,KAAKkkC,MAAMstH,EAAKD,GACtBzhF,EAAEtvD,EAAIxgB,KAAK0lC,KAAK+rH,EAAMzxJ,KAAK8wB,IAAIg/C,EAAEvvD,GAAKgxI,EACxC,CAEA,OADAzhF,EAAEvvD,EAAIuvD,EAAEvvD,EAAI3lB,KAAKmmH,MACVjxC,CACT,EAOEg5B,MALiB,CAAC,+BAAgC,0BAA2B,SCxI/E,IAAI6oD,GAAK,SACPC,IAAM,QACNC,GAAK,OACLC,GAAK,QACL16D,GAAIp3F,KAAKwX,KAAK,GAAK,EAoDrB,UACE41G,KAnDK,WACLxyH,KAAKyyH,GAAK,EACVzyH,KAAKmmH,WAAuBlmH,IAAfD,KAAKmmH,MAAsBnmH,KAAKmmH,MAAQ,CACvD,EAiDEl2E,QA/CK,SAAiBilC,GACtB,IAAIm1E,EAAMz3B,EAAW19C,EAAEvvD,EAAI3lB,KAAKmmH,OAC5B6L,EAAM98C,EAAEtvD,EACRuxI,EAAW/xJ,KAAK06I,KAAKtjD,GAAIp3F,KAAKgxB,IAAI47F,IACpColC,EAAaD,EAAWA,EACxBE,EAAeD,EAAaA,EAAaA,EAO3C,OANAliF,EAAEvvD,EAAI0kI,EAAMjlJ,KAAK8wB,IAAIihI,IAChB36D,IAAKu6D,GAAK,EAAIC,GAAKI,EAAaC,GAAgB,EAAIJ,GAAK,EAAIC,GAAKE,KACvEliF,EAAEtvD,EAAIuxI,GAAYJ,GAAKC,GAAKI,EAAaC,GAAgBJ,GAAKC,GAAKE,IAEnEliF,EAAEvvD,EAAI3lB,KAAKoR,EAAI8jE,EAAEvvD,EAAI3lB,KAAKw1B,GAC1B0/C,EAAEtvD,EAAI5lB,KAAKoR,EAAI8jE,EAAEtvD,EAAI5lB,KAAKy1B,GACnBy/C,CACT,EAmCEhlC,QAjCK,SAAiBglC,GACtBA,EAAEvvD,GAAKuvD,EAAEvvD,EAAI3lB,KAAKw1B,IAAMx1B,KAAKoR,EAC7B8jE,EAAEtvD,GAAKsvD,EAAEtvD,EAAI5lB,KAAKy1B,IAAMz1B,KAAKoR,EAE7B,IAGEgmJ,EAAYC,EAAuBnJ,EAAM9mJ,EADzC+vJ,EAAWjiF,EAAEtvD,EAGf,IAAKxe,EAAI,EAAGA,EAJF,KASR+vJ,GAAYjJ,GAFPiJ,GAAYJ,GAAKC,IAFtBI,EAAaD,EAAWA,IACxBE,EAAeD,EAAaA,EAAaA,IACeH,GAAKC,GAAKE,IAAeliF,EAAEtvD,IAC7EmxI,GAAK,EAAIC,GAAKI,EAAaC,GAAgB,EAAIJ,GAAK,EAAIC,GAAKE,MAE/DhyJ,KAAKC,IAAI6oJ,GAXL,SAKe9mJ,GAiBzB,OANAiwJ,GADAD,EAAaD,EAAWA,GACIC,EAAaA,EACzCliF,EAAEvvD,EAAI62E,GAAItnB,EAAEvvD,GAAKoxI,GAAK,EAAIC,GAAKI,EAAaC,GAAgB,EAAIJ,GAAK,EAAIC,GAAKE,IAC1EhyJ,KAAK8wB,IAAIihI,GACbjiF,EAAEtvD,EAAIxgB,KAAK06I,KAAK16I,KAAKgxB,IAAI+gI,GAAY36D,IAErCtnB,EAAEvvD,EAAIitG,EAAW19C,EAAEvvD,EAAI3lB,KAAKmmH,OACrBjxC,CACT,EAOEg5B,MALiB,CAAC,UAAW,cAAe,gBCpE9C,IAAIopD,GAAQ,MA4BZ,SAASC,GAAMriF,GACb,IAEI+uE,EAAI74G,EAAG5B,EAFP6gH,EAAMz3B,EAAW19C,EAAEvvD,GAAK3lB,KAAKmmH,OAAS,IACtC6L,EAAM98C,EAAEtvD,EASZ,OAPAq+H,EAAKjkJ,KAAKw3J,IAAMx3J,KAAKixJ,GAAKlS,GAAQ/sB,EAAK5mF,EAAIhmC,KAAKgxB,IAAI47F,GAAMxoF,EAAIpkC,KAAK8wB,IAAI87F,GAAMhyH,KAAK4+I,IAClFxzG,EAAI5B,EAAI6gH,GAAOpG,EAAK7+I,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAKrnF,EAAIA,IAChD8pC,EAAEvvD,EAAIs+H,EAAK7+I,KAAKgxB,IAAIgV,GACpB8pC,EAAEtvD,EAAI5lB,KAAKw3J,IAAMvT,EAAK7+I,KAAK8wB,IAAIkV,GAE/B8pC,EAAEvvD,EAAI3lB,KAAKoR,EAAI8jE,EAAEvvD,GAAK3lB,KAAKw1B,IAAM,GACjC0/C,EAAEtvD,EAAI5lB,KAAKoR,EAAI8jE,EAAEtvD,GAAK5lB,KAAKy1B,IAAM,GAC1By/C,CACT,CAEA,SAASuiF,GAAMviF,GAIb,IAAIxuC,EAAGu9G,EAAIoG,EAAKr4B,EAGhB,GANA98C,EAAEvvD,GAAKuvD,EAAEvvD,GAAK3lB,KAAKw1B,IAAM,IAAMx1B,KAAKoR,EACpC8jE,EAAEtvD,GAAKsvD,EAAEtvD,GAAK5lB,KAAKy1B,IAAM,IAAMz1B,KAAKoR,EAGpC6yI,EAAKjE,GAAM9qE,EAAEvvD,EAAGuvD,EAAEtvD,EAAI5lB,KAAKw3J,IAAMtiF,EAAEtvD,GACnCosG,EAAM0tB,GAAY1/I,KAAKw3J,IAAMx3J,KAAKixJ,GAAKhN,EAAIjkJ,KAAKyyH,GAAIzyH,KAAK4+I,KACpDl4G,EAAIthC,KAAKC,IAAI2sH,IAAQlO,EACxBp9E,EAAIthC,KAAKgxB,IAAI47F,GACbq4B,EAAMpG,EAAK7+I,KAAKkkC,MAAM4rC,EAAEvvD,EAAGuvD,EAAEtvD,GAAKxgB,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAK/rF,EAAIA,GAAKthC,KAAK8wB,IAAI87F,OACvE,MAAI5sH,KAAKC,IAAIqhC,EAAIo9E,IAAYwzC,IAGlC,MAAM,IAAI/hI,MAFV80H,EAAM,CAGR,CAGA,OAFAn1E,EAAEvvD,EAAIitG,EAAWy3B,GAAOrqJ,KAAKmmH,OAAS,IACtCjxC,EAAEtvD,EAAIqlI,GAAWj5B,GACV98C,CACT,CAEA,SAASwiF,GAAMxiF,GACb,IAEI9pC,EAAG64G,EAFHoG,EAAMz3B,EAAW19C,EAAEvvD,GAAK3lB,KAAKmmH,OAAS,IACtC6L,EAAM98C,EAAEtvD,EAYZ,OAVAq+H,EAAKjkJ,KAAK23J,MAAQ33J,KAAKqmJ,KAAOr0B,EAC1B5sH,KAAKC,IAAI4+I,GAAMqT,IACjBpiF,EAAEvvD,EAAIs+H,EAAK7+I,KAAKgxB,IAAIgV,EAAIi/G,EAAMjlJ,KAAK8wB,IAAI87F,GAAOiyB,GAC9C/uE,EAAEtvD,EAAI5lB,KAAK23J,MAAQ1T,EAAK7+I,KAAK8wB,IAAIkV,IAEjC8pC,EAAEvvD,EAAIuvD,EAAEtvD,EAAI,EAGdsvD,EAAEvvD,EAAI3lB,KAAKoR,EAAI8jE,EAAEvvD,GAAK3lB,KAAKw1B,IAAM,GACjC0/C,EAAEtvD,EAAI5lB,KAAKoR,EAAI8jE,EAAEtvD,GAAK5lB,KAAKy1B,IAAM,GAC1By/C,CACT,CAEA,SAAS0iF,GAAM1iF,GAIb,IAAIm1E,EAAKr4B,EAHT98C,EAAEvvD,GAAKuvD,EAAEvvD,GAAK3lB,KAAKw1B,IAAM,IAAMx1B,KAAKoR,EACpC8jE,EAAEtvD,GAAKsvD,EAAEtvD,GAAK5lB,KAAKy1B,IAAM,IAAMz1B,KAAKoR,EAGpC,IAAI6yI,EAAKjE,GAAM9qE,EAAEvvD,EAAGuvD,EAAEtvD,EAAI5lB,KAAK23J,MAAQziF,EAAEtvD,GAEzC,GADAosG,EAAMhyH,KAAK23J,MAAQ33J,KAAKqmJ,KAAOpC,EAC3B7+I,KAAKC,IAAI2sH,GAAOlO,EAClB,MAAM,IAAIvuF,MASZ,OANE80H,EADEjlJ,KAAKC,IAAID,KAAKC,IAAI2sH,GAAOlO,IAAYwzC,GACjC,EAEArT,EAAK7+I,KAAKkkC,MAAM4rC,EAAEvvD,EAAGuvD,EAAEtvD,GAAKxgB,KAAK8wB,IAAI87F,GAE7C98C,EAAEvvD,EAAIitG,EAAWy3B,GAAOrqJ,KAAKmmH,OAAS,IACtCjxC,EAAEtvD,EAAIqlI,GAAWj5B,GACV98C,CACT,CAGA,UACEs9C,KAlGK,WACL,IAAIhpF,EAGJ,GADAxpC,KAAKqmJ,KAAOrmJ,KAAK2vC,KACbvqC,KAAKC,IAAIrF,KAAKqmJ,MAAQiR,GACxB,MAAM,IAAI/hI,MAERv1B,KAAKyyH,IACPzyH,KAAK4+I,GAAKI,GAAQh/I,KAAKyyH,IACvBzyH,KAAKixJ,GAAKlS,GAAQ/+I,KAAKqmJ,KAAMrmJ,KAAKw3J,IAAMpyJ,KAAKgxB,IAAIp2B,KAAKqmJ,MACpD78G,EAAIpkC,KAAK8wB,IAAIl2B,KAAKqmJ,MAAOrmJ,KAAK4+I,IAChC5+I,KAAKw3J,IAAMhuH,GAAKpkC,KAAKwX,KAAK,EAAI5c,KAAKyyH,GAAKzyH,KAAKw3J,IAAMx3J,KAAKw3J,KAAOx3J,KAAKw3J,KACpEx3J,KAAKkwC,QAAUunH,GACfz3J,KAAKiwC,QAAUsnH,KAEXnyJ,KAAKC,IAAIrF,KAAKqmJ,MAAQiR,IAASxzC,EACjC9jH,KAAK23J,MAAQ,EAEb33J,KAAK23J,MAAQ,EAAIvyJ,KAAK6kC,IAAIjqC,KAAKqmJ,MAEjCrmJ,KAAKkwC,QAAU0nH,GACf53J,KAAKiwC,QAAUynH,GAEnB,EA4EExpD,MAHiB,CAAC,QAAS,4BChG7B,MAAMyM,GAAQ52G,OAAOoG,OAAO0tJ,GAAM,CAChCC,aAAc,QACdC,KAAI,GACJlnC,MAAO,IAAIknC,GAAK,SAChBz9H,MAAK,GACLu+G,QAASmf,GACTn9C,KAAI,EACJo9C,QpEqDa,SAAiB1wJ,EAAK6kB,EAAMniB,GACzC,OAAImiB,aAAgB8rI,YAYtB,SAAsB3wJ,EAAK6kB,EAAMniB,GAC/B,IAAI6oI,GAAqB,OACT7yI,IAAZgK,IAAwD,IAA/BA,EAAQ6oI,qBACnCA,GAAqB,GAEvB,IAAI59H,EAAO,IAAIijJ,SAAS/rI,GACpB8lH,EAuGN,SAA4Bh9H,GAC1B,IAAIkjJ,EAAUljJ,EAAKy9H,SAAS,GAAG,GAC/B,GAAgB,KAAZylB,EACF,OAAO,EAETA,EAAUljJ,EAAKy9H,SAAS,GAAG,GACX,KAAZylB,GACFxrD,QAAQ5qF,KAAK,qEAEf,OAAO,CACT,CAjHuBq2I,CAAmBnjJ,GACpCk8H,EAkHN,SAAoBl8H,EAAMg9H,GACxB,MAAO,CACLkmB,QAASljJ,EAAKy9H,SAAS,EAAGT,GAC1BomB,eAAgBpjJ,EAAKy9H,SAAS,GAAIT,GAClCb,UAAWn8H,EAAKy9H,SAAS,GAAIT,GAC7BqmB,UAAW3mB,GAAa18H,EAAM,GAAI,IAAQ+vB,OAC1CuzH,kBAAmBtjJ,EAAKk9H,WAAW,IAAKF,GACxCumB,kBAAmBvjJ,EAAKk9H,WAAW,IAAKF,GACxCwmB,gBAAiBxjJ,EAAKk9H,WAAW,IAAKF,GACtCymB,gBAAiBzjJ,EAAKk9H,WAAW,IAAKF,GAE1C,CA7He0mB,CAAW1jJ,EAAMg9H,GAC1BjC,EAkIN,SAAsB/6H,EAAMk8H,EAAQc,EAAgBY,GAGlD,IAFA,IAAI+lB,EAAa,IACbhpB,EAAQ,GACHzoI,EAAI,EAAGA,EAAIgqI,EAAOC,UAAWjqI,IAAK,CACzC,IAAI0xJ,EAAY7mB,GAAe/8H,EAAM2jJ,EAAY3mB,GAC7CnB,EAAQ6B,GAAc19H,EAAM2jJ,EAAYC,EAAW5mB,EAAgBY,GACnEimB,EAAiB3zJ,KAAKq9B,MACxB,GAAKq2H,EAAUvmB,eAAiBumB,EAAUxmB,gBAAkBwmB,EAAUrmB,mBACpEumB,EAAiB5zJ,KAAKq9B,MACxB,GAAKq2H,EAAUzmB,cAAgBymB,EAAU3mB,eAAiB2mB,EAAUtmB,kBAEtE3C,EAAM/qI,KAAK,CACTmsI,GAAI,CAACD,GAAiB8nB,EAAUxmB,gBAAiBtB,GAAiB8nB,EAAU3mB,gBAC5EzB,IAAK,CAACM,GAAiB8nB,EAAUrmB,mBAAoBzB,GAAiB8nB,EAAUtmB,mBAChFlC,IAAK,CAACyoB,EAAgBC,GACtBvxJ,MAAOqxJ,EAAUpmB,cACjBxB,IAAKY,GAASf,KAEhB,IAAIkoB,EAAU,IACa,IAAvBnmB,IACFmmB,EAAU,GAEZJ,GAAc,IAAMC,EAAUpmB,cAAgBumB,CAChD,CACA,OAAOppB,CACT,CA3JiBqpB,CAAahkJ,EAAMk8H,EAAQc,EAAgBY,GACtDmlB,EAAU,CAAE7mB,OAAQA,EAAQnB,SAAUA,GAE1C,OADAH,GAAevoI,GAAO0wJ,EACfA,CACT,CAvBWkB,CAAa5xJ,EAAK6kB,EAAMniB,GAE1B,CAAE0R,MAAOo0H,GAAgBxoI,EAAK6kB,GACvC,EoEzDE9G,UAAS,GACT20H,KAAI,GACJ/uB,QAAS,iBCAI,SAAUvQ,GACvBA,EAAMo9C,KAAK1mH,YAAYlpB,IAAI+4H,IAC3BvmC,EAAMo9C,KAAK1mH,YAAYlpB,IAAIk6H,IAC3B1nC,EAAMo9C,KAAK1mH,YAAYlpB,IAAIiyH,IAC3Bz/B,EAAMo9C,KAAK1mH,YAAYlpB,IAAIixI,IAC3Bz+C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIkxI,IAC3B1+C,EAAMo9C,KAAK1mH,YAAYlpB,IAAImxI,IAC3B3+C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIoxI,IAC3B5+C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIqxI,IAC3B7+C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIsxI,IAC3B9+C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIuxI,IAC3B/+C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIwxI,IAC3Bh/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIyxI,IAC3Bj/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAI0xI,IAC3Bl/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAI2xI,IAC3Bn/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAI4xI,IAC3Bp/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAI6xI,IAC3Br/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAI8xI,IAC3Bt/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAI+xI,IAC3Bv/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIgyI,IAC3Bx/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIiyI,IAC3Bz/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIkyI,IAC3B1/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAImyI,IAC3B3/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIoyI,IAC3B5/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIqyI,IAC3B7/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIsyI,IAC3B9/C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIuyI,IAC3B//C,EAAMo9C,KAAK1mH,YAAYlpB,IAAIwyI,IAC3BhgD,EAAMo9C,KAAK1mH,YAAYlpB,IAAIyyI,IAC3BjgD,EAAMo9C,KAAK1mH,YAAYlpB,IAAI0yI,IAC3BlgD,EAAMo9C,KAAK1mH,YAAYlpB,IAAI2yI,IAC3BngD,EAAMo9C,KAAK1mH,YAAYlpB,IAAI4yI,GAC7B,CD9BAC,CAAoBrgD,IACpB,W,+CEtBO,SAASlb,EAAalrE,EAAiBC,EAAQgN,EAAOja,GAC3D,MAAM6sC,EAAc,GACpB,IAAIxmD,GAASkX,EAAAA,EAAAA,MACb,IAAK,IAAI1d,EAAI,EAAGwE,EAAK41B,EAAMp9B,OAAQgD,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM0xB,EAAO0I,EAAMp6B,GACnBwG,GAAS0mB,EAAAA,EAAAA,IACPC,EACAC,EACAsE,EAAK,GACLvR,GAEF6sC,EAAYtvD,MAAM8I,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxE4mB,EAASsE,EAAKA,EAAK10B,OAAS,EAC9B,CACA,OAAOgwD,CACT,C,mCCiDA,QA9DA,MAIEz0D,WAAAA,CAAYC,GAIVI,KAAK4d,mBAKL5d,KAAKkE,iBAOLlE,KAAKJ,KAAOA,EAOZI,KAAK4D,OAAS,IAChB,CAOAjD,cAAAA,GACEX,KAAKkE,kBAAmB,CAC1B,CAMAtD,eAAAA,GACEZ,KAAK4d,oBAAqB,CAC5B,E","sources":["../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/layer/Group.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/Map.js","../node_modules/ol/style/Image.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/proj/projections.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/ImageState.js","../node_modules/ol/featureloader.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/source/Vector.js","../node_modules/ol/Observable.js","../node_modules/ol/TileRange.js","../node_modules/ol/extent.js","../node_modules/ol/proj/Units.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/control/defaults.js","../node_modules/ol/style/Fill.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/has.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/css.js","../node_modules/ol/render/EventType.js","../node_modules/ol/functions.js","../node_modules/ol/color.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/utm.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/Collection.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/Feature.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/style/Text.js","../node_modules/ol/asserts.js","../node_modules/ol/Object.js","../node_modules/ol/render/Event.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/geom/MultiPoint.js","../node_modules/ol/geom/MultiLineString.js","../node_modules/ol/geom/MultiPolygon.js","../node_modules/ol/geom/GeometryCollection.js","../node_modules/ol/format/Feature.js","../node_modules/ol/format/JSONFeature.js","../node_modules/ol/format/GeoJSON.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/events.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/layer/Property.js","../node_modules/ol/events/EventType.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/Tile.js","../node_modules/ol/style/Icon.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/ViewHint.js","../node_modules/ol/style/Style.js","../node_modules/ol/events/Target.js","../node_modules/ol/dom.js","../node_modules/ol/TileState.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/DataTile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/source/Cluster.js","../node_modules/ol/layer/Base.js","../node_modules/ol/array.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/size.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/style/Circle.js","../node_modules/ol/MapEventType.js","../node_modules/ol/source/Source.js","../node_modules/ol/easing.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/Image.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/tilecoord.js","../node_modules/ol/render/canvas.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/colorlike.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/coordinate.js","../node_modules/ol/console.js","../node_modules/ol/Disposable.js","../node_modules/ol/util.js","../node_modules/ol/math.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/obj.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/proj/proj4.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/uri.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/Tile.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/render/Feature.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/transform.js","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/PROJJSONBuilderBase.js","../node_modules/wkt-parser/PROJJSONBuilder2015.js","../node_modules/wkt-parser/PROJJSONBuilder2019.js","../node_modules/wkt-parser/buildPROJJSON.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/util.js","../node_modules/wkt-parser/transformPROJJSON.js","../node_modules/wkt-parser/index.js","../node_modules/wkt-parser/detectWKTVersion.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/common/vincenty.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/projections/eqearth.js","../node_modules/proj4/lib/projections/bonne.js","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/events/Event.js"],"sourcesContent":["/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType|null} Closest feature (or `null` if none found).\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1 && this.targetContext_) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/source/Cluster\n */\n\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {getUid} from '../util.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").FeatureLike]\n * @typedef {(feature: FeatureType) => (Point|null)} GeometryFunction\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {GeometryFunction<FeatureType>} [geometryFunction]\n * Function that takes a {@link module:ol/Feature~Feature} as argument and returns a\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<FeatureType>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource<FeatureType>} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import('../Feature.js').default]\n * @extends {VectorSource<Feature<import(\"../geom/Geometry.js\").default>>}\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options<FeatureType>} [options] Cluster options.\n   */\n  constructor(options) {\n    options = options || {};\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @type {GeometryFunction<import(\"../Feature.js\").FeatureLike>}\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries',\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<FeatureType>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource<FeatureType>|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   * @override\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource<FeatureType>|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @override\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source?.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource<FeatureType>|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   * @override\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<FeatureType>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/proj/proj4\n */\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n} from '../proj.js';\nimport Projection from './Projection.js';\nimport {get as getCachedProjection} from './projections.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!getCachedProjection(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = getCachedProjection(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = getCachedProjection(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return getCachedProjection(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return getCachedProjection(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var primeMeridian = {};\n\nprimeMeridian.greenwich = 0.0; // \"0dE\",\nprimeMeridian.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nprimeMeridian.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nprimeMeridian.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nprimeMeridian.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nprimeMeridian.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nprimeMeridian.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nprimeMeridian.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nprimeMeridian.ferro = -17.666666666667; // \"17d40'W\",\nprimeMeridian.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nprimeMeridian.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nprimeMeridian.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nprimeMeridian.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\nexport default primeMeridian;\n","export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\n/**\n * @param {string} defData\n * @returns {import('./defs').ProjectionDefinition}\n */\nexport default function (defData) {\n  /** @type {import('./defs').ProjectionDefinition} */\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    /** @type {Array<?>} */\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = 'unit') {\n    if (!node || node.length < 3) {\n      return { type, name: 'unknown', conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    const id = idNode\n      ? {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || 'Unknown';\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2] ? node[2].toLowerCase() : 'unknown';\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === 'ORDER');\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === 'AXIS')\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case 'PROJCRS':\n        result.type = 'ProjectedCRS';\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS'))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION'))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT');\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case 'BASEGEOGCRS':\n      case 'GEOGCRS':\n        result.type = 'GeographicCRS';\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE')\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === 'ENSEMBLE') {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === 'PRIMEM');\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: 'ellipsoidal',\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case 'DATUM':\n        result.type = 'GeodeticReferenceFrame';\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID'))\n          : null;\n        break;\n      \n      case 'ENSEMBLE':\n        result.type = 'DatumEnsemble';\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === 'MEMBER')\n          .map((member) => ({\n            type: 'DatumEnsembleMember',\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID');\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case 'ELLIPSOID':\n        result.type = 'Ellipsoid';\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT'), result)\n          : null;\n        break;\n\n      case 'CONVERSION':\n        result.type = 'Conversion';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === 'PARAMETER')\n          .map((param) => this.convert(param));\n        break;\n\n      case 'METHOD':\n        result.type = 'Method';\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case 'PARAMETER':\n        result.type = 'Parameter';\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case 'BOUNDCRS':\n        result.type = 'BoundCRS';\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'SOURCECRS');\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'TARGETCRS');\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case 'ABRIDGEDTRANSFORMATION':\n        result.type = 'Transformation';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE'))\n          .map((param) => {\n            if (param[0] === 'PARAMETER') {\n              return this.convert(param);\n            } else if (param[0] === 'PARAMETERFILE') {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  'authority': 'EPSG',\n                  'code': 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === 'Scale difference') {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case 'AXIS':\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: 'unspecified', axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case 'LENGTHUNIT':\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === 'USAGE');\n    if (usageNode) {\n      const scope = usageNode.find((child) => Array.isArray(child) && child[0] === 'SCOPE');\n      const area = usageNode.find((child) => Array.isArray(child) && child[0] === 'AREA');\n      const bbox = usageNode.find((child) => Array.isArray(child) && child[0] === 'BBOX');\n      result.usage = {};\n      if (scope) {\n        result.usage.scope = scope[1];\n      }\n      if (area) {\n        result.usage.area = area[1];\n      }\n      if (bbox) {\n        result.usage.bbox = bbox.slice(1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;","import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'USAGE')) {\n    return '2019'; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'CS')) {\n    return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') {\n    return '2015'; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return '2015';\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === '2019' ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}","import { applyProjectionDefaults } from './util.js';\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit && unit.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) {\n          result.projName = projjson.conversion.method.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0] && value.axis[0].unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}","import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\n/**\n * @typedef {Object} ProjectionDefinition\n * @property {string} title\n * @property {string} [projName]\n * @property {string} [ellps]\n * @property {import('./Proj.js').DatumDefinition} [datum]\n * @property {string} [datumName]\n * @property {number} [rf]\n * @property {number} [lat0]\n * @property {number} [lat1]\n * @property {number} [lat2]\n * @property {number} [lat_ts]\n * @property {number} [long0]\n * @property {number} [long1]\n * @property {number} [long2]\n * @property {number} [alpha]\n * @property {number} [longc]\n * @property {number} [x0]\n * @property {number} [y0]\n * @property {number} [k0]\n * @property {number} [a]\n * @property {number} [b]\n * @property {true} [R_A]\n * @property {number} [zone]\n * @property {true} [utmSouth]\n * @property {string|Array<number>} [datum_params]\n * @property {number} [to_meter]\n * @property {string} [units]\n * @property {number} [from_greenwich]\n * @property {string} [datumCode]\n * @property {string} [nadgrids]\n * @property {string} [axis]\n * @property {boolean} [sphere]\n * @property {number} [rectified_grid_angle]\n * @property {boolean} [approx]\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n */\n\n/**\n * @overload\n * @param {string} name\n * @param {string|ProjectionDefinition|import('./core.js').PROJJSONDefinition} projection\n * @returns {void}\n */\n/**\n * @overload\n * @param {Array<[string, string]>} name\n * @returns {Array<ProjectionDefinition|undefined>}\n */\n/**\n * @overload\n * @param {string} name\n * @returns {ProjectionDefinition}\n */\n\n/**\n * @param {string | Array<Array<string>> | Partial<Record<'EPSG'|'ESRI'|'IAU2000', ProjectionDefinition>>} name\n * @returns {ProjectionDefinition | Array<ProjectionDefinition|undefined> | void}\n */\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[/** @type {string} */ (name)] = parseProj(arguments[1]);\n      } else {\n        defs[/** @type {string} */ (name)] = wkt(arguments[1]);\n      }\n    } else {\n      defs[/** @type {string} */ (name)] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          return defs.apply(that, v);\n        } else {\n          return defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n","export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} code\n * @returns {import('./defs').ProjectionDefinition}\n */\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!('projName' in code)) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n","export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from './projections/merc';\nimport longlat from './projections/longlat';\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e\n * @property {number} k\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\n/**\n * @typedef {Object} NadgridInfo\n * @property {string} name The name of the NAD grid or 'null' if not specified.\n * @property {boolean} mandatory Indicates if the grid is mandatory (true) or optional (false).\n * @property {*} grid The loaded NAD grid object, or null if not loaded or not applicable.\n * @property {boolean} isNull True if the grid is explicitly 'null', otherwise false.\n */\n\n/**\n * @typedef {Object} NTV2GridOptions\n * @property {boolean} [includeErrorFields=true] Whether to include error fields in the subgrids.\n */\n\n/**\n * @typedef {Object} NadgridHeader\n * @property {number} [nFields] Number of fields in the header.\n * @property {number} [nSubgridFields] Number of fields in each subgrid header.\n * @property {number} nSubgrids Number of subgrids in the file.\n * @property {string} [shiftType] Type of shift (e.g., \"SECONDS\").\n * @property {number} [fromSemiMajorAxis] Source ellipsoid semi-major axis.\n * @property {number} [fromSemiMinorAxis] Source ellipsoid semi-minor axis.\n * @property {number} [toSemiMajorAxis] Target ellipsoid semi-major axis.\n * @property {number} [toSemiMinorAxis] Target ellipsoid semi-minor axis.\n */\n\n/**\n * @typedef {Object} Subgrid\n * @property {Array<number>} ll Lower left corner of the grid in radians [longitude, latitude].\n * @property {Array<number>} del Grid spacing in radians [longitude interval, latitude interval].\n * @property {Array<number>} lim Number of columns in the grid [longitude columns, latitude columns].\n * @property {number} [count] Total number of grid nodes.\n * @property {Array} cvs Mapped node values for the grid.\n */\n\n/** @typedef {{header: NadgridHeader, subgrids: Array<Subgrid>}} NADGrid */\n\n/**\n * @typedef {Object} GeoTIFF\n * @property {() => Promise<number>} getImageCount - Returns the number of images in the GeoTIFF.\n * @property {(index: number) => Promise<GeoTIFFImage>} getImage - Returns a GeoTIFFImage for the given index.\n */\n\n/**\n * @typedef {Object} GeoTIFFImage\n * @property {() => number} getWidth - Returns the width of the image.\n * @property {() => number} getHeight - Returns the height of the image.\n * @property {() => number[]} getBoundingBox - Returns the bounding box as [minX, minY, maxX, maxY] in degrees.\n * @property {() => Promise<ArrayLike<ArrayLike<number>>>} readRasters - Returns the raster data as an array of bands.\n * @property {Object} fileDirectory - The file directory object containing metadata.\n * @property {Object} fileDirectory.ModelPixelScale - The pixel scale array [scaleX, scaleY, scaleZ] in degrees.\n */\n\nvar loadedNadgrids = {};\n\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer} data - The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] - Optional parameters for loading the grid.\n * @returns {NADGrid} - The loaded NAD grid information.\n */\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {GeoTIFF} data - The GeoTIFF instance to read the grid from.\n * @returns {{ready: Promise<NADGrid>}} - A promise that resolves to the loaded grid information.\n */\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer|GeoTIFF} data The data to load, either an ArrayBuffer for NTv2 or a GeoTIFF instance.\n * @param {NTV2GridOptions} [options] Optional parameters.\n * @returns {{ready: Promise<NADGrid>}|NADGrid} - A promise that resolves to the loaded grid information.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {ArrayBuffer} data The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] Optional parameters for loading the grid.\n * @returns {NADGrid} The loaded NAD grid information.\n */\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {GeoTIFF} tiff The GeoTIFF instance to read the grid from.\n * @returns {Promise<NADGrid>} A promise that resolves to the loaded NAD grid information.\n */\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n * @param {string} nadgrids A comma-separated list of grid names, optionally prefixed with '@' to indicate optional grids.\n * @returns\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\n/**\n * @param {string} value The nadgrid string to get information for.\n * @returns {NadgridInfo|null} An object with grid information, or null if the input is empty.\n */\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\n/**\n * @typedef {Object} DatumDefinition\n * @property {number} datum_type - The type of datum.\n * @property {number} a - Semi-major axis of the ellipsoid.\n * @property {number} b - Semi-minor axis of the ellipsoid.\n * @property {number} es - Eccentricity squared of the ellipsoid.\n * @property {number} ep2 - Second eccentricity squared of the ellipsoid.\n */\n\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} srsCode\n * @param {(errorMessage?: string, instance?: Projection) => void} [callback]\n */\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.forward = null;\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.inverse = null;\n  /** @type {string} */\n  this.name;\n  /** @type {string} */\n  this.title;\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  /** @type {DatumDefinition} */\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  if ('init' in this && typeof this.init === 'function') {\n    this.init();\n  }\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  /** @type {import(\"./core\").InterfaceCoordinates} */\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n","/**\n * @param {Array<number>} array\n * @returns {import(\"../core\").InterfaceCoordinates}\n */\nexport default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\n/**\n * @param {import('./defs').ProjectionDefinition} source\n * @param {import('./defs').ProjectionDefinition} dest\n * @param {import('./core').TemplateCoordinates} point\n * @param {boolean} enforceAxis\n * @returns {import('./core').InterfaceCoordinates | undefined}\n */\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  point = /** @type {import('./core').InterfaceCoordinates} */ (point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\n/**\n * @typedef {{x: number, y: number, z?: number, m?: number}} InterfaceCoordinates\n */\n\n/**\n * @typedef {Array<number> | InterfaceCoordinates} TemplateCoordinates\n */\n\n/**\n * @typedef {Object} Converter\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {proj} [oProj]\n */\n\n/**\n * @typedef {Object} PROJJSONDefinition\n * @property {string} [$schema]\n * @property {string} type\n * @property {string} [name]\n * @property {{authority: string, code: number}} [id]\n * @property {string} [scope]\n * @property {string} [area]\n * @property {{south_latitude: number, west_longitude: number, north_latitude: number, east_longitude: number}} [bbox]\n * @property {PROJJSONDefinition[]} [components]\n * @property {{type: string, name: string}} [datum]\n * @property {{\n *   name: string,\n *   members: Array<{\n *     name: string,\n *     id?: {authority: string, code: number}\n *   }>,\n *   ellipsoid?: {\n *     name: string,\n *     semi_major_axis: number,\n *     inverse_flattening?: number\n *   },\n *   accuracy?: string,\n *   id?: {authority: string, code: number}\n * }} [datum_ensemble]\n * @property {{\n *   subtype: string,\n *   axis: Array<{\n *     name: string,\n *     abbreviation?: string,\n *     direction: string,\n *     unit: string\n *   }>\n * }} [coordinate_system]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string\n *   }>\n * }} [conversion]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string,\n *     type?: string,\n *     file_name?: string\n *   }>\n * }} [transformation]\n */\n\n/**\n * @template {TemplateCoordinates} T\n * @param {proj} from\n * @param {proj} to\n * @param {T} coords\n * @param {boolean} [enforceAxis]\n * @returns {T}\n */\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3)));\n        } else {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3)));\n        }\n      } else {\n        return /** @type {T} */ ([transformedArray.x, transformedArray.y].concat(coords.slice(2)));\n      }\n    } else {\n      return /** @type {T} */ ([transformedArray.x, transformedArray.y]);\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return /** @type {T} */ (out);\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return /** @type {T} */ (out);\n  }\n}\n\n/**\n * @param {proj | string | PROJJSONDefinition | Converter} item\n * @returns {import('./Proj').default}\n */\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (typeof item === 'object' && 'oProj' in item) {\n    return item.oProj;\n  }\n  return proj(/** @type {string | PROJJSONDefinition} */ (item));\n}\n\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @param {string | PROJJSONDefinition | proj} fromProjOrToProj\n * @param {string | PROJJSONDefinition | proj | TemplateCoordinates} [toProjOrCoord]\n * @param {T} [coord]\n * @returns {T|Converter}\n */\nfunction proj4(fromProjOrToProj, toProjOrCoord, coord) {\n  /** @type {proj} */\n  var fromProj;\n  /** @type {proj} */\n  var toProj;\n  var single = false;\n  /** @type {Converter} */\n  var obj;\n  if (typeof toProjOrCoord === 'undefined') {\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof /** @type {?} */ (toProjOrCoord).x !== 'undefined' || Array.isArray(toProjOrCoord)) {\n    coord = /** @type {T} */ (/** @type {?} */ (toProjOrCoord));\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  }\n  if (!fromProj) {\n    fromProj = checkProj(fromProjOrToProj);\n  }\n  if (!toProj) {\n    toProj = checkProj(/** @type {string | PROJJSONDefinition | proj } */ (toProjOrCoord));\n  }\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\n\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import { toPoint, forward } from 'mgrs';\n\n/**\n * @deprecated v3.0.0 - use proj4.toPoint instead\n * @param {number | import('./core').TemplateCoordinates | string} x\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0]);\n    this.y = parseFloat(coords[1]);\n    this.z = parseFloat(coords[2]) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n","import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} cbg\n * @property {Array<number>} cgb\n * @property {Array<number>} utg\n * @property {Array<number>} gtu\n * @property {number} Qn\n * @property {number} Zb\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\n/** @this {import('../defs.js').ProjectionDefinition} */\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} rc\n * @property {number} C\n * @property {number} phic0\n * @property {number} ratexp\n * @property {number} K\n * @property {number} e\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sinc0\n * @property {number} cosc0\n * @property {number} R2\n * @property {number} rc\n * @property {number} phic0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} coslat0\n * @property {number} sinlat0\n * @property {number} ms1\n * @property {number} X0\n * @property {number} cosX0\n * @property {number} sinX0\n * @property {number} con\n * @property {number} cons\n * @property {number} e\n */\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} lambda0\n * @property {number} e\n * @property {number} R\n * @property {number} b0\n * @property {number} K\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\n/**\n * @typedef {Object} LocalThis\n * @property {boolean} no_off\n * @property {boolean} no_rot\n * @property {number} rectified_grid_angle\n * @property {number} es\n * @property {number} A\n * @property {number} B\n * @property {number} E\n * @property {number} e\n * @property {number} lam0\n * @property {number} singam\n * @property {number} cosgam\n * @property {number} sinrot\n * @property {number} cosrot\n * @property {number} rB\n * @property {number} ArB\n * @property {number} BrA\n * @property {number} u_0\n * @property {number} v_pole_n\n * @property {number} v_pole_s\n */\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/**\n * Initialize the Oblique Mercator  projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.PI) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.PI) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n * @property {number} ns\n * @property {number} f0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n","export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n","export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n","export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n","export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {Array<number>} apa\n * @property {number} dd\n * @property {number} e\n * @property {number} es\n * @property {number} mmf\n * @property {number} rq\n * @property {number} qp\n * @property {number} sinb1\n * @property {number} cosb1\n * @property {number} ymf\n * @property {number} xmf\n * @property {number} sinph0\n * @property {number} cosph0\n */\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/**\n * Initialize the Lambert Azimuthal Equal Area projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? S_POLE : N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = EQUIT;\n  } else {\n    this.mode = OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case N_POLE:\n        this.dd = 1;\n        break;\n      case S_POLE:\n        this.dd = 1;\n        break;\n      case EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e3\n * @property {number} sin_po\n * @property {number} cos_po\n * @property {number} t1\n * @property {number} con\n * @property {number} ms1\n * @property {number} qs1\n * @property {number} t2\n * @property {number} ms2\n * @property {number} qs2\n * @property {number} t3\n * @property {number} qs0\n * @property {number} ns0\n * @property {number} c\n * @property {number} rh\n * @property {number} sin_phi\n * @property {number} cos_phi\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n * @property {number} infinity_dist\n * @property {number} rc\n */\n\n/**\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n   @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n */\n\n/**\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n  @this {import('../defs.js').ProjectionDefinition & LocalThis}\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\nvar MAX_ITER = 20;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {Array<number>} en\n * @property {number} n\n * @property {number} m\n * @property {number} C_y\n * @property {number} C_x\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} sin_phi\n * @property {number} cos_phi\n * @property {number} ms1\n * @property {number} ml1\n * @property {number} ms2\n * @property {number} ml2\n * @property {number} ns\n * @property {number} g\n * @property {number} ml0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sin_phi = Math.sin(this.lat1);\n  this.cos_phi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sin_phi, this.cos_phi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sin_phi;\n  } else {\n    this.sin_phi = Math.sin(this.lat2);\n    this.cos_phi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sin_phi, this.cos_phi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} R - Radius of the Earth\n */\n\n/**\n * Initialize the Van Der Grinten projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { vincentyDirect, vincentyInverse } from '../common/vincenty';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} sin_p12\n * @property {number} cos_p12\n * @property {number} a\n * @property {number} f\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  // flattening for ellipsoid\n  this.f = this.es / (1 + Math.sqrt(1 - this.es));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      vars = vincentyInverse(this.lat0, this.long0, lat, lon, this.a, this.f);\n      azi1 = vars.azi1;\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      azi1 = Math.atan2(p.x, p.y);\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = vincentyDirect(this.lat0, this.long0, azi1, s12, this.a, this.f);\n\n      p.x = vars.lon2;\n      p.y = vars.lat2;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Calculates the inverse geodesic problem using Vincenty's formulae.\n * Computes the forward azimuth and ellipsoidal distance between two points\n * specified by latitude and longitude on the surface of an ellipsoid.\n *\n * @param {number} lat1 Latitude of the first point in radians.\n * @param {number} lon1 Longitude of the first point in radians.\n * @param {number} lat2 Latitude of the second point in radians.\n * @param {number} lon2 Longitude of the second point in radians.\n * @param {number} a Semi-major axis of the ellipsoid (meters).\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{ azi1: number, s12: number }} An object containing:\n *   - azi1: Forward azimuth from the first point to the second point (radians).\n *   - s12: Ellipsoidal distance between the two points (meters).\n */\nexport function vincentyInverse(lat1, lon1, lat2, lon2, a, f) {\n  const L = lon2 - lon1;\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const U2 = Math.atan((1 - f) * Math.tan(lat2));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);\n\n  let lambda = L, lambdaP, iterLimit = 100;\n  let sinLambda, cosLambda, sinSigma, cosSigma, sigma, sinAlpha, cos2Alpha, cos2SigmaM, C;\n  let uSq, A, B, deltaSigma, s;\n\n  do {\n    sinLambda = Math.sin(lambda);\n    cosLambda = Math.cos(lambda);\n    sinSigma = Math.sqrt(\n      (cosU2 * sinLambda) * (cosU2 * sinLambda)\n      + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n      * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n    );\n    if (sinSigma === 0) {\n      return { azi1: 0, s12: 0 }; // coincident points\n    }\n    cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n    sigma = Math.atan2(sinSigma, cosSigma);\n    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;\n    cos2Alpha = 1 - sinAlpha * sinAlpha;\n    cos2SigmaM = (cos2Alpha !== 0) ? (cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) : 0;\n    C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n    lambdaP = lambda;\n    lambda = L + (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  } while (Math.abs(lambda - lambdaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { azi1: NaN, s12: NaN }; // formula failed to converge\n  }\n\n  uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n  deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n    - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n\n  s = (a * (1 - f)) * A * (sigma - deltaSigma);\n\n  // Forward azimuth\n  const azi1 = Math.atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n\n  return { azi1, s12: s };\n}\n\n/**\n * Solves the direct geodetic problem using Vincenty's formulae.\n * Given a starting point, initial azimuth, and distance, computes the destination point on the ellipsoid.\n *\n * @param {number} lat1 Latitude of the starting point in radians.\n * @param {number} lon1 Longitude of the starting point in radians.\n * @param {number} azi1 Initial azimuth (forward azimuth) in radians.\n * @param {number} s12 Distance to travel from the starting point in meters.\n * @param {number} a Semi-major axis of the ellipsoid in meters.\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{lat2: number, lon2: number}} The latitude and longitude (in radians) of the destination point.\n */\nexport function vincentyDirect(lat1, lon1, azi1, s12, a, f) {\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinAlpha1 = Math.sin(azi1), cosAlpha1 = Math.cos(azi1);\n\n  const sigma1 = Math.atan2(sinU1, cosU1 * cosAlpha1);\n  const sinAlpha = cosU1 * sinAlpha1;\n  const cos2Alpha = 1 - sinAlpha * sinAlpha;\n  const uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n\n  let sigma = s12 / ((a * (1 - f)) * A), sigmaP, iterLimit = 100;\n  let cos2SigmaM, sinSigma, cosSigma, deltaSigma;\n\n  do {\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n    sinSigma = Math.sin(sigma);\n    cosSigma = Math.cos(sigma);\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n      - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n    sigmaP = sigma;\n    sigma = s12 / ((a * (1 - f)) * A) + deltaSigma;\n  } while (Math.abs(sigma - sigmaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { lat2: NaN, lon2: NaN };\n  }\n\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n  const lat2 = Math.atan2(\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n  );\n  const lambda = Math.atan2(\n    sinSigma * sinAlpha1,\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n  );\n  const C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n  const L = lambda - (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  const lon2 = lon1 + L;\n\n  return { lat2, lon2 };\n}\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} face\n * @property {number} x0\n * @property {number} y0\n * @property {number} es\n * @property {number} one_minus_f\n * @property {number} one_minus_f_squared\n */\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {number} sinph0\n * @property {number} cosph0\n * @property {number} pn1\n * @property {number} h\n * @property {number} rp\n * @property {number} p\n * @property {number} h1\n * @property {number} pfact\n * @property {number} es\n * @property {number} tilt\n * @property {number} azi\n * @property {number} cg\n * @property {number} sg\n * @property {number} cw\n * @property {number} sw\n */\n\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {1 | 0} flip_axis\n * @property {number} h\n * @property {number} radius_g_1\n * @property {number} radius_g\n * @property {number} radius_p\n * @property {number} radius_p2\n * @property {number} radius_p_inv2\n * @property {'ellipse'|'sphere'} shape\n * @property {number} C\n * @property {string} sweep\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} phi1\n * @property {number} cphi1\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} m1\n * @property {number} am1\n */\n\nvar EPS10 = 1e-10;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n","import core from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\n/**\n * @typedef {Object} Mgrs\n * @property {(lonlat: [number, number]) => string} forward\n * @property {(mgrsString: string) => [number, number, number, number]} inverse\n * @property {(mgrsString: string) => [number, number]} toPoint\n */\n\n/**\n * @template {import('./core').TemplateCoordinates} T\n * @type {core<T> & {defaultDatum: string, Proj: typeof Proj, WGS84: Proj, Point: typeof Point, toPoint: typeof common, defs: typeof defs, nadgrid: typeof nadgrid, transform: typeof transform, mgrs: Mgrs, version: string}}\n */\nconst proj4 = Object.assign(core, {\n  defaultDatum: 'WGS84',\n  Proj,\n  WGS84: new Proj('WGS84'),\n  Point,\n  toPoint: common,\n  defs,\n  nadgrid,\n  transform,\n  mgrs,\n  version: '__VERSION__'\n});\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n"],"names":["MapEvent","Event","constructor","type","map","frameState","super","this","undefined","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","preventDefault","stopPropagation","MapBrowserEventHandler","Target","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","element","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","listen","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","bind","addEventListener","EventType","TOUCHMOVE","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","CLICK","dispatchEvent","clearTimeout","DBLCLICK","setTimeout","SINGLECLICK","updateActivePointers_","event","id","pointerId","POINTERUP","POINTERCANCEL","target","POINTERDOWN","POINTERMOVE","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","length","forEach","unlistenByKey","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","push","handlePointerMove_","getRootNode","isMoving_","POINTERDRAG","cancelable","Math","abs","clientX","clientY","disposeInternal","removeEventListener","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","clear","dequeue","elements","priorities","pop","siftUp_","elementKey","enqueue","assert","priority","siftDown_","getCount","getLeftChildIndex_","index","getRightChildIndex_","getParentIndex_","heapify_","i","isEmpty","isKeyQueued","key","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","PriorityQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","CHANGE","getTilesLoading","tile","state","getState","TileState","LOADED","ERROR","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","IDLE","load","GroupEvent","layer","Property","LayerGroup","BaseLayer","options","baseOptions","assign","layers","on","once","un","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","Collection","slice","unique","setLayers","handleLayerChange_","changed","getLayers","CollectionEventType","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","layersArray","getArray","ii","registerLayerListeners_","listenerKeys","ObjectEventType","PROPERTYCHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","get","collection","currentLayers","set","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","zIndex","layerState","opacity","visible","maxResolution","min","minResolution","max","minZoom","maxZoom","extent","getIntersection","getSourceState","MapRenderer","Disposable","dispatchRenderEvent","abstract","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","resolution","rotation","center","makeInverse","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","geometry","call","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","m","distanceSq","sort","a","b","some","hasFeatureAtCoordinate","TRUE","getMap","renderFrame","scheduleExpireIconCache","iconImageCache","canExpireCache","postRenderFunctions","expireIconCache","expire","fontChangeListenerKey_","checkedFonts","redrawText","document","createElement","style","position","width","height","className","CLASS_UNSELECTABLE","container","insertBefore","firstChild","children_","renderedVisible_","hasListener","RenderEvent","remove","display","RenderEventType","PRECOMPOSE","BaseVectorLayer","getDeclutter","declutter","renderedLayerStates","previousElement","layerIndex","sourceState","unrender","render","replaceChildren","POSTCOMPOSE","renderDeclutter","renderDeferred","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","BaseObject","optionsInternal","keyboardEventTarget","getElementById","layerGroup","controls","interactions","overlays","MapProperty","view","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","onFocusOnly","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","then","viewOptions","setView","setMap","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","getSize","scaleX","scaleY","eventPosition","changedTouches","left","top","getTarget","getTargetElement","toUserCoordinate","getView","getProjection","applyTransform","getOverlayById","group","extend","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","browserEvent","mapBrowserEvent","handleMapBrowserEvent","eventType","WHEEL","KEYDOWN","rootNode","currentDoc","ShadowRoot","host","documentElement","contains","interactionsArray","getActive","handleEvent","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","Date","now","time","animate","RENDERCOMPLETE","MapEventType","LOADEND","LOADSTART","getAnimating","resolveConstraints","CONTEXTMENU","dispose","unobserve","setSize","CompositeMapRenderer","targetRoot","KEYPRESS","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","prototype","equalsExtent","MOVESTART","createOrUpdateEmpty","MOVEEND","clone","POSTRENDER","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","equals","setViewportSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scale","scaleArray_","toSize","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","listener","unlistenImageChange","Promise","resolve","tmpTransform","tmpPoint","NaN","Geometry","extent_","createEmpty","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","memoizeOne","revision","squaredTolerance","transform","getSimplifiedGeometry","simplifyTransformed","getRevision","closestPointXY","x","y","closestPoint","minSquaredDistance","containsXY","Number","MIN_VALUE","getClosestPoint","point","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","angle","anchor","sx","sy","simplify","tolerance","getType","transformFn","intersectsExtent","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","stride","pixelExtent","projectedExtent","getWorldExtent","getHeight","transformed","transform2D","projTransform","getTransform","cache","code","replace","add","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","iconImage","src","crossOrigin","color","getCacheKey","getPattern","pattern","update","ImageState","LOADING","getSharedCanvasContext2D","createPattern","maxCacheSize","asArray","shared","withCredentials","xhr","url","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","response","readFeatures","featureProjection","readProjection","_unused","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","all","maxEntries","rbush_","RBush_","items_","insert","item","minX","minY","maxX","maxY","extents","items","l","uid","bbox","getAll","getInExtent","search","forEach_","forEachInExtent","data","toJSON","createOrUpdate","concat","rbush","VectorSourceEvent","VectorSource","Source","attributions","interpolate","loader_","VOID","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","RBush","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","getGeometry","VectorEventType","RenderFeature","handleFeatureChange_","valid","String","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","evt","removeFeature","fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","getLength","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","object","containsExtent","refresh","removeLoadedExtent","obj","removeFeatures","removed","featureChangeKeys","idString","splice","indexOf","setLoader","setUrl","setOverlaps","Observable","EventTarget","onInternal","onceInternal","unInternal","revision_","len","keys","listenOnce","ol_key","unByKey","TileRange","tileCoord","containsTileRange","tileRange","intersects","boundingExtent","extendCoordinate","buffer","closestSquaredDistanceXY","dx","dy","containsCoordinate","extent1","extent2","coordinateRelationship","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","extendFlatCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCenter","getCorner","corner","Error","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","intersection","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","stops","xs","ys","_boundingExtentXYs","floor","multiWorld","isFinite","METERS_PER_UNIT","PI","LinearRing","SimpleGeometry","layout","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","maxSquaredDelta","assignClosestPoint","linearRingArea","getCoordinates","inflateCoordinates","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","douglasPeucker","setLayout","deflateCoordinates","Polygon","ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getFlatCoordinates","polygon","applyProperties","arrayMaxSquaredDelta","assignClosestArrayPoint","linearRingsContainsXY","getOrientedFlatCoordinates","linearRingsArea","right","orientLinearRings","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","Control","target_","_this$element","_this$element2","_this$target_","mapEvent","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","Set","flatMap","getAttributions","_layer$getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","attribution","toPromise","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","CLASS_HIDDEN","resetNorth_","easing","easeOut","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","cancelAnimations","zoom","setZoom","defaults","Zoom","zoomOptions","Rotate","rotateOptions","Attribution","attributionOptions","Fill","patternImage_","color_","setColor","getColor","patternImage","getIconImage","fill","CanvasPattern","CanvasGradient","tmp","linearRingIsClockwise","edge","isClockwise","linearRingssAreOriented","endss","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance","squaredSegmentDistance","douglasPeuckerArray","snap","round","quantize","dx1","dy1","dx2","dy2","quantizeMultiArray","simplifiedEndss","ua","navigator","userAgent","toLowerCase","WEBKIT","includes","test","MAC","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","lineStringLength","fontRegEx","RegExp","join","fontRegExMatchIndex","fontWeights","normal","bold","getFontParameters","fontSpec","match","lineHeight","weight","variant","trim","families","family","split","f","PRERENDER","FALSE","fn","lastResult","lastArgs","lastThis","nextArgs","arguments","arrayEquals","getter","err","reject","promiseGetter","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","s","divider","endsWith","substring","throwInvalidColor","parseRgba","startsWith","rgb","alpha","rgbDivider","clamp","hex","step","colorFromHex","colorComponent","parseInt","context","createCanvasContext2D","willReadFrequently","desynchronized","fillStyle","invalidCheckFillStyle","colorString","clearRect","fillRect","colorFromImage","getImageData","toFixed","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","output","b1","v","pow","b2","a1","a2","rgbaToLcha","r","g","q","h","atan2","lchaToRgba","c","z","fromString","hasOwnProperty","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","fromEPSG4326","input","dimension","toEPSG4326","atan","exp","EPSG4326Projection","axisOrientation","metersPerUnit","K0","E","E2","E3","E_P2","SQRT_E","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c2","d","d2","d3","d4","d5","latitude","longitude","wrap","toRadians","zoneToCentralLongitude","number","toDegrees","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLon","centralLonRad","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","makeTransformFunction","transformer","coord","DEFAULT_RADIUS","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","transformFactories","getCode","forward","inverse","projectionFactories","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","addProjection","addProj","addTransformFunc","projectionLike","getProj","makeProjection","pointResolution","getPointResolutionFunc","getMetersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","destProj","lonLat","lon","modulo","equivalent","projection1","projection2","equalUnits","sourceCode","destinationCode","transformFunc","getTransformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","transformExtent","userProjection","getUserProjection","sourceProjection","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","createSafeCoordinateTransform","worldsAway","sourceExtent","sourceExtentWidth","getWorldsAway","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getData","prepareFrame","getLayer","image","renderIfReadyAndVisible","loadImage","imageState","getVisible","canvasPool","pixelContext","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","deferredContext_","containerReused","col","row","drawImage","getBackground","background","useContainer","backgroundColor","layerClassName","getClassName","canvas","firstElementChild","HTMLCanvasElement","getContext","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","prepareContainer","canvasTransform","toTransformString","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","ZIndexContext","draw","getRenderTransform","offsetX","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","LayerProperty","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","isVisible","getMapInternal","calculateExtent","find","layerExtent","_this$getSource","getViewStateAndExtent","MAP","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","clearRenderer","CollectionEvent","unique_","array_","assertUnique_","updateLength_","arr","insertAt","elem","removeAt","prev","setAt","except","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","lastIndex","firstIndex","getAngle","Interaction","setActive","InteractionProperty","active","zoomByDelta","newResolution","getResolutionForZoom","delta_","stopEvent","shiftKey","var_args","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","centroid","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","noKinetic_","beginInteraction","centroidFromPointers","scaleCoordinate","getResolution","rotateCoordinate","adjustCenterInternal","distance","getCenterInternal","centerpx","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","theta","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","removeChild","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","_options$minArea","_options$condition","_options$boxEndCondit","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","currentCenter","linear","pan","platformModifierKey","totalDelta_","lastDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","properties","hasProperties","getProperties","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","name","removeChangeListener","squaredDx","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingssContainsXY","Text","font_","font","keepUpright_","keepUpright","text_","text","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","fill_","maxAngle_","maxAngle","placement_","placement","overflow_","stroke_","stroke","offsetX_","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setFill","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","assertion","errorMessage","ObjectEvent","oldValue","values_","getKeys","getPropertiesInternal","notify","silent","unset","ret","RegularShape","hitDetectionCanvas_","origin_","points","radius2_","radius2","size_","renderOptions_","imageState_","getPoints","getRadius","getRadius2","createHitDetectionCanvas_","_this$fill_","_iconImageCache$get","fillKey","cacheKey","renderOptions","ceil","draw_","IconImage","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","e","miterRatio","k","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","defaultLineCap","defaultLineJoin","lineDash","lineDashOffset","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","asColorLike","defaultStrokeStyle","defaultLineWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","defaultMiterLimit","maxRadius","createPath_","defaultFillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","closePath","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","lineStringCoordinateAtM","getCoordinateAt","fraction","interpolatePoint","getFlatMidpoint","_this$flatMidpoint_","intersectsLineString","MultiPoint","appendPoint","multiPoint","getPoint","MultiLineString","lineStrings","getLayout","appendLineString","multiLineString","lineStringsCoordinateAtM","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","intersectsLineStringArray","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssArea","inflateMultiCoordinatesArray","getEndss","getFlatInteriorPoints","flatCenters","linearRingssCenter","getInteriorPointsOfMultiArray","getInteriorPoints","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometry","setGeometries","setGeometriesArray","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","equivalentProjection","fromProjection","toProjection","decimals","power","GeometryConstructor","createRenderFeature","_geometry$ends","_objectSpread","flat","geometryType","orientFlatCoordinates","enableSimplifyTransformed","createGeometry","getObject","JSON","parse","FeatureFormat","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","getLayoutForStride","readPointGeometry","_coordinates$","readLineStringGeometry","_coordinates$5","readPolygonGeometry","_coordinates$3","readMultiPointGeometry","_coordinates$2","readMultiLineStringGeometry","_coordinates$4","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","JSONFeature","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","crs","objects","none","createSnapToN","isMoving","createSnapToZero","t","originalListener","eventsKey","coordinatess","coordinatesss","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","LOAD","RESIZE","taintedTestContext","hitDetectionImage_","image_","crossOrigin_","canvas_","src_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getSrc","_unused2","HTMLImageElement","decodeFallback","catch","ctx","globalCompositeOperation","onChange","o","cumulativeLengths","binarySearch","lerp","lo","hi","mid","m0","Tile","transition_","transition","transitionStarts_","release","setState","getTileCoord","getAlpha","easeIn","inTransition","endTransition","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","complete","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","imageSize","setAnchor","iconImageSize","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","linearFindNearest","createSnapToResolutions","defaultMaxResolution","degrees","DEFAULT_TILE_SIZE","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationNone","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","addCoordinate","currentResolution","w","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nearest","_this$resolutions_","baseLevel","fit","geometryOrExtent","polygonFromExtent","cosAngle","sinAngle","coords","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","reverseSubArray","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","width_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","segmentLength","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","interiorPoints","beg","keep","saveTextStates_","defaultPadding","p0","p1","p2","p3","p","hitDetectionBackgroundFill","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","richTextToPlainText","part","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","reduce","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","box","strokePadding","drawImageOrLabel","alignAndScale","repeatSize","restore","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","ascending","targetContext","builderTypes","descending","maxBuilderTypes","requireClip","pushFunction","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","globalAlpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","setTransform","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","getZIndex","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","CanvasVectorLayerRenderer","CanvasLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","releaseCanvas","transforms","styleFunction","userExtent","imageSmoothingEnabled","CanvasImmediateRenderer","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","setImage","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","getSquaredRenderTolerance","resultFeatures","hitDetect","_frameState$declutter","lastIndexOf","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","dirty","replayGroupInstructions","ExecutorGroup","VectorLayer","destinationStride","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","_this$getRenderer","setRenderer","setHitDetectionRenderer","setZIndex","toFunction","defaultStyles","createDefaultStyle","Stroke","CircleStyle","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","isString","dispatching","pendingRemovals","propagate","pr","getListeners","settings","shift","sharedCanvasContext","newNode","oldNode","parent","parentNode","replaceChild","node","lastChild","children","oldChildren","childNodes","oldChild","newChild","asImageLike","HTMLVideoElement","ImageBitmap","disposedError","defaultSize","DataTile","data_","error_","controller_","controller","getError","error","abort","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","_this$entries_$key","sourceKey","getKeyZXY","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedPixelRatio","renderedProjection","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","LRUCache","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","tileGrid","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","tileOrigin","tileSize","getTileSize","ImageTile","ReprojTile","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","preload","minZ","zDirection","viewport","getTileRangeForExtentAndZ","tileCoordIntersectsViewport","tileQueueKey","getTileCoordCenter","findStaleTile_","staleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","loaded","viewResolution","viewCenter","frameExtent","canvasExtent","getPreload","targetZ","renderExtent","tileState","parentZ","canvasScale","getInterpolate","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","BaseTileLayer","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","TileProperty","getUseInterimTilesOnError","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","listenImage","Cluster","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","_this$source","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","background_","className_","state_","setBackground","setExtent","setMaxResolution","setMinResolution","setVisible","zindex","haystack","needle","comparator","cmp","low","high","found","candidate","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","quickselect","defaultCompare","sd","swap","_maxEntries","_minEntries","_all","toBBox","nodesToSearch","child","childBBox","leaf","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","goingUp","findItem","_condense","compareMinX","compareMinY","fromJSON","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","level","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","DEFAULT_MAX_ZOOM","setRadius","_options$attributions","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","setAttributions","attributionLike","twiceArea","linearRingss","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","loadHandler","errorHandler","listening","decoding","handleLoad","unlisten","handleError","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","targetExtent","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","applyMatrix","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","sourceRange","srcX","srcY","reproject_","_this$clipExtent_","renderReprojected","leftToLoad","_ref","sourceListenKey","unlistenSources_","_ref2","hash","withinExtentAndZ","getFullTileRange","measureFont","measureContext","textHeights","genericFontFamilies","getFontKey","retries","fontFaceSet","async","isAvailable","fontFaces","checkFamily","checkWeight","check","done","checkedFontsProperties","fonts","currentRetries","needCheck","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","measureTextWidth","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","iconCache","canvasPattern","patternCanvasContext","asCanvasPattern","coordinatesExtent","point1","point2","intersectsLinearRing","coordinate1","coordinate2","levels","info","console","disposed","uidCounter_","ol_uid","mat","maxRow","maxEl","absValue","coef","angleInRadians","angleInDegrees","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","_len","_key","newParsingContext","variables","mapState","encoded","expectedType","colorFromString","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","message","interpolationType","base","interpolation","stop","operation","argCount","needleType","arg","colors","parsedColors","minArgs","maxArgs","plural","expression","argType","_len2","validators","_key2","parsed","computeGeometryType","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","declutter_","updateWhileAnimating_","updateWhileInteracting_","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","setDeclutter","assignClosest","offset1","offset2","squaredDelta","isRing","registered","register","proj4","projCodes","defs","getCachedProjection","def","projName","axis","to_meter","code1","proj1","code2","proj2","_this","_defineProperty","push_","instructions_","Proxy","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","simpleGeometry","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","half","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplate","template","renderXYZTemplate","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","TileSource","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","gridProjection","TileSourceEvent","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","charCodeAt","stopCharCode","charCode","expandUrl","defaultTileLoadFunction","imageTile","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","TileImage","xyzOptions","gridOptions","createXYZ","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","_this$ends_","create","setFromArray","transform1","transform2","compose","det","matrixPrecision","cssTransform","cssTransform1","cssTransform2","mat1","mat2","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","primeMeridian","mm","cm","ft","fath","kmi","km","mi","yd","ch","link","dm","in","ignoredChar","testkey","lkey","defData","paramName","paramVal","paramOutname","paramObj","params","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","legalAxis","substr","approx","idNode","authority","convertUnit","conversion_factor","conversionFactor","convertAxis","abbreviationMatch","abbreviation","toUpperCase","orderNode","unitNode","extractAxes","convert","base_crs","conversion","csNode","coordinate_system","lengthUnitNode","datumOrEnsembleNode","datumOrEnsemble","datum_ensemble","primem","prime_meridian","ellipsoid","members","member","accuracyNode","accuracy","ellipsoidNode","semi_major_axis","inverse_flattening","method","parameters","param","sourceCrsNode","sourceCrsContent","source_crs","targetCrsNode","targetCrsContent","target_crs","transformationNode","transformation","scaleDifference","keyword","PROJJSONBuilderBase","subtype","usage","usageNode","scope","buildPROJJSON","root","version","detectWKT2Version","PROJJSONBuilder2019","PROJJSONBuilder2015","txt","Parser","NEUTRAL","whitespace","latin","endThings","digets","place","currentObject","mapit","thing","newObj","sExpr","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","d2r","applyProjectionDefaults","wkt","normalizedProjName","processUnit","toValue","valueOrObject","calculateEllipsoid","semi_minor_axis","transformPROJJSON","projjson","srsCode","ellps","paramValue","latitude_of_false_origin","longitude_of_false_origin","latitude_of_standard_parallel","latitude_of_1st_standard_parallel","latitude_of_2nd_standard_parallel","latitude_of_projection_centre","longitude_of_projection_centre","easting_at_false_origin","northing_at_false_origin","latitude_of_natural_origin","longitude_of_natural_origin","longitude_of_origin","false_easting","easting_at_projection_centre","false_northing","northing_at_projection_centre","standard_parallel_1","standard_parallel_2","scale_factor_at_natural_origin","scale_factor_at_projection_centre","scale_factor_on_pseudo_standard_parallel","azimuth","azimuth_at_projection_centre","angle_from_rectified_to_skew_grid","knownTypes","cleanWKT","setPropertiesFromWkt","AUTHORITY","local","PROJECTION","AXIS","axisOrder","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","TOWGS84","outName","inName","rename","normalizedWKT","detectWKTVersion","lisp","that","charAt","parseProj","EPSG","ESRI","IAU2000","WGS84","GOOGLE","globals","codes","testObj","testDef","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","projStr","testProj","eccent","sinphi","cosphi","con","sign","phi","com","ts","dphi","eccnth","identity","pt","projs","init","es","msfnz","lat","adjust_lon","tsfnz","phi2z","projStore","getNormalizedProjName","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk80ign","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Ellipsoid","datums","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","EPSG_5451","IGNF_LURESG","EPSG_4614","EPSG_4615","ESRI_37241","ESRI_37249","ESRI_37245","EPSG_4178","EPSG_4622","EPSG_4625","EPSG_5252","EPSG_4314","EPSG_4282","EPSG_4231","EPSG_4274","EPSG_4134","EPSG_4254","EPSG_4159","EPSG_4687","EPSG_4227","EPSG_4746","EPSG_4745","EPSG_6311","EPSG_4289","EPSG_4230","EPSG_4154","EPSG_4156","EPSG_4299","EPSG_4179","EPSG_4313","EPSG_4194","EPSG_4195","EPSG_4196","EPSG_4611","EPSG_4633","EPSG_4641","EPSG_4643","EPSG_4300","EPSG_4188","EPSG_4660","EPSG_4662","EPSG_3906","EPSG_4307","EPSG_6892","EPSG_4690","EPSG_4691","EPSG_4629","EPSG_4630","EPSG_4692","EPSG_9333","EPSG_9059","EPSG_4312","EPSG_4123","EPSG_4309","ESRI_104106","EPSG_4281","EPSG_4322","EPSG_4324","EPSG_4284","EPSG_4277","EPSG_4207","EPSG_4688","EPSG_4689","EPSG_4720","EPSG_4273","EPSG_4240","EPSG_4817","ESRI_104131","EPSG_4265","EPSG_4263","EPSG_4298","EPSG_4270","EPSG_4229","EPSG_4220","EPSG_4214","EPSG_4232","EPSG_4238","EPSG_4168","EPSG_4131","EPSG_4152","EPSG_5228","EPSG_8351","EPSG_4683","EPSG_4133","EPSG_7373","EPSG_9075","EPSG_9072","EPSG_9294","EPSG_4212","EPSG_4191","EPSG_4237","EPSG_4740","EPSG_4124","EPSG_5681","EPSG_4141","EPSG_4204","EPSG_4319","EPSG_4200","EPSG_4130","EPSG_4127","EPSG_4149","EPSG_4617","EPSG_4663","EPSG_4664","EPSG_4665","EPSG_4666","EPSG_4756","EPSG_4723","EPSG_4726","EPSG_4267","EPSG_5365","EPSG_4218","EPSG_4242","EPSG_4216","ESRI_104105","ESRI_104129","EPSG_4673","EPSG_4202","EPSG_4203","EPSG_3819","EPSG_8694","EPSG_4145","EPSG_4283","EPSG_4317","EPSG_4272","EPSG_4248","EPSG_5561","EPSG_5233","ESRI_104130","ESRI_104102","ESRI_37207","EPSG_4675","ESRI_104109","ESRI_104112","ESRI_104113","IGNF_WGS72G","IGNF_NTFG","IGNF_EFATE57G","IGNF_PGP50G","IGNF_REUN47G","IGNF_CSG67G","IGNF_GUAD48G","IGNF_TAHI51G","IGNF_TAHAAG","IGNF_NUKU72G","IGNF_PETRELS72G","IGNF_WALL78G","IGNF_MAYO50G","IGNF_TANNAG","IGNF_IGN72G","IGNF_ATIGG","IGNF_FANGA84G","IGNF_RUSAT84G","IGNF_KAUE70G","IGNF_MOP90G","IGNF_MHPF67G","IGNF_TAHI79G","IGNF_ANAA92G","IGNF_MARQUI72G","IGNF_APAT86G","IGNF_TUBU69G","IGNF_STPM50G","EPSG_4150","EPSG_4754","ESRI_104101","EPSG_4693","EPSG_6207","EPSG_4153","EPSG_4132","EPSG_4221","EPSG_4266","EPSG_4193","EPSG_5340","EPSG_4246","EPSG_4318","EPSG_4121","EPSG_4223","EPSG_4158","EPSG_4285","EPSG_4613","EPSG_4607","EPSG_4475","EPSG_4208","EPSG_4743","EPSG_4710","EPSG_7881","EPSG_4682","EPSG_4739","EPSG_4679","EPSG_4750","EPSG_4644","EPSG_4695","EPSG_4292","EPSG_4302","EPSG_4143","EPSG_4606","EPSG_4699","EPSG_4247","EPSG_4160","EPSG_4161","EPSG_9251","EPSG_9253","EPSG_4297","EPSG_4269","EPSG_4301","EPSG_4618","EPSG_4612","EPSG_4678","EPSG_4250","EPSG_4144","EPSG_4147","EPSG_4259","EPSG_4164","EPSG_4211","EPSG_4182","EPSG_4224","EPSG_4225","EPSG_5527","EPSG_4752","EPSG_4310","EPSG_9248","EPSG_4680","EPSG_4701","EPSG_4706","EPSG_4805","EPSG_4201","EPSG_4210","EPSG_4183","EPSG_4139","EPSG_4668","EPSG_4717","EPSG_4732","EPSG_4280","EPSG_4209","EPSG_4261","EPSG_4658","EPSG_4721","EPSG_4222","EPSG_4601","EPSG_4602","EPSG_4603","EPSG_4605","EPSG_4621","EPSG_4657","EPSG_4316","EPSG_4642","EPSG_4698","EPSG_4192","EPSG_4311","EPSG_4135","ESRI_104138","EPSG_4245","EPSG_4142","EPSG_4213","EPSG_4253","EPSG_4129","EPSG_4713","EPSG_4239","EPSG_4146","EPSG_4155","EPSG_4165","EPSG_4672","EPSG_4236","EPSG_4251","EPSG_4271","EPSG_4175","EPSG_4716","EPSG_4315","EPSG_4744","EPSG_4244","EPSG_4293","EPSG_4714","EPSG_4736","EPSG_6883","EPSG_6894","EPSG_4205","EPSG_4256","EPSG_4262","EPSG_4604","EPSG_4169","EPSG_4620","EPSG_4184","EPSG_4616","EPSG_9403","EPSG_4684","EPSG_4708","EPSG_4707","EPSG_4709","EPSG_4712","EPSG_4711","EPSG_4718","EPSG_4719","EPSG_4724","EPSG_4725","EPSG_4735","EPSG_4722","EPSG_4728","EPSG_4734","EPSG_4727","EPSG_4729","EPSG_4730","EPSG_4733","ESRI_37218","ESRI_37240","ESRI_37221","ESRI_4305","ESRI_104139","EPSG_4748","EPSG_4219","EPSG_4255","EPSG_4257","EPSG_4646","EPSG_6881","EPSG_6882","EPSG_4715","IGNF_RGF93GDD","IGNF_RGM04GDD","IGNF_RGSPM06GDD","IGNF_RGTAAF07GDD","IGNF_RGFG95GDD","IGNF_RGNCG","IGNF_RGPFGDD","IGNF_ETRS89G","IGNF_RGR92GDD","EPSG_4173","EPSG_4180","EPSG_4619","EPSG_4667","EPSG_4075","EPSG_6706","EPSG_7798","EPSG_4661","EPSG_4669","EPSG_8685","EPSG_4151","EPSG_9702","EPSG_4758","EPSG_4761","EPSG_4765","EPSG_8997","EPSG_4023","EPSG_4670","EPSG_4694","EPSG_4148","EPSG_4163","EPSG_4167","EPSG_4189","EPSG_4190","EPSG_4176","EPSG_4659","EPSG_3824","EPSG_3889","EPSG_4046","EPSG_4081","EPSG_4558","EPSG_4483","EPSG_5013","EPSG_5264","EPSG_5324","EPSG_5354","EPSG_5371","EPSG_5373","EPSG_5381","EPSG_5393","EPSG_5489","EPSG_5593","EPSG_6135","EPSG_6365","EPSG_5246","EPSG_7886","EPSG_8431","EPSG_8427","EPSG_8699","EPSG_8818","EPSG_4757","EPSG_9140","EPSG_8086","EPSG_4686","EPSG_4737","EPSG_4702","EPSG_4747","EPSG_4749","EPSG_4674","EPSG_4755","EPSG_4759","EPSG_4762","EPSG_4763","EPSG_4764","EPSG_4166","EPSG_4170","EPSG_5546","EPSG_7844","EPSG_4818","ep2","datum_type","grids","loadedNadgrids","readGeotiffGrid","tiff","subgrids","subGridCount","getImageCount","subgridIndex","readRasters","lim","imageBBoxRadians","getBoundingBox","degreesToRadians","del","fileDirectory","ModelPixelScale","latitudeOffsetBand","longitudeOffsetBand","nodes","secondsToRadians","ll","cvs","tifGrid","header","nSubgrids","parseNadgridString","optional","mandatory","grid","isNull","seconds","decodeString","Uint8Array","mapNodes","longitudeShift","latitudeShift","readGridHeader","isLittleEndian","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","includeErrorFields","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","json","parseCode","ourProj","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","getNadgrids","datumObj","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","checkParams","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","attemptedGrids","outer","subgrid","epsilon","applySubgridShift","pin","ct","tb","nadInterpolate","dif","inx","indx","frct","f00","f10","f11","f01","m11","m10","m00","m01","denorm","xin","yin","zin","checkCoord","num","TypeError","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","to","transformedArray","checkProj","oProj","fromProjOrToProj","toProjOrCoord","fromProj","toProj","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","UTMtoLL","bottom","utm","seasting","snorthing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","eccPrimeSquared","T","C","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","T1","C1","R1","D","LongOrigin","phi1Rad","e1","LetterDesignator","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","pj_inv_mlfn","tan_phi","ds","temp","asin","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","hr","hi1","hr1","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","typeAProjections","projectionName","isTypeA","no_rot","alp","gam","one_es","lam0","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","sinb","cosb","OBLIQ","EQUIT","N_POLE","S_POLE","cCe","sCe","cosz","sinz","beta","authlat","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c3","m1","th1","sin_p12","cos_p12","Mlp","Ml","kp","cos_c","vars","azi1","lon1","lon2","U1","U2","sinU1","cosU1","sinU2","cosU2","lambdaP","sinLambda","cosLambda","sinSigma","cosSigma","sigma","sinAlpha","cos2Alpha","cos2SigmaM","uSq","deltaSigma","iterLimit","s12","vincentyInverse","sinAlpha1","cosAlpha1","sigma1","sigmaP","vincentyDirect","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","tilt","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","v_x","v_y","v_z","v_zp","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","EPS10","e_fwd","am1","e_inv","s_fwd","cphi1","s_inv","core","defaultDatum","Proj","common","nadgrid","ArrayBuffer","DataView","nFields","detectLittleEndian","nSubgridFields","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","rowSize","readSubgrids","readNTV2Grid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne","includedProjections"],"sourceRoot":""}
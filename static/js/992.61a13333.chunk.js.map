{"version":3,"file":"static/js/992.61a13333.chunk.js","mappings":"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","sources":["utils/mapConfig.js","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point, LineString } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Circle, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\n\n// Componentes GeoJSON\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para encontrar pares de marcadores próximos (adaptada do Leaflet)\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Estado para controle de dois cliques no mobile\n  const [lastClickedFeature, setLastClickedFeature] = useState(null);\n  const [clickTimeout, setClickTimeout] = useState(null);\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar estilo dos marcadores individuais\n  const createMarkerStyle = useCallback((feature) => {\n    try {\n      const schoolData = feature.get('schoolData');\n      if (!schoolData) return null;\n\n      const baseColor = '#3B82F6'; // Azul para satélite, violeta para rua\n      const borderColor = '#1E40AF';\n\n      // Verificar se é parte de um par próximo\n      const isNearbyPair = feature.get('isNearbyPair');\n      const pairIndex = feature.get('pairIndex');\n\n      // Usar a função createMarkerSVG para criar o marcador (tamanho reduzido)\n      const svg = createMarkerSVG(baseColor, 24, {\n        borderColor: borderColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: false,\n        isNearbyPair: isNearbyPair\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Criar estilo base com ícone (escala reduzida)\n      const style = new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: isNearbyPair ? 1.1 : 1.0, // Marcadores de pares próximos são ligeiramente maiores\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        })\n      });\n\n      // Adicionar texto apenas se showNomesEscolas for true\n      if (showNomesEscolas) {\n        style.setText(new Text({\n          text: schoolData.titulo || 'Escola',\n          font: 'bold 10px Arial',\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: isNearbyPair ? -35 : -30, // Ajustar posição para marcadores menores\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }));\n      }\n\n      return style;\n    } catch (error) {\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [showNomesEscolas]);\n\n  // Função para criar estilo dos clusters\n  const createClusterStyle = useCallback((feature) => {\n    try {\n      const features = feature.get('features');\n      if (!features || features.length === 0) {\n        return null; // Return null for invalid features\n      }\n      \n      const size = features.length;\n\n      // Se for apenas um marcador, retorna estilo individual\n      if (size === 1) {\n        const singleFeature = features[0];\n        if (!singleFeature) return null;\n        return createMarkerStyle(singleFeature);\n      }\n\n      // Determinar cor e tamanho base baseado na quantidade de escolas (tamanhos reduzidos)\n      let baseColor = '#3B82F6';\n      let baseSize = 32; // Tamanho base reduzido para clusters\n      \n      if (size > 100) {\n        baseColor = '#1E40AF';\n        baseSize = 40;\n      } else if (size > 50) {\n        baseColor = '#2563EB';\n        baseSize = 36;\n      } else if (size > 20) {\n        baseColor = '#3B82F6';\n        baseSize = 34;\n      } else if (size > 10) {\n        baseColor = '#60A5FA';\n        baseSize = 33;\n      }\n\n      // Calcular escala proporcional (mínimo 1.0x, máximo 1.8x)\n      const scale = Math.min(1.0 + (size * 0.015), 1.8);\n      const finalSize = Math.round(baseSize * scale);\n\n      // Usar a função createMarkerSVG para criar o cluster\n      const svg = createMarkerSVG(baseColor, finalSize, {\n        borderColor: baseColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: size > 20, // Adicionar brilho para clusters grandes\n        isNearbyPair: false // Clusters não têm indicador de par próximo\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Determinar tamanho da fonte baseado no tamanho do cluster (reduzido)\n      let fontSize = '12px';\n      let fontWeight = 'bold';\n      \n      if (size > 100) {\n        fontSize = '14px';\n      } else if (size > 50) {\n        fontSize = '13px';\n      } else if (size > 20) {\n        fontSize = '12px';\n      }\n\n      return new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: 1,\n          anchor: [0.5, 0.5],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        }),\n        text: new Text({\n          text: size.toString(),\n          font: `${fontWeight} ${fontSize} Arial`,\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: finalSize * 0.6 // Posicionar texto abaixo do marcador\n        })\n      });\n    } catch (error) {\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [createMarkerStyle]);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Função para gerenciar cliques no mobile\n  const handleMobileClick = useCallback((feature, schoolData, event) => {\n    if (!isMobile()) {\n      // Desktop: abrir painel diretamente\n      onPainelOpen?.(schoolData);\n      return;\n    }\n\n    // Mobile: sistema de dois cliques\n    if (lastClickedFeature === feature) {\n      // Segundo clique no mesmo marcador\n      setLastClickedFeature(null);\n      if (clickTimeout) {\n        clearTimeout(clickTimeout);\n        setClickTimeout(null);\n      }\n      onPainelOpen?.(schoolData);\n    } else {\n      // Primeiro clique ou clique em marcador diferente\n      \n      // Limpar clique anterior\n      if (lastClickedFeature) {\n        setLastClickedFeature(null);\n      }\n      if (clickTimeout) {\n        clearTimeout(clickTimeout);\n      }\n\n      // Mostrar tooltip temporário\n      const tooltipElement = document.createElement('div');\n      tooltipElement.className = 'mobile-tooltip';\n      tooltipElement.textContent = schoolData.titulo || 'Escola Indígena';\n      tooltipElement.style.position = 'absolute';\n      tooltipElement.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';\n      tooltipElement.style.color = 'white';\n      tooltipElement.style.padding = '8px 12px';\n      tooltipElement.style.borderRadius = '6px';\n      tooltipElement.style.fontSize = '14px';\n      tooltipElement.style.fontFamily = 'Arial, sans-serif';\n      tooltipElement.style.fontWeight = '500';\n      tooltipElement.style.maxWidth = '250px';\n      tooltipElement.style.whiteSpace = 'nowrap';\n      tooltipElement.style.overflow = 'hidden';\n      tooltipElement.style.textOverflow = 'ellipsis';\n      tooltipElement.style.zIndex = '1000';\n      tooltipElement.style.pointerEvents = 'none';\n      tooltipElement.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.3)';\n      tooltipElement.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n      \n      if (map.current && event.coordinate && mapContainer.current) {\n        const coordinate = event.coordinate;\n        const pixel = map.current.getPixelFromCoordinate(coordinate);\n        if (pixel) {\n          tooltipElement.style.left = (pixel[0] + 10) + 'px';\n          tooltipElement.style.top = (pixel[1] - 10) + 'px';\n          \n          mapContainer.current.appendChild(tooltipElement);\n\n          // Auto-remove after 2 seconds\n          setTimeout(() => {\n            if (tooltipElement.parentNode) {\n              tooltipElement.remove();\n            }\n          }, 2000);\n        }\n      }\n\n      // Configurar para segundo clique\n      setLastClickedFeature(feature);\n      const timeout = setTimeout(() => {\n        setLastClickedFeature(null);\n        setClickTimeout(null);\n      }, 300); // 300ms para segundo clique\n      setClickTimeout(timeout);\n    }\n  }, [lastClickedFeature, clickTimeout, onPainelOpen]);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Verificar se é mobile e ajustar configurações\n    const isMobileDevice = isMobile();\n    const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: 18,\n        minZoom: 4,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions({\n        dragRotate: false, // Desabilitar rotação com arraste\n        pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      })\n    });\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              // Usar sistema de dois cliques para mobile\n              handleMobileClick(feature, schoolData, event);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            \n            // Calcular a extensão específica do cluster clicado\n            const clusterExtent = feature.getGeometry().getExtent();\n            \n            // Obter o zoom atual\n            const currentZoom = map.current.getView().getZoom();\n            \n            // Calcular zoom ideal baseado na quantidade de escolas no cluster\n            let targetZoom = 12; // Zoom padrão para clusters\n            if (features.length > 20) {\n              targetZoom = 10; // Zoom menor para clusters muito grandes\n            } else if (features.length > 10) {\n              targetZoom = 11; // Zoom médio para clusters grandes\n            } else if (features.length > 5) {\n              targetZoom = 12; // Zoom padrão para clusters médios\n            } else {\n              targetZoom = 13; // Zoom maior para clusters pequenos\n            }\n            \n            // Garantir que o zoom não seja menor que o atual (evitar zoom out)\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            \n            // Fazer zoom suave para a extensão do cluster\n            map.current.getView().fit(clusterExtent, {\n              duration: 800, // Animação mais suave\n              padding: [80, 80, 80, 80], // Padding maior para melhor visualização\n              maxZoom: targetZoom, // Limitar o zoom máximo\n              callback: () => {\n                // Zoom concluído\n              }\n            });\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          if (schoolData) {\n            // Usar sistema de dois cliques para mobile\n            handleMobileClick(feature, schoolData, event);\n          }\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n    let currentFeature = null;\n\n    map.current.on('pointermove', (event) => {\n      // Desabilitar tooltips de hover no mobile\n      if (isMobile()) return;\n      \n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador, mostrar tooltip\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          if (schoolData) {\n            tooltipElement = createTooltipElement(event, schoolData);\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, schoolData) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = createTooltipHTML(schoolData);\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o marcador\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do marcador\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n      // Limpar timeout se existir\n      if (clickTimeout) {\n        clearTimeout(clickTimeout);\n      }\n    };\n  }, [center, zoom, createBaseLayers, createClusterStyle, createTooltipHTML, onPainelOpen, handleMobileClick]);\n\n  // Atualizar configurações do mapa quando props mudarem\n  useEffect(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom, showNomesEscolas]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        \n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        if (pairIndex !== -1) {\n          feature.set('isNearbyPair', true);\n          feature.set('pairIndex', pairIndex);\n        }\n        \n        vectorSource.current.addFeature(feature);\n      }\n    });\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle(createClusterStyle);\n    }\n  }, [createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle(createClusterStyle);\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: (feature) => {\n            const properties = feature.getProperties();\n            const isRegularizada = properties.fase_ti === 'Regularizada';\n            \n            return new Style({\n              fill: new Fill({\n                color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n              }),\n              stroke: new Stroke({\n                color: '#B22222',\n                width: 2,\n                lineDash: [3, 3]\n              })\n            });\n          },\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        return;\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: new Style({\n            fill: new Fill({\n              color: 'rgba(0, 0, 0, 0.3)'\n            }),\n            stroke: new Stroke({\n              color: '#000000',\n              width: 2\n            })\n          }),\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n      } catch (error) {\n        // Error handling\n      }\n    }\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  // Adicionar event listeners para camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo && onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n    };\n  }, [onPainelOpen]);\n\n  return (\n    <div className={className} ref={mapContainer}>\n      {/* Informações do mapa */}\n      <div className=\"absolute bottom-20 sm:bottom-4 left-4 z-10 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-xs text-gray-600\">\n          Lat: {mapInfo.lat} | Lng: {mapInfo.lng}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Zoom: {mapInfo.zoom}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n      \n      {/* Informações adicionais */}\n      <div className=\"absolute top-20 left-4 z-30 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-sm font-semibold text-gray-800\">\n          Escolas Indígenas: {totalEscolas}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Mapa otimizado sem gaps\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n// Mobile interaction state management\nexport class MobileInteractionManager {\n  constructor() {\n    this.lastClickedFeature = null;\n    this.clickTimeout = null;\n    this.clickDelay = 300; // Time in ms to wait for second click\n  }\n\n  handleClick(feature, onFirstClick, onSecondClick, isMobileDevice = false) {\n    if (!isMobileDevice) {\n      // Desktop behavior - direct action\n      onSecondClick(feature);\n      return;\n    }\n\n    // Mobile behavior - two-click pattern\n    if (this.lastClickedFeature === feature) {\n      // Second click on same feature\n      this.clearTimeout();\n      this.lastClickedFeature = null;\n      onSecondClick(feature);\n    } else {\n      // First click or click on different feature\n      if (this.lastClickedFeature) {\n        // Clear previous first click\n        this.clearTimeout();\n      }\n      \n      this.lastClickedFeature = feature;\n      onFirstClick(feature);\n      \n      // Set timeout to clear first click\n      this.clickTimeout = setTimeout(() => {\n        this.lastClickedFeature = null;\n      }, this.clickDelay);\n    }\n  }\n\n  clearTimeout() {\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n  }\n\n  reset() {\n    this.clearTimeout();\n    this.lastClickedFeature = null;\n  }\n} "],"names":["MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","proj4","defs","register","PROXIMITY_THRESHOLD","createMarkerSVG","color","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","_ref","dataPoints","onPainelOpen","className","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","showNomesEscolas","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","terrasIndigenasLayerRef","estadoSPLayerRef","lastClickedFeature","setLastClickedFeature","clickTimeout","setClickTimeout","createBaseLayers","useCallback","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createMarkerStyle","feature","schoolData","get","svg","svgUrl","encodeURIComponent","style","Style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","titulo","font","fill","Fill","stroke","Stroke","width","offsetY","textAlign","textBaseline","error","createClusterStyle","features","singleFeature","baseSize","Math","min","finalSize","round","fontSize","fontWeight","toString","createTooltipHTML","handleMobileClick","event","isMobile","clearTimeout","tooltipElement","document","createElement","textContent","position","backgroundColor","padding","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","zIndex","pointerEvents","boxShadow","border","current","coordinate","pixel","getPixelFromCoordinate","left","top","appendChild","setTimeout","parentNode","remove","timeout","useEffect","isMobileDevice","initialCenter","initialZoom","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","Map","target","layers","view","View","fromLonLat","enableRotation","controls","defaultControls","interactions","defaultInteractions","dragRotate","pinchRotate","on","getView","toLonLat","getCenter","newView","toFixed","getZoom","changed","forEachFeatureAtPixel","clusterExtent","getExtent","currentZoom","targetZoom","max","fit","duration","callback","createTooltipElement","createClusterTooltipElement","element","backdropFilter","count","setTarget","newCenter","newZoom","currentCenter","setCenter","setZoom","clear","pontosValidos","filter","point","latitude","longitude","parseFloat","isNaN","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","abs","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","pairIndex","findIndex","pair","includes","addFeature","setStyle","removeLayer","addLayer","GeoJSON","dataProjection","featureProjection","readFeatures","terrasIndigenasLayer","isRegularizada","getProperties","fase_ti","lineDash","getSource","getFeatures","properties","terrai_nom","tipo","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","estadoSPLayer","interactive","handleClick","terraIndigenaInfo","un","_jsx","ref","children","_jsxs","cache","useGeoJSONCache","key","data","setData","loading","setLoading","setError","async","console","log","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","type","crs","firstFeature","Object","keys","coordinates","err","fetchGeoJSON","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","terrasIndigenas","hasData","estadoSP","CabecalhoMenu","_ref2","onMinimize","onClick","BotaoCamada","_ref3","id","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","quantidade","exemplo","refreshKey","useRefresh","panel","useMemo","URLSearchParams","location","search","initialPanel","find","criarSlug","painelInfo","setPainelInfo","escolasVisiveis","pontuacao","totalEscolas","group","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","groupEnd","abrirPainel","info","refreshPainel","fecharPainel","MapSelector","_Fragment","PainelInformacoes","closePainel","MobileInteractionManager","constructor","this","clickDelay","onFirstClick","onSecondClick","reset"],"sourceRoot":""}
{"version":3,"file":"static/js/992.8ba477de.chunk.js","mappings":"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","sources":["utils/mapConfig.js","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5 // Zoom ajustado para 5 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point, LineString } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Circle, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile, MobileInteractionManager } from '../utils/mobileUtils';\n\n// Componentes GeoJSON\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para encontrar pares de marcadores próximos (adaptada do Leaflet)\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  // Log para debug do zoom recebido\n  console.log('OpenLayersMap - Debug zoom recebido:', {\n    center,\n    zoom,\n    defaultCenter: MAP_CONFIG.center,\n    defaultZoom: MAP_CONFIG.zoom,\n    mobileZoom: MAP_CONFIG.mobile.zoom\n  });\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Mobile interaction manager\n  const mobileInteraction = useRef(null);\n  const [tooltipElement, setTooltipElement] = useState(null);\n\n  // Inicializar mobileInteraction de forma segura\n  useEffect(() => {\n    try {\n      mobileInteraction.current = new MobileInteractionManager();\n      console.log('OpenLayersMap: MobileInteractionManager inicializado com sucesso');\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao inicializar MobileInteractionManager:', error);\n      mobileInteraction.current = null;\n    }\n  }, []);\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar estilo dos marcadores individuais\n  const createMarkerStyle = useCallback((feature) => {\n    try {\n      const schoolData = feature.get('schoolData');\n      if (!schoolData) return null;\n\n      const baseColor = '#3B82F6'; // Azul para satélite, violeta para rua\n      const borderColor = '#1E40AF';\n\n      // Verificar se é parte de um par próximo\n      const isNearbyPair = feature.get('isNearbyPair');\n      const pairIndex = feature.get('pairIndex');\n\n      // Usar a função createMarkerSVG para criar o marcador (tamanho reduzido)\n      const svg = createMarkerSVG(baseColor, 24, {\n        borderColor: borderColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: false,\n        isNearbyPair: isNearbyPair\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Criar estilo base com ícone (escala reduzida)\n      const style = new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: isNearbyPair ? 1.1 : 1.0, // Marcadores de pares próximos são ligeiramente maiores\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        })\n      });\n\n      // Adicionar texto apenas se showNomesEscolas for true\n      if (showNomesEscolas) {\n        style.setText(new Text({\n          text: schoolData.titulo || 'Escola',\n          font: 'bold 10px Arial',\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: isNearbyPair ? -35 : -30, // Ajustar posição para marcadores menores\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }));\n      }\n\n      return style;\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do marcador:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [showNomesEscolas]);\n\n  // Função para criar estilo dos clusters\n  const createClusterStyle = useCallback((feature) => {\n    try {\n      const features = feature.get('features');\n      if (!features || features.length === 0) {\n        return null; // Return null for invalid features\n      }\n      \n      const size = features.length;\n\n      // Se for apenas um marcador, retorna estilo individual\n      if (size === 1) {\n        const singleFeature = features[0];\n        if (!singleFeature) return null;\n        return createMarkerStyle(singleFeature);\n      }\n\n      // Determinar cor e tamanho base baseado na quantidade de escolas (tamanhos reduzidos)\n      let baseColor = '#3B82F6';\n      let baseSize = 32; // Tamanho base reduzido para clusters\n      \n      if (size > 100) {\n        baseColor = '#1E40AF';\n        baseSize = 40;\n      } else if (size > 50) {\n        baseColor = '#2563EB';\n        baseSize = 36;\n      } else if (size > 20) {\n        baseColor = '#3B82F6';\n        baseSize = 34;\n      } else if (size > 10) {\n        baseColor = '#60A5FA';\n        baseSize = 33;\n      }\n\n      // Calcular escala proporcional (mínimo 1.0x, máximo 1.8x)\n      const scale = Math.min(1.0 + (size * 0.015), 1.8);\n      const finalSize = Math.round(baseSize * scale);\n\n      // Usar a função createMarkerSVG para criar o cluster\n      const svg = createMarkerSVG(baseColor, finalSize, {\n        borderColor: baseColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: size > 20, // Adicionar brilho para clusters grandes\n        isNearbyPair: false // Clusters não têm indicador de par próximo\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Determinar tamanho da fonte baseado no tamanho do cluster (reduzido)\n      let fontSize = '12px';\n      let fontWeight = 'bold';\n      \n      if (size > 100) {\n        fontSize = '14px';\n      } else if (size > 50) {\n        fontSize = '13px';\n      } else if (size > 20) {\n        fontSize = '12px';\n      }\n\n      return new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: 1,\n          anchor: [0.5, 0.5],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        }),\n        text: new Text({\n          text: size.toString(),\n          font: `${fontWeight} ${fontSize} Arial`,\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: finalSize * 0.6 // Posicionar texto abaixo do marcador\n        })\n      });\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do cluster:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [createMarkerStyle]);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Função para mostrar tooltip temporário em mobile\n  const showMobileTooltip = useCallback((event, content) => {\n    try {\n      if (!isMobile()) {\n        console.log('OpenLayersMap: showMobileTooltip chamado em desktop, ignorando');\n        return;\n      }\n\n      if (!event || !content) {\n        console.warn('OpenLayersMap: showMobileTooltip chamado sem event ou content');\n        return;\n      }\n\n      console.log('OpenLayersMap: Mostrando tooltip mobile:', content);\n\n      // Remove tooltip anterior\n      if (tooltipElement && tooltipElement.parentNode) {\n        tooltipElement.remove();\n        setTooltipElement(null);\n      }\n\n      const element = document.createElement('div');\n      element.className = 'mobile-tooltip';\n      element.textContent = content;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(0, 0, 0, 0.9)';\n      element.style.color = 'white';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '6px';\n      element.style.fontSize = '14px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '250px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.3)';\n      element.style.border = '1px solid rgba(255, 255, 255, 0.2)';\n      \n      if (map.current && event.coordinate && mapContainer.current) {\n        const coordinate = event.coordinate;\n        const pixel = map.current.getPixelFromCoordinate(coordinate);\n        if (pixel) {\n          element.style.left = (pixel[0] + 10) + 'px';\n          element.style.top = (pixel[1] - 10) + 'px';\n          \n          mapContainer.current.appendChild(element);\n          setTooltipElement(element);\n\n          // Auto-remove after 2 seconds\n          setTimeout(() => {\n            if (element.parentNode) {\n              element.remove();\n              setTooltipElement(null);\n            }\n          }, 2000);\n        } else {\n          console.warn('OpenLayersMap: Não foi possível obter pixel do coordinate');\n        }\n      } else {\n        console.warn('OpenLayersMap: map.current, event.coordinate ou mapContainer.current não disponível');\n      }\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao mostrar tooltip mobile:', error);\n    }\n  }, [tooltipElement]);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Verificar se é mobile e ajustar configurações\n    const isMobileDevice = isMobile();\n    const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    console.log('OpenLayersMap - Inicializando mapa:', {\n      isMobile: isMobileDevice,\n      initialCenter,\n      initialZoom,\n      originalCenter: center,\n      originalZoom: zoom\n    });\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: 18,\n        minZoom: 4\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions()\n    });\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              console.log('OpenLayersMap: Cluster com 1 marcador clicado:', schoolData.titulo);\n              \n              // Verificar se mobileInteraction está disponível\n              if (mobileInteraction.current && typeof mobileInteraction.current.handleClick === 'function') {\n                try {\n                  mobileInteraction.current.handleClick(\n                    feature,\n                    // First click - show name\n                    () => {\n                      console.log('OpenLayersMap: Primeiro clique mobile (cluster) - mostrando nome');\n                      showMobileTooltip(event, schoolData.titulo || 'Escola Indígena');\n                    },\n                    // Second click - open panel\n                    () => {\n                      console.log('OpenLayersMap: Segundo clique mobile (cluster) - abrindo painel');\n                      onPainelOpen?.(schoolData);\n                    },\n                    isMobile()\n                  );\n                } catch (error) {\n                  console.error('OpenLayersMap: Erro no handleClick do cluster:', error);\n                  // Fallback para desktop behavior\n                  onPainelOpen?.(schoolData);\n                }\n              } else {\n                console.log('OpenLayersMap: MobileInteraction não disponível, usando fallback desktop');\n                // Fallback para desktop behavior\n                onPainelOpen?.(schoolData);\n              }\n            }\n          } else {\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            console.log(`OpenLayersMap: Cluster clicado com ${features.length} escolas`);\n            \n            // Calcular a extensão específica do cluster clicado\n            const clusterExtent = feature.getGeometry().getExtent();\n            \n            // Obter o zoom atual\n            const currentZoom = map.current.getView().getZoom();\n            \n            // Calcular zoom ideal baseado na quantidade de escolas no cluster\n            let targetZoom = 12; // Zoom padrão para clusters\n            if (features.length > 20) {\n              targetZoom = 10; // Zoom menor para clusters muito grandes\n            } else if (features.length > 10) {\n              targetZoom = 11; // Zoom médio para clusters grandes\n            } else if (features.length > 5) {\n              targetZoom = 12; // Zoom padrão para clusters médios\n            } else {\n              targetZoom = 13; // Zoom maior para clusters pequenos\n            }\n            \n            // Garantir que o zoom não seja menor que o atual (evitar zoom out)\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            \n            console.log(`OpenLayersMap: Fazendo zoom de ${currentZoom} para ${targetZoom}`);\n            \n            // Fazer zoom suave para a extensão do cluster\n            map.current.getView().fit(clusterExtent, {\n              duration: 800, // Animação mais suave\n              padding: [80, 80, 80, 80], // Padding maior para melhor visualização\n              maxZoom: targetZoom, // Limitar o zoom máximo\n              callback: () => {\n                console.log(`OpenLayersMap: Zoom concluído para cluster com ${features.length} escolas`);\n              }\n            });\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          if (schoolData) {\n            console.log('OpenLayersMap: Marcador individual clicado:', schoolData.titulo);\n            \n            // Verificar se é mobile\n            if (isMobile()) {\n              console.log('OpenLayersMap: Clique mobile detectado no marcador individual');\n              \n              // Mobile: usar sistema de dois cliques\n              if (mobileInteraction.current && typeof mobileInteraction.current.handleClick === 'function') {\n                try {\n                  mobileInteraction.current.handleClick(\n                    feature,\n                    // First click - show name\n                    () => {\n                      console.log('OpenLayersMap: Primeiro clique mobile - mostrando nome');\n                      showMobileTooltip(event, schoolData.titulo || 'Escola Indígena');\n                    },\n                    // Second click - open panel\n                    () => {\n                      console.log('OpenLayersMap: Segundo clique mobile - abrindo painel');\n                      onPainelOpen?.(schoolData);\n                    },\n                    isMobile()\n                  );\n                } catch (error) {\n                  console.error('OpenLayersMap: Erro no handleClick do marcador individual:', error);\n                  // Fallback se mobileInteraction falhar\n                  onPainelOpen?.(schoolData);\n                }\n              } else {\n                console.log('OpenLayersMap: MobileInteraction não disponível para marcador individual, usando fallback');\n                // Fallback se mobileInteraction não estiver disponível\n                onPainelOpen?.(schoolData);\n              }\n            } else {\n              // Desktop: abrir painel diretamente\n              console.log('OpenLayersMap: Clique desktop - abrindo painel diretamente');\n              onPainelOpen?.(schoolData);\n            }\n          }\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n    let currentFeature = null;\n\n    map.current.on('pointermove', (event) => {\n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador, mostrar tooltip\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          if (schoolData) {\n            tooltipElement = createTooltipElement(event, schoolData);\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, schoolData) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = createTooltipHTML(schoolData);\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o marcador\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do marcador\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [center, zoom, createBaseLayers, createClusterStyle, createTooltipHTML, showMobileTooltip, onPainelOpen]);\n\n  // Atualizar configurações do mapa quando props mudarem\n  useEffect(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      console.log('OpenLayersMap - Atualizando configurações do mapa:', {\n        isMobile: isMobileDevice,\n        newCenter,\n        newZoom,\n        currentCenter,\n        currentZoom\n      });\n\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom, showNomesEscolas]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    console.log(`OpenLayersMap: Processando ${pontosValidos.length} marcadores válidos`);\n    console.log(`OpenLayersMap: Encontrados ${nearbyPairs.length} pares próximos`);\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        \n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        if (pairIndex !== -1) {\n          feature.set('isNearbyPair', true);\n          feature.set('pairIndex', pairIndex);\n        }\n        \n        vectorSource.current.addFeature(feature);\n      }\n    });\n\n    console.log(`OpenLayersMap: Adicionados ${pontosValidos.length} marcadores com clustering inteligente`);\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle(createClusterStyle);\n    }\n  }, [createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      console.log('OpenLayersMap: Atualizando estilo dos marcadores - showNomesEscolas:', showNomesEscolas);\n      vectorLayer.current.setStyle(createClusterStyle);\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n\n    console.log('OpenLayersMap: Recriando ClusterSource - showNomesEscolas:', showNomesEscolas);\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    console.log('OpenLayersMap: Gerenciando camadas GeoJSON:', {\n      showTerrasIndigenas,\n      showEstadoSP,\n      terrasIndigenasData: !!terrasIndigenasData,\n      estadoSPData: !!estadoSPData,\n      terrasFeatures: terrasIndigenasData?.features?.length || 0,\n      estadoFeatures: estadoSPData?.features?.length || 0,\n      mapLayers: map.current.getLayers().getLength()\n    });\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      console.log('OpenLayersMap: Adicionando camada Terras Indígenas');\n      console.log('OpenLayersMap: Dados Terras Indígenas:', {\n        type: terrasIndigenasData.type,\n        features: terrasIndigenasData.features?.length || 0,\n        crs: terrasIndigenasData.crs,\n        firstFeature: terrasIndigenasData.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades',\n          geometry: terrasIndigenasData.features[0].geometry ? {\n            type: terrasIndigenasData.features[0].geometry.type,\n            coordinates: terrasIndigenasData.features[0].geometry.coordinates ? \n              `${terrasIndigenasData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Terras Indígenas não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = terrasIndigenasData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada das Terras Indígenas:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        console.log('OpenLayersMap: Features lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: (feature) => {\n            const properties = feature.getProperties();\n            const isRegularizada = properties.fase_ti === 'Regularizada';\n            \n            return new Style({\n              fill: new Fill({\n                color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n              }),\n              stroke: new Stroke({\n                color: '#B22222',\n                width: 2,\n                lineDash: [3, 3]\n              })\n            });\n          },\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n        console.log('OpenLayersMap: Camada Terras Indígenas adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Terras Indígenas:', error);\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      console.log('OpenLayersMap: Adicionando camada Estado SP');\n      console.log('OpenLayersMap: Dados Estado SP:', {\n        type: estadoSPData.type,\n        features: estadoSPData.features?.length || 0,\n        crs: estadoSPData.crs,\n        firstFeature: estadoSPData.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades',\n          geometry: estadoSPData.features[0].geometry ? {\n            type: estadoSPData.features[0].geometry.type,\n            coordinates: estadoSPData.features[0].geometry.coordinates ? \n              `${estadoSPData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Estado SP não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = estadoSPData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada do Estado SP:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas Estado SP:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        console.log('OpenLayersMap: Features Estado SP lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature Estado SP processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: new Style({\n            fill: new Fill({\n              color: 'rgba(0, 0, 0, 0.3)'\n            }),\n            stroke: new Stroke({\n              color: '#000000',\n              width: 2\n            })\n          }),\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n        console.log('OpenLayersMap: Camada Estado SP adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Estado SP:', error);\n      }\n    }\n\n    console.log('OpenLayersMap: Finalização - Total de camadas no mapa:', map.current.getLayers().getLength());\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  // Adicionar event listeners para camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo && onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n    };\n  }, [onPainelOpen]);\n\n  return (\n    <div className={className} ref={mapContainer}>\n      {/* Informações do mapa */}\n      <div className=\"absolute bottom-20 sm:bottom-4 left-4 z-10 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-xs text-gray-600\">\n          Lat: {mapInfo.lat} | Lng: {mapInfo.lng}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Zoom: {mapInfo.zoom}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n      \n      {/* Informações adicionais */}\n      <div className=\"absolute top-20 left-4 z-30 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-sm font-semibold text-gray-800\">\n          Escolas Indígenas: {totalEscolas}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Mapa otimizado sem gaps\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n// Mobile interaction state management\nexport class MobileInteractionManager {\n  constructor() {\n    this.lastClickedFeature = null;\n    this.clickTimeout = null;\n    this.clickDelay = 300; // Time in ms to wait for second click\n  }\n\n  handleClick(feature, onFirstClick, onSecondClick, isMobileDevice = false) {\n    if (!isMobileDevice) {\n      // Desktop behavior - direct action\n      onSecondClick(feature);\n      return;\n    }\n\n    // Mobile behavior - two-click pattern\n    if (this.lastClickedFeature === feature) {\n      // Second click on same feature\n      this.clearTimeout();\n      this.lastClickedFeature = null;\n      onSecondClick(feature);\n    } else {\n      // First click or click on different feature\n      if (this.lastClickedFeature) {\n        // Clear previous first click\n        this.clearTimeout();\n      }\n      \n      this.lastClickedFeature = feature;\n      onFirstClick(feature);\n      \n      // Set timeout to clear first click\n      this.clickTimeout = setTimeout(() => {\n        this.lastClickedFeature = null;\n      }, this.clickDelay);\n    }\n  }\n\n  clearTimeout() {\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n  }\n\n  reset() {\n    this.clearTimeout();\n    this.lastClickedFeature = null;\n  }\n} "],"names":["MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","proj4","defs","register","PROXIMITY_THRESHOLD","createMarkerSVG","color","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","_ref","dataPoints","onPainelOpen","className","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","showNomesEscolas","console","log","defaultCenter","defaultZoom","mobileZoom","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","terrasIndigenasLayerRef","estadoSPLayerRef","mobileInteraction","tooltipElement","setTooltipElement","useEffect","current","MobileInteractionManager","error","createBaseLayers","useCallback","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createMarkerStyle","feature","schoolData","get","svg","svgUrl","encodeURIComponent","style","Style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","titulo","font","fill","Fill","stroke","Stroke","width","offsetY","textAlign","textBaseline","createClusterStyle","features","singleFeature","baseSize","Math","min","finalSize","round","fontSize","fontWeight","toString","createTooltipHTML","showMobileTooltip","event","content","isMobile","warn","parentNode","remove","element","document","createElement","textContent","position","backgroundColor","padding","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","zIndex","pointerEvents","boxShadow","border","coordinate","pixel","getPixelFromCoordinate","left","top","appendChild","setTimeout","isMobileDevice","initialCenter","initialZoom","originalCenter","originalZoom","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","Map","target","layers","view","View","fromLonLat","controls","defaultControls","interactions","defaultInteractions","on","getView","toLonLat","getCenter","newView","toFixed","getZoom","changed","forEachFeatureAtPixel","handleClick","clusterExtent","getExtent","currentZoom","targetZoom","max","fit","duration","callback","createTooltipElement","createClusterTooltipElement","backdropFilter","count","setTarget","newCenter","newZoom","currentCenter","setCenter","setZoom","clear","pontosValidos","filter","point","latitude","longitude","parseFloat","isNaN","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","abs","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","pairIndex","findIndex","pair","includes","addFeature","setStyle","removeLayer","addLayer","_terrasIndigenasData$","_estadoSPData$feature","terrasFeatures","estadoFeatures","mapLayers","getLayers","getLength","_terrasIndigenasData$2","_terrasIndigenasData$3","type","crs","firstFeature","properties","Object","keys","coordinates","coords","GeoJSON","dataProjection","featureProjection","readFeatures","extent","getProperties","terrasIndigenasLayer","isRegularizada","fase_ti","lineDash","getSource","getFeatures","terrai_nom","tipo","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","_estadoSPData$feature2","_estadoSPData$feature3","estadoSPLayer","interactive","terraIndigenaInfo","un","_jsx","ref","children","_jsxs","cache","useGeoJSONCache","key","data","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","err","fetchGeoJSON","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","terrasIndigenas","hasData","estadoSP","CabecalhoMenu","_ref2","onMinimize","onClick","BotaoCamada","_ref3","id","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","quantidade","exemplo","refreshKey","useRefresh","panel","useMemo","URLSearchParams","location","search","initialPanel","find","criarSlug","painelInfo","setPainelInfo","escolasVisiveis","pontuacao","totalEscolas","group","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","groupEnd","abrirPainel","info","refreshPainel","fecharPainel","MapSelector","_Fragment","PainelInformacoes","closePainel","constructor","this","lastClickedFeature","clickTimeout","clickDelay","onFirstClick","onSecondClick","clearTimeout","reset"],"sourceRoot":""}
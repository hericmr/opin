{"version":3,"file":"static/js/433.665fcbe2.chunk.js","mappings":"sOAUA,MAAMA,EAAsB,KAme5B,EAvbmBC,IAA0C,IAAzC,WAAEC,EAAU,WAAEC,EAAU,QAAEC,GAASH,EACrD,MAAMI,GAAMC,EAAAA,EAAAA,MACNC,GAAkBC,EAAAA,EAAAA,QAAO,MACzBC,GAAgBD,EAAAA,EAAAA,QAAO,IACvBE,GAAWC,EAAAA,EAAAA,UAAQ,IAAMC,IAAAA,QAAUC,QAAQ,IAG3CC,GAAoBN,EAAAA,EAAAA,QAAO,MAC3BO,GAAeP,EAAAA,EAAAA,QAAO,MAGtBQ,GAAsBC,EAAAA,EAAAA,cAAY,KAClCF,EAAaG,UACfC,aAAaJ,EAAaG,SAC1BH,EAAaG,QAAU,QAExB,IAGGE,GAAyBH,EAAAA,EAAAA,cAAY,CAACI,EAAQC,EAAOC,KACpDb,IAGLa,EAAEC,cAAcC,kBAGZX,EAAkBI,UAAYG,GAChCL,IACAK,EAAOK,eACA,OAAPtB,QAAO,IAAPA,GAAAA,EAAUkB,GACVR,EAAkBI,QAAU,OAGxBJ,EAAkBI,SACpBJ,EAAkBI,QAAQQ,eAI5BZ,EAAkBI,QAAUG,EAC5BA,EAAOM,cAGPX,IACAD,EAAaG,QAAUU,YAAW,KAChCP,EAAOK,eACPZ,EAAkBI,QAAU,OAvFZ,SA0FnB,CAACR,EAAUN,EAASY,IAGjBa,EAAgBC,EAAAA,SAAc,KAClC,IAAKC,MAAMC,QAAQ9B,IAAqC,IAAtBA,EAAW+B,OAE3C,OADAC,QAAQC,KAAK,8CACN,GAITD,QAAQE,IAAI,8BAA+BlC,EAAW+B,QAGtD,MAAMI,EAAsB,GAEtBC,EAAkBpC,EAAWqC,QAAOjB,IAExC,IAAKA,EAAMkB,SAAWlB,EAAMmB,WAAanB,EAAMoB,UAU7C,OATAL,EAAoBM,KAAK,CACvBC,OAAQtB,EAAMkB,QAAU,WACxBK,SAAU,4BACVC,SAAU,CACRN,SAAUlB,EAAMkB,OAChBC,WAAYnB,EAAMmB,SAClBC,YAAapB,EAAMoB,cAGhB,EAGT,MAAMK,EAAMC,WAAW1B,EAAMmB,UACvBQ,EAAMD,WAAW1B,EAAMoB,WAG7B,OAAIQ,MAAMH,IAAQG,MAAMD,IACtBZ,EAAoBM,KAAK,CACvBC,OAAQtB,EAAMkB,OACdK,SAAU,kDACVC,SAAU,CACRL,SAAUnB,EAAMmB,SAChBC,UAAWpB,EAAMoB,cAGd,KAILK,GAAO,IAAMA,EAAM,IAAME,GAAO,KAAOA,EAAM,OAC/CZ,EAAoBM,KAAK,CACvBC,OAAQtB,EAAMkB,OACdK,SAAU,0CACVC,SAAU,CACRL,SAAUM,EACVL,UAAWO,EACXE,QAAS,CACPC,QAAS,GACTC,OAAQ,GACRC,QAAS,IACTC,OAAQ,SAIP,MAsBX,OAfIlB,EAAoBJ,OAAS,IAC/BC,QAAQsB,MAAM,yCACdnB,EAAoBoB,SAAQb,IAC1BV,QAAQsB,MAAMZ,EAAOA,QACrBV,QAAQE,IAAI,YAAaQ,EAAOC,UAChCX,QAAQE,IAAI,YAAaQ,EAAOE,UAChCZ,QAAQwB,cAEVxB,QAAQwB,WACRxB,QAAQE,IAAI,mCAADuB,OAAoCtB,EAAoBJ,UAIrEC,QAAQE,IAAI,uBAADuB,OAAqBrB,EAAgBL,OAAM,QAAA0B,OAAOzD,EAAW+B,SAEjEK,IACN,CAACpC,IAGE0D,EAAaC,EAAAA,GAGbC,GAAuB7C,EAAAA,EAAAA,cAAaK,GAClC,oaAANqC,OAGyGI,KAAKC,UAAU1C,GAAM,yDAAAqC,QACnFM,EAAAA,EAAAA,GAAgB3C,EAAMkB,QAAO,wEAAAmB,QAGxDM,EAAAA,EAAAA,GAAgB3C,EAAMkB,QAAO,yBAAAmB,OACrCrC,EAAM4C,MAAK,kDAAAP,OAAqDrC,EAAM4C,MAAK,UAAW,GAAE,4CAI/F,IA4RH,OA1RAC,EAAAA,EAAAA,YAAU,KACR,IAAKpC,MAAMC,QAAQ9B,IAAqC,IAAtBA,EAAW+B,OAE3C,YADAC,QAAQC,KAAK,wDAIf,IAAK9B,IAAQwB,EAAcI,SAAW9B,EAAWiE,SAAU,OAGvD7D,EAAgBW,SAClBb,EAAIgE,YAAY9D,EAAgBW,SAElCT,EAAcS,QAAQuC,SAAQa,GAAajE,EAAIgE,YAAYC,KAC3D7D,EAAcS,QAAU,GAGxBJ,EAAkBI,QAAU,KAC5BF,IAGA,MAAMuD,EA1MeC,KACvB,MAAMC,EAAQ,GACRC,EAAO,IAAIC,IAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOvC,OAAQ2C,IACjC,IAAIF,EAAKG,IAAID,GAEb,IAAK,IAAIE,EAAIF,EAAI,EAAGE,EAAIN,EAAOvC,OAAQ6C,IAAK,CAC1C,GAAIJ,EAAKG,IAAIC,GAAI,SAEjB,MAAMC,EAAKP,EAAOI,GACZI,EAAKR,EAAOM,GAEZG,EAAUC,KAAKC,IAAInC,WAAW+B,EAAGtC,UAAYO,WAAWgC,EAAGvC,WAC3D2C,EAAUF,KAAKC,IAAInC,WAAW+B,EAAGrC,WAAaM,WAAWgC,EAAGtC,YAElE,GAAIuC,EAAUjF,GAAuBoF,EAAUpF,EAAqB,CAClEyE,EAAM9B,KAAK,CAACiC,EAAGE,IACfJ,EAAKW,IAAIT,GACTF,EAAKW,IAAIP,GACT,KACF,CACF,CAGF,OAAOL,GAiLea,CAAgBzD,GAI9B0D,GAHc,IAAIZ,IAAIJ,EAAYiB,QAGnB,IAAI5E,IAAAA,oBAAqB,CAE5C6E,gBAAgB,EAChBC,iBAAkB,EAClBC,mBAAmB,EACnBC,qBAAsBlF,EACtBmF,qBAAqB,EACrBC,4BAA4B,EAC5BC,SAAS,EAGTC,wBAAyB,GACzBC,QAAS,EACTC,QAAS,GAGTC,mBAAoB,SAASC,GAC3B,MAAMC,EAAQD,EAAQE,gBACtB,IAAIC,EAAO,QACPC,EAAa,UAGbH,EAAQ,KACVE,EAAO,QACPC,EAAa,WACJH,EAAQ,KACjBE,EAAO,SACPC,EAAa,WAGf,MAAMC,EAAU5C,EAAAA,GAAW6C,QAAQD,QAC7BE,EAAW9C,EAAAA,GAAW6C,QAAQC,UAAY,CAAC,GAAI,IAkBrD,OAfAP,EAAQQ,YAAY,qJAADjD,OAEL0C,EAAK,WAAA1C,OAAU0C,EAAQ,EAAI,IAAM,GAAE,gBAAA1C,OAAY0C,EAAQ,EAAI,IAAM,GAAE,yIAI9E,CACDQ,UAAW,kBACXC,UAAW,MACXC,OAAQ,CAAC,GAAI,IACbC,QAAS,EACTC,WAAW,EACXC,QAASxG,IAGJE,IAAAA,QAAU,CACfuG,KAAK,oHAADxD,OAIuB0C,EAAK,uIAAA1C,OAEqB6C,EAAU,sCAAA7C,OApCjD,OAqCQ,iEAAAA,OAEPgD,EAAS,GAAE,iCAAAhD,OACVgD,EAAS,GAAE,ifAAAhD,OAcd8C,EAAO,+BAAA9C,OACS,GAAdgD,EAAS,GAAQ,gCAAAhD,OACF,GAAdgD,EAAS,GAAQ,6MAAAhD,OAOL,UAAT4C,EAAmB,OAAkB,WAATA,EAAoB,OAAS,OAAM,yCAAA5C,OAE3E0C,EAAK,+BAEZQ,UAAU,iCAADlD,OAAmC4C,GAC5CI,SAAU/F,IAAAA,MAAQ+F,EAAS,GAAIA,EAAS,KAE5C,EAGAS,sBAAsB,EACtBC,yBAA0B,CACxBC,OAAQ,IACRC,MAAO,UACPP,QAAS,GACTQ,UAAW,OAIbC,cAAe/G,EAAW,IAAM,IAChCgH,WAAYhH,EAAW,GAAK,GAG5BiH,kBAAkB,EAClBC,2BAA4BlH,EAAW,EAAI,IAG3CmH,eAAgB,CACdC,UAAW,UACXP,MAAO,UACPD,OAAQ,IACRN,QAAS,GACTe,YAAa,OAKjBxC,EAAayC,GAAG,gBAAgB,SAASzG,GACvC,MAAM6E,EAAU7E,EAAE0G,MACZC,EAAU9B,EAAQ+B,qBAGxB,GAAI9H,EAAI+H,WAAahC,EAAQM,QAAQV,wBAAyB,CAC5D,MAAMqC,EAAUzH,IAAAA,QAAU,CACxBiG,UAAW,yBACXC,UAAW,SACXG,WAAW,EACXD,QAAS,KAEVsB,WAAW,gKAAD3E,OAEcuE,EAAQjG,OAAM,WAAA0B,OAAUuE,EAAQjG,OAAS,EAAI,IAAM,GAAE,4JAK7EsG,UAAUnC,EAAQoC,aAEnBH,EAAQI,MAAMpI,GACduB,YAAW,IAAMyG,EAAQK,UAAU,IACrC,CACF,IAGA7G,EAAc4B,SAAQ,CAACnC,EAAOqH,KAC5B,MAAM5F,EAAMC,WAAW1B,EAAMmB,UACvBQ,EAAMD,WAAW1B,EAAMoB,WAEvBrB,EAAST,IAAAA,OAAS,CAACmC,EAAKE,GAAM,CAClC2F,KAAMhF,EACNiF,aAAc,IACdC,UAAU,EACVC,IAAI,iBAADpF,QAAmBM,EAAAA,EAAAA,GAAgB3C,EAAMkB,SAC5CwG,aAAa,EACbC,aAAa,EACbZ,QAAS,OAIXhH,EAAO6H,gBAGP7H,EAAOuF,YAAY9C,EAAqBxC,GAAQ,CAC9CuF,UAAW,iBACXC,UAAW,MACXC,OAAQ,CAAC,GAAI,IACbC,QAAS,EACTC,WAAW,EACXC,QAASxG,EACTuI,aAAa,EAEbZ,QAAS,OAIP3H,EAEFW,EAAO2G,GAAG,SAAUzG,GAAMH,EAAuBC,EAAQC,EAAOC,KAGlEF,EAAO2G,GAAG,SAAS,IAAa,OAAP5H,QAAO,IAAPA,OAAO,EAAPA,EAAUkB,KAInC,MAAM6H,EAAY5E,EAAY6E,WAAUC,GAAQA,EAAKC,SAASX,KAC9D,IAAmB,IAAfQ,EAAkB,CACpB,MAAOI,EAAOC,GAAUjF,EAAY4E,GAC9BM,EAAUd,IAAUY,EAEpBG,EAAa7H,EADA4H,EAAUD,EAASD,GAIjC7I,GACLW,EAAO2G,GAAG,OAAO,WACf,MAAM2B,EAAYF,EACd,iFACA,8EAEJG,KAAKC,MAAMC,MAAMH,UAAYA,EAC7BC,KAAKC,MAAMC,MAAMC,WAAa,+CAC9BH,KAAKC,MAAMC,MAAMvH,OAAS,kDAC1BqH,KAAKC,MAAMC,MAAME,UAAY,gCAC/B,IAIA,MAAM1F,EA1aU2F,EAAC5J,EAAK6J,EAAWC,EAAWC,EAAWC,IACtDzJ,IAAAA,SAAW,CAAC,CAACsJ,EAAWC,GAAY,CAACC,EAAWC,IAAa,CAClE9C,MAAO,UACPD,OAAQ,IACRE,UAAW,MACXR,QAAS,GACTH,UAAW,qBACV4B,MAAMpI,GAmae4J,CAChB5J,EACA0C,EACAE,EACAD,WAAW0G,EAAWjH,UACtBO,WAAW0G,EAAWhH,YAExBjC,EAAcS,QAAQyB,KAAK2B,EAC7B,CAEAiB,EAAa+E,SAASjJ,MAIxBhB,EAAIiK,SAAS/E,GACbhF,EAAgBW,QAAUqE,EAG1B,MAAMgF,EAAsBC,IAC1B,MAAMlJ,EAAQkJ,EAAMC,OACb,OAAPrK,QAAO,IAAPA,GAAAA,EAAUkB,IAMZ,OAHAoJ,OAAOC,iBAAiB,eAAgBJ,GAGjC,KACLG,OAAOE,oBAAoB,eAAgBL,GACvChK,EAAgBW,SAClBb,EAAIgE,YAAY9D,EAAgBW,SAElCT,EAAcS,QAAQuC,SAAQa,GAAajE,EAAIgE,YAAYC,KAC3D7D,EAAcS,QAAU,GACxBF,IACAF,EAAkBI,QAAU,QAE7B,CACDb,EACAwB,EACAzB,EACAwD,EACAzD,EAAWiE,SACXlE,EACAQ,EACAoD,EACA1C,EACAJ,IAGK,K,mGCveT,MAAMN,EAAWA,IACRgK,OAAOG,YAAc,IAoC9B,EAjCiB5K,IAAmB,IAAlB,SAAE6K,GAAU7K,EAE5B,MAAM8K,EAAkBrK,IAAa,EAAE,SAAU,SAAW,EAAE,QAAS,MACjEsK,EAActK,IAAa,EAAI,EAErC,OACEuK,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,oCAAmCiE,UAChDI,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CACXC,OAAQL,EACRM,KAAML,EACNnE,UAAU,gBACVyE,oBAAoB,EACpBC,KAAK,EACLC,iBAAiB,EACjBC,WAAW,EACXC,iBAAiB,EACjBC,UAAU,EACV7C,UAAU,EACV8C,aAAa,EACbC,mBAAmB,EAAMf,SAAA,EAGzBG,EAAAA,EAAAA,KAACa,EAAAA,EAAS,CACVC,IAAI,oGAIHjB,Q,4CC/BT,MAgCA,EAhCiB7K,IAAe,IAAd,KAAE+L,GAAM/L,GACxBkE,EAAAA,EAAAA,YAAU,KACJ6H,GACF9J,QAAQE,IAAI,6BAA8B4J,KAE3C,CAACA,IAGJ,MAAMC,GAAetL,EAAAA,EAAAA,UACnB,MACE4G,MAAO,UACPD,OAAQ,EACRQ,UAAW,UACXC,YAAa,GACbP,UAAW,GACX0E,OAAQ,IACRjD,aAAa,KAEf,IAGF,OAAK+C,GAGHf,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,CACNH,KAAMA,EACNlC,MAAOmC,EACPhD,aAAa,IANC,MCrBdmD,EAAU,CACdC,UAAW,CAAEC,GAAI,WAAYC,MAAO,yBAAuBC,IAAK,WAChEC,QAAS,CAAEH,GAAI,WAAYC,MAAO,uBAAqBC,IAAK,WAC5DE,iBAAkB,CAChBJ,GAAI,kBACJC,MAAO,sBACPC,IAAK,UACLG,cAAe,UACfC,gBAAiB,eAIfC,GAAgBC,EAAAA,EAAAA,OAAK7M,IAAA,IAAC,QAAE8M,EAAO,WAAEC,EAAU,SAAEtM,EAAQ,YAAEuM,GAAahN,EAAA,OACxEiL,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,gFAA+EiE,SAAA,EAC5FG,EAAAA,EAAAA,KAAA,MAAIpE,UAAU,oCAAmCiE,SAAC,qBAClDI,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,0BAAyBiE,SAAA,EACtCG,EAAAA,EAAAA,KAAA,UACE7K,QAAS4M,EACTnG,UAAU,0DACV,aAAYoG,EAAc,WAAa,YACvCC,KAAK,SAAQpC,SAEZmC,EAAc,SAAM,YAEvBhC,EAAAA,EAAAA,KAAA,UACE7K,QAAS2M,EACTlG,UAAU,0DACV,aAAW,SACXqG,KAAK,SAAQpC,SACd,oBAOP+B,EAAcM,YAAc,gBAE5B,MAAMC,GAAcN,EAAAA,EAAAA,OAAKO,IAAA,IAAC,OAAEC,EAAM,MAAEC,EAAK,QAAEnN,EAAO,MAAEoN,GAAOH,EAAA,OACzDnC,EAAAA,EAAAA,MAAA,UACE9K,QAASA,EACTyG,UAAS,yEAAAlD,OACP4J,EAAQ,aAAe,oBAEzBL,KAAK,SAAQpC,SAAA,CAEE,oBAAdwC,EAAOhB,IACNpB,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,sBAAqBiE,SAAA,EAClCI,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,0BAAyBiE,SAAA,EACtCG,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,uBAAuBiD,MAAO,CAAE2D,gBAAiBH,EAAOd,QACvEvB,EAAAA,EAAAA,KAAA,QAAMpE,UAAU,wBAAuBiE,SAAC,sBAE1CI,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,0BAAyBiE,SAAA,EACtCG,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,uBAAuBiD,MAAO,CAAE2D,gBAAiBH,EAAOX,kBACvE1B,EAAAA,EAAAA,KAAA,QAAMpE,UAAU,wBAAuBiE,SAAEwC,EAAOV,yBAIpD3B,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,uBAAuBiD,MAAO,CAAE2D,gBAAiBH,EAAOd,QAEzEvB,EAAAA,EAAAA,KAAA,QAAMpE,UAAU,wBAAuBiE,SAAEwC,EAAOf,aACrCmB,IAAVF,IACCtC,EAAAA,EAAAA,MAAA,QAAMrE,UAAU,6BAA4BiE,SAAA,CAAC,IAAE0C,EAAM,QAEvDvC,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,+BAA+BiD,MAAO,CAAE2D,gBAAiBF,EAAQD,EAAOd,IAAM,mBAIjGY,EAAYD,YAAc,cAE1B,MAAMQ,EAAcC,IAAuC,IAAtC,QAAEC,EAAO,MAAEC,EAAK,aAAEC,GAAcH,EACnD,MAAOI,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCxN,EAAUyN,IAAeD,EAAAA,EAAAA,WAAS,IAClCjB,EAAamB,IAAkBF,EAAAA,EAAAA,WAAS,GAGzCG,GAAcpN,EAAAA,EAAAA,cAAY,KAC9BkN,EAAYzD,OAAOG,YAAc,OAChC,KAEH1G,EAAAA,EAAAA,YAAU,KAERkK,IAGA3D,OAAOC,iBAAiB,SAAU0D,GAE3B,KACL3D,OAAOE,oBAAoB,SAAUyD,MAEtC,CAACA,IAGJ,MAAMC,GAAkBrN,EAAAA,EAAAA,cAAY,IAAMgN,GAAc,IAAQ,IAE1DM,IADiBtN,EAAAA,EAAAA,cAAY,IAAMgN,GAAc,IAAO,KACvChN,EAAAA,EAAAA,cAAY,IAAMmN,GAAeI,IAASA,KAAO,KAGxE,OAAI9N,GAEAuK,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,qCAAoCiE,UACjDI,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,8CAA6CiE,SAAA,EAC1DG,EAAAA,EAAAA,KAAC4B,EAAa,CACZE,QAASuB,EACTtB,WAAYuB,EACZ7N,UAAU,EACVuM,YAAaA,KAEbA,IACA/B,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,mDAAkDiE,SAAA,EAC/DG,EAAAA,EAAAA,KAACmC,EAAW,CACVE,OAAQlB,EAAQC,UAChBkB,MAAOM,EAAQY,SACfrO,QAAS0N,EAAMY,kBAEjBzD,EAAAA,EAAAA,KAACmC,EAAW,CACVE,OAAQlB,EAAQK,QAChBc,MAAOM,EAAQzJ,SACfhE,QAAS0N,EAAMa,eACfnB,MAAOO,KAET9C,EAAAA,EAAAA,KAACmC,EAAW,CACVE,OAAQlB,EAAQM,iBAChBa,MAAOM,EAAQe,gBACfxO,QAAS0N,EAAMe,iCAW3B3D,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,sFAAqFiE,SAAA,EAClGG,EAAAA,EAAAA,KAAC4B,EAAa,CACZE,QAASuB,EACTtB,WAAYuB,EACZ7N,UAAU,EACVuM,YAAaA,KAEbA,IACA/B,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,mDAAkDiE,SAAA,EAC/DG,EAAAA,EAAAA,KAACmC,EAAW,CACVE,OAAQlB,EAAQC,UAChBkB,MAAOM,EAAQY,SACfrO,QAAS0N,EAAMY,kBAEjBzD,EAAAA,EAAAA,KAACmC,EAAW,CACVE,OAAQlB,EAAQK,QAChBc,MAAOM,EAAQzJ,SACfhE,QAAS0N,EAAMa,eACfnB,MAAOO,KAET9C,EAAAA,EAAAA,KAACmC,EAAW,CACVE,OAAQlB,EAAQM,iBAChBa,MAAOM,EAAQe,gBACfxO,QAAS0N,EAAMe,+BAsB3BlB,EAAYR,YAAc,cAE1B,SAAeL,EAAAA,EAAAA,MAAKa,G,cCzLpB,MAQA,EARsB,CACpBnL,OAAQ,eACRsM,SAAU,GACVC,oBAAoB,qGAEpBC,QAAS,CAAC,KCwOZ,EAhN6B/O,IAAqB,IAApB,WAAEC,GAAYD,EAC1CiC,QAAQE,IAAI,gDAAiDlC,EAAa,CACxE+O,WAAY/O,EAAW+B,OACvBiN,QAAShP,EAAW,GAAK,CACvBsC,OAAQtC,EAAW,GAAGsC,OACtBC,SAAUvC,EAAW,GAAGuC,SACxBC,UAAWxC,EAAW,GAAGwC,UACzByM,KAAMjP,EAAW,GAAGiP,MAClB,gBACF,oBAEJ,MACMC,EADY,IAAIC,gBAAgB3E,OAAO4E,SAASC,QAC9BC,IAAI,SAC5B,IAAIC,EAAeC,EAEnB,GADAxN,QAAQE,IAAI,iBAAkBsN,GAC1BN,GAAmB,KAAVA,GAAgBlP,GAAcA,EAAW+B,OAAS,EAAG,CAChE,MAAM0N,EAAazP,EAAW0P,MAAMC,GAAmBA,EAAKrN,OAxB3DsN,cACAC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BA,QAAQ,cAAe,KACvBA,QAAQ,WAAY,IACpBC,SAmBuEb,IACtD,MAAdO,IACFF,EAAeE,EAEnB,CACAzN,QAAQE,IAAI,gBAAiBqN,GAE7B,MAAOS,EAAaC,IAAkBjC,EAAAA,EAAAA,UAAS,OACxCkC,EAAqBC,IAA0BnC,EAAAA,EAAAA,UAAS,OACxDoC,EAAcC,IAAmBrC,EAAAA,EAAAA,UAAS,OAC1CsC,EAAcC,IAAmBvC,EAAAA,EAAAA,UAAS,CAC/C9J,UAAU,EACVwK,iBAAiB,EACjBH,UAAU,KAELiC,EAAYC,IAAiBzC,EAAAA,EAAAA,UAASuB,IAG7CtL,EAAAA,EAAAA,YAAU,KACRjC,QAAQsB,MAAM,mDACdtB,QAAQE,IAAI,4BAA6B,CACvCI,OAAkB,OAAVkO,QAAU,IAAVA,OAAU,EAAVA,EAAYlO,OACpB2M,KAAgB,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAYvB,KAClByB,UAAqB,OAAVF,QAAU,IAAVA,IAAAA,EAAYG,sBACzBC,UAAqB,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYG,qBACrBE,eAAgBL,IAAejB,EAC/BuB,OAAuB,OAAfN,EACRO,iBAA4BvD,IAAfgD,IAEfxO,QAAQwB,aACP,CAACgN,EAAYjB,IAGhB,MAAMyB,EAAkBhR,EAAaA,EAAWqC,QAAO4O,GAASA,EAAMC,WAAa,IAAK,GAClFrD,EAAemD,EAAgBjP,QAErCkC,EAAAA,EAAAA,YAAU,KACakN,WACnB,IACEnP,QAAQE,IAAI,kDAEZ,MAAOkP,EAAiBC,EAAyBC,SAA0BC,QAAQC,IAAI,CACrFC,MAAM,GAADhO,OAAIiO,oBAAsB,qBAC/BD,MAAM,GAADhO,OAAIiO,oBAAsB,yCAC/BD,MAAM,GAADhO,OAAIiO,oBAAsB,6BASjC,GANA1P,QAAQE,IAAI,uBAAwB,CAClCyP,QAASP,EAAgBQ,OACzBlD,gBAAiB2C,EAAwBO,OACzCrD,SAAU+C,EAAiBM,UAGxBR,EAAgBS,GAEnB,YADA7P,QAAQ8P,MAAM,qDAADrO,OAAsD2N,EAAgBQ,SAGrF,IAAKP,EAAwBQ,GAE3B,YADA7P,QAAQ8P,MAAM,iEAADrO,OAA+D4N,EAAwBO,SAGtG,IAAKN,EAAiBO,GAEpB,YADA7P,QAAQ8P,MAAM,mDAADrO,OAAoD6N,EAAiBM,SAIpF,MAAOG,EAAa7B,EAAqBE,SAAsBmB,QAAQC,IAAI,CACzEJ,EAAgBY,OAChBX,EAAwBW,OACxBV,EAAiBU,SASnB,GANAhQ,QAAQE,IAAI,4BAA6B,CACvCyP,QAASI,EAAc,KAAO,QAC9BrD,gBAAiBwB,EAAsB,KAAO,QAC9C3B,SAAU6B,EAAe,KAAO,WAG7B2B,IAAgBA,EAAYE,SAE/B,YADAjQ,QAAQ8P,MAAM,kCAAgCC,GAIhD,IAAK7B,IAAwBA,EAAoB+B,SAE/C,YADAjQ,QAAQ8P,MAAM,8CAAyC5B,GAIzD,IAAKE,IAAiBA,EAAa6B,SAEjC,YADAjQ,QAAQ8P,MAAM,gCAA8B1B,GAI9CH,EAAe8B,GACf5B,EAAuBD,GACvBG,EAAgBD,GAEhBpO,QAAQE,IAAI,2CACd,CAAE,MAAO4P,GACP9P,QAAQ8P,MAAM,4BAA6BA,EAC7C,GAEFI,KACC,KAGHjO,EAAAA,EAAAA,YAAU,KACRjC,QAAQE,IAAI,4BAA6B,CACvCyP,QAAS3B,EAAc,YAAc,mBACrCtB,gBAAiBwB,EAAsB,YAAc,mBACrD3B,SAAU6B,EAAe,YAAc,uBAExC,CAACJ,EAAaE,EAAqBE,IAEtC,MAAM+B,EAAeC,IACnBpQ,QAAQsB,MAAM,sCACdtB,QAAQE,IAAI,iBAAkB,CAC5BI,OAAY,OAAJ8P,QAAI,IAAJA,OAAI,EAAJA,EAAM9P,OACd2M,KAAU,OAAJmD,QAAI,IAAJA,OAAI,EAAJA,EAAMnD,KACZyB,UAAe,OAAJ0B,QAAI,IAAJA,IAAAA,EAAMzB,sBACjBC,UAAe,OAAJwB,QAAI,IAAJA,OAAI,EAAJA,EAAMzB,uBAEnBF,EAAc2B,GACdpQ,QAAQE,IAAI,yBACZF,QAAQwB,YAsBJ6O,EAAsBC,IAC1BtQ,QAAQE,IAAI,2BAADuB,OAA4B6O,IACvC/B,GAAiBjC,IAAIiE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWjE,GAAI,IAAE,CAACgE,IAAShE,EAAKgE,QAGvD,OACEtH,EAAAA,EAAAA,MAAA,OAAKrE,UAAU,2CAA0CiE,SAAA,EACvDI,EAAAA,EAAAA,MAACwH,EAAQ,CAAA5H,SAAA,CACN0F,EAAa/B,UAAY6B,IAAgBrF,EAAAA,EAAAA,KAAC0H,EAAQ,CAAC3G,KAAMsE,IACzDE,EAAa5B,iBAAmBwB,IAC/BnF,EAAAA,EAAAA,KAAC2H,EAAAA,QAAe,CACd5G,KAAMoE,EACNhQ,QAASiS,IAGZnS,IAAc+K,EAAAA,EAAAA,KAAC4H,EAAAA,QAAU,CAAC3S,WAAYgR,EAAiB/Q,WAAYqQ,EAAcpQ,QAASiS,OAG5F3B,IACCxF,EAAAA,EAAAA,MAAA4H,EAAAA,SAAA,CAAAhI,SAAA,CACG5I,QAAQE,IAAI,6DAA8D,CACzEsO,aACAE,QAAmB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYG,qBACrBC,UAAqB,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYG,wBAEzB5F,EAAAA,EAAAA,KAAC8H,EAAAA,EAAiB,CAACrC,WAAYA,EAAYsC,YA5C9BC,KACnB/Q,QAAQsB,MAAM,uCACdtB,QAAQE,IAAI,mBAAoB,CAC9BI,OAAkB,OAAVkO,QAAU,IAAVA,OAAU,EAAVA,EAAYlO,OACpB2M,KAAgB,OAAVuB,QAAU,IAAVA,OAAU,EAAVA,EAAYvB,KAClByB,UAAqB,OAAVF,QAAU,IAAVA,IAAAA,EAAYG,wBAEzBF,EAAc,MACdzO,QAAQE,IAAI,iCACZF,QAAQwB,kBAuCNuH,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,uCAAsCiE,UACnDG,EAAAA,EAAAA,KAAA,OAAKpE,UAAU,sBAAsBiD,MAAO,CAAEoC,OAAQ,IAAKpB,UACzDG,EAAAA,EAAAA,KAAC0C,EAAW,CACVE,QAAS2C,EACT1C,MAAO,CACLa,eAAgBA,IAAM4D,EAAmB,YACzC1D,sBAAuBA,IAAM0D,EAAmB,mBAChD7D,eAAgBA,IAAM6D,EAAmB,aAE3CxE,aAAcA,W,uGCnOb5B,GAAU+G,EAAAA,EAAAA,KAAoB,SAAsBjT,EAAwBkT,GAAK,IAA5B,KAAEnH,GAAmB/L,EAATyG,GAAO0M,EAAAA,EAAAA,GAAAnT,EAAAoT,GACjF,MAAMC,EAAU,IAAIC,EAAAA,QAAevH,EAAMtF,GACzC,OAAO8M,EAAAA,EAAAA,GAAoBF,GAASG,EAAAA,EAAAA,IAAcN,EAAK,CACnDO,iBAAkBJ,IAE1B,IAAG,SAAuBrL,EAAO0L,EAAOC,GAChCD,EAAM7J,QAAU8J,EAAU9J,QACP,MAAf6J,EAAM7J,MACN7B,EAAM4L,aAEN5L,EAAM6L,SAASH,EAAM7J,OAGjC,G,6GCXA,MAwIA,EAxIwB7J,IAAwB,IAAvB,KAAE+L,EAAI,QAAE5L,GAASH,EACxC,MAAMI,GAAMC,EAAAA,EAAAA,OAEZ6D,EAAAA,EAAAA,YAAU,KACJ6H,EACF9J,QAAQE,IAAI,oCAAqC,CAC/C8K,KAAMlB,EAAKkB,KACXiF,SAAUnG,EAAKmG,SAAWnG,EAAKmG,SAASlQ,OAAS,EACjD8R,WAAY/H,EAAKmG,SAAWnG,EAAKmG,SAAS,GAAG4B,WAAa,OAG5D7R,QAAQC,KAAK,2CAEd,CAAC6J,IAGJ,MAAMC,GAAetL,EAAAA,EAAAA,UACnB,MACE4G,MAAO,UACPD,OAAQ,EACRS,YAAa,GACbD,UAAW,UACXN,UAAW,IACX0E,OAAQ,KAEV,IAIIpC,GAAQ7I,EAAAA,EAAAA,cACX+S,IACC,IAAKA,IAAYA,EAAQD,WAEvB,OADA7R,QAAQC,KAAK,4BAA6B6R,GACnC/H,EAGT,MAAMgI,EAAgD,iBAA/BD,EAAQD,WAAWG,QAG1C,OAFAhS,QAAQE,IAAI,qBAADuB,OAAmBqQ,EAAQD,WAAWI,WAAU,MAAAxQ,OAAKsQ,EAAiB,eAAiB,yBAElGxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKxG,GAAY,IACfnE,UAAWmM,EAAiB,UAAY,UACxClM,YAAakM,EAAiB,GAAM,QAGxC,CAAChI,IAIGmI,EAAa,CACjB9M,OAAQ,EACRC,MAAO,UACPQ,YAAa,IACbP,UAAW,IAGP6M,GAAgBpT,EAAAA,EAAAA,cACpB,CAAC+S,EAAS/L,KACR,IAAK+L,IAAYA,EAAQD,WAEvB,YADA7R,QAAQC,KAAK,6CAA8C6R,GAK7D,MAAMM,EAAc,6EAAA3Q,OAENqQ,EAAQD,WAAWI,YAAc,4BAAqB,8BAAAxQ,OAC9DqQ,EAAQD,WAAWQ,YAAc,6BAAsB,qBAAA5Q,OACvDqQ,EAAQD,WAAWG,SAAW,4BAAqB,4BAGzDjM,EAAMrB,YAAY0N,EAAgB,CAChCpN,QAAQ,EACRL,UAAW,mBAGboB,EAAMD,GAAG,CACPwM,UAAYjT,IACV,MAAM0G,EAAQ1G,EAAEkT,OAChBxM,EAAM6L,SAASM,GACfnM,EAAMyM,gBAERC,SAAWpT,IACTA,EAAEkT,OAAOX,SAAShK,EAAMkK,KAE1BY,MAAQrT,IACQA,EAAEkT,OAAhB,MAGMI,EAAoB,CACxBrS,OAAQwR,EAAQD,WAAWI,WAC3BhF,KAAM,iBACNjL,MAAO8P,EAAQD,WAAWQ,WAC1BO,UAAWd,EAAQD,WAAWgB,WAC9BC,GAAIhB,EAAQD,WAAWkB,SACvBC,WAAYlB,EAAQD,WAAWmB,WAC/BC,KAAMnB,EAAQD,WAAWG,QACzBkB,WAAYpB,EAAQD,WAAWqB,WAC/BC,SAAUrB,EAAQD,WAAWuB,WAC7BC,GAAIvB,EAAQD,WAAWwB,GACvBC,WAAYxB,EAAQD,WAAWyB,WAC/BC,WAAYzB,EAAQD,WAAW0B,WAC/BC,WAAY1B,EAAQD,WAAW2B,WAC/BC,WAAY3B,EAAQD,WAAW4B,WAC/BC,WAAY5B,EAAQD,WAAW6B,WAC/BC,WAAY7B,EAAQD,WAAW8B,WAC/BC,WAAY9B,EAAQD,WAAW+B,YAG7B1V,GACFA,EAAQyU,QAKhB,CAACxU,EAAKyJ,EAAO1J,IAGf,OAAK4L,EAKAA,EAAKkB,MAAsB,sBAAdlB,EAAKkB,KAKlBlB,EAAKmG,UAAapQ,MAAMC,QAAQgK,EAAKmG,WAAsC,IAAzBnG,EAAKmG,SAASlQ,QAK9DgJ,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,CAACH,KAAMA,EAAMlC,MAAOA,EAAOuK,cAAeA,KAJvDnS,QAAQ8P,MAAM,oDACP,OANP9P,QAAQ8P,MAAM,yFAAuFhG,EAAKkB,MACnG,OANPhL,QAAQC,KAAK,yCACN,M","sources":["components/Marcadores.js","components/MapaBase.js","components/EstadoSP.js","components/MenuCamadas.js","components/detalhesInfo.js","components/MapaEscolasIndigenas.js","../node_modules/react-leaflet/lib/GeoJSON.js","components/TerrasIndigenas.js"],"sourcesContent":["import React, { useEffect, useRef, useMemo, useCallback } from \"react\";\nimport { Marker, Tooltip, useMap } from \"react-leaflet\";\nimport { violetIcon } from \"./CustomIcon\";\nimport L from 'leaflet';\nimport 'leaflet.markercluster';\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\n// Constante para definir a proximidade entre marcadores (em graus)\nconst PROXIMITY_THRESHOLD = 0.00005;\n// Tempo em ms para o tooltip fechar automaticamente em mobile\nconst TOOLTIP_TIMEOUT = 2000;\n\n// Função para criar o conector entre marcadores\nconst createConnector = (map, centerLat, centerLng, markerLat, markerLng) => {\n  return L.polyline([[centerLat, centerLng], [markerLat, markerLng]], {\n    color: '#A0522D',\n    weight: 1.2,\n    dashArray: '3,3',\n    opacity: 0.6,\n    className: 'marker-connector'\n  }).addTo(map);\n};\n\n// Função para encontrar pares de marcadores próximos\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\nconst Marcadores = ({ dataPoints, visibility, onClick }) => {\n  const map = useMap();\n  const clusterGroupRef = useRef(null);\n  const connectorsRef = useRef([]);\n  const isMobile = useMemo(() => L.Browser.mobile, []);\n  \n  // Refs para controle de interação touch\n  const lastTouchedMarker = useRef(null);\n  const touchTimeout = useRef(null);\n\n  // Função para limpar timeout do tooltip\n  const clearTooltipTimeout = useCallback(() => {\n    if (touchTimeout.current) {\n      clearTimeout(touchTimeout.current);\n      touchTimeout.current = null;\n    }\n  }, []);\n\n  // Função para gerenciar interação touch em mobile\n  const handleTouchInteraction = useCallback((marker, ponto, e) => {\n    if (!isMobile) return;\n\n    // Previne propagação do evento\n    e.originalEvent.stopPropagation();\n\n    // Se for o mesmo marcador do último toque\n    if (lastTouchedMarker.current === marker) {\n      clearTooltipTimeout();\n      marker.closeTooltip();\n      onClick?.(ponto);\n      lastTouchedMarker.current = null;\n    } else {\n      // Se for um marcador diferente\n      if (lastTouchedMarker.current) {\n        lastTouchedMarker.current.closeTooltip();\n      }\n      \n      // Atualiza referência e mostra tooltip\n      lastTouchedMarker.current = marker;\n      marker.openTooltip();\n      \n      // Configura timeout para fechar tooltip\n      clearTooltipTimeout();\n      touchTimeout.current = setTimeout(() => {\n        marker.closeTooltip();\n        lastTouchedMarker.current = null;\n      }, TOOLTIP_TIMEOUT);\n    }\n  }, [isMobile, onClick, clearTooltipTimeout]);\n\n  // Filtra os pontos válidos\n  const pontosValidos = React.useMemo(() => {\n    if (!Array.isArray(dataPoints) || dataPoints.length === 0) {\n      console.warn(\"Marcadores: Nenhum ponto de dados recebido\");\n      return [];\n    }\n\n    // Log inicial com total de pontos\n    console.log(\"Total de escolas recebidas:\", dataPoints.length);\n\n    // Array para armazenar escolas com coordenadas inválidas\n    const escolasComProblemas = [];\n\n    const pontosFiltrados = dataPoints.filter(ponto => {\n      // Verifica se o ponto tem as propriedades básicas\n      if (!ponto.titulo || !ponto.latitude || !ponto.longitude) {\n        escolasComProblemas.push({\n          escola: ponto.titulo || \"Sem nome\",\n          problema: \"Dados básicos ausentes\",\n          detalhes: {\n            titulo: !!ponto.titulo,\n            latitude: !!ponto.latitude,\n            longitude: !!ponto.longitude\n          }\n        });\n        return false;\n      }\n\n      const lat = parseFloat(ponto.latitude);\n      const lng = parseFloat(ponto.longitude);\n      \n      // Verifica se as coordenadas são números válidos\n      if (isNaN(lat) || isNaN(lng)) {\n        escolasComProblemas.push({\n          escola: ponto.titulo,\n          problema: \"Coordenadas não são números válidos\",\n          detalhes: {\n            latitude: ponto.latitude,\n            longitude: ponto.longitude\n          }\n        });\n        return false;\n      }\n\n      // Verifica se as coordenadas estão dentro dos limites válidos\n      if (lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        escolasComProblemas.push({\n          escola: ponto.titulo,\n          problema: \"Coordenadas fora dos limites válidos\",\n          detalhes: {\n            latitude: lat,\n            longitude: lng,\n            limites: {\n              latMin: -90,\n              latMax: 90,\n              lngMin: -180,\n              lngMax: 180\n            }\n          }\n        });\n        return false;\n      }\n\n      return true;\n    });\n\n    // Log detalhado das escolas com problemas\n    if (escolasComProblemas.length > 0) {\n      console.group(\"Escolas com coordenadas inválidas:\");\n      escolasComProblemas.forEach(escola => {\n        console.group(escola.escola);\n        console.log(\"Problema:\", escola.problema);\n        console.log(\"Detalhes:\", escola.detalhes);\n        console.groupEnd();\n      });\n      console.groupEnd();\n      console.log(`Total de escolas com problemas: ${escolasComProblemas.length}`);\n    }\n\n    // Log do resultado final\n    console.log(`Escolas válidas: ${pontosFiltrados.length} de ${dataPoints.length}`);\n\n    return pontosFiltrados;\n  }, [dataPoints]);\n\n  // Configuração do ícone para escolas indígenas\n  const escolaIcon = violetIcon;\n\n  // Função para criar o conteúdo do tooltip com melhor acessibilidade\n  const createTooltipContent = useCallback((ponto) => {\n    return `\n      <div class=\"bg-white/95 text-gray-800 text-sm font-medium px-3 py-1.5 rounded shadow-sm border border-gray-100 text-left w-full hover:text-violet-700 focus:text-violet-700 focus:outline-none focus:ring-2 focus:ring-violet-500 focus:ring-opacity-50 transition-colors duration-200\">\n        <button \n          onclick=\"event.stopPropagation(); window.dispatchEvent(new CustomEvent('marker-click', { detail: ${JSON.stringify(ponto)} }));\"\n          aria-label=\"Ver detalhes da escola ${capitalizeWords(ponto.titulo)}\"\n          class=\"w-full text-left\"\n        >\n          <strong>${capitalizeWords(ponto.titulo)}</strong>\n          ${ponto.etnia ? `<div class=\"mt-1 text-xs text-gray-600\">Etnia: ${ponto.etnia}</div>` : ''}\n        </button>\n      </div>\n    `;\n  }, []);\n\n  useEffect(() => {\n    if (!Array.isArray(dataPoints) || dataPoints.length === 0) {\n      console.warn(\"Marcadores: Nenhum ponto de dados válido recebido\");\n      return;\n    }\n\n    if (!map || !pontosValidos.length || !visibility.educacao) return;\n\n    // Remove o grupo de clusters anterior e conectores\n    if (clusterGroupRef.current) {\n      map.removeLayer(clusterGroupRef.current);\n    }\n    connectorsRef.current.forEach(connector => map.removeLayer(connector));\n    connectorsRef.current = [];\n\n    // Limpa referências de touch\n    lastTouchedMarker.current = null;\n    clearTooltipTimeout();\n\n    // Encontra pares de marcadores próximos\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    // Cria um novo grupo de clusters com configurações otimizadas\n    const clusterGroup = new L.MarkerClusterGroup({\n      // Configurações básicas\n      chunkedLoading: true,\n      maxClusterRadius: 4,\n      spiderfyOnMaxZoom: true,\n      showCoverageOnHover: !isMobile, // Desativa em mobile\n      zoomToBoundsOnClick: true,\n      removeOutsideVisibleBounds: true,\n      animate: true,\n      \n      // Configurações de zoom otimizadas\n      disableClusteringAtZoom: 12,\n      minZoom: 4,\n      maxZoom: 18,\n      \n      // Configurações de ícones com estética indígena e acessibilidade\n      iconCreateFunction: function(cluster) {\n        const count = cluster.getChildCount();\n        let size = 'small';\n        let background = '#A0522D';\n        let textColor = '#fff';\n\n        if (count > 100) {\n          size = 'large';\n          background = '#4B2E14';\n        } else if (count > 20) {\n          size = 'medium';\n          background = '#8B5A2B';\n        }\n\n        const iconUrl = violetIcon.options.iconUrl;\n        const iconSize = violetIcon.options.iconSize || [44, 44];\n\n        // Adiciona tooltip ao cluster\n        cluster.bindTooltip(`\n          <div class=\"bg-white/95 text-gray-800 text-sm font-medium px-3 py-1.5 rounded shadow-sm border border-gray-100\">\n            <strong>${count} escola${count > 1 ? 's' : ''} indígena${count > 1 ? 's' : ''}</strong>\n            <br/>\n            <span class=\"text-xs text-gray-600\">Clique para expandir</span>\n          </div>\n        `, {\n          className: \"cluster-tooltip\",\n          direction: \"top\",\n          offset: [0, -10],\n          opacity: 1,\n          permanent: false,\n          sticky: !isMobile\n        });\n\n        return L.divIcon({\n          html: `\n            <div \n              role=\"button\"\n              tabindex=\"0\"\n              aria-label=\"Grupo de ${count} escolas indígenas. Clique para expandir.\"\n              style=\"\n              background: radial-gradient(circle at 30% 30%, ${background}, #3b2e2a);\n              color: ${textColor};\n              border-radius: 50%;\n                width: ${iconSize[0]}px;\n                height: ${iconSize[1]}px;\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              font-weight: bold;\n              border: 2px solid #f5f5dc;\n              box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);\n                transition: transform 0.3s ease, box-shadow 0.3s ease;\n              padding: 2px;\n                cursor: pointer;\n              \"\n            >\n              <img \n                src=\"${iconUrl}\" \n                width=\"${iconSize[0] * 0.6}\" \n                height=\"${iconSize[1] * 0.6}\" \n                style=\"margin-bottom: 2px;\"\n                alt=\"\"\n                aria-hidden=\"true\"\n              />\n              <span \n                style=\"\n                font-size: ${size === 'large' ? '16px' : size === 'medium' ? '14px' : '12px'};\n                \"\n              >${count}</span>\n            </div>`,\n          className: `marker-cluster marker-cluster-${size}`,\n          iconSize: L.point(iconSize[0], iconSize[1])\n        });\n      },\n      \n      // Configurações de animação suaves\n      animateAddingMarkers: true,\n      spiderLegPolylineOptions: { \n        weight: 1.3,\n        color: '#5C4033',\n        opacity: 0.5,\n        dashArray: '2,4'\n      },\n      \n      // Configurações de performance\n      chunkInterval: isMobile ? 100 : 200,\n      chunkDelay: isMobile ? 25 : 50,\n      \n      // Configurações de interatividade\n      singleMarkerMode: false,\n      spiderfyDistanceMultiplier: isMobile ? 2 : 1.5,\n      \n      // Configurações de estilo orgânico\n      polygonOptions: {\n        fillColor: '#A0522D',\n        color: '#5C4033',\n        weight: 1.2,\n        opacity: 0.6,\n        fillOpacity: 0.2\n      }\n    });\n\n    // Adiciona eventos de interação ao cluster\n    clusterGroup.on('clusterclick', function(e) {\n      const cluster = e.layer;\n      const markers = cluster.getAllChildMarkers();\n      \n      // Se estiver no zoom máximo, mostra tooltip explicando a expansão\n      if (map.getZoom() >= cluster.options.disableClusteringAtZoom) {\n        const tooltip = L.tooltip({\n          className: 'cluster-expand-tooltip',\n          direction: 'center',\n          permanent: true,\n          opacity: 0.9\n        })\n        .setContent(`\n          <div class=\"bg-white/95 text-gray-800 text-sm font-medium px-3 py-1.5 rounded shadow-sm border border-gray-100\">\n            <strong>Expandindo ${markers.length} escola${markers.length > 1 ? 's' : ''}</strong>\n            <br/>\n            <span class=\"text-xs text-gray-600\">Toque em um marcador para ver detalhes</span>\n          </div>\n        `)\n        .setLatLng(cluster.getLatLng());\n        \n        tooltip.addTo(map);\n        setTimeout(() => tooltip.remove(), 2000);\n      }\n    });\n\n    // Adiciona os marcadores ao grupo\n    pontosValidos.forEach((ponto, index) => {\n      const lat = parseFloat(ponto.latitude);\n      const lng = parseFloat(ponto.longitude);\n      \n      const marker = L.marker([lat, lng], { \n        icon: escolaIcon,\n        zIndexOffset: 1000,\n        keyboard: true,\n        alt: `Marcador para ${capitalizeWords(ponto.titulo)}`,\n        riseOnHover: true,\n        interactive: true,\n        tooltip: null\n      });\n\n      // Remove qualquer tooltip existente antes de adicionar o novo\n      marker.unbindTooltip();\n      \n      // Adiciona apenas o tooltip customizado\n      marker.bindTooltip(createTooltipContent(ponto), {\n        className: \"custom-tooltip\",\n        direction: \"top\",\n        offset: [0, -10],\n        opacity: 1,\n        permanent: false,\n        sticky: !isMobile, // Tooltip só é sticky em desktop\n        interactive: true, // Permite interação com o tooltip\n        // Desabilita o tooltip padrão do Leaflet\n        tooltip: null\n      });\n\n      // Adiciona eventos de interação\n      if (isMobile) {\n        // Em mobile, usa o gerenciador de touch\n        marker.on('click', (e) => handleTouchInteraction(marker, ponto, e));\n      } else {\n        // Em desktop, mantém comportamento original\n      marker.on('click', () => onClick?.(ponto));\n      }\n\n      // Verifica se este marcador faz parte de um par próximo\n      const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n      if (pairIndex !== -1) {\n        const [first, second] = nearbyPairs[pairIndex];\n        const isFirst = index === first;\n        const otherIndex = isFirst ? second : first;\n        const otherPonto = pontosValidos[otherIndex];\n\n        // Aplica o efeito de fan-out aprimorado apenas em desktop\n        if (!isMobile) {\n        marker.on('add', function() {\n          const transform = isFirst \n            ? 'perspective(500px) rotateY(-20deg) translateX(-20px) rotate(-25deg) scale(0.9)'\n            : 'perspective(500px) rotateY(20deg) translateX(20px) rotate(25deg) scale(0.9)';\n          \n          this._icon.style.transform = transform;\n          this._icon.style.transition = 'transform 0.5s ease-out, filter 0.3s ease-in';\n          this._icon.style.filter = 'drop-shadow(0 4px 12px rgba(160, 82, 45, 0.35))';\n          this._icon.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.35)';\n        });\n        }\n\n        // Cria o conector entre os marcadores\n        const connector = createConnector(\n          map,\n          lat,\n          lng,\n          parseFloat(otherPonto.latitude),\n          parseFloat(otherPonto.longitude)\n        );\n        connectorsRef.current.push(connector);\n      }\n\n      clusterGroup.addLayer(marker);\n    });\n\n    // Adiciona o grupo ao mapa\n    map.addLayer(clusterGroup);\n    clusterGroupRef.current = clusterGroup;\n\n    // Adiciona listener global para o evento de clique no tooltip\n    const handleTooltipClick = (event) => {\n      const ponto = event.detail;\n      onClick?.(ponto);\n    };\n\n    window.addEventListener('marker-click', handleTooltipClick);\n\n    // Limpa o listener quando o componente for desmontado\n    return () => {\n      window.removeEventListener('marker-click', handleTooltipClick);\n      if (clusterGroupRef.current) {\n        map.removeLayer(clusterGroupRef.current);\n      }\n      connectorsRef.current.forEach(connector => map.removeLayer(connector));\n      connectorsRef.current = [];\n      clearTooltipTimeout();\n      lastTouchedMarker.current = null;\n    };\n  }, [\n    map, \n    pontosValidos, \n    onClick, \n    escolaIcon, \n    visibility.educacao, \n    dataPoints, \n    isMobile, \n    createTooltipContent, \n    handleTouchInteraction, \n    clearTooltipTimeout\n  ]);\n\n  return null;\n};\n\nexport default Marcadores; ","import React from 'react';\nimport { MapContainer, TileLayer } from \"react-leaflet\";\n\nconst isMobile = () => {\n  return window.innerWidth <= 768; // Define mobile para telas menores que 768px\n};\n\nconst MapaBase = ({ children }) => {\n  // Define coordenadas e zoom baseados no dispositivo para visualizar SP\n  const defaultPosition = isMobile() ? [-23.5505, -48.6333] : [-23.305, -43.9];\n  const defaultZoom = isMobile() ? 6 : 7; // Zoom mais aberto para visualizar mais do estado\n\n  return (\n    <div className=\"h-screen w-screen overflow-hidden\">\n      <MapContainer\n        center={defaultPosition}\n        zoom={defaultZoom}\n        className=\"h-full w-full\"\n        attributionControl={false}\n        tap={true} // Habilita interações touch\n        doubleClickZoom={false} // Desabilita zoom com duplo clique para melhor experiência mobile\n        touchZoom={true} // Habilita zoom com gestos touch\n        scrollWheelZoom={true} // Mantém zoom com scroll do mouse\n        dragging={true} // Mantém arrastar o mapa\n        keyboard={true} // Habilita navegação por teclado\n        zoomControl={true} // Mantém controles de zoom\n        closePopupOnClick={true} // Fecha popups ao clicar no mapa\n      >\n        {/* TileLayer com o mapa de fundo */}\n        <TileLayer\n        url=\"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n      />\n\n        {/* Conteúdo adicional do mapa (marcadores, camadas, etc.) */}\n        {children}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapaBase;","import React, { useMemo, useEffect } from 'react';\nimport { GeoJSON } from 'react-leaflet';\n\nconst EstadoSP = ({ data }) => {\n  useEffect(() => {\n    if (data) {\n      console.log(\"EstadoSP: Dados recebidos:\", data);\n    }\n  }, [data]);\n\n  // Estilo para criar o efeito de contorno preto com escurecimento interno\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#000000',   // Linha preta\n      weight: 2,          // Espessura da linha\n      fillColor: '#000000', // Preto sólido\n      fillOpacity: 0.3,   // 30% de opacidade para escurecer o mapa\n      dashArray: '',      // Linha contínua\n      zIndex: 999,        // Mantém acima da base\n      interactive: false  // Desativa interatividade para manter fixo\n    }),\n    []\n  );\n\n  if (!data) return null;\n\n  return (\n    <GeoJSON \n      data={data} \n      style={defaultStyle}\n      interactive={false} // Garante que não há interatividade\n    />\n  );\n};\n\nexport default EstadoSP; ","import React, { useState, useEffect, memo, useCallback } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst CAMADAS = {\n  ESTADO_SP: { id: 'estadoSP', label: 'Estado de São Paulo', cor: '#10B981' },\n  ESCOLAS: { id: 'educacao', label: 'Escolas Indígenas', cor: '#3B82F6' },\n  TERRAS_INDIGENAS: { \n    id: 'terrasIndigenas', \n    label: 'Terras Indígenas', \n    cor: '#DC143C',\n    corSecundaria: '#8B0000',\n    labelSecundaria: 'Declaradas'\n  }\n};\n\nconst CabecalhoMenu = memo(({ onClose, onMinimize, isMobile, isMinimized }) => (\n  <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n    <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n    <div className=\"flex items-center gap-2\">\n      <button\n        onClick={onMinimize}\n        className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n        aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n        type=\"button\"\n      >\n        {isMinimized ? \"▾\" : \"▴\"}\n      </button>\n      <button\n        onClick={onClose}\n        className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n        aria-label=\"Fechar\"\n        type=\"button\"\n      >\n        ✕\n      </button>\n    </div>\n  </div>\n));\n\nCabecalhoMenu.displayName = 'CabecalhoMenu';\n\nconst BotaoCamada = memo(({ camada, ativo, onClick, total }) => (\n  <button\n    onClick={onClick}\n    className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n      ativo ? 'bg-gray-50' : 'hover:bg-gray-50'\n    }`}\n    type=\"button\"\n  >\n    {camada.id === 'terrasIndigenas' ? (\n      <div className=\"flex flex-col gap-1\">\n        <div className=\"flex items-center gap-1\">\n          <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.cor }} />\n          <span className=\"text-xs text-gray-600\">Regularizadas</span>\n        </div>\n        <div className=\"flex items-center gap-1\">\n          <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.corSecundaria }} />\n          <span className=\"text-xs text-gray-600\">{camada.labelSecundaria}</span>\n        </div>\n      </div>\n    ) : (\n      <div className=\"w-2 h-2 rounded-full\" style={{ backgroundColor: camada.cor }} />\n    )}\n    <span className=\"text-sm text-gray-800\">{camada.label}</span>\n    {total !== undefined && (\n      <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n    )}\n    <div className=\"ml-auto w-2 h-2 rounded-full\" style={{ backgroundColor: ativo ? camada.cor : '#e5e7eb' }} />\n  </button>\n));\n\nBotaoCamada.displayName = 'BotaoCamada';\n\nconst MenuCamadas = ({ estados, acoes, totalEscolas }) => {\n  const [menuAberto, setMenuAberto] = useState(true);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handlers para ações do menu\n  const handleMenuClose = useCallback(() => setMenuAberto(false), []);\n  const handleMenuOpen = useCallback(() => setMenuAberto(true), []);\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Renderização para mobile\n  if (isMobile) {\n    return (\n      <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n        <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n          <CabecalhoMenu\n            onClose={handleMenuClose}\n            onMinimize={handleMinimize}\n            isMobile={true}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n              <BotaoCamada \n                camada={CAMADAS.ESTADO_SP} \n                ativo={estados.estadoSP} \n                onClick={acoes.toggleEstadoSP} \n              />\n              <BotaoCamada \n                camada={CAMADAS.ESCOLAS} \n                ativo={estados.educacao} \n                onClick={acoes.toggleEducacao} \n                total={totalEscolas} \n              />\n              <BotaoCamada \n                camada={CAMADAS.TERRAS_INDIGENAS} \n                ativo={estados.terrasIndigenas} \n                onClick={acoes.toggleTerrasIndigenas} \n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  // Menu desktop fixo no topo direito\n  return (\n    <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n      <CabecalhoMenu \n        onClose={handleMenuClose}\n        onMinimize={handleMinimize}\n        isMobile={false}\n        isMinimized={isMinimized}\n      />\n      {!isMinimized && (\n        <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n          <BotaoCamada \n            camada={CAMADAS.ESTADO_SP} \n            ativo={estados.estadoSP} \n            onClick={acoes.toggleEstadoSP} \n          />\n          <BotaoCamada \n            camada={CAMADAS.ESCOLAS} \n            ativo={estados.educacao} \n            onClick={acoes.toggleEducacao} \n            total={totalEscolas} \n          />\n          <BotaoCamada \n            camada={CAMADAS.TERRAS_INDIGENAS} \n            ativo={estados.terrasIndigenas} \n            onClick={acoes.toggleTerrasIndigenas} \n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nMenuCamadas.propTypes = {\n  estados: PropTypes.shape({\n    estadoSP: PropTypes.bool.isRequired,\n    educacao: PropTypes.bool.isRequired,\n    terrasIndigenas: PropTypes.bool.isRequired\n  }).isRequired,\n  acoes: PropTypes.shape({\n    toggleEstadoSP: PropTypes.func.isRequired,\n    toggleEducacao: PropTypes.func.isRequired,\n    toggleTerrasIndigenas: PropTypes.func.isRequired\n  }).isRequired,\n  totalEscolas: PropTypes.number\n};\n\nMenuCamadas.displayName = 'MenuCamadas';\n\nexport default memo(MenuCamadas);","const detalhesIntro = {\n  titulo: \"Sobre o site\",\n  audioUrl: \"\",\n  descricao_detalhada: `Este é um observatório que busca mapear as escolas indígenas no estado de São Paulo.\n`,\n  imagens: [\"\"]\n};\n\nexport default detalhesIntro;\n","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect } from \"react\";\nimport MapaBase from \"./MapaBase\";\nimport Marcadores from \"./Marcadores\";\nimport Bairros from \"./Bairros\";\nimport TerrasIndigenas from \"./TerrasIndigenas\";\nimport EstadoSP from \"./EstadoSP\";\nimport MenuCamadas from \"./MenuCamadas\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport detalhesIntro from \"./detalhesInfo\";\nimport \"./MapaEscolasIndigenas.css\";\n\n// Função para converter título em slug\nconst criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-')     // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '')         // Remove hífens do início e fim\n    .trim();\n};\n\nconst MapaEscolasIndigenas = ({ dataPoints }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const panel = urlParams.get('panel');\n  var initialPanel = detalhesIntro;\n  console.log(\"detalhesIntro:\", detalhesIntro);\n  if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n    const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n    if (pointFound != null) {\n      initialPanel = pointFound;\n    }\n  }\n  console.log(\"initialPanel:\", initialPanel);\n\n  const [geojsonData, setGeojsonData] = useState(null);\n  const [terrasIndigenasData, setTerrasIndigenasData] = useState(null);\n  const [estadoSPData, setEstadoSPData] = useState(null);\n  const [visibilidade, setVisibilidade] = useState({\n    educacao: true,\n    terrasIndigenas: true,\n    estadoSP: true,\n  });\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n    linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n  });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Calcula o total de escolas visíveis no mapa (com pontuação >= 0)\n  const escolasVisiveis = dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [];\n  const totalEscolas = escolasVisiveis.length;\n\n  useEffect(() => {\n    const fetchGeoJSON = async () => {\n      try {\n        console.log(\"Iniciando carregamento dos arquivos GeoJSON...\");\n        \n        const [bairrosResponse, terrasIndigenasResponse, estadoSPResponse] = await Promise.all([\n          fetch(`${process.env.PUBLIC_URL}/bairros.geojson`),\n          fetch(`${process.env.PUBLIC_URL}/terras_indigenas_simplified.geojson`),\n          fetch(`${process.env.PUBLIC_URL}/SP_simplified.geojson`)\n        ]);\n\n        console.log(\"Respostas recebidas:\", {\n          bairros: bairrosResponse.status,\n          terrasIndigenas: terrasIndigenasResponse.status,\n          estadoSP: estadoSPResponse.status\n        });\n\n        if (!bairrosResponse.ok) {\n          console.error(`Erro ao carregar GeoJSON dos bairros: HTTP status ${bairrosResponse.status}`);\n          return;\n        }\n        if (!terrasIndigenasResponse.ok) {\n          console.error(`Erro ao carregar GeoJSON das terras indígenas: HTTP status ${terrasIndigenasResponse.status}`);\n          return;\n        }\n        if (!estadoSPResponse.ok) {\n          console.error(`Erro ao carregar GeoJSON do estado: HTTP status ${estadoSPResponse.status}`);\n          return;\n        }\n\n        const [bairrosData, terrasIndigenasData, estadoSPData] = await Promise.all([\n          bairrosResponse.json(),\n          terrasIndigenasResponse.json(),\n          estadoSPResponse.json()\n        ]);\n\n        console.log(\"Dados GeoJSON carregados:\", {\n          bairros: bairrosData ? \"OK\" : \"Falha\",\n          terrasIndigenas: terrasIndigenasData ? \"OK\" : \"Falha\",\n          estadoSP: estadoSPData ? \"OK\" : \"Falha\"\n        });\n\n        if (!bairrosData || !bairrosData.features) {\n          console.error(\"Dados dos bairros inválidos:\", bairrosData);\n          return;\n        }\n\n        if (!terrasIndigenasData || !terrasIndigenasData.features) {\n          console.error(\"Dados das terras indígenas inválidos:\", terrasIndigenasData);\n          return;\n        }\n\n        if (!estadoSPData || !estadoSPData.features) {\n          console.error(\"Dados do estado inválidos:\", estadoSPData);\n          return;\n        }\n\n        setGeojsonData(bairrosData);\n        setTerrasIndigenasData(terrasIndigenasData);\n        setEstadoSPData(estadoSPData);\n\n        console.log(\"Estados atualizados com os dados GeoJSON\");\n      } catch (error) {\n        console.error(\"Erro ao carregar GeoJSON:\", error);\n      }\n    };\n    fetchGeoJSON();\n  }, []);\n\n  // Adicionar logs para verificar quando os dados são renderizados\n  useEffect(() => {\n    console.log(\"Estado dos dados GeoJSON:\", {\n      bairros: geojsonData ? \"Carregado\" : \"Não carregado\",\n      terrasIndigenas: terrasIndigenasData ? \"Carregado\" : \"Não carregado\",\n      estadoSP: estadoSPData ? \"Carregado\" : \"Não carregado\"\n    });\n  }, [geojsonData, terrasIndigenasData, estadoSPData]);\n\n  const abrirPainel = (info) => {\n    console.group(\"MapaEscolasIndigenas - abrirPainel\");\n    console.log(\"Info recebida:\", {\n      titulo: info?.titulo,\n      tipo: info?.tipo,\n      hasLink: !!info?.link_para_documentos,\n      linkValue: info?.link_para_documentos\n    });\n    setPainelInfo(info);\n    console.log(\"painelInfo atualizado\");\n    console.groupEnd();\n  };\n\n  const fecharPainel = () => {\n    console.group(\"MapaEscolasIndigenas - fecharPainel\");\n    console.log(\"Estado anterior:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos\n    });\n    setPainelInfo(null);\n    console.log(\"painelInfo definido como null\");\n    console.groupEnd();\n  };\n\n  const geoJSONStyle = {\n    fillColor: \"green\",\n    color: \"white\",\n    weight: 1,\n    fillOpacity: 0.4,\n  };\n\n  const toggleVisibilidade = (chave) => {\n    console.log(`Alterando visibilidade: ${chave}`);\n    setVisibilidade((prev) => ({ ...prev, [chave]: !prev[chave] }));\n  };\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      <MapaBase>\n        {visibilidade.estadoSP && estadoSPData && <EstadoSP data={estadoSPData} />}\n        {visibilidade.terrasIndigenas && terrasIndigenasData && (\n          <TerrasIndigenas \n            data={terrasIndigenasData} \n            onClick={abrirPainel}\n          />\n        )}\n        {dataPoints && <Marcadores dataPoints={escolasVisiveis} visibility={visibilidade} onClick={abrirPainel} />}\n      </MapaBase>\n\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes painelInfo={painelInfo} closePainel={fecharPainel} />\n        </>\n      )}\n      \n      <div className=\"absolute inset-0 pointer-events-none\">\n        <div className=\"pointer-events-auto\" style={{ zIndex: 20 }}>\n          <MenuCamadas\n            estados={visibilidade}\n            acoes={{\n              toggleEducacao: () => toggleVisibilidade(\"educacao\"),\n              toggleTerrasIndigenas: () => toggleVisibilidade(\"terrasIndigenas\"),\n              toggleEstadoSP: () => toggleVisibilidade(\"estadoSP\"),\n            }}\n            totalEscolas={totalEscolas}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import React, { useCallback, useMemo, useEffect } from 'react';\nimport { GeoJSON, useMap } from 'react-leaflet';\nimport L from 'leaflet';\n\nconst TerrasIndigenas = ({ data, onClick }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"TerrasIndigenas: Dados recebidos:\", {\n        type: data.type,\n        features: data.features ? data.features.length : 0,\n        properties: data.features ? data.features[0].properties : null\n      });\n    } else {\n      console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    }\n  }, [data]);\n\n  // Estilo padrão das terras indígenas\n  const defaultStyle = useMemo(\n    () => ({\n      color: '#B22222', // Vermelho escuro na borda\n      weight: 2,\n      fillOpacity: 0.3,\n      fillColor: '#DC143C', // Vermelho vivo no preenchimento\n      dashArray: '3',\n      zIndex: 2\n    }),\n    []\n  );\n\n  // Função para determinar o estilo baseado no status da terra indígena\n  const style = useCallback(\n    (feature) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades:\", feature);\n        return defaultStyle;\n      }\n\n      const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n      console.log(`Terra indígena ${feature.properties.terrai_nom}: ${isRegularizada ? 'Regularizada' : 'Não Regularizada'}`);\n      \n      return {\n        ...defaultStyle,\n        fillColor: isRegularizada ? '#DC143C' : '#8B0000', // Regularizada vermelho vivo, não regularizada vermelho escuro\n        fillOpacity: isRegularizada ? 0.3 : 0.25\n      };\n    },\n    [defaultStyle]\n  );\n\n  // Estilo quando o mouse passa por cima\n  const hoverStyle = {\n    weight: 3,\n    color: '#FF0000', // Vermelho puro na borda ao passar o mouse\n    fillOpacity: 0.45,\n    dashArray: ''\n  };\n\n  const onEachFeature = useCallback(\n    (feature, layer) => {\n      if (!feature || !feature.properties) {\n        console.warn(\"Feature sem propriedades no onEachFeature:\", feature);\n        return;\n      }\n\n      // Adiciona tooltip com informações básicas\n      const tooltipContent = `\n        <div class=\"bg-white p-2 rounded shadow-md\">\n          <strong>${feature.properties.terrai_nom || 'Nome não disponível'}</strong><br/>\n          ${feature.properties.etnia_nome || 'Etnia não disponível'}<br/>\n          ${feature.properties.fase_ti || 'Fase não disponível'}\n        </div>\n      `;\n      layer.bindTooltip(tooltipContent, {\n        sticky: true,\n        className: 'custom-tooltip'\n      });\n\n      layer.on({\n        mouseover: (e) => {\n          const layer = e.target;\n          layer.setStyle(hoverStyle);\n          layer.bringToFront();\n        },\n        mouseout: (e) => {\n          e.target.setStyle(style(feature));\n        },\n        click: (e) => {\n          const layer = e.target;\n\n          // Prepara os dados para o painel\n          const terraIndigenaInfo = {\n            titulo: feature.properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: feature.properties.etnia_nome,\n            municipio: feature.properties.municipio_,\n            uf: feature.properties.uf_sigla,\n            superficie: feature.properties.superficie,\n            fase: feature.properties.fase_ti,\n            modalidade: feature.properties.modalidade,\n            reestudo: feature.properties.reestudo_t,\n            cr: feature.properties.cr,\n            faixa_fron: feature.properties.faixa_fron,\n            undadm_nom: feature.properties.undadm_nom,\n            undadm_sig: feature.properties.undadm_sig,\n            dominio_un: feature.properties.dominio_un,\n            data_atual: feature.properties.data_atual,\n            terrai_cod: feature.properties.terrai_cod,\n            undadm_cod: feature.properties.undadm_cod\n          };\n\n          if (onClick) {\n            onClick(terraIndigenaInfo);\n          }\n        }\n      });\n    },\n    [map, style, onClick]\n  );\n\n  if (!data) {\n    console.warn(\"TerrasIndigenas: Nenhum dado recebido\");\n    return null;\n  }\n\n  if (!data.type || data.type !== 'FeatureCollection') {\n    console.error(\"TerrasIndigenas: Formato de GeoJSON inválido. Esperado FeatureCollection, recebido:\", data.type);\n    return null;\n  }\n\n  if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n    console.error(\"TerrasIndigenas: GeoJSON sem features válidas\");\n    return null;\n  }\n\n  return <GeoJSON data={data} style={style} onEachFeature={onEachFeature} />;\n};\n\nexport default TerrasIndigenas; "],"names":["PROXIMITY_THRESHOLD","_ref","dataPoints","visibility","onClick","map","useMap","clusterGroupRef","useRef","connectorsRef","isMobile","useMemo","L","mobile","lastTouchedMarker","touchTimeout","clearTooltipTimeout","useCallback","current","clearTimeout","handleTouchInteraction","marker","ponto","e","originalEvent","stopPropagation","closeTooltip","openTooltip","setTimeout","pontosValidos","React","Array","isArray","length","console","warn","log","escolasComProblemas","pontosFiltrados","filter","titulo","latitude","longitude","push","escola","problema","detalhes","lat","parseFloat","lng","isNaN","limites","latMin","latMax","lngMin","lngMax","group","forEach","groupEnd","concat","escolaIcon","violetIcon","createTooltipContent","JSON","stringify","capitalizeWords","etnia","useEffect","educacao","removeLayer","connector","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","Math","abs","lngDiff","add","findNearbyPairs","clusterGroup","flat","chunkedLoading","maxClusterRadius","spiderfyOnMaxZoom","showCoverageOnHover","zoomToBoundsOnClick","removeOutsideVisibleBounds","animate","disableClusteringAtZoom","minZoom","maxZoom","iconCreateFunction","cluster","count","getChildCount","size","background","iconUrl","options","iconSize","bindTooltip","className","direction","offset","opacity","permanent","sticky","html","animateAddingMarkers","spiderLegPolylineOptions","weight","color","dashArray","chunkInterval","chunkDelay","singleMarkerMode","spiderfyDistanceMultiplier","polygonOptions","fillColor","fillOpacity","on","layer","markers","getAllChildMarkers","getZoom","tooltip","setContent","setLatLng","getLatLng","addTo","remove","index","icon","zIndexOffset","keyboard","alt","riseOnHover","interactive","unbindTooltip","pairIndex","findIndex","pair","includes","first","second","isFirst","otherPonto","transform","this","_icon","style","transition","boxShadow","createConnector","centerLat","centerLng","markerLat","markerLng","addLayer","handleTooltipClick","event","detail","window","addEventListener","removeEventListener","innerWidth","children","defaultPosition","defaultZoom","_jsx","_jsxs","MapContainer","center","zoom","attributionControl","tap","doubleClickZoom","touchZoom","scrollWheelZoom","dragging","zoomControl","closePopupOnClick","TileLayer","url","data","defaultStyle","zIndex","GeoJSON","CAMADAS","ESTADO_SP","id","label","cor","ESCOLAS","TERRAS_INDIGENAS","corSecundaria","labelSecundaria","CabecalhoMenu","memo","onClose","onMinimize","isMinimized","type","displayName","BotaoCamada","_ref2","camada","ativo","total","backgroundColor","undefined","MenuCamadas","_ref3","estados","acoes","totalEscolas","menuAberto","setMenuAberto","useState","setIsMobile","setIsMinimized","checkMobile","handleMenuClose","handleMinimize","prev","estadoSP","toggleEstadoSP","toggleEducacao","terrasIndigenas","toggleTerrasIndigenas","audioUrl","descricao_detalhada","imagens","quantidade","exemplo","tipo","panel","URLSearchParams","location","search","get","initialPanel","detalhesIntro","pointFound","find","item","toLowerCase","normalize","replace","trim","geojsonData","setGeojsonData","terrasIndigenasData","setTerrasIndigenasData","estadoSPData","setEstadoSPData","visibilidade","setVisibilidade","painelInfo","setPainelInfo","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","escolasVisiveis","point","pontuacao","async","bairrosResponse","terrasIndigenasResponse","estadoSPResponse","Promise","all","fetch","process","bairros","status","ok","error","bairrosData","json","features","fetchGeoJSON","abrirPainel","info","toggleVisibilidade","chave","_objectSpread","MapaBase","EstadoSP","TerrasIndigenas","Marcadores","_Fragment","PainelInformacoes","closePainel","fecharPainel","createPathComponent","ctx","_objectWithoutProperties","_excluded","geoJSON","LeafletGeoJSON","createElementObject","extendContext","overlayContainer","props","prevProps","resetStyle","setStyle","properties","feature","isRegularizada","fase_ti","terrai_nom","hoverStyle","onEachFeature","tooltipContent","etnia_nome","mouseover","target","bringToFront","mouseout","click","terraIndigenaInfo","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod"],"sourceRoot":""}
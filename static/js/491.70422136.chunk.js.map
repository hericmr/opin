{"version":3,"file":"static/js/491.70422136.chunk.js","mappings":"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","sources":["services/csvDataService.js","components/Charts/AlunosPorEscolaChart.js","components/Charts/DistribuicaoAlunosChart.js","components/Charts/DistribuicaoAlunosModalidadeChart.js","components/Charts/EquipamentosChart.js","components/Charts/EscolasPorDiretoriaChart.js","components/Charts/TiposEnsinoChart.js","components/Dashboard.js","components/PageHeader/index.js"],"sourcesContent":["import Papa from 'papaparse';\n\nclass CSVDataService {\n  constructor() {\n    this.cache = new Map();\n  }\n\n  async loadCSV(filename) {\n    // Verifica se os dados já estão em cache\n    if (this.cache.has(filename)) {\n      return this.cache.get(filename);\n    }\n\n    try {\n      const response = await fetch(`./data/${filename}`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const csvText = await response.text();\n      \n      return new Promise((resolve, reject) => {\n        Papa.parse(csvText, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            if (results.errors && results.errors.length > 0) {\n              console.error(`Erros ao processar ${filename}:`, results.errors);\n            }\n            const data = results.data;\n            this.cache.set(filename, data);\n            resolve(data);\n          },\n          error: (error) => {\n            console.error(`Erro ao processar ${filename}:`, error);\n            reject(error);\n          }\n        });\n      });\n    } catch (error) {\n      console.error(`Erro ao carregar ${filename}:`, error);\n      throw error;\n    }\n  }\n\n  // Carrega dados das escolas\n  async loadEscolasData() {\n    try {\n      const data = await this.loadCSV('escolas.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Carrega dados dos docentes\n  async loadDocentesData() {\n    try {\n      const data = await this.loadCSV('docentes.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Carrega dados dos equipamentos\n  async loadEquipamentosData() {\n    try {\n      const data = await this.loadCSV('equipamentos.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Carrega dados das turmas por tipo\n  async loadTurmasPorTipoData() {\n    try {\n      const data = await this.loadCSV('turmas_por_tipo.csv');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Processa dados para gráfico de alunos vs docentes\n  async getAlunosVsDocentesData() {\n    const escolasData = await this.loadEscolasData();\n    const docentesData = await this.loadDocentesData();\n\n    // Conta professores únicos por escola\n    const docentesPorEscola = {};\n    docentesData.forEach(docente => {\n      if (!docentesPorEscola[docente.CIE_Escola]) {\n        docentesPorEscola[docente.CIE_Escola] = new Set();\n      }\n      docentesPorEscola[docente.CIE_Escola].add(docente.Nome);\n    });\n\n    // Converte para array de dados para o gráfico\n    const chartData = escolasData.map(escola => {\n      const cie = escola.CIE.toString();\n      const alunos = parseInt(escola.Total_Alunos) || 0;\n      const docentes = docentesPorEscola[cie] ? docentesPorEscola[cie].size : 0;\n      \n      return {\n        nome: escola.Nome,\n        alunos: alunos,\n        docentes: docentes,\n        cie: cie\n      };\n    }).filter(item => item.alunos > 0 || item.docentes > 0); // Filtra apenas escolas com dados válidos\n\n    return chartData;\n  }\n\n  // Processa dados para gráfico de alunos por escola\n  async getAlunosPorEscolaData() {\n    const escolasData = await this.loadEscolasData();\n    \n    // Filtra apenas escolas indígenas\n    const escolasIndigenas = escolasData\n      .filter(escola => escola.Tipo === 'EEI - INDIGENA')\n      .map(escola => ({\n        nome: escola.Nome,\n        alunos: parseInt(escola.Total_Alunos) || 0,\n        cie: escola.CIE.toString()\n      }))\n      .filter(escola => escola.alunos > 0) // Filtra apenas escolas com alunos\n      .sort((a, b) => b.alunos - a.alunos);\n\n    return escolasIndigenas;\n  }\n\n  // Processa dados para gráfico de distribuição de alunos\n  async getDistribuicaoAlunosData() {\n    const escolasData = await this.loadEscolasData();\n    \n    const bins = [0, 10, 25, 50, 100, Infinity];\n    const labels = ['Até 10 alunos', '11 a 25 alunos', '26 a 50 alunos', '51 a 100 alunos', 'Mais de 100 alunos'];\n    \n    const distribuicao = {};\n    labels.forEach(label => distribuicao[label] = 0);\n\n    escolasData.forEach(escola => {\n      const alunos = parseInt(escola.Total_Alunos) || 0;\n      for (let i = 0; i < bins.length - 1; i++) {\n        if (alunos >= bins[i] && alunos < bins[i + 1]) {\n          distribuicao[labels[i]]++;\n          break;\n        }\n      }\n    });\n\n    return Object.entries(distribuicao).map(([name, value]) => ({\n      name,\n      value\n    }));\n  }\n\n  // Processa dados para gráfico de equipamentos\n  async getEquipamentosData() {\n    const equipamentosData = await this.loadEquipamentosData();\n    \n    const equipamentosPorTipo = {};\n    equipamentosData.forEach(equipamento => {\n      if (!equipamentosPorTipo[equipamento.Equipamento]) {\n        equipamentosPorTipo[equipamento.Equipamento] = 0;\n      }\n      equipamentosPorTipo[equipamento.Equipamento] += parseInt(equipamento.Quantidade) || 0;\n    });\n\n    return Object.entries(equipamentosPorTipo)\n      .map(([equipamento, quantidade]) => ({\n        equipamento,\n        quantidade\n      }))\n      .filter(item => item.quantidade > 0) // Filtra apenas equipamentos com quantidade > 0\n      .sort((a, b) => b.quantidade - a.quantidade);\n  }\n\n  // Processa dados para gráfico de escolas por diretoria\n  async getEscolasPorDiretoriaData() {\n    const escolasData = await this.loadEscolasData();\n    \n    // Conta TODAS as escolas por diretoria (não apenas indígenas)\n    const escolasPorDiretoria = {};\n    escolasData.forEach(escola => {\n      if (escola.Diretoria && escola.Diretoria.trim() !== '') {\n        if (!escolasPorDiretoria[escola.Diretoria]) {\n          escolasPorDiretoria[escola.Diretoria] = 0;\n        }\n        escolasPorDiretoria[escola.Diretoria]++;\n      }\n    });\n\n    return Object.entries(escolasPorDiretoria)\n      .map(([diretoria, quantidade]) => ({\n        diretoria,\n        quantidade\n      }))\n      .sort((a, b) => a.quantidade - b.quantidade); // Ordena crescente como no Python\n  }\n\n  // Processa dados para gráfico de tipos de ensino\n  async getTiposEnsinoData() {\n    const turmasData = await this.loadTurmasPorTipoData();\n    \n    const tiposEnsino = [\n      'Anos_Iniciais',\n      'Anos_Finais',\n      'EJA_Anos_Iniciais',\n      'EJA_Anos_Finais',\n      'EJA_Ensino_Medio',\n      'Ensino_Infantil'\n    ];\n\n    const labelMapping = {\n      'Anos_Iniciais': 'Anos Iniciais',\n      'Anos_Finais': 'Anos Finais',\n      'EJA_Anos_Iniciais': 'EJA Anos Iniciais',\n      'EJA_Anos_Finais': 'EJA Anos Finais',\n      'EJA_Ensino_Medio': 'EJA Ensino Médio',\n      'Ensino_Infantil': 'Ensino Infantil'\n    };\n\n    const counts = {};\n    tiposEnsino.forEach(tipo => {\n      counts[tipo] = turmasData.filter(escola => {\n        const valor = parseInt(escola[tipo]) || 0;\n        return valor > 0;\n      }).length;\n    });\n\n    return Object.entries(counts)\n      .map(([tipo, quantidade]) => ({\n        tipo: labelMapping[tipo],\n        quantidade\n      }))\n      .filter(item => item.quantidade > 0) // Filtra apenas tipos com quantidade > 0\n      .sort((a, b) => b.quantidade - a.quantidade);\n  }\n\n  // Processa dados para gráfico de distribuição de alunos por modalidade\n  async getDistribuicaoAlunosModalidadeData() {\n    // Dados específicos fornecidos pelo usuário\n    const dadosModalidade = [\n      { name: 'Anos Iniciais', value: 654 },\n      { name: 'Anos Finais', value: 568 },\n      { name: 'Ensino Médio', value: 269 },\n      { name: 'EJA', value: 130 }\n    ];\n\n    return dadosModalidade;\n  }\n}\n\nconst csvDataService = new CSVDataService();\nexport default csvDataService;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst AlunosPorEscolaChart = ({ data }) => {\n  // Função para normalizar nomes das escolas\n  const normalizeSchoolName = (name) => {\n    if (!name) return '';\n    \n    return name\n      .toLowerCase()\n      .split(' ')\n      .map(word => {\n        // Palavras que devem permanecer em maiúscula\n        const uppercaseWords = ['ee', 'eei', 'eja', 'sp', 'unifesp', 'lindi'];\n        if (uppercaseWords.includes(word)) {\n          return word.toUpperCase();\n        }\n        // Primeira letra de cada palavra em maiúscula\n        return word.charAt(0).toUpperCase() + word.slice(1);\n      })\n      .join(' ');\n  };\n\n  // Normaliza os dados antes de renderizar\n  const normalizedData = data.map(item => ({\n    ...item,\n    nome: normalizeSchoolName(item.nome)\n  }));\n\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.nome}</p>\n          <p className=\"text-sm text-gray-600\">CIE: {data.cie}</p>\n          <p className=\"text-sm\">Alunos: {data.alunos}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Número de Alunos por Escola Indígena\n      </h3>\n      \n      {/* Texto introdutório */}\n      <div className=\"mb-6 p-4\">\n        <p className=\"text-gray-700 leading-relaxed\">\n          A maioria das EEIs atende a um pequeno contingente de alunos. Dez escolas (24,4%) possuem até 10 alunos, 11 escolas (26,8%) atendem entre 11 e 25 alunos, e 12 escolas (29,3%) concentram de 26 a 50 alunos. Juntas, essas pequenas unidades representam 80,5% da rede, evidenciando o predomínio de escolas de porte reduzido. Em contraste, apenas quatro escolas (9,8%) atendem entre 51 e 100 alunos, e outras quatro (9,8%) possuem mais de 100 alunos, indicando que poucas unidades concentram grandes contingentes estudantis.\n        </p>\n        \n        <p className=\"text-gray-700 leading-relaxed mt-4\">\n          Entre as escolas de maior porte, destacam-se a Indígena Guarani Gwyra Pepo, com 296 alunos, a E.E.I. Djekupe Amba Arandy, com 249 alunos, a E.E.I. Txeru Ba'e Kua-i, com 111 alunos, e a CECI Krukutu, com 101 alunos. No extremo oposto, algumas escolas atendem menos de 10 alunos, como a Aldeia Uru'ity, com 4 estudantes, e a Aldeia Santa Cruz, com apenas 3. Essa distribuição evidencia a grande heterogeneidade no tamanho das turmas, o que impacta diretamente a gestão, a oferta de recursos e a qualidade do ensino.\n        </p>\n      </div>\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            data={normalizedData}\n            margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 60,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"nome\" \n              angle={-45}\n              textAnchor=\"end\"\n              height={100}\n              interval={0}\n            />\n            <YAxis \n              label={{ value: 'Número de Alunos', angle: -90, position: 'insideLeft' }}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Bar dataKey=\"alunos\" fill=\"#22c55e\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default AlunosPorEscolaChart;","import React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Tooltip, Legend } from 'recharts';\n\nconst DistribuicaoAlunosChart = ({ data }) => {\n  const NATURAL_GREEN_COLORS = ['#22c55e', '#16a34a', '#15803d', '#166534', '#14532d', '#365314', '#3f6212', '#4ade80'];\n\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.name}</p>\n          <p className=\"text-sm\">Escolas: {data.value}</p>\n          <p className=\"text-sm\">Percentual: {((data.value / data.total) * 100).toFixed(1)}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text \n        x={x} \n        y={y} \n        fill=\"white\" \n        textAnchor={x > cx ? 'start' : 'end'} \n        dominantBaseline=\"central\"\n        fontSize={12}\n        fontWeight=\"bold\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  // Calcula o total para percentuais\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  const dataWithTotal = data.map(item => ({ ...item, total }));\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      \n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Distribuição de Escolas por Número de Alunos\n      </h3>\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <PieChart>\n            <Pie\n              data={dataWithTotal}\n              cx=\"50%\"\n              cy=\"50%\"\n              labelLine={false}\n              label={CustomLabel}\n              outerRadius={120}\n              fill=\"#8884d8\"\n              dataKey=\"value\"\n            >\n              {dataWithTotal.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={NATURAL_GREEN_COLORS[index % NATURAL_GREEN_COLORS.length]} />\n              ))}\n            </Pie>\n            <Tooltip content={<CustomTooltip />} />\n            <Legend />\n          </PieChart>\n        </ResponsiveContainer>\n      </div>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default DistribuicaoAlunosChart;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Legend } from 'recharts';\n\nconst DistribuicaoAlunosModalidadeChart = ({ data }) => {\n  // Cores específicas para cada modalidade\n  const MODALIDADE_COLORS = {\n    'Anos Iniciais': '#1B5E20',    // Verde escuro\n    'Anos Finais': '#1565C0',       // Azul escuro\n    'Ensino Médio': '#00695C',      // Verde esmeralda escuro\n    'EJA': '#2E7D32'                // Verde médio\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border border-gray-300 rounded-lg shadow-lg\">\n          <p className=\"font-semibold text-gray-800\">{data.name}</p>\n          <p className=\"text-sm text-gray-600\">Alunos: {data.value.toLocaleString()}</p>\n          <p className=\"text-sm text-gray-600\">Percentual: {data.percentual}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomPieTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-4 border border-gray-300 rounded-lg shadow-lg\">\n          <p className=\"font-semibold text-gray-800\">{data.name}</p>\n          <p className=\"text-sm text-gray-600\">Alunos: {data.value.toLocaleString()}</p>\n          <p className=\"text-sm text-gray-600\">Percentual: {data.percentual}%</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const CustomLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text \n        x={x} \n        y={y} \n        fill=\"white\" \n        textAnchor={x > cx ? 'start' : 'end'} \n        dominantBaseline=\"central\"\n        fontSize={12}\n        fontWeight=\"bold\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  // Calcula o total para percentuais\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  const dataWithPercentual = data.map(item => ({ \n    ...item, \n    percentual: ((item.value / total) * 100).toFixed(1)\n  }));\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Distribuição de Alunos por Modalidade de Ensino\n      </h3>\n      \n      {/* Texto introdutório */}\n      <div className=\"mb-6 p-4\">\n        <p className=\"text-gray-700 leading-relaxed\">\n          As escolas estaduais indígenas de São Paulo somam atualmente 42 unidades, distribuídas entre a capital, o interior e o litoral, atendendo 1.688 estudantes. Essas escolas oferecem os anos iniciais e finais do Ensino Fundamental, o Ensino Médio e a Educação de Jovens e Adultos (EJA). A maior parte das matrículas está no Ensino Fundamental, que reúne 75,4% dos alunos. Os anos iniciais concentram 654 estudantes (40,3%), seguidos pelos anos finais, com 568 alunos (35,0%). O Ensino Médio responde por 269 matrículas (16,6%), enquanto a EJA conta com 130 estudantes (7,7%).\n        </p>\n      </div>\n      \n      {/* Informações gerais */}\n      <div className=\"mb-6 p-4 bg-gradient-to-r from-green-50 to-blue-50 rounded-lg\">\n        <div className=\"text-center\">\n          <p className=\"text-lg font-semibold text-gray-800\">\n            Total de Alunos: <span className=\"text-green-700\">{total.toLocaleString()}</span>\n          </p>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            Escolas Indígenas do Estado de São Paulo\n          </p>\n        </div>\n      </div>\n\n      {/* Grid de gráficos */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        \n        {/* Gráfico de Barras */}\n        <div>\n          <h4 className=\"text-lg font-semibold mb-3 text-gray-700 text-center\">\n            Distribuição por Quantidade\n          </h4>\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={dataWithPercentual}\n                margin={{\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                <XAxis \n                  dataKey=\"name\" \n                  tick={{ fontSize: 12 }}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={80}\n                />\n                <YAxis \n                  tick={{ fontSize: 12 }}\n                  label={{ value: 'Número de Alunos', angle: -90, position: 'insideLeft' }}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Bar \n                  dataKey=\"value\" \n                  radius={[4, 4, 0, 0]}\n                >\n                  {dataWithPercentual.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={MODALIDADE_COLORS[entry.name]} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Gráfico de Pizza */}\n        <div>\n          <h4 className=\"text-lg font-semibold mb-3 text-gray-700 text-center\">\n            Distribuição Percentual\n          </h4>\n          <div className=\"h-80\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={dataWithPercentual}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={CustomLabel}\n                  outerRadius={100}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {dataWithPercentual.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={MODALIDADE_COLORS[entry.name]} />\n                  ))}\n                </Pie>\n                <Tooltip content={<CustomPieTooltip />} />\n                <Legend \n                  verticalAlign=\"bottom\" \n                  height={36}\n                  formatter={(value, entry) => (\n                    <span style={{ color: entry.color }}>\n                      {value}\n                    </span>\n                  )}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* Estatísticas detalhadas */}\n      <div className=\"mt-6 grid grid-cols-2 lg:grid-cols-4 gap-4\">\n        {dataWithPercentual.map((item, index) => (\n          <div key={index} className=\"text-center p-2 rounded-lg border\" style={{ \n            borderColor: MODALIDADE_COLORS[item.name]\n          }}>\n            <div \n              className=\"w-4 h-4 rounded-full mx-auto mb-2\" \n              style={{ backgroundColor: MODALIDADE_COLORS[item.name] }}\n            ></div>\n            <p className=\"font-semibold text-sm text-gray-800\">{item.name}</p>\n            <p className=\"text-lg font-bold text-gray-800\">\n              {item.value.toLocaleString()}\n            </p>\n            <p className=\"text-xs text-gray-600\">{item.percentual}%</p>\n          </div>\n        ))}\n      </div>\n\n\n      <p className=\"text-sm text-gray-500 mt-4 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default DistribuicaoAlunosModalidadeChart;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\n\nconst EquipamentosChart = ({ data }) => {\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.equipamento}</p>\n          <p className=\"text-sm\">Quantidade: {data.quantidade}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Se não há dados, mostra mensagem\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n        <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n          Distribuição de Equipamentos nas Escolas\n        </h3>\n        <div className=\"h-96 flex items-center justify-center\">\n          <p className=\"text-gray-500\">Nenhum dado disponível</p>\n        </div>\n        <p className=\"text-sm text-gray-500 mt-2 text-center\">\n          Fonte: SEDUC 2025\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Distribuição de Equipamentos nas Escolas\n      </h3>\n      \n      {/* Texto sobre infraestrutura tecnológica */}\n      <div className=\"mb-6 p-4\">\n        <p className=\"text-gray-700 leading-relaxed\">\n          A infraestrutura tecnológica das escolas estaduais indígenas evidencia desigualdades significativas no acesso a equipamentos e conectividade. O recurso mais presente é o tablet para alunos, disponível em 653 unidades (55,4%), seguido por computadores portáteis (110, 9,3%) e computadores destinados aos alunos (98, 8,3%). Outros recursos, como aparelhos de TV (57, 4,8%), computadores para uso administrativo (56, 4,8%), aparelhos de Wi-Fi/access points (33, 2,8%) e rede local (18, 1,5%), estão presentes em proporções muito inferiores.\n        </p>\n        <p className=\"text-gray-700 leading-relaxed mt-3\">\n          O acesso à internet é muito restrito. Para uso pedagógico e administrativo, está disponível em apenas 22 escolas (1,9%). Para uso pelos alunos, são apenas 19 escolas (1,6%). Isso mostra que a maior parte das escolas ainda não dispõe de conectividade adequada para práticas digitais. Embora a tecnologia esteja presente em diversas escolas, seu uso pedagógico efetivo continua limitado. Essa limitação compromete a qualidade do ensino e dificulta a inclusão digital de professores e estudantes.\n        </p>\n      </div>\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            data={data}\n            margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 80,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"equipamento\"\n              angle={-45}\n              textAnchor=\"end\"\n              height={100}\n              interval={0}\n              tick={{ fontSize: 10 }}\n            />\n            <YAxis \n              label={{ value: 'Quantidade Total', angle: -90, position: 'insideLeft' }}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Bar dataKey=\"quantidade\" fill=\"#16a34a\">\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill=\"#16a34a\" />\n              ))}\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default EquipamentosChart;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\n\nconst EscolasPorDiretoriaChart = ({ data }) => {\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.diretoria}</p>\n          <p className=\"text-sm\">Escolas: {data.quantidade}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  // Se não há dados, mostra mensagem\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n        <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n          Número de Escolas por Diretoria de Ensino\n        </h3>\n        <div className=\"h-96 flex items-center justify-center\">\n          <p className=\"text-gray-500\">Nenhum dado disponível</p>\n        </div>\n        <p className=\"text-sm text-gray-500 mt-2 text-center\">\n          Fonte: SEDUC 2025\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      \n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Número de Escolas por Diretoria de Ensino\n      </h3>\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            data={data}\n            margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 80,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"diretoria\"\n              angle={-45}\n              textAnchor=\"end\"\n              height={100}\n              interval={0}\n              tick={{ fontSize: 10 }}\n            />\n            <YAxis \n              label={{ value: 'Número de Escolas', angle: -90, position: 'insideLeft' }}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Bar dataKey=\"quantidade\" fill=\"#15803d\">\n              {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill=\"#15803d\" />\n              ))}\n            </Bar>\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default EscolasPorDiretoriaChart;","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst TiposEnsinoChart = ({ data }) => {\n  const CustomTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded shadow-lg\">\n          <p className=\"font-semibold\">{data.tipo}</p>\n          <p className=\"text-sm\">Escolas: {data.quantidade}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-lg\">\n      \n      <h3 className=\"text-xl font-bold mb-4 text-gray-800\">\n        Número de Escolas por Tipo de Ensino Oferecido\n      </h3>\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            data={data}\n            margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 60,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n              dataKey=\"tipo\" \n              angle={-45}\n              textAnchor=\"end\"\n              height={100}\n              interval={0}\n            />\n            <YAxis \n              label={{ value: 'Número de Escolas', angle: -90, position: 'insideLeft' }}\n            />\n            <Tooltip content={<CustomTooltip />} />\n            <Bar dataKey=\"quantidade\" fill=\"#166534\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n      <p className=\"text-sm text-gray-500 mt-2 text-center\">\n        Fonte: Héric Moura LINDI(UNIFESP), a partir de dados da SEDUC 2025\n      </p>\n    </div>\n  );\n};\n\nexport default TiposEnsinoChart;","import React, { useState, useEffect } from 'react';\nimport { ChevronRight } from 'lucide-react';\nimport csvDataService from '../services/csvDataService';\nimport PageHeader from './PageHeader';\nimport {\n  AlunosPorEscolaChart,\n  DistribuicaoAlunosChart,\n  DistribuicaoAlunosModalidadeChart,\n  EquipamentosChart,\n  EscolasPorDiretoriaChart,\n  TiposEnsinoChart\n} from './Charts';\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState({\n    alunosPorEscola: [],\n    distribuicaoAlunos: [],\n    distribuicaoAlunosModalidade: [],\n    equipamentos: [],\n    escolasPorDiretoria: [],\n    tiposEnsino: []\n  });\n\n  // Breadcrumbs de Navegação\n  const breadcrumbs = [\n    { label: 'Início', path: '/', active: false },\n    { label: 'Painel de Dados', path: '/dashboard', active: true }\n  ];\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const [\n          alunosPorEscola,\n          distribuicaoAlunos,\n          distribuicaoAlunosModalidade,\n          equipamentos,\n          escolasPorDiretoria,\n          tiposEnsino\n        ] = await Promise.all([\n          csvDataService.getAlunosPorEscolaData().catch(err => {\n            console.error('Erro ao carregar alunos por escola:', err);\n            return [];\n          }),\n          csvDataService.getDistribuicaoAlunosData().catch(err => {\n            console.error('Erro ao carregar distribuição de alunos:', err);\n            return [];\n          }),\n          csvDataService.getDistribuicaoAlunosModalidadeData().catch(err => {\n            console.error('Erro ao carregar distribuição de alunos por modalidade:', err);\n            return [];\n          }),\n          csvDataService.getEquipamentosData().catch(err => {\n            console.error('Erro ao carregar equipamentos:', err);\n            return [];\n          }),\n          csvDataService.getEscolasPorDiretoriaData().catch(err => {\n            console.error('Erro ao carregar escolas por diretoria:', err);\n            return [];\n          }),\n          csvDataService.getTiposEnsinoData().catch(err => {\n            console.error('Erro ao carregar tipos de ensino:', err);\n            return [];\n          })\n        ]);\n\n\n        setData({\n          alunosPorEscola,\n          distribuicaoAlunos,\n          distribuicaoAlunosModalidade,\n          equipamentos,\n          escolasPorDiretoria,\n          tiposEnsino\n        });\n      } catch (err) {\n        console.error('Erro geral ao carregar dados:', err);\n        setError(`Erro ao carregar os dados dos gráficos: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-lg text-gray-600\">Carregando dados dos gráficos...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n            <p className=\"font-bold\">Erro</p>\n            <p>{error}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-amber-50 pt-16 sm:pt-20 dashboard-scroll\">\n      {/* Breadcrumbs de Navegação */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3\">\n          <nav className=\"flex items-center space-x-2 text-sm\">\n            {breadcrumbs.map((crumb, index) => (\n              <div key={index} className=\"flex items-center\">\n                {index > 0 && (\n                  <ChevronRight className=\"w-4 h-4 text-gray-400 mx-2\" />\n                )}\n                {crumb.path ? (\n                  <button\n                    onClick={() => window.location.href = crumb.path}\n                    className=\"text-gray-600 hover:text-green-700 transition-colors\"\n                  >\n                    {crumb.label}\n                  </button>\n                ) : (\n                  <span className={`font-medium ${crumb.active ? 'text-green-700' : 'text-gray-900'}`}>\n                    {crumb.label}\n                  </span>\n                )}\n              </div>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* Cabeçalho com design indígena */}\n      <PageHeader\n        title=\"Painel de Dados\"\n        description={\n          <>\n            Este espaço reúne informações sobre as escolas indígenas do estado de São Paulo, apresentando indicadores como número de estudantes e docentes, infraestrutura disponível, distribuição geográfica por Diretorias de Ensino e modalidades de ensino oferecidas. Os dados foram fornecidos pela Secretaria da Educação do Estado de São Paulo (SEDUC) e referem-se ao ano de 2025. A base completa pode ser acessada em:{' '}\n            <a \n              href=\"https://dados.educacao.sp.gov.br/\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-white hover:text-green-100 underline font-medium\"\n            >\n              dados.educacao.sp.gov.br\n            </a>\n          </>\n        }\n      />\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n\n\n        {/* Grid de Gráficos */}\n        <div className=\"space-y-8\">\n          {/* PRIMEIRO GRÁFICO - Distribuição de Alunos por Modalidade */}\n          <div>\n            <DistribuicaoAlunosModalidadeChart data={data.distribuicaoAlunosModalidade} />\n          </div>\n\n          {/* Gráfico de Barras - Tipos de Ensino */}\n          <div>\n            <TiposEnsinoChart data={data.tiposEnsino} />\n          </div>\n\n          {/* Gráfico de Barras - Alunos por Escola */}\n          <div>\n            <AlunosPorEscolaChart data={data.alunosPorEscola} />\n          </div>\n\n          {/* Gráfico de Pizza - Distribuição de Alunos */}\n          <div>\n            <DistribuicaoAlunosChart data={data.distribuicaoAlunos} />\n          </div>\n\n          {/* Gráfico de Barras Horizontais - Equipamentos */}\n          <div>\n            <EquipamentosChart data={data.equipamentos} />\n          </div>\n\n          {/* Gráfico de Barras Horizontais - Escolas por Diretoria */}\n          <div>\n            <EscolasPorDiretoriaChart data={data.escolasPorDiretoria} />\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;","import React from 'react';\n\nconst PageHeader = ({ \n  title, \n  description, \n  titleFontFamily = 'PapakiloLight, sans-serif',\n  titleSize = 'text-4xl md:text-5xl lg:text-6xl',\n  descriptionSize = 'text-sm md:text-base',\n  className = '',\n  children \n}) => {\n  return (\n    <div className={`bg-gradient-to-r from-green-800 to-green-700 text-white shadow-lg ${className}`}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex items-center space-x-4\">\n          {/* Título da Página - Lado esquerdo */}\n          <div className=\"flex-shrink-0\">\n            <h1 \n              className={`text-white ${titleSize} uppercase leading-none`} \n              style={{ fontFamily: titleFontFamily }}\n            >\n              {title}\n            </h1>\n          </div>\n          \n          {/* Barra verde separadora */}\n          <div className=\"w-px h-12 md:h-16 bg-white/30 flex-shrink-0\"></div>\n          \n          {/* Descrição - Lado direito */}\n          <div className=\"flex-1 min-w-0\">\n            <p className={`${descriptionSize} text-green-100 leading-relaxed`}>\n              {description}\n            </p>\n          </div>\n        </div>\n        \n        {/* Conteúdo adicional opcional */}\n        {children && (\n          <div className=\"mt-6\">\n            {children}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PageHeader;"],"names":["constructor","this","cache","Map","loadCSV","filename","has","get","response","fetch","concat","ok","Error","status","csvText","text","Promise","resolve","reject","Papa","header","skipEmptyLines","complete","results","errors","length","console","error","data","set","loadEscolasData","loadDocentesData","loadEquipamentosData","loadTurmasPorTipoData","getAlunosVsDocentesData","escolasData","docentesData","docentesPorEscola","forEach","docente","CIE_Escola","Set","add","Nome","map","escola","cie","CIE","toString","alunos","parseInt","Total_Alunos","docentes","size","nome","filter","item","getAlunosPorEscolaData","Tipo","sort","a","b","getDistribuicaoAlunosData","bins","Infinity","labels","distribuicao","label","i","Object","entries","_ref","name","value","getEquipamentosData","equipamentosData","equipamentosPorTipo","equipamento","Equipamento","Quantidade","_ref2","quantidade","getEscolasPorDiretoriaData","escolasPorDiretoria","Diretoria","trim","_ref3","diretoria","getTiposEnsinoData","turmasData","labelMapping","counts","tipo","_ref4","getDistribuicaoAlunosModalidadeData","normalizedData","_objectSpread","toLowerCase","split","word","includes","toUpperCase","charAt","slice","join","CustomTooltip","active","payload","_jsxs","className","children","_jsx","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","angle","textAnchor","interval","YAxis","position","Tooltip","content","Bar","fill","NATURAL_GREEN_COLORS","total","toFixed","reduce","sum","dataWithTotal","PieChart","Pie","cx","cy","labelLine","midAngle","innerRadius","outerRadius","percent","RADIAN","Math","PI","radius","x","cos","y","sin","dominantBaseline","fontSize","fontWeight","entry","index","Cell","Legend","MODALIDADE_COLORS","toLocaleString","percentual","CustomPieTooltip","dataWithPercentual","stroke","tick","verticalAlign","formatter","style","color","borderColor","backgroundColor","Dashboard","loading","setLoading","useState","setError","setData","alunosPorEscola","distribuicaoAlunos","distribuicaoAlunosModalidade","equipamentos","tiposEnsino","useEffect","async","all","csvDataService","catch","err","message","loadData","path","crumb","ChevronRight","onClick","window","location","href","PageHeader","title","description","_Fragment","target","rel","DistribuicaoAlunosModalidadeChart","TiposEnsinoChart","AlunosPorEscolaChart","DistribuicaoAlunosChart","EquipamentosChart","EscolasPorDiretoriaChart","titleFontFamily","titleSize","descriptionSize","fontFamily"],"sourceRoot":""}
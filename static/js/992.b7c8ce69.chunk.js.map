{"version":3,"file":"static/js/992.b7c8ce69.chunk.js","mappings":"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","sources":["utils/mapConfig.js","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","components/MapaEscolasIndigenas.js","utils/mobileUtils.js"],"sourcesContent":["// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5 // Zoom ajustado para 5 conforme solicitado\n  },\n  \n  // Configurações de clusterização\n  clusterDistance: 30,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  }\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222'\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222'\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000'\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857'\n}; ","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport ClusterSource from 'ol/source/Cluster';\nimport OSM from 'ol/source/OSM';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { Point, LineString } from 'ol/geom';\nimport { Feature } from 'ol';\nimport { Style, Circle, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { defaults as defaultControls } from 'ol/control';\nimport { defaults as defaultInteractions } from 'ol/interaction';\nimport { GeoJSON } from 'ol/format';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\nimport { MAP_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\n\n// Componentes GeoJSON\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\n// Constante para definir a proximidade entre marcadores (em graus) - mesma do Leaflet\nconst PROXIMITY_THRESHOLD = 0.00005;\n\n// Função para encontrar pares de marcadores próximos (adaptada do Leaflet)\nconst findNearbyPairs = (pontos) => {\n  const pairs = [];\n  const used = new Set();\n\n  for (let i = 0; i < pontos.length; i++) {\n    if (used.has(i)) continue;\n\n    for (let j = i + 1; j < pontos.length; j++) {\n      if (used.has(j)) continue;\n\n      const p1 = pontos[i];\n      const p2 = pontos[j];\n\n      const latDiff = Math.abs(parseFloat(p1.latitude) - parseFloat(p2.latitude));\n      const lngDiff = Math.abs(parseFloat(p1.longitude) - parseFloat(p2.longitude));\n\n      if (latDiff < PROXIMITY_THRESHOLD && lngDiff < PROXIMITY_THRESHOLD) {\n        pairs.push([i, j]);\n        used.add(i);\n        used.add(j);\n        break;\n      }\n    }\n  }\n\n  return pairs;\n};\n\n// Função para criar SVG base do marcador (gota invertida com bolinha branca)\nconst createMarkerSVG = (color, size = 24, options = {}) => {\n  const {\n    borderColor = null,\n    showShadow = true,\n    showGradient = true,\n    showGlow = false,\n    isNearbyPair = false\n  } = options;\n\n  const baseColor = color;\n  const borderColorFinal = borderColor || baseColor;\n  const center = size / 2;\n\n  // Calcular dimensões proporcionais baseadas no tamanho original de 24px\n  const scale = size / 24;\n  const circleRadius = 3 * scale;\n  const glowRadius = 2 * scale;\n\n  // Path da gota invertida (marcador) - usando o path original que funcionava bem\n  const markerPath = `M${center} ${2 * scale}C${center - 3.87 * scale} ${2 * scale} ${center - 7 * scale} ${5.13 * scale} ${center - 7 * scale} ${9 * scale}c0 ${5.25 * scale} ${7 * scale} ${13 * scale} ${7 * scale} ${13 * scale}s${7 * scale} -${7.75 * scale} ${7 * scale} -${13 * scale}c0 -${3.87 * scale} -${3.13 * scale} -${7 * scale} -${7 * scale} -${7 * scale}z`;\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        ${showShadow ? `\n        <filter id=\"shadow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feDropShadow dx=\"0\" dy=\"${2 * scale}\" stdDeviation=\"${3 * scale}\" flood-color=\"rgba(0,0,0,0.3)\"/>\n        </filter>\n        ` : ''}\n        ${showGradient ? `\n        <linearGradient id=\"gradient-${size}\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style=\"stop-color:${baseColor};stop-opacity:1\" />\n          <stop offset=\"100%\" style=\"stop-color:${borderColorFinal};stop-opacity:1\" />\n        </linearGradient>\n        ` : ''}\n        ${showGlow ? `\n        <filter id=\"glow-${size}\" x=\"-50%\" y=\"-50%\" width=\"200%\" height=\"200%\">\n          <feGaussianBlur stdDeviation=\"${1 * scale}\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n        ` : ''}\n      </defs>\n      \n      <!-- Brilho sutil de fundo -->\n      ${showGlow ? `\n      <circle cx=\"${center - 2 * scale}\" cy=\"${center - 2 * scale}\" r=\"${glowRadius}\" fill=\"white\" opacity=\"0.2\"/>\n      ` : ''}\n      \n      <!-- Marcador principal (gota invertida) -->\n      <path d=\"${markerPath}\" \n            fill=\"${showGradient ? `url(#gradient-${size})` : baseColor}\" \n            ${showShadow ? `filter=\"url(#shadow-${size})\"` : ''}\n            ${showGlow ? `filter=\"url(#glow-${size})\"` : ''}/>\n      \n      <!-- Círculo interno branco (bolinha) -->\n      <circle cx=\"${center}\" cy=\"${9 * scale}\" r=\"${circleRadius}\" fill=\"white\" opacity=\"0.9\"/>\n      \n      <!-- Brilho sutil no círculo -->\n      <circle cx=\"${center - 2 * scale}\" cy=\"${7 * scale}\" r=\"${circleRadius * 0.6}\" fill=\"white\" opacity=\"0.4\"/>\n      \n      <!-- Indicador de par próximo (se aplicável) -->\n      ${isNearbyPair ? `\n      <circle cx=\"${size - 4 * scale}\" cy=\"${4 * scale}\" r=\"${3 * scale}\" fill=\"#FF6B6B\" opacity=\"0.8\"/>\n      <text x=\"${size - 4 * scale}\" y=\"${6 * scale}\" text-anchor=\"middle\" font-size=\"${8 * scale}\" fill=\"white\" font-weight=\"bold\">P</text>\n      ` : ''}\n    </svg>\n  `;\n};\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center, // Usar configuração padrão\n  zoom = MAP_CONFIG.zoom, // Usar configuração padrão\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  // Log para debug do zoom recebido\n  console.log('OpenLayersMap - Debug zoom recebido:', {\n    center,\n    zoom,\n    defaultCenter: MAP_CONFIG.center,\n    defaultZoom: MAP_CONFIG.zoom,\n    mobileZoom: MAP_CONFIG.mobile.zoom\n  });\n\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const vectorSource = useRef(null);\n  const clusterSource = useRef(null);\n  const vectorLayer = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Referências para as camadas GeoJSON\n  const terrasIndigenasLayerRef = useRef(null);\n  const estadoSPLayerRef = useRef(null);\n\n  // Tooltip element para mobile (mantido para compatibilidade)\n  const [tooltipElement, setTooltipElement] = useState(null);\n\n  // Criar camadas base\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n        attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n        maxZoom: 19,\n        wrapX: false,\n        tilePixelRatio: 1,\n        tileSize: 256\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  // Função para criar estilo dos marcadores individuais\n  const createMarkerStyle = useCallback((feature) => {\n    try {\n      const schoolData = feature.get('schoolData');\n      if (!schoolData) return null;\n\n      const baseColor = '#3B82F6'; // Azul para satélite, violeta para rua\n      const borderColor = '#1E40AF';\n\n      // Verificar se é parte de um par próximo\n      const isNearbyPair = feature.get('isNearbyPair');\n      const pairIndex = feature.get('pairIndex');\n\n      // Usar a função createMarkerSVG para criar o marcador (tamanho reduzido)\n      const svg = createMarkerSVG(baseColor, 24, {\n        borderColor: borderColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: false,\n        isNearbyPair: isNearbyPair\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Criar estilo base com ícone (escala reduzida)\n      const style = new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: isNearbyPair ? 1.1 : 1.0, // Marcadores de pares próximos são ligeiramente maiores\n          anchor: [0.5, 1],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        })\n      });\n\n      // Adicionar texto apenas se showNomesEscolas for true\n      if (showNomesEscolas) {\n        style.setText(new Text({\n          text: schoolData.titulo || 'Escola',\n          font: 'bold 10px Arial',\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: isNearbyPair ? -35 : -30, // Ajustar posição para marcadores menores\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }));\n      }\n\n      return style;\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do marcador:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [showNomesEscolas]);\n\n  // Função para criar estilo dos clusters\n  const createClusterStyle = useCallback((feature) => {\n    try {\n      const features = feature.get('features');\n      if (!features || features.length === 0) {\n        return null; // Return null for invalid features\n      }\n      \n      const size = features.length;\n\n      // Se for apenas um marcador, retorna estilo individual\n      if (size === 1) {\n        const singleFeature = features[0];\n        if (!singleFeature) return null;\n        return createMarkerStyle(singleFeature);\n      }\n\n      // Determinar cor e tamanho base baseado na quantidade de escolas (tamanhos reduzidos)\n      let baseColor = '#3B82F6';\n      let baseSize = 32; // Tamanho base reduzido para clusters\n      \n      if (size > 100) {\n        baseColor = '#1E40AF';\n        baseSize = 40;\n      } else if (size > 50) {\n        baseColor = '#2563EB';\n        baseSize = 36;\n      } else if (size > 20) {\n        baseColor = '#3B82F6';\n        baseSize = 34;\n      } else if (size > 10) {\n        baseColor = '#60A5FA';\n        baseSize = 33;\n      }\n\n      // Calcular escala proporcional (mínimo 1.0x, máximo 1.8x)\n      const scale = Math.min(1.0 + (size * 0.015), 1.8);\n      const finalSize = Math.round(baseSize * scale);\n\n      // Usar a função createMarkerSVG para criar o cluster\n      const svg = createMarkerSVG(baseColor, finalSize, {\n        borderColor: baseColor,\n        showShadow: true,\n        showGradient: true,\n        showGlow: size > 20, // Adicionar brilho para clusters grandes\n        isNearbyPair: false // Clusters não têm indicador de par próximo\n      });\n\n      // Criar URL de dados para o SVG\n      const svgUrl = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svg);\n\n      // Determinar tamanho da fonte baseado no tamanho do cluster (reduzido)\n      let fontSize = '12px';\n      let fontWeight = 'bold';\n      \n      if (size > 100) {\n        fontSize = '14px';\n      } else if (size > 50) {\n        fontSize = '13px';\n      } else if (size > 20) {\n        fontSize = '12px';\n      }\n\n      return new Style({\n        image: new Icon({\n          src: svgUrl,\n          scale: 1,\n          anchor: [0.5, 0.5],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'fraction'\n        }),\n        text: new Text({\n          text: size.toString(),\n          font: `${fontWeight} ${fontSize} Arial`,\n          fill: new Fill({\n            color: '#FFFFFF'\n          }),\n          stroke: new Stroke({\n            color: '#000000',\n            width: 2\n          }),\n          offsetY: finalSize * 0.6 // Posicionar texto abaixo do marcador\n        })\n      });\n    } catch (error) {\n      console.error('OpenLayersMap: Erro ao criar estilo do cluster:', error);\n      return null; // Return null on error to prevent rendering issues\n    }\n  }, [createMarkerStyle]);\n\n  // Função para criar tooltip HTML\n  const createTooltipHTML = useCallback((schoolData) => {\n    return schoolData.titulo || 'Escola Indígena';\n  }, []);\n\n  // Inicializar mapa\n  useEffect(() => {\n    if (map.current) return;\n\n    // Verificar se é mobile e ajustar configurações\n    const isMobileDevice = isMobile();\n    const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    console.log('OpenLayersMap - Inicializando mapa:', {\n      isMobile: isMobileDevice,\n      initialCenter,\n      initialZoom,\n      originalCenter: center,\n      originalZoom: zoom\n    });\n\n    // Criar fonte vetorial para marcadores\n    vectorSource.current = new VectorSource();\n    \n    // Criar fonte de cluster\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 5, // Distância maior quando nomes estão ativados\n      source: vectorSource.current,\n      // Função customizada para determinar se deve fazer cluster\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n    \n    // Criar camada vetorial para marcadores com clustering\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [\n        baseLayer.current,\n        vectorLayer.current\n      ],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: 18,\n        minZoom: 4\n      }),\n      controls: defaultControls(),\n      interactions: defaultInteractions()\n    });\n\n    // Event listeners\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    // Event listener para mudanças de zoom - atualizar clusterização\n    map.current.on('moveend', () => {\n      // Atualizar estilos dos clusters quando o zoom mudar\n      if (vectorLayer.current) {\n        vectorLayer.current.changed();\n      }\n    });\n\n    // Event listener para cliques nos marcadores e clusters\n    map.current.on('click', (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              console.log('OpenLayersMap: Cluster com 1 marcador clicado:', schoolData.titulo);\n              \n              // Comportamento igual para mobile e desktop - abrir painel diretamente\n              console.log('OpenLayersMap: Abrindo painel para cluster com 1 marcador');\n              onPainelOpen?.(schoolData);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, fazer zoom inteligente\n            console.log(`OpenLayersMap: Cluster clicado com ${features.length} escolas`);\n            \n            // Calcular a extensão específica do cluster clicado\n            const clusterExtent = feature.getGeometry().getExtent();\n            \n            // Obter o zoom atual\n            const currentZoom = map.current.getView().getZoom();\n            \n            // Calcular zoom ideal baseado na quantidade de escolas no cluster\n            let targetZoom = 12; // Zoom padrão para clusters\n            if (features.length > 20) {\n              targetZoom = 10; // Zoom menor para clusters muito grandes\n            } else if (features.length > 10) {\n              targetZoom = 11; // Zoom médio para clusters grandes\n            } else if (features.length > 5) {\n              targetZoom = 12; // Zoom padrão para clusters médios\n            } else {\n              targetZoom = 13; // Zoom maior para clusters pequenos\n            }\n            \n            // Garantir que o zoom não seja menor que o atual (evitar zoom out)\n            targetZoom = Math.max(targetZoom, currentZoom + 1);\n            \n            console.log(`OpenLayersMap: Fazendo zoom de ${currentZoom} para ${targetZoom}`);\n            \n            // Fazer zoom suave para a extensão do cluster\n            map.current.getView().fit(clusterExtent, {\n              duration: 800, // Animação mais suave\n              padding: [80, 80, 80, 80], // Padding maior para melhor visualização\n              maxZoom: targetZoom, // Limitar o zoom máximo\n              callback: () => {\n                console.log(`OpenLayersMap: Zoom concluído para cluster com ${features.length} escolas`);\n              }\n            });\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          if (schoolData) {\n            console.log('OpenLayersMap: Marcador individual clicado:', schoolData.titulo);\n            \n            // Comportamento igual para mobile e desktop - abrir painel diretamente\n            console.log('OpenLayersMap: Abrindo painel para marcador individual');\n            onPainelOpen?.(schoolData);\n          }\n        }\n      }\n    });\n\n    // Event listener para hover nos marcadores (tooltips)\n    let tooltipElement = null;\n    let currentFeature = null;\n\n    map.current.on('pointermove', (event) => {\n      if (tooltipElement) {\n        tooltipElement.remove();\n        tooltipElement = null;\n      }\n\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      \n      if (feature) {\n        // Verificar se é um cluster\n        if (feature.get('features')) {\n          const features = feature.get('features');\n          if (features.length === 1) {\n            // Cluster com apenas um marcador, mostrar tooltip\n            const schoolData = features[0].get('schoolData');\n            if (schoolData) {\n              tooltipElement = createTooltipElement(event, schoolData);\n            }\n          } else {\n            // Cluster com múltiplos marcadores, mostrar tooltip do cluster\n            tooltipElement = createClusterTooltipElement(event, features.length);\n          }\n        } else {\n          // Marcador individual\n          const schoolData = feature.get('schoolData');\n          if (schoolData) {\n            tooltipElement = createTooltipElement(event, schoolData);\n          }\n        }\n      }\n    });\n\n    // Função para criar tooltip de marcador individual\n    const createTooltipElement = (event, schoolData) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = createTooltipHTML(schoolData);\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o marcador\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do marcador\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Função para criar tooltip de cluster\n    const createClusterTooltipElement = (event, count) => {\n      const element = document.createElement('div');\n      element.className = 'ol-tooltip';\n      element.textContent = `${count} escolas indígenas`;\n      element.style.position = 'absolute';\n      element.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';\n      element.style.color = '#374151';\n      element.style.padding = '8px 12px';\n      element.style.borderRadius = '8px';\n      element.style.fontSize = '13px';\n      element.style.fontFamily = 'Arial, sans-serif';\n      element.style.fontWeight = '500';\n      element.style.maxWidth = '200px';\n      element.style.whiteSpace = 'nowrap';\n      element.style.overflow = 'hidden';\n      element.style.textOverflow = 'ellipsis';\n      element.style.zIndex = '1000';\n      element.style.pointerEvents = 'none';\n      element.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.15)';\n      element.style.border = '1px solid rgba(0, 0, 0, 0.1)';\n      element.style.backdropFilter = 'blur(4px)';\n      \n      const coordinate = event.coordinate;\n      const pixel = map.current.getPixelFromCoordinate(coordinate);\n      \n      // Centralizar o tooltip horizontalmente com o cluster\n      const elementWidth = 200; // Largura estimada do tooltip\n      const offsetX = -elementWidth / 2; // Centralizar horizontalmente\n      const offsetY = -40; // Posicionar acima do cluster\n      \n      element.style.left = (pixel[0] + offsetX) + 'px';\n      element.style.top = (pixel[1] + offsetY) + 'px';\n      \n      mapContainer.current.appendChild(element);\n      return element;\n    };\n\n    // Cleanup\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [center, zoom, createBaseLayers, createClusterStyle, createTooltipHTML, onPainelOpen]);\n\n  // Atualizar configurações do mapa quando props mudarem\n  useEffect(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      console.log('OpenLayersMap - Atualizando configurações do mapa:', {\n        isMobile: isMobileDevice,\n        newCenter,\n        newZoom,\n        currentCenter,\n        currentZoom\n      });\n\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom, showNomesEscolas]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    if (!vectorSource.current || !dataPoints || !showMarcadores) return;\n\n    // Limpar marcadores existentes\n    vectorSource.current.clear();\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    // Encontrar pares de marcadores próximos (lógica do Leaflet)\n    const nearbyPairs = findNearbyPairs(pontosValidos);\n    const usedIndices = new Set(nearbyPairs.flat());\n\n    console.log(`OpenLayersMap: Processando ${pontosValidos.length} marcadores válidos`);\n    console.log(`OpenLayersMap: Encontrados ${nearbyPairs.length} pares próximos`);\n\n    // Adicionar novos marcadores\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        feature.set('schoolData', point);\n        \n        // Marcar se este marcador faz parte de um par próximo\n        const pairIndex = nearbyPairs.findIndex(pair => pair.includes(index));\n        if (pairIndex !== -1) {\n          feature.set('isNearbyPair', true);\n          feature.set('pairIndex', pairIndex);\n        }\n        \n        vectorSource.current.addFeature(feature);\n      }\n    });\n\n    console.log(`OpenLayersMap: Adicionados ${pontosValidos.length} marcadores com clustering inteligente`);\n  }, [dataPoints, showMarcadores]);\n\n  // Atualizar estilo dos marcadores quando o tipo de mapa mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      vectorLayer.current.setStyle(createClusterStyle);\n    }\n  }, [createClusterStyle]);\n\n  // Atualizar estilo dos marcadores quando showNomesEscolas mudar\n  useEffect(() => {\n    if (vectorLayer.current) {\n      console.log('OpenLayersMap: Atualizando estilo dos marcadores - showNomesEscolas:', showNomesEscolas);\n      vectorLayer.current.setStyle(createClusterStyle);\n      vectorLayer.current.changed(); // Força a atualização da renderização\n    }\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Recriar ClusterSource quando showNomesEscolas mudar\n  useEffect(() => {\n    if (!map.current || !vectorSource.current) return;\n\n    console.log('OpenLayersMap: Recriando ClusterSource - showNomesEscolas:', showNomesEscolas);\n    \n    // Remover camada antiga\n    if (vectorLayer.current) {\n      map.current.removeLayer(vectorLayer.current);\n    }\n\n    // Criar novo ClusterSource com distância apropriada\n    clusterSource.current = new ClusterSource({\n      distance: showNomesEscolas ? 15 : 10,\n      source: vectorSource.current,\n      geometryFunction: (feature) => {\n        const geometry = feature.getGeometry();\n        if (geometry.getType() === 'Point') {\n          return geometry;\n        }\n        return null;\n      }\n    });\n\n    // Criar nova camada\n    vectorLayer.current = new VectorLayer({\n      source: clusterSource.current,\n      style: createClusterStyle,\n      zIndex: 15\n    });\n\n    // Adicionar nova camada ao mapa\n    map.current.addLayer(vectorLayer.current);\n\n  }, [showNomesEscolas, createClusterStyle]);\n\n  // Gerenciar camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    console.log('OpenLayersMap: Gerenciando camadas GeoJSON:', {\n      showTerrasIndigenas,\n      showEstadoSP,\n      terrasIndigenasData: !!terrasIndigenasData,\n      estadoSPData: !!estadoSPData,\n      terrasFeatures: terrasIndigenasData?.features?.length || 0,\n      estadoFeatures: estadoSPData?.features?.length || 0,\n      mapLayers: map.current.getLayers().getLength()\n    });\n\n    // Remover camadas existentes primeiro\n    if (terrasIndigenasLayerRef.current) {\n      map.current.removeLayer(terrasIndigenasLayerRef.current);\n      terrasIndigenasLayerRef.current = null;\n    }\n    if (estadoSPLayerRef.current) {\n      map.current.removeLayer(estadoSPLayerRef.current);\n      estadoSPLayerRef.current = null;\n    }\n\n    // Adicionar camada Terras Indígenas\n    if (showTerrasIndigenas && terrasIndigenasData) {\n      console.log('OpenLayersMap: Adicionando camada Terras Indígenas');\n      console.log('OpenLayersMap: Dados Terras Indígenas:', {\n        type: terrasIndigenasData.type,\n        features: terrasIndigenasData.features?.length || 0,\n        crs: terrasIndigenasData.crs,\n        firstFeature: terrasIndigenasData.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades',\n          geometry: terrasIndigenasData.features[0].geometry ? {\n            type: terrasIndigenasData.features[0].geometry.type,\n            coordinates: terrasIndigenasData.features[0].geometry.coordinates ? \n              `${terrasIndigenasData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!terrasIndigenasData.features || terrasIndigenasData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Terras Indígenas não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = terrasIndigenasData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada das Terras Indígenas:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(terrasIndigenasData);\n        console.log('OpenLayersMap: Features lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const terrasIndigenasLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: (feature) => {\n            const properties = feature.getProperties();\n            const isRegularizada = properties.fase_ti === 'Regularizada';\n            \n            return new Style({\n              fill: new Fill({\n                color: isRegularizada ? 'rgba(220, 20, 60, 0.3)' : 'rgba(139, 0, 0, 0.25)'\n              }),\n              stroke: new Stroke({\n                color: '#B22222',\n                width: 2,\n                lineDash: [3, 3]\n              })\n            });\n          },\n          zIndex: 10\n        });\n\n        // Adicionar interatividade\n        terrasIndigenasLayer.getSource().getFeatures().forEach(feature => {\n          const properties = feature.getProperties();\n          feature.set('terraIndigenaInfo', {\n            titulo: properties.terrai_nom,\n            tipo: 'terra_indigena',\n            etnia: properties.etnia_nome,\n            municipio: properties.municipio_,\n            uf: properties.uf_sigla,\n            superficie: properties.superficie,\n            fase: properties.fase_ti,\n            modalidade: properties.modalidade,\n            reestudo: properties.reestudo_t,\n            cr: properties.cr,\n            faixa_fron: properties.faixa_fron,\n            undadm_nom: properties.undadm_nom,\n            undadm_sig: properties.undadm_sig,\n            dominio_un: properties.dominio_un,\n            data_atual: properties.data_atual,\n            terrai_cod: properties.terrai_cod,\n            undadm_cod: properties.undadm_cod\n          });\n        });\n\n        map.current.addLayer(terrasIndigenasLayer);\n        terrasIndigenasLayerRef.current = terrasIndigenasLayer;\n        console.log('OpenLayersMap: Camada Terras Indígenas adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Terras Indígenas:', error);\n      }\n    }\n\n    // Adicionar camada Estado SP\n    if (showEstadoSP && estadoSPData) {\n      console.log('OpenLayersMap: Adicionando camada Estado SP');\n      console.log('OpenLayersMap: Dados Estado SP:', {\n        type: estadoSPData.type,\n        features: estadoSPData.features?.length || 0,\n        crs: estadoSPData.crs,\n        firstFeature: estadoSPData.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades',\n          geometry: estadoSPData.features[0].geometry ? {\n            type: estadoSPData.features[0].geometry.type,\n            coordinates: estadoSPData.features[0].geometry.coordinates ? \n              `${estadoSPData.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n          } : 'Sem geometria'\n        } : 'Nenhum feature'\n      });\n\n      // Verificar se os dados têm a estrutura correta\n      if (!estadoSPData.features || estadoSPData.features.length === 0) {\n        console.error('OpenLayersMap: Dados Estado SP não têm features válidas');\n        return;\n      }\n\n      // Teste: verificar se as coordenadas estão no formato correto\n      const firstFeature = estadoSPData.features[0];\n      if (firstFeature.geometry && firstFeature.geometry.coordinates) {\n        const coords = firstFeature.geometry.coordinates[0][0]; // Primeira coordenada\n        console.log('OpenLayersMap: Primeira coordenada do Estado SP:', coords);\n        console.log('OpenLayersMap: Tipo das coordenadas Estado SP:', typeof coords[0], typeof coords[1]);\n      }\n\n      try {\n        const geoJSONFormat = new GeoJSON({\n          dataProjection: 'EPSG:4326',\n          featureProjection: 'EPSG:3857'\n        });\n        const features = geoJSONFormat.readFeatures(estadoSPData);\n        console.log('OpenLayersMap: Features Estado SP lidas do GeoJSON:', features.length);\n        \n        if (features.length > 0) {\n          const firstFeature = features[0];\n          const geometry = firstFeature.getGeometry();\n          console.log('OpenLayersMap: Primeira feature Estado SP processada:', {\n            geometry: geometry ? geometry.getType() : 'Sem geometria',\n            extent: geometry ? geometry.getExtent() : 'Sem extent',\n            properties: firstFeature.getProperties()\n          });\n        }\n\n        const estadoSPLayer = new VectorLayer({\n          source: new VectorSource({\n            features: features\n          }),\n          style: new Style({\n            fill: new Fill({\n              color: 'rgba(0, 0, 0, 0.3)'\n            }),\n            stroke: new Stroke({\n              color: '#000000',\n              width: 2\n            })\n          }),\n          zIndex: 5,\n          interactive: false\n        });\n\n        map.current.addLayer(estadoSPLayer);\n        estadoSPLayerRef.current = estadoSPLayer;\n        console.log('OpenLayersMap: Camada Estado SP adicionada com sucesso. Total de camadas:', map.current.getLayers().getLength());\n      } catch (error) {\n        console.error('OpenLayersMap: Erro ao processar Estado SP:', error);\n      }\n    }\n\n    console.log('OpenLayersMap: Finalização - Total de camadas no mapa:', map.current.getLayers().getLength());\n  }, [showTerrasIndigenas, showEstadoSP, terrasIndigenasData, estadoSPData]);\n\n  // Adicionar event listeners para camadas GeoJSON\n  useEffect(() => {\n    if (!map.current) return;\n\n    const handleClick = (event) => {\n      const feature = map.current.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n      if (feature) {\n        const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n        if (terraIndigenaInfo && onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n      }\n    };\n\n    map.current.on('click', handleClick);\n\n    return () => {\n      if (map.current) {\n        map.current.un('click', handleClick);\n      }\n    };\n  }, [onPainelOpen]);\n\n  return (\n    <div className={className} ref={mapContainer}>\n      {/* Informações do mapa */}\n      <div className=\"absolute bottom-20 sm:bottom-4 left-4 z-10 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-xs text-gray-600\">\n          Lat: {mapInfo.lat} | Lng: {mapInfo.lng}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Zoom: {mapInfo.zoom}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-white\">\n      <h3 className=\"text-sm font-medium text-gray-800\">Camadas do Mapa</h3>\n      <div className=\"flex items-center gap-2\">\n        <button\n          onClick={onMinimize}\n          className=\"text-gray-500 hover:text-gray-700 transition-colors p-1\"\n          aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n          type=\"button\"\n        >\n          {isMinimized ? \"▾\" : \"▴\"}\n        </button>\n      </div>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`w-full flex items-center gap-2 px-3 py-2 rounded-md transition-colors ${\n        checked ? 'bg-gray-50' : 'hover:bg-gray-50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n    >\n      {subItems ? (\n        // Para Terras Indígenas com subcategorias\n        <div className=\"flex flex-col gap-1\">\n          {subItems.map((item, index) => (\n            <div key={index} className=\"flex items-center gap-1\">\n              <div \n                className=\"w-2 h-2 rounded-full\" \n                style={{ backgroundColor: item.color }}\n              />\n              <span className=\"text-xs text-gray-600\">{item.label}</span>\n            </div>\n          ))}\n        </div>\n      ) : (\n        // Para outras camadas\n        <div \n          className=\"w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n      \n      <span className=\"text-sm text-gray-800\">{label}</span>\n      \n      {total !== undefined && (\n        <span className=\"text-xs text-gray-500 ml-1\">({total})</span>\n      )}\n      \n      {loading && <span className=\"text-blue-500 ml-1\">(carregando...)</span>}\n      {error && <span className=\"text-red-500 ml-1\">(erro)</span>}\n      \n      {subItems ? (\n        // Indicador para Terras Indígenas\n        <div className=\"ml-auto w-2 h-2 rounded-full bg-gray-300\" />\n      ) : (\n        // Indicador para outras camadas\n        <div \n          className=\"ml-auto w-2 h-2 rounded-full\" \n          style={{ backgroundColor: color }}\n        />\n      )}\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white border-t border-gray-100 shadow-lg\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-2 flex flex-col gap-1 max-h-60 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-64 bg-white border border-gray-200 rounded-lg shadow-lg z-20\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-2 flex flex-col gap-1 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].latitude,\n      longitude: dataPoints[0].longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n      \n      {/* Informações adicionais */}\n      <div className=\"absolute top-20 left-4 z-30 bg-white bg-opacity-95 rounded-lg shadow-lg p-3\">\n        <div className=\"text-sm font-semibold text-gray-800\">\n          Escolas Indígenas: {totalEscolas}\n        </div>\n        <div className=\"text-xs text-gray-600\">\n          Mapa otimizado sem gaps\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;","// Utility functions for mobile detection and interaction\n\nexport const isMobile = () => {\n  return window.innerWidth <= 768;\n};\n\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n// Mobile interaction state management\nexport class MobileInteractionManager {\n  constructor() {\n    this.lastClickedFeature = null;\n    this.clickTimeout = null;\n    this.clickDelay = 300; // Time in ms to wait for second click\n  }\n\n  handleClick(feature, onFirstClick, onSecondClick, isMobileDevice = false) {\n    if (!isMobileDevice) {\n      // Desktop behavior - direct action\n      onSecondClick(feature);\n      return;\n    }\n\n    // Mobile behavior - two-click pattern\n    if (this.lastClickedFeature === feature) {\n      // Second click on same feature\n      this.clearTimeout();\n      this.lastClickedFeature = null;\n      onSecondClick(feature);\n    } else {\n      // First click or click on different feature\n      if (this.lastClickedFeature) {\n        // Clear previous first click\n        this.clearTimeout();\n      }\n      \n      this.lastClickedFeature = feature;\n      onFirstClick(feature);\n      \n      // Set timeout to clear first click\n      this.clickTimeout = setTimeout(() => {\n        this.lastClickedFeature = null;\n      }, this.clickDelay);\n    }\n  }\n\n  clearTimeout() {\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n  }\n\n  reset() {\n    this.clearTimeout();\n    this.lastClickedFeature = null;\n  }\n} "],"names":["MAP_CONFIG","center","zoom","maxZoom","minZoom","mobile","clusterDistance","proximityThreshold","disableClusteringAtZoom","tooltipOffset","proj4","defs","register","PROXIMITY_THRESHOLD","createMarkerSVG","color","size","arguments","length","undefined","options","borderColor","showShadow","showGradient","showGlow","isNearbyPair","baseColor","borderColorFinal","scale","circleRadius","glowRadius","markerPath","concat","_ref","dataPoints","onPainelOpen","className","terrasIndigenasData","estadoSPData","showTerrasIndigenas","showEstadoSP","showMarcadores","showNomesEscolas","console","log","defaultCenter","defaultZoom","mobileZoom","mapContainer","useRef","map","vectorSource","clusterSource","vectorLayer","baseLayer","mapInfo","setMapInfo","useState","lng","lat","terrasIndigenasLayerRef","estadoSPLayerRef","tooltipElement","setTooltipElement","createBaseLayers","useCallback","satelliteLayer","TileLayer","source","XYZ","url","attributions","wrapX","tilePixelRatio","tileSize","preload","useInterimTilesOnError","createMarkerStyle","feature","schoolData","get","svg","svgUrl","encodeURIComponent","style","Style","image","Icon","src","anchor","anchorXUnits","anchorYUnits","setText","Text","text","titulo","font","fill","Fill","stroke","Stroke","width","offsetY","textAlign","textBaseline","error","createClusterStyle","features","singleFeature","baseSize","Math","min","finalSize","round","fontSize","fontWeight","toString","createTooltipHTML","useEffect","current","isMobileDevice","isMobile","initialCenter","initialZoom","originalCenter","originalZoom","VectorSource","ClusterSource","distance","geometryFunction","geometry","getGeometry","getType","VectorLayer","zIndex","Map","target","layers","view","View","fromLonLat","controls","defaultControls","interactions","defaultInteractions","on","getView","toLonLat","getCenter","newView","toFixed","getZoom","changed","event","forEachFeatureAtPixel","pixel","clusterExtent","getExtent","currentZoom","targetZoom","max","fit","duration","padding","callback","remove","createTooltipElement","createClusterTooltipElement","element","document","createElement","textContent","position","backgroundColor","borderRadius","fontFamily","maxWidth","whiteSpace","overflow","textOverflow","pointerEvents","boxShadow","border","backdropFilter","coordinate","getPixelFromCoordinate","left","top","appendChild","count","setTarget","newCenter","newZoom","currentCenter","setCenter","setZoom","clear","pontosValidos","filter","point","latitude","longitude","parseFloat","isNaN","nearbyPairs","pontos","pairs","used","Set","i","has","j","p1","p2","latDiff","abs","lngDiff","push","add","findNearbyPairs","flat","forEach","index","Feature","Point","set","pairIndex","findIndex","pair","includes","addFeature","setStyle","removeLayer","addLayer","_terrasIndigenasData$","_estadoSPData$feature","terrasFeatures","estadoFeatures","mapLayers","getLayers","getLength","_terrasIndigenasData$2","_terrasIndigenasData$3","type","crs","firstFeature","properties","Object","keys","coordinates","coords","GeoJSON","dataProjection","featureProjection","readFeatures","extent","getProperties","terrasIndigenasLayer","isRegularizada","fase_ti","lineDash","getSource","getFeatures","terrai_nom","tipo","etnia","etnia_nome","municipio","municipio_","uf","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","_estadoSPData$feature2","_estadoSPData$feature3","estadoSPLayer","interactive","handleClick","terraIndigenaInfo","un","_jsx","ref","children","_jsxs","cache","useGeoJSONCache","key","data","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","process","response","fetch","ok","Error","status","geoJSON","json","err","fetchGeoJSON","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","window","innerWidth","addEventListener","removeEventListener","handleMinimize","prev","terrasIndigenas","hasData","estadoSP","CabecalhoMenu","_ref2","onMinimize","onClick","BotaoCamada","_ref3","id","label","checked","onChange","disabled","total","subItems","item","mapCenter","mapZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","quantidade","exemplo","refreshKey","useRefresh","panel","useMemo","URLSearchParams","location","search","initialPanel","find","criarSlug","painelInfo","setPainelInfo","escolasVisiveis","pontuacao","totalEscolas","group","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","groupEnd","abrirPainel","info","refreshPainel","fecharPainel","MapSelector","_Fragment","PainelInformacoes","closePainel","MobileInteractionManager","constructor","this","lastClickedFeature","clickTimeout","clickDelay","onFirstClick","onSecondClick","clearTimeout","setTimeout","reset"],"sourceRoot":""}
{"version":3,"file":"static/js/815.97ee8e9b.chunk.js","mappings":"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","sources":["utils/openlayers/markerStyles.js","utils/mobileUtils.js","utils/openlayers/interactions.js","utils/mapConfig.js","components/OpenLayers/OpenLayersMarkers.js","utils/openlayers/layerStyles.js","components/OpenLayers/OpenLayersTerrasIndigenas.js","components/OpenLayers/OpenLayersEstadoSP.js","components/OpenLayers/OpenLayersLayers.js","components/map/MapWrapper.jsx","components/OpenLayersMap.js","hooks/useGeoJSONCache.js","components/MapSelector.js","utils/slug.js","components/hooks/useDocumentosEscola.js","components/PainelInformacoes/components/InfoSection.js","components/PainelInformacoes/components/EscolaInfo/BasicInfo.js","components/PainelInformacoes/components/ImagensdasEscolas.js","components/PainelInformacoes/components/EscolaInfo/HistoriaEscola.js","components/PainelInformacoes/components/BooleanValue.js","components/PainelInformacoes/components/EscolaInfo/Modalidades.js","components/PainelInformacoes/components/EscolaInfo/Infraestrutura.js","components/PainelInformacoes/components/EscolaInfo/GestaoProfessores.js","components/PainelInformacoes/components/EscolaInfo/ProjetosParcerias.js","components/PainelInformacoes/components/ImagemHistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/HistoriadoProfessor.js","components/PainelInformacoes/components/EscolaInfo/index.js","components/PainelInformacoes/icons/HandFistIcon.js","components/PainelInformacoes/components/InfoItem.js","components/PainelInformacoes/TerraIndigenaInfo.js","components/ShareButton.js","components/PainelInformacoes/ShareSection.js","components/PainelDescricao.js","components/PainelInformacoes/IntroPanel.js","utils/textFormatting.js","components/PainelHeader.js","components/hooks/usePainelVisibility.js","components/PainelInformacoes/components/PainelContainer.js","components/hooks/usePainelDimensions.js","components/PainelInformacoes/components/DocumentViewer.js","components/PainelInformacoes/components/VideoPlayer.js","components/PainelInformacoes/index.js","components/hooks/useShare.js","components/hooks/useClickOutside.js","components/hooks/useDynamicURL.js","components/MapaEscolasIndigenas.js"],"sourcesContent":["import { Style, Fill, Stroke, Text, Icon } from 'ol/style';\nimport { Point } from 'ol/geom';\nimport { Feature } from 'ol';\n\n// Caminho para o marcador SVG\nconst MARKER_SVG_PATH = `${process.env.PUBLIC_URL || ''}/map-marker.svg`;\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n/**\n * Cria estilo para marcador individual\n * @param {Object} feature - Feature do OpenLayers\n * @param {boolean} showNames - Se deve mostrar nomes das escolas\n * @returns {Style} Estilo do marcador\n */\nexport const createMarkerStyle = (feature, showNames = false) => {\n  const markerData = feature.get('markerData') || feature.get('schoolData'); // Suporta ambos\n  const isNearbyPair = feature.get('isNearbyPair');\n  \n  if (!markerData) return null;\n\n  const baseColor = isNearbyPair ? MARKER_COLORS.nearbyPair : MARKER_COLORS.individual;\n  const borderColor = isNearbyPair ? '#DC2626' : MARKER_COLORS.individualBorder;\n\n  // Estilo base do marcador (ícone SVG)\n  const markerStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: isNearbyPair ? 1.2 : 1.0,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Se deve mostrar nomes, adicionar texto\n  if (showNames && markerData.titulo) {\n    const textStyle = new Style({\n      text: new Text({\n        text: markerData.titulo,\n        font: '12px Arial',\n        fill: new Fill({\n          color: '#1F2937'\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center'\n      }),\n      geometry: feature.getGeometry()\n    });\n    \n    return [markerStyle, textStyle];\n  }\n\n  return markerStyle;\n};\n\n/**\n * Cria estilo para cluster de marcadores\n * @param {Object} feature - Feature do cluster\n * @param {Function} markerStyleFunction - Função para estilizar marcadores individuais\n * @returns {Style} Estilo do cluster\n */\nexport const createClusterStyle = (feature, markerStyleFunction) => {\n  const features = feature.get('features');\n  \n  if (!features || features.length === 0) {\n    return markerStyleFunction(feature);\n  }\n\n  // Se for apenas um marcador, usar estilo de marcador individual\n  if (features.length === 1) {\n    return markerStyleFunction(features[0]);\n  }\n\n  // Determinar tamanho e cor do cluster baseado na quantidade\n  let clusterSize, clusterColor;\n  const count = features.length;\n\n  if (count <= CLUSTER_SIZES.small.max) {\n    clusterSize = CLUSTER_SIZES.small.size;\n    clusterColor = MARKER_COLORS.cluster.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    clusterSize = CLUSTER_SIZES.medium.size;\n    clusterColor = MARKER_COLORS.cluster.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    clusterSize = CLUSTER_SIZES.large.size;\n    clusterColor = MARKER_COLORS.cluster.large;\n  } else if (count <= CLUSTER_SIZES.xlarge.max) {\n    clusterSize = CLUSTER_SIZES.xlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  } else {\n    clusterSize = CLUSTER_SIZES.xxlarge.size;\n    clusterColor = MARKER_COLORS.cluster.xlarge;\n  }\n\n  // Determinar fonte baseada no tamanho\n  let font;\n  if (count <= CLUSTER_SIZES.small.max) {\n    font = CLUSTER_FONTS.small;\n  } else if (count <= CLUSTER_SIZES.medium.max) {\n    font = CLUSTER_FONTS.medium;\n  } else if (count <= CLUSTER_SIZES.large.max) {\n    font = CLUSTER_FONTS.large;\n  } else {\n    font = CLUSTER_FONTS.xlarge;\n  }\n\n  return new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: Math.max(0.8, clusterSize / 80),\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    text: new Text({\n      text: count.toString(),\n      font: font,\n      fill: new Fill({\n        color: '#FFFFFF'\n      }),\n      stroke: new Stroke({\n        color: '#1F2937',\n        width: 1\n      })\n    })\n  });\n};\n\n/**\n * Cria estilo para marcador com indicador de par próximo\n * @param {Object} feature - Feature do marcador\n * @returns {Style} Estilo do marcador com indicador\n */\nexport const createNearbyPairStyle = (feature) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle || !Array.isArray(baseStyle)) {\n    return baseStyle;\n  }\n\n  // Adicionar indicador de par próximo\n  const indicatorStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 0.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  // Posicionar indicador no canto superior direito\n  const geometry = feature.getGeometry();\n  const coordinates = geometry.getCoordinates();\n  const offsetX = 0.0001; // Ajustar conforme necessário\n  const offsetY = 0.0001;\n  \n  const indicatorGeometry = new Point([\n    coordinates[0] + offsetX,\n    coordinates[1] + offsetY\n  ]);\n  \n  indicatorStyle.setGeometry(indicatorGeometry);\n  \n  return [...baseStyle, indicatorStyle];\n};\n\n/**\n * Cria estilo para marcador com tooltip\n * @param {Object} feature - Feature do marcador\n * @param {string} tooltipText - Texto do tooltip\n * @returns {Style} Estilo do marcador com tooltip\n */\nexport const createMarkerWithTooltipStyle = (feature, tooltipText) => {\n  const baseStyle = createMarkerStyle(feature, false);\n  \n  if (!baseStyle) return null;\n\n  // Adicionar tooltip como texto\n  const tooltipStyle = new Style({\n    text: new Text({\n      text: tooltipText,\n      font: '11px Arial',\n      fill: new Fill({\n        color: '#1F2937'\n      }),\n      stroke: new Stroke({\n        color: '#FFFFFF',\n        width: 2\n      }),\n      offsetY: -25,\n      textAlign: 'center',\n      backgroundFill: new Fill({\n        color: 'rgba(255, 255, 255, 0.9)'\n      }),\n      backgroundStroke: new Stroke({\n        color: '#E5E7EB',\n        width: 1\n      }),\n      padding: [4, 8]\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, tooltipStyle] : [baseStyle, tooltipStyle];\n};\n\n/**\n * Aplica estilo de hover ao marcador\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito hover\n */\nexport const applyHoverStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const hoverStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.3,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, hoverStyle] : [baseStyle, hoverStyle];\n};\n\n/**\n * Cria estilo para marcador selecionado\n * @param {Object} feature - Feature do marcador\n * @param {Style} baseStyle - Estilo base do marcador\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle) => {\n  if (!baseStyle) return null;\n\n  const selectionStyle = new Style({\n    image: new Icon({\n      src: MARKER_SVG_PATH,\n      scale: 1.5,\n      anchor: [0.5, 0.5],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'fraction'\n    }),\n    geometry: feature.getGeometry()\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n","// Utility functions for mobile detection and interaction\n\n/**\n * Detecta se é um dispositivo mobile baseado em múltiplos critérios\n */\nexport const isMobile = () => {\n  // Verificar largura da tela\n  const isMobileWidth = window.innerWidth <= 768;\n  \n  // Verificar se tem capacidades de toque\n  const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  \n  // Verificar se é um dispositivo móvel baseado no user agent\n  const isMobileUserAgent = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  \n  // Verificar orientação (mobile geralmente tem orientação variável)\n  const isMobileOrientation = window.orientation !== undefined;\n  \n  // Retorna true se pelo menos 2 critérios forem verdadeiros\n  const criteria = [isMobileWidth, hasTouch, isMobileUserAgent, isMobileOrientation];\n  const mobileCriteria = criteria.filter(Boolean).length;\n  \n  console.log('[mobileUtils] Critérios de mobile:', {\n    isMobileWidth,\n    hasTouch,\n    isMobileUserAgent,\n    isMobileOrientation,\n    mobileCriteria,\n    userAgent: navigator.userAgent\n  });\n  \n  return mobileCriteria >= 2;\n};\n\n/**\n * Detecta se é mobile em orientação paisagem\n */\nexport const isMobileLandscape = () => {\n  return isMobile() && window.innerWidth > window.innerHeight;\n};\n\n/**\n * Detecta especificamente se o dispositivo tem capacidades de toque\n */\nexport const hasTouchCapabilities = () => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n};\n\n/**\n * Detecta se o evento atual é um evento de toque\n */\nexport const isTouchEvent = (event) => {\n  return event.type && event.type.startsWith('touch');\n}; ","import { isMobile, hasTouchCapabilities, isTouchEvent } from '../mobileUtils';\nimport { DragPan, MouseWheelZoom, PinchZoom } from 'ol/interaction';\n\n/**\n * Classe para gerenciar interações e eventos do OpenLayers\n */\nexport class OpenLayersInteractions {\n  constructor(map, options = {}) {\n    this.map = map;\n    this.options = {\n      enableHover: options.enableHover !== false,\n      enableClick: options.enableClick !== false,\n      enableDoubleClick: options.enableDoubleClick !== false,\n      enableTouch: options.enableTouch !== false,\n      hoverDelay: options.hoverDelay || 200,\n      clickDelay: options.clickDelay || 300,\n      ...options\n    };\n\n    this.eventHandlers = new Map();\n    this.hoveredFeature = null;\n    this.clickedFeature = null;\n    this.clickTimeout = null;\n    this.hoverTimeout = null;\n    this.tooltipElement = null;\n    console.log('[OpenLayersInteractions] Interações inicializadas');\n\n    this.initializeInteractions();\n  }\n\n  /**\n   * Verifica se é dispositivo mobile (dinâmico e robusto)\n   */\n  isMobile() {\n    const mobile = isMobile();\n    const hasTouch = hasTouchCapabilities();\n    \n    console.log('[OpenLayersInteractions] Detecção de mobile:', {\n      mobile,\n      hasTouch,\n      windowWidth: window.innerWidth,\n      userAgent: navigator.userAgent\n    });\n    \n    return mobile || hasTouch;\n  }\n\n  /**\n   * Inicializa todas as interações\n   */\n  initializeInteractions() {\n    if (this.options.enableHover) {\n      this.setupHoverInteraction();\n    }\n\n    if (this.options.enableClick) {\n      this.setupClickInteraction();\n    }\n\n    if (this.options.enableDoubleClick) {\n      this.setupDoubleClickInteraction();\n    }\n\n    if (this.options.enableTouch && this.isMobile()) {\n      this.setupTouchInteraction();\n    }\n  }\n\n  /**\n   * Configura interação de hover\n   */\n  setupHoverInteraction() {\n    this.map.on('pointermove', (event) => {\n      this.handlePointerMove(event);\n    });\n\n    this.map.on('pointerleave', () => {\n      this.handlePointerLeave();\n    });\n  }\n\n  /**\n   * Configura interação de clique\n   */\n  setupClickInteraction() {\n    this.map.on('click', (event) => {\n      this.handleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação de duplo clique\n   */\n  setupDoubleClickInteraction() {\n    this.map.on('dblclick', (event) => {\n      this.handleDoubleClick(event);\n    });\n  }\n\n  /**\n   * Configura interação touch para mobile\n   */\n  setupTouchInteraction() {\n    // Em mobile, usar o sistema de clique com tooltip\n    // O handleClick já trata mobile vs desktop\n    console.log('[OpenLayersInteractions] Touch interaction configurada para mobile');\n  }\n\n  /**\n   * Handler para movimento do ponteiro (hover)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handlePointerMove(event) {\n    if (this.isMobile()) return; // Desabilitar hover em mobile\n\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    // Debug: verificar se está detectando features\n    if (feature && !this.hoveredFeature) {\n      console.log('[OpenLayersInteractions] Feature detectado:', {\n        type: feature.get('type'),\n        schoolData: feature.get('schoolData'),\n        terraIndigenaInfo: feature.get('terraIndigenaInfo')\n      });\n    }\n    \n    if (feature !== this.hoveredFeature) {\n      // Limpar hover anterior\n      if (this.hoveredFeature) {\n        this.clearHover();\n      }\n\n      // Aplicar novo hover\n      if (feature) {\n        this.applyHover(feature, event);\n      }\n    }\n  }\n\n  /**\n   * Handler para saída do ponteiro\n   */\n  handlePointerLeave() {\n    this.clearHover();\n  }\n\n  /**\n   * Handler para clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, primeiro clique mostra tooltip, segundo abre painel\n    if (this.isMobile()) {\n      this.handleMobileClick(feature, event);\n      return;\n    }\n\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique no mesmo feature\n      this.handleDoubleClick(event);\n      return;\n    }\n\n    // Primeiro clique\n    this.clickedFeature = feature;\n    \n    // Configurar timeout para resetar o clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      this.clickedFeature = null;\n    }, this.options.clickDelay);\n\n    // Executar handler de clique único\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para duplo clique\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleDoubleClick(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Limpar timeout de clique único\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n\n    // Resetar feature clicado\n    this.clickedFeature = null;\n\n    // Executar handler de duplo clique\n    this.executeDoubleClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para fim de toque (mobile)\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleTouchEnd(event) {\n    const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n    \n    if (!feature) return;\n\n    // Em mobile, toque único executa ação de clique\n    this.executeClickHandler(feature, event);\n  }\n\n  /**\n   * Handler para clique em mobile (primeiro mostra tooltip, segundo abre painel)\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  handleMobileClick(feature, event) {\n    // Verificar se é o mesmo feature clicado anteriormente\n    if (this.clickedFeature === feature) {\n      // Segundo clique: abrir painel\n      console.log('[OpenLayersInteractions] Segundo clique em mobile - abrindo painel');\n      this.forceHideTooltip(); // Esconder tooltip e resetar estado\n      this.executeClickHandler(feature, event); // Abrir painel\n      return;\n    }\n\n    // Primeiro clique: mostrar tooltip\n    console.log('[OpenLayersInteractions] Primeiro clique em mobile - mostrando tooltip');\n    this.clickedFeature = feature;\n    \n    // Mostrar tooltip\n    if (this.options.showTooltip) {\n      this.showTooltip(feature, event);\n    }\n\n    // Configurar timeout para esconder tooltip e resetar clique\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    \n    this.clickTimeout = setTimeout(() => {\n      console.log('[OpenLayersInteractions] Timeout mobile - escondendo tooltip e resetando');\n      this.forceHideTooltip();\n    }, 3000); // 3 segundos de timeout\n\n    // Executar handler de hover para aplicar estilo visual\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Aplica efeito de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  applyHover(feature, event) {\n    this.hoveredFeature = feature;\n    \n    // Aplicar estilo de hover\n    this.applyHoverStyle(feature);\n    \n    // Mostrar tooltip se configurado (apenas em desktop)\n    if (this.options.showTooltip && !this.isMobile()) {\n      this.showTooltip(feature, event);\n    }\n\n    // Executar handler de hover\n    this.executeHoverHandler(feature, event);\n  }\n\n  /**\n   * Remove efeito de hover\n   */\n  clearHover() {\n    if (this.hoveredFeature) {\n      // Remover estilo de hover\n      this.clearHoverStyle(this.hoveredFeature);\n      \n      // Em mobile, não esconder tooltip automaticamente\n      // O tooltip é controlado pelo sistema de clique\n      if (!this.isMobile()) {\n        this.hideTooltip();\n      }\n      \n      // Executar handler de hover out\n      this.executeHoverOutHandler(this.hoveredFeature);\n      \n      this.hoveredFeature = null;\n    }\n  }\n\n  /**\n   * Aplica estilo de hover a um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  applyHoverStyle(feature) {\n    // Implementar lógica de estilo de hover\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, true);\n    }\n  }\n\n  /**\n   * Remove estilo de hover de um feature\n   * @param {Object} feature - Feature do OpenLayers\n   */\n  clearHoverStyle(feature) {\n    // Implementar lógica de remoção de estilo de hover\n    if (this.options.hoverStyleFunction) {\n      this.options.hoverStyleFunction(feature, false);\n    }\n  }\n\n  /**\n   * Mostra tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @param {Object} event - Evento do OpenLayers\n   */\n  showTooltip(feature, event) {\n    if (this.tooltipElement) {\n      this.hideTooltip();\n    }\n\n    const tooltipContent = this.getTooltipContent(feature);\n    console.log('[OpenLayersInteractions] Conteúdo do tooltip:', tooltipContent);\n    \n    if (!tooltipContent) {\n      console.log('[OpenLayersInteractions] Sem conteúdo para tooltip');\n      return;\n    }\n\n    this.tooltipElement = this.createTooltipElement(tooltipContent, event);\n    this.map.getTargetElement().appendChild(this.tooltipElement);\n    console.log('[OpenLayersInteractions] Tooltip criado e adicionado ao DOM');\n  }\n\n  /**\n   * Esconde tooltip\n   */\n  hideTooltip() {\n    if (this.tooltipElement) {\n      this.tooltipElement.remove();\n      this.tooltipElement = null;\n      console.log('[OpenLayersInteractions] Tooltip escondido');\n    }\n  }\n\n  /**\n   * Força limpeza do tooltip (útil para mobile)\n   */\n  forceHideTooltip() {\n    this.hideTooltip();\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n      this.clickTimeout = null;\n    }\n    this.clickedFeature = null;\n    console.log('[OpenLayersInteractions] Tooltip forçadamente escondido e estado resetado');\n  }\n\n  /**\n   * Cria elemento de tooltip\n   * @param {string} content - Conteúdo do tooltip\n   * @param {Object} event - Evento do OpenLayers\n   * @returns {HTMLElement} Elemento do tooltip\n   */\n  createTooltipElement(content, event) {\n    const element = document.createElement('div');\n    element.className = 'ol-tooltip';\n    \n    // Detectar se é terra indígena baseado no conteúdo\n    const isTerraIndigena = content.includes('Terra Indígena');\n    \n    // Em mobile, tornar o nome clicável\n    if (this.isMobile()) {\n      // Criar tooltip clicável para mobile\n      const clickableContent = `<span class=\"tooltip-clickable\">${content}</span>`;\n      element.innerHTML = clickableContent;\n      \n      // Configurar estilos para mobile\n      const tooltipStyles = isTerraIndigena ? {\n        backgroundColor: '#fef2f2', // Fundo vermelho claro\n        borderColor: 'rgba(239, 68, 68, 0.3)' // Borda vermelha\n      } : {\n        backgroundColor: '#bbf7d0', // Fundo verde\n        borderColor: 'rgba(34, 197, 94, 0.3)' // Borda verde\n      };\n      \n      Object.assign(element.style, {\n        position: 'absolute',\n        padding: '8px 12px',\n        borderRadius: '8px',\n        fontSize: '14px',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n        fontWeight: '700',\n        color: '#000000',\n        pointerEvents: 'auto', // IMPORTANTE: Permitir eventos de clique no mobile\n        zIndex: '1000',\n        maxWidth: '250px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n        border: `2px solid ${tooltipStyles.borderColor}`,\n        cursor: 'default',\n        ...tooltipStyles\n      });\n      \n      // Configurar o span clicável\n      const clickableSpan = element.querySelector('.tooltip-clickable');\n      if (clickableSpan) {\n        Object.assign(clickableSpan.style, {\n          cursor: 'pointer',\n          textDecoration: 'underline',\n          textDecorationColor: '#3B82F6',\n          textDecorationThickness: '2px',\n          transition: 'all 0.2s ease',\n          display: 'inline-block',\n          padding: '2px 4px',\n          borderRadius: '4px',\n          fontWeight: '800'\n        });\n        \n        // Adicionar evento de clique para abrir o painel\n        clickableSpan.addEventListener('click', () => {\n          console.log('[OpenLayersInteractions] Nome clicado no tooltip mobile');\n          // Emitir evento para abrir o painel\n          const feature = this.map.forEachFeatureAtPixel(event.pixel, (feature) => feature);\n          if (feature) {\n            this.executeClickHandler(feature, event);\n          }\n        });\n        \n        // Adicionar efeitos de hover\n        clickableSpan.addEventListener('mouseenter', () => {\n          clickableSpan.style.backgroundColor = 'rgba(59, 130, 246, 0.1)';\n          clickableSpan.style.textDecorationColor = '#1D4ED8';\n          clickableSpan.style.transform = 'scale(1.05)';\n        });\n        \n        clickableSpan.addEventListener('mouseleave', () => {\n          clickableSpan.style.backgroundColor = 'transparent';\n          clickableSpan.style.textDecorationColor = '#3B82F6';\n          clickableSpan.style.transform = 'scale(1)';\n        });\n      }\n    } else {\n      // Desktop: tooltip normal (não clicável)\n      element.innerHTML = content;\n      \n      // Estilos do tooltip para desktop\n      const tooltipStyles = isTerraIndigena ? {\n        backgroundColor: '#fef2f2' // Fundo vermelho claro\n      } : {\n        backgroundColor: '#bbf7d0' // Fundo verde\n      };\n      \n      Object.assign(element.style, {\n        position: 'absolute',\n        padding: '6px 10px',\n        borderRadius: '6px',\n        fontSize: '12px',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n        fontWeight: '700',\n        color: '#000000',\n        pointerEvents: 'none',\n        zIndex: '1000',\n        maxWidth: '200px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        ...tooltipStyles\n      });\n    }\n\n    // Posicionar tooltip\n    const coordinate = event.coordinate;\n    const pixel = this.map.getPixelFromCoordinate(coordinate);\n    \n    element.style.left = (pixel[0] + 10) + 'px';\n    element.style.top = (pixel[1] - 10) + 'px';\n\n    return element;\n  }\n\n  /**\n   * Obtém conteúdo do tooltip para um feature\n   * @param {Object} feature - Feature do OpenLayers\n   * @returns {string} Conteúdo do tooltip\n   */\n  getTooltipContent(feature) {\n    console.log('[OpenLayersInteractions] Obtendo conteúdo do tooltip para feature:', {\n      type: feature.get('type'),\n      schoolData: feature.get('schoolData'),\n      terraIndigenaInfo: feature.get('terraIndigenaInfo')\n    });\n\n    // Implementar lógica para obter conteúdo do tooltip\n    // Esta função deve ser sobrescrita ou configurada\n    if (this.options.tooltipContentFunction) {\n      const content = this.options.tooltipContentFunction(feature);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (função customizada):', content);\n      return content;\n    }\n\n    // Conteúdo padrão baseado no tipo de feature\n    const schoolData = feature.get('schoolData');\n    if (schoolData) {\n      // FORÇAR apenas o título da escola, SEM município ou outras informações\n      const titulo = schoolData.titulo || 'Escola Indígena';\n      console.log('[OpenLayersInteractions] Título extraído (padrão):', titulo);\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão escola - FORÇADO apenas título):', titulo);\n      return titulo; // Retorna APENAS o título\n    }\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (terraIndigenaInfo) {\n      const content = `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      console.log('[OpenLayersInteractions] Conteúdo do tooltip (padrão terra indígena):', content);\n      return content;\n    }\n\n    console.log('[OpenLayersInteractions] Nenhum conteúdo encontrado para tooltip');\n    return null;\n  }\n\n  /**\n   * Executa handler de clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('click');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de duplo clique\n   * @param {Object} feature - Feature clicado\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeDoubleClickHandler(feature, event) {\n    const handler = this.eventHandlers.get('doubleClick');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover\n   * @param {Object} feature - Feature em hover\n   * @param {Object} event - Evento do OpenLayers\n   */\n  executeHoverHandler(feature, event) {\n    const handler = this.eventHandlers.get('hover');\n    if (handler && typeof handler === 'function') {\n      handler(feature, event);\n    }\n  }\n\n  /**\n   * Executa handler de hover out\n   * @param {Object} feature - Feature que saiu do hover\n   */\n  executeHoverOutHandler(feature) {\n    const handler = this.eventHandlers.get('hoverOut');\n    if (handler && typeof handler === 'function') {\n      handler(feature);\n    }\n  }\n\n  /**\n   * Registra handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   * @param {Function} handler - Função handler\n   */\n  on(eventType, handler) {\n    this.eventHandlers.set(eventType, handler);\n  }\n\n  /**\n   * Remove handler para um tipo de evento\n   * @param {string} eventType - Tipo do evento\n   */\n  off(eventType) {\n    this.eventHandlers.delete(eventType);\n  }\n\n  /**\n   * Remove todos os handlers\n   */\n  clearHandlers() {\n    this.eventHandlers.clear();\n  }\n\n  /**\n   * Atualiza opções de interação\n   * @param {Object} newOptions - Novas opções\n   */\n  updateOptions(newOptions) {\n    this.options = { ...this.options, ...newOptions };\n    \n    // Reconfigurar interações se necessário\n    if (newOptions.enableHover !== undefined) {\n      // Implementar lógica para habilitar/desabilitar hover\n    }\n    \n    if (newOptions.enableClick !== undefined) {\n      // Implementar lógica para habilitar/desabilitar clique\n    }\n  }\n\n  /**\n   * Limpa todas as interações e handlers\n   */\n  destroy() {\n    // Limpar timeouts\n    if (this.clickTimeout) {\n      clearTimeout(this.clickTimeout);\n    }\n    if (this.hoverTimeout) {\n      clearTimeout(this.hoverTimeout);\n    }\n\n    // Esconder tooltip\n    this.hideTooltip();\n\n    // Limpar hover\n    this.clearHover();\n\n    // Limpar handlers\n    this.clearHandlers();\n\n    // Remover event listeners do mapa\n    // Nota: OpenLayers não tem método un() para remover listeners específicos\n    // Seria necessário recriar o mapa ou implementar controle manual\n  }\n}\n\n/**\n * Função utilitária para criar interações padrão\n * @param {Object} map - Mapa OpenLayers\n * @param {Object} options - Opções de configuração\n * @returns {OpenLayersInteractions} Instância de interações\n */\nexport function createDefaultInteractions(map, options = {}) {\n  const defaultOptions = {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    showTooltip: true,\n    hoverDelay: 200,\n    clickDelay: 300\n  };\n\n  return new OpenLayersInteractions(map, { ...defaultOptions, ...options });\n}\n\n/**\n * Função utilitária para configurar interações específicas para marcadores\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onMarkerClick - Handler para clique em marcador (opcional)\n * @param {Function} onMarkerHover - Handler para hover em marcador\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createMarkerInteractions(map, onMarkerClick, onMarkerHover) {\n  console.log('[createMarkerInteractions] Criando interações para marcadores...');\n  \n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      console.log('[createMarkerInteractions] Função de conteúdo do tooltip chamada para:', feature);\n      const schoolData = feature.get('schoolData');\n      if (schoolData) {\n        // FORÇAR apenas o título da escola, SEM município\n        const titulo = schoolData.titulo || 'Escola Indígena';\n        console.log('[createMarkerInteractions] Título extraído:', titulo);\n        console.log('[createMarkerInteractions] Conteúdo do tooltip gerado (FORÇADO apenas título):', titulo);\n        return titulo; // Retorna APENAS o título\n      }\n      console.log('[createMarkerInteractions] Sem dados de escola para tooltip');\n      return null;\n    }\n  });\n\n  // Configurar handler de clique se fornecido\n  if (onMarkerClick) {\n    console.log('[createMarkerInteractions] Configurando handler de clique personalizado');\n    interactions.on('click', onMarkerClick);\n  }\n\n  if (onMarkerHover) {\n    interactions.on('hover', onMarkerHover);\n  }\n\n  console.log('[createMarkerInteractions] Interações criadas com sucesso');\n  return interactions;\n}\n\n/**\n * Função utilitária para configurar interações específicas para camadas GeoJSON\n * @param {Object} map - Mapa OpenLayers\n * @param {Function} onFeatureClick - Handler para clique em feature\n * @param {Function} onFeatureHover - Handler para hover em feature\n * @returns {OpenLayersInteractions} Instância de interações configurada\n */\nexport function createGeoJSONInteractions(map, onFeatureClick, onFeatureHover) {\n  const interactions = createDefaultInteractions(map, {\n    showTooltip: true,\n    tooltipContentFunction: (feature) => {\n      const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n      if (terraIndigenaInfo) {\n        return `Terra Indígena ${terraIndigenaInfo.titulo || 'Indígena'}`;\n      }\n      return null;\n    }\n  });\n\n  if (onFeatureClick) {\n    interactions.on('click', onFeatureClick);\n  }\n\n  if (onFeatureHover) {\n    interactions.on('hover', onFeatureHover);\n  }\n\n  return interactions;\n}\n","// Configurações centralizadas do mapa OpenLayers\n\nexport const MAP_CONFIG = {\n  // Configurações iniciais\n  center: [-48.4129, -22.3794], // longitude, latitude\n  zoom: 7.63,\n  maxZoom: 18,\n  minZoom: 4,\n  \n  // Configurações específicas para mobile\n  mobile: {\n    center: [-48.5935, -21.9212], // longitude, latitude - Coordenadas especificadas\n    zoom: 5.70 // Zoom ajustado para 5.70 conforme solicitado\n  },\n  \n  // Configurações de clusterização - Ajustadas para mostrar mais marcadores individuais\n  clusterDistance: 15, // Reduzido para mostrar mais marcadores individuais\n  clusterMinDistance: 3, // Reduzido para permitir marcadores mais próximos\n  clusterAnimationDuration: 300,\n  \n  // Configurações de proximidade para pares próximos\n  proximityThreshold: 0.00005,\n  \n  // Configurações de zoom para clusters\n  disableClusteringAtZoom: 12,\n  \n  // Configurações de tooltip\n  tooltipOffset: 10,\n  tooltipDelay: 200,\n  \n  // Configurações de interação\n  interaction: {\n    enableHover: true,\n    enableClick: true,\n    enableDoubleClick: true,\n    enableTouch: true,\n    clickDelay: 300,\n    hoverDelay: 200\n  },\n  \n  // Configurações de performance\n  performance: {\n    enableLazyLoading: true,\n    maxFeaturesPerTile: 1000,\n    enableFeatureCulling: true,\n    enableTileCaching: true\n  },\n\n  // Configurações de animação\n  ANIMATION_CONFIG: {\n    duration: {\n      marker: 300,\n      cluster: 500,\n      zoom: 800,\n      pan: 600\n    },\n    easing: {\n      marker: 'ease-out',\n      cluster: 'ease-in-out',\n      zoom: 'ease-out',\n      pan: 'ease-out'\n    }\n  }\n};\n\n// Configurações de cores dos marcadores\nexport const MARKER_COLORS = {\n  individual: '#3B82F6',\n  individualBorder: '#1E40AF',\n  cluster: {\n    small: '#60A5FA',\n    medium: '#3B82F6',\n    large: '#2563EB',\n    xlarge: '#1E40AF'\n  },\n  nearbyPair: '#FF6B6B',\n  selected: '#10B981',\n  hover: '#F59E0B'\n};\n\n// Configurações de tamanhos dos clusters\nexport const CLUSTER_SIZES = {\n  small: { min: 2, max: 10, size: 50 },\n  medium: { min: 11, max: 20, size: 52 },\n  large: { min: 21, max: 50, size: 56 },\n  xlarge: { min: 51, max: 100, size: 64 },\n  xxlarge: { min: 101, size: 72 }\n};\n\n// Configurações de fontes para clusters\nexport const CLUSTER_FONTS = {\n  small: 'bold 14px Arial',\n  medium: 'bold 15px Arial',\n  large: 'bold 16px Arial',\n  xlarge: 'bold 18px Arial'\n};\n\n// Configurações das camadas GeoJSON\nexport const GEOJSON_CONFIG = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n// Configurações de projeção\nexport const PROJECTION_CONFIG = {\n  dataProjection: 'EPSG:4326',\n  featureProjection: 'EPSG:3857',\n  // Projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\n  sirgas2000: 'EPSG:4674'\n};\n\n// Configurações de camadas base\nexport const BASE_LAYER_CONFIG = {\n  satellite: {\n    url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\n    attributions: '© <a href=\"https://www.esri.com/\">Esri</a>',\n    maxZoom: 19,\n    wrapX: false,\n    tilePixelRatio: 1,\n    tileSize: 256\n  },\n  osm: {\n    url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    maxZoom: 19\n  },\n  terrain: {\n    url: 'https://{a-d}.tile.opentopomap.org/{z}/{x}/{y}.png',\n    attributions: '© <a href=\"https://opentopomap.org/\">OpenTopoMap</a> contributors',\n    maxZoom: 17\n  }\n};\n\n// Configurações de estilos para diferentes tipos de marcadores\nexport const MARKER_STYLE_CONFIG = {\n  escola: {\n    default: {\n      radius: 6,\n      fillColor: MARKER_COLORS.individual,\n      strokeColor: MARKER_COLORS.individualBorder,\n      strokeWidth: 2\n    },\n    hover: {\n      radius: 8,\n      fillColor: MARKER_COLORS.hover,\n      strokeColor: '#D97706',\n      strokeWidth: 3\n    },\n    selected: {\n      radius: 10,\n      fillColor: MARKER_COLORS.selected,\n      strokeColor: '#059669',\n      strokeWidth: 3,\n      lineDash: [5, 5]\n    },\n    nearbyPair: {\n      radius: 8,\n      fillColor: MARKER_COLORS.nearbyPair,\n      strokeColor: '#DC2626',\n      strokeWidth: 2\n    }\n  },\n  cluster: {\n    small: {\n      radius: CLUSTER_SIZES.small.size / 2,\n      fillColor: MARKER_COLORS.cluster.small,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    medium: {\n      radius: CLUSTER_SIZES.medium.size / 2,\n      fillColor: MARKER_COLORS.cluster.medium,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    large: {\n      radius: CLUSTER_SIZES.large.size / 2,\n      fillColor: MARKER_COLORS.cluster.large,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    },\n    xlarge: {\n      radius: CLUSTER_SIZES.xlarge.size / 2,\n      fillColor: MARKER_COLORS.cluster.xlarge,\n      strokeColor: '#FFFFFF',\n      strokeWidth: 3\n    }\n  }\n};\n\n// Configurações de animações\nexport const ANIMATION_CONFIG = {\n  duration: {\n    marker: 300,\n    cluster: 500,\n    zoom: 800,\n    pan: 600\n  },\n  easing: {\n    marker: 'ease-out',\n    cluster: 'ease-in-out',\n    zoom: 'ease-out',\n    pan: 'ease-out'\n  }\n};\n\n// Configurações de responsividade\nexport const RESPONSIVE_CONFIG = {\n  breakpoints: {\n    mobile: 768,\n    tablet: 1024,\n    desktop: 1200\n  },\n  mobile: {\n    clusterDistance: 12, // Reduzido para mobile\n    tooltipOffset: 8,\n    markerRadius: 5\n  },\n  tablet: {\n    clusterDistance: 15, // Reduzido para tablet\n    tooltipOffset: 10,\n    markerRadius: 6\n  },\n  desktop: {\n    clusterDistance: 15, // Reduzido para desktop\n    tooltipOffset: 10,\n    markerRadius: 6\n  }\n};\n\n// Configurações de cache\nexport const CACHE_CONFIG = {\n  markers: {\n    maxSize: 1000,\n    ttl: 300000, // 5 minutos\n    enableCompression: true\n  },\n  tiles: {\n    maxSize: 100,\n    ttl: 600000, // 10 minutos\n    enableCompression: true\n  },\n  geojson: {\n    maxSize: 50,\n    ttl: 1800000, // 30 minutos\n    enableCompression: true\n  }\n};\n\n// Configurações de debug\nexport const DEBUG_CONFIG = {\n  enableLogging: process.env.NODE_ENV === 'development',\n  enablePerformanceMonitoring: process.env.NODE_ENV === 'development',\n  enableFeatureCount: process.env.NODE_ENV === 'development',\n  logLevel: process.env.NODE_ENV === 'development' ? 'debug' : 'error'\n}; ","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport { \n  createMarkerStyle, \n  applyHoverStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/markerStyles';\nimport { createMarkerInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersMarkers - Substitui completamente o Marcadores.js do Leaflet\n * IMPLEMENTAÇÃO SIMPLIFICADA: Mostra todos os marcadores individuais sem clustering\n */\nconst OpenLayersMarkers = ({ \n  dataPoints = [], \n  onPainelOpen,\n  showMarcadores = true,\n  showNomesEscolas = false,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas e fontes\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredMarker, setHoveredMarker] = React.useState(null);\n  const [selectedMarker, setSelectedMarker] = React.useState(null);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de marcadores (SEM clustering)\n   */\n  const initializeMarkers = useCallback(() => {\n    if (!map) return;\n\n    console.log('[OpenLayersMarkers] Inicializando marcadores individuais...');\n\n    // Criar fonte vetorial para marcadores\n    vectorSourceRef.current = new VectorSource();\n    \n    // Criar camada vetorial para marcadores INDIVIDUAIS (sem clustering)\n    vectorLayerRef.current = new VectorLayer({\n      source: vectorSourceRef.current,\n      style: (feature) => createMarkerStyle(feature, showNomesEscolas),\n      zIndex: 100\n    });\n\n    // Adicionar camada ao mapa\n    map.addLayer(vectorLayerRef.current);\n\n    // Configurar interações\n    setupInteractions();\n\n  }, [map, showNomesEscolas]);\n\n  /**\n   * Configura as interações dos marcadores\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    console.log('[OpenLayersMarkers] Configurando interações com tooltips...');\n\n    // Criar interações específicas para marcadores com tooltips\n    const interactions = createMarkerInteractions(\n      map,\n      handleMarkerClick,\n      handleMarkerHover\n    );\n\n    // Configurar handlers específicos\n    interactions.on('click', handleMarkerClick);\n    interactions.on('hover', handleMarkerHover);\n    interactions.on('hoverOut', handleMarkerHoverOut);\n\n    // IMPORTANTE: Integrar as interações com o mapa para que os tooltips funcionem\n    // O sistema de interações do OpenLayers precisa estar ativo para detectar hover\n    console.log('[OpenLayersMarkers] Interações configuradas e integradas com o mapa');\n\n  }, [map]);\n\n  /**\n   * Handler para clique em marcador\n   */\n  const handleMarkerClick = useCallback((feature, event) => {\n    // Usar schoolData em vez de markerData para consistência com o sistema de interações\n    const schoolData = feature.get('schoolData');\n    if (schoolData && onPainelOpen) {\n      console.log('[OpenLayersMarkers] Marcador clicado:', schoolData.titulo);\n      onPainelOpen(schoolData);\n    }\n  }, [onPainelOpen]);\n\n  /**\n   * Handler para hover em marcador\n   */\n  const handleMarkerHover = useCallback((feature, event) => {\n    // IMPORTANTE: Não desabilitar hover em mobile\n    // O sistema de interações precisa do hover para funcionar corretamente\n    // O hover é usado para mostrar tooltips e aplicar estilos visuais\n    \n    setHoveredMarker(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return applyHoverStyle(f, createMarkerStyle(f, showNomesEscolas));\n        }\n        return createMarkerStyle(f, showNomesEscolas);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [showNomesEscolas]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleMarkerHoverOut = useCallback(() => {\n    setHoveredMarker(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createMarkerStyle(f, showNomesEscolas));\n      vectorLayerRef.current.changed();\n    }\n  }, [showNomesEscolas]);\n\n  /**\n   * Atualiza marcadores quando dataPoints mudar\n   */\n  const updateMarkers = useCallback(() => {\n    if (!vectorSourceRef.current || !dataPoints) return;\n\n    console.log('[OpenLayersMarkers] Atualizando marcadores...', dataPoints.length, 'showMarcadores:', showMarcadores);\n\n    // Limpar marcadores existentes\n    vectorSourceRef.current.clear();\n    \n    // Se showMarcadores for false, não adicionar marcadores\n    if (!showMarcadores) {\n      console.log('[OpenLayersMarkers] Marcadores desabilitados, removendo todos');\n      return;\n    }\n    \n    // Filtrar pontos válidos\n    const pontosValidos = dataPoints.filter(point => {\n      if (!point.latitude || !point.longitude) return false;\n      const lat = parseFloat(point.latitude);\n      const lng = parseFloat(point.longitude);\n      return !isNaN(lat) && !isNaN(lng) && \n             lat >= -90 && lat <= 90 && \n             lng >= -180 && lng <= 180;\n    });\n\n    console.log('[OpenLayersMarkers] Pontos válidos:', pontosValidos.length);\n\n    // Adicionar novos marcadores INDIVIDUAIS\n    pontosValidos.forEach((point, index) => {\n      if (point.latitude && point.longitude) {\n        const feature = new Feature({\n          geometry: new Point(fromLonLat([point.longitude, point.latitude]))\n        });\n        \n        feature.set('markerData', point);\n        feature.set('schoolData', point); // Dados para tooltips\n        feature.set('markerId', `marker_${index}`);\n        feature.set('type', 'marker');\n        \n        // Debug: verificar dados do tooltip\n        console.log(`[OpenLayersMarkers] Marcador ${index}:`, {\n          titulo: point.titulo,\n          municipio: point.municipio || point.Municipio,\n          uf: point.uf || point.UF\n        });\n        \n        vectorSourceRef.current.addFeature(feature);\n      }\n    });\n\n    console.log(`[OpenLayersMarkers] ${pontosValidos.length} marcadores individuais adicionados`);\n\n  }, [dataPoints, showMarcadores]);\n\n  /**\n   * Atualiza estilo dos marcadores quando showNomesEscolas mudar\n   */\n  const updateMarkerStyles = useCallback(() => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((feature) => createMarkerStyle(feature, showNomesEscolas));\n    vectorLayerRef.current.changed();\n  }, [showNomesEscolas]);\n\n  // Inicializar marcadores quando componente montar\n  useEffect(() => {\n    if (map) {\n      initializeMarkers();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, initializeMarkers]);\n\n  // Atualizar marcadores quando dataPoints mudar\n  useEffect(() => {\n    updateMarkers();\n  }, [updateMarkers]);\n\n  // Atualizar estilos quando showNomesEscolas mudar\n  useEffect(() => {\n    updateMarkerStyles();\n  }, [updateMarkerStyles]);\n\n  // Sempre renderizar o componente para manter a camada ativa\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia as camadas do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersMarkers;\n","import { Style, Fill, Stroke, Text } from 'ol/style';\n\n// Configurações de cores para camadas GeoJSON\nexport const LAYER_COLORS = {\n  terrasIndigenas: {\n    regularizada: {\n      fill: 'rgba(220, 20, 60, 0.3)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(220, 20, 60, 0.45)',\n        stroke: '#FF0000'\n      }\n    },\n    declarada: {\n      fill: 'rgba(139, 0, 0, 0.25)',\n      stroke: '#B22222',\n      hover: {\n        fill: 'rgba(139, 0, 0, 0.4)',\n        stroke: '#FF0000'\n      }\n    }\n  },\n  estadoSP: {\n    fill: 'rgba(0, 0, 0, 0.3)',\n    stroke: '#000000',\n    hover: {\n      fill: 'rgba(0, 0, 0, 0.4)',\n      stroke: '#333333'\n    }\n  }\n};\n\n/**\n * Cria estilo para terras indígenas baseado no status\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo da terra indígena\n */\nexport const createTerrasIndigenasStyle = (feature, isHovered = false) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.fill\n      }),\n      stroke: new Stroke({\n        color: LAYER_COLORS.terrasIndigenas.regularizada.stroke,\n        width: 2\n      })\n    });\n  }\n\n  const isRegularizada = feature.properties.fase_ti === 'Regularizada';\n  const colorConfig = isRegularizada \n    ? LAYER_COLORS.terrasIndigenas.regularizada \n    : LAYER_COLORS.terrasIndigenas.declarada;\n\n  const colors = isHovered ? colorConfig.hover : colorConfig;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 3 : 2,\n      lineDash: isHovered ? [] : [3, 3]\n    })\n  });\n};\n\n/**\n * Cria estilo para estado de São Paulo\n * @param {Object} feature - Feature do GeoJSON\n * @param {boolean} isHovered - Se está em estado hover\n * @returns {Style} Estilo do estado\n */\nexport const createEstadoSPStyle = (feature, isHovered = false) => {\n  const colors = isHovered ? LAYER_COLORS.estadoSP.hover : LAYER_COLORS.estadoSP;\n\n  return new Style({\n    fill: new Fill({\n      color: colors.fill\n    }),\n    stroke: new Stroke({\n      color: colors.stroke,\n      width: isHovered ? 2 : 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com label\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} labelProperty - Propriedade para usar como label\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com label\n */\nexport const createLabeledFeatureStyle = (feature, labelProperty, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    labelColor = '#000000',\n    labelSize = '12px',\n    labelFont = 'Arial'\n  } = styleOptions;\n\n  const labelText = feature.properties?.[labelProperty] || '';\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar label se houver texto\n  if (labelText) {\n    styles.push(new Style({\n      text: new Text({\n        text: labelText,\n        font: `${labelSize} ${labelFont}`,\n        fill: new Fill({\n          color: labelColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: 0,\n        textAlign: 'center'\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature com tooltip\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} tooltipText - Texto do tooltip\n * @param {Object} styleOptions - Opções de estilo\n * @returns {Style} Estilo com tooltip\n */\nexport const createFeatureWithTooltipStyle = (feature, tooltipText, styleOptions = {}) => {\n  const {\n    fillColor = 'rgba(0, 0, 0, 0.1)',\n    strokeColor = '#000000',\n    strokeWidth = 1,\n    tooltipColor = '#1F2937',\n    tooltipBackground = 'rgba(255, 255, 255, 0.95)',\n    tooltipBorder = '#E5E7EB'\n  } = styleOptions;\n\n  const styles = [\n    new Style({\n      fill: new Fill({\n        color: fillColor\n      }),\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth\n      })\n    })\n  ];\n\n  // Adicionar tooltip como texto\n  if (tooltipText) {\n    styles.push(new Style({\n      text: new Text({\n        text: tooltipText,\n        font: '11px Arial',\n        fill: new Fill({\n          color: tooltipColor\n        }),\n        stroke: new Stroke({\n          color: '#FFFFFF',\n          width: 2\n        }),\n        offsetY: -15,\n        textAlign: 'center',\n        backgroundFill: new Fill({\n          color: tooltipBackground\n        }),\n        backgroundStroke: new Stroke({\n          color: tooltipBorder,\n          width: 1\n        }),\n        padding: [4, 8]\n      })\n    }));\n  }\n\n  return styles;\n};\n\n/**\n * Cria estilo para feature selecionada\n * @param {Object} feature - Feature do GeoJSON\n * @param {Style} baseStyle - Estilo base\n * @param {Object} selectionOptions - Opções de seleção\n * @returns {Style} Estilo com efeito de seleção\n */\nexport const applySelectionStyle = (feature, baseStyle, selectionOptions = {}) => {\n  const {\n    fillColor = 'rgba(59, 130, 246, 0.3)',\n    strokeColor = '#1E40AF',\n    strokeWidth = 3,\n    lineDash = [5, 5]\n  } = selectionOptions;\n\n  const selectionStyle = new Style({\n    fill: new Fill({\n      color: fillColor\n    }),\n    stroke: new Stroke({\n      color: strokeColor,\n      width: strokeWidth,\n      lineDash: lineDash\n    })\n  });\n\n  return Array.isArray(baseStyle) ? [...baseStyle, selectionStyle] : [baseStyle, selectionStyle];\n};\n\n/**\n * Cria estilo para feature com indicador de status\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} statusProperty - Propriedade que indica o status\n * @param {Object} statusConfig - Configuração dos status\n * @returns {Style} Estilo com indicador de status\n */\nexport const createStatusFeatureStyle = (feature, statusProperty, statusConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: '#000000',\n        width: 1\n      })\n    });\n  }\n\n  const status = feature.properties[statusProperty];\n  const config = statusConfig[status] || statusConfig.default || {\n    fill: 'rgba(0, 0, 0, 0.1)',\n    stroke: '#000000'\n  };\n\n  return new Style({\n    fill: new Fill({\n      color: config.fill\n    }),\n    stroke: new Stroke({\n      color: config.stroke,\n      width: config.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Cria estilo para feature com gradiente baseado em valor numérico\n * @param {Object} feature - Feature do GeoJSON\n * @param {string} valueProperty - Propriedade com valor numérico\n * @param {Object} gradientConfig - Configuração do gradiente\n * @returns {Style} Estilo com gradiente\n */\nexport const createGradientFeatureStyle = (feature, valueProperty, gradientConfig) => {\n  if (!feature || !feature.properties) {\n    return new Style({\n      fill: new Fill({\n        color: gradientConfig.defaultColor || 'rgba(0, 0, 0, 0.1)'\n      }),\n      stroke: new Stroke({\n        color: gradientConfig.strokeColor || '#000000',\n        width: gradientConfig.strokeWidth || 1\n      })\n    });\n  }\n\n  const value = parseFloat(feature.properties[valueProperty]) || 0;\n  const { min, max, colors } = gradientConfig;\n\n  // Calcular cor baseada no valor\n  let color;\n  if (value <= min) {\n    color = colors.min;\n  } else if (value >= max) {\n    color = colors.max;\n  } else {\n    // Interpolação linear entre cores\n    const ratio = (value - min) / (max - min);\n    color = interpolateColor(colors.min, colors.max, ratio);\n  }\n\n  return new Style({\n    fill: new Fill({\n      color: color\n    }),\n    stroke: new Stroke({\n      color: gradientConfig.strokeColor || '#000000',\n      width: gradientConfig.strokeWidth || 1\n    })\n  });\n};\n\n/**\n * Interpola entre duas cores\n * @param {string} color1 - Primeira cor (hex)\n * @param {string} color2 - Segunda cor (hex)\n * @param {number} ratio - Razão de interpolação (0-1)\n * @returns {string} Cor interpolada\n */\nfunction interpolateColor(color1, color2, ratio) {\n  const hex1 = color1.replace('#', '');\n  const hex2 = color2.replace('#', '');\n  \n  const r1 = parseInt(hex1.substr(0, 2), 16);\n  const g1 = parseInt(hex1.substr(2, 2), 16);\n  const b1 = parseInt(hex1.substr(4, 2), 16);\n  \n  const r2 = parseInt(hex2.substr(0, 2), 16);\n  const g2 = parseInt(hex2.substr(2, 2), 16);\n  const b2 = parseInt(hex2.substr(4, 2), 16);\n  \n  const r = Math.round(r1 + (r2 - r1) * ratio);\n  const g = Math.round(g1 + (g2 - g1) * ratio);\n  const b = Math.round(b1 + (b2 - b1) * ratio);\n  \n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { \n  createTerrasIndigenasStyle,\n  applySelectionStyle \n} from '../../utils/openlayers/layerStyles';\nimport { createGeoJSONInteractions } from '../../utils/openlayers/interactions';\nimport { MAP_CONFIG, PROJECTION_CONFIG } from '../../utils/mapConfig';\nimport { isMobile } from '../../utils/mobileUtils';\n\n/**\n * Componente OpenLayersTerrasIndigenas - Substitui completamente o TerrasIndigenas.js do Leaflet\n * Implementa camada GeoJSON de terras indígenas com estilos dinâmicos e interações\n */\nconst OpenLayersTerrasIndigenas = ({ \n  data,\n  onPainelOpen,\n  showTerrasIndigenas = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n  const interactionsRef = useRef(null);\n  \n  // Estados para controle de interações\n  const [hoveredFeature, setHoveredFeature] = React.useState(null);\n  const [selectedFeature, setSelectedFeature] = React.useState(null);\n  const [features, setFeatures] = React.useState([]);\n\n  // Verificar se é mobile\n  const isMobileDevice = useMemo(() => isMobile(), []);\n\n  /**\n   * Inicializa a camada de terras indígenas\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersTerrasIndigenas] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n      setFeatures(geoJSONFeatures);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createTerrasIndigenasStyle(feature, false),\n        zIndex: 10\n      });\n\n      // Adicionar dados de terra indígena a cada feature\n      geoJSONFeatures.forEach(feature => {\n        const properties = feature.getProperties();\n        feature.set('terraIndigenaInfo', {\n          titulo: properties.terrai_nom,\n          tipo: 'terra_indigena',\n          etnia: properties.etnia_nome,\n          municipio: properties.municipio_,\n          uf: properties.uf_sigla,\n          superficie: properties.superficie,\n          fase: properties.fase_ti,\n          modalidade: properties.modalidade,\n          reestudo: properties.reestudo_t,\n          cr: properties.cr,\n          faixa_fron: properties.faixa_fron,\n          undadm_nom: properties.undadm_nom,\n          undadm_sig: properties.undadm_sig,\n          dominio_un: properties.dominio_un,\n          data_atual: properties.data_atual,\n          terrai_cod: properties.terrai_cod,\n          undadm_cod: properties.undadm_cod\n        });\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      // Configurar interações\n      setupInteractions();\n\n      console.log(`[OpenLayersTerrasIndigenas] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersTerrasIndigenas] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  /**\n   * Configura as interações da camada\n   */\n  const setupInteractions = useCallback(() => {\n    if (!map || !vectorLayerRef.current) return;\n\n    // Criar interações específicas para camadas GeoJSON\n    interactionsRef.current = createGeoJSONInteractions(\n      map,\n      handleFeatureClick,\n      handleFeatureHover\n    );\n\n    // Configurar handlers específicos\n    interactionsRef.current.on('click', handleFeatureClick);\n    interactionsRef.current.on('hover', handleFeatureHover);\n    interactionsRef.current.on('hoverOut', handleFeatureHoverOut);\n\n  }, [map]);\n\n  /**\n   * Handler para clique em feature\n   */\n  const handleFeatureClick = useCallback((feature, event) => {\n    if (!feature) return;\n\n    const terraIndigenaInfo = feature.get('terraIndigenaInfo');\n    if (!terraIndigenaInfo) return;\n\n    if (isMobileDevice) {\n      // No mobile: clique único abre o painel diretamente\n      if (onPainelOpen) {\n        onPainelOpen(terraIndigenaInfo);\n      }\n    } else {\n      // No desktop: primeiro clique faz zoom, segundo abre painel\n      if (selectedFeature === feature) {\n        // Segundo clique: abrir painel\n        if (onPainelOpen) {\n          onPainelOpen(terraIndigenaInfo);\n        }\n        setSelectedFeature(null);\n      } else {\n        // Primeiro clique: fazer zoom\n        setSelectedFeature(feature);\n        \n        const geometry = feature.getGeometry();\n        if (geometry) {\n          const extent = geometry.getExtent();\n          map.getView().fit(extent, {\n            duration: MAP_CONFIG.ANIMATION_CONFIG.duration.zoom,\n            padding: [50, 50, 50, 50],\n            maxZoom: 15\n          });\n        }\n      }\n    }\n  }, [isMobileDevice, onPainelOpen, selectedFeature, map]);\n\n  /**\n   * Handler para hover em feature\n   */\n  const handleFeatureHover = useCallback((feature, event) => {\n    if (isMobileDevice) return; // Desabilitar hover em mobile\n    \n    setHoveredFeature(feature);\n    \n    // Aplicar estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => {\n        if (f === feature) {\n          return createTerrasIndigenasStyle(f, true); // true = hover\n        }\n        return createTerrasIndigenasStyle(f, false);\n      });\n      vectorLayerRef.current.changed();\n    }\n  }, [isMobileDevice]);\n\n  /**\n   * Handler para saída do hover\n   */\n  const handleFeatureHoverOut = useCallback((feature) => {\n    setHoveredFeature(null);\n    \n    // Remover estilo de hover\n    if (vectorLayerRef.current) {\n      vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n      vectorLayerRef.current.changed();\n    }\n  }, []);\n\n  /**\n   * Aplica estilo de seleção a um feature\n   */\n  const applySelectionStyleToFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => {\n      if (f === feature) {\n        const baseStyle = createTerrasIndigenasStyle(f, false);\n        return applySelectionStyle(f, baseStyle);\n      }\n      return createTerrasIndigenasStyle(f, false);\n    });\n    vectorLayerRef.current.changed();\n  }, []);\n\n  /**\n   * Remove estilo de seleção de um feature\n   */\n  const removeSelectionStyleFromFeature = useCallback((feature) => {\n    if (!vectorLayerRef.current) return;\n\n    vectorLayerRef.current.setStyle((f) => createTerrasIndigenasStyle(f, false));\n    vectorLayerRef.current.changed();\n  }, []);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showTerrasIndigenas) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (interactionsRef.current) {\n        interactionsRef.current.destroy();\n      }\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showTerrasIndigenas, initializeLayer]);\n\n  // Aplicar/remover estilo de seleção quando selectedFeature mudar\n  useEffect(() => {\n    if (selectedFeature) {\n      applySelectionStyleToFeature(selectedFeature);\n    } else if (vectorLayerRef.current) {\n      // Remover seleção de todos os features\n      removeSelectionStyleFromFeature();\n    }\n  }, [selectedFeature, applySelectionStyleToFeature, removeSelectionStyleFromFeature]);\n\n  // Limpar seleção após timeout (para comportamento de clique duplo)\n  useEffect(() => {\n    if (selectedFeature) {\n      const timeout = setTimeout(() => {\n        setSelectedFeature(null);\n      }, MAP_CONFIG.interaction.clickDelay);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [selectedFeature]);\n\n  // Se não deve mostrar terras indígenas, não renderizar nada\n  if (!showTerrasIndigenas || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersTerrasIndigenas;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { GeoJSON } from 'ol/format';\nimport { createEstadoSPStyle } from '../../utils/openlayers/layerStyles';\nimport { PROJECTION_CONFIG } from '../../utils/mapConfig';\n\n/**\n * Componente OpenLayersEstadoSP - Substitui completamente o EstadoSP.js do Leaflet\n * Implementa camada GeoJSON de fundo do estado de São Paulo (não-interativa)\n */\nconst OpenLayersEstadoSP = ({ \n  data,\n  showEstadoSP = true,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle da camada\n  const vectorSourceRef = useRef(null);\n  const vectorLayerRef = useRef(null);\n\n  /**\n   * Inicializa a camada do estado de São Paulo\n   */\n  const initializeLayer = useCallback(() => {\n    if (!map || !data) return;\n\n    // Verificar se os dados têm a estrutura correta\n    if (!data.features || !Array.isArray(data.features) || data.features.length === 0) {\n      console.warn('[OpenLayersEstadoSP] Dados inválidos ou vazios:', data);\n      return;\n    }\n\n    try {\n      // Criar formato GeoJSON com projeções corretas\n      const geoJSONFormat = new GeoJSON({\n        dataProjection: PROJECTION_CONFIG.sirgas2000 || PROJECTION_CONFIG.dataProjection,\n        featureProjection: PROJECTION_CONFIG.featureProjection\n      });\n\n      // Ler features do GeoJSON\n      const geoJSONFeatures = geoJSONFormat.readFeatures(data);\n\n      // Criar fonte vetorial\n      vectorSourceRef.current = new VectorSource({\n        features: geoJSONFeatures\n      });\n\n      // Criar camada vetorial (não-interativa, apenas visual)\n      vectorLayerRef.current = new VectorLayer({\n        source: vectorSourceRef.current,\n        style: (feature) => createEstadoSPStyle(feature, false),\n        zIndex: 5, // Camada de fundo com zIndex baixo\n        interactive: false // Desabilitar interações\n      });\n\n      // Adicionar camada ao mapa\n      map.addLayer(vectorLayerRef.current);\n\n      console.log(`[OpenLayersEstadoSP] Camada criada com ${geoJSONFeatures.length} features`);\n\n    } catch (error) {\n      console.error('[OpenLayersEstadoSP] Erro ao criar camada:', error);\n    }\n\n  }, [map, data]);\n\n  // Inicializar camada quando componente montar\n  useEffect(() => {\n    if (map && data && showEstadoSP) {\n      initializeLayer();\n    }\n\n    return () => {\n      // Cleanup\n      if (vectorLayerRef.current && map) {\n        map.removeLayer(vectorLayerRef.current);\n      }\n    };\n  }, [map, data, showEstadoSP, initializeLayer]);\n\n  // Se não deve mostrar estado SP, não renderizar nada\n  if (!showEstadoSP || !data) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {/* Este componente não renderiza elementos visuais diretamente,\n          apenas gerencia a camada GeoJSON de fundo do OpenLayers */}\n    </div>\n  );\n};\n\nexport default OpenLayersEstadoSP;\n","import React, { useEffect, useRef, useCallback, useMemo } from 'react';\nimport OpenLayersTerrasIndigenas from './OpenLayersTerrasIndigenas';\nimport OpenLayersEstadoSP from './OpenLayersEstadoSP';\n\n/**\n * Componente OpenLayersLayers - Gerenciador unificado de todas as camadas GeoJSON\n * Centraliza o controle das camadas de terras indígenas e estado SP\n */\nconst OpenLayersLayers = ({ \n  terrasIndigenasData,\n  estadoSPData,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  onPainelOpen,\n  map,\n  className = \"h-full w-full\"\n}) => {\n  // Refs para controle das camadas\n  const terrasIndigenasRef = useRef(null);\n  const estadoSPRef = useRef(null);\n  \n  // Estados para controle das camadas\n  const [layersStatus, setLayersStatus] = React.useState({\n    terrasIndigenas: {\n      visible: showTerrasIndigenas,\n      loaded: false,\n      error: null\n    },\n    estadoSP: {\n      visible: showEstadoSP,\n      loaded: false,\n      error: null\n    }\n  });\n\n  // Verificar se há dados válidos\n  const hasValidData = useMemo(() => {\n    return {\n      terrasIndigenas: terrasIndigenasData && terrasIndigenasData.features && terrasIndigenasData.features.length > 0,\n      estadoSP: estadoSPData && estadoSPData.features && estadoSPData.features.length > 0\n    };\n  }, [terrasIndigenasData, estadoSPData]);\n\n  /**\n   * Atualiza status de uma camada\n   */\n  const updateLayerStatus = useCallback((layerName, updates) => {\n    setLayersStatus(prev => ({\n      ...prev,\n      [layerName]: {\n        ...prev[layerName],\n        ...updates\n      }\n    }));\n  }, []);\n\n  /**\n   * Handler para mudanças na visibilidade das camadas\n   */\n  const handleLayerVisibilityChange = useCallback((layerName, visible) => {\n    updateLayerStatus(layerName, { visible });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para erros nas camadas\n   */\n  const handleLayerError = useCallback((layerName, error) => {\n    console.error(`[OpenLayersLayers] Erro na camada ${layerName}:`, error);\n    updateLayerStatus(layerName, { error: error.message });\n  }, [updateLayerStatus]);\n\n  /**\n   * Handler para sucesso no carregamento das camadas\n   */\n  const handleLayerSuccess = useCallback((layerName) => {\n    updateLayerStatus(layerName, { loaded: true, error: null });\n  }, [updateLayerStatus]);\n\n  /**\n   * Obtém estatísticas das camadas\n   */\n  const getLayersStats = useCallback(() => {\n    const stats = {\n      total: 0,\n      visible: 0,\n      loaded: 0,\n      errors: 0\n    };\n\n    Object.values(layersStatus).forEach(layer => {\n      stats.total++;\n      if (layer.visible) stats.visible++;\n      if (layer.loaded) stats.loaded++;\n      if (layer.error) stats.errors++;\n    });\n\n    return stats;\n  }, [layersStatus]);\n\n  /**\n   * Obtém informações detalhadas das camadas\n   */\n  const getLayersInfo = useCallback(() => {\n    return {\n      terrasIndigenas: {\n        ...layersStatus.terrasIndigenas,\n        hasData: hasValidData.terrasIndigenas,\n        featureCount: hasValidData.terrasIndigenas ? terrasIndigenasData.features.length : 0\n      },\n      estadoSP: {\n        ...layersStatus.estadoSP,\n        hasData: hasValidData.estadoSP,\n        featureCount: hasValidData.estadoSP ? estadoSPData.features.length : 0\n      }\n    };\n  }, [layersStatus, hasValidData, terrasIndigenasData, estadoSPData]);\n\n  // Log de status das camadas\n  useEffect(() => {\n    const stats = getLayersStats();\n    const info = getLayersInfo();\n    \n    console.log('[OpenLayersLayers] Status das camadas:', {\n      stats,\n      info,\n      hasValidData\n    });\n  }, [layersStatus, getLayersStats, getLayersInfo, hasValidData]);\n\n  // Atualizar status quando props mudarem\n  useEffect(() => {\n    setLayersStatus(prev => ({\n      terrasIndigenas: {\n        ...prev.terrasIndigenas,\n        visible: showTerrasIndigenas\n      },\n      estadoSP: {\n        ...prev.estadoSP,\n        visible: showEstadoSP\n      }\n    }));\n  }, [showTerrasIndigenas, showEstadoSP]);\n\n  // Se não há dados válidos, não renderizar nada\n  if (!hasValidData.terrasIndigenas && !hasValidData.estadoSP) {\n    return (\n      <div className={className}>\n        <div className=\"text-center text-gray-500 p-4\">\n          Nenhuma camada GeoJSON disponível\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      {/* Camada Terras Indígenas */}\n      {hasValidData.terrasIndigenas && (\n        <OpenLayersTerrasIndigenas\n          ref={terrasIndigenasRef}\n          data={terrasIndigenasData}\n          onPainelOpen={onPainelOpen}\n          showTerrasIndigenas={showTerrasIndigenas}\n          map={map}\n          onLoad={() => handleLayerSuccess('terrasIndigenas')}\n          onError={(error) => handleLayerError('terrasIndigenas', error)}\n        />\n      )}\n\n      {/* Camada Estado SP */}\n      {hasValidData.estadoSP && (\n        <OpenLayersEstadoSP\n          ref={estadoSPRef}\n          data={estadoSPData}\n          showEstadoSP={showEstadoSP}\n          map={map}\n          onLoad={() => handleLayerSuccess('estadoSP')}\n          onError={(error) => handleLayerError('estadoSP', error)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default OpenLayersLayers;\n","import React from 'react';\n\nconst MapWrapper = React.forwardRef((props, ref) => {\n  return <div id=\"map\" className=\"w-full h-full\" ref={ref} {...props} />;\n});\n\nexport default MapWrapper; ","import React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { defaults as defaultControls } from 'ol/control';\n// Remover import das interações padrão para evitar conflitos\n// import { defaults as defaultInteractions } from 'ol/interaction';\nimport { register } from 'ol/proj/proj4';\nimport proj4 from 'proj4';\nimport 'ol/ol.css';\n\n// Componentes OpenLayers\nimport OpenLayersMarkers from './OpenLayers/OpenLayersMarkers';\nimport OpenLayersLayers from './OpenLayers/OpenLayersLayers';\n\n// Configurações e utilitários\nimport { MAP_CONFIG, BASE_LAYER_CONFIG } from '../utils/mapConfig';\nimport { isMobile } from '../utils/mobileUtils';\nimport MapWrapper from './map/MapWrapper';\n\n// Registrar projeção SIRGAS 2000 (EPSG:4674) usada nos dados GeoJSON\nproj4.defs('EPSG:4674', '+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs');\nregister(proj4);\n\nconst OpenLayersMap = ({ \n  dataPoints = [], \n  onPainelOpen,\n  center = MAP_CONFIG.center,\n  zoom = MAP_CONFIG.zoom,\n  className = \"h-screen w-full\",\n  // Props para camadas GeoJSON\n  terrasIndigenasData = null,\n  estadoSPData = null,\n  showTerrasIndigenas = true,\n  showEstadoSP = true,\n  // Props para marcadores\n  showMarcadores = true,\n  showNomesEscolas = false\n}) => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const baseLayer = useRef(null);\n  const [mapInfo, setMapInfo] = useState({\n    lng: center[0],\n    lat: center[1],\n    zoom: zoom\n  });\n\n  // Verificar se é mobile e ajustar configurações\n  const isMobileDevice = useMemo(() => isMobile(), []);\n  const initialCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n  const initialZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n  /**\n   * Cria camadas base do mapa\n   */\n  const createBaseLayers = useCallback(() => {\n    const satelliteLayer = new TileLayer({\n      source: new XYZ({\n        url: BASE_LAYER_CONFIG.satellite.url,\n        attributions: BASE_LAYER_CONFIG.satellite.attributions,\n        maxZoom: BASE_LAYER_CONFIG.satellite.maxZoom,\n        wrapX: BASE_LAYER_CONFIG.satellite.wrapX,\n        tilePixelRatio: BASE_LAYER_CONFIG.satellite.tilePixelRatio,\n        tileSize: BASE_LAYER_CONFIG.satellite.tileSize\n      }),\n      preload: 1,\n      useInterimTilesOnError: false\n    });\n\n    return { satelliteLayer };\n  }, []);\n\n  /**\n   * Inicializa o mapa OpenLayers\n   */\n  const initializeMap = useCallback(() => {\n    if (map.current) return;\n\n    // Criar camadas base\n    const { satelliteLayer } = createBaseLayers();\n    baseLayer.current = satelliteLayer;\n\n    // Criar mapa com configurações ajustadas para mobile\n    map.current = new Map({\n      target: mapContainer.current,\n      layers: [baseLayer.current],\n      view: new View({\n        center: fromLonLat(initialCenter),\n        zoom: initialZoom,\n        maxZoom: MAP_CONFIG.maxZoom,\n        minZoom: MAP_CONFIG.minZoom,\n        enableRotation: false // Desabilitar rotação\n      }),\n      controls: defaultControls(),\n      // Remover interações padrão para evitar conflitos\n      // interactions: defaultInteractions({\n      //   dragRotate: false, // Desabilitar rotação com arraste\n      //   pinchRotate: false // Desabilitar rotação com pinch (dois dedos)\n      // })\n    });\n\n    // Event listeners para mudanças de view\n    map.current.on('moveend', () => {\n      const view = map.current.getView();\n      const center = toLonLat(view.getCenter());\n      const newView = {\n        lng: center[0].toFixed(4),\n        lat: center[1].toFixed(4),\n        zoom: view.getZoom().toFixed(2)\n      };\n      \n      setMapInfo(newView);\n    });\n\n    console.log('[OpenLayersMap] Mapa inicializado com sucesso');\n\n  }, [initialCenter, initialZoom, createBaseLayers]);\n\n  /**\n   * Atualiza configurações do mapa quando props mudarem\n   */\n  const updateMapConfig = useCallback(() => {\n    if (!map.current) return;\n\n    const isMobileDevice = isMobile();\n    const newCenter = isMobileDevice ? MAP_CONFIG.mobile.center : center;\n    const newZoom = isMobileDevice ? MAP_CONFIG.mobile.zoom : zoom;\n\n    const view = map.current.getView();\n    const currentCenter = toLonLat(view.getCenter());\n    const currentZoom = view.getZoom();\n\n    // Só atualizar se as configurações realmente mudaram\n    if (currentCenter[0] !== newCenter[0] || currentCenter[1] !== newCenter[1] || currentZoom !== newZoom) {\n      view.setCenter(fromLonLat(newCenter));\n      view.setZoom(newZoom);\n    }\n  }, [center, zoom]);\n\n  // Inicializar mapa quando componente montar\n  useEffect(() => {\n    initializeMap();\n\n    return () => {\n      if (map.current) {\n        map.current.setTarget(undefined);\n        map.current = null;\n      }\n    };\n  }, [initializeMap]);\n\n  // Atualizar configurações quando props mudarem\n  useEffect(() => {\n    updateMapConfig();\n  }, [updateMapConfig]);\n\n  return (\n    <MapWrapper ref={mapContainer}>\n      {/* Mapa base OpenLayers */}\n      {map.current && (\n        <>\n          {/* Componente de marcadores */}\n          <OpenLayersMarkers\n            dataPoints={dataPoints}\n            onPainelOpen={onPainelOpen}\n            showMarcadores={showMarcadores}\n            showNomesEscolas={showNomesEscolas}\n            map={map.current}\n          />\n\n          {/* Componente de camadas GeoJSON */}\n          <OpenLayersLayers\n            terrasIndigenasData={terrasIndigenasData}\n            estadoSPData={estadoSPData}\n            showTerrasIndigenas={showTerrasIndigenas}\n            showEstadoSP={showEstadoSP}\n            onPainelOpen={onPainelOpen}\n            map={map.current}\n          />\n        </>\n      )}\n    </MapWrapper>\n  );\n};\n\nexport default OpenLayersMap; ","import { useState, useEffect } from 'react';\n\n// Um objeto simples para armazenar os dados GeoJSON em memória.\nconst cache = {};\n\nexport const useGeoJSONCache = (key) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!key) return;\n\n    const fetchGeoJSON = async () => {\n      if (cache[key]) {\n         console.log(`useGeoJSONCache: Dados de ${key} encontrados no cache`);\n         setData(cache[key]);\n         return;\n      }\n      setLoading(true);\n      try {\n         const url = `${process.env.PUBLIC_URL}/${key}.geojson`;\n         console.log(`useGeoJSONCache: Carregando ${key} de:`, url);\n         const response = await fetch(url);\n         if (!response.ok) throw new Error(`Erro ao buscar GeoJSON (${response.status})`);\n         const geoJSON = await response.json();\n         console.log(`useGeoJSONCache: ${key} carregado com sucesso:`, {\n           type: geoJSON.type,\n           features: geoJSON.features?.length || 0,\n           crs: geoJSON.crs,\n           firstFeature: geoJSON.features?.[0] ? {\n             type: geoJSON.features[0].type,\n             properties: geoJSON.features[0].properties ? Object.keys(geoJSON.features[0].properties) : 'Sem propriedades',\n             geometry: geoJSON.features[0].geometry ? {\n               type: geoJSON.features[0].geometry.type,\n               coordinates: geoJSON.features[0].geometry.coordinates ? \n                 `${geoJSON.features[0].geometry.coordinates.length} arrays` : 'Sem coordenadas'\n             } : 'Sem geometria'\n           } : 'Nenhum feature'\n         });\n         cache[key] = geoJSON;\n         setData(geoJSON);\n      } catch (err) {\n         console.error(`useGeoJSONCache: Erro ao carregar ${key}:`, err);\n         setError(err);\n      } finally {\n         setLoading(false);\n      }\n    };\n\n    fetchGeoJSON();\n  }, [key]);\n\n  return { data, loading, error };\n}; ","import React, { useState, useEffect, useCallback } from 'react';\nimport OpenLayersMap from './OpenLayersMap';\nimport { useGeoJSONCache } from '../hooks/useGeoJSONCache';\nimport { MAP_CONFIG } from '../utils/mapConfig';\n\nconst MapSelector = ({ \n  dataPoints, \n  onPainelOpen, \n  painelAberto = false,\n  className = \"h-screen w-full\"\n}) => {\n  // Carregar dados GeoJSON\n  const { data: terrasIndigenasData, loading: terrasLoading, error: terrasError } = useGeoJSONCache('terras_indigenas');\n  const { data: estadoSPData, loading: estadoLoading, error: estadoError } = useGeoJSONCache('SP');\n\n  // Estados para controlar visibilidade das camadas\n  const [showTerrasIndigenas, setShowTerrasIndigenas] = useState(true);\n  const [showEstadoSP, setShowEstadoSP] = useState(true);\n\n  // Estado para controlar visibilidade dos marcadores\n  const [showMarcadores, setShowMarcadores] = useState(true);\n\n  // Estados para responsividade\n  const [isMobile, setIsMobile] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  // Função para verificar se é mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  useEffect(() => {\n    // Verifica no carregamento inicial\n    checkMobile();\n    \n    // Adiciona listener de resize\n    window.addEventListener(\"resize\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Handler para minimizar/expandir\n  const handleMinimize = useCallback(() => setIsMinimized(prev => !prev), []);\n\n  // Log de status das camadas\n  useEffect(() => {\n    console.log('MapSelector: Status das camadas GeoJSON:', {\n      terrasIndigenas: {\n        loading: terrasLoading,\n        error: terrasError,\n        hasData: !!terrasIndigenasData,\n        features: terrasIndigenasData?.features?.length || 0,\n        type: terrasIndigenasData?.type,\n        firstFeature: terrasIndigenasData?.features?.[0] ? {\n          type: terrasIndigenasData.features[0].type,\n          properties: terrasIndigenasData.features[0].properties ? Object.keys(terrasIndigenasData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      },\n      estadoSP: {\n        loading: estadoLoading,\n        error: estadoError,\n        hasData: !!estadoSPData,\n        features: estadoSPData?.features?.length || 0,\n        type: estadoSPData?.type,\n        firstFeature: estadoSPData?.features?.[0] ? {\n          type: estadoSPData.features[0].type,\n          properties: estadoSPData.features[0].properties ? Object.keys(estadoSPData.features[0].properties) : 'Sem propriedades'\n        } : 'Nenhum feature'\n      }\n    });\n  }, [terrasIndigenasData, estadoSPData, terrasLoading, estadoLoading, terrasError, estadoError]);\n\n  useEffect(() => {\n    console.log('MapSelector: useEffect painelAberto mudou:', {\n      painelAberto,\n      isMobile,\n      showMarcadores,\n      shouldReactivate: !painelAberto && isMobile\n    });\n    \n    if (!painelAberto && isMobile) {\n      console.log('MapSelector: Painel fechado em mobile, reativando marcadores');\n      setShowMarcadores(true);\n    }\n  }, [painelAberto, isMobile]);\n\n  // Log para monitorar mudanças no showMarcadores\n  useEffect(() => {\n    console.log('MapSelector: showMarcadores mudou para:', showMarcadores);\n  }, [showMarcadores]);\n\n    // Componente para o cabeçalho do menu\n  const CabecalhoMenu = ({ onMinimize, isMobile, isMinimized }) => (\n    <div className=\"flex items-center justify-between px-4 py-3 bg-gradient-to-r from-green-700 to-green-800 text-white\">\n      <div className=\"flex items-center gap-2\">\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m-6 3l6-3\" />\n        </svg>\n        <h3 className=\"text-sm font-semibold tracking-wide\">Camadas do Mapa</h3>\n      </div>\n      <button\n        onClick={onMinimize}\n        className=\"text-green-100 hover:text-white hover:bg-green-600 transition-all duration-200 p-1.5 rounded-md\"\n        aria-label={isMinimized ? \"Expandir\" : \"Minimizar\"}\n        type=\"button\"\n      >\n        {isMinimized ? (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        ) : (\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\n          </svg>\n        )}\n      </button>\n    </div>\n  );\n\n  // Componente para botão de camada\n  const BotaoCamada = ({ id, label, checked, onChange, disabled = false, loading = false, error = false, total, color, subItems = null }) => (\n    <button\n      type=\"button\"\n      onClick={onChange}\n      disabled={disabled}\n      className={`group w-full flex items-center gap-3 px-4 py-3 rounded-lg transition-all duration-200 ${\n        checked \n          ? 'bg-green-50 shadow-sm' \n          : 'bg-white hover:bg-green-50/50'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}`}\n    >\n      {/* Indicador de cor principal */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Para Terras Indígenas com subcategorias\n          <div className=\"flex flex-col gap-1.5\">\n            {subItems.map((item, index) => (\n              <div key={index} className=\"flex items-center gap-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full shadow-sm\" \n                  style={{ backgroundColor: item.color }}\n                />\n                <span className=\"text-xs font-medium text-gray-700\">{item.label}</span>\n              </div>\n            ))}\n          </div>\n        ) : (\n          // Para outras camadas\n          <div \n            className={`w-4 h-4 rounded-full shadow-sm ${\n              checked ? 'ring-2 ring-green-200' : ''\n            }`}\n            style={{ backgroundColor: color }}\n          />\n        )}\n      </div>\n      \n      {/* Conteúdo principal */}\n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex items-center gap-2\">\n          <span className={`text-sm font-medium ${\n            checked ? 'text-green-900' : 'text-gray-800'\n          }`}>\n            {label}\n          </span>\n          \n          {total !== undefined && (\n            <span className={`text-xs px-2 py-0.5 rounded-full ${\n              checked \n                ? 'bg-green-100 text-green-700' \n                : 'bg-gray-100 text-gray-600'\n            }`}>\n              {total}\n            </span>\n          )}\n        </div>\n        \n        {/* Status indicators */}\n        <div className=\"flex items-center gap-2 mt-1\">\n          {loading && (\n            <div className=\"flex items-center gap-1 text-blue-600\">\n              <svg className=\"w-3 h-3 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n              </svg>\n              <span className=\"text-xs\">Carregando...</span>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"flex items-center gap-1 text-red-600\">\n              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <span className=\"text-xs\">Erro</span>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Indicador de estado */}\n      <div className=\"flex-shrink-0\">\n        {subItems ? (\n          // Indicador para Terras Indígenas\n                  <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n      ) : (\n        // Indicador para outras camadas\n        <div className={`w-3 h-3 rounded-full transition-colors duration-200 ${\n          checked ? 'bg-green-600' : 'bg-gray-300'\n        }`} />\n        )}\n      </div>\n    </button>\n  );\n\n  // Definir center/zoom iniciais conforme dispositivo\n  const mapCenter = isMobile ? MAP_CONFIG.mobile.center : MAP_CONFIG.center;\n  const mapZoom = isMobile ? MAP_CONFIG.mobile.zoom : MAP_CONFIG.zoom;\n\n  // Log para debug do zoom\n  console.log('MapSelector - Debug zoom:', {\n    isMobile,\n    mobileZoom: MAP_CONFIG.mobile.zoom,\n    desktopZoom: MAP_CONFIG.zoom,\n    selectedZoom: mapZoom,\n    mobileCenter: MAP_CONFIG.mobile.center,\n    desktopCenter: MAP_CONFIG.center,\n    selectedCenter: mapCenter\n  });\n\n  return (\n    <div className={className} style={{ position: 'relative' }}>\n      {/* Controles de camadas responsivos */}\n      {isMobile ? (\n        // Menu mobile - fixo na parte inferior\n        <div className=\"fixed bottom-0 left-0 right-0 z-20\">\n          <div className=\"bg-white shadow-2xl rounded-t-2xl\">\n            <CabecalhoMenu\n              onMinimize={handleMinimize}\n              isMobile={true}\n              isMinimized={isMinimized}\n            />\n            {!isMinimized && (\n              <div className=\"p-4 flex flex-col gap-3 max-h-80 overflow-y-auto\">\n                <BotaoCamada\n                  id=\"estado-sp\"\n                  label=\"Estado de São Paulo\"\n                  checked={showEstadoSP}\n                  onChange={() => setShowEstadoSP(!showEstadoSP)}\n                  loading={estadoLoading}\n                  error={estadoError}\n                  color=\"#10B981\"\n                />\n                <BotaoCamada\n                  id=\"marcadores\"\n                  label=\"Escolas Indígenas\"\n                  checked={showMarcadores}\n                  onChange={() => setShowMarcadores(!showMarcadores)}\n                  total={dataPoints?.length}\n                  color=\"#3B82F6\"\n                />\n                <BotaoCamada\n                  id=\"terras-indigenas\"\n                  label=\"Terras Indígenas\"\n                  checked={showTerrasIndigenas}\n                  onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                  loading={terrasLoading}\n                  error={terrasError}\n                  subItems={[\n                    { label: \"Regularizadas\", color: \"#DC143C\" },\n                    { label: \"Declaradas\", color: \"#8B0000\" }\n                  ]}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Menu desktop - fixo no topo direito\n        <div className=\"fixed top-24 right-4 w-72 bg-white rounded-2xl shadow-2xl z-20 overflow-hidden\">\n          <CabecalhoMenu\n            onMinimize={handleMinimize}\n            isMobile={false}\n            isMinimized={isMinimized}\n          />\n          {!isMinimized && (\n            <div className=\"p-4 flex flex-col gap-3 max-h-96 overflow-y-auto\">\n              <BotaoCamada\n                id=\"estado-sp\"\n                label=\"Estado de São Paulo\"\n                checked={showEstadoSP}\n                onChange={() => setShowEstadoSP(!showEstadoSP)}\n                loading={estadoLoading}\n                error={estadoError}\n                color=\"#10B981\"\n              />\n              <BotaoCamada\n                id=\"marcadores\"\n                label=\"Escolas Indígenas\"\n                checked={showMarcadores}\n                onChange={() => setShowMarcadores(!showMarcadores)}\n                total={dataPoints?.length}\n                color=\"#3B82F6\"\n              />\n              <BotaoCamada\n                id=\"terras-indigenas\"\n                label=\"Terras Indígenas\"\n                checked={showTerrasIndigenas}\n                onChange={() => setShowTerrasIndigenas(!showTerrasIndigenas)}\n                loading={terrasLoading}\n                error={terrasError}\n                subItems={[\n                  { label: \"Regularizadas\", color: \"#DC143C\" },\n                  { label: \"Declaradas\", color: \"#8B0000\" }\n                ]}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Mapa OpenLayers unificado */}\n      <OpenLayersMap\n        dataPoints={showMarcadores ? dataPoints : []}\n        onPainelOpen={onPainelOpen}\n        className=\"h-full w-full\"\n        center={mapCenter}\n        zoom={mapZoom}\n        // Props para camadas GeoJSON\n        terrasIndigenasData={terrasIndigenasData}\n        estadoSPData={estadoSPData}\n        showTerrasIndigenas={showTerrasIndigenas}\n        showEstadoSP={showEstadoSP}\n        // Props para marcadores\n        showMarcadores={showMarcadores}\n      />\n    </div>\n  );\n};\n\nexport default MapSelector; ","// Central slug utility for the project\nexport const criarSlug = (texto) => {\n  return texto\n    .toLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '') // Remove acentos\n    .replace(/[^a-z0-9]+/g, '-') // Substitui caracteres especiais por hífen\n    .replace(/^-+|-+$/g, '') // Remove hífens do início e fim\n    .trim();\n}; ","import { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\n\nconst useDocumentosEscola = (escolaId) => {\n  const [documentos, setDocumentos] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDocumentos = async () => {\n      console.log('🔄 Iniciando busca de documentos para escola:', escolaId, 'tipo:', typeof escolaId);\n      \n      if (!escolaId) {\n        console.log('⚠️ Nenhum ID de escola fornecido, retornando array vazio');\n        setDocumentos([]);\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        console.log('📡 Consultando tabela documentos_escola...');\n        \n        // Verificar conexão com Supabase\n        const { data: authData, error: authError } = await supabase.auth.getSession();\n        console.log('🔐 Estado da autenticação:', {\n          temSessao: !!authData?.session,\n          error: authError\n        });\n\n        // Verificar permissões da tabela\n        const { data: rlsData, error: rlsError } = await supabase\n          .from('documentos_escola')\n          .select('count')\n          .limit(1);\n\n        console.log('🔑 Verificação de permissões:', {\n          podeAcessar: !rlsError,\n          error: rlsError ? {\n            code: rlsError.code,\n            message: rlsError.message,\n            details: rlsError.details,\n            hint: rlsError.hint\n          } : null\n        });\n\n        // Primeiro, vamos verificar todos os documentos para debug\n        const { data: allDocs, error: allDocsError } = await supabase\n          .from('documentos_escola')\n          .select('*');\n\n        if (allDocsError) {\n          console.error('❌ Erro ao buscar todos os documentos:', {\n            code: allDocsError.code,\n            message: allDocsError.message,\n            details: allDocsError.details,\n            hint: allDocsError.hint\n          });\n        } else {\n          console.log('📊 Todos os documentos na tabela:', allDocs);\n          if (allDocs && allDocs.length > 0) {\n            console.log('📊 Exemplo de documento:', allDocs[0]);\n            console.log('📊 Tipos de escola_id encontrados:', allDocs.map(doc => ({\n              id: doc.id,\n              escola_id: doc.escola_id,\n              tipo_escola_id: typeof doc.escola_id,\n              valor_escola_id: doc.escola_id\n            })));\n          } else {\n            console.log('⚠️ Tabela está vazia ou não temos permissão para ver os dados');\n          }\n        }\n        \n        // Agora vamos buscar os documentos específicos\n        console.log('🔍 Buscando documentos para escola_id:', escolaId);\n        const { data, error } = await supabase\n          .from('documentos_escola')\n          .select('*')\n          .eq('escola_id', escolaId.toString()) // Convertendo para string para garantir\n          .order('created_at', { ascending: false });\n\n        if (error) {\n          console.error('❌ Erro na consulta Supabase:', {\n            code: error.code,\n            message: error.message,\n            details: error.details,\n            hint: error.hint\n          });\n          throw error;\n        }\n\n        console.log('✅ Documentos encontrados:', data?.length || 0);\n        if (data?.length === 0) {\n          console.log('ℹ️ Nenhum documento encontrado para a escola ID:', escolaId);\n          console.log('ℹ️ Tentando buscar com diferentes formatos de escola_id...');\n          \n          // Tentando diferentes formatos do ID\n          const { data: dataAsNumber, error: errorAsNumber } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', Number(escolaId));\n            \n          const { data: dataAsString, error: errorAsString } = await supabase\n            .from('documentos_escola')\n            .select('*')\n            .eq('escola_id', String(escolaId));\n            \n          console.log('Resultados com escola_id como número:', {\n            count: dataAsNumber?.length || 0,\n            error: errorAsNumber\n          });\n          console.log('Resultados com escola_id como string:', {\n            count: dataAsString?.length || 0,\n            error: errorAsString\n          });\n        } else {\n          console.log('📄 Dados dos documentos:', data);\n        }\n        \n        setDocumentos(data || []);\n      } catch (err) {\n        console.error('❌ Erro ao buscar documentos:', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n        console.log('🏁 Estado final:', { \n          documentos: documentos.length, \n          isLoading, \n          error: error || 'nenhum' \n        });\n      }\n    };\n\n    fetchDocumentos();\n  }, [escolaId]);\n\n  return { documentos, isLoading, error };\n};\n\nexport default useDocumentosEscola; ","import React, { memo, useState } from 'react';\n\n// Componente InfoCard para informações individuais\nconst InfoCard = memo(({ label, value, icon: Icon, type = 'text', className = '' }) => {\n  if (!value && value !== 0) return null;\n\n  const renderValue = () => {\n    switch (type) {\n      case 'number':\n        return (\n          <div className=\"text-2xl font-bold text-green-800\">\n            {value.toLocaleString('pt-BR')}\n          </div>\n        );\n      case 'boolean':\n        return (\n          <div className={`px-3 py-1 rounded-full text-xs font-medium ${\n            value ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'\n          }`}>\n            {value ? 'Sim' : 'Não'}\n          </div>\n        );\n      case 'badge':\n        return (\n          <div className=\"flex flex-wrap gap-1\">\n            {Array.isArray(value) ? value.map((item, index) => (\n              <span key={index} className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {item}\n              </span>\n            )) : (\n              <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\n                {value}\n              </span>\n            )}\n          </div>\n        );\n      case 'link':\n        return (\n          <a \n            href={value} \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"text-green-700 hover:text-green-800 underline text-sm\"\n          >\n            {value}\n          </a>\n        );\n      default:\n        return (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`rounded-lg p-4 transition-all duration-200 ${className}`}>\n      <div className=\"flex items-center gap-2 mb-2\">\n        {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n        <span className=\"text-xs font-medium text-gray-600 uppercase tracking-wide\">\n          {label}\n        </span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n});\n\n// Componente InfoGrid para layout em grid\nconst InfoGrid = memo(({ children, columns = 'auto-fit', gap = 4, className = '' }) => {\n  const gridClasses = {\n    'auto-fit': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '2': 'grid-cols-1 sm:grid-cols-2',\n    '3': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',\n    '4': 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-4'\n  };\n\n  return (\n    <div className={`grid ${gridClasses[columns]} gap-${gap} ${className} [&>*]:bg-green-100`}>\n      {children}\n    </div>\n  );\n});\n\n// Componente InfoTable para dados tabulares\nconst InfoTable = memo(({ data, className = '' }) => {\n  if (!data || data.length === 0) return null;\n\n  return (\n    <div className={`bg-green-100 rounded-lg overflow-hidden ${className}`}>\n      <table className=\"w-full\">\n        <tbody>\n          {data.map((row, index) => (\n            <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-green-50'}>\n              <td className=\"px-4 py-3 text-sm font-medium text-gray-700 border-r border-green-200\">\n                {row.label}\n              </td>\n              <td className=\"px-4 py-3 text-sm text-gray-600\">\n                {row.value}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\n// Componente InfoStats para estatísticas com ícones\nconst InfoStats = memo(({ stats, className = '' }) => {\n  if (!stats || stats.length === 0) return null;\n\n  return (\n    <div className={`grid grid-cols-2 sm:grid-cols-4 gap-4 ${className} [&>*]:border-b [&>*]:border-gray-200 [&>*]:pb-2 [&>*]:mb-2`}>\n      {stats.map((stat, index) => (\n        <div key={index} className=\"text-center rounded-lg p-4\">\n          <div className=\"flex justify-center mb-2\">\n            {stat.icon && <stat.icon className=\"w-6 h-6 text-green-600\" />}\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {stat.value}\n          </div>\n          <div className=\"text-xs text-gray-600 mt-1\">\n            {stat.label}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n\n// Componente InfoSection refatorado\nconst InfoSection = memo(({ \n  title, \n  icon: Icon, \n  children, \n  description,\n  defaultCollapsed = false,\n  className = '',\n  layout = 'default', // 'default', 'grid', 'table', 'stats'\n  layoutProps = {}\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(defaultCollapsed);\n\n  const renderContent = () => {\n    if (!children) return null;\n\n    switch (layout) {\n      case 'grid':\n        return (\n          <InfoGrid {...layoutProps}>\n            {children}\n          </InfoGrid>\n        );\n      case 'table':\n        return (\n          <InfoTable data={layoutProps.data} className={layoutProps.className} />\n        );\n      case 'stats':\n        return (\n          <InfoStats stats={layoutProps.stats} className={layoutProps.className} />\n        );\n      default:\n        return (\n          <div className=\"space-y-4\">\n            {children}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <section \n      className={`\n        bg-white rounded-2xl p-5 \n        shadow-sm transition-all duration-200\n        ${className}\n      `}\n    >\n      <button\n        onClick={() => setIsCollapsed(!isCollapsed)}\n        className=\"\n          w-full flex items-center justify-between \n          text-base font-semibold\n          mb-4 text-gray-900 hover:text-gray-800 \n          transition-colors focus:outline-none\n        \"\n        aria-expanded={!isCollapsed}\n        aria-controls={`${title}-content`}\n      >\n        <div className=\"flex items-center gap-2\">\n          {Icon && <Icon className=\"w-5 h-5 text-green-600\" />}\n          <span className=\"tracking-wide\">{title}</span>\n        </div>\n      </button>\n      \n      {!isCollapsed && (\n        <div \n          id={`${title}-content`}\n          className=\"space-y-4\"\n          role=\"region\"\n          aria-labelledby={`${title}-button`}\n        >\n          {description && (\n            <div className=\"bg-green-100 rounded-lg p-4\">\n              <p className=\"text-gray-700 text-sm leading-relaxed\">\n                {description}\n              </p>\n            </div>\n          )}\n          {renderContent()}\n        </div>\n      )}\n    </section>\n  );\n});\n\n// Exportar todos os componentes\nexport { InfoCard, InfoGrid, InfoTable, InfoStats };\nexport default InfoSection; ","import React, { memo, useState } from 'react';\nimport {\n  MapPin,\n  Users,\n  Globe,\n  Calendar,\n  Building,\n  Link as LinkIcon,\n  ExternalLink,\n  ChevronRight,\n  Check,\n  X,\n  Navigation,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst capitalize = (str) => {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst CompactCard = ({ icon: Icon, label, value, type = 'text' }) => {\n  const renderValue = () => {\n    switch (type) {\n      case 'boolean':\n        return value ? (\n          <span className=\"flex items-center gap-1 text-green-600 text-sm\">\n            <Check className=\"w-5 h-5\" />\n            Sim\n          </span>\n        ) : (\n          <span className=\"flex items-center gap-1 text-red-500 text-sm\">\n            <X className=\"w-5 h-5\" />\n            Não\n          </span>\n        );\n      default:\n        return <span className=\"text-sm text-gray-800 truncate\">{value}</span>;\n    }\n  };\n\n  return (\n    <div className=\"p-1 rounded-md transition-all\">\n      <div className=\"flex items-center gap-1.5 mb-1\">\n        <Icon className=\"w-5 h-5 text-gray-600\" />\n        <span className=\"text-xs text-gray-500 font-medium\">{label}</span>\n      </div>\n      {renderValue()}\n    </div>\n  );\n};\n\nconst InfoBlock = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-center gap-2 bg-green-100 p-1.5 rounded-md text-xs\">\n    <Icon className=\"w-5 h-5 text-green-600\" />\n    <span className=\"text-gray-700 font-medium\">{label}:</span>\n    <span className=\"font-semibold text-green-800\">{capitalize(value)}</span>\n  </div>\n);\n\nconst AddressDetails = ({ escola }) => {\n  const hasDetailedAddress = escola.logradouro || escola.numero || escola.bairro || escola.cep;\n  \n  if (!hasDetailedAddress) {\n    return (\n      <div className=\"mt-2 p-2 bg-green-100 rounded-md\">\n        <p className=\"text-xs text-gray-700 leading-snug\">\n          {capitalize(escola.endereco)}\n        </p>\n      </div>\n    );\n  }\n\n  const addressFields = [\n    { field: 'logradouro', label: 'Logradouro' },\n    { field: 'numero', label: 'Número' },\n    { field: 'complemento', label: 'Complemento' },\n    { field: 'bairro', label: 'Bairro' },\n  ];\n\n  return (\n    <div className=\"mt-2 space-y-1\">\n      {addressFields.map(({ field, label }) => \n        escola[field] && (\n          <div key={field} className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n            <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <div className=\"text-xs font-medium text-gray-700 mb-0.5\">{label}</div>\n              <div className=\"text-xs text-gray-800 leading-snug\">{escola[field]}</div>\n            </div>\n          </div>\n        )\n      )}\n      \n      {(escola.cep || escola.estado) && (\n        <div className=\"flex items-start gap-2 p-1.5 bg-green-100 rounded-md\">\n          <MapPin className=\"w-5 h-5 text-gray-600 mt-0.5 flex-shrink-0\" />\n          <div className=\"flex-1\">\n            <div className=\"text-xs font-medium text-gray-700 mb-0.5\">Localização</div>\n            <div className=\"text-xs text-gray-800 leading-snug\">\n              {[escola.municipio, escola.estado, escola.cep].filter(Boolean).join(', ')}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst MapButton = ({ escola }) => {\n  const hasCoordinates = escola.Latitude && escola.Longitude;\n  \n  if (!hasCoordinates) return null;\n\n  const openMap = () => {\n    window.open(`https://www.google.com/maps?q=${escola.Latitude},${escola.Longitude}`, '_blank');\n  };\n\n  return (\n    <button\n      onClick={openMap}\n      className=\"mt-2 w-full flex items-center justify-center gap-2 p-2 bg-green-600 hover:bg-green-700 text-white rounded-md transition-colors text-xs font-medium\"\n    >\n      <Navigation className=\"w-5 h-5\" />\n      Ver no Google Maps\n    </button>\n  );\n};\n\nconst SocialLinks = ({ links, expanded, onToggle }) => {\n  const socialLinks = (links || '').split(',').map(url => url.trim()).filter(Boolean);\n  \n  if (socialLinks.length === 0) return null;\n\n  return (\n    <div className=\"bg-green-100 rounded-md\">\n      <button\n        onClick={() => onToggle('social')}\n        className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n        aria-expanded={expanded.social}\n      >\n        <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n          <Globe className=\"w-5 h-5 text-blue-600\" />\n          Redes sociais ({socialLinks.length})\n        </span>\n        <ChevronRight\n          className={`w-5 h-5 text-gray-400 transition-transform ${\n            expanded.social ? 'rotate-90' : ''\n          }`}\n        />\n      </button>\n      \n      {expanded.social && (\n        <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n          <div className=\"mt-1 space-y-1\">\n            {socialLinks.map((link, index) => (\n              <a\n                key={index}\n                href={link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"flex items-center gap-1.5 p-1.5 bg-green-100 rounded-md hover:bg-green-200 group text-xs\"\n              >\n                <LinkIcon className=\"w-5 h-5 text-blue-600\" />\n                <span className=\"truncate flex-1 text-gray-700\">{link}</span>\n                <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600\" />\n              </a>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst BasicInfo = memo(({ escola }) => {\n  const [expanded, setExpanded] = useState({});\n\n  if (!escola) return null;\n\n  const toggle = (key) => {\n    setExpanded(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const basicInfoCards = [\n    {\n      icon: Building,\n      label: 'Município',\n      value: capitalize(escola.municipio),\n    },\n    {\n      icon: Calendar,\n      label: 'Fundação',\n      value: escola.ano_criacao,\n    },\n    {\n      icon: Globe,\n      label: 'Redes sociais',\n      value: escola.usa_redes_sociais,\n      type: 'boolean',\n    },\n  ].filter(item => item.value);\n\n  return (\n    <>\n      {/* Povos Indígenas em destaque antes de tudo */}\n      {escola.povos_indigenas && (\n        <div className=\"mb-4\">\n          <div className=\"text-lg sm:text-xl font-bold text-green-800\">\n            Povos Indígenas: <span className=\"font-semibold text-black\">{escola.povos_indigenas}</span>\n          </div>\n        </div>\n      )}\n      <InfoSection title=\"Localização\" icon={MapPin}>\n        {/* Cards informativos básicos */}\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mb-3 [&>*]:bg-green-100\">\n          {basicInfoCards.map((item, index) => (\n            <CompactCard key={index} {...item} />\n          ))}\n        </div>\n\n        <div className=\"space-y-1.5\">\n          {/* Diretoria de ensino */}\n          {escola.diretoria_ensino && (\n            <InfoBlock \n              icon={Building} \n              label=\"Diretoria de ensino\" \n              value={escola.diretoria_ensino} \n            />\n          )}\n\n          {/* Gaveta do endereço */}\n          {escola.endereco && (\n            <div className=\"bg-green-100 rounded-md\">\n              <button\n                onClick={() => toggle('endereco')}\n                className=\"w-full flex justify-between items-center p-1.5 hover:bg-green-200 text-xs\"\n                aria-expanded={expanded.endereco}\n              >\n                <span className=\"flex items-center gap-2 text-gray-700 font-medium\">\n                  <Building className=\"w-5 h-5\" />\n                  Endereço\n                </span>\n                <ChevronRight\n                  className={`w-5 h-5 text-gray-400 transition-transform ${\n                    expanded.endereco ? 'rotate-90' : ''\n                  }`}\n                />\n              </button>\n              {expanded.endereco && (\n                <div className=\"px-2 pb-2 border-t border-green-200 bg-white\">\n                  <AddressDetails escola={escola} />\n                  <MapButton escola={escola} />\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Redes sociais */}\n          <SocialLinks \n            links={escola.links_redes_sociais}\n            expanded={expanded}\n            onToggle={toggle}\n          />\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default BasicInfo;","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { X, RefreshCw } from 'lucide-react';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { supabase } from '../../../supabaseClient';\n\nconst ImagensdasEscolas = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [error, setError] = useState('');\n  const cacheRef = useRef({});\n  const [cacheVersion, setCacheVersion] = useState(0); // Para forçar recarga\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagensdasEscolas: refreshKey mudou, forçando recarga');\n      limparCacheERecarregar();\n    }\n  }, [refreshKey]);\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    document.body.style.overflow = 'auto';\n  }, []);\n\n  // ESC para fechar\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Função para limpar cache e recarregar\n  const limparCacheERecarregar = useCallback(() => {\n    console.log('Limpando cache e recarregando imagens...');\n    cacheRef.current = {};\n    setCacheVersion(prev => prev + 1);\n    setImagens([]);\n    setLoading(true);\n    setError('');\n  }, []);\n\n  useEffect(() => {\n    if (!escola_id) {\n      setLoading(false);\n      return;\n    }\n\n    // Verificar se há cache válido (com versão)\n    const cacheKey = `${escola_id}_v${cacheVersion}`;\n    if (cacheRef.current[cacheKey]) {\n      console.log('Usando cache para escola', escola_id);\n      setImagens(cacheRef.current[cacheKey]);\n      setLoading(false);\n      return;\n    }\n\n    const buscarImagens = async () => {\n      console.log('Buscando imagens para escola', escola_id);\n      \n      try {\n        // Usar a mesma abordagem do painel de edição: listar arquivos do bucket\n        const { data: files, error } = await supabase.storage\n          .from('imagens-das-escolas')\n          .list(`${escola_id}/`);\n\n        if (error) {\n          throw error;\n        }\n\n        if (!files || files.length === 0) {\n          console.log('Nenhum arquivo encontrado para escola', escola_id);\n          setImagens([]);\n          setLoading(false);\n          return;\n        }\n\n        console.log('Arquivos encontrados:', files.length);\n\n        // Processar cada arquivo encontrado\n        const imagensEncontradas = await Promise.all(\n          files.map(async (file, index) => {\n            const filePath = `${escola_id}/${file.name}`;\n            const { data: { publicUrl } } = supabase.storage\n              .from('imagens-das-escolas')\n              .getPublicUrl(filePath);\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              console.log('Buscando legenda para:', filePath);\n              legenda = await getLegendaByImageUrl(filePath, escola_id, 'escola');\n              console.log('Legenda encontrada:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda para', filePath, ':', error);\n            }\n\n            return {\n              id: `${escola_id}-${file.name}`,\n              publicURL: publicUrl,\n              descricao: legenda?.legenda || `Imagem ${index + 1}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n              urlError: null,\n            };\n          })\n        );\n\n        console.log('Imagens processadas:', imagensEncontradas.length);\n        \n        // Salvar no cache com versão\n        cacheRef.current[cacheKey] = imagensEncontradas;\n        setImagens(imagensEncontradas);\n        \n        if (imagensEncontradas.length === 0) {\n          setError('Nenhuma imagem encontrada para esta escola.');\n        }\n      } catch (error) {\n        console.error('Erro ao processar imagens:', error);\n        setError('Erro ao carregar imagens da escola.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarImagens();\n  }, [escola_id, cacheVersion]);\n\n  if (loading) {\n    return (\n      <div className=\"text-gray-500 flex items-center gap-2\">\n        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n        Carregando imagens da escola...\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"text-red-600 flex items-center gap-2\">\n        <span>{error}</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (!imagens.length) {\n    return (\n      <div className=\"text-yellow-700 flex items-center gap-2\">\n        <span>Nenhuma imagem encontrada para esta escola.</span>\n        <button \n          onClick={limparCacheERecarregar}\n          className=\"text-blue-600 hover:text-blue-800\"\n          title=\"Tentar novamente\"\n        >\n          <RefreshCw className=\"w-5 h-5\" />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && setImagemZoom(img)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.descricao}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.descricao && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.descricao}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom */}\n      {imagemZoom && (\n        <div\n          className=\"fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4 cursor-zoom-out\"\n          onClick={fecharZoom}\n        >\n          <button\n            onClick={fecharZoom}\n            className=\"absolute top-4 right-4 text-white hover:text-red-400 transition\"\n            aria-label=\"Fechar\"\n          >\n            <X size={32} />\n          </button>\n          \n          <div className=\"max-w-4xl max-h-full\">\n          <img\n            src={imagemZoom.publicURL}\n            alt={imagemZoom.descricao}\n            className=\"max-w-full max-h-full rounded-lg shadow-2xl border-4 border-white\"\n            onClick={(e) => e.stopPropagation()}\n          />\n            \n            {/* Legenda no modal */}\n            {imagemZoom.descricao && (\n              <div className=\"mt-4 bg-white rounded-lg p-4 shadow-lg\">\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\n                  {imagemZoom.descricao}\n                </h3>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-sm text-gray-600 mb-2\">\n                  {imagemZoom.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {imagemZoom.categoria}\n                    </span>\n                  )}\n                  {imagemZoom.autor && (\n                    <span>Fotógrafo: {imagemZoom.autor}</span>\n                  )}\n                  {imagemZoom.dataFoto && (\n                    <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {imagemZoom.descricaoDetalhada && (\n                  <p className=\"text-gray-700 leading-relaxed\">\n                    {imagemZoom.descricaoDetalhada}\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagensdasEscolas.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagensdasEscolas);\n","import React, { memo } from 'react';\nimport ImagensdasEscolas from '../ImagensdasEscolas';\nimport './HistoriaEscola.css';\n\nconst HistoriaEscola = memo(({ escola, refreshKey = 0 }) => {\n  if (!escola?.historia_da_escola) return null;\n\n  // Usar o HTML diretamente, igual à história dos professores\n  const htmlContent = escola.historia_da_escola;\n\n  return (\n    <article\n      className={`\n        mt-8 mb-12\n        max-w-4xl mx-auto\n        prose\n        prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900\n        prose-p:text-green-800\n        prose-p:leading-relaxed\n        prose-p:text-justify\n        prose-img:rounded-xl\n        prose-img:shadow-lg\n        prose-a:text-green-700\n        prose-a:no-underline\n        prose-a:border-b-2\n        prose-a:border-green-100\n        prose-a:transition-colors\n        hover:prose-a:border-green-600\n        bg-white\n        rounded-2xl\n        px-4 sm:px-6 md:px-8 py-6\n        shadow-lg\n      `}\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center gap-3 mb-3 sm:mb-4\">\n          <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n            <img \n              src={`${process.env.PUBLIC_URL}/onca.svg`} \n              alt=\"Ícone de onça\" \n              className=\"w-32 h-32 sm:w-36 sm:h-36\" \n              style={{ filter: 'none', borderRadius: '0', boxShadow: 'none', marginTop: '80px' }}\n              aria-hidden=\"true\"\n            />\n          </span>\n          <h2 className=\"text-xl sm:text-2xl font-bold text-green-900 m-0\">\n            História da Escola\n          </h2>\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      <div className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        <div \n          className=\"historia-escola-content prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\n            prose-headings:text-green-900 prose-p:text-green-800 prose-p:leading-relaxed prose-p:text-justify\n            prose-img:rounded-xl prose-img:shadow-lg\n            prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n            prose-strong:text-green-800 prose-em:text-green-700\n            prose-blockquote:border-l-green-300 prose-blockquote:bg-green-50 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r-lg\n            prose-ul:text-green-800 prose-ol:text-green-800 prose-li:text-green-800\n            prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm\"\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\n        />\n      </div>\n\n      {/* Imagens da escola, responsivas e modulares */}\n      <ImagensdasEscolas escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriaEscola; ","import React, { memo } from 'react';\n\nconst BooleanValue = memo(({ value }) => {\n  if (value === undefined || value === null) return null;\n\n  return (\n    <span className={`font-medium ${value ? 'text-green-600' : 'text-neutral-400'}`}>\n      {value ? 'Sim' : 'Não'}\n    </span>\n  );\n});\n\nexport default BooleanValue; ","import React, { memo, useState } from 'react';\nimport { Sparkles, BookOpen, Users, MessageCircle, Clock } from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../../components/BooleanValue';\n\n// Função utilitária para transformar o texto em lista\nfunction parseModalidadeEnsino(text) {\n  if (!text || typeof text !== 'string') return [];\n  // Divide pelo traço longo (–, U+2013) e remove espaços extras\n  return text\n    .split('–')\n    .map(item => item.trim())\n    .filter(Boolean);\n}\n\n// Componente de lista expansível\nconst ExpandableList = ({ items, maxVisible = 3 }) => {\n  if (!items || items.length === 0) return null;\n\n  return (\n    <div className=\"-mt-1\">\n      <ul className=\"list-none text-gray-800 text-xs pl-0 ml-0\">\n        {items.map((item, idx) => (\n          <li key={idx} className=\"leading-tight m-0 p-0 pl-0 ml-0 flex items-start\">\n            <span className=\"mr-1 text-green-700 select-none\" style={{minWidth: '1em', display: 'inline-block'}}>•</span>\n            <span>{item}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// MiniCard padronizado\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium p-0 m-0\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Modalidades = memo(({ escola }) => {\n  if (!escola) return null;\n\n  // Cards principais de Modalidades\n  const turnosValue = escola.turnos_funcionamento || escola['turnos_funcionamento'] || '';\n  const modalidadeList = parseModalidadeEnsino(escola.modalidade_ensino);\n  \n  // Card de Modalidade de Ensino (separado para ocupar linha inteira)\n  const modalidadeEnsinoCard = {\n    icon: Sparkles,\n    label: 'Modalidade de Ensino',\n    value: <ExpandableList items={modalidadeList} maxVisible={3} />,\n  };\n\n  // Outros cards para o grid\n  const gridItems = [\n    turnosValue && {\n      icon: Clock,\n      label: 'Turnos de Funcionamento',\n      value: turnosValue,\n    },\n    {\n      icon: Users,\n      label: 'Número de Alunos',\n      value: escola.numero_alunos,\n    },\n    {\n      icon: MessageCircle,\n      label: 'Línguas Faladas',\n      value: escola.linguas_faladas,\n    },\n  ].filter(Boolean);\n\n  // Cards de Materiais Pedagógicos\n  const materiaisItems = [\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Não Indígena',\n      value: <BooleanValue value={escola.material_nao_indigena} />,\n    },\n    {\n      icon: BookOpen,\n      label: 'Material Pedagógico Indígena',\n      value: <BooleanValue value={escola.material_indigena} />,\n    },\n  ];\n\n  return (\n    <>\n      <InfoSection title=\"Modalidades\" icon={Sparkles}>\n        {/* Modalidade de Ensino em linha inteira */}\n        <div className=\"mb-4 bg-green-100 rounded-lg p-2\">\n          <ExpandableList items={modalidadeList} maxVisible={3} />\n        </div>\n        \n        {/* Grid com os outros cards */}\n        <div\n          className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\"\n        >\n          {gridItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n      \n      <InfoSection \n        title=\"Materiais Pedagógicos\" \n        icon={BookOpen}\n        description=\"Diferenciados e não diferenciados, produzidos dentro e fora da comunidade.\"\n      >\n        <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-1 [&>*]:bg-green-100\">\n          {materiaisItems.map((item, idx) => (\n            <MiniCard key={idx} icon={item.icon} label={item.label} value={item.value} />\n          ))}\n        </div>\n      </InfoSection>\n    </>\n  );\n});\n\nexport default Modalidades; ","import React, { memo } from 'react';\nimport {\n  Home,\n  Droplet,\n  Trash2,\n  Wifi,\n  Monitor,\n  MapPin,\n  Utensils,\n  Apple,\n  ChefHat,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\nimport BooleanValue from '../BooleanValue';\n\nconst MiniCard = ({ icon: Icon, label, value }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium\">{value}</div>\n    </div>\n  </div>\n);\n\nconst Infraestrutura = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const items = [\n    {\n      icon: Droplet,\n      label: 'Acesso à Água',\n      value: escola.acesso_agua,\n    },\n    {\n      icon: Trash2,\n      label: 'Coleta de Lixo',\n      value: escola.coleta_lixo,\n    },\n    {\n      icon: Wifi,\n      label: 'Acesso à Internet',\n      value: <BooleanValue value={escola.acesso_internet} />,\n    },\n    {\n      icon: Monitor,\n      label: 'Equipamentos Tecnológicos',\n      value: escola.equipamentos,\n    },\n    {\n      icon: MapPin,\n      label: 'Modo de Acesso à Escola',\n      value: escola.modo_acesso,\n    },\n    {\n      icon: Utensils,\n      label: 'Cozinha',\n      value: <BooleanValue value={escola.cozinha} />,\n    },\n    {\n      icon: Apple,\n      label: 'Merenda Escolar',\n      value: <BooleanValue value={escola.merenda_escolar} />,\n    },\n    {\n      icon: ChefHat,\n      label: 'Merenda Diferenciada',\n      value: <BooleanValue value={escola.diferenciada} />,\n    },\n  ];\n\n  return (\n    <InfoSection title=\"Infraestrutura\" icon={Home}>\n      {escola.espaco_escolar && (\n        <div className=\"p-2 text-sm text-gray-800 border-b border-gray-200 whitespace-pre-wrap\">\n          {escola.espaco_escolar}\n        </div>\n      )}\n      <div className=\"grid grid-cols-[repeat(auto-fit,minmax(120px,1fr))] gap-2 mt-3 [&>*]:bg-green-100\">\n        {items.map((item, idx) => (\n          <MiniCard\n            key={idx}\n            icon={item.icon}\n            label={item.label}\n            value={item.value}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default Infraestrutura;\n","import React, { memo } from 'react';\nimport {\n  UsersRound,\n  Star,\n  User,\n  UserCheck,\n  UserMinus,\n  MessageCircle,\n  NotebookPen,\n  Check,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst MiniCard = ({ icon: Icon, label, value, description }) => (\n  <div className=\"flex items-start gap-2 rounded-lg p-2 text-sm\">\n    <Icon className=\"w-6 h-6 text-gray-600 mt-0.5 flex-shrink-0\" />\n    <div className=\"flex-1\">\n      <div className=\"text-xs text-gray-500\">{label}</div>\n      <div className=\"text-gray-800 font-medium mt-0.5\">{value}</div>\n      {description && (\n        <div className=\"text-xs text-gray-600 mt-1 whitespace-pre-line\">\n          {description}\n        </div>\n      )}\n    </div>\n  </div>\n);\n\nconst formatarNomeProfessor = (nome) => {\n  if (!nome) return nome;\n\n  const padroesIndigenas = [\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+\\(([^)]+)\\)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+-\\s+([^)]+)/,\n    /^([A-Z][a-z]+)\\s+([A-Z][a-z]+)\\s+ou\\s+([^)]+)/,\n  ];\n\n  for (const padrao of padroesIndigenas) {\n    const match = nome.match(padrao);\n    if (match) {\n      const nomeIndigena = `${match[1]} ${match[2]}`;\n      const nomePortugues = match[3];\n      return `${nomeIndigena} (${nomePortugues})`;\n    }\n  }\n\n  return nome.includes('(') && nome.includes(')') ? nome : nome;\n};\n\nconst formatarFormacaoProfessores = (formacao) => {\n  if (!formacao) return null;\n\n  const [status, ...resto] = formacao.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst formatarFormacaoContinuada = (valor) => {\n  if (!valor) return null;\n\n  const [status, ...resto] = valor.split('/');\n  const descricao = resto.join('/').trim();\n\n  return {\n    status: status.trim().toLowerCase() === 'sim' ? 'Sim' : status.trim(),\n    descricao: descricao || null,\n  };\n};\n\nconst renderBooleanStatus = (valor) => {\n  const normalizado = String(valor).trim().toLowerCase();\n  if (normalizado === 'sim') {\n    return (\n      <div className=\"flex items-center gap-1 text-green-700\">\n        <Check className=\"w-5 h-5\" />\n        Sim\n      </div>\n    );\n  } else if (normalizado === 'não' || normalizado === 'nao') {\n    return (\n      <div className=\"flex items-center gap-1 text-gray-500\">\n        <X className=\"w-5 h-5\" />\n        Não\n      </div>\n    );\n  }\n  return valor;\n};\n\nconst GestaoProfessores = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const formacao = formatarFormacaoProfessores(escola.formacao_professores);\n  const continuada = formatarFormacaoContinuada(escola.formacao_continuada);\n\n  return (\n    <InfoSection title=\"Gestores\" icon={UsersRound}>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 mt-1 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={UserCheck}\n          label=\"Professores Indígenas\"\n          value={escola.professores_indigenas}\n        />\n        <MiniCard\n          icon={UserMinus}\n          label=\"Professores Não Indígenas\"\n          value={escola.professores_nao_indigenas}\n        />\n        <MiniCard\n          icon={MessageCircle}\n          label=\"Professores que falam língua indígena\"\n          value={renderBooleanStatus(escola.professores_falam_lingua)}\n        />\n        {formacao?.status && (\n          <MiniCard\n            icon={Star}\n            label=\"Formação dos Professores\"\n            value={renderBooleanStatus(formacao.status)}\n            description={formacao.descricao}\n          />\n        )}\n      </div>\n\n      <div className=\"space-y-2 mt-4 [&>*]:bg-green-100\">\n        <MiniCard\n          icon={User}\n          label=\"Gestão/Nome\"\n          value={escola.gestao}\n        />\n        <MiniCard\n          icon={UsersRound}\n          label=\"Outros Funcionários\"\n          value={escola.outros_funcionarios}\n        />\n        {continuada?.status && (\n          <MiniCard\n            icon={NotebookPen}\n            label=\"Visitas de Supervisores e Formação Continuada\"\n            value={renderBooleanStatus(continuada.status)}\n            description={continuada.descricao}\n          />\n        )}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default GestaoProfessores;\n","import React, { memo } from 'react';\nimport {\n  Target,\n  BookOpen,\n  GraduationCap,\n  Users,\n  Heart,\n  X,\n} from 'lucide-react';\nimport InfoSection from '../InfoSection';\n\nconst ProjectCard = ({ icon: Icon, label, value }) => {\n  const isNegative = value?.trim().toLowerCase() === 'não';\n\n  return (\n    <div className=\"flex items-start gap-4 rounded-xl p-4 shadow-sm hover:shadow-md transition-shadow duration-200\">\n      <div className=\"mt-1\">\n        <Icon className=\"w-5 h-5 text-green-600 flex-shrink-0\" />\n      </div>\n      <div className=\"flex-1 space-y-1\">\n        <div className=\"text-sm font-semibold text-gray-800\">{label}</div>\n        {isNegative ? (\n          <div className=\"text-sm text-gray-400 flex items-center gap-1\">\n            <X className=\"w-5 h-5 text-gray-400\" />\n            Não\n          </div>\n        ) : (\n          <div className=\"text-sm text-gray-700 leading-relaxed\">\n            {value}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ProjetosParcerias = memo(({ escola }) => {\n  if (!escola) return null;\n\n  const projectsData = [\n    {\n      field: 'projetos_andamento',\n      icon: BookOpen,\n      label: 'Projetos em andamento',\n    },\n    {\n      field: 'parcerias_universidades',\n      icon: GraduationCap,\n      label: 'Parcerias com universidades',\n    },\n    {\n      field: 'acoes_ongs',\n      icon: Users,\n      label: 'Ações com ONGs ou coletivos',\n    },\n    {\n      field: 'desejos_comunidade',\n      icon: Heart,\n      label: 'Desejos da comunidade para a escola',\n    },\n    {\n      field: 'parcerias_municipio',\n      icon: Target,\n      label: 'Parcerias com o município',\n    },\n  ];\n\n  const availableProjects = projectsData.filter(\n    project => escola[project.field] && escola[project.field].trim()\n  );\n\n  if (availableProjects.length === 0) return null;\n\n  return (\n    <InfoSection title=\"Projetos e Parcerias\" icon={Target}>\n      <div className=\"grid grid-cols-1 gap-3 [&>*]:bg-green-100\">\n        {availableProjects.map((project) => (\n          <ProjectCard\n            key={project.field}\n            icon={project.icon}\n            label={project.label}\n            value={escola[project.field]}\n          />\n        ))}\n      </div>\n    </InfoSection>\n  );\n});\n\nexport default ProjetosParcerias;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { supabase } from '../../../supabaseClient';\nimport { getLegendaByImageUrl } from '../../../services/legendasService';\nimport { X, ChevronLeft, ChevronRight, ZoomIn, ZoomOut, RotateCw } from 'lucide-react';\n\nconst ImagemHistoriadoProfessor = ({ escola_id, refreshKey = 0 }) => {\n  const [imagens, setImagens] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [imagemZoom, setImagemZoom] = useState(null);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [rotation, setRotation] = useState(0);\n  const [imageOrientations, setImageOrientations] = useState({});\n\n  const fecharZoom = useCallback(() => {\n    setImagemZoom(null);\n    setCurrentImageIndex(0);\n    setZoomLevel(1);\n    setRotation(0);\n  }, []);\n\n  // Função para detectar orientação da imagem\n  const detectImageOrientation = useCallback((url) => {\n    return new Promise((resolve) => {\n      const img = new Image();\n      img.onload = () => {\n        const isVertical = img.height > img.width;\n        resolve(isVertical ? 'vertical' : 'horizontal');\n      };\n      img.onerror = () => {\n        resolve('horizontal'); // fallback\n      };\n      img.src = url;\n    });\n  }, []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') fecharZoom();\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (!imagemZoom) return;\n      \n      switch (e.key) {\n        case 'ArrowLeft':\n          e.preventDefault();\n          prevImage();\n          break;\n        case 'ArrowRight':\n          e.preventDefault();\n          nextImage();\n          break;\n        case 'Escape':\n          fecharZoom();\n          break;\n        case '+':\n        case '=':\n          e.preventDefault();\n          setZoomLevel(prev => Math.min(prev + 0.25, 3));\n          break;\n        case '-':\n          e.preventDefault();\n          setZoomLevel(prev => Math.max(prev - 0.25, 0.5));\n          break;\n        case 'r':\n        case 'R':\n          e.preventDefault();\n          setRotation(prev => (prev + 90) % 360);\n          break;\n      }\n    };\n    \n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [imagemZoom]);\n\n  // Forçar recarga quando refreshKey mudar\n  useEffect(() => {\n    if (refreshKey > 0) {\n      console.log('ImagemHistoriadoProfessor: refreshKey mudou, forçando recarga');\n      setImagens([]);\n      setLoading(true);\n      setError(null);\n      setImageOrientations({});\n    }\n  }, [refreshKey]);\n\n  useEffect(() => {\n    if (!escola_id) return;\n\n    setLoading(true);\n    setError(null);\n\n    // Busca arquivos do bucket diretamente\n    supabase\n      .storage\n      .from('imagens-professores')\n      .list(`${escola_id}/`)\n      .then(async ({ data, error }) => {\n        if (error) {\n          setError(error.message);\n          setLoading(false);\n          return;\n        }\n\n        if (data && data.length > 0) {\n          console.log('Arquivos de professores encontrados:', data.length);\n          const imagensComUrl = await Promise.all(data.map(async (file, idx) => {\n            const { data: { publicUrl } } = supabase\n              .storage\n              .from('imagens-professores')\n              .getPublicUrl(`${escola_id}/${file.name}`);\n            \n            // Extrair gênero do nome do arquivo\n            let genero = 'professor';\n            if (file.name.startsWith('professora_')) {\n              genero = 'professora';\n            } else if (file.name.startsWith('professor_')) {\n              genero = 'professor';\n            }\n\n            // Buscar legenda da nova tabela\n            let legenda = null;\n            try {\n              const caminhoRelativo = `${escola_id}/${file.name}`;\n              console.log('Buscando legenda para professor:', caminhoRelativo);\n              legenda = await getLegendaByImageUrl(caminhoRelativo, escola_id, 'professor');\n              console.log('Legenda encontrada para professor:', legenda);\n            } catch (error) {\n              console.warn('Erro ao buscar legenda:', error);\n            }\n\n            return {\n              id: idx + 1,\n              publicURL: publicUrl,\n              genero,\n              nome: file.name,\n              created_at: file.created_at || '',\n              legenda: legenda?.legenda || `Imagem do ${genero}`,\n              descricaoDetalhada: legenda?.descricao_detalhada,\n              autor: legenda?.autor_foto,\n              dataFoto: legenda?.data_foto,\n              categoria: legenda?.categoria,\n            };\n          }));\n\n          // Detectar orientações das imagens\n          const orientations = {};\n          for (const img of imagensComUrl) {\n            orientations[img.id] = await detectImageOrientation(img.publicURL);\n          }\n          setImageOrientations(orientations);\n          setImagens(imagensComUrl);\n        } else {\n          setImagens([]);\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        setError(`Erro inesperado: ${err.message}`);\n        setLoading(false);\n      });\n  }, [escola_id, detectImageOrientation]);\n\n  const openImage = useCallback((image, index) => {\n    setImagemZoom(image);\n    setCurrentImageIndex(index);\n    setZoomLevel(1);\n    setRotation(0);\n  }, []);\n\n  const nextImage = useCallback(() => {\n    if (imagens.length > 1) {\n      const nextIndex = (currentImageIndex + 1) % imagens.length;\n      setCurrentImageIndex(nextIndex);\n      setImagemZoom(imagens[nextIndex]);\n      setZoomLevel(1);\n      setRotation(0);\n    }\n  }, [imagens, currentImageIndex]);\n\n  const prevImage = useCallback(() => {\n    if (imagens.length > 1) {\n      const prevIndex = currentImageIndex === 0 ? imagens.length - 1 : currentImageIndex - 1;\n      setCurrentImageIndex(prevIndex);\n      setImagemZoom(imagens[prevIndex]);\n      setZoomLevel(1);\n      setRotation(0);\n    }\n  }, [imagens, currentImageIndex]);\n\n  const resetImage = useCallback(() => {\n    setZoomLevel(1);\n    setRotation(0);\n  }, []);\n\n  if (loading) {\n    return <div className=\"text-gray-500\">Carregando imagens do professor...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-red-600\">Erro ao carregar imagens: {error}</div>;\n  }\n\n  if (!imagens.length) {\n    return null;\n  }\n\n  return (\n    <section className=\"my-6\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {imagens.map((img, index) => (\n          <figure\n            key={img.id}\n            className=\"rounded-lg overflow-hidden border bg-white shadow-sm flex flex-col cursor-pointer transition hover:shadow-md\"\n            onClick={() => img.publicURL && openImage(img, index)}\n          >\n            <div className=\"w-full aspect-[4/3] bg-gray-100 flex items-center justify-center\">\n              <img\n                src={img.publicURL}\n                alt={img.legenda}\n                className=\"w-full h-full object-cover object-center transition-transform duration-200 hover:scale-105\"\n                loading=\"lazy\"\n                style={{ maxHeight: '350px' }}\n              />\n            </div>\n            \n            {/* Legenda da imagem */}\n            {img.legenda && (\n              <figcaption className=\"p-3 bg-white\">\n                <h4 className=\"font-medium text-gray-900 text-sm mb-1\">\n                  {img.legenda}\n                </h4>\n                \n                {/* Informações adicionais */}\n                <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                  {img.categoria && (\n                    <span className=\"capitalize bg-gray-100 px-2 py-1 rounded\">\n                      {img.categoria}\n                    </span>\n                  )}\n                  {img.autor && (\n                    <span>Por: {img.autor}</span>\n                  )}\n                  {img.dataFoto && (\n                    <span>{new Date(img.dataFoto).toLocaleDateString('pt-BR')}</span>\n                  )}\n                </div>\n                \n                {/* Descrição detalhada */}\n                {img.descricaoDetalhada && (\n                  <p className=\"text-xs text-gray-600 mt-2 line-clamp-2\">\n                    {img.descricaoDetalhada}\n                  </p>\n                )}\n              </figcaption>\n            )}\n          </figure>\n        ))}\n      </div>\n\n      {/* Modal de Zoom Melhorado */}\n      {imagemZoom && (\n        <div\n          className=\"image-zoom-modal\"\n          onClick={fecharZoom}\n        >\n          {/* Botão Fechar */}\n          <button\n            onClick={fecharZoom}\n            className=\"image-zoom-close\"\n            aria-label=\"Fechar\"\n          >\n            <X size={24} />\n          </button>\n\n          {/* Controles de Zoom */}\n          <div className=\"image-zoom-controls\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                setZoomLevel(prev => Math.min(prev + 0.25, 3));\n              }}\n              className=\"image-zoom-control-button\"\n              aria-label=\"Aumentar zoom\"\n            >\n              <ZoomIn size={20} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                setZoomLevel(prev => Math.max(prev - 0.25, 0.5));\n              }}\n              className=\"image-zoom-control-button\"\n              aria-label=\"Diminuir zoom\"\n            >\n              <ZoomOut size={20} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                setRotation(prev => (prev + 90) % 360);\n              }}\n              className=\"image-zoom-control-button\"\n              aria-label=\"Rotacionar\"\n            >\n              <RotateCw size={20} />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                resetImage();\n              }}\n              className=\"image-zoom-control-button text-xs px-3\"\n              aria-label=\"Resetar\"\n            >\n              Reset\n            </button>\n          </div>\n\n          {/* Navegação entre imagens */}\n          {imagens.length > 1 && (\n            <>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  prevImage();\n                }}\n                className=\"image-zoom-navigation prev\"\n                aria-label=\"Imagem anterior\"\n              >\n                <ChevronLeft size={24} />\n              </button>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  nextImage();\n                }}\n                className=\"image-zoom-navigation next\"\n                aria-label=\"Próxima imagem\"\n              >\n                <ChevronRight size={24} />\n              </button>\n              \n              {/* Indicador de posição */}\n              <div className=\"image-zoom-counter\">\n                {currentImageIndex + 1} de {imagens.length}\n              </div>\n            </>\n          )}\n          \n          {/* Container da imagem */}\n          <div \n            className=\"image-zoom-container\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <img\n              src={imagemZoom.publicURL}\n              alt={imagemZoom.legenda}\n              className={`image-zoom-image ${imageOrientations[imagemZoom.id] || 'horizontal'}`}\n              style={{\n                transform: `scale(${zoomLevel}) rotate(${rotation}deg)`,\n                transition: 'transform 0.2s ease-in-out'\n              }}\n            />\n          </div>\n            \n          {/* Legenda no modal */}\n          {imagemZoom.legenda && (\n            <div className=\"image-zoom-caption\">\n              <h3 className=\"font-semibold text-gray-900 mb-1 text-sm\">\n                {imagemZoom.legenda}\n              </h3>\n              \n              {/* Informações adicionais */}\n              <div className=\"flex items-center gap-3 text-xs text-gray-600 mb-1 flex-wrap\">\n                {imagemZoom.categoria && (\n                  <span className=\"capitalize bg-gray-100 px-1.5 py-0.5 rounded text-xs\">\n                    {imagemZoom.categoria}\n                  </span>\n                )}\n                {imagemZoom.autor && (\n                  <span>Fotógrafo: {imagemZoom.autor}</span>\n                )}\n                {imagemZoom.dataFoto && (\n                  <span>Data: {new Date(imagemZoom.dataFoto).toLocaleDateString('pt-BR')}</span>\n                )}\n              </div>\n              \n              {/* Descrição detalhada */}\n              {imagemZoom.descricaoDetalhada && (\n                <p className=\"text-gray-700 leading-tight text-xs\">\n                  {imagemZoom.descricaoDetalhada}\n                </p>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nImagemHistoriadoProfessor.propTypes = {\n  escola_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  refreshKey: PropTypes.number,\n};\n\nexport default React.memo(ImagemHistoriadoProfessor);\n","import React, { memo, useEffect, useState, useCallback } from 'react';\nimport { ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { getHistoriasProfessor } from '../../../../services/historiaProfessorService';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport './HistoriadoProfessor.css';\n\nconst HistoriadoProfessor = memo(({ escola, refreshKey = 0 }) => {\n  const [historias, setHistorias] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentHistoriaIndex, setCurrentHistoriaIndex] = useState(0);\n  const [imagemZoom, setImagemZoom] = useState(null);\n\n  const fecharZoom = useCallback(() => setImagemZoom(null), []);\n\n  // Fecha modal com tecla ESC\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.key === 'Escape') {\n        fecharZoom();\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [fecharZoom]);\n\n  // Carregar histórias do professor\n  useEffect(() => {\n    if (!escola?.id) {\n      setLoading(false);\n      return;\n    }\n    const carregarHistorias = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const data = await getHistoriasProfessor(escola.id);\n        setHistorias(data || []);\n        setCurrentHistoriaIndex(0);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    carregarHistorias();\n  }, [escola?.id, refreshKey]);\n\n  // Navegação entre histórias\n  const nextHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev < historias.length - 1 ? prev + 1 : 0\n    );\n  }, [historias.length]);\n\n  const prevHistoria = useCallback(() => {\n    setCurrentHistoriaIndex(prev =>\n      prev > 0 ? prev - 1 : historias.length - 1\n    );\n  }, [historias.length]);\n\n  // Navegação com teclado\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (historias.length <= 1) return;\n      if (e.key === 'ArrowRight') {\n        nextHistoria();\n      } else if (e.key === 'ArrowLeft') {\n        prevHistoria();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [historias.length, nextHistoria, prevHistoria]);\n\n  if (loading) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-green-100/50\">\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\n          <span className=\"ml-2 text-gray-600\">Carregando histórias do professor...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"mt-8 mb-12 max-w-4xl mx-auto px-4 sm:px-6 md:px-8 py-6 bg-white rounded-2xl shadow-lg border border-red-100/50\">\n        <div className=\"text-center py-8\">\n          <p className=\"text-red-600\">Erro ao carregar histórias do professor: {error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!historias.length) {\n    return null;\n  }\n\n  const currentHistoria = historias[currentHistoriaIndex];\n  const hasMultipleHistorias = historias.length > 1;\n\n  return (\n    <article\n      className=\"\n        mt-8 mb-12 max-w-4xl mx-auto\n        px-4 sm:px-6 md:px-8 py-6\n        bg-white rounded-2xl shadow-lg\n        prose prose-sm sm:prose-base md:prose-lg lg:prose-xl\n        prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n        prose-img:rounded-xl prose-img:shadow-lg\n        prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n      \"\n    >\n      <header className=\"mb-6 sm:mb-8\">\n        <div className=\"flex items-center justify-between mb-3 sm:mb-4\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"bg-green-300 rounded-full flex items-center justify-center w-16 h-16 sm:w-28 sm:h-28\">\n              <img \n                src={`${process.env.PUBLIC_URL}/passaro.svg`} \n                alt=\"Ícone de pássaro\" \n                className=\"w-12 h-12 sm:w-24 sm:h-24\" \n                style={{ \n                  filter: 'none', \n                  borderRadius: '0', \n                  boxShadow: 'none', \n                  margin: '0',\n                  padding: '0',\n                  border: 'none',\n                  outline: 'none'\n                }}\n                aria-hidden=\"true\"\n              />\n            </span>\n            <h2 className=\"text-xl sm:text-2xl font-bold text-black m-0\">\n              Depoimento dos Professores\n            </h2>\n          </div>\n          {hasMultipleHistorias && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span>{currentHistoriaIndex + 1} de {historias.length}</span>\n            </div>\n          )}\n        </div>\n        <div className=\"h-1 w-20 sm:w-24 bg-green-300 rounded-full\" />\n      </header>\n\n      {/* Conteúdo da história atual */}\n      <section className=\"text-base sm:text-lg leading-relaxed text-neutral-800\">\n        {currentHistoria.nome_professor && (\n          <h3 className=\"text-lg sm:text-xl font-semibold text-green-800 mb-4\">\n            {currentHistoria.nome_professor}\n          </h3>\n        )}\n        <div \n          className=\"historia-professor-content prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\n            prose-headings:text-green-900 prose-p:text-black prose-p:leading-relaxed prose-p:text-justify\n            prose-img:rounded-xl prose-img:shadow-lg\n            prose-a:text-green-700 prose-a:no-underline prose-a:border-b-2 prose-a:border-green-100 hover:prose-a:border-green-600\n            prose-strong:text-green-800 prose-em:text-green-700\n            prose-blockquote:border-l-green-300 prose-blockquote:bg-green-50 prose-blockquote:pl-4 prose-blockquote:py-2 prose-blockquote:rounded-r-lg\n            prose-ul:text-black prose-ol:text-black prose-li:text-black\n            prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-code:text-sm\"\n          dangerouslySetInnerHTML={{ __html: currentHistoria.historia }}\n        />\n        {currentHistoria.imagem_public_url && (\n          <figure className=\"my-6\">\n            <div className=\"relative\">\n              <img\n                src={currentHistoria.imagem_public_url}\n                alt={currentHistoria.descricao_imagem || 'Imagem da história do professor'}\n                className=\"w-full max-w-2xl mx-auto rounded-xl shadow-lg cursor-pointer transition-transform duration-200 hover:scale-105\"\n                onClick={() => setImagemZoom(currentHistoria)}\n                loading=\"lazy\"\n              />\n              {currentHistoria.descricao_imagem && (\n                <figcaption className=\"text-center text-sm text-gray-600 mt-2\">\n                  {currentHistoria.descricao_imagem}\n                </figcaption>\n              )}\n            </div>\n          </figure>\n        )}\n      </section>\n\n      {/* Navegação entre histórias */}\n      {hasMultipleHistorias && (\n        <div className=\"flex items-center justify-between mt-8 pt-6 border-t border-gray-200\">\n          <button\n            onClick={prevHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"História anterior\"\n          >\n            <ChevronLeft className=\"w-5 h-5\" />\n            <span className=\"hidden sm:inline\">Anterior</span>\n          </button>\n          <div className=\"flex gap-2\">\n            {historias.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => setCurrentHistoriaIndex(index)}\n                className={`w-3 h-3 rounded-full border-2 ${index === currentHistoriaIndex ? 'bg-green-600 border-green-600' : 'bg-white border-gray-300'} transition-colors`}\n                aria-label={`Ir para história ${index + 1}`}\n              />\n            ))}\n          </div>\n          <button\n            onClick={nextHistoria}\n            className=\"flex items-center gap-2 px-4 py-2 text-green-700 hover:text-green-800 hover:bg-gray-100 rounded-lg transition-colors\"\n            aria-label=\"Próxima história\"\n          >\n            <span className=\"hidden sm:inline\">Próxima</span>\n            <ChevronRight className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )}\n\n      {/* Modal de zoom da imagem */}\n      {imagemZoom && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-90\" onClick={fecharZoom}>\n          <div className=\"relative max-w-[90vw] max-h-[90vh] flex items-center justify-center p-4\" onClick={e => e.stopPropagation()}>\n            <button\n              className=\"absolute top-4 right-4 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-80 z-10\"\n              onClick={fecharZoom}\n              aria-label=\"Fechar zoom\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n            <img\n              src={imagemZoom.imagem_public_url}\n              alt={imagemZoom.descricao_imagem || 'Imagem da história do professor'}\n              className=\"max-w-full max-h-full object-contain rounded-xl shadow-2xl border-4 border-white\"\n            />\n            {imagemZoom.descricao_imagem && (\n              <figcaption className=\"absolute bottom-4 left-1/2 -translate-x-1/2 text-center text-sm text-white bg-black bg-opacity-50 rounded-lg px-3 py-1.5 max-w-2xl\">\n                {imagemZoom.descricao_imagem}\n              </figcaption>\n            )}\n          </div>\n        </div>\n      )}\n\n      <ImagemHistoriadoProfessor escola_id={escola.id} refreshKey={refreshKey} />\n    </article>\n  );\n});\n\nexport default HistoriadoProfessor;\n","import React, { memo } from 'react';\n\n// Import all section components\nimport BasicInfo from './BasicInfo';\nimport HistoriaEscola from './HistoriaEscola';\n// import PovosLinguas from './PovosLinguas';\nimport Modalidades from './Modalidades';\nimport Infraestrutura from './Infraestrutura';\nimport GestaoProfessores from './GestaoProfessores';\nimport ProjetosParcerias from './ProjetosParcerias';\nimport ImagemHistoriadoProfessor from '../ImagemHistoriadoProfessor';\nimport HistoriadoProfessor from './HistoriadoProfessor';\n\n// CSS para layout Masonry real usando CSS columns\nconst masonryStyles = `\n  .masonry-grid {\n    column-count: 1;\n    column-gap: 1.5rem;\n    column-fill: balance;\n  }\n  \n  .masonry-grid > * {\n    display: block;\n    break-inside: avoid;\n    page-break-inside: avoid;\n    margin-bottom: 1.5rem;\n  }\n  \n  /* Mobile: 1 coluna */\n  @media (max-width: 767px) {\n    .masonry-grid {\n      column-count: 1;\n    }\n  }\n  \n  /* Tablet e Desktop: 2 colunas */\n  @media (min-width: 768px) {\n    .masonry-grid {\n      column-count: 2;\n    }\n  }\n`;\n\n// Componente wrapper para o grid\nconst GridLayoutWrapper = memo(({ children, shouldUseGrid }) => {\n  const containerClasses = shouldUseGrid\n    ? 'masonry-grid'\n    : 'space-y-4';\n\n  return (\n    <>\n      <style>{masonryStyles}</style>\n      <div className={`${containerClasses} transition-all duration-300 ease-in-out`}>\n        {children}\n      </div>\n    </>\n  );\n});\n\nconst EscolaInfo = memo(({ escola, shouldUseGrid = false, refreshKey = 0 }) => {\n  console.log(\"EscolaInfo recebeu:\", escola);\n  \n  if (!escola) {\n    console.log(\"EscolaInfo: escola é null ou undefined\");\n    return null;\n  }\n\n  // Componentes que serão renderizados no grid\n  const gridSections = [\n    { Component: BasicInfo, props: { escola } },\n    // { Component: PovosLinguas, props: { escola } },\n    { Component: Modalidades, props: { escola } },\n    { Component: Infraestrutura, props: { escola } },\n    { Component: GestaoProfessores, props: { escola } },\n    { Component: ProjetosParcerias, props: { escola } }\n  ];\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Grid de cards */}\n      <GridLayoutWrapper shouldUseGrid={shouldUseGrid}>\n        {gridSections.map(({ Component, props }, index) => (\n          <Component key={index} {...props} />\n        ))}\n      </GridLayoutWrapper>\n\n      {/* História da Escola em destaque */}\n      <HistoriaEscola escola={escola} refreshKey={refreshKey} />\n      <HistoriadoProfessor escola={escola} refreshKey={refreshKey} />\n    </div>\n  );\n});\n\nexport default EscolaInfo; ","import React from 'react';\n\nconst HandFistIcon = ({ className = 'w-5 h-5', ...props }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 256 256\"\n    fill=\"currentColor\"\n    className={className}\n    {...props}\n  >\n    <path d=\"M200,80H184V64a32,32,0,0,0-56-21.13A32,32,0,0,0,72.21,60.42,32,32,0,0,0,24,88v40a104,104,0,0,0,208,0V112A32,32,0,0,0,200,80ZM152,48a16,16,0,0,1,16,16V80H136V64A16,16,0,0,1,152,48ZM88,64a16,16,0,0,1,32,0v40a16,16,0,0,1-32,0ZM40,88a16,16,0,0,1,32,0v16a16,16,0,0,1-32,0Zm176,40a88,88,0,0,1-175.92,3.75A31.93,31.93,0,0,0,80,125.13a31.93,31.93,0,0,0,44.58,3.35,32.21,32.21,0,0,0,11.8,11.44A47.88,47.88,0,0,0,120,176a8,8,0,0,0,16,0,32,32,0,0,1,32-32,8,8,0,0,0,0-16H152a16,16,0,0,1-16-16V96h64a16,16,0,0,1,16,16Z\" />\n  </svg>\n);\n\nexport default HandFistIcon; ","import React, { memo } from 'react';\n\nconst InfoItem = memo(({ label, value, className = '', isTextArea = false }) => {\n  if (!value) return null;\n\n  const isFlexLayout = className.includes('flex flex-col');\n  const baseClasses = isFlexLayout \n    ? 'flex flex-col gap-1 text-sm py-0.5'\n    : 'grid grid-cols-[auto,1fr] gap-x-2 text-sm py-0.5';\n\n  return (\n    <div className={`${baseClasses} ${className}`}>\n      <span className=\"font-medium text-neutral-800\">{label}:</span>\n      {isTextArea ? (\n        <div className=\"text-neutral-600\">\n          <div className=\"whitespace-pre-wrap break-words text-sm leading-relaxed\">\n            {value}\n          </div>\n        </div>\n      ) : (\n        <span className=\"text-neutral-600 break-words\">{value}</span>\n      )}\n    </div>\n  );\n});\n\nexport default InfoItem; ","import React, { memo } from 'react';\nimport HandFistIcon from './icons/HandFistIcon';\nimport InfoSection from './components/InfoSection';\nimport InfoItem from './components/InfoItem';\n\n// Wrapper para passar className maior ao ícone\nconst LargeHandFistIcon = (props) => <HandFistIcon className=\"w-8 h-8\" {...props} />;\n\nconst TerraIndigenaInfo = memo(({ terraIndigena }) => {\n  if (!terraIndigena) {\n    console.log(\"TerraIndigenaInfo: terraIndigena é null ou undefined\");\n    return null;\n  }\n\n  const formatarSuperficie = () => {\n    return terraIndigena.superficie ? \n      `Superfície: ${parseFloat(terraIndigena.superficie).toFixed(2)} ha` : null;\n  };\n\n  const formatarLocalizacao = () => {\n    return `${terraIndigena.municipio || ''}, ${terraIndigena.uf || ''}`.trim();\n  };\n\n  return (\n    <InfoSection title=\"Informações da Terra Indígena\" icon={LargeHandFistIcon}>\n      <InfoItem label=\"Povos Indígenas\" value={terraIndigena.etnia} />\n      <InfoItem label=\"Localização\" value={formatarLocalizacao()} />\n      <InfoItem label=\"Superfície\" value={formatarSuperficie()} />\n      <InfoItem label=\"Fase\" value={terraIndigena.fase} />\n      <InfoItem label=\"Modalidade\" value={terraIndigena.modalidade} />\n      <InfoItem label=\"Reestudo\" value={terraIndigena.reestudo} />\n      <InfoItem label=\"Coordenação Regional\" value={terraIndigena.cr} />\n      <InfoItem label=\"Faixa de Fronteira\" value={terraIndigena.faixa_fron} />\n      <InfoItem label=\"Unidade Administrativa\" value={terraIndigena.undadm_nom} />\n      <InfoItem label=\"Sigla Unidade\" value={terraIndigena.undadm_sig} />\n      <InfoItem label=\"Domínio\" value={terraIndigena.dominio_un} />\n      <InfoItem label=\"Data de Atualização\" value={terraIndigena.data_atual} />\n      <InfoItem label=\"Código Terra Indígena\" value={terraIndigena.terrai_cod} />\n      <InfoItem label=\"Código Unidade Administrativa\" value={terraIndigena.undadm_cod} />\n    </InfoSection>\n  );\n});\n\nexport default TerraIndigenaInfo; ","import React, { useState } from \"react\";\nimport {\n  FacebookShareButton,\n  TwitterShareButton,\n  WhatsappShareButton,\n  LinkedinShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n  LinkedinIcon,\n} from \"react-share\";\nimport { Share2, Link, Check, MessageCircle, Facebook, Twitter, Linkedin } from \"lucide-react\";\n\n// Componente Tooltip melhorado\nconst Tooltip = ({ children, text, position = \"top\" }) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-3\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-3\",\n  };\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      onFocus={() => setIsVisible(true)}\n      onBlur={() => setIsVisible(false)}\n    >\n      {children}\n      {isVisible && (\n        <div className={`\n          absolute z-50 px-3 py-2 text-sm text-white bg-gray-900 rounded-lg shadow-xl whitespace-nowrap\n          ${positionClasses[position]}\n          animate-in fade-in-0 zoom-in-95 duration-200\n        `}>\n          {text}\n          <div className=\"absolute left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShareButton = ({ onClick, url, title, description = \"\" }) => {\n  const [copied, setCopied] = useState(false);\n  const [showShareOptions, setShowShareOptions] = useState(false);\n\n  const handleCopyLink = async () => {\n    try {\n      await navigator.clipboard.writeText(url);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 3000);\n    } catch (err) {\n      // Fallback para navegadores mais antigos\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 3000);\n    }\n  };\n\n  // Frases de compartilhamento mais atrativas\n  const shareTextOptions = [\n    `Conheça a escola indígena: ${title}`,\n    `Descubra esta escola indígena: ${title}`,\n    `Escola indígena incrível: ${title}`,\n    `Educação indígena em destaque: ${title}`,\n    `Conheça esta escola: ${title}`,\n    `Escola indígena que inspira: ${title}`,\n    `Educação que transforma: ${title}`,\n    `Escola indígena de referência: ${title}`\n  ];\n\n  // Seleciona uma frase aleatória para variar o conteúdo\n  const randomIndex = Math.floor(Math.random() * shareTextOptions.length);\n  const shareText = shareTextOptions[randomIndex];\n  const shareUrl = url || window.location.href;\n\n  const shareButtons = [\n    {\n      name: \"WhatsApp\",\n      icon: <MessageCircle className=\"w-5 h-5\" />,\n      color: \"bg-green-500 hover:bg-green-600\",\n      component: WhatsappShareButton,\n      props: { url: shareUrl, title: shareText }\n    },\n    {\n      name: \"Facebook\",\n      icon: <Facebook className=\"w-5 h-5\" />,\n      color: \"bg-blue-600 hover:bg-blue-700\",\n      component: FacebookShareButton,\n      props: { url: shareUrl, quote: shareText }\n    },\n    {\n      name: \"Twitter\",\n      icon: <Twitter className=\"w-5 h-5\" />,\n      color: \"bg-sky-500 hover:bg-sky-600\",\n      component: TwitterShareButton,\n      props: { url: shareUrl, title: shareText }\n    },\n    {\n      name: \"LinkedIn\",\n      icon: <Linkedin className=\"w-5 h-5\" />,\n      color: \"bg-blue-700 hover:bg-blue-800\",\n      component: LinkedinShareButton,\n      props: { url: shareUrl, title: title, summary: description }\n    }\n  ];\n\n  return (\n    <div className=\"px-4 py-6 border-t border-green-200 bg-gradient-to-b from-white to-green-50\">\n      <div className=\"max-w-md mx-auto\">\n        {/* Título da seção */}\n        <div className=\"text-center mb-4\">\n          <h3 className=\"text-lg font-semibold text-green-800 mb-2\">\n            Compartilhe esta escola\n          </h3>\n        </div>\n\n        {/* Botão Copiar Link - Destaque */}\n        <div className=\"mb-4\">\n          <Tooltip text={copied ? \"Link copiado com sucesso!\" : \"Copiar link para clipboard\"}>\n            <button\n              onClick={handleCopyLink}\n              className={`\n                w-full flex items-center justify-center gap-3 p-4 rounded-xl transition-all duration-300\n                focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\n                transform hover:scale-105 active:scale-95\n                ${copied\n                  ? 'bg-green-100 border-2 border-green-300 text-green-800'\n                  : 'bg-gradient-to-r from-green-500 to-green-600 text-white shadow-lg hover:shadow-xl'\n                }\n              `}\n              aria-label=\"Copiar link para clipboard\"\n            >\n              {copied ? (\n                <Check className=\"w-6 h-6\" />\n              ) : (\n                <Link className=\"w-6 h-6\" />\n              )}\n              <span className=\"font-semibold\">\n                {copied ? 'Link Copiado!' : 'Copiar Link'}\n              </span>\n            </button>\n          </Tooltip>\n        </div>\n\n        {/* Botões de Redes Sociais */}\n        <div className=\"grid grid-cols-2 gap-3 mb-4\">\n          {shareButtons.map((button, index) => {\n            const ShareComponent = button.component;\n            return (\n              <Tooltip key={index} text={`Compartilhar no ${button.name}`}>\n                <ShareComponent\n                  {...button.props}\n                  className=\"w-full transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transform hover:scale-105 active:scale-95\"\n                  aria-label={`Compartilhar no ${button.name}`}\n                >\n                  <div className={`\n                    w-full flex items-center justify-center gap-2 p-3 rounded-lg text-white font-medium\n                    ${button.color} shadow-md hover:shadow-lg\n                  `}>\n                    {button.icon}\n                    <span className=\"text-sm\">{button.name}</span>\n                  </div>\n                </ShareComponent>\n              </Tooltip>\n            );\n          })}\n        </div>\n\n        {/* Botão Compartilhar Nativo (fallback) */}\n        {navigator.share && (\n          <div className=\"text-center\">\n            <Tooltip text=\"Compartilhar usando opções do sistema\">\n              <button\n                onClick={onClick}\n                className=\"w-full flex items-center justify-center gap-2 p-3 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transform hover:scale-105 active:scale-95\"\n                aria-label=\"Compartilhar usando opções do sistema\"\n              >\n                <Share2 className=\"w-5 h-5\" />\n                <span className=\"font-medium\">Mais opções</span>\n              </button>\n            </Tooltip>\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ShareButton);","import React, { memo, useMemo } from 'react';\nimport ShareButton from '../ShareButton';\n\nconst ShareSection = memo(({ copiarLink, compartilhar, painelInfo }) => {\n  // Gerar URL customizada para compartilhamento\n  const gerarLinkCustomizado = useMemo(() => {\n    if (!painelInfo?.titulo) return window.location.href;\n    \n    const criarSlug = (texto) => {\n      return texto\n        .toLowerCase()\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim();\n    };\n\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  }, [painelInfo?.titulo]);\n\n  // Gerar descrição otimizada para compartilhamento\n  const gerarDescricao = useMemo(() => {\n    if (!painelInfo) return 'Confira informações sobre esta escola indígena no Observatório de Professores Indígenas.';\n    \n    let descricao = `Escola Indígena: ${painelInfo.titulo}`;\n    \n    if (painelInfo['Município']) {\n      descricao += ` - ${painelInfo['Município']}`;\n    }\n    \n    if (painelInfo['Povos indigenas']) {\n      descricao += ` | Povos: ${painelInfo['Povos indigenas']}`;\n    }\n    \n    if (painelInfo['Linguas faladas']) {\n      descricao += ` | Línguas: ${painelInfo['Linguas faladas']}`;\n    }\n    \n    descricao += ' | Observatório de Professores Indígenas';\n    \n    return descricao;\n  }, [painelInfo]);\n\n  // Gerar título otimizado para compartilhamento\n  const gerarTitulo = useMemo(() => {\n    if (!painelInfo?.titulo) return 'Escola Indígena - Observatório de Professores Indígenas';\n    \n    return `${painelInfo.titulo} - Escola Indígena`;\n  }, [painelInfo?.titulo]);\n\n  return (\n    <ShareButton \n      onClick={compartilhar}\n      url={gerarLinkCustomizado}\n      title={gerarTitulo}\n      description={gerarDescricao}\n    />\n  );\n});\n\nexport default ShareSection; ","import React, { useMemo } from \"react\";\nimport DOMPurify from \"dompurify\";\n\n/**\n * Componente PainelDescricao - Exibe conteúdo formatado com sanitização HTML\n * \n * @param {Object} props - Propriedades do componente\n * @param {string} props.descricao - Texto HTML ou texto puro a ser exibido\n * @param {string} props.className - Classes CSS adicionais (opcional)\n * @returns {React.ReactElement|null} - Componente renderizado ou null\n */\nconst PainelDescricao = ({ descricao, className = \"\" }) => {\n  // Função para formatar o texto com quebras de linha\n  const formatText = (text) => {\n    if (!text) return \"\";\n    \n    // Preserva parágrafos convertendo linhas duplas em tags <p>\n    let formattedText = text.replace(/\\n\\n+/g, \"</p><p>\");\n    \n    // Substitui quebras de linha simples por <br>\n    formattedText = formattedText.replace(/\\n/g, \"<br>\");\n    \n    // Adiciona tags <p> no início e fim se não existirem\n    if (!formattedText.startsWith(\"<p>\")) {\n      formattedText = \"<p>\" + formattedText;\n    }\n    if (!formattedText.endsWith(\"</p>\")) {\n      formattedText = formattedText + \"</p>\";\n    }\n    \n    // Remove espaços extras entre tags HTML\n    formattedText = formattedText.replace(/>\\s+</g, \"><\");\n    \n    return formattedText;\n  };\n\n  // Usa useMemo para evitar sanitização redundante em re-renders\n  const sanitizedHTML = useMemo(() => {\n    if (!descricao) return \"\";\n    \n    return DOMPurify.sanitize(formatText(descricao), {\n      ALLOWED_TAGS: [\n        'b', 'i', 'em', 'strong', 'a', 'p', 'br', 'ul', 'ol', 'li',\n        'div', 'span', 'img', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n        'center', 'blockquote', 'code', 'pre', 'hr', 'table', 'thead', \n        'tbody', 'tr', 'th', 'td'\n      ],\n      ALLOWED_ATTR: [\n        'href', 'target', 'rel', 'class', 'style', 'src', 'alt',\n        'width', 'height', 'id', 'title', 'aria-label', 'aria-describedby'\n      ],\n      ADD_TAGS: ['center', 'blockquote'],\n      ADD_ATTR: ['target', 'className', 'title'],\n      KEEP_CONTENT: true,\n      ALLOW_DATA_ATTR: false\n    });\n  }, [descricao]);\n\n  if (!descricao) return null;\n\n  return (\n    <div className={`mb-6 ${className}`}>\n      <div\n        className=\"prose prose-lg lg:prose-xl max-w-none px-1\"\n        style={{\n          '--tw-prose-body': '#1f2937',\n          '--tw-prose-headings': '#111827',\n          '--tw-prose-links': '#059669',\n          '--tw-prose-bold': '#111827',\n          '--tw-prose-counters': '#1f2937',\n          '--tw-prose-bullets': '#4b5563',\n          '--tw-prose-hr': '#e5e7eb',\n          '--tw-prose-quotes': '#111827',\n          '--tw-prose-quote-borders': '#10b981',\n          '--tw-prose-captions': '#6b7280',\n          '--tw-prose-code': '#111827',\n          '--tw-prose-pre-code': '#e5e7eb',\n          '--tw-prose-pre-bg': '#1f2937',\n          '--tw-prose-th-borders': '#d1d5db',\n          '--tw-prose-td-borders': '#e5e7eb',\n          lineHeight: '1.8',\n          fontSize: '1.125rem',\n          fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n          letterSpacing: '0.015em',\n        }}\n        dangerouslySetInnerHTML={{ __html: sanitizedHTML }}\n        aria-live=\"polite\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PainelDescricao);","import React, { memo } from 'react';\nimport PainelDescricao from '../PainelDescricao';\n\nconst IntroPanel = memo(({ painelInfo }) => (\n  <div className=\"space-y-6\">\n    <div className=\"prose prose-lg lg:prose-xl max-w-none\">\n      <div className=\"bg-green-100 rounded-lg p-6\">\n        <PainelDescricao descricao={painelInfo.descricao_detalhada} />\n      </div>\n    </div>\n    {painelInfo.audioUrl && (\n      <div className=\"mt-6\">\n        <audio controls className=\"w-full\">\n          <source src={painelInfo.audioUrl} type=\"audio/mpeg\" />\n          Seu navegador não suporta o elemento de áudio.\n        </audio>\n      </div>\n    )}\n  </div>\n));\n\nexport default IntroPanel; ","/**\n * Utility functions for text formatting\n */\n\n/**\n * Lista de siglas que devem permanecer em maiúsculas\n */\nconst SIGLAS_MAIUSCULAS = ['EE', 'EEI'];\n\n/**\n * Capitalizes the first letter of each word in a string, keeping specific acronyms in uppercase\n * @param {string} str - The string to capitalize\n * @returns {string} The capitalized string\n */\nexport const capitalizeWords = (str) => {\n  if (!str || typeof str !== 'string') return '';\n  \n  // Primeiro, divide a string em palavras\n  const words = str.split(/\\s+/);\n  \n  // Processa cada palavra\n  const processedWords = words.map(word => {\n    // Verifica se a palavra é uma sigla que deve permanecer em maiúsculas\n    if (SIGLAS_MAIUSCULAS.includes(word.toUpperCase())) {\n      return word.toUpperCase();\n    }\n    \n    // Para outras palavras, aplica a capitalização normal\n    return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n  });\n  \n  // Junta as palavras de volta em uma string\n  return processedWords.join(' ');\n}; \n\n/**\n * Normalizes an address string by capitalizing words and handling common address abbreviations\n * @param {string} address - The address string to normalize\n * @returns {string} The normalized address string\n */\nexport const normalizeAddress = (address) => {\n  if (!address || typeof address !== 'string') return '';\n\n  // Lista de abreviações comuns em endereços\n  const abbreviations = {\n    'r.': 'Rua',\n    'av.': 'Avenida',\n    'al.': 'Alameda',\n    'pr.': 'Praça',\n    'tr.': 'Travessa',\n    'rod.': 'Rodovia',\n    'est.': 'Estrada',\n    'n.': 'Número',\n    'nº': 'Número',\n    'apt.': 'Apartamento',\n    'bl.': 'Bloco',\n    'qd.': 'Quadra',\n    'lt.': 'Lote',\n    'km': 'KM',\n    's/n': 'S/N'\n  };\n\n  // Primeiro, substitui as abreviações\n  let normalized = address.toLowerCase();\n  Object.entries(abbreviations).forEach(([abbr, full]) => {\n    normalized = normalized.replace(new RegExp(`\\\\b${abbr}\\\\b`, 'g'), full);\n  });\n\n  // Depois aplica a capitalização de palavras\n  return capitalizeWords(normalized);\n}; ","import React from \"react\";\nimport { X, Maximize2, Minimize2 } from \"lucide-react\";\nimport { capitalizeWords } from \"../utils/textFormatting\";\n\nconst PainelHeader = ({ titulo, closePainel, toggleMaximize, isMaximized }) => {\n  const isMobile = window.innerWidth <= 768;\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const isVerySmallLandscape = isMobileLandscape && window.innerWidth <= 850;\n\n  return (\n    <header className={`relative px-3 sm:px-4 md:px-6 lg:px-8 py-3 sm:py-4 md:py-6 border-b border-green-100 ${isMobileLandscape ? 'min-h-[60px]' : ''}`}>\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between pr-12\">\n        <h2 \n          id=\"painel-titulo\"\n          className={`font-semibold text-gray-900 leading-tight tracking-normal break-words ${\n            isVerySmallLandscape\n              ? 'text-base' // Força fonte menor em paisagem muito estreita\n              : isMobileLandscape \n                ? 'text-lg sm:text-xl' \n                : 'text-xl sm:text-2xl md:text-3xl'\n          }`}\n          style={isVerySmallLandscape ? { fontSize: 'clamp(1rem, 4vw, 1.25rem)' } : {}}\n        >\n          {capitalizeWords(titulo)}\n        </h2>\n      </div>\n\n      <div className=\"absolute top-2 sm:top-4 right-2 sm:right-4 flex items-center gap-2\">\n        {!isMobile && (\n          <button\n            onClick={toggleMaximize}\n            className=\"p-2 text-green-700 hover:text-green-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2\"\n            aria-label={isMaximized ? \"Restaurar painel\" : \"Maximizar painel\"}\n            title={isMaximized ? \"Restaurar\" : \"Maximizar\"}\n          >\n            {isMaximized ? (\n              <Minimize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            ) : (\n              <Maximize2 size={18} className=\"stroke-2\" aria-hidden=\"true\" />\n            )}\n          </button>\n        )}\n\n        <button\n          onClick={closePainel}\n          className={`text-gray-700 hover:text-gray-900 hover:bg-green-100 transition-colors duration-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 ${\n            isMobileLandscape ? 'p-1.5' : 'p-2'\n          }`}\n          aria-label=\"Fechar painel\"\n        >\n          <X \n            size={isMobileLandscape ? 18 : 20} \n            aria-hidden=\"true\"\n            className=\"stroke-2\"\n          />\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default PainelHeader;\n","import { useState, useEffect } from \"react\";\n\nconst usePainelVisibility = (painelInfo) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  console.log(\"usePainelVisibility - painelInfo:\", painelInfo);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      const isMobileWidth = window.innerWidth <= 768;\n      const isMobileLandscape = window.innerWidth > window.innerHeight && window.innerWidth <= 1024;\n      setIsMobile(isMobileWidth || isMobileLandscape);\n    };\n    \n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    window.addEventListener(\"orientationchange\", checkMobile);\n    \n    return () => {\n      window.removeEventListener(\"resize\", checkMobile);\n      window.removeEventListener(\"orientationchange\", checkMobile);\n    };\n  }, []);\n\n  useEffect(() => {\n    console.group(\"usePainelVisibility - Effect\");\n    console.log(\"painelInfo recebido:\", painelInfo);\n    \n    if (painelInfo && typeof painelInfo === 'object') {\n      console.log(\"painelInfo válido, definindo visibilidade como true\");\n      setIsVisible(true);\n      document.body.style.overflow = \"hidden\";\n    } else {\n      console.log(\"painelInfo inválido ou undefined, definindo visibilidade como false\");\n      setIsVisible(false);\n      document.body.style.overflow = \"\";\n    }\n\n    console.log(\"Estado atual:\", { isVisible, isMobile });\n    console.groupEnd();\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [painelInfo]);\n\n  console.log(\"usePainelVisibility - returning state:\", { isVisible, isMobile });\n\n  return { isVisible, isMobile };\n};\n\nexport default usePainelVisibility;","import React from 'react';\nimport PainelHeader from '../../PainelHeader';\nimport usePainelVisibility from '../../hooks/usePainelVisibility';\nimport { usePainelDimensions } from '../../hooks/usePainelDimensions';\n\nconst PainelContainer = ({ \n  painelInfo, \n  closePainel, \n  children,\n  isMaximized,\n  onToggleMaximize\n}) => {\n  const { isVisible, isMobile } = usePainelVisibility(painelInfo);\n  const painelDimensions = usePainelDimensions(isMobile, isMaximized);\n\n  if (!painelInfo) return null;\n\n  // Determinar altura da navbar baseada no tamanho da tela\n  const isMobileLandscape = isMobile && window.innerWidth > window.innerHeight;\n  const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n\n  const baseClasses = `\n    fixed\n    ${isMobile \n      ? `inset-x-0 top-0 w-full h-full` \n      : 'top-30 bottom-0 right-0 w-full sm:w-3/4 lg:w-[49%] h-auto'\n    }\n    rounded-t-xl shadow-xl z-[9999] transform transition-all duration-500 ease-in-out\n    bg-white border-t-4 border-white\n  `;\n  \n  const visibilityClasses = isVisible \n    ? isMobile \n      ? \"translate-y-0 opacity-100\" \n      : \"translate-y-0 opacity-100\"\n    : isMobile \n      ? \"translate-y-full opacity-0\" \n      : \"translate-y-full opacity-0\";\n\n  return (\n    <div\n      role=\"dialog\"\n      aria-labelledby=\"painel-titulo\"\n      aria-describedby=\"painel-descricao\"\n      aria-modal=\"true\"\n      className={`${baseClasses} ${visibilityClasses}${isMobile ? ' painel-informacoes-mobile' : ''}`}\n      style={{\n        height: painelDimensions.height,\n        maxHeight: painelDimensions.maxHeight,\n        width: isMobile ? '100%' : painelDimensions.width,\n        top: isMobile ? `${navbarHeight}px` : 72,\n        display: \"flex\",\n        flexDirection: \"column\",\n        ...(isMobile && {\n          borderRadius: painelDimensions.isMobileLandscape ? '0' : '1rem 1rem 0 0',\n          boxShadow: painelDimensions.isMobileLandscape \n            ? '0 0 0 0' \n            : '0 -4px 6px -1px rgba(0, 0, 0, 0.1), 0 -2px 4px -1px rgba(0, 0, 0, 0.06)'\n        })\n      }}\n    >\n      <PainelHeader \n        titulo={painelInfo.titulo} \n        closePainel={closePainel}\n        toggleMaximize={onToggleMaximize}\n        isMaximized={isMaximized}\n      />\n      \n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-green-600/40 scrollbar-track-green-50/20\">\n        <div className={`${isMobile ? 'p-3 sm:p-4' : 'p-6'} space-y-6 sm:space-y-8`}>\n          <div className=\"prose prose-sm sm:prose-base md:prose-lg lg:prose-xl max-w-none\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PainelContainer); ","import { useState, useEffect, useMemo } from 'react';\n\nexport const usePainelDimensions = (isMobile, isMaximized) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  \n  // Breakpoints para responsividade\n  const breakpoints = {\n    sm: 640,\n    md: 768,\n    lg: 1024,\n    xl: 1280,\n    '2xl': 1536\n  };\n\n  // Detectar mudanças no tamanho da janela\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Calcular dimensões base\n  const dimensions = useMemo(() => {\n    // Determinar altura da navbar baseada na orientação\n    const isMobileLandscape = isMobile && windowWidth > windowHeight;\n    const navbarHeight = isMobileLandscape ? 48 : isMobile ? 56 : 72;\n    const baseHeight = `calc(100vh - ${navbarHeight}px)`;\n    const baseMaxHeight = isMobile ? \"96vh\" : \"92vh\";\n\n    // Determinar se está em modo desktop\n    const isDesktop = windowWidth >= breakpoints.md;\n    \n    // Determinar se deve usar grid\n    const shouldUseGrid = isDesktop && isMaximized;\n\n    // Calcular largura do painel\n    let panelWidth;\n    if (isMobile) {\n      if (isMobileLandscape) {\n        // Mobile na horizontal: preencher toda a tela\n        panelWidth = '100%';\n      } else {\n        // Mobile na vertical: preencher toda a largura\n        panelWidth = '100%';\n      }\n    } else {\n      // Desktop\n      panelWidth = isMaximized \n      ? '100%' \n      : windowWidth >= breakpoints.lg \n        ? '49%' \n        : '75%';\n    }\n\n    return {\n      height: baseHeight,\n      maxHeight: baseMaxHeight,\n      width: panelWidth,\n      isDesktop,\n      isMobileLandscape,\n      shouldUseGrid,\n      breakpoints,\n      zIndex: 1000\n    };\n  }, [isMobile, isMaximized, windowWidth, windowHeight]);\n\n  return dimensions;\n};","import React, { useRef, useState, useEffect } from 'react';\n\n/**\n * DocumentViewer\n * Componente para exibir uma lista de documentos (PDFs) associados a uma escola.\n * Permite visualização via iframe (Google Drive/Docs) ou download externo, com tratamento de erros e fallback amigável.\n * Props:\n *   - documentos: Array de objetos { id, titulo, autoria, tipo, link_pdf }\n *   - title: string (opcional)\n */\n\n// Utility function to transform Google Drive links\nconst transformarLinkGoogleDrive = (link) => {\n  if (!link || typeof link !== 'string') return null;\n  \n  const match = link.match(/\\/d\\/([a-zA-Z0-9-_]+)/);\n  if (!match) return null;\n  \n  const fileId = match[1];\n  return `https://docs.google.com/gview?url=https://drive.google.com/uc?id=${fileId}&embedded=true`;\n};\n\n/**\n * Componente de troca de visualização (lista/grade) acessível e reutilizável\n */\nconst ViewModeToggle = ({ viewMode, setViewMode }) => (\n  <div className=\"flex items-center gap-2\" role=\"tablist\" aria-label=\"Modos de visualização dos documentos\">\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'list'}\n      aria-label=\"Visualizar em lista\"\n      aria-pressed={viewMode === 'list'}\n      onClick={() => setViewMode('list')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'list'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de lista */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Lista</span>\n    </button>\n    <button\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={viewMode === 'grid'}\n      aria-label=\"Visualizar em grade\"\n      aria-pressed={viewMode === 'grid'}\n      onClick={() => setViewMode('grid')}\n      className={`p-2 rounded-lg flex items-center gap-1 transition-colors focus:outline-none focus:ring-2 focus:ring-green-600 ${\n        viewMode === 'grid'\n          ? 'bg-green-100 text-green-800 font-semibold'\n          : 'text-gray-600 hover:bg-gray-100'\n      }`}\n      tabIndex={0}\n    >\n      {/* Ícone de grade */}\n      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n      </svg>\n      <span className=\"hidden sm:inline\">Grade</span>\n    </button>\n  </div>\n);\n\nconst DocumentViewer = ({ documentos, title = \"Documentos\" }) => {\n  const [selectedDoc, setSelectedDoc] = useState(null);\n  const [viewMode, setViewMode] = useState('list'); // 'list' ou 'grid'\n  const iframeRef = useRef(null);\n  const [iframeError, setIframeError] = useState(false);\n  const [useGoogleDocsViewer, setUseGoogleDocsViewer] = useState(false);\n\n  // Reset states when selected document changes\n  useEffect(() => {\n    if (selectedDoc) {\n      setIframeError(false);\n      setUseGoogleDocsViewer(false);\n    }\n  }, [selectedDoc]);\n\n  // Set first document as selected if none is selected\n  useEffect(() => {\n    if (!selectedDoc && documentos?.length > 0) {\n      setSelectedDoc(documentos[0]);\n    }\n  }, [documentos, selectedDoc]);\n\n  // Handle iframe events\n  useEffect(() => {\n    const iframe = iframeRef.current;\n    if (!iframe || !selectedDoc) return;\n\n    const handleLoad = () => {\n      setIframeError(false);\n    };\n\n    const handleError = () => {\n      setIframeError(true);\n      setUseGoogleDocsViewer(true);\n    };\n\n    iframe.addEventListener('load', handleLoad);\n    iframe.addEventListener('error', handleError);\n\n    return () => {\n      iframe.removeEventListener('load', handleLoad);\n      iframe.removeEventListener('error', handleError);\n    };\n  }, [selectedDoc]);\n\n  // Early return after all hooks\n  if (!documentos || documentos.length === 0) {\n    return null;\n  }\n\n  const renderDocumentGrid = () => {\n    return (\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\n        {documentos.map((doc) => (\n          <div\n            key={doc.id}\n            className={`\n              flex flex-col justify-between h-full max-w-xs mx-auto\n              rounded-2xl transition-all duration-200 cursor-pointer\n              shadow-sm hover:shadow-lg\n              ${selectedDoc?.id === doc.id\n                ? 'bg-green-100 scale-[1.03]'\n                : 'bg-white hover:bg-green-50'\n              }\n            `}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            tabIndex={0}\n            aria-label={`Selecionar documento: ${doc.titulo}`}\n          >\n            <div className=\"p-5 flex-1 flex flex-col justify-between\">\n              <h4 className=\"font-semibold text-green-800 mb-2 line-clamp-2 text-lg\">{doc.titulo}</h4>\n              {doc.autoria && (\n                <p className=\"text-sm text-gray-600 mb-2 line-clamp-1\">Por: {doc.autoria}</p>\n              )}\n              {doc.tipo && (\n                <span className=\"inline-block px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                  {doc.tipo}\n                </span>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentList = () => {\n    return (\n      <div className=\"space-y-2\">\n        {documentos.map((doc) => (\n          <button\n            key={doc.id}\n            onClick={() => {\n              setSelectedDoc(doc);\n            }}\n            className={`w-full text-left p-3 rounded-lg transition-colors duration-200 ${\n              selectedDoc?.id === doc.id\n                ? 'bg-green-100'\n                : 'hover:bg-green-50'\n            }`}\n          >\n            <h4 className=\"font-medium text-green-800\">{doc.titulo}</h4>\n            {doc.autoria && (\n              <p className=\"text-sm text-gray-600\">Por: {doc.autoria}</p>\n            )}\n            {doc.tipo && (\n              <span className=\"inline-block mt-1 px-2 py-1 text-xs font-medium bg-green-200 text-green-800 rounded-full\">\n                {doc.tipo}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  const renderDocumentViewer = () => {\n    if (!selectedDoc) return null;\n\n    const isGoogleDriveLink = selectedDoc.link_pdf.includes('drive.google.com/file/d/');\n\n    return (\n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        {isGoogleDriveLink ? (\n          <>\n            {!useGoogleDocsViewer ? (\n              <iframe \n                ref={iframeRef}\n                src={selectedDoc.link_pdf.replace('/view?usp=sharing', '/preview')}\n                width=\"100%\" \n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={selectedDoc.titulo}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            ) : (\n              <iframe\n                ref={iframeRef}\n                src={transformarLinkGoogleDrive(selectedDoc.link_pdf)}\n                width=\"100%\"\n                height=\"500px\"\n                allow=\"autoplay\"\n                loading=\"lazy\"\n                title={`${selectedDoc.titulo} (Google Docs Viewer)`}\n                sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                className=\"bg-white\"\n              />\n            )}\n            {iframeError && (\n              <div className=\"p-6 text-center text-gray-600 bg-green-100\">\n                <p className=\"mb-3 text-lg\">Não foi possível carregar o documento diretamente.</p>\n                <a\n                  href={selectedDoc.link_pdf}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n                >\n                  <svg \n                    className=\"w-5 h-5 mr-2\" \n                    fill=\"none\" \n                    stroke=\"currentColor\" \n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path \n                      strokeLinecap=\"round\" \n                      strokeLinejoin=\"round\" \n                      strokeWidth={2} \n                      d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" \n                    />\n                  </svg>\n                  Abrir em nova aba\n                </a>\n              </div>\n            )}\n          </>\n        ) : (\n          <div className=\"flex justify-center p-6\">\n            <a\n              href={selectedDoc.link_pdf}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center px-6 py-3 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n            >\n              <svg \n                className=\"w-5 h-5 mr-2\" \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" \n                />\n              </svg>\n              Ver documento PDF\n            </a>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold text-green-800\">{title}:</h3>\n        {documentos.length > 1 && (\n          <ViewModeToggle viewMode={viewMode} setViewMode={setViewMode} />\n        )}\n      </div>\n      \n      {documentos.length > 1 && (\n        <div className=\"mb-6\">\n          {viewMode === 'grid' ? renderDocumentGrid() : renderDocumentList()}\n        </div>\n      )}\n      \n      {renderDocumentViewer()}\n    </div>\n  );\n};\n\nexport default React.memo(DocumentViewer); ","import React, { useState, useEffect } from 'react';\nimport { getTituloByVideoUrl } from '../../../services/legendasService';\n\n/**\n * VideoPlayer\n * Componente para exibir vídeos do YouTube de forma responsiva e acessível.\n * Faz extração do ID do vídeo a partir de diferentes formatos de URL e exibe fallback amigável em caso de erro.\n * Props:\n *   - videoUrl: string (URL do vídeo)\n *   - title: string (opcional)\n *   - escolaId: number (ID da escola para buscar título personalizado)\n */\n\n// Utility function to extract YouTube video ID\nconst extrairIdYoutube = (url) => {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  // Remove query parameters to simplify\n  const baseUrl = url.split('?')[0];\n\n  // Patterns to extract video ID\n  const patterns = [\n    /youtube\\.com\\/embed\\/([^/?&]+)/,                 // embed/ID\n    /youtube\\.com\\/watch\\?v=([^&]+)/,                 // watch?v=ID\n    /youtu\\.be\\/([^?&]+)/,                            // youtu.be/ID\n    /youtube\\.com\\/v\\/([^?&]+)/                       // youtube.com/v/ID\n  ];\n\n  for (const pattern of patterns) {\n    const match = baseUrl.match(pattern);\n    if (match && match[1]) {\n      return match[1];\n    }\n  }\n\n  return null;\n};\n\nconst VideoPlayer = ({ videoUrl, title = \"Vídeo\", escolaId }) => {\n  const [tituloPersonalizado, setTituloPersonalizado] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Buscar título personalizado da nova tabela\n  useEffect(() => {\n    const buscarTitulo = async () => {\n      if (!videoUrl || !escolaId) return;\n\n      try {\n        setLoading(true);\n        const titulo = await getTituloByVideoUrl(videoUrl, escolaId);\n        setTituloPersonalizado(titulo);\n      } catch (error) {\n        console.warn('Erro ao buscar título personalizado:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    buscarTitulo();\n  }, [videoUrl, escolaId]);\n\n  if (!videoUrl) return null;\n\n  const videoId = extrairIdYoutube(videoUrl);\n  \n  if (!videoId) {\n    return (\n      <div className=\"mt-8 max-w-4xl mx-auto\">\n        <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n          {tituloPersonalizado?.titulo || title}:\n        </h3>\n        <div className=\"p-6 text-center text-gray-600 bg-gray-50 rounded-lg\">\n          <p className=\"mb-3 text-lg\">Link do vídeo inválido ou não suportado.</p>\n          <a\n            href={videoUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center px-4 py-2 text-base font-medium text-white bg-green-700 hover:bg-green-800 rounded-lg transition-colors duration-200 shadow-md hover:shadow-lg\"\n          >\n            <svg \n              className=\"w-5 h-5 mr-2\" \n              fill=\"none\" \n              stroke=\"currentColor\" \n              viewBox=\"0 0 24 24\"\n            >\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" \n              />\n              <path \n                strokeLinecap=\"round\" \n                strokeLinejoin=\"round\" \n                strokeWidth={2} \n                d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" \n              />\n            </svg>\n            Tentar abrir no YouTube\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-8 max-w-4xl mx-auto\">\n      <h3 className=\"text-xl font-semibold text-green-800 mb-4\">\n        {tituloPersonalizado?.titulo || title}:\n      </h3>\n      \n      {/* Informações adicionais do título personalizado */}\n      {tituloPersonalizado && (\n        <div className=\"mb-4 p-4 bg-green-100 rounded-lg\">\n          {tituloPersonalizado.descricao && (\n            <p className=\"text-gray-700 mb-2\">{tituloPersonalizado.descricao}</p>\n          )}\n          \n          <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n            {tituloPersonalizado.categoria && (\n              <span className=\"capitalize bg-green-200 text-green-800 px-2 py-1 rounded\">\n                {tituloPersonalizado.categoria}\n              </span>\n            )}\n            {tituloPersonalizado.plataforma && (\n              <span className=\"capitalize\">\n                {tituloPersonalizado.plataforma}\n              </span>\n            )}\n            {tituloPersonalizado.duracao && (\n              <span>Duração: {tituloPersonalizado.duracao}</span>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"rounded-lg overflow-hidden shadow-lg bg-white\">\n        <div className=\"relative pb-[56.25%] h-0\">\n          <iframe\n            className=\"absolute top-0 left-0 w-full h-full\"\n            src={`https://www.youtube.com/embed/${videoId}`}\n            title={tituloPersonalizado?.titulo || title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n            loading=\"lazy\"\n            referrerPolicy=\"origin\"\n          />\n        </div>\n      </div>\n      \n\n    </div>\n  );\n};\n\nexport default React.memo(VideoPlayer); ","import React, { useRef, useState, useEffect } from \"react\";\nimport { useShare } from \"../hooks/useShare\";\nimport { useDynamicURL } from \"../hooks/useDynamicURL\";\nimport { useClickOutside } from \"../hooks/useClickOutside\";\nimport useAudio from \"../hooks/useAudio\";\nimport useDocumentosEscola from \"../hooks/useDocumentosEscola\";\n\n// Import modular components\nimport EscolaInfo from \"./components/EscolaInfo\";\nimport TerraIndigenaInfo from \"./TerraIndigenaInfo\";\nimport ShareSection from \"./ShareSection\";\nimport IntroPanel from \"./IntroPanel\";\nimport PainelContainer from \"./components/PainelContainer\";\nimport DocumentViewer from \"./components/DocumentViewer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst PainelInformacoes = ({ painelInfo, closePainel, escola_id, refreshKey = 0 }) => {\n  const painelRef = useRef(null);\n  const [isMaximized, setIsMaximized] = useState(false);\n  \n  const { gerarLinkCustomizado, copiarLink, compartilhar } = useShare(painelInfo);\n  const { documentos } = useDocumentosEscola(painelInfo?.id);\n  \n  const toggleMaximize = () => setIsMaximized(prev => !prev);\n  \n  useDynamicURL(painelInfo, gerarLinkCustomizado);\n  useClickOutside(painelRef, closePainel);\n\n  // Forçar re-renderização quando refreshKey mudar\n  useEffect(() => {\n    console.log('PainelInformacoes: refreshKey mudou para', refreshKey);\n  }, [refreshKey]);\n\n  if (!painelInfo) {\n    return null;\n  }\n\n  // Determine panel type\n  const isTerraIndigena = painelInfo.tipo === 'terra_indigena';\n  const isIntro = painelInfo.titulo === 'Sobre o site';\n\n  const renderContent = () => {\n    if (isIntro) {\n      return <IntroPanel painelInfo={painelInfo} />;\n    }\n    \n    if (isTerraIndigena) {\n      return <TerraIndigenaInfo terraIndigena={painelInfo} />;\n    }\n\n    return (\n      <>\n        <EscolaInfo \n          escola={painelInfo} \n          shouldUseGrid={true}\n          refreshKey={refreshKey}\n        />\n        {documentos && documentos.length > 0 && (\n          <DocumentViewer \n            documentos={documentos}\n            title=\"Produções e materiais da escola\"\n          />\n        )}\n        {painelInfo.link_para_videos && (\n          <VideoPlayer \n            videoUrl={painelInfo.link_para_videos}\n            title=\"Vídeo da escola\"\n            escolaId={painelInfo.id}\n          />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div ref={painelRef}>\n      <PainelContainer\n        painelInfo={painelInfo}\n        closePainel={closePainel}\n        isMaximized={isMaximized}\n        onToggleMaximize={toggleMaximize}\n      >\n        {renderContent()}\n        <ShareSection \n          copiarLink={copiarLink} \n          compartilhar={compartilhar} \n          painelInfo={painelInfo}\n        />\n      </PainelContainer>\n    </div>\n  );\n};\n\nexport default React.memo(PainelInformacoes); ","import { criarSlug } from '../../utils/slug';\n\nexport const useShare = (painelInfo) => {\n  const gerarLinkCustomizado = () => {\n    return (\n      window.location.origin +\n      window.location.pathname +\n      \"?panel=\" +\n      criarSlug(painelInfo.titulo)\n    );\n  };\n\n  const copiarLink = async () => {\n    const url = gerarLinkCustomizado();\n    try {\n      await navigator.clipboard.writeText(url);\n      alert(\"Link copiado!\");\n    } catch (err) {\n      const input = document.createElement(\"input\");\n      input.value = url;\n      document.body.appendChild(input);\n      input.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(input);\n      alert(\"Link copiado!\");\n    }\n  };\n\n  const compartilhar = () => {\n    const url = gerarLinkCustomizado();\n    const texto = `Confira este painel: ${painelInfo.titulo}`;\n    \n    if (navigator.share) {\n      navigator.share({\n        title: painelInfo.titulo,\n        text: texto,\n        url: url,\n      });\n    } else {\n      window.open(\n        `https://twitter.com/intent/tweet?text=${encodeURIComponent(texto)}&url=${encodeURIComponent(url)}`,\n        \"_blank\"\n      );\n    }\n  };\n\n  return { gerarLinkCustomizado, copiarLink, compartilhar };\n};","import { useEffect } from 'react';\n\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Só fecha se o clique for no mapa (openlayers-container)\n      const el = event.target;\n      if (el.classList && el.classList.contains('openlayers-container')) {\n        return;\n      }\n      \n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};","import { useEffect, useRef } from \"react\";\n\nexport const useDynamicURL = (painelInfo, gerarLinkCustomizado) => {\n  const lastUrlRef = useRef(null);\n  const timeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (!painelInfo) return;\n\n    // Limpa o timeout anterior se existir\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Cria um novo timeout para debounce\n    timeoutRef.current = setTimeout(() => {\n      const newUrl = gerarLinkCustomizado();\n      \n      // Só atualiza se a URL realmente mudou\n      if (newUrl !== lastUrlRef.current) {\n        try {\n          window.history.replaceState({}, \"\", newUrl);\n          lastUrlRef.current = newUrl;\n        } catch (error) {\n          console.warn('Erro ao atualizar URL:', error);\n        }\n      }\n    }, 300); // 300ms de debounce\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [painelInfo, gerarLinkCustomizado]);\n};","/**\n * Componente MapaEscolasIndigenas - Exibe o mapa interativo com escolas indígenas e terras indígenas\n * \n * @param {Object} props - Propriedades do componente\n * @param {Array} props.dataPoints - Array de pontos de dados das escolas\n * @param {Function} props.onPainelOpen - Função para abrir o painel de informações\n * @returns {React.ReactElement} - Componente renderizado\n */\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport MapSelector from \"./MapSelector\";\nimport PainelInformacoes from \"./PainelInformacoes\";\nimport \"./MapaEscolasIndigenas.css\";\nimport { criarSlug } from '../utils/slug';\nimport { useRefresh } from '../contexts/RefreshContext';\n\nconst MapaEscolasIndigenas = ({ dataPoints, onPainelOpen }) => {\n  console.log(\"DataPoints recebidos no MapaEscolasIndigenas:\", dataPoints ? {\n    quantidade: dataPoints.length,\n    exemplo: dataPoints[0] ? {\n      titulo: dataPoints[0].titulo,\n      latitude: dataPoints[0].Latitude,\n      longitude: dataPoints[0].Longitude,\n      tipo: dataPoints[0].tipo\n    } : 'Nenhum ponto'\n  } : 'Nenhum dataPoint');\n\n  const { refreshKey } = useRefresh();\n\n  const urlParams = useMemo(() => new URLSearchParams(window.location.search), []);\n  const panel = urlParams.get('panel');\n  const initialPanel = useMemo(() => {\n    if (panel && panel !== '' && dataPoints && dataPoints.length > 0) {\n      const pointFound = dataPoints.find((item) => criarSlug(item.titulo) === panel);\n      return pointFound || null;\n    }\n    return null;\n  }, [panel, dataPoints]);\n\n  const [painelInfo, setPainelInfo] = useState(initialPanel);\n  const [initialPanelOpened, setInitialPanelOpened] = useState(!!initialPanel);\n  \n  // Memoize escolasVisiveis para evitar recálculos desnecessários\n  const escolasVisiveis = useMemo(() => \n    dataPoints ? dataPoints.filter(point => point.pontuacao >= 0) : [],\n    [dataPoints]\n  );\n  \n  const totalEscolas = useMemo(() => escolasVisiveis.length, [escolasVisiveis]);\n\n  // Abrir painel automaticamente quando initialPanel for encontrado (apenas uma vez)\n  useEffect(() => {\n    if (initialPanel && !painelInfo && !initialPanelOpened) {\n      console.log('MapaEscolasIndigenas: Abrindo painel automaticamente para:', initialPanel.titulo);\n      setPainelInfo(initialPanel);\n      setInitialPanelOpened(true);\n    }\n  }, [initialPanel, painelInfo, initialPanelOpened]);\n\n  // Adicionar useEffect para monitorar mudanças no painelInfo\n  useEffect(() => {\n    console.group(\"MapaEscolasIndigenas - painelInfo state changed\");\n    console.log(\"Novo valor de painelInfo:\", {\n      titulo: painelInfo?.titulo,\n      tipo: painelInfo?.tipo,\n      hasLink: !!painelInfo?.link_para_documentos,\n      linkValue: painelInfo?.link_para_documentos,\n      isInitialPanel: painelInfo === initialPanel,\n      isNull: painelInfo === null,\n      isUndefined: painelInfo === undefined\n    });\n    console.groupEnd();\n  }, [painelInfo, initialPanel]);\n\n  // Otimizar a função de abrir painel\n  const abrirPainel = useCallback((info) => {\n    if (!info) return;\n    setPainelInfo(info);\n  }, []);\n\n  // Função para forçar refresh do painel\n  const refreshPainel = useCallback(() => {\n    console.log('Forçando refresh do painel de informações');\n    // O refresh será disparado pelo contexto\n  }, []);\n\n  // Expor a função abrirPainel e refreshPainel para componentes externos\n  useEffect(() => {\n    console.log('MapaEscolasIndigenas: onPainelOpen disponível:', !!onPainelOpen);\n    console.log('MapaEscolasIndigenas: abrirPainel disponível:', !!abrirPainel);\n    if (onPainelOpen && typeof onPainelOpen === 'function') {\n      console.log('MapaEscolasIndigenas: Expondo função abrirPainel e refreshPainel');\n      onPainelOpen(abrirPainel, refreshPainel);\n    }\n  }, [abrirPainel, onPainelOpen, refreshPainel]);\n\n  // Otimizar a função de fechar painel\n  const fecharPainel = useCallback(() => {\n    setPainelInfo(null);\n  }, []);\n\n  return (\n    <div className=\"relative h-screen w-full overflow-hidden\">\n      {/* Novo mapa sem gaps */}\n      <MapSelector\n        dataPoints={escolasVisiveis}\n        onPainelOpen={abrirPainel}\n        painelAberto={!!painelInfo}\n        className=\"h-full w-full\"\n      />\n\n      {/* Painel de informações */}\n      {painelInfo && (\n        <>\n          {console.log(\"MapaEscolasIndigenas - Renderizando PainelInformacoes com:\", {\n            painelInfo,\n            hasLink: painelInfo?.link_para_documentos,\n            linkValue: painelInfo?.link_para_documentos\n          })}\n          <PainelInformacoes \n            painelInfo={painelInfo} \n            closePainel={fecharPainel} \n            refreshKey={refreshKey}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MapaEscolasIndigenas;"],"names":["MARKER_SVG_PATH","concat","process","createMarkerStyle","feature","showNames","arguments","length","undefined","markerData","get","isNearbyPair","markerStyle","Style","image","Icon","src","scale","anchor","anchorXUnits","anchorYUnits","geometry","getGeometry","titulo","text","Text","font","fill","Fill","color","stroke","Stroke","width","offsetY","textAlign","isMobile","isMobileWidth","window","innerWidth","hasTouch","navigator","maxTouchPoints","isMobileUserAgent","test","userAgent","isMobileOrientation","orientation","mobileCriteria","filter","Boolean","console","log","OpenLayersInteractions","constructor","map","options","this","_objectSpread","enableHover","enableClick","enableDoubleClick","enableTouch","hoverDelay","clickDelay","eventHandlers","Map","hoveredFeature","clickedFeature","clickTimeout","hoverTimeout","tooltipElement","initializeInteractions","mobile","windowWidth","setupHoverInteraction","setupClickInteraction","setupDoubleClickInteraction","setupTouchInteraction","on","event","handlePointerMove","handlePointerLeave","handleClick","handleDoubleClick","forEachFeatureAtPixel","pixel","type","schoolData","terraIndigenaInfo","clearHover","applyHover","handleMobileClick","clearTimeout","setTimeout","executeClickHandler","executeDoubleClickHandler","handleTouchEnd","forceHideTooltip","showTooltip","executeHoverHandler","applyHoverStyle","clearHoverStyle","hideTooltip","executeHoverOutHandler","hoverStyleFunction","tooltipContent","getTooltipContent","createTooltipElement","getTargetElement","appendChild","remove","content","element","document","createElement","className","isTerraIndigena","includes","clickableContent","innerHTML","tooltipStyles","backgroundColor","borderColor","Object","assign","style","position","padding","borderRadius","fontSize","fontFamily","fontWeight","pointerEvents","zIndex","maxWidth","whiteSpace","overflow","textOverflow","boxShadow","border","cursor","clickableSpan","querySelector","textDecoration","textDecorationColor","textDecorationThickness","transition","display","addEventListener","transform","coordinate","getPixelFromCoordinate","left","top","tooltipContentFunction","handler","eventType","set","off","delete","clearHandlers","clear","updateOptions","newOptions","destroy","createDefaultInteractions","MAP_CONFIG","center","zoom","maxZoom","minZoom","clusterDistance","clusterMinDistance","clusterAnimationDuration","proximityThreshold","disableClusteringAtZoom","tooltipOffset","tooltipDelay","interaction","performance","enableLazyLoading","maxFeaturesPerTile","enableFeatureCulling","enableTileCaching","ANIMATION_CONFIG","duration","marker","cluster","pan","easing","MARKER_COLORS","small","medium","large","xlarge","CLUSTER_SIZES","min","max","size","PROJECTION_CONFIG","BASE_LAYER_CONFIG","url","attributions","wrapX","tilePixelRatio","tileSize","_ref","dataPoints","onPainelOpen","showMarcadores","showNomesEscolas","vectorSourceRef","useRef","vectorLayerRef","hoveredMarker","setHoveredMarker","React","selectedMarker","setSelectedMarker","initializeMarkers","useMemo","useCallback","current","VectorSource","VectorLayer","source","addLayer","setupInteractions","interactions","onMarkerClick","onMarkerHover","createMarkerInteractions","handleMarkerClick","handleMarkerHover","handleMarkerHoverOut","setStyle","f","baseStyle","hoverStyle","Array","isArray","changed","updateMarkers","pontosValidos","point","latitude","longitude","lat","parseFloat","lng","isNaN","forEach","index","Feature","Point","fromLonLat","municipio","Municipio","uf","UF","addFeature","updateMarkerStyles","useEffect","removeLayer","_jsx","LAYER_COLORS","terrasIndigenas","regularizada","hover","declarada","estadoSP","createTerrasIndigenasStyle","isHovered","properties","colorConfig","fase_ti","colors","lineDash","data","showTerrasIndigenas","interactionsRef","setHoveredFeature","selectedFeature","setSelectedFeature","features","setFeatures","isMobileDevice","initializeLayer","geoJSONFeatures","GeoJSON","dataProjection","featureProjection","readFeatures","getProperties","terrai_nom","tipo","etnia","etnia_nome","municipio_","uf_sigla","superficie","fase","modalidade","reestudo","reestudo_t","cr","faixa_fron","undadm_nom","undadm_sig","dominio_un","data_atual","terrai_cod","undadm_cod","error","warn","onFeatureClick","onFeatureHover","createGeoJSONInteractions","handleFeatureClick","handleFeatureHover","handleFeatureHoverOut","extent","getExtent","getView","fit","applySelectionStyleToFeature","selectionOptions","fillColor","strokeColor","strokeWidth","selectionStyle","applySelectionStyle","removeSelectionStyleFromFeature","timeout","showEstadoSP","createEstadoSPStyle","interactive","terrasIndigenasData","estadoSPData","terrasIndigenasRef","estadoSPRef","layersStatus","setLayersStatus","visible","loaded","hasValidData","updateLayerStatus","layerName","updates","prev","handleLayerError","message","handleLayerSuccess","getLayersStats","stats","total","errors","values","layer","getLayersInfo","hasData","featureCount","info","_jsxs","children","OpenLayersTerrasIndigenas","ref","onLoad","onError","OpenLayersEstadoSP","props","id","proj4","defs","register","mapContainer","baseLayer","mapInfo","setMapInfo","useState","initialCenter","initialZoom","createBaseLayers","satelliteLayer","TileLayer","XYZ","preload","useInterimTilesOnError","initializeMap","target","layers","view","View","enableRotation","controls","defaultControls","toLonLat","getCenter","newView","toFixed","getZoom","updateMapConfig","newCenter","newZoom","currentCenter","currentZoom","setCenter","setZoom","setTarget","MapWrapper","_Fragment","OpenLayersMarkers","OpenLayersLayers","cache","useGeoJSONCache","key","setData","loading","setLoading","setError","async","_geoJSON$features","_geoJSON$features2","response","fetch","ok","Error","status","geoJSON","json","crs","firstFeature","keys","coordinates","err","fetchGeoJSON","painelAberto","terrasLoading","terrasError","estadoLoading","estadoError","setShowTerrasIndigenas","setShowEstadoSP","setShowMarcadores","setIsMobile","isMinimized","setIsMinimized","checkMobile","removeEventListener","handleMinimize","_terrasIndigenasData$","_terrasIndigenasData$2","_estadoSPData$feature","_estadoSPData$feature2","shouldReactivate","CabecalhoMenu","_ref2","onMinimize","viewBox","strokeLinecap","strokeLinejoin","d","onClick","BotaoCamada","_ref3","label","checked","onChange","disabled","subItems","item","cx","cy","r","mapCenter","mapZoom","mobileZoom","desktopZoom","selectedZoom","mobileCenter","desktopCenter","selectedCenter","OpenLayersMap","criarSlug","texto","toLowerCase","normalize","replace","trim","escolaId","documentos","setDocumentos","isLoading","setIsLoading","authData","authError","supabase","auth","getSession","temSessao","session","rlsData","rlsError","from","select","limit","podeAcessar","code","details","hint","allDocs","allDocsError","doc","escola_id","tipo_escola_id","valor_escola_id","eq","toString","order","ascending","dataAsNumber","errorAsNumber","Number","dataAsString","errorAsString","String","count","fetchDocumentos","InfoGrid","memo","columns","gap","InfoTable","row","value","InfoStats","_ref4","stat","icon","_ref5","title","description","defaultCollapsed","layout","layoutProps","isCollapsed","setIsCollapsed","role","renderContent","capitalize","str","charAt","toUpperCase","slice","CompactCard","Check","X","InfoBlock","AddressDetails","escola","logradouro","numero","bairro","cep","endereco","field","MapPin","estado","join","MapButton","Latitude","Longitude","openMap","open","Navigation","SocialLinks","_ref6","links","expanded","onToggle","socialLinks","split","social","Globe","ChevronRight","link","href","rel","LinkIcon","ExternalLink","_ref7","setExpanded","toggle","basicInfoCards","Building","Calendar","ano_criacao","usa_redes_sociais","povos_indigenas","InfoSection","diretoria_ensino","links_redes_sociais","ImagensdasEscolas","refreshKey","imagens","setImagens","imagemZoom","setImagemZoom","cacheRef","cacheVersion","setCacheVersion","limparCacheERecarregar","fecharZoom","body","handleEsc","e","cacheKey","files","storage","list","imagensEncontradas","Promise","all","file","_legenda","_legenda2","_legenda3","_legenda4","_legenda5","filePath","name","publicUrl","getPublicUrl","legenda","getLegendaByImageUrl","publicURL","descricao","descricaoDetalhada","descricao_detalhada","autor","autor_foto","dataFoto","data_foto","categoria","urlError","buscarImagens","RefreshCw","img","alt","maxHeight","Date","toLocaleDateString","stopPropagation","historia_da_escola","htmlContent","marginTop","dangerouslySetInnerHTML","__html","ExpandableList","items","maxVisible","idx","minWidth","MiniCard","turnosValue","turnos_funcionamento","modalidadeList","modalidade_ensino","Sparkles","gridItems","Clock","Users","numero_alunos","MessageCircle","linguas_faladas","materiaisItems","BookOpen","BooleanValue","material_nao_indigena","material_indigena","Droplet","acesso_agua","Trash2","coleta_lixo","Wifi","acesso_internet","Monitor","equipamentos","modo_acesso","Utensils","cozinha","Apple","merenda_escolar","ChefHat","diferenciada","Home","espaco_escolar","renderBooleanStatus","valor","normalizado","formacao","resto","formatarFormacaoProfessores","formacao_professores","continuada","formatarFormacaoContinuada","formacao_continuada","UsersRound","UserCheck","professores_indigenas","UserMinus","professores_nao_indigenas","professores_falam_lingua","Star","User","gestao","outros_funcionarios","NotebookPen","ProjectCard","isNegative","availableProjects","GraduationCap","Heart","Target","project","ImagemHistoriadoProfessor","currentImageIndex","setCurrentImageIndex","zoomLevel","setZoomLevel","rotation","setRotation","imageOrientations","setImageOrientations","detectImageOrientation","resolve","Image","onload","isVertical","height","onerror","handleKeyDown","preventDefault","prevImage","nextImage","Math","then","imagensComUrl","genero","startsWith","caminhoRelativo","nome","created_at","orientations","catch","openImage","nextIndex","prevIndex","resetImage","ZoomIn","ZoomOut","RotateCw","ChevronLeft","historias","setHistorias","currentHistoriaIndex","setCurrentHistoriaIndex","getHistoriasProfessor","carregarHistorias","nextHistoria","prevHistoria","currentHistoria","hasMultipleHistorias","margin","outline","nome_professor","historia","imagem_public_url","descricao_imagem","_","GridLayoutWrapper","shouldUseGrid","containerClasses","gridSections","Component","BasicInfo","Modalidades","Infraestrutura","GestaoProfessores","ProjetosParcerias","HistoriaEscola","HistoriadoProfessor","_objectWithoutProperties","_excluded","xmlns","isTextArea","baseClasses","LargeHandFistIcon","HandFistIcon","terraIndigena","InfoItem","Tooltip","isVisible","setIsVisible","onMouseEnter","onMouseLeave","onFocus","onBlur","bottom","ShareButton","copied","setCopied","showShareOptions","setShowShareOptions","shareTextOptions","shareText","floor","random","shareUrl","location","shareButtons","component","WhatsappShareButton","Facebook","FacebookShareButton","quote","Twitter","TwitterShareButton","Linkedin","LinkedinShareButton","summary","clipboard","writeText","input","execCommand","removeChild","Link","button","ShareComponent","share","Share2","copiarLink","compartilhar","painelInfo","gerarLinkCustomizado","origin","pathname","gerarDescricao","gerarTitulo","PainelDescricao","sanitizedHTML","DOMPurify","sanitize","formattedText","endsWith","formatText","ALLOWED_TAGS","ALLOWED_ATTR","ADD_TAGS","ADD_ATTR","KEEP_CONTENT","ALLOW_DATA_ATTR","lineHeight","letterSpacing","audioUrl","SIGLAS_MAIUSCULAS","capitalizeWords","word","substr","closePainel","toggleMaximize","isMaximized","isMobileLandscape","innerHeight","isVerySmallLandscape","Minimize2","Maximize2","group","groupEnd","PainelContainer","onToggleMaximize","usePainelVisibility","painelDimensions","usePainelDimensions","setWindowWidth","windowHeight","setWindowHeight","breakpoints","sm","md","lg","xl","handleResize","dimensions","baseHeight","isDesktop","panelWidth","navbarHeight","visibilityClasses","flexDirection","PainelHeader","transformarLinkGoogleDrive","match","fileId","ViewModeToggle","viewMode","setViewMode","tabIndex","DocumentViewer","selectedDoc","setSelectedDoc","iframeRef","iframeError","setIframeError","useGoogleDocsViewer","setUseGoogleDocsViewer","iframe","handleLoad","handleError","autoria","renderDocumentViewer","isGoogleDriveLink","link_pdf","allow","sandbox","VideoPlayer","videoUrl","tituloPersonalizado","setTituloPersonalizado","getTituloByVideoUrl","buscarTitulo","videoId","baseUrl","patterns","pattern","extrairIdYoutube","plataforma","duracao","frameBorder","allowFullScreen","referrerPolicy","PainelInformacoes","painelRef","setIsMaximized","alert","encodeURIComponent","useShare","useDocumentosEscola","useClickOutside","useDynamicURL","lastUrlRef","timeoutRef","newUrl","history","replaceState","listener","el","classList","contains","isIntro","IntroPanel","TerraIndigenaInfo","EscolaInfo","link_para_videos","ShareSection","quantidade","exemplo","useRefresh","panel","URLSearchParams","search","initialPanel","find","setPainelInfo","initialPanelOpened","setInitialPanelOpened","escolasVisiveis","pontuacao","hasLink","link_para_documentos","linkValue","isInitialPanel","isNull","isUndefined","abrirPainel","refreshPainel","fecharPainel","MapSelector"],"sourceRoot":""}